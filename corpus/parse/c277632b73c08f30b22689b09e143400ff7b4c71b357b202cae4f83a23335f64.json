{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Nexmo/api-specification"
		},
		"file": {
			"name": "conversation.yml",
			"size": 0,
			"path": "definitions/conversation.yml",
			"byteSize": 40589,
			"content": "openapi: 3.0.0\nservers:\n  - url: \"https://api.nexmo.com/v0.1\"\ninfo:\n  version: 2.0.1\n  title: Conversation API\n  description: \"The Conversation API enables you to build conversation features where communication can take place across multiple mediums including IP Messaging, PSTN Voice, SMS and WebRTC Audio and Video. The context of the conversations is maintained though each communication event taking place within a conversation, no matter the medium.\"\n  contact:\n    name: Vonage DevRel\n    email: devrel@vonage.com\n    url: \"https://developer.nexmo.com/\"\n  x-label: Beta\npaths:\n  /conversations:\n    get:\n      operationId: listConversations\n      tags:\n        - conversation\n      summary: List conversations\n      description: This endpoint is **DEPRECATED**. Please use [/v0.2/conversations](/api/conversation.v2#get-conversations).\n\n\n        List all conversations associated with your application. \n        This endpoint required an admin JWT. To find all conversations for\n        the currently logged in user, see [GET /users/:id/conversations](#getuserConversations)\n      deprecated: true\n      parameters:\n        - $ref: \"#/components/parameters/date_start\"\n        - $ref: \"#/components/parameters/date_end\"\n        - $ref: \"#/components/parameters/page_size\"\n        - $ref: \"#/components/parameters/record_index\"\n        - $ref: \"#/components/parameters/order\"\n      responses:\n        \"200\":\n          description: List Conversations Response Payload Object.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                    example: \"100\"\n                    description: The total number of records returned by your request.\n                  page_size:\n                    $ref: \"#/components/schemas/page_size\"\n                  record_index:\n                    $ref: \"#/components/schemas/record_index\"\n                  _links:\n                    $ref: \"#/components/schemas/_links_conversations_list\"\n                  _embedded:\n                    description: \"A list of conversation objects. See the [get details of a specific conversation](#retrieveConversation) response fields for a description of the nested objects\"\n                    type: object\n                    properties:\n                      conversations:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            uuid:\n                              $ref: \"#/components/schemas/conversation_id\"\n                            name:\n                              $ref: \"#/components/schemas/name_conversation\"\n                            _links:\n                              type: object\n                              properties:\n                                self:\n                                  type: object\n                                  properties:\n                                    href:\n                                      $ref: \"#/components/schemas/href_conversation\"\n                          required:\n                            - uuid\n                            - name\n                            - href\n                    required:\n                      - conversations\n                required:\n                  - count\n                  - page_size\n                  - record_index\n                  - _links\n                  - _embedded\n    post:\n      operationId: createConversation\n      tags:\n        - conversation\n      summary: Create a conversation\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ConversationLite\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Conversation\"\n  \"/conversations/{conversation_id}\":\n    parameters:\n      - $ref: \"#/components/parameters/conversation_id\"\n    put:\n      operationId: replaceConversation\n      tags:\n        - conversation\n      summary: Update a conversation\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ConversationLite\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Conversation\"\n    get:\n      operationId: retrieveConversation\n      tags:\n        - conversation\n      summary: Retrieve a conversation\n      responses:\n        \"200\":\n          description: Retrieve a conversation\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Conversation Object\n                properties:\n                  uuid:\n                    $ref: \"#/components/schemas/conversation_id\"\n                  name:\n                    $ref: \"#/components/schemas/name_conversation\"\n                  numbers:\n                    type: object\n                    properties: {}\n                  properties:\n                    type: object\n                    properties:\n                      video:\n                        type: boolean\n                        example: false\n                  display_name:\n                    $ref: \"#/components/schemas/display_name\"\n                  timestamp:\n                    $ref: \"#/components/schemas/timestamp_res_conversation\"\n                  sequence_number:\n                    type: string\n                    example: \"1\"\n                    description: \"The last Event ID in this conversation. This ID can be used to [retrieve a specific event](#getEvent)\"\n                  members:\n                    type: array\n                    description: Users associated to this conversation as members\n                    items:\n                      type: object\n                      properties:\n                        member_id:\n                          $ref: \"#/components/schemas/member_id\"\n                        user_id:\n                          $ref: \"#/components/schemas/user_id\"\n                        name:\n                          $ref: \"#/components/schemas/name_user\"\n                        state:\n                          $ref: \"#/components/schemas/member_state\"\n                        timestamp:\n                          $ref: \"#/components/schemas/timestamp_res_member\"\n                        initiator:\n                          $ref: \"#/components/schemas/initiator\"\n                        channel:\n                          $ref: \"#/components/schemas/channel\"\n                  api_key:\n                    type: string\n                    description: The API key for your account\n                  _links:\n                    $ref: \"#/components/schemas/_links_conversation\"\n                required:\n                  - uuid\n    delete:\n      operationId: deleteConversation\n      tags:\n        - conversation\n      summary: Delete a conversation\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SuccessEmptyJSON\"\n  \"/conversations/{conversation_id}/record\":\n    servers:\n      - url: \"https://api.nexmo.com/v1\"\n        description: Override base path for the PUT /conversations/{conversation_id}/record operation\n    parameters:\n      - $ref: \"#/components/parameters/conversation_id\"\n    put:\n      operationId: recordConversation\n      tags:\n        - conversation\n      summary: Record a conversation\n      responses:\n        \"204\":\n          description: \"No Content\"\n        \"404\":\n          description: \"Not Found\"\n        \"400\":\n          description: \"Bad Request\"\n      requestBody:\n        $ref: \"#/components/requestBodies/RecordConversation\"\n  \"/conversations/{conversation_id}/events\":\n    parameters:\n      - $ref: \"#/components/parameters/conversation_id\"\n    get:\n      operationId: getEvents\n      description: This endpoint is **DEPRECATED**. Please use [/v0.2/events](/api/conversation.v2#get-events).\n      deprecated: true\n      tags:\n        - event\n      summary: List events\n      responses:\n        \"200\":\n          description: Retrieve Events Response Payload Object\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/event_retrieved\"\n    post:\n      operationId: createEvent\n      tags:\n        - event\n      summary: Create an event\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Create New Event Request Payload Object\n              properties:\n                type:\n                  $ref: \"#/components/schemas/event_type\"\n                to:\n                  $ref: \"#/components/schemas/member_id\"\n                from:\n                  $ref: \"#/components/schemas/member_id\"\n                body:\n                  $ref: \"#/components/schemas/event_body\"\n              required:\n                - type\n                - from\n      responses:\n        \"201\":\n          description: Create New Event Response Payload Object\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Create New Event Response Payload Object\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/event_id\"\n                  timestamp:\n                    $ref: \"#/components/schemas/timestamp_res_event\"\n                  href:\n                    $ref: \"#/components/schemas/href_event\"\n  \"/conversations/{conversation_id}/events/{event_id}\":\n    parameters:\n      - $ref: \"#/components/parameters/conversation_id\"\n      - $ref: \"#/components/parameters/event_id\"\n    get:\n      operationId: getEvent\n      tags:\n        - event\n      summary: Retrieve an event\n      responses:\n        \"200\":\n          description: Retrieve an event Content Payload\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/event_retrieved\"\n    delete:\n      operationId: deleteEvent\n      tags:\n        - event\n      summary: Delete an event\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SuccessEmptyJSON\"\n  \"/conversations/{conversation_id}/members\":\n    parameters:\n      - $ref: \"#/components/parameters/conversation_id\"\n    get:\n      operationId: getMembers\n      description: This endpoint is **DEPRECATED**. Please use [/v0.2/members](/api/conversation.v2#get-members).\n      deprecated: true\n      tags:\n        - member\n      summary: List members\n      responses:\n        \"200\":\n          description: Members List Object\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    user_id:\n                      $ref: \"#/components/schemas/user_id\"\n                    user_name:\n                      $ref: \"#/components/schemas/name_user\"\n                    name:\n                      $ref: \"#/components/schemas/name_user\"\n                    state:\n                      $ref: \"#/components/schemas/member_state\"\n                  required:\n                    - user_id\n                    - name\n                    - user_name\n                    - state\n    post:\n      operationId: createMember\n      tags:\n        - member\n      summary: Create a member\n      responses:\n        \"201\":\n          description: \"Create or invite Member in invite state \"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/member_id\"\n                  user_id:\n                    $ref: \"#/components/schemas/user_id\"\n                  state:\n                    $ref: \"#/components/schemas/member_state\"\n                  timestamp:\n                    $ref: \"#/components/schemas/timestamp_res_member\"\n                  channel:\n                    $ref: \"#/components/schemas/channel\"\n                  href:\n                    $ref: \"#/components/schemas/href_member\"\n                  initiator:\n                    $ref: \"#/components/schemas/initiator\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: \"Create a Member in invite state \"\n              required:\n                - user_id\n                - channel\n              properties:\n                action:\n                  $ref: \"#/components/schemas/member_action\"\n                user_id:\n                  $ref: \"#/components/schemas/user_id\"\n                member_id:\n                  $ref: \"#/components/schemas/member_id\"\n                channel:\n                  $ref: \"#/components/schemas/channel\"\n                media:\n                  $ref: \"#/components/schemas/media\"\n                knocking_id:\n                  $ref: \"#/components/schemas/knocker_id\"\n                member_id_inviting:\n                  $ref: \"#/components/schemas/member_id_inviting\"\n  \"/conversations/{conversation_id}/members/{member_id}\":\n    parameters:\n      - $ref: \"#/components/parameters/conversation_id\"\n      - $ref: \"#/components/parameters/member_id\"\n    get:\n      operationId: getMember\n      tags:\n        - member\n      summary: Retrieve a member\n      responses:\n        \"200\":\n          description: Retrieve member payload\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/member_id\"\n                  href:\n                    $ref: \"#/components/schemas/href_member\"\n    put:\n      operationId: updateMember\n      tags:\n        - member\n      summary: Update a member\n      responses:\n        \"200\":\n          description: Member retrieved\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/member_id\"\n                  href:\n                    $ref: \"#/components/schemas/href_member\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  $ref: \"#/components/schemas/member_action\"\n                channel:\n                  $ref: \"#/components/schemas/channel\"\n    delete:\n      operationId: deleteMember\n      tags:\n        - member\n      summary: Delete a member\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SuccessEmptyJSON\"\n  /users:\n    get:\n      operationId: getUsers\n      description: This endpoint is **DEPRECATED**. Please use [/v0.2/users](/api/conversation.v2#get-users).\n      deprecated: true\n      tags:\n        - user\n      summary: List users\n      responses:\n        \"200\":\n          description: List of users\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      $ref: \"#/components/schemas/user_id\"\n                    name:\n                      $ref: \"#/components/schemas/name_user\"\n                    href:\n                      $ref: \"#/components/schemas/href_user\"\n    post:\n      operationId: createUser\n      tags:\n        - user\n      summary: Create a user\n      description: \"Note: Users must be created with an admin JWT.\"\n      responses:\n        \"200\":\n          description: Create a user response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/user_id\"\n                  href:\n                    $ref: \"#/components/schemas/href_user\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: \"Create a Member in invite state \"\n              properties:\n                name:\n                  $ref: \"#/components/schemas/name_user\"\n                display_name:\n                  $ref: \"#/components/schemas/display_name_user\"\n                image_url:\n                  $ref: \"#/components/schemas/image_url\"\n  \"/users/{user_id}\":\n    parameters:\n      - $ref: \"#/components/parameters/user_id\"\n    get:\n      operationId: getUser\n      tags:\n        - user\n      summary: Retrieve a user\n      responses:\n        \"200\":\n          description: Retrieve a user\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/user_id\"\n                  name:\n                    $ref: \"#/components/schemas/name_user\"\n                  href:\n                    type: string\n                    example: \"https://api.nexmo.com/v0.1/users/USR-63f61863-4a51-4f6b-86e1-46edebio0391\"\n    put:\n      operationId: updateUser\n      tags:\n        - user\n      summary: Update a user\n      responses:\n        \"200\":\n          description: Retrieve a user\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/user_id\"\n                  href:\n                    $ref: \"#/components/schemas/href_user\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  $ref: \"#/components/schemas/name_user\"\n                display_name:\n                  $ref: \"#/components/schemas/display_name_user\"\n                image_url:\n                  $ref: \"#/components/schemas/image_url\"\n                channels:\n                  $ref: \"#/components/schemas/channel\"\n    delete:\n      operationId: deleteUser\n      tags:\n        - user\n      summary: Delete a user\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SuccessEmptyJSON\"\n  \"/users/{user_id}/conversations\":\n    parameters:\n      - $ref: \"#/components/parameters/user_id\"\n    get:\n      operationId: getuserConversations\n      tags:\n        - user\n      summary: List user conversations\n      responses:\n        \"200\":\n          description: List user conversations\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    name:\n                      $ref: \"#/components/schemas/name_conversation\"\n                    image_url:\n                      $ref: \"#/components/schemas/image_url\"\n                    display_name:\n                      $ref: \"#/components/schemas/display_name\"\n                    state:\n                      $ref: \"#/components/schemas/member_state\"\n                    member_id:\n                      $ref: \"#/components/schemas/member_id\"\n                    sequence_number:\n                      type: integer\n                      format: url\n                      description: the id of the last event of the conversation (event's id is an incremental number\n                      example: \"123\"\n                    href:\n                      $ref: \"#/components/schemas/href\"\n                    id:\n                      $ref: \"#/components/schemas/conversation_id\"\n                    timestamp:\n                      type: object\n                      properties:\n                        created:\n                          $ref: \"#/components/schemas/timestamp\"\n  /legs:\n    get:\n      operationId: listLegs\n      tags:\n        - leg\n      summary: List legs\n      responses:\n        \"200\":\n          description: List Legs Successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                description: List Legs Response Payload Object\n                properties:\n                  count:\n                    type: number\n                    example: \"100\"\n                    description: The total number of records returned by your request.\n                  page_size:\n                    $ref: \"#/components/schemas/page_size\"\n                  record_index:\n                    $ref: \"#/components/schemas/record_index\"\n                  _links:\n                    type: object\n                    properties:\n                      self:\n                        type: object\n                        properties:\n                          href:\n                            type: string\n                    required:\n                      - self\n                  _embedded:\n                    description: \"A list of conversation objects. See the [get details of a specific conversation](#retrieveConversation) response fields for a description of the nested objects\"\n                    type: object\n                    properties:\n                      legs:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            uuid:\n                              $ref: \"#/components/schemas/leg_id\"\n                            type:\n                              $ref: \"#/components/schemas/channel_type\"\n                            conversation_uuid:\n                              $ref: \"#/components/schemas/conversation_id\"\n                            state:\n                              $ref: \"#/components/schemas/leg_state\"\n                            from:\n                              type: object\n                            to:\n                              type: object\n                            start_time:\n                              $ref: \"#/components/schemas/timestamp_leg_start_time\"\n                            start_end:\n                              $ref: \"#/components/schemas/timestamp_leg_end_time\"\n                            _links:\n                              type: object\n                            _embedded:\n                              type: object\n                          required:\n                            - uuid\n                            - name\n                            - href\n                    required:\n                      - legs\n                required:\n                  - count\n                  - page_size\n                  - record_index\n                  - _links\n                  - _embedded\n                example:\n                  count: 1\n                  page_size: 10\n                  record_index: 0\n                  _links:\n                    self:\n                      href: \"https://api.nexmo.com/v0.1/legs\"\n                  _embedded:\n                    legs:\n                      - uuid: 2a71f8a1-b6f1-42b3-9eef-c69729e17513\n                        type: app\n                        conversation_uuid: CON-511d076b-9d39-498c-baa7-b7a4bfbd6e32\n                        status: completed\n                        from:\n                          type: app\n                        to:\n                          type: app\n                        start_time: \"\"\n                        end_time: \"\"\n                        rtc:\n                          session_id: SES-84ebef0d-321a-47e6-8446-f4fcc5ca74b9\n                          state: terminated\n                        _links:\n                          self:\n                            href: \"https://api.nexmo.com/v0.1/legs/2a71f8a1-b6f1-42b3-9eef-c69729e17513\"\n  \"/legs/{leg_id}\":\n    parameters:\n      - $ref: \"#/components/parameters/leg_id\"\n    delete:\n      operationId: deleteLeg\n      tags:\n        - leg\n      summary: Delete a leg\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/SuccessEmptyJSON\"\ncomponents:\n  schemas:\n    initiator:\n      type: object\n      properties:\n        joined:\n          type: object\n          properties:\n            isSystem:\n              type: boolean\n              description: \"`true` if the user was invited by an admin JWT. `user_id` and `member_id` will not exist if `true`\"\n            user_id:\n              $ref: \"#/components/schemas/user_id\"\n            member_id:\n              $ref: \"#/components/schemas/member_id\"\n\n    action:\n      type: string\n      example: start\n      description: Recording Action\n      enum:\n        - start\n        - stop\n    event_url:\n      type: array\n      items:\n        type: string\n        format: url\n      example: [\"https://example.com/event\"]\n      x-nexmo-developer-collection-description-shown: true\n      description: The webhook endpoint where recording progress events are sent to.\n    event_method:\n      type: string\n      description: The HTTP method used to send event information to event_url.\n      example: POST\n      default: POST\n    split:\n      type: string\n      description: Record the sent and received audio in separate channels of a stereo recording\n      example: conversation\n      default: conversation\n    format:\n      type: string\n      description: Record the Conversation in a specific format.\n      example: mp3\n      default: mp3\n      enum:\n        - mp3\n        - wav\n    leg_state:\n      type: string\n      example: terminated\n      description: Leg Status\n      enum:\n        - terminated\n    conversation_id:\n      type: string\n      example: CON-63f61863-4a51-4f6b-86e1-46edebio0391\n      description: The unique identifier for this conversation\n    member_id:\n      type: string\n      example: MEM-63f61863-4a51-4f6b-86e1-46edebio0391\n      description: Member ID\n    member_id_inviting:\n      type: string\n      example: MEM-63f61863-4a51-4f6b-86e1-46edebio0391\n      description: Member ID of the member that sends the invitation\n    member_action:\n      type: string\n      description: Invite or join a member to a conversation\n      example: join\n      enum:\n        - invite\n        - join\n    user_id_or_user_name:\n      type: string\n      description: user name or user id of the inviter\n      example: someone_else_user_name\n    user_id:\n      type: string\n      example: USR-63f61863-4a51-4f6b-86e1-46edebio0391\n      description: User ID\n    name:\n      type: string\n      example: my_unique_name\n      description: Unique name\n    name_conversation:\n      type: string\n      example: customer_chat\n      description: Unique name for a conversation\n    name_user:\n      type: string\n      example: my_user_name\n      description: Unique name for a user\n    href:\n      type: string\n      format: url\n      example: \"https://api.nexmo.com/v0.1/conversations/CON-63f61863-4a51-4f6b-86e1-46edebio0391\"\n      description: A link towards a resources included in Conversation API\n    href_conversation:\n      type: string\n      format: url\n      example: \"https://api.nexmo.com/v0.1/conversations/CON-63f61863-4a51-4f6b-86e1-46edebio0391\"\n      description: A link towards a conversation included in Conversation API\n    href_conversations_list:\n      type: string\n      format: url\n      example: \"https://api.nexmo.com/v0.1/conversations?page_size=2\u0026record_index=10\u0026\"\n      description: A link towards a conversations list included in Conversation API\n    href_member:\n      type: string\n      format: url\n      example: \"https://api.nexmo.com/v0.1/conversations/CON-63f61863-4a51-4f6b-86e1-46edebio0391/members/MEM-63f61863-4a51-4f6b-86e1-46edebio0391\"\n      description: A link towards a member included in Conversation API\n    href_user:\n      type: string\n      format: url\n      example: \"https://api.nexmo.com/v0.1/users/USR-63f61863-4a51-4f6b-86e1-46edebio0391\"\n      description: A link towards a user included in Conversation API\n    href_event:\n      type: string\n      format: url\n      example: \"https://api.nexmo.com/v0.1/conversations/CON-63f61863-4a51-4f6b-86e1-46edebio0391/events/1\"\n      description: A link towards a conversation event included in Conversation API\n    href_rtc:\n      type: string\n      format: url\n      example: \"https://api.nexmo.com/v0.1/conversations/CON-63f61863-4a51-4f6b-86e1-46edebio0391/rtc/7777777777777\"\n      description: A link towards a rtc (leg) included in Conversation API\n    event_id:\n      type: string\n      example: \"5\"\n      description: Event id. This is a progressive integer\n    image_url:\n      type: string\n      format: url\n      example: \"https://example.com/image.png\"\n      description: A link to an image for conversations' and users' avatars\n    display_name:\n      type: string\n      example: Customer Chat\n      description: The display name for the conversation. It does not have to be unique\n    display_name_user:\n      type: string\n      example: My User Name\n      description: A string to be displayed as user name. It does not need to be unique\n    conversation_properties:\n      type: object\n      description: Conversation properties\n      properties:\n        ttl:\n          type: number\n          example: 60\n          description: \"Time to leave. After how many seconds an empty conversation is deleted.\"\n    _links_conversations_list:\n      type: object\n      description: \"A series of links between resources in this API in the http://stateless.co/hal_specification.html.\"\n      properties:\n        self:\n          type: object\n          properties:\n            href:\n              $ref: \"#/components/schemas/href_conversations_list\"\n          required:\n            - href\n      required:\n        - self\n    _links_conversation:\n      type: object\n      properties:\n        self:\n          type: object\n          properties:\n            href:\n              $ref: \"#/components/schemas/href_conversation\"\n    page_size:\n      type: number\n      description: The amount of records returned in this response\n      minimum: 1\n      maximum: 100\n      default: 10\n      example: 50\n    record_index:\n      type: number\n      description: \"Return `page_size` amount of conversations from this index in the response. That is, if your request returns 300 conversations, set `record_index` to 5 in order to return conversations 50 to 59. The default value is 0. That is, the first `page_size` calls.\"\n      default: 0\n      minimum: 0\n      example: 0\n    timestamp:\n      type: string\n      example: \"2020-01-01T14:00:00.00Z\"\n      description: Timestamp\n    timestamp_created:\n      type: string\n      example: \"2020-01-01T14:00:00.00Z\"\n      description: Time of creation\n    timestamp_updated:\n      type: string\n      example: \"2020-01-01T14:05:00.00Z\"\n      description: Time of last update\n    timestamp_destroyed:\n      type: string\n      example: \"2020-01-01T14:20:00.00Z\"\n      description: Time of last update\n    timestamp_leg_start_time:\n      type: string\n      example: \"2020-01-01T14:00:00.00Z\"\n      description: Time of leg start\n    timestamp_leg_end_time:\n      type: string\n      example: \"2020-01-01T14:00:00.00Z\"\n      description: Time of leg end\n    timestamp_res_event:\n      type: string\n      example: \"2020-01-01T14:00:00.00Z\"\n      description: Time of event creation\n    timestamp_res_conversation:\n      type: object\n      properties:\n        created:\n          $ref: \"#/components/schemas/timestamp_created\"\n        updated:\n          $ref: \"#/components/schemas/timestamp_updated\"\n        destroyed:\n          $ref: \"#/components/schemas/timestamp_destroyed\"\n    timestamp_res_member:\n      type: object\n      properties:\n        invited:\n          $ref: \"#/components/schemas/timestamp\"\n        joined:\n          $ref: \"#/components/schemas/timestamp\"\n        left:\n          $ref: \"#/components/schemas/timestamp\"\n    timestamp_obj_leg:\n      type: object\n      properties:\n        start:\n          $ref: \"#/components/schemas/timestamp_created\"\n        end:\n          $ref: \"#/components/schemas/timestamp\"\n        request:\n          $ref: \"#/components/schemas/timestamp\"\n    member_state:\n      type: string\n      description: \"The state that the member is in. Possible values are `invited`, `joined`, `left`, or `unknown`\"\n      example: invited\n      enum:\n        - invited\n        - joined\n        - left\n        - unknown\n    leg_id:\n      type: string\n      example: a595959595959595995\n      description: The id of the leg. rtc_id and call_id are leg id\n    channel_number:\n      type: string\n      example: a447700900585\n      description: this can be a phone number or a random string\n    channel_type:\n      type: string\n      example: phone\n      description: Channel type\n      enum:\n        - app\n        - phone\n        - sip\n        - websocket\n        - vbc\n    channel:\n      type: object\n      description: \"A user who joins a conversation as a member can have one channel per membership type. Channels can be `app`, `phone`, `sip`, `websocket`, or `vbc`\"\n      properties:\n        type:\n          $ref: \"#/components/schemas/channel_type\"\n        leg_id:\n          $ref: \"#/components/schemas/leg_id\"\n        from:\n          oneOf:\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointApp\"\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointPhoneFrom\"\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointSip\"\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointWebsocket\"\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointVBCExtension\"\n        to:\n          oneOf:\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointApp\"\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointPhoneTo\"\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointSip\"\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointWebsocket\"\n            - \"$ref\": \"voice.yml#/components/schemas/EndpointVBCExtension\"\n        leg_ids:\n          type: array\n          description: Leg ids associated with this Channel. The first item in the array represents the main active Leg. The second item, if exists, represents a screen-share Leg.\n          items:\n            properties:\n              leg_id:\n                $ref: \"#/components/schemas/leg_id\"\n    media:\n      type: object\n      description: Media Object\n      properties: {}\n      example:\n        audio_settings:\n          enabled: false\n          earmuffed: false\n          muted: false\n    event_type:\n      type: string\n      description: Event type\n      example: text\n    event_body:\n      type: object\n      description: Event Body\n      example:\n        text: My Text\n    event_retrieved:\n      type: object\n      description: Retrieve Events Response Payload Object Item\n      properties:\n        id:\n          $ref: \"#/components/schemas/event_id\"\n        type:\n          $ref: \"#/components/schemas/event_type\"\n        from:\n          $ref: \"#/components/schemas/member_id\"\n        to:\n          $ref: \"#/components/schemas/member_id\"\n        body:\n          $ref: \"#/components/schemas/event_body\"\n        state:\n          $ref: \"#/components/schemas/member_state\"\n        timestamp:\n          $ref: \"#/components/schemas/timestamp_created\"\n        href:\n          $ref: \"#/components/schemas/href_event\"\n      required:\n        - id\n        - type\n        - body\n        - timestamp\n        - href\n    knocker_id:\n      type: string\n      description: Knocker ID. A knocker is a pre-member of a conversation who does not exist yet\n      example: a972836a-450f-35fa-156c-52a2ab5b7d25\n  parameters:\n    leg_id:\n      name: leg_id\n      in: path\n      required: true\n      description: Leg ID\n      schema:\n        type: string\n    user_id:\n      name: user_id\n      in: path\n      required: true\n      description: User ID\n      schema:\n        type: string\n    conversation_id:\n      name: conversation_id\n      in: path\n      required: true\n      description: Conversation ID\n      example: CON-f972836a-550f-45fa-956c-12a2ab5b7d22\n      schema:\n        type: string\n    member_id:\n      name: member_id\n      in: path\n      required: true\n      description: Member ID\n      schema:\n        type: string\n    event_id:\n      name: event_id\n      in: path\n      description: Event ID\n      required: true\n      schema:\n        type: string\n    date_start:\n      name: date_start\n      in: query\n      required: false\n      description: Return the records that occurred after this point in time.\n      schema:\n        example: \"2018-01-01 10:00:00\"\n        type: string\n        format: dateTime\n    date_end:\n      name: date_end\n      in: query\n      required: false\n      description: Return the records that occurred before this point in time.\n      schema:\n        example: \"2018-01-01 12:00:00\"\n        type: string\n        format: dateTime\n    page_size:\n      name: page_size\n      in: query\n      description: Return this amount of records in the response\n      required: false\n      schema:\n        $ref: \"#/components/schemas/page_size\"\n    record_index:\n      name: record_index\n      in: query\n      description: Return calls from this index in the response\n      required: false\n      schema:\n        $ref: \"#/components/schemas/record_index\"\n    order:\n      name: order\n      in: query\n      description: Return the records in ascending or descending order.\n      required: false\n      schema:\n        type: string\n        default: asc\n        enum:\n          - asc\n          - desc\n          - ASC\n          - DESC\n  responses:\n    ConversationLite:\n      description: Create / Update Conversation Response Payload Object\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              id:\n                $ref: \"#/components/schemas/conversation_id\"\n              href:\n                $ref: \"#/components/schemas/href_conversation\"\n            required:\n              - id\n              - href\n    SuccessEmptyJSON:\n      description: Success response with empty JSON\n      content:\n        application/json:\n          schema:\n            type: object\n            description: Empty JSON payload\n            example: {}\n  requestBodies:\n    EmptyBody:\n      description: Conversation Request Payload Object\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            example: {}\n    Conversation:\n      description: Conversation Request Payload Object\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              name:\n                $ref: \"#/components/schemas/name_conversation\"\n              display_name:\n                $ref: \"#/components/schemas/display_name\"\n              image_url:\n                $ref: \"#/components/schemas/image_url\"\n              properties:\n                $ref: \"#/components/schemas/conversation_properties\"\n    RecordConversation:\n      description: Record Conversation Request Payload Object\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              action:\n                $ref: \"#/components/schemas/action\"\n              event_url:\n                $ref: \"#/components/schemas/event_url\"\n              event_method:\n                $ref: \"#/components/schemas/event_method\"\n              split:\n                $ref: \"#/components/schemas/split\"\n              format:\n                $ref: \"#/components/schemas/format\"\n            required:\n              - action\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\nsecurity:\n  - bearerAuth: []\n\ntags:\n  - name: conversation\n    description: A conversation is a shared core component that Vonage APIs rely on. Conversations happen over multiple mediums and and can have associated Users through Memberships.\n  - name: user\n    description: \"The concept of a user exists in Vonage APIs, you can associate one with a user in your own application if you choose. A user can have multiple memberships to conversations and can communicate with other users through various different mediums.\"\n  - name: member\n    description: Memberships connect users with conversations. Each membership has one conversation and one user however a user can have many memberships to conversations just as conversations can have many members.\n  - name: event\n    description: \"Events are actions that occur within a conversation. Examples of this includes: Text events from members, or invite events from users\"\n  - name: leg\n    description: \"A leg can be a video call, IP call, or PSTN call that users participate in using multiple platforms. With this endpoint you can retrieve the details about all of the legs that took place in your application.\"\n  - name: rtc\n    description: Rtc actions. Any rtc action related (like starting a new rtc connection).\n",
			"canonicalURL": "/github.com/Nexmo/api-specification@133467f46227752b81ab3e50e842fc87a87b78bf/-/blob/definitions/conversation.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Nexmo/api-specification/blob/133467f46227752b81ab3e50e842fc87a87b78bf/definitions/conversation.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"channel\": parse schema: property \"from\": parse schema: oneOf: [0]: parse schema: resolve \"voice.yml#/components/schemas/EndpointApp\": external \"voice.yml\": file: local file reference is not allowed"
}