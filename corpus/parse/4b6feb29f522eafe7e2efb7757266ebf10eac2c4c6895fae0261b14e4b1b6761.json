{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/INTECS-ITFAC/intecs_webapp_back-end"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "src/swagger.json",
			"byteSize": 3645,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"INTECS web app backend\",\n    \"description\": \"Rest APIs for INTECS Web appliation\",\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"https://opensource.org/licenses/MIT\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/\",\n      \"description\": \"Local host\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Events\",\n      \"description\": \"API for Events in the system\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"API for Manage Users in the system\"\n    }\n  ],\n  \"consumes\": [\"application/json\"],\n  \"produces\": [\"application/json\"],\n  \"paths\": {\n    \"/events\": {\n      \"get\": {\n        \"tags\": [\"Events\"],\n        \"summary\": \"Get all events in system\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Event\"\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"Events\"],\n        \"summary\": \"Create a new Event in system\",\n        \"requestBody\": {\n          \"description\": \"Event Object\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Event\"\n              }\n            }\n          }\n        },\n        \"produces\": [\"application/json\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Event\"\n            }\n          },\n          \"400\": {\n            \"description\": \"Failed. Bad post data.\"\n          }\n        }\n      }\n    },\n    \"/events/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"ID of the event that we want to match\",\n          \"type\": \"string\"\n        }\n      ],\n      \"get\": {\n        \"tags\": [\"Events\"],\n        \"summary\": \"Get event with given ID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"description\": \"Event with id\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/id\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Event\"\n            }\n          },\n          \"404\": {\n            \"description\": \"Failed. Event not found.\"\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"tags\": [\"Users\"],\n        \"summary\": \"Get all users in system\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/User\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"id\": {\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Event\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"imgUrl\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Events\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Events\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/Events\"\n          }\n        }\n      }\n    },\n    \"User\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"createdBy\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"password\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: /events/{id}: parameters: parse parameter \"id\": parameter MUST contain either a schema property, or a content property"
}