{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vinbigdata-medical/vindr-lab-api"
		},
		"file": {
			"name": "api-doc.yml",
			"size": 0,
			"path": "api-doc.yml",
			"byteSize": 56691,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: VinDr Lab API Document\n  contact:\n    name: VinDr Lab Development Team\n  license:\n    name: MIT\npaths:\n  /labels:\n    get:\n      description: get Labels by array\n      operationId: fetchLabels\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: label_group_id\n          in: query\n          required: false\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n              format: uuid\n        - name: project_id\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          impression:\n                            type: array\n                            items:\n                              $ref: \"#/components/schemas/Label\"\n                          finding:\n                            type: array\n                            items:\n                              $ref: \"#/components/schemas/Label\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      description: |\n        create a new Label\n\n        id of object can be empty\n      operationId: createLabel\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Label\"\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          label_id:\n                            type: string\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /labels/{label_id}:\n    put:\n      description: update a Label by its id\n      operationId: updateLabel\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: label_id\n          in: path\n          description: ID of Label to update\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Label\"\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          label_id:\n                            type: string\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      description: delete a Label by its id\n      operationId: deleteLabel\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: label_id\n          in: path\n          description: ID of Label to delete\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          label_id:\n                            type: string\n                            format: uuid\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /annotations:\n    get:\n      description: get all annotations by queried params\n      operationId: fetchAnnotations\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: object_id\n          in: query\n          description: id of Object that Annotation belongs to\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - name: study_instance_uid\n          in: query\n          description: id of Study that Annotation belongs to\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - name: series_instance_uid\n          in: query\n          description: id of Series that Annotation belongs to\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - name: sop_instance_uid\n          in: query\n          description: id of Instance that Annotation belongs to\n          required: false\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: get annotations response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/AnnotationExtend\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      description: create new Annotation\n      deprecated: true\n      operationId: createAnnotation\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Annotation\"\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          label_id:\n                            type: string\n                            format: uuid\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /annotations/{annotation_id}:\n    put:\n      description: update a Annotation by its id\n      operationId: updateAnnotation\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: annotation_id\n          in: path\n          description: ID of Annotation to fetch\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Annotation\"\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          annotation_id:\n                            type: string\n                            format: uuid\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      description: delete a Annotation by its id\n      operationId: deleteAnnotation\n      parameters:\n        - name: annotation_id\n          in: path\n          description: delte an Annotation by its id\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - $ref: \"#/components/parameters/authParam\"\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          annotation_id:\n                            type: string\n                            format: uuid\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /projects:\n    get:\n      description: get list by queried parameters\n      operationId: fetchProjects\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      responses:\n        \"200\":\n          description: get projects response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Project\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      description: get list by queried parameters\n      operationId: createProject\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Project\"\n      responses:\n        \"200\":\n          description: get projects response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Project\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /projects/{project_id}:\n    get:\n      description: get a Project by its id\n      operationId: getProject\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: project_id\n          in: path\n          description: ID of Project\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: get project response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        $ref: \"#/components/schemas/Project\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      description: update a Project by its id\n      operationId: updateProject\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: project_id\n          in: path\n          description: ID of Project\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Project\"\n      responses:\n        \"200\":\n          description: get response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      description: delete a Project by its id\n      operationId: deleteProject\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: project_id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /projects/{project_id}/people:\n    post:\n      description: add people to project\n      operationId: addPeopleToProject\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: project_id\n          in: path\n          description: ID of Project\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                people:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/ProjectPerson\"\n      responses:\n        \"200\":\n          description: get project response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        properties:\n                          people:\n                            type: array\n                            items:\n                              $ref: \"#/components/schemas/ProjectPerson\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      description: update people of project only 'people' field is accepted\n      operationId: updatePeopleOfProject\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: project_id\n          in: path\n          description: ID of Project\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                people:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/ProjectPerson\"\n      responses:\n        \"200\":\n          description: get project response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        properties:\n                          people:\n                            type: array\n                            items:\n                              $ref: \"#/components/schemas/ProjectPerson\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /studies:\n    get:\n      operationId: fetchStudies\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/sortParam\"\n        - $ref: \"#/components/parameters/queryParam\"\n        - $ref: \"#/components/parameters/aggParam\"\n      responses:\n        \"200\":\n          description: get studies response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Study\"\n                      agg:\n                        $ref: \"#/components/schemas/MapStringToInt\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /studies/upload:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      description: create a study\n      operationId: createStudy\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                project_id:\n                  type: string\n                  format: uuid\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          description: response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          _id:\n                            type: string\n                            format: uuid\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /studies/delete_many:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      description: delete many Studies, limit by 100\n      operationId: deleteStudies\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  items:\n                    type: string\n                    format: uuid\n      responses:\n        \"200\":\n          description: response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /studies/{study_id}:\n    put:\n      description: update Study\n      operationId: updateStudy\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: study_id\n          in: path\n          schema:\n            type: string\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Study\"\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      description: delete a Study by its id\n      operationId: deleteStudy\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: study_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /tasks:\n    get:\n      operationId: fetchTasks\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/sortParam\"\n        - $ref: \"#/components/parameters/queryParam\"\n        - $ref: \"#/components/parameters/aggParam\"\n        - $ref: \"#/components/parameters/roleParam\"\n      responses:\n        \"200\":\n          description: get tasks response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Task\"\n                      agg:\n                        $ref: \"#/components/schemas/MapStringToInt\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      description: create Task\n      operationId: createTask\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaskSubmit\"\n      responses:\n        \"200\":\n          description: get response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /tasks/assign:\n    post:\n      description: create Task\n      operationId: createTaskv2\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaskAssignment\"\n      responses:\n        \"200\":\n          description: get response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /tasks/delete_many:\n    post:\n      description: delete many Tasks, limit by 10 tasks\n      operationId: deleteTasks\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  items:\n                    type: string\n                    format: uuid\n      responses:\n        \"200\":\n          description: delete tasks\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /tasks/update_status_many:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      description: update many tasks's status, limit by 100\n      operationId: updateStatusTasks\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  items:\n                    type: string\n                    format: uuid\n                status:\n                  type: string\n                  enum: [NEW, DOING, COMPLETED]\n      responses:\n        \"200\":\n          description: response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /tasks/{task_id}:\n    get:\n      operationId: getTask\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: task_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: get tasks response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        $ref: \"#/components/schemas/Task\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      description: update Task\n      operationId: updateTask\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: task_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Task\"\n      responses:\n        \"200\":\n          description: update task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      description: delete Task\n      operationId: deleteTask\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: task_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: delete task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /tasks/{task_id}/status:\n    put:\n      description: update Task status\n      operationId: updateTaskStatus\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: task_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Task\"\n      responses:\n        \"200\":\n          description: update task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /tasks/{task_id}/archive:\n    put:\n      description: update Task archive status\n      operationId: updateTaskArchiveStatus\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: task_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Task\"\n      responses:\n        \"200\":\n          description: update task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /tasks/{task_id}/annotations:\n    put:\n      description: set many Annotations and Task comment\n      operationId: setAnnotations\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: task_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                annotations:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Annotation\"\n                comment:\n                  type: string\n\n      responses:\n        \"200\":\n          description: update task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /objects:\n    get:\n      operationId: fetchObjects\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      responses:\n        \"200\":\n          description: get studies response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Object\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      description: create an Object\n      operationId: createObject\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ObjectBig\"\n      responses:\n        \"200\":\n          description: get response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /objects/{object_id}:\n    put:\n      description: update Object\n      operationId: updateObject\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: object_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Object\"\n      responses:\n        \"200\":\n          description: update Object\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          _id:\n                            type: string\n                            format: uuid\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /stats/label_exports:\n    get:\n      description: old /label_exports\n      operationId: fetchLabelExports\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - $ref: \"#/components/parameters/limitParam\"\n        - $ref: \"#/components/parameters/offsetParam\"\n        - $ref: \"#/components/parameters/sortParam\"\n        - $ref: \"#/components/parameters/queryParam\"\n      responses:\n        \"200\":\n          description: list all exported files\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/LabelExport\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      description: create an LabelExport, old /label_exports\n      operationId: createLabelExport\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LabelExport\"\n      responses:\n        \"200\":\n          description: get response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /stats/label_exports/download/{label_export_id}:\n    get:\n      description: download export file, old=/label_exports/download/{label_export_id}\n      operationId: downloadLabelExport\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: label_export_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /stats/agg_labels:\n    get:\n      description: aggreagate label, old=/label_exports/stats/agg_labels\n      operationId: aggreagateLabel\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /stats/projects_by_role:\n    get:\n      description: get projects by role including agg stats, old=/label_exports/stats/projects_by_role\n      operationId: getProjectsByRole\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /stats/studies/{study_id}/assignee:\n    get:\n      description: get list assignee of study\n      operationId: getAssigneeOfStudy\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      responses:\n        \"200\":\n          description: get response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      assignee_ids:\n                        type: array\n                        items:\n                          type: string\n                          format: uuid\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /sessions:\n    post:\n      description: create session, client only have to pass data\n      operationId: createSession\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Session\"\n      responses:\n        \"200\":\n          description: get response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Session\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /sessions/{session_id}:\n    get:\n      description: get session\n      operationId: getSession\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: session_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: get session\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/SessionItem\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /label_groups:\n    get:\n      description: get LabelGroups by array\n      operationId: fetchLabelGroups\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      responses:\n        \"200\":\n          description: get LabelGroups response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/LabelGroup\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      description: |\n        create a new LabelGroup\n\n        id of object can be empty\n      operationId: createLabelGroup\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LabelGroup\"\n      responses:\n        \"200\":\n          description: get LabelGroup response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                            format: uuid\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /label_groups/{label_group_id}:\n    put:\n      description: update LabelGroup\n      operationId: updateLabelGroup\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: label_group_id\n          schema:\n            type: string\n          in: path\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LabelGroup\"\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      description: delete a LabelGroup\n      operationId: deleteLabelGroup\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n        - name: label_group_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: get labels response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /label_groups/{label_group_id}/labels:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      description: import labels to label group\n      operationId: importLabels\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                files:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        \"200\":\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/authParam\"\n      description: export labels from label group\n      operationId: exportLabels\n      responses:\n        \"200\":\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /accounts/userinfo:\n    get:\n      description: getUserAccounts\n      operationId: getUserAccounts\n      parameters:\n        - name: username\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: get UserAccounts response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/ProjectPerson\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /accounts/userinfo/{user_id}}:\n    get:\n      description: getUserAccount\n      operationId: getUserAccount\n      parameters:\n        - name: user_id\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: get UserAccount response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        $ref: \"#/components/schemas/ProjectPerson\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /accounts/permissions:\n    get:\n      description: getPermissions\n      operationId: getPermissions\n      responses:\n        \"200\":\n          description: get Permissions response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Error\"\n                  - properties:\n                      data:\n                        type: array\n                        items:\n                          type: string\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  parameters:\n    limitParam:\n      name: _limit\n      in: query\n      schema:\n        type: integer\n      description: when counting objecst, both _limit and _offset are zeros\n    offsetParam:\n      name: _offset\n      in: query\n      schema:\n        type: integer\n      description: when counting objecst, both _limit and _offset are zeros\n    sortParam:\n      name: _sort\n      in: query\n      schema:\n        type: string\n        description: if _sort=-modified,name, it means the studies list will be sorted by modified:desc, then by name:asc\n    queryParam:\n      name: _search\n      in: query\n      schema:\n        type: string\n      # description: Read here https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html\n    aggParam:\n      name: _agg\n      in: query\n      schema:\n        type: string\n        description: aggrerate criteria, return value will be a map\u003cstring,int\u003e\n    roleParam:\n      name: _role\n      in: query\n\n      schema:\n        type: string\n        enum: [ANNOTATOR, REVIEWER, PROJECT_OWNER]\n    authParam:\n      name: Authorization\n      in: header\n      schema:\n        type: string\n  schemas:\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n          enum:\n            - value: 0\n              name: Success\n            - value: -1\n              name: Failed\n            - value: -2\n              name: Invalid Data\n            - value: -3\n              name: Server Error\n        message:\n          type: string\n        count:\n          type: integer\n          format: int32\n          description: size of returned data\n    Annotation:\n      type: object\n      required:\n        - label_id\n        - label_ids\n        - object_id\n        - task_id\n      properties:\n        id:\n          type: string\n          format: uuid\n        label_id:\n          deprecated: true\n          type: string\n          format: uuid\n        label_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        object_id:\n          type: string\n          format: uuid\n        creator_id:\n          type: string\n          format: uuid\n        creator_name:\n          type: string\n        project_id:\n          type: string\n          format: uuid\n        task_id:\n          type: string\n          format: uuid\n        description:\n          type: string\n        data:\n          anyOf:\n            - type: array\n              items:\n                $ref: \"#/components/schemas/Point2D\"\n            - $ref: \"#/components/schemas/Media\"\n        type:\n          type: string\n          enum: [BOUNDING_BOX, MASK, POLYGON, TAG]\n        meta:\n          type: object\n          properties:\n            study_instance_uid:\n              type: string\n              format: uuid\n            series_instance_uid:\n              type: string\n              format: uuid\n            sop_instance_uid:\n              type: string\n              format: uuid\n    Label:\n      type: object\n      required:\n        - name\n        - scope\n        - color\n        - label_group_id\n      properties:\n        id:\n          type: string\n          format: uuid\n        parent_label_id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        tag:\n          type: string\n        type:\n          type: string\n          enum: [IMPRESSION, FINDING]\n        scope:\n          type: string\n          enum: [STUDY, SERIES, IMAGE]\n        short_name:\n          type: string\n        creator_id:\n          type: string\n          format: uuid\n        description:\n          type: string\n        color:\n          type: string\n        annotation_type:\n          type: string\n          enum: [BOUNDING_BOX, MASK, POLYGON, TAG]\n        label_group_id:\n          type: string\n          format: uuid\n    AnnotationExtend:\n      allOf:\n        - $ref: \"#/components/schemas/Annotation\"\n        - properties:\n            label:\n              $ref: \"#/components/schemas/Label\"\n    Project:\n      type: object\n      required:\n        - name\n        - description\n        - label_group_ids\n        - reviewer_ids\n        - project_owners_ids\n        - workflow\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n        created:\n          type: integer\n          format: int64\n        creator_id:\n          type: string\n          format: uuid\n        label_group_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        annotator_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        reviewer_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        project_owners_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        workflow:\n          type: string\n          enum: [SINGLE, TRIANGLE]\n        document_link:\n          type: string\n        people:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProjectPerson\"\n        labeling_type:\n          type: string\n          enum: [3D, 2D]\n    Study:\n      type: object\n      required:\n        - name\n        - description\n      properties:\n        id:\n          type: string\n          format: uuid\n        code:\n          type: string\n        description:\n          type: string\n        study_instance_id:\n          type: string\n          format: uuid\n        study_sop_id:\n          type: string\n          format: uuid\n        status:\n          type: string\n          enum: [UNASSIGNED, ASSIGNED, COMPLETED]\n        project_id:\n          type: string\n          format: uuid\n    Point2D:\n      type: object\n      properties:\n        x:\n          type: number\n        y:\n          type: number\n    Media:\n      type: object\n      properties:\n        mime_type:\n          type: string\n        bytes:\n          type: string\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n    TaskSubmit:\n      type: object\n      properties:\n        project_id:\n          type: string\n          format: uuid\n        assignee_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        study_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        type:\n          type: string\n          enum: [ANNOTATE, REVIEW]\n    TaskAssignment:\n      type: object\n      properties:\n        project_id:\n          type: string\n          format: uuid\n        study_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n        type:\n          type: string\n          enum: [ANNOTATE, REVIEW]\n        stratergy:\n          type: string\n          enum: [ALL, EQUALLY]\n        source_type:\n          type: array\n          enum: [SELECTED, SEARCH, FILE]\n        study_uids:\n          type: array\n          items:\n            type: string\n        search_query:\n          type: object\n          properties:\n            size:\n              type: integer\n            query:\n              type: string\n    Task:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        code:\n          type: string\n        creator_id:\n          type: string\n          format: uuid\n        project_id:\n          type: string\n          format: uuid\n        assignee_id:\n          type: string\n          format: uuid\n        status:\n          type: string\n          enum: [NEW, DOING, COMPLETED]\n        created:\n          type: integer\n          format: int64\n        modified:\n          type: integer\n          format: int64\n        type:\n          type: string\n          enum: [ANNOTATE, REVIEW]\n        comment:\n          type: string\n        archive:\n          description: default value is false\n          type: boolean\n    MapStringToInt:\n      type: object\n      description: a (key, int) map. `default`is an example key\n      additionalProperties:\n        $ref: \"#/components/schemas/Pair\"\n    Pair:\n      type: object\n      properties:\n        key:\n          type: integer\n    LabelExport:\n      type: object\n      required:\n        - project_id\n        - tag\n      properties:\n        id:\n          type: string\n          format: uuid\n        file_path:\n          type: string\n        parent_label_id:\n          type: string\n          format: uuid\n        creator_id:\n          type: string\n          format: uuid\n        project_id:\n          type: string\n          format: uuid\n        tag:\n          type: string\n        created:\n          type: integer\n          format: int64\n    Object:\n      type: object\n      description: |\n        if type=STUDY: study_instance_uid != nil, series_instance_uid = nil, sop_instance_uid = nil\n        if type=SERIES: study_instance_uid != nil, series_instance_uid != nil, sop_instance_uid = nil\n        if type=IMAGE: study_instance_uid != nil, series_instance_uid != nil, sop_instance_uid != nil\n      properties:\n        id:\n          type: string\n          format: uuid\n        type:\n          type: string\n          enum: [STUDY, SERIES, IMAGE]\n        project_id:\n          type: string\n          format: uuid\n        study_id:\n          type: string\n          format: uuid\n        meta:\n          type: object\n          properties:\n            study_instance_uid:\n              type: string\n              format: uuid\n            series_instance_uid:\n              type: string\n              format: uuid\n            sop_instance_uid:\n              type: string\n              format: uuid\n    ObjectBig:\n      type: object\n      properties:\n        project_id:\n          type: string\n          format: uuid\n        study_id:\n          type: string\n          format: uuid\n        list_study_instance_uid:\n          type: array\n          items:\n            type: string\n            format: uuid\n        list_series_instance_uid:\n          type: array\n          items:\n            type: string\n            format: uuid\n        list_sop_instance_uid:\n          type: array\n          items:\n            type: string\n            format: uuid\n    Session:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SessionItem\"\n        session_id:\n          type: string\n          format: uuid\n        created:\n          type: integer\n          format: int64\n    SessionItem:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [TASK, STUDY]\n        id:\n          type: string\n          format: uuid\n        meta:\n          type: object\n          additionalProperties:\n            type: string\n    LabelGroup:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        color:\n          type: string\n        name:\n          type: string\n        creator_id:\n          type: string\n          format: uuid\n        owner_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n    ProjectPerson:\n      type: object\n      properties:\n        id:\n          type: string\n        username:\n          type: string\n        roles:\n          type: array\n          items:\n            enum: [ANNOTATOR, REVIEWER, PROJECT_OWNER]\n            type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /label_groups/{label_group_id}: put: operation \"updateLabelGroup\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/Error\": parse schema: code: parse enum values: parse value \"{\\\"name\\\":\\\"Success\\\",\\\"value\\\":0}\": expected type \"integer\", got \"object\""
}