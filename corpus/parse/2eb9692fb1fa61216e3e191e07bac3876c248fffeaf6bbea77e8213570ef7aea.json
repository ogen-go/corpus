{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nextbreakpoint/flink-client"
		},
		"file": {
			"name": "flink-openapi.yaml",
			"size": 0,
			"path": "flink-openapi.yaml",
			"byteSize": 62807,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Flink Client\n  version: 1.0.0 # this is the version of the Flink Monitoring API\nbasePath: /v1\ntags:\n  - name: flink\n    description: Flink Client\ncomponents:\n  schemas:\n    DashboardConfiguration:\n      properties:\n        refresh-interval:\n          type: integer\n        timezone-name:\n          type: string\n        timezone-offset:\n          type: integer\n        flink-version:\n          type: string\n        flink-revision:\n          type: string\n    JobIdWithStatus:\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n          enum:\n          - CREATED\n          - RUNNING\n          - FAILING\n          - FAILED\n          - CANCELLING\n          - CANCELED\n          - FINISHED\n          - RESTARTING\n          - SUSPENDING\n          - SUSPENDED\n          - RECONCILING\n    JobIdsWithStatusOverview:\n      properties:\n        jobs:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/JobIdWithStatus'\n    JarListInfo:\n      properties:\n        address:\n          type: string\n        files:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/JarFileInfo'\n    JarFileInfo:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        uploaded:\n          type: long\n        entry:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/JarEntryInfo'\n    JarEntryInfo:\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n    JarUploadResponseBody:\n      properties:\n        filename:\n          type: string\n        status:\n          type: string\n          enum:\n          - success\n    JarPlanRequestBody:\n      properties:\n        entryClass:\n          type: string\n        programArgs:\n          type: string\n        programArgsList:\n          type: array\n          items:\n            type: string\n        parallelism:\n          type: integer\n    JobPlanInfo:\n      properties:\n        plan:\n          type: object\n    JarRunRequestBody:\n      properties:\n        entryClass:\n          type: string\n        programArgs:\n          type: string\n        programArgsList:\n          type: array\n          items:\n            type: string\n        parallelism:\n          type: integer\n        allowNonRestoredState:\n          type: boolean\n        savepointPath:\n          type: string\n    JarRunResponseBody:\n      properties:\n        jobid:\n          type: string\n    ClusterConfigurationInfoEntry:\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    JobSubmitRequestBody:\n      properties:\n        jobGraphFileName:\n          type: string\n        jobJarFileNames:\n          type: array\n          items:\n            type: string\n        jobArtifactFileNames:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/DistributedCacheFile'\n    DistributedCacheFile:\n      properties:\n        entryName:\n          type: string\n        fileName:\n          type: string\n    JobSubmitResponseBody:\n      properties:\n        jobUrl:\n          type: string\n    MultipleJobsDetails:\n      properties:\n        jobs:\n          type: array\n          items:\n            type: object\n    JobDetailsInfo:\n      properties:\n        jid:\n          type: string\n        name:\n          type: string\n        isStoppable:\n          type: boolean\n        state:\n          type: string\n          enum:\n          - CREATED\n          - RUNNING\n          - FAILING\n          - FAILED\n          - CANCELLING\n          - CANCELED\n          - FINISHED\n          - RESTARTING\n          - SUSPENDING\n          - SUSPENDED\n          - RECONCILING\n        start-time:\n          type: long\n        end-time:\n          type: long\n        duration:\n          type: long\n        now:\n          type: long\n        timestamps:\n          type: object\n          additionalProperties:\n            type: long\n        vertices:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/JobDetailsInfoJobVertexDetailsInfo'\n        status-counts:\n          type: object\n          additionalProperties:\n            type: integer\n        plan:\n          type: object\n          $ref: '#/components/schemas/JobDetailsInfoJobPlan'\n    JobDetailsInfoJobPlan:\n      properties:\n        jid:\n          type: string\n        name:\n          type: string\n        nodes:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/JobDetailsInfoNode'\n    JobDetailsInfoNode:\n      properties:\n        id:\n          type: string\n        parallelism:\n          type: integer\n        operator:\n          type: string\n        operator_strategy:\n          type: string\n        description:\n          type: string\n        optimizer_properties:\n          type: object\n    JobDetailsInfoJobVertexDetailsInfo:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        parallelism:\n          type: integer\n        status:\n          type: string\n          enum:\n          - CREATED\n          - SCHEDULED\n          - DEPLOYING\n          - RUNNING\n          - FINISHED\n          - CANCELING\n          - CANCELED\n          - FAILED\n          - RECONCILING\n        start-time:\n          type: long\n        end-time:\n          type: long\n        duration:\n          type: long\n        tasks:\n          type: object\n          additionalProperties:\n            type: integer\n        metrics:\n          type: object\n          $ref: '#/components/schemas/IOMetricsInfo'\n    IOMetricsInfo:\n      properties:\n        read-bytes:\n          type: long\n        read-bytes-complete:\n          type: boolean\n        write-bytes:\n          type: long\n        write-bytes-complete:\n          type: boolean\n        read-records:\n          type: long\n        read-records-complete:\n          type: boolean\n        write-records:\n          type: long\n        write-records-complete:\n          type: boolean\n    JobAccumulatorsInfo:\n      properties:\n        job-accumulators:\n          type: array\n          items:\n            type: object\n        user-task-accumulators:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/UserTaskAccumulator'\n        serialized-user-task-accumulators:\n          type: object\n          additionalProperties:\n            type: object\n    UserTaskAccumulator:\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        value:\n          type: string\n    CheckpointingStatistics:\n      properties:\n        counts:\n          type: object\n          $ref: '#/components/schemas/CheckpointingStatisticsCounts'\n        summary:\n          type: object\n          $ref: '#/components/schemas/CheckpointingStatisticsSummary'\n        latest:\n          type: object\n          $ref: '#/components/schemas/CheckpointingStatisticsLatestCheckpoints'\n        history:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/CheckpointStatistics'\n    CheckpointingStatisticsCounts:\n      properties:\n        restored:\n          type: long\n        total:\n          type: long\n        in_progress:\n          type: long\n        completed:\n          type: long\n        failed:\n          type: long\n    CheckpointingStatisticsSummary:\n      properties:\n        state_size:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n        end_to_end_duration:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n        alignment_buffered:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n    MinMaxAvgStatistics:\n      properties:\n        min:\n          type: long\n        max:\n          type: long\n        avg:\n          type: long\n    CheckpointingStatisticsLatestCheckpoints:\n      properties:\n        completed:\n          type: object\n          $ref: '#/components/schemas/CompletedCheckpointStatistics'\n        savepoint:\n          type: object\n          $ref: '#/components/schemas/CompletedCheckpointStatistics'\n        failed:\n          type: object\n          $ref: '#/components/schemas/FailedCheckpointStatistics'\n        restored:\n          type: object\n          $ref: '#/components/schemas/RestoredCheckpointStatistics'\n    CompletedCheckpointStatistics:\n      properties:\n        id:\n          type: integer\n        status:\n          type: string\n          enum:\n          - IN_PROGRESS\n          - COMPLETED\n          - FAILED\n        is_savepoint:\n          type: boolean\n        trigger_timestamp:\n          type: long\n        latest_ack_timestamp:\n          type: long\n        state_size:\n          type: long\n        end_to_end_duration:\n          type: long\n        alignment_buffered:\n          type: long\n        num_subtasks:\n          type: integer\n        num_acknowledged_subtasks:\n          type: integer\n        tasks:\n          type: object\n          additionalProperties:\n            type: object\n            $ref: '#/components/schemas/TaskCheckpointStatistics'\n        external_path:\n          type: string\n        discarded:\n          type: boolean\n    TaskCheckpointStatistics:\n      properties:\n        id:\n          type: integer\n        status:\n          type: string\n          enum:\n          - IN_PROGRESS\n          - COMPLETED\n          - FAILED\n        latest_ack_timestamp:\n          type: long\n        state_size:\n          type: long\n        end_to_end_duration:\n          type: long\n        alignment_buffered:\n          type: long\n        num_subtasks:\n          type: integer\n        num_acknowledged_subtasks:\n          type: integer\n    FailedCheckpointStatistics:\n      properties:\n        id:\n          type: integer\n        status:\n          type: string\n          enum:\n          - IN_PROGRESS\n          - COMPLETED\n          - FAILED\n        is_savepoint:\n          type: boolean\n        trigger_timestamp:\n          type: long\n        latest_ack_timestamp:\n          type: long\n        state_size:\n          type: long\n        end_to_end_duration:\n          type: long\n        alignment_buffered:\n          type: long\n        num_subtasks:\n          type: integer\n        num_acknowledged_subtasks:\n          type: integer\n        tasks:\n          type: object\n          additionalProperties:\n            type: object\n            $ref: '#/components/schemas/TaskCheckpointStatistics'\n        failure_timestamp:\n          type: long\n        failure_message:\n          type: string\n    RestoredCheckpointStatistics:\n      properties:\n        id:\n          type: integer\n        restore_timestamp:\n          type: long\n        is_savepoint:\n          type: boolean\n        external_path:\n          type: string\n    CheckpointStatistics:\n      properties:\n        id:\n          type: integer\n        status:\n          type: string\n          enum:\n          - IN_PROGRESS\n          - COMPLETED\n          - FAILED\n        is_savepoint:\n          type: boolean\n        trigger_timestamp:\n          type: long\n        latest_ack_timestamp:\n          type: long\n        state_size:\n          type: long\n        end_to_end_duration:\n          type: long\n        alignment_buffered:\n          type: long\n        num_subtasks:\n          type: integer\n        num_acknowledged_subtasks:\n          type: integer\n        tasks:\n          type: object\n          additionalProperties:\n            type: object\n            $ref: '#/components/schemas/TaskCheckpointStatistics'\n    CheckpointConfigInfo:\n      properties:\n        mode:\n          type: object\n        interval:\n          type: long\n        timeout:\n          type: long\n        min_pause:\n          type: long\n        max_concurrent:\n          type: integer\n        externalization:\n          type: object\n          $ref: '#/components/schemas/ExternalizedCheckpointInfo'\n    ExternalizedCheckpointInfo:\n      properties:\n        enabled:\n          type: boolean\n        delete_on_cancellation:\n          type: boolean\n    TaskCheckpointStatisticsWithSubtaskDetails:\n      properties:\n        id:\n          type: integer\n        status:\n          type: string\n          enum:\n          - IN_PROGRESS\n          - COMPLETED\n          - FAILED\n        latest_ack_timestamp:\n          type: long\n        state_size:\n          type: long\n        end_to_end_duration:\n          type: long\n        alignment_buffered:\n          type: long\n        num_subtasks:\n          type: integer\n        num_acknowledged_subtasks:\n          type: integer\n        summary:\n          type: object\n          $ref: '#/components/schemas/TaskCheckpointStatisticsWithSubtaskDetailsSummary'\n        subtasks:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/SubtaskCheckpointStatistics'\n    TaskCheckpointStatisticsWithSubtaskDetailsSummary:\n      properties:\n        state_size:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n        end_to_end_duration:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n        checkpoint_duration:\n          type: object\n          $ref: '#/components/schemas/TaskCheckpointStatisticsWithSubtaskDetailsCheckpointDuration'\n        alignment:\n          type: object\n          $ref: '#/components/schemas/TaskCheckpointStatisticsWithSubtaskDetailsCheckpointAlignment'\n    SubtaskCheckpointStatistics:\n      properties:\n        index:\n          type: integer\n        status:\n          type: string\n    TaskCheckpointStatisticsWithSubtaskDetailsCheckpointDuration:\n      properties:\n        sync:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n        async:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n    TaskCheckpointStatisticsWithSubtaskDetailsCheckpointAlignment:\n      properties:\n        buffered:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n        duration:\n          type: object\n          $ref: '#/components/schemas/MinMaxAvgStatistics'\n    JobExceptionsInfo:\n      properties:\n        root-exception:\n          type: string\n        timestamp:\n          type: long\n        all-exceptions:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/ExecutionExceptionInfo'\n        truncated:\n          type: boolean\n    ExecutionExceptionInfo:\n      properties:\n        exception:\n          type: string\n        task:\n          type: string\n        location:\n          type: string\n        timestamp:\n          type: long\n    JobExecutionResultResponseBody:\n      properties:\n        status:\n          type: object\n          $ref: '#/components/schemas/QueueStatus'\n          properties:\n            id:\n              type: string\n              enum:\n              - IN_PROGRESS\n              - COMPLETED\n        job-execution-result:\n          type: object\n    QueueStatus:\n        properties:\n          id:\n            type: string\n            enum:\n            - IN_PROGRESS\n            - COMPLETED\n    TriggerResponse:\n        properties:\n          request-id:\n            type: string\n    AsynchronousOperationResult:\n        properties:\n          status:\n            type: object\n            $ref: '#/components/schemas/QueueStatus'\n          operation:\n            type: object\n    SavepointTriggerRequestBody:\n        properties:\n          target-directory:\n            type: string\n          cancel-job:\n            type: boolean\n    JobVertexDetailsInfo:\n        properties:\n          id:\n            type: string\n          name:\n            type: string\n          parallelism:\n            type: integer\n          now:\n            type: long\n          subtasks:\n            type: array\n            items:\n              type: object\n              $ref: '#/components/schemas/VertexTaskDetail'\n    VertexTaskDetail:\n        properties:\n          subtask:\n            type: integer\n          status:\n            type: string\n            enum:\n            - CREATED\n            - SCHEDULED\n            - DEPLOYING\n            - RUNNING\n            - FINISHED\n            - CANCELING\n            - CANCELED\n            - FAILED\n            - RECONCILING\n          attempt:\n            type: integer\n          host:\n            type: string\n          start_time:\n            type: long\n          end-time:\n            type: long\n          duration:\n            type: long\n          metrics:\n            type: object\n            $ref: '#/components/schemas/IOMetricsInfo'\n    JobVertexAccumulatorsInfo:\n        properties:\n          id:\n            type: string\n          user-accumulators:\n            type: array\n            items:\n              type: object\n              $ref: '#/components/schemas/UserAccumulator'\n    UserAccumulator:\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        value:\n          type: string\n    JobVertexBackPressureInfo:\n      properties:\n        status:\n          type: string\n          enum:\n          - deprecated\n          - ok\n        backpressure-level:\n          type: string\n          enum:\n          - ok\n          - low\n          - high\n        end-timestamp:\n          type: long\n        subtasks:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/SubtaskBackPressureInfo'\n    SubtaskBackPressureInfo:\n      properties:\n        subtask:\n          type: integer\n        backpressure-level:\n          type: string\n          enum:\n          - ok\n          - low\n          - high\n        ratio:\n          type: number\n    SubtasksAllAccumulatorsInfo:\n      properties:\n        id:\n          type: string\n        parallelism:\n          type: integer\n        subtasks:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/SubtaskAccumulatorsInfo'\n    SubtaskAccumulatorsInfo:\n      properties:\n        subtask:\n          type: integer\n        attempt:\n          type: integer\n        host:\n          type: string\n        user-accumulators:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/UserAccumulator'\n    SubtaskExecutionAttemptDetailsInfo:\n      properties:\n        subtask:\n          type: integer\n        status:\n          type: string\n          enum:\n          - CREATED\n          - SCHEDULED\n          - DEPLOYING\n          - RUNNING\n          - FINISHED\n          - CANCELING\n          - CANCELED\n          - FAILED\n          - RECONCILING\n        attempt:\n          type: integer\n        host:\n          type: string\n        start-time:\n          type: long\n        end-time:\n          type: long\n        duration:\n          type: long\n        metrics:\n          type: object\n          $ref: '#/components/schemas/IOMetricsInfo'\n    SubtaskExecutionAttemptAccumulatorsInfo:\n      properties:\n        subtask:\n          type: integer\n        attempt:\n          type: integer\n        id:\n          type: string\n        user-accumulators:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/UserAccumulator'\n    SubtasksTimesInfo:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        now:\n          type: long\n        subtasks:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/SubtaskTimeInfo'\n    SubtaskTimeInfo:\n      properties:\n        subtask:\n          type: integer\n        host:\n          type: string\n        duration:\n          type: long\n        timestamps:\n          type: object\n          additionalProperties:\n            type: long\n    JobVertexTaskManagersInfo:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        now:\n          type: long\n        taskmanagers:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/JobVertexTaskManagersInfoTaskManagersInfo'\n    JobVertexTaskManagersInfoTaskManagersInfo:\n      properties:\n        host:\n          type: string\n        status:\n          type: string\n          enum:\n          - CREATED\n          - SCHEDULED\n          - DEPLOYING\n          - RUNNING\n          - FINISHED\n          - CANCELING\n          - CANCELED\n          - FAILED\n          - RECONCILING\n        start-time:\n          type: long\n        end-time:\n          type: long\n        duration:\n          type: long\n        metrics:\n          type: object\n          $ref: '#/components/schemas/IOMetricsInfo'\n        status-counts:\n          type: object\n          additionalProperties:\n            type: integer\n    ClusterOverviewWithVersion:\n      properties:\n        taskmanagers:\n          type: integer\n        slots-total:\n          type: integer\n        slots-available:\n          type: integer\n        jobs-running:\n          type: integer\n        jobs-finished:\n          type: integer\n        jobs-cancelled:\n          type: integer\n        jobs-failed:\n          type: integer\n        flink-version:\n          type: string\n        flink-commit:\n          type: string\n    SavepointDisposalRequest:\n      properties:\n        savepoint-path:\n          type: string\n    TaskManagersInfo:\n      properties:\n        taskmanagers:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/TaskManagerInfo'\n    TaskManagerInfo:\n      properties:\n        id:\n          type: string\n        path:\n          type: string\n        dataPort:\n          type: integer\n        timeSinceLastHeartbeat:\n          type: long\n        slotsNumber:\n          type: integer\n        freeSlots:\n          type: integer\n        hardware:\n          type: object\n          $ref: '#/components/schemas/HardwareDescription'\n    HardwareDescription:\n      properties:\n        cpuCores:\n          type: integer\n        physicalMemory:\n          type: long\n        freeMemory:\n          type: long\n        managedMemory:\n          type: long\n    TaskManagerDetailsInfo:\n      properties:\n        id:\n          type: string\n        path:\n          type: string\n        dataPort:\n          type: integer\n        timeSinceLastHeartbeat:\n          type: long\n        slotsNumber:\n          type: integer\n        freeSlots:\n          type: integer\n        hardware:\n          type: object\n          $ref: '#/components/schemas/HardwareDescription'\n        metrics:\n          type: object\n          $ref: '#/components/schemas/TaskManagerMetricsInfo'\n    TaskManagerMetricsInfo:\n      properties:\n        heapUsed:\n          type: long\n        heapCommitted:\n          type: long\n        heapMax:\n          type: long\n        nonHeapUsed:\n          type: long\n        nonHeapCommitted:\n          type: long\n        nonHeapMax:\n          type: long\n        directCount:\n          type: long\n        directUsed:\n          type: long\n        directMax:\n          type: long\n        mappedCount:\n          type: long\n        mappedUsed:\n          type: long\n        mappedMax:\n          type: long\n        memorySegmentsAvailable:\n          type: long\n        memorySegmentsTotal:\n          type: long\n        garbageCollectors:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/GarbageCollectorInfo'\n    GarbageCollectorInfo:\n      properties:\n        name:\n          type: string\n        count:\n          type: integer\n        time:\n          type: long\npaths:\n  /cluster:\n    delete:\n      tags:\n        - flink\n      operationId: shutdownCluster\n      summary: Shuts-down the cluster\n      responses:\n        '200':\n          description: |-\n            200 response\n  /config:\n    get:\n      tags:\n        - flink\n      operationId: showConfig\n      summary: Returns the configuration of the WebUI\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DashboardConfiguration'\n  /jars:\n    get:\n      tags:\n        - flink\n      operationId: listJars\n      summary: Returns a list of all jars previously uploaded via '/jars/upload'\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JarListInfo'\n  /jars/upload:\n    post:\n      tags:\n        - flink\n      operationId: uploadJar\n      summary: Uploads a jar to the cluster\n      requestBody:\n          required: true\n          content:\n            multipart/form-data:\n              schema:\n                type: object\n                properties:\n                  jarfile:\n                   type: string\n                   format: binary\n              encoding:\n                jarfile:\n                  contentType: application/x-java-archive\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JarUploadResponseBody'\n  /jars/{jarid}:\n    delete:\n      tags:\n        - flink\n      operationId: deleteJar\n      summary: Deletes a jar previously uploaded via '/jars/upload'\n      parameters:\n        - name: jarid\n          in: path\n          description: String value that identifies a jar. When uploading the jar a path is returned, where the filename is the ID. This value is equivalent to the `id` field in the list of uploaded jars (/jars)\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n  /jars/{jarid}/plan:\n    get:\n      tags:\n        - flink\n      operationId: showPlan\n      summary: Returns the dataflow plan of a job contained in a jar previously uploaded via '/jars/upload'. Program arguments can be passed both via the JSON request (recommended) or query parameters\n      parameters:\n        - name: jarid\n          in: path\n          description: String value that identifies a jar. When uploading the jar a path is returned, where the filename is the ID. This value is equivalent to the `id` field in the list of uploaded jars (/jars)\n          required: true\n          schema:\n            type: string\n        - name: program-args\n          in: query\n          description: Deprecated, please use 'programArg' instead. String value that specifies the arguments for the program or plan\n          required: false\n          schema:\n            type: string\n        - name: programArg\n          in: query\n          description: Comma-separated list of program arguments\n          required: false\n          schema:\n            type: string\n        - name: entry-class\n          in: query\n          description: String value that specifies the fully qualified name of the entry point class. Overrides the class defined in the jar file manifest\n          required: false\n          schema:\n            type: string\n        - name: parallelism\n          in: query\n          description: Positive integer value that specifies the desired parallelism for the job\n          required: false\n          schema:\n            type: integer\n#      requestBody:\n#        required: false\n#        content:\n#          application/json:\n#            schema:\n#              $ref: '#/components/schemas/JarPlanRequestBody'\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobPlanInfo'\n  /jars/{jarid}/run:\n    post:\n      tags:\n        - flink\n      operationId: runJar\n      summary: Submits a job by running a jar previously uploaded via '/jars/upload'. Program arguments can be passed both via the JSON request (recommended) or query parameters\n      parameters:\n        - name: jarid\n          in: path\n          description: String value that identifies a jar. When uploading the jar a path is returned, where the filename is the ID. This value is equivalent to the `id` field in the list of uploaded jars (/jars)\n          required: true\n          schema:\n            type: string\n        - name: allowNonRestoredState\n          in: query\n          description: Boolean value that specifies whether the job submission should be rejected if the savepoint contains state that cannot be mapped back to the job\n          required: false\n          schema:\n            type: boolean\n        - name: savepointPath\n          in: query\n          description: Comma-separated list of program arguments\n          required: false\n          schema:\n            type: string\n        - name: program-args\n          in: query\n          description: Deprecated, please use 'programArg' instead. String value that specifies the arguments for the program or plan\n          required: false\n          schema:\n            type: string\n        - name: programArg\n          in: query\n          description: Comma-separated list of program arguments\n          required: false\n          schema:\n            type: string\n        - name: entry-class\n          in: query\n          description: String value that specifies the fully qualified name of the entry point class. Overrides the class defined in the jar file manifest\n          required: false\n          schema:\n            type: string\n        - name: parallelism\n          in: query\n          description: Positive integer value that specifies the desired parallelism for the job\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JarRunResponseBody'\n  /jobmanager/config:\n    get:\n      tags:\n        - flink\n      operationId: showJobManagerConfig\n      summary: Returns the cluster configuration\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ClusterConfigurationInfoEntry'\n  /jobmanager/metrics:\n    get:\n      tags:\n        - flink\n      operationId: getJobManagerMetrics\n      summary: Provides access to job manager metrics\n      parameters:\n        - name: get\n          in: query\n          description: Comma-separated list of string values to select specific metrics\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: object\n  /jobs:\n    get:\n      tags:\n        - flink\n      operationId: getJobs\n      summary: Returns an overview over all jobs and their current state\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobIdsWithStatusOverview'\n    post:\n      tags:\n        - flink\n      operationId: submitJob\n      summary: Submits a job. This call is primarily intended to be used by the Flink client. This call expects a multipart/form-data request that consists of file uploads for the serialized JobGraph, jars and distributed cache artifacts and an attribute named \"request\" for the JSON payload\n      requestBody:\n          required: true\n          content:\n            multipart/form-data:\n              schema:\n                type: object\n                properties:\n                  jobGraphFileName:\n                   type: string\n                   format: binary\n                  jobJarFileNames:\n                   type: array\n                   format: binary\n                   items:\n                     type: string\n                  jobArtifactFileNames:\n                   type: array\n                   format: binary\n                   items:\n                     type: object\n                     properties:\n                       entryName:\n                         type: string\n                       fileName:\n                         type: string\n      responses:\n        '202':\n          description: |-\n            202 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobSubmitResponseBody'\n  /jobs/metrics:\n    get:\n      tags:\n        - flink\n      operationId: getJobsMetrics\n      summary: Provides access to aggregated job metrics\n      parameters:\n        - name: get\n          in: query\n          description: Comma-separated list of string values to select specific metrics\n          required: false\n          schema:\n            type: string\n        - name: agg\n          in: query\n          description: 'Comma-separated list of aggregation modes which should be calculated. Available aggregations are: \"min, max, sum, avg\"'\n          required: false\n          schema:\n            type: string\n        - name: jobs\n          in: query\n          description: Comma-separated list of 32-character hexadecimal strings to select specific jobs\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: object\n  /jobs/overview:\n    get:\n      tags:\n        - flink\n      operationId: getJobsOverview\n      summary: Returns an overview over all jobs\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleJobsDetails'\n  /jobs/{jobid}:\n    get:\n      tags:\n        - flink\n      operationId: getJobDetails\n      summary: Returns details of a job\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobDetailsInfo'\n    patch:\n      tags:\n        - flink\n      operationId: terminateJob\n      summary: Terminates a job\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: mode\n          in: query\n          description: 'String value that specifies the termination mode. Supported values are: \"cancel, stop\"'\n          required: false\n          schema:\n            type: string\n      responses:\n        '202':\n          description: |-\n            202 response\n  /jobs/{jobid}/accumulators:\n    get:\n      tags:\n        - flink\n      operationId: getJobAccumulators\n      summary: Returns the accumulators for all tasks of a job, aggregated across the respective subtasks\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: includeSerializedValue\n          in: query\n          description: Boolean value that specifies whether serialized user task accumulators should be included in the response\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobAccumulatorsInfo'\n  /jobs/{jobid}/checkpoints:\n    get:\n      tags:\n        - flink\n      operationId: getJobCheckpoints\n      summary: Returns checkpointing statistics for a job\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckpointingStatistics'\n  /jobs/{jobid}/checkpoints/config:\n    get:\n      tags:\n        - flink\n      operationId: getJobCheckpointsConfig\n      summary: Returns the checkpointing configuration\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckpointConfigInfo'\n  /jobs/{jobid}/checkpoints/details/{checkpointid}:\n    get:\n      tags:\n        - flink\n      operationId: getJobCheckpointDetails\n      summary: Returns details for a checkpoint\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: checkpointid\n          in: path\n          description: Long value that identifies a checkpoint\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckpointStatistics'\n  /jobs/{jobid}/checkpoints/details/{checkpointid}/subtasks/{vertexid}:\n    get:\n      tags:\n        - flink\n      operationId: getJobCheckpointStatistics\n      summary: Returns checkpoint statistics for a task and its subtasks\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: checkpointid\n          in: path\n          description: Long value that identifies a checkpoint\n          required: true\n          schema:\n            type: integer\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskCheckpointStatisticsWithSubtaskDetails'\n  /jobs/{jobid}/config:\n    get:\n      tags:\n        - flink\n      operationId: getJobConfig\n      summary: Returns the configuration of a job\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: string\n  /jobs/{jobid}/exceptions:\n    get:\n      tags:\n        - flink\n      operationId: getJobExceptions\n      summary: Returns the non-recoverable exceptions that have been observed by the job. The truncated flag defines whether more exceptions occurred, but are not listed, because the response would otherwise get too big\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobExceptionsInfo'\n  /jobs/{jobid}/execution-result:\n    get:\n      tags:\n        - flink\n      operationId: getJobResult\n      summary: Returns the result of a job execution. Gives access to the execution time of the job and to all accumulators created by this job\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobExecutionResultResponseBody'\n  /jobs/{jobid}/metrics:\n    get:\n      tags:\n        - flink\n      operationId: getJobMetrics\n      summary: Provides access to job metrics\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: get\n          in: query\n          description: Comma-separated list of string values to select specific metrics\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: object\n  /jobs/{jobid}/plan:\n    get:\n      tags:\n        - flink\n      operationId: getJobPlan\n      summary: Returns the dataflow plan of a job\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobPlanInfo'\n  /jobs/{jobid}/rescaling:\n    patch:\n      tags:\n        - flink\n      operationId: triggerJobRescaling\n      summary: Triggers the rescaling of a job\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: parallelism\n          in: query\n          description: Positive integer value that specifies the desired parallelism\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TriggerResponse'\n  /jobs/{jobid}/rescaling/{triggerid}:\n    get:\n      tags:\n        - flink\n      operationId: getJobRescalingStatus\n      summary: Returns the status of a rescaling operation\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: triggerid\n          in: path\n          description: 32-character hexadecimal string that identifies an asynchronous operation trigger ID. The ID was returned then the operation was triggered\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsynchronousOperationResult'\n  /jobs/{jobid}/savepoints:\n    post:\n      tags:\n        - flink\n      operationId: createJobSavepoint\n      summary: Triggers a savepoint, and optionally cancels the job afterwards\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n      requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SavepointTriggerRequestBody'\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TriggerResponse'\n  /jobs/{jobid}/savepoints/{triggerid}:\n    get:\n      tags:\n        - flink\n      operationId: getJobSavepointStatus\n      summary: Returns the status of a savepoint operation\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: triggerid\n          in: path\n          description: 32-character hexadecimal string that identifies an asynchronous operation trigger ID. The ID was returned then the operation was triggered\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsynchronousOperationResult'\n  /jobs/{jobid}/vertices/{vertexid}:\n    get:\n      tags:\n        - flink\n      operationId: getJobTaskDetails\n      summary: Returns details for a task, with a summary for each of its subtasks\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobVertexDetailsInfo'\n  /jobs/{jobid}/vertices/{vertexid}/accumulators:\n    get:\n      tags:\n        - flink\n      operationId: getJobTaskAccumulators\n      summary: Returns user-defined accumulators of a task, aggregated across all subtasks\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobVertexAccumulatorsInfo'\n  /jobs/{jobid}/vertices/{vertexid}/backpressure:\n    get:\n      tags:\n        - flink\n      operationId: getJobTaskBackpressure\n      summary: Returns back-pressure information for a job, and may initiate back-pressure sampling if necessary\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobVertexBackPressureInfo'\n  /jobs/{jobid}/vertices/{vertexid}/metrics:\n    get:\n      tags:\n        - flink\n      operationId: getJobTaskMetrics\n      summary: Provides access to task metrics\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n        - name: get\n          in: query\n          description: Comma-separated list of string values to select specific metrics\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: object\n  /jobs/{jobid}/vertices/{vertexid}/subtasks/accumulators:\n    get:\n      tags:\n        - flink\n      operationId: getJobSubtaskAccumulators\n      summary: Returns all user-defined accumulators for all subtasks of a task\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubtasksAllAccumulatorsInfo'\n  /jobs/{jobid}/vertices/{vertexid}/subtasks/metrics:\n    get:\n      tags:\n        - flink\n      operationId: getJobAggregatedSubtaskMetrics\n      summary: Provides access to aggregated subtask metrics\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n        - name: get\n          in: query\n          description: Comma-separated list of string values to select specific metrics\n          required: false\n          schema:\n            type: string\n        - name: agg\n          in: query\n          description: 'Comma-separated list of aggregation modes which should be calculated. Available aggregations are: \"min, max, sum, avg\"'\n          required: false\n          schema:\n            type: string\n        - name: subtasks\n          in: query\n          description: Comma-separated list of integer ranges (e.g. \"1,3,5-9\") to select specific subtasks\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: object\n  /jobs/{jobid}/vertices/{vertexid}/subtasks/{subtaskindex}:\n    get:\n      tags:\n        - flink\n      operationId: getJobSubtaskDetails\n      summary: Returns details of the current or latest execution attempt of a subtask\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n        - name: subtaskindex\n          in: path\n          description: Positive integer value that identifies a subtask\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubtaskExecutionAttemptDetailsInfo'\n  /jobs/{jobid}/vertices/{vertexid}/subtasks/{subtaskindex}/attempts/:attempt:\n    get:\n      tags:\n        - flink\n      operationId: getJobSubtaskAttemptDetails\n      summary: Returns details of an execution attempt of a subtask. Multiple execution attempts happen in case of failure/recovery\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n        - name: subtaskindex\n          in: path\n          description: Positive integer value that identifies a subtask\n          required: true\n          schema:\n            type: integer\n        - name: attempt\n          in: path\n          description: Positive integer value that identifies an execution attempt\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubtaskExecutionAttemptDetailsInfo'\n  /jobs/{jobid}/vertices/{vertexid}/subtasks/{subtaskindex}/attempts/:attempt/accumulators:\n    get:\n      tags:\n        - flink\n      operationId: getJobSubtaskAttemptAccumulators\n      summary: Returns the accumulators of an execution attempt of a subtask. Multiple execution attempts happen in case of failure/recovery\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n        - name: subtaskindex\n          in: path\n          description: Positive integer value that identifies a subtask\n          required: true\n          schema:\n            type: integer\n        - name: attempt\n          in: path\n          description: Positive integer value that identifies an execution attempt\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubtaskExecutionAttemptAccumulatorsInfo'\n  /jobs/{jobid}/vertices/{vertexid}/subtasks/{subtaskindex}/metrics:\n    get:\n      tags:\n        - flink\n      operationId: getJobSubtaskMetrics\n      summary: Provides access to subtask metrics\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n        - name: subtaskindex\n          in: path\n          description: Positive integer value that identifies a subtask\n          required: true\n          schema:\n            type: integer\n        - name: get\n          in: query\n          description: Comma-separated list of string values to select specific metrics\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: object\n  /jobs/{jobid}/vertices/{vertexid}/subtasktimes:\n    get:\n      tags:\n        - flink\n      operationId: getJobSubtaskTimes\n      summary: Returns time-related information for all subtasks of a task\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubtasksTimesInfo'\n  /jobs/{jobid}/vertices/{vertexid}/taskmanagers:\n    get:\n      tags:\n        - flink\n      operationId: getJobTaskDetailsByTaskManager\n      summary: Returns task information aggregated by task manager\n      parameters:\n        - name: jobid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job\n          required: true\n          schema:\n            type: string\n        - name: vertexid\n          in: path\n          description: 32-character hexadecimal string value that identifies a job vertex\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobVertexTaskManagersInfo'\n  /overview:\n    get:\n      tags:\n        - flink\n      operationId: getOverview\n      summary: Returns an overview over the Flink cluster\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterOverviewWithVersion'\n  /savepoint-disposal:\n    post:\n      tags:\n        - flink\n      operationId: triggerSavepointDisposal\n      summary: Triggers the desposal of a savepoint\n      requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SavepointDisposalRequest'\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TriggerResponse'\n  /savepoint-disposal/{triggerid}:\n    get:\n      tags:\n        - flink\n      operationId: getSavepointDisposalStatus\n      summary: Returns the status of a savepoint disposal operation\n      parameters:\n        - name: triggerid\n          in: path\n          description: 32-character hexadecimal string that identifies an asynchronous operation trigger ID. The ID was returned then the operation was triggered\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsynchronousOperationResult'\n  /taskmanagers:\n    get:\n      tags:\n        - flink\n      operationId: getTaskManagersOverview\n      summary: Returns an overview over all task managers\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskManagersInfo'\n  /taskmanagers/metrics:\n    get:\n      tags:\n        - flink\n      operationId: getTaskManagerAggregatedMetrics\n      summary: Provides access to aggregated task manager metrics\n      parameters:\n        - name: get\n          in: query\n          description: Comma-separated list of string values to select specific metrics\n          required: false\n          schema:\n            type: string\n        - name: agg\n          in: query\n          description: 'Comma-separated list of aggregation modes which should be calculated. Available aggregations are: \"min, max, sum, avg\"'\n          required: false\n          schema:\n            type: string\n        - name: taskmanagers\n          in: query\n          description: Comma-separated list of 32-character hexadecimal strings to select specific task managers\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: object\n  /taskmanagers/{taskmanagerid}:\n    get:\n      tags:\n        - flink\n      operationId: getTaskManagerDetails\n      summary: Returns details for a task manager\n      parameters:\n        - name: taskmanagerid\n          in: path\n          description: 32-character hexadecimal string that identifies a task manager\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskManagerDetailsInfo'\n  /taskmanagers/{taskmanagerid}/metrics:\n    get:\n      tags:\n        - flink\n      operationId: getTaskManagerMetrics\n      summary: Provides access to task manager metrics\n      parameters:\n        - name: taskmanagerid\n          in: path\n          description: 32-character hexadecimal string that identifies a task manager\n          required: true\n          schema:\n            type: string\n        - name: get\n          in: query\n          description: Comma-separated list of string values to select specific metrics\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |-\n            200 response\n          content:\n            application/json:\n              schema:\n                type: object\n",
			"canonicalURL": "/github.com/nextbreakpoint/flink-client@51deb91105e8f6c33c959aecbdb21445b4832d69/-/blob/flink-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nextbreakpoint/flink-client/blob/51deb91105e8f6c33c959aecbdb21445b4832d69/flink-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"CompletedCheckpointStatistics\": resolve \"#/components/schemas/CompletedCheckpointStatistics\": property \"trigger_timestamp\": at flink-openapi.yaml:374:17: type: unexpected schema type: \"long\""
}