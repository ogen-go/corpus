{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Nexmo/api-specification"
		},
		"file": {
			"name": "video.yml",
			"size": 0,
			"path": "definitions/video.yml",
			"byteSize": 56721,
			"content": "openapi: 3.0.3\nx-stoplight:\n  id: dka9bkyfsi8b4\ninfo:\n  title: Vonage Video\n  version: \"0.2.1\"\n  contact:\n    name: Vonage DevRel\n    url: \"https://developer.vonage.com\"\n    email: devlre@vonage.com\n  description: APIs relating to Vonage Video\nservers:\n  - url: \"https://video.api.vonage.com\"\n    description: Vonage Video\npaths:\n  /session/create:\n    parameters: []\n    post:\n      tags:\n        - Sessions\n      summary: Create New Session\n      operationId: session-create\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/New-Session\"\n      description: Generate a new session.\n      requestBody:\n        $ref: \"#/components/requestBodies/Create-Session\"\n\n  /v2/project/{application_id}/session/{session_id}/signal:\n    post:\n      tags:\n        - Signaling\n      parameters:\n        - $ref: \"#/components/parameters/application_id\"\n        - $ref: \"#/components/parameters/session_id\"\n      summary: Send a signal to all participants\n      description: Use the Signal REST API to send signals to all participants in an active Vonage Video session or to a specific client connected to that session. Signals sent from the server have an empty from parameter in the signal received handlers on clients connected to the session. For a signal sent from a participant in the session, the from property is set the connection ID of the client that sent the signal, but in this case there is no associated connection.\n      requestBody:\n        $ref: \"#/components/requestBodies/Signal\"\n      operationId: send-signal\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Blank-200\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: \"One of the signal properties — data, type, sessionId or connectionId — is invalid.\"\n\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: You are not authorized to send the signal. Check your authentication credentials.\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: The client specified by the connectionId property is not connected to the session.\n        \"413\":\n          description: Data length exceeded\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 413\n                      message:\n                        example: The type string exceeds the maximum length (128 bytes), or the data string exceeds the maximum size (8 kB).\n\n  /v2/project/{application_id}/session/{session_id}/connection/{connection_id}/signal:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/session_id\"\n      - name: connection_id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: Specific publisher connection ID\n    post:\n      tags:\n        - Signaling\n      summary: Send signal to a specific participant\n      description: Send signals to a specific participant in an active Vonage Video session\n      operationId: post-v2-projects-application_id-session-session_id-connection-connect_id-signal\n      requestBody:\n        $ref: \"#/components/requestBodies/Signal\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Blank-200\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: \"One of the signal properties — data, type, sessionId or connectionId — is invalid.\"\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: You are not authorized to send the signal. Check your authentication credentials.\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: The client specified by the connectionId property is not connected to the session.\n        \"413\":\n          description: Data length exceeded\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 413\n                      message:\n                        example: The type string exceeds the maximum length (128 bytes), or the data string exceeds the maximum size (8 kB).\n\n  /v2/project/{application_id}/session/{session_id}/connection/{connection_id}:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/session_id\"\n      - $ref: \"#/components/parameters/connection_id\"\n    delete:\n      tags:\n        - Moderation\n      summary: Force a connection to disconnect\n      description: Force a client to disconnect from a session\n      operationId: delete-v2-projects-application_id-session-session_id-connection-connection_id\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Blank-200\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: One of the arguments — sessionId or connectionId — is invalid.\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: You are not authorized to forceDisconnect, check your authentication credentials.\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: The client specified by the connectionId property is not connected to the session.\n  /v2/project/{application_id}/session/{session_id}/stream/{stream_id}:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/session_id\"\n      - $ref: \"#/components/parameters/stream_id\"\n    get:\n      tags:\n        - Sessions\n      summary: Get layout information about a stream\n      description: |\n        Use this method to get information on an Vonage Video stream\n\n        For example, you can call this method to get information about layout classes used by an Vonage Video stream. The layout classes define how the stream is displayed in the layout of a broadcast stream.\n      operationId: get-v2-project-application_id-session-session_id-stream-stream_id\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Stream-Layout\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: Invalid request. This response may indicate that data in your request data is invalid JSON. Or it may indicate that you do not pass in a session ID or you passed in an invalid stream ID.\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: You passed in an invalid Vonage JWT token.\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: The session exists but has not had any streams added to it yet.\n        \"408\":\n          description: Invalid stream ID\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 408\n                      message:\n                        example: You passed in an invalid stream ID.\n\n  /v2/project/{application_id}/session/{session_id}/stream:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/session_id\"\n    get:\n      tags:\n        - Sessions\n      operationId: get-stream-layouts\n      summary: Get information about all connected stream layouts\n      description: |\n        Use this method to get information on all Vonage Video streams in a session\n\n        For example, you can call this method to get information about layout classes used by an Vonage Video stream. The layout classes define how the stream is displayed in the layout of a broadcast stream.\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Multi-Stream-Layout\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: Invalid request. This response may indicate that data in your request data is invalid JSON. Or it may indicate that you do not pass in a session ID or you passed in an invalid stream ID.\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: You passed in an invalid Vonage JWT token.\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: The session exists but has not had any streams added to it yet.\n        \"408\":\n          description: Invalid stream ID\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 408\n                      message:\n                        example: You passed in an invalid stream ID.\n    put:\n      tags:\n        - Sessions\n      summary: Change the layout of a stream\n      description: Use this method to change layout classes for an Vonage Video stream. The layout classes define how the stream is displayed in the layout of a composed Vonage Video archive.\n      operationId: put-v2-project-application_id-session-session_id-stream\n      requestBody:\n        $ref: \"#/components/requestBodies/Change-Stream-Layout\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Blank-200\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: Invalid request. This response may indicate that data in your request data is invalid JSON. It may also indicate that you passed in invalid layout options.\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: Authentication error\n\n  /v2/project/{application_id}/session/{session_id}/stream/{stream_id}/mute:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/session_id\"\n      - $ref: \"#/components/parameters/stream_id\"\n    post:\n      tags:\n        - Moderation\n      summary: Mute a specific stream\n      description: Force mute a specific publisher stream\n      operationId: post-v2-project-application_id-session-session_id-stream-stream_id-mute\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Project-Details\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: Invalid request\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: Authentication error\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: Not found. The session or stream is not found\n\n  /v2/project/{application_id}/session/{session_id}/mute:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/session_id\"\n    post:\n      tags:\n        - Moderation\n      summary: Mute multiple participants in a session\n      description: You can use the Vonage Video REST API to force all streams (except for an optional list of streams) in a session to mute published audio. You can also use this method to disable the force mute state of a session (see below).\n      operationId: mute-multiple-participants\n      requestBody:\n        $ref: \"#/components/requestBodies/Mute-Multiple-Streams\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Project-Details\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: Invalid request. This response may indicate that data in your request data is invalid JSON.\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: Authentication error\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: Not found. The session or stream is not found\n\n  /v2/project/{application_id}/archive:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n    get:\n      tags:\n        - Archives\n      parameters:\n        - schema:\n            type: integer\n          in: query\n          name: offset\n          description: Set an offset query parameters to specify the index offset of the first archive. 0 is offset of the most recently started archive (excluding deleted archive). 1 is the offset of the archive that started prior to the most recent archive. The default value is 0.\n        - schema:\n            type: integer\n          in: query\n          name: count\n          description: Set a count query parameter to limit the number of archives to be returned. The default number of archives returned is 50 (or fewer, if there are fewer than 50 archives). The maximum number of archives the call will return is 1000.\n        - schema:\n            type: string\n          in: query\n          name: session_id\n          description: Set a sessionId query parameter to list archives for a specific session ID. (This is useful when listing multiple archives for an automatically archived session.)\n      summary: List all archives in an application\n      description: List all archives in an application\n      operationId: get-v2-project-application_id-archive\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Multi-Archive-Response\"\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: Authentication error\n    post:\n      tags:\n        - Archives\n      summary: Create a new archive\n      description: Create a new archive\n      operationId: post-v2-project-application_id-archive\n      requestBody:\n        $ref: \"#/components/requestBodies/New-Archive\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Archive-Details\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - allOf:\n                      - $ref: \"#/components/schemas/Video-Error\"\n                      - type: object\n                        description: Missing Session ID\n                        properties:\n                          code:\n                            example: 400\n                          message:\n                            example: You do not pass in a session ID or you pass in an invalid session ID.\n                  - allOf:\n                      - $ref: \"#/components/schemas/Video-Error\"\n                      - type: object\n                        description: No connected clients\n                        properties:\n                          code:\n                            example: 400\n                          message:\n                            example: No clients are actively connected to the Vonage Video session.\n                  - allOf:\n                      - $ref: \"#/components/schemas/Video-Error\"\n                      - type: object\n                        description: Invalid resolution\n                        properties:\n                          code:\n                            example: 400\n                          message:\n                            example: You specify an invalid resolution value.\n                  - allOf:\n                      - $ref: \"#/components/schemas/Video-Error\"\n                      - type: object\n                        description: Invalid `outputMode` Resolution\n                        properties:\n                          code:\n                            example: 400\n                          message:\n                            example: The outputMode property is set to \"individual\" and you set the resolution property and (which is not supported in individual stream archives).\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: Authentication error\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: The session does not exist, or the session exists but there are no clients connected to it.\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - allOf:\n                      - $ref: \"#/components/schemas/Video-Error\"\n                      - type: object\n                        description: Not using the Vonage Video Media Router\n                        properties:\n                          code:\n                            example: 409\n                          message:\n                            example: You attempted to start an archive for a session that does not use the Vonage Video Media Router.\n                  - allOf:\n                      - $ref: \"#/components/schemas/Video-Error\"\n                      - type: object\n                        description: Archive already started\n                        properties:\n                          code:\n                            example: 409\n                          message:\n                            example: You attempt to start an archive for a session that is already being recorded without setting the multiArchiveTag option\n                  - allOf:\n                      - $ref: \"#/components/schemas/Video-Error\"\n                      - type: object\n                        description: Non-Unique multiArchiveTag specified\n                        properties:\n                          code:\n                            example: 409\n                          message:\n                            example: You attempt to start a simultaneous archive for a session without setting a unique multiArchiveTag value.\n\n  /v2/project/{application_id}/archive/{archive_id}:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/archive_id\"\n    get:\n      tags:\n        - Archives\n      operationId: get-archive-information\n      summary: Return archive information for specific archive\n      description: Return archive information for specific archive\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Archive-Details\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: You do not pass in a session ID or you pass in an invalid archive ID.\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: You passed in an invalid JWT token.\n\n    delete:\n      tags:\n        - Archives\n      summary: Delete an archive\n      description: Delete an archive\n      operationId: delete-v2-project-application_id-archive-archive_id\n      responses:\n        \"204\":\n          description: No Content\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: You passed in an invalid JWT token.\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 409\n                      message:\n                        example: Status of the archive is not \"uploaded\", \"available\", or \"deleted\"\n\n  /v2/project/{application_id}/archive/{archive_id}/streams:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/archive_id\"\n    patch:\n      tags:\n        - Archives\n      summary: Add or remove a stream from an archive\n      description: Use this method to change the streams included in a composed archive that was started with the streamMode set to \"manual\"\n      operationId: patch-v2-project-application_id-archive-archive_id-streams\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - title: Remove Stream\n                  x-tab-id: RemoveStream\n                  allOf:\n                    - $ref: \"#/components/schemas/Remove-Stream-From-Archive\"\n                - title: Add Stream\n                  x-tab-id: AddStream\n                  allOf:\n                    - $ref: \"#/components/schemas/Add-Stream-To-Archive\"\n      responses:\n        \"204\":\n          description: No Content\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: Invalid request. This response may indicate that data provided in your request is an invalid JSON, or the request couldn't be fulfilled because the archive was started with streamMode set to \"auto\", which does not support stream manipulation.\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: Authentication error.\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: Archive or stream not found\n\n  /v2/project/{application_id}/archive/{archive_id}/stop:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/archive_id\"\n    post:\n      tags:\n        - Archives\n      operationId: stop-archive\n      summary: Stop an archive\n      description: |\n        To stop recording an archive, submit an HTTP POST request.\n\n        Archives stop recording after 4 hours (14,400 seconds), or 60 seconds after the last client disconnects from the session, or 60 minutes after the last client stops publishing. However, automatic archives continue recording to multiple consecutive files of up to 4 hours in length each. For more information, see Archive duration\n\n        Calling this method for automatic archives has no effect. Automatic archives continue recording to multiple consecutive files of up to 4 hours (14,400 seconds) in length each, until 60 seconds after the last client disconnects from the session, or 60 minutes after the last client stops publishing a stream to the session.\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Archive-Details\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: You did not pass a Session ID or you passed an invalid Session ID\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: You passed an invalid JWT token\n        \"404\":\n          description: Missing resource\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 404\n                      message:\n                        example: You passed an invalid archive ID\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 409\n                      message:\n                        example: You attempted to stop an archive that was not being recorded\n\n  /v2/project/{application_id}/archive/{archive_id}/layout:\n    parameters:\n      - $ref: \"#/components/parameters/application_id\"\n      - $ref: \"#/components/parameters/archive_id\"\n    put:\n      tags:\n        - Archives\n      summary: Change the layout of an archive\n      description: You can dynamically change the layout type of a composed archive while it is being recorded.\n      operationId: put-v2-project-application_id-archive-archive_id-layout\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Layout\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Blank-200\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 400\n                      message:\n                        example: Invalid request. This response may indicate that data in your request data is invalid JSON. It may also indicate that you passed in invalid layout options.\n        \"403\":\n          description: Authentication Error\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Video-Error\"\n                  - type: object\n                    properties:\n                      code:\n                        example: 403\n                      message:\n                        example: Authentication error.\n\ncomponents:\n  schemas:\n    Add-Stream-To-Archive:\n      type: object\n      properties:\n        addStream:\n          type: string\n          description: The Stream ID\n          example: \"12312312-3811-4726-b508-e41a0f96c68f\"\n        hasAudio:\n          type: boolean\n          description: Whether the composed archive should include the stream's audio (true, the default) or not (false)\n          example: true\n        hasVideo:\n          type: boolean\n          description: Whether the composed archive should include the stream's video (true, the default) or not (false).\n          example: true\n      required:\n        - addStream\n\n    Archive-Detail:\n      type: object\n      properties:\n        createdAt:\n          type: integer\n          description: The timestamp for when the archive started recording, expressed in milliseconds since the Unix epoch (January 1, 1970, 00:00:00 UTC).\n          example: 1384221730000\n        duration:\n          type: integer\n          description: The duration of the archive in seconds. For archives that have are being recorded (with the status property set to \"started\"), this value is set to 0.\n          example: 5049\n        hasAudio:\n          $ref: \"#/components/schemas/Has-Audio\"\n        hasVideo:\n          $ref: \"#/components/schemas/Has-Video\"\n        id:\n          type: string\n          description: The unique archive ID.\n          example: \"b40ef09b-3811-4726-b508-e41a0f96c68f\"\n        name:\n          $ref: \"#/components/schemas/Archive-Name\"\n        applicationId:\n          type: string\n          description: Your Vonage application ID\n          example: \"78d335fa-323d-0114-9c3d-d6f0d48968cf\"\n        reason:\n          type: string\n          description: For archives with the status \"stopped\", this can be set to \"maximum duration exceeded\", \"maximum idle time exceeded\", \"session ended\", \"user initiated\". For archives with the status \"failed\", this can be set to \"failure\".\n          example: \"\"\n        resolution:\n          $ref: \"#/components/schemas/Resolution\"\n        sessionId:\n          $ref: \"#/components/schemas/Session-ID\"\n        size:\n          type: integer\n          description: The size of the archive file. For archives that have not been generated, this value is set to 0.\n          example: 247748791\n        status:\n          type: string\n          enum:\n            - available\n            - expired\n            - failed\n            - paused\n            - started\n            - stopped\n            - uploaded\n          description: |\n            The status of the archive:\n\n            * \"available\" — The archive is available for download from the Vonage Video cloud.\n            * \"expired\" — The archive is no longer available for download from the Vonage Video cloud.\n            * \"failed\" — The archive recording failed.\n            * \"paused\" — When an archive is paused, nothing is recorded. The archive is paused if any of the following conditions occur:\n                * No clients are publishing streams to the session. In this case, there is a timeout of 60 minutes, after which the archive stops and the archive status changes to \"stopped\".\n                * All clients disconnect the session. After 60 seconds the archive stops and the archive status changes to \"stopped\".\n                \n                If a client resumes publishing while the archive is in the \"paused\" state, the archive recording resumes and the status changes back to \"started\".\n            * \"started\" — The archive started and is in the process of being recorded.\n            * \"stopped\" — The archive stopped recording.\n            * \"uploaded\" — The archive is available for download from the S3 bucket you specified in your Video API account.\n          example: available\n        streamMode:\n          $ref: \"#/components/schemas/Stream-Mode\"\n        streams:\n          type: array\n          items:\n            type: object\n            properties:\n              streamId:\n                type: string\n                description: The stream ID of the stream included in the archive.\n              hasAudio:\n                $ref: \"#/components/schemas/Has-Audio\"\n              hasVideo:\n                $ref: \"#/components/schemas/Has-Video\"\n        url:\n          type: string\n          description: The download URL of the available archive file. This is only set for an archive with the status set to \"available\"; for other archives, (including archives with the status \"uploaded\") this property is set to null. The download URL is obfuscated, and the file is only available from the URL for 10 minutes.\n          example: https://tokbox.com.archive2.s3.amazonaws.com/123456/09141e29-8770-439b-b180-337d7e637545/archive.mp4\n\n    Archive-Name:\n      type: string\n      description: The name of the archive (for your own identification)\n      example: Foo\n\n    Has-Audio:\n      type: boolean\n      description: Whether the archive will record audio (true, the default) or not (false). If you set both hasAudio and hasVideo to false, the call to this method results in an error.\n      example: true\n\n    Has-Video:\n      type: boolean\n      description: Whether the archive will record video (true, the default) or not (false). If you set both hasAudio and hasVideo to false, the call to this method results in an error.\n      example: true\n\n    Layout:\n      type: object\n      properties:\n        type:\n          type: string\n          description: 'Specify this to assign the initial layout type for the archive. This applies only to composed archives. This object has three properties: type, stylesheet, and screenshareType, which are each strings. Valid values for the layout property are \"bestFit\" (best fit), \"custom\" (custom), \"horizontalPresentation\" (horizontal presentation), \"pip\" (picture-in-picture), and \"verticalPresentation\" (vertical presentation)). If you specify a \"custom\" layout type, set the stylesheet property of the layout object to the stylesheet. (For other layout types, do not set a stylesheet property.) Set the screenshareType property to the layout type to use when there is a screen-sharing stream in the session. (This property is optional.) Note if you set the screenshareType property, you must set the type property to \"bestFit\" and leave the stylesheet property unset. If you do not specify an initial layout type, the archive uses the best fit layout type.'\n          enum:\n            - bestFit\n            - custom\n            - horizontalPresentation\n            - pip\n            - verticalPresentation\n          example: bestFit\n        stylesheet:\n          type: string\n          description: Used for the `custom` layout to define the visual layout\n          example: \"stream.instructor {position: absolute; width: 100%;  height:50%;}\"\n        screenshareType:\n          type: string\n          enum:\n            - bestFit\n            - custom\n            - horizontalPresentation\n            - pip\n            - verticalPresentation\n          description: Set the screenshareType property to the layout type to use when there is a screen-sharing stream in the session. (This property is optional.) Note if you set the screenshareType property, you must set the type property to \"bestFit\" and leave the stylesheet property unset.\n          example: pip\n\n    OutputMode:\n      type: string\n      enum:\n        - composed\n        - individual\n      description: Whether all streams in the archive are recorded to a single file (\"composed\", the default) or to individual files (\"individual\").\n\n    Remove-Stream-From-Archive:\n      type: object\n      properties:\n        removeStream:\n          type: string\n          description: Stream ID to remove from the archive\n          example: \"12312312-3811-4726-b508-e41a0f96c68f\"\n      required:\n        - removeStream\n\n    Resolution:\n      type: string\n      enum:\n        - 640x480\n        - 480x640\n        - 1280x720\n        - 720x1280\n        - 1080x1920\n        - 1920x1080\n      description: The resolution of the archive, either \"640x480\" (SD landscape, the default), \"1280x720\" (HD landscape), \"1920x1080\" (FHD landscape), \"480x640\" (SD portrait), \"720x1280\" (HD portrait), or \"1080x1920\" (FHD portrait). You may want to use a portrait aspect ratio for archives that include video streams from mobile devices (which often use the portrait aspect ratio). This property only applies to composed archives. If you set this property and set the outputMode property to \"individual\", the call to the REST method results in an error.\n\n    Session-ID:\n      type: string\n      description: The session ID of the Vonage Video session you are working with\n      example: flR1ZSBPY3QgMjkgMTI6MTM6MjMgUERUIDIwMTN\n\n    Stream-Layout:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The Stream ID\n          example: \"8b732909-0a06-46a2-8ea8-074e64d43422\"\n        videoType:\n          type: string\n          description: Set to \"camera\", \"screen\", or \"custom\". A \"screen\" video uses screen sharing on the publisher as the video source; a \"custom\" video is published by a web client using an HTML VideoTrack element as the video source.\n          example: camera\n        name:\n          type: string\n          description: The stream name (if one was set when the client published the stream).\n          example: \"\"\n        layoutClassList:\n          type: array\n          description: An array of the layout classes for the stream.\n          example:\n            - full\n          items:\n            type: string\n            example: \"full\"\n\n    Stream-Mode:\n      type: string\n      enum:\n        - auto\n        - manual\n      description: Whether streams included in the archive are selected automatically (\"auto\", the default) or manually (\"manual\"). When streams are selected automatically (\"auto\"), all streams in the session can be included in the archive. When streams are selected manually (\"manual\"), you specify streams to be included based on calls to this REST method. You can specify whether a stream's audio, video, or both are included in the archive. In composed archives, in both automatic and manual modes, the archive composer includes streams based on stream prioritization rules.\n      example: manual\n\n    Video-Error:\n      description: Error thrown in the Vonage Video API\n      type: object\n      properties:\n        code:\n          type: integer\n          description: HTTP response code that is returned\n        message:\n          type: string\n          description: Error that was exhibited\n\n  securitySchemes:\n    Vonage JWT:\n      type: http\n      scheme: bearer\n\n  responses:\n    Blank-200:\n      description: OK\n\n    New-Session:\n      description: Sample Response when creating a new session\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: object\n              properties:\n                session_id:\n                  type: string\n                application_id:\n                  type: string\n                create_dt:\n                  type: string\n                media_server_url:\n                  type: string\n\n    Invalid-Credentials:\n      description: Invalid credentials\n      content:\n        application/json:\n          schema:\n            properties:\n              code:\n                type: integer\n                example: 403\n              message:\n                type: string\n                example: You are not authorized to send the signal. Check your authentication credentials.\n          examples:\n            example-1:\n              value:\n                code: 404\n                message: \"You are not authorized to forceDisconnect, check your authentication credentials.\"\n\n    Multi-Archive-Response:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              count:\n                type: integer\n                description: The total number of archives for the API key.\n                example: 1\n              items:\n                type: array\n                description: An array of objects defining each archive retrieved. Archives are listed from the newest to the oldest in the return set.\n                items:\n                  $ref: \"#/components/schemas/Archive-Detail\"\n\n    Multi-Stream-Layout:\n      description: Information about multiple streams layout config\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              count:\n                type: integer\n                description: Number of items in the response\n                example: 1\n              items:\n                type: array\n                description: Stream layouts for requested session IDs\n                items:\n                  $ref: \"#/components/schemas/Stream-Layout\"\n\n    Stream-Layout:\n      description: Information about a stream's layout\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Stream-Layout\"\n\n    Project-Details:\n      description: Project Details\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              applicationId:\n                type: string\n                description: The Vonage application ID\n                example: \"78d335fa-323d-0114-9c3d-d6f0d48968cf\"\n              status:\n                type: string\n                description: Whether the project is active (\"ACTIVE\") or suspended (\"SUSPENDED\")\n                example: ACTIVE\n              name:\n                type: string\n                description: The name, if you specified one when creating the project; or an empty string if you did not specify a name\n                example: Joe Montana\n              environment:\n                type: string\n                description: This is set to \"standard\" or \"enterprise\", and it refers to the environment a project is running on. Enterprise package partners have access to the enterprise environment.\n                example: standard\n              createdAt:\n                type: integer\n                description: The time at which the project was created (a UNIX timestamp, in milliseconds)\n                example: 1414642898000\n\n    Archive-Details:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Archive-Detail\"\n\n  requestBodies:\n    Change-Stream-Layout:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              items:\n                type: array\n                description: Array of stream IDs and their new class lists\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      example: 8b732909-0a06-46a2-8ea8-074e64d43422\n                    layoutClassList:\n                      type: array\n                      description: Array of class names as strings\n                      example:\n                        - full\n                      items:\n                        type: string\n            required:\n              - items\n\n    Create-Session:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              archiveMode:\n                type: string\n                description: Set to always to have the session archived automatically. With the archiveModeset to manual (the default), you can archive the session by calling the REST /archive POST method. If you set the archiveMode to always, you must also set the p2p.preference parameter to disabled (the default).\n              location:\n                type: string\n                description: The IP address that the Vonage Video APi will use to situate the session in its global network. If no location hint is passed in (which is recommended), the session uses a media server based on the location of the first client connecting to the session. Pass a location hint in only if you know the general geographic region (and a representative IP address) and you think the first client connecting may not be in that region. Specify an IP address that is representative of the geographical location for the session.\n              p2p.preference:\n                type: string\n                description: Set to enabled if you prefer clients to attempt to send audio-video streams directly to other clients; set to disabled for sessions that use the Vonage Video Media Router. (Optional; the default setting is disabled -- the session uses the Vonage Video Media Router.)\n          examples:\n            example-1:\n              value: archiveMode=always\n\n    Mute-Multiple-Streams:\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              active:\n                type: boolean\n                description: Whether to mute streams in the session (true) and enable the mute state of the session, or to disable the mute state of the session (false). With the mute state enabled (true), all current and future streams published to the session (with the exception of streams in the excludedStreamIds array) are muted. When you call this method with the active property set to false, future streams published to the session are not muted (but any existing muted streams remain muted).\n                example: true\n              excludedStreamIds:\n                type: array\n                description: |\n                  The stream IDs for streams that should not be muted. This is an optional property. If you omit this property, all streams in the session will be muted. This property only applies when the active property is set to true. When the active property is set to false, it is ignored.\n\n                  The elements in the excludedStreamIds array are stream IDs (strings) for the streams you wish to exclude from being muted.\n\n                  If you do not wish to include an array of excluded streams, do not include any body content.\n                example:\n                  - excludedStream1\n                  - excludedStream2\n                items:\n                  type: string\n            required:\n              - active\n              - excludedStreamIds\n\n    New-Archive:\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              sessionId:\n                $ref: \"#/components/schemas/Session-ID\"\n              hasAudio:\n                $ref: \"#/components/schemas/Has-Audio\"\n              hasVideo:\n                $ref: \"#/components/schemas/Has-Video\"\n              layout:\n                $ref: \"#/components/schemas/Layout\"\n              name:\n                $ref: \"#/components/schemas/Archive-Name\"\n              outputMode:\n                $ref: \"#/components/schemas/OutputMode\"\n              resolution:\n                $ref: \"#/components/schemas/Resolution\"\n              streamMode:\n                $ref: \"#/components/schemas/Stream-Mode\"\n            required:\n              - sessionId\n\n    Signal:\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              type:\n                type: string\n                description: Type of data that is being sent to the client. This cannot exceed 128 bytes.\n                example: chat\n              data:\n                type: string\n                description: Payload that is being sent to the client. This cannot exceed 8kb.\n                example: Text of the chat message\n            required:\n              - type\n              - data\n\n  parameters:\n    application_id:\n      name: application_id\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Vonage Application UUID\n    session_id:\n      name: session_id\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Video session ID\n    connection_id:\n      name: connection_id\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Specific publisher connection ID\n    stream_id:\n      name: stream_id\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Stream ID\n    archive_id:\n      name: archive_id\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Archive UUID to use\n\nsecurity:\n  - Vonage JWT: []\n\ntags:\n  - name: Archives\n    description: APIs relating to working with archives\n  - name: Moderation\n    description: APIs relating to moderating participants\n  - name: Sessions\n    description: APIs relating to creating and working with Sessions\n  - name: Signaling\n    description: APIs relating to sending and recieving Signals\n",
			"canonicalURL": "/github.com/Nexmo/api-specification@9c787c0bd24b52fede45f6f13ebe82b261c79ab8/-/blob/definitions/video.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Nexmo/api-specification/blob/9c787c0bd24b52fede45f6f13ebe82b261c79ab8/definitions/video.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: securitySchemes: at 1:16912: invalid name: \"Vonage JWT\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}