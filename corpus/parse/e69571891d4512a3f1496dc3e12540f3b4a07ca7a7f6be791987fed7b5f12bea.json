{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloudevents/spec"
		},
		"file": {
			"name": "subscriptions-openapi.yaml",
			"size": 0,
			"path": "subscriptions/subscriptions-openapi.yaml",
			"byteSize": 16110,
			"content": "openapi: 3.0.0\ninfo:\n  title: CloudEvents Subscriptions API\n  version: 0.2-WIP\nservers:\n  - url: https://server.example.com/v0.1\npaths:\n  /subscriptions:\n    get:\n      operationId: getSubscriptions\n      description: Retrieve multiple subscriptions\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                description: a list of subscriptions\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n    post:\n      operationId: createSubscription\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionRequest\"\n      responses:\n        \"201\":\n          description: Created successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n          headers:\n            Location:\n              schema:\n                type: string\n                format: url\n        \"400\":\n          description: Invalid or malformed request\n    options:\n      operationId: getFeatures\n      description: Discover supported features and methods for this endpoint\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Allow:\n              schema:\n                type: string\n                default: \"GET,POST,OPTIONS\"\n  /subscriptions/{id}:\n    get:\n      operationId: getSubscription\n      description: Retrieve a subscription\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          description: identifier of a specific subscription\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"404\":\n          description: Subscription not found\n    put:\n      operationId: updateSubscription\n      description: Update a subscription\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          required: true\n          schema:\n            type: string\n          description: The id of an existing subscription\n\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Subscription\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"400\":\n          description: Invalid or malformed request\n        \"404\":\n          description: Subscription not found\n    delete:\n      operationId: deleteSubscription\n      description: Delete a subscription\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          required: true\n          schema:\n            type: string\n          description: The id of an existing subscription\n      responses:\n        \"200\":\n          description: Successfully deleted\n        \"404\":\n          description: Subscription not found\n    options:\n      operationId: getSubscriptionFeatures\n      description: Discover supported features and methods for this endpoint\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          description: identifier of a specific subscription\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Allow:\n              schema:\n                type: string\n                default: \"GET,PUT,DELETE,OPTIONS\"\ncomponents:\n  schemas:\n    SubscriptionRequest:\n      properties:\n        protocol:\n          $ref: \"#/components/schemas/Protocol\"\n        protocolSettings:\n          oneOf:\n            - $ref: \"#/components/schemas/ProtocolSettings\"\n            - $ref:  \"#/components/schemas/AMQPSettings\"\n            - $ref:  \"#/components/schemas/ApacheKafkaSettings\"\n            - $ref:  \"#/components/schemas/HTTPSettings\"\n            - $ref:  \"#/components/schemas/MQTTSettings\"\n            - $ref:  \"#/components/schemas/NATSSettings\"\n        sink:\n          type: string\n          format: url\n          description: REQUIRED. The address to which events shall be delivered using the selected protocol.\n          example: \"https://endpoint.example.com/webhook\"\n        sinkCredential:\n          oneOf:\n            - $ref: \"#/components/schemas/SinkCredential\"\n            - $ref: \"#/components/schemas/AccessTokenCredential\"\n            - $ref: \"#/components/schemas/PlainCredential\"\n            - $ref: \"#/components/schemas/RefreshTokenCredential\"\n        source:\n          type: string\n          format: uri-reference\n          description: OPTIONAL. Source to which the subscription applies. May be implied by the request address.\n        types:\n          description: \"CloudEvent types eligible to be delivered by this subscription\"\n          type: array\n          items:\n            type: string\n        filters:\n          description: \"This filter evaluates to 'true' if all contained filters are 'true'\"\n          type: array\n          items:\n            title: \"Filter entry\"\n            oneOf:\n              - $ref: \"#/components/schemas/Filter\"\n              - $ref: \"#/components/schemas/AllFilter\"\n              - $ref: \"#/components/schemas/AnyFilter\"\n              - $ref: \"#/components/schemas/NotFilter\"\n              - $ref: \"#/components/schemas/ExactFilter\"\n              - $ref: \"#/components/schemas/PrefixFilter\"\n              - $ref: \"#/components/schemas/SuffixFilter\"\n              - $ref: \"#/components/schemas/SqlFilter\"\n        config:\n          description: OPTIONAL. Implementation-specific configuration parameters needed by the subscription manager for acquiring events.\n          type: object\n          additionalProperties:\n            type: string\n      required:\n        - sink\n        - protocol\n    Subscription:\n      type: object\n      title: \"Subscription\"\n      allOf:\n        - $ref: \"#/components/schemas/SubscriptionRequest\"\n        - type: object\n          properties:\n            id:\n              type: string\n              description: REQUIRED. The unique identifier of the subscription in the scope of the subscription manager.\n              example: 1119920371\n      required:\n        - id\n        - sink\n        - protocol\n    Protocol:\n      type: string\n      enum: [\"HTTP\", \"MQTT3\", \"MQTT5\", \"AMQP\", \"NATS\", \"KAFKA\"]\n      description: REQUIRED. Identifier of a delivery protocol.\n      example: \"HTTP\"\n    Filter:\n      title: \"Filter\"\n      description: \"A filter from a selection of multiple filter types and dialects\"\n      type: object\n      additionalProperties: true\n    AllFilter:\n      allOf:\n        - $ref: \"#/components/schemas/Filter\"\n        - type: object\n          description: \"all filter\"\n          properties:\n            all:\n              description: \"This filter evaluates to 'true' if all contained filters are 'true'\"\n              type: array\n              minItems: 1\n              items:\n                title: \"Filter entry\"\n                oneOf:\n                - $ref: \"#/components/schemas/Filter\"\n                - $ref: \"#/components/schemas/AllFilter\"\n                - $ref: \"#/components/schemas/AnyFilter\"\n                - $ref: \"#/components/schemas/NotFilter\"\n                - $ref: \"#/components/schemas/ExactFilter\"\n                - $ref: \"#/components/schemas/PrefixFilter\"\n                - $ref: \"#/components/schemas/SuffixFilter\"\n                - $ref: \"#/components/schemas/SqlFilter\"\n          additionalProperties: false\n    AnyFilter:\n      allOf:\n        - $ref: \"#/components/schemas/Filter\"\n        - type: object\n          description: \"any filter\"\n          properties:\n            any:\n              description: \"This filter evaluates to 'true' if any contained filters are 'true'\"\n              type: array\n              minItems: 1\n              items:\n                title: \"Filter entry\"\n                oneOf:\n                  - $ref: \"#/components/schemas/Filter\"\n                  - $ref: \"#/components/schemas/AllFilter\"\n                  - $ref: \"#/components/schemas/AnyFilter\"\n                  - $ref: \"#/components/schemas/NotFilter\"\n                  - $ref: \"#/components/schemas/ExactFilter\"\n                  - $ref: \"#/components/schemas/PrefixFilter\"\n                  - $ref: \"#/components/schemas/SuffixFilter\"\n                  - $ref: \"#/components/schemas/SqlFilter\"\n          additionalProperties: false\n    NotFilter:\n      allOf:\n        - $ref: \"#/components/schemas/Filter\"\n        - type: object\n          description: \"not filter\"\n          properties:\n            not:\n              type: object\n              oneOf:\n                - $ref: \"#/components/schemas/Filter\"\n                - $ref: \"#/components/schemas/AllFilter\"\n                - $ref: \"#/components/schemas/AnyFilter\"\n                - $ref: \"#/components/schemas/NotFilter\"\n                - $ref: \"#/components/schemas/ExactFilter\"\n                - $ref: \"#/components/schemas/PrefixFilter\"\n                - $ref: \"#/components/schemas/SuffixFilter\"\n                - $ref: \"#/components/schemas/SqlFilter\"\n          additionalProperties: false\n    ExactFilter:\n      allOf:\n        - $ref: \"#/components/schemas/Filter\"\n        - type: object\n          title: \"exact filter\"\n          description: \"This filter evaluates to 'true' if the 'value' exactly matches the value of the indicated CloudEvents context attribute\"\n          properties:\n            exact:\n              $ref: \"#/components/schemas/CloudEventsAttribute\"\n          additionalProperties: false\n    PrefixFilter:\n      allOf:\n        - $ref: \"#/components/schemas/Filter\"\n        - type: object\n          title: \"prefix filter\"\n          description: \"This filter evaluates to 'true' if the 'value' is a prefix of the value of the indicated CloudEvents context attribute\"\n          properties:\n            prefix:\n              $ref: \"#/components/schemas/CloudEventsAttribute\"\n          additionalProperties: false\n    SuffixFilter:\n      allOf:\n        - $ref: \"#/components/schemas/Filter\"\n        - type: object\n          title: \"suffix filter\"\n          description: \"This filter evaluates to 'true' if the 'value' is a suffix of the value of the indicated CloudEvents context attribute\"\n          properties:\n            suffix:\n              $ref: \"#/components/schemas/CloudEventsAttribute\"\n          additionalProperties: false\n    SqlFilter:\n      allOf:\n        - $ref: \"#/components/schemas/Filter\"\n        - type: object\n          description: \"CESQL filter\"\n          properties:\n            sql:\n              type: string\n              description: \"The CESQL expression\"\n          additionalProperties: true\n    CloudEventsAttribute:\n      type: object\n      description: \"CloudEvents defined attributes.\"\n      additionalProperties: # extension attributes\n        type: string\n      properties:\n        id:\n          type: string\n          description: Identifies the event.\n        source:\n          type: string\n          description: Identifies the context in which an event happened.\n        specversion:\n          type: string\n          description: The version of the CloudEvents specification which the event uses.\n        type:\n          type: string\n          description: Describes the type of event related to the originating occurrence.\n        datacontenttype:\n          type: string\n          description: Content type of the data value.\n        dataschema:\n          type: string\n          description: Identifies the schema that data adheres to.\n        subject:\n          type: string\n          description: Describes the subject of the event in the context of the event producer.\n        time:\n          type: string\n          description: Timestamp of when the occurrence happened.\n    ProtocolSettings:\n      type: object\n      additionalProperties: false\n    HTTPSettings:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/ProtocolSettings\"\n        - properties:\n            headers:\n              type: object\n              additionalProperties:\n                type: string\n            method:\n              type: string\n    MQTTSettings:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/ProtocolSettings\"\n        - properties:\n            topicName:\n              type: string\n            qos:\n              type: integer\n              format: int32\n            retain:\n              type: boolean\n            expiry:\n              type: integer\n              format: int32\n            userProperties:\n              type: object\n          required:\n            - topicName\n    AMQPSettings:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/ProtocolSettings\"\n        - properties:\n            address:\n              type: string\n            linkName:\n              type: string\n            senderSettlementMode:\n              type: string\n              enum: [\"settled\", \"unsettled\"]\n            linkProperties:\n              type: object\n              additionalProperties:\n                 type: string\n    ApacheKafkaSettings:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/ProtocolSettings\"\n        - properties:\n            topicName:\n              type: string\n            partitionKeyExtractor:\n              type: string\n            clientId:\n              type: string\n            ackMode:\n              type: integer\n          required:\n            - topicName\n    NATSSettings:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/ProtocolSettings\"\n        - properties:\n            subject:\n              type: string\n          required:\n            - subject\n    SinkCredential:\n      type: object\n      properties:\n         credentialType:\n            type: string\n            enum: [\"PLAIN\", \"ACCESSTOKEN\", \"REFRESHTOKEN\"]\n            description: \"The type of the credential.\"\n      additionalProperties: false\n    PlainCredential:\n      type: object\n      description: A plain credential as a combination of an identifier and a secret.\n      allOf:\n        - $ref: \"#/components/schemas/SinkCredential\"\n        - properties:\n            identifier:\n              description: The identifier might be an account or username.\n              type: string\n            secret:\n              description: The secret might be a password or passphrase.\n              type: string\n    AccessTokenCredential:\n      type: object\n      description: An access token credential.\n      allOf:\n        - $ref: \"#/components/schemas/SinkCredential\"\n        - properties:\n            accessToken:\n              description: REQUIRED. An access token is a previously acquired token granting access to the target resource.\n              type: string\n            accessTokenExpiresUtc:\n              type: string\n              format: date-time\n              description: RECOMMENDED. An absolute UTC instant at which the token shall be considered expired.\n            accessTokenType:\n              description: OPTIONAL. )Type of the access token (See https://tools.ietf.org/html/rfc6749#section-7.1).\n              type: string\n              default: bearer\n          required:\n            - accessToken\n            - accessTokenExpiresUtc\n    RefreshTokenCredential:\n      type: object\n      description: An access token credential with a refresh token.\n      allOf:\n        - $ref: \"#/components/schemas/AccessTokenCredential\"\n        - type: object\n          properties:\n            refreshToken:\n              description: REQUIRED. An refresh token credential used to acquire access tokens.\n              type: string\n            refreshTokenEndpoint:\n              type: string\n              format: uri\n              description: REQUIRED. A URL at which the refresh token can be traded for an access token.\n      required:\n        - refreshToken\n        - refreshTokenEndpoint\n"
		}
	},
	"Error": "parse: parse spec: paths: /subscriptions: get: operation \"getSubscriptions\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: resolve \"#/components/schemas/Subscription\": parse schema: allOf: [0]: parse schema: resolve \"#/components/schemas/SubscriptionRequest\": parse schema: property \"filters\": parse schema: item: parse schema: oneOf: [1]: parse schema: resolve \"#/components/schemas/AllFilter\": parse schema: allOf: [1]: parse schema: property \"all\": parse schema: item: parse schema: oneOf: [1]: parse schema: resolve \"#/components/schemas/AllFilter\": infinite recursion"
}