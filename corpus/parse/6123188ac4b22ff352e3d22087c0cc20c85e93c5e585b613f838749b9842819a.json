{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql"
		},
		"file": {
			"name": "people-v1.yaml",
			"size": 0,
			"path": "test/registry/src/googleapis.com/v1/services/people-v1.yaml",
			"byteSize": 174146,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    Address:\n      description: A person's physical address. May be a P.O. box or street address.\n        All fields are optional.\n      properties:\n        city:\n          description: The city of the address.\n          type: string\n        country:\n          description: The country of the address.\n          type: string\n        countryCode:\n          description: The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm)\n            country code of the address.\n          type: string\n        extendedAddress:\n          description: The extended address of the address; for example, the apartment\n            number.\n          type: string\n        formattedType:\n          description: Output only. The type of the address translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        formattedValue:\n          description: The unstructured value of the address. If this is not set by\n            the user it will be automatically constructed from structured values.\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the address.\n        poBox:\n          description: The P.O. box of the address.\n          type: string\n        postalCode:\n          description: The postal code of the address.\n          type: string\n        region:\n          description: The region of the address; for example, the state or province.\n          type: string\n        streetAddress:\n          description: The street address.\n          type: string\n        type:\n          description: 'The type of the address. The type can be custom or one of\n            these predefined values: * `home` * `work` * `other`'\n          type: string\n      type: object\n    AgeRangeType:\n      description: A person's age range.\n      properties:\n        ageRange:\n          description: The age range.\n          enum:\n          - AGE_RANGE_UNSPECIFIED\n          - LESS_THAN_EIGHTEEN\n          - EIGHTEEN_TO_TWENTY\n          - TWENTY_ONE_OR_OLDER\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the age range.\n      type: object\n    BatchCreateContactsRequest:\n      description: A request to create a batch of contacts.\n      properties:\n        contacts:\n          description: Required. The contact to create. Allows up to 200 contacts\n            in a single request.\n          items:\n            $ref: '#/components/schemas/ContactToCreate'\n          type: array\n        readMask:\n          description: 'Required. A field mask to restrict which fields on each person\n            are returned in the response. Multiple fields can be specified by separating\n            them with commas. If read mask is left empty, the post-mutate-get is skipped\n            and no data will be returned in the response. Valid values are: * addresses\n            * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos\n            * emailAddresses * events * externalIds * genders * imClients * interests\n            * locales * locations * memberships * metadata * miscKeywords * names\n            * nicknames * occupations * organizations * phoneNumbers * photos * relations\n            * sipAddresses * skills * urls * userDefined'\n          format: google-fieldmask\n          type: string\n        sources:\n          description: Optional. A mask of what source types to return in the post\n            mutate read. Defaults to READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE\n            if not set.\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n      type: object\n    BatchCreateContactsResponse:\n      description: If not successful, returns BatchCreateContactsErrorDetails which\n        contains a list of errors for each invalid contact. The response to a request\n        to create a batch of contacts.\n      properties:\n        createdPeople:\n          description: The contacts that were created, unless the request `read_mask`\n            is empty.\n          items:\n            $ref: '#/components/schemas/PersonResponse'\n          type: array\n      type: object\n    BatchDeleteContactsRequest:\n      description: A request to delete a batch of existing contacts.\n      properties:\n        resourceNames:\n          description: Required. The resource names of the contact to delete. It's\n            repeatable. Allows up to 500 resource names in a single request.\n          items:\n            type: string\n          type: array\n      type: object\n    BatchGetContactGroupsResponse:\n      description: The response to a batch get contact groups request.\n      properties:\n        responses:\n          description: The list of responses for each requested contact group resource.\n          items:\n            $ref: '#/components/schemas/ContactGroupResponse'\n          type: array\n      type: object\n    BatchUpdateContactsRequest:\n      description: A request to update a batch of contacts.\n      properties:\n        contacts:\n          additionalProperties:\n            $ref: '#/components/schemas/Person'\n          description: Required. A map of resource names to the person data to be\n            updated. Allows up to 200 contacts in a single request.\n          type: object\n        readMask:\n          description: 'Required. A field mask to restrict which fields on each person\n            are returned. Multiple fields can be specified by separating them with\n            commas. If read mask is left empty, the post-mutate-get is skipped and\n            no data will be returned in the response. Valid values are: * addresses\n            * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos\n            * emailAddresses * events * externalIds * genders * imClients * interests\n            * locales * locations * memberships * metadata * miscKeywords * names\n            * nicknames * occupations * organizations * phoneNumbers * photos * relations\n            * sipAddresses * skills * urls * userDefined'\n          format: google-fieldmask\n          type: string\n        sources:\n          description: Optional. A mask of what source types to return. Defaults to\n            READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        updateMask:\n          description: 'Required. A field mask to restrict which fields on the person\n            are updated. Multiple fields can be specified by separating them with\n            commas. All specified fields will be replaced, or cleared if left empty\n            for each person. Valid values are: * addresses * biographies * birthdays\n            * calendarUrls * clientData * emailAddresses * events * externalIds *\n            genders * imClients * interests * locales * locations * memberships *\n            miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n            * relations * sipAddresses * urls * userDefined'\n          format: google-fieldmask\n          type: string\n      type: object\n    BatchUpdateContactsResponse:\n      description: If not successful, returns BatchUpdateContactsErrorDetails, a list\n        of errors corresponding to each contact. The response to a request to update\n        a batch of contacts.\n      properties:\n        updateResult:\n          additionalProperties:\n            $ref: '#/components/schemas/PersonResponse'\n          description: A map of resource names to the contacts that were updated,\n            unless the request `read_mask` is empty.\n          type: object\n      type: object\n    Biography:\n      description: A person's short biography.\n      properties:\n        contentType:\n          description: The content type of the biography.\n          enum:\n          - CONTENT_TYPE_UNSPECIFIED\n          - TEXT_PLAIN\n          - TEXT_HTML\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the biography.\n        value:\n          description: The short biography.\n          type: string\n      type: object\n    Birthday:\n      description: A person's birthday. At least one of the `date` and `text` fields\n        are specified. The `date` and `text` fields typically represent the same date,\n        but are not guaranteed to.\n      properties:\n        date:\n          $ref: '#/components/schemas/Date'\n          description: The date of the birthday.\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the birthday.\n        text:\n          description: A free-form string representing the user's birthday.\n          type: string\n      type: object\n    BraggingRights:\n      description: '**DEPRECATED**: No data will be returned A person''s bragging\n        rights.'\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the bragging rights.\n        value:\n          description: The bragging rights; for example, `climbed mount everest`.\n          type: string\n      type: object\n    CalendarUrl:\n      description: A person's calendar URL.\n      properties:\n        formattedType:\n          description: Output only. The type of the calendar URL translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the calendar URL.\n        type:\n          description: 'The type of the calendar URL. The type can be custom or one\n            of these predefined values: * `home` * `freeBusy` * `work`'\n          type: string\n        url:\n          description: The calendar URL.\n          type: string\n      type: object\n    ClientData:\n      description: Arbitrary client data that is populated by clients. Duplicate keys\n        and values are allowed.\n      properties:\n        key:\n          description: The client specified key of the client data.\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the client data.\n        value:\n          description: The client specified value of the client data.\n          type: string\n      type: object\n    ContactGroup:\n      description: A contact group.\n      properties:\n        clientData:\n          description: The group's client data.\n          items:\n            $ref: '#/components/schemas/GroupClientData'\n          type: array\n        etag:\n          description: The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag)\n            of the resource. Used for web cache validation.\n          type: string\n        formattedName:\n          description: Output only. The name translated and formatted in the viewer's\n            account locale or the `Accept-Language` HTTP header locale for system\n            groups names. Group names set by the owner are the same as name.\n          readOnly: true\n          type: string\n        groupType:\n          description: Output only. The contact group type.\n          enum:\n          - GROUP_TYPE_UNSPECIFIED\n          - USER_CONTACT_GROUP\n          - SYSTEM_CONTACT_GROUP\n          readOnly: true\n          type: string\n        memberCount:\n          description: Output only. The total number of contacts in the group irrespective\n            of max members in specified in the request.\n          format: int32\n          readOnly: true\n          type: integer\n        memberResourceNames:\n          description: Output only. The list of contact person resource names that\n            are members of the contact group. The field is only populated for GET\n            requests and will only return as many members as `maxMembers` in the get\n            request.\n          items:\n            type: string\n          readOnly: true\n          type: array\n        metadata:\n          $ref: '#/components/schemas/ContactGroupMetadata'\n          description: Output only. Metadata about the contact group.\n          readOnly: true\n        name:\n          description: The contact group name set by the group owner or a system provided\n            name for system groups. For [`contactGroups.create`](/people/api/rest/v1/contactGroups/create)\n            or [`contactGroups.update`](/people/api/rest/v1/contactGroups/update)\n            the name must be unique to the users contact groups. Attempting to create\n            a group with a duplicate name will return a HTTP 409 error.\n          type: string\n        resourceName:\n          description: The resource name for the contact group, assigned by the server.\n            An ASCII string, in the form of `contactGroups/{contact_group_id}`.\n          type: string\n      type: object\n    ContactGroupMembership:\n      description: A Google contact group membership.\n      properties:\n        contactGroupId:\n          description: Output only. The contact group ID for the contact group membership.\n          readOnly: true\n          type: string\n        contactGroupResourceName:\n          description: The resource name for the contact group, assigned by the server.\n            An ASCII string, in the form of `contactGroups/{contact_group_id}`. Only\n            contact_group_resource_name can be used for modifying memberships. Any\n            contact group membership can be removed, but only user group or \"myContacts\"\n            or \"starred\" system groups memberships can be added. A contact must always\n            have at least one contact group membership.\n          type: string\n      type: object\n    ContactGroupMetadata:\n      description: The metadata about a contact group.\n      properties:\n        deleted:\n          description: Output only. True if the contact group resource has been deleted.\n            Populated only for [`ListContactGroups`](/people/api/rest/v1/contactgroups/list)\n            requests that include a sync token.\n          readOnly: true\n          type: boolean\n        updateTime:\n          description: Output only. The time the group was last updated.\n          format: google-datetime\n          readOnly: true\n          type: string\n      type: object\n    ContactGroupResponse:\n      description: The response for a specific contact group.\n      properties:\n        contactGroup:\n          $ref: '#/components/schemas/ContactGroup'\n          description: The contact group.\n        requestedResourceName:\n          description: The original requested resource name.\n          type: string\n        status:\n          $ref: '#/components/schemas/Status'\n          description: The status of the response.\n      type: object\n    ContactToCreate:\n      description: A wrapper that contains the person data to populate a newly created\n        source.\n      properties:\n        contactPerson:\n          $ref: '#/components/schemas/Person'\n          description: Required. The person data to populate a newly created source.\n      type: object\n    CopyOtherContactToMyContactsGroupRequest:\n      description: A request to copy an \"Other contact\" to my contacts group.\n      properties:\n        copyMask:\n          description: 'Required. A field mask to restrict which fields are copied\n            into the new contact. Valid values are: * emailAddresses * names * phoneNumbers'\n          format: google-fieldmask\n          type: string\n        readMask:\n          description: 'Optional. A field mask to restrict which fields on the person\n            are returned. Multiple fields can be specified by separating them with\n            commas. Defaults to the copy mask with metadata and membership fields\n            if not set. Valid values are: * addresses * ageRanges * biographies *\n            birthdays * calendarUrls * clientData * coverPhotos * emailAddresses *\n            events * externalIds * genders * imClients * interests * locales * locations\n            * memberships * metadata * miscKeywords * names * nicknames * occupations\n            * organizations * phoneNumbers * photos * relations * sipAddresses * skills\n            * urls * userDefined'\n          format: google-fieldmask\n          type: string\n        sources:\n          description: Optional. A mask of what source types to return. Defaults to\n            READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n      type: object\n    CoverPhoto:\n      description: A person's cover photo. A large image shown on the person's profile\n        page that represents who they are or what they care about.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the cover photo.\n        url:\n          description: The URL of the cover photo.\n          type: string\n      type: object\n    CreateContactGroupRequest:\n      description: A request to create a new contact group.\n      properties:\n        contactGroup:\n          $ref: '#/components/schemas/ContactGroup'\n          description: Required. The contact group to create.\n        readGroupFields:\n          description: 'Optional. A field mask to restrict which fields on the group\n            are returned. Defaults to `metadata`, `groupType`, and `name` if not set\n            or set to empty. Valid fields are: * clientData * groupType * metadata\n            * name'\n          format: google-fieldmask\n          type: string\n      type: object\n    Date:\n      description: 'Represents a whole or partial calendar date, such as a birthday.\n        The time of day and time zone are either specified elsewhere or are insignificant.\n        The date is relative to the Gregorian Calendar. This can represent one of\n        the following: * A full date, with non-zero year, month, and day values *\n        A month and day value, with a zero year, such as an anniversary * A year on\n        its own, with zero month and day values * A year and month value, with a zero\n        day, such as a credit card expiration date Related types are google.type.TimeOfDay\n        and `google.protobuf.Timestamp`.'\n      properties:\n        day:\n          description: Day of a month. Must be from 1 to 31 and valid for the year\n            and month, or 0 to specify a year by itself or a year and month where\n            the day isn't significant.\n          format: int32\n          type: integer\n        month:\n          description: Month of a year. Must be from 1 to 12, or 0 to specify a year\n            without a month and day.\n          format: int32\n          type: integer\n        year:\n          description: Year of the date. Must be from 1 to 9999, or 0 to specify a\n            date without a year.\n          format: int32\n          type: integer\n      type: object\n    DeleteContactPhotoResponse:\n      description: The response for deleting a contact's photo.\n      properties:\n        person:\n          $ref: '#/components/schemas/Person'\n          description: The updated person, if person_fields is set in the DeleteContactPhotoRequest;\n            otherwise this will be unset.\n      type: object\n    DomainMembership:\n      description: A Google Workspace Domain membership.\n      properties:\n        inViewerDomain:\n          description: True if the person is in the viewer's Google Workspace domain.\n          type: boolean\n      type: object\n    EmailAddress:\n      description: A person's email address.\n      properties:\n        displayName:\n          description: The display name of the email.\n          type: string\n        formattedType:\n          description: Output only. The type of the email address translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the email address.\n        type:\n          description: 'The type of the email address. The type can be custom or one\n            of these predefined values: * `home` * `work` * `other`'\n          type: string\n        value:\n          description: The email address.\n          type: string\n      type: object\n    Empty:\n      description: 'A generic empty message that you can re-use to avoid defining\n        duplicated empty messages in your APIs. A typical example is to use it as\n        the request or the response type of an API method. For instance: service Foo\n        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON\n        representation for `Empty` is empty JSON object `{}`.'\n      properties: {}\n      type: object\n    Event:\n      description: An event related to the person.\n      properties:\n        date:\n          $ref: '#/components/schemas/Date'\n          description: The date of the event.\n        formattedType:\n          description: Output only. The type of the event translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the event.\n        type:\n          description: 'The type of the event. The type can be custom or one of these\n            predefined values: * `anniversary` * `other`'\n          type: string\n      type: object\n    ExternalId:\n      description: An identifier from an external entity related to the person.\n      properties:\n        formattedType:\n          description: Output only. The type of the event translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the external ID.\n        type:\n          description: 'The type of the external ID. The type can be custom or one\n            of these predefined values: * `account` * `customer` * `loginId` * `network`\n            * `organization`'\n          type: string\n        value:\n          description: The value of the external ID.\n          type: string\n      type: object\n    FieldMetadata:\n      description: Metadata about a field.\n      properties:\n        primary:\n          description: Output only. True if the field is the primary field for all\n            sources in the person. Each person will have at most one field with `primary`\n            set to true.\n          readOnly: true\n          type: boolean\n        source:\n          $ref: '#/components/schemas/Source'\n          description: The source of the field.\n        sourcePrimary:\n          description: True if the field is the primary field for the source. Each\n            source must have at most one field with `source_primary` set to true.\n          type: boolean\n        verified:\n          description: Output only. True if the field is verified; false if the field\n            is unverified. A verified field is typically a name, email address, phone\n            number, or website that has been confirmed to be owned by the person.\n          readOnly: true\n          type: boolean\n      type: object\n    FileAs:\n      description: The name that should be used to sort the person in a list.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the file-as.\n        value:\n          description: The file-as value\n          type: string\n      type: object\n    Gender:\n      description: A person's gender.\n      properties:\n        addressMeAs:\n          description: 'Free form text field for pronouns that should be used to address\n            the person. Common values are: * `he`/`him` * `she`/`her` * `they`/`them`'\n          type: string\n        formattedValue:\n          description: Output only. The value of the gender translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n            Unspecified or custom value are not localized.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the gender.\n        value:\n          description: 'The gender for the person. The gender can be custom or one\n            of these predefined values: * `male` * `female` * `unspecified`'\n          type: string\n      type: object\n    GetPeopleResponse:\n      description: The response to a get request for a list of people by resource\n        name.\n      properties:\n        responses:\n          description: The response for each requested resource name.\n          items:\n            $ref: '#/components/schemas/PersonResponse'\n          type: array\n      type: object\n    GroupClientData:\n      description: Arbitrary client data that is populated by clients. Duplicate keys\n        and values are allowed.\n      properties:\n        key:\n          description: The client specified key of the client data.\n          type: string\n        value:\n          description: The client specified value of the client data.\n          type: string\n      type: object\n    ImClient:\n      description: A person's instant messaging client.\n      properties:\n        formattedProtocol:\n          description: Output only. The protocol of the IM client formatted in the\n            viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        formattedType:\n          description: Output only. The type of the IM client translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the IM client.\n        protocol:\n          description: 'The protocol of the IM client. The protocol can be custom\n            or one of these predefined values: * `aim` * `msn` * `yahoo` * `skype`\n            * `qq` * `googleTalk` * `icq` * `jabber` * `netMeeting`'\n          type: string\n        type:\n          description: 'The type of the IM client. The type can be custom or one of\n            these predefined values: * `home` * `work` * `other`'\n          type: string\n        username:\n          description: The user name used in the IM client.\n          type: string\n      type: object\n    Interest:\n      description: One of the person's interests.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the interest.\n        value:\n          description: The interest; for example, `stargazing`.\n          type: string\n      type: object\n    ListConnectionsResponse:\n      description: The response to a request for the authenticated user's connections.\n      properties:\n        connections:\n          description: The list of people that the requestor is connected to.\n          items:\n            $ref: '#/components/schemas/Person'\n          type: array\n        nextPageToken:\n          description: A token, which can be sent as `page_token` to retrieve the\n            next page. If this field is omitted, there are no subsequent pages.\n          type: string\n        nextSyncToken:\n          description: A token, which can be sent as `sync_token` to retrieve changes\n            since the last request. Request must set `request_sync_token` to return\n            the sync token. When the response is paginated, only the last page will\n            contain `nextSyncToken`.\n          type: string\n        totalItems:\n          description: The total number of items in the list without pagination.\n          format: int32\n          type: integer\n        totalPeople:\n          description: '**DEPRECATED** (Please use totalItems) The total number of\n            people in the list without pagination.'\n          format: int32\n          type: integer\n      type: object\n    ListContactGroupsResponse:\n      description: The response to a list contact groups request.\n      properties:\n        contactGroups:\n          description: The list of contact groups. Members of the contact groups are\n            not populated.\n          items:\n            $ref: '#/components/schemas/ContactGroup'\n          type: array\n        nextPageToken:\n          description: The token that can be used to retrieve the next page of results.\n          type: string\n        nextSyncToken:\n          description: The token that can be used to retrieve changes since the last\n            request.\n          type: string\n        totalItems:\n          description: The total number of items in the list without pagination.\n          format: int32\n          type: integer\n      type: object\n    ListDirectoryPeopleResponse:\n      description: The response to a request for the authenticated user's domain directory.\n      properties:\n        nextPageToken:\n          description: A token, which can be sent as `page_token` to retrieve the\n            next page. If this field is omitted, there are no subsequent pages.\n          type: string\n        nextSyncToken:\n          description: A token, which can be sent as `sync_token` to retrieve changes\n            since the last request. Request must set `request_sync_token` to return\n            the sync token.\n          type: string\n        people:\n          description: The list of people in the domain directory.\n          items:\n            $ref: '#/components/schemas/Person'\n          type: array\n      type: object\n    ListOtherContactsResponse:\n      description: The response to a request for the authenticated user's \"Other contacts\".\n      properties:\n        nextPageToken:\n          description: A token, which can be sent as `page_token` to retrieve the\n            next page. If this field is omitted, there are no subsequent pages.\n          type: string\n        nextSyncToken:\n          description: A token, which can be sent as `sync_token` to retrieve changes\n            since the last request. Request must set `request_sync_token` to return\n            the sync token.\n          type: string\n        otherContacts:\n          description: The list of \"Other contacts\" returned as Person resources.\n            \"Other contacts\" support a limited subset of fields. See ListOtherContactsRequest.request_mask\n            for more detailed information.\n          items:\n            $ref: '#/components/schemas/Person'\n          type: array\n        totalSize:\n          description: The total number of other contacts in the list without pagination.\n          format: int32\n          type: integer\n      type: object\n    Locale:\n      description: A person's locale preference.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the locale.\n        value:\n          description: The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47)\n            language tag representing the locale.\n          type: string\n      type: object\n    Location:\n      description: A person's location.\n      properties:\n        buildingId:\n          description: The building identifier.\n          type: string\n        current:\n          description: Whether the location is the current location.\n          type: boolean\n        deskCode:\n          description: The individual desk location.\n          type: string\n        floor:\n          description: The floor name or number.\n          type: string\n        floorSection:\n          description: The floor section in `floor_name`.\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the location.\n        type:\n          description: 'The type of the location. The type can be custom or one of\n            these predefined values: * `desk` * `grewUp`'\n          type: string\n        value:\n          description: The free-form value of the location.\n          type: string\n      type: object\n    Membership:\n      description: A person's membership in a group. Only contact group memberships\n        can be modified.\n      properties:\n        contactGroupMembership:\n          $ref: '#/components/schemas/ContactGroupMembership'\n          description: The contact group membership.\n        domainMembership:\n          $ref: '#/components/schemas/DomainMembership'\n          description: Output only. The domain membership.\n          readOnly: true\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the membership.\n      type: object\n    MiscKeyword:\n      description: A person's miscellaneous keyword.\n      properties:\n        formattedType:\n          description: Output only. The type of the miscellaneous keyword translated\n            and formatted in the viewer's account locale or the `Accept-Language`\n            HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the miscellaneous keyword.\n        type:\n          description: The miscellaneous keyword type.\n          enum:\n          - TYPE_UNSPECIFIED\n          - OUTLOOK_BILLING_INFORMATION\n          - OUTLOOK_DIRECTORY_SERVER\n          - OUTLOOK_KEYWORD\n          - OUTLOOK_MILEAGE\n          - OUTLOOK_PRIORITY\n          - OUTLOOK_SENSITIVITY\n          - OUTLOOK_SUBJECT\n          - OUTLOOK_USER\n          - HOME\n          - WORK\n          - OTHER\n          type: string\n        value:\n          description: The value of the miscellaneous keyword.\n          type: string\n      type: object\n    ModifyContactGroupMembersRequest:\n      description: A request to modify an existing contact group's members. Contacts\n        can be removed from any group but they can only be added to a user group or\n        \"myContacts\" or \"starred\" system groups.\n      properties:\n        resourceNamesToAdd:\n          description: Optional. The resource names of the contact people to add in\n            the form of `people/{person_id}`. The total number of resource names in\n            `resource_names_to_add` and `resource_names_to_remove` must be less than\n            or equal to 1000.\n          items:\n            type: string\n          type: array\n        resourceNamesToRemove:\n          description: Optional. The resource names of the contact people to remove\n            in the form of `people/{person_id}`. The total number of resource names\n            in `resource_names_to_add` and `resource_names_to_remove` must be less\n            than or equal to 1000.\n          items:\n            type: string\n          type: array\n      type: object\n    ModifyContactGroupMembersResponse:\n      description: The response to a modify contact group members request.\n      properties:\n        canNotRemoveLastContactGroupResourceNames:\n          description: The contact people resource names that cannot be removed from\n            their last contact group.\n          items:\n            type: string\n          type: array\n        notFoundResourceNames:\n          description: The contact people resource names that were not found.\n          items:\n            type: string\n          type: array\n      type: object\n    Name:\n      description: A person's name. If the name is a mononym, the family name is empty.\n      properties:\n        displayName:\n          description: Output only. The display name formatted according to the locale\n            specified by the viewer's account or the `Accept-Language` HTTP header.\n          readOnly: true\n          type: string\n        displayNameLastFirst:\n          description: Output only. The display name with the last name first formatted\n            according to the locale specified by the viewer's account or the `Accept-Language`\n            HTTP header.\n          readOnly: true\n          type: string\n        familyName:\n          description: The family name.\n          type: string\n        givenName:\n          description: The given name.\n          type: string\n        honorificPrefix:\n          description: The honorific prefixes, such as `Mrs.` or `Dr.`\n          type: string\n        honorificSuffix:\n          description: The honorific suffixes, such as `Jr.`\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the name.\n        middleName:\n          description: The middle name(s).\n          type: string\n        phoneticFamilyName:\n          description: The family name spelled as it sounds.\n          type: string\n        phoneticFullName:\n          description: The full name spelled as it sounds.\n          type: string\n        phoneticGivenName:\n          description: The given name spelled as it sounds.\n          type: string\n        phoneticHonorificPrefix:\n          description: The honorific prefixes spelled as they sound.\n          type: string\n        phoneticHonorificSuffix:\n          description: The honorific suffixes spelled as they sound.\n          type: string\n        phoneticMiddleName:\n          description: The middle name(s) spelled as they sound.\n          type: string\n        unstructuredName:\n          description: The free form name value.\n          type: string\n      type: object\n    Nickname:\n      description: A person's nickname.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the nickname.\n        type:\n          description: The type of the nickname.\n          enum:\n          - DEFAULT\n          - MAIDEN_NAME\n          - INITIALS\n          - GPLUS\n          - OTHER_NAME\n          - ALTERNATE_NAME\n          - SHORT_NAME\n          type: string\n        value:\n          description: The nickname.\n          type: string\n      type: object\n    Occupation:\n      description: A person's occupation.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the occupation.\n        value:\n          description: The occupation; for example, `carpenter`.\n          type: string\n      type: object\n    Organization:\n      description: A person's past or current organization. Overlapping date ranges\n        are permitted.\n      properties:\n        costCenter:\n          description: The person's cost center at the organization.\n          type: string\n        current:\n          description: True if the organization is the person's current organization;\n            false if the organization is a past organization.\n          type: boolean\n        department:\n          description: The person's department at the organization.\n          type: string\n        domain:\n          description: The domain name associated with the organization; for example,\n            `google.com`.\n          type: string\n        endDate:\n          $ref: '#/components/schemas/Date'\n          description: The end date when the person left the organization.\n        formattedType:\n          description: Output only. The type of the organization translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        fullTimeEquivalentMillipercent:\n          description: The person's full-time equivalent millipercent within the organization\n            (100000 = 100%).\n          format: int32\n          type: integer\n        jobDescription:\n          description: The person's job description at the organization.\n          type: string\n        location:\n          description: The location of the organization office the person works at.\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the organization.\n        name:\n          description: The name of the organization.\n          type: string\n        phoneticName:\n          description: The phonetic name of the organization.\n          type: string\n        startDate:\n          $ref: '#/components/schemas/Date'\n          description: The start date when the person joined the organization.\n        symbol:\n          description: The symbol associated with the organization; for example, a\n            stock ticker symbol, abbreviation, or acronym.\n          type: string\n        title:\n          description: The person's job title at the organization.\n          type: string\n        type:\n          description: 'The type of the organization. The type can be custom or one\n            of these predefined values: * `work` * `school`'\n          type: string\n      type: object\n    Person:\n      description: Information about a person merged from various data sources such\n        as the authenticated user's contacts and profile data. Most fields can have\n        multiple items. The items in a field have no guaranteed order, but each non-empty\n        field is guaranteed to have exactly one field with `metadata.primary` set\n        to true.\n      properties:\n        addresses:\n          description: The person's street addresses.\n          items:\n            $ref: '#/components/schemas/Address'\n          type: array\n        ageRange:\n          description: Output only. **DEPRECATED** (Please use `person.ageRanges`\n            instead) The person's age range.\n          enum:\n          - AGE_RANGE_UNSPECIFIED\n          - LESS_THAN_EIGHTEEN\n          - EIGHTEEN_TO_TWENTY\n          - TWENTY_ONE_OR_OLDER\n          readOnly: true\n          type: string\n        ageRanges:\n          description: Output only. The person's age ranges.\n          items:\n            $ref: '#/components/schemas/AgeRangeType'\n          readOnly: true\n          type: array\n        biographies:\n          description: The person's biographies. This field is a singleton for contact\n            sources.\n          items:\n            $ref: '#/components/schemas/Biography'\n          type: array\n        birthdays:\n          description: The person's birthdays. This field is a singleton for contact\n            sources.\n          items:\n            $ref: '#/components/schemas/Birthday'\n          type: array\n        braggingRights:\n          description: '**DEPRECATED**: No data will be returned The person''s bragging\n            rights.'\n          items:\n            $ref: '#/components/schemas/BraggingRights'\n          type: array\n        calendarUrls:\n          description: The person's calendar URLs.\n          items:\n            $ref: '#/components/schemas/CalendarUrl'\n          type: array\n        clientData:\n          description: The person's client data.\n          items:\n            $ref: '#/components/schemas/ClientData'\n          type: array\n        coverPhotos:\n          description: Output only. The person's cover photos.\n          items:\n            $ref: '#/components/schemas/CoverPhoto'\n          readOnly: true\n          type: array\n        emailAddresses:\n          description: The person's email addresses. For `people.connections.list`\n            and `otherContacts.list` the number of email addresses is limited to 100.\n            If a Person has more email addresses the entire set can be obtained by\n            calling GetPeople.\n          items:\n            $ref: '#/components/schemas/EmailAddress'\n          type: array\n        etag:\n          description: The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag)\n            of the resource. Used for web cache validation.\n          type: string\n        events:\n          description: The person's events.\n          items:\n            $ref: '#/components/schemas/Event'\n          type: array\n        externalIds:\n          description: The person's external IDs.\n          items:\n            $ref: '#/components/schemas/ExternalId'\n          type: array\n        fileAses:\n          description: The person's file-ases.\n          items:\n            $ref: '#/components/schemas/FileAs'\n          type: array\n        genders:\n          description: The person's genders. This field is a singleton for contact\n            sources.\n          items:\n            $ref: '#/components/schemas/Gender'\n          type: array\n        imClients:\n          description: The person's instant messaging clients.\n          items:\n            $ref: '#/components/schemas/ImClient'\n          type: array\n        interests:\n          description: The person's interests.\n          items:\n            $ref: '#/components/schemas/Interest'\n          type: array\n        locales:\n          description: The person's locale preferences.\n          items:\n            $ref: '#/components/schemas/Locale'\n          type: array\n        locations:\n          description: The person's locations.\n          items:\n            $ref: '#/components/schemas/Location'\n          type: array\n        memberships:\n          description: The person's group memberships.\n          items:\n            $ref: '#/components/schemas/Membership'\n          type: array\n        metadata:\n          $ref: '#/components/schemas/PersonMetadata'\n          description: Output only. Metadata about the person.\n          readOnly: true\n        miscKeywords:\n          description: The person's miscellaneous keywords.\n          items:\n            $ref: '#/components/schemas/MiscKeyword'\n          type: array\n        names:\n          description: The person's names. This field is a singleton for contact sources.\n          items:\n            $ref: '#/components/schemas/Name'\n          type: array\n        nicknames:\n          description: The person's nicknames.\n          items:\n            $ref: '#/components/schemas/Nickname'\n          type: array\n        occupations:\n          description: The person's occupations.\n          items:\n            $ref: '#/components/schemas/Occupation'\n          type: array\n        organizations:\n          description: The person's past or current organizations.\n          items:\n            $ref: '#/components/schemas/Organization'\n          type: array\n        phoneNumbers:\n          description: The person's phone numbers. For `people.connections.list` and\n            `otherContacts.list` the number of phone numbers is limited to 100. If\n            a Person has more phone numbers the entire set can be obtained by calling\n            GetPeople.\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n          type: array\n        photos:\n          description: Output only. The person's photos.\n          items:\n            $ref: '#/components/schemas/Photo'\n          readOnly: true\n          type: array\n        relations:\n          description: The person's relations.\n          items:\n            $ref: '#/components/schemas/Relation'\n          type: array\n        relationshipInterests:\n          description: 'Output only. **DEPRECATED**: No data will be returned The\n            person''s relationship interests.'\n          items:\n            $ref: '#/components/schemas/RelationshipInterest'\n          readOnly: true\n          type: array\n        relationshipStatuses:\n          description: 'Output only. **DEPRECATED**: No data will be returned The\n            person''s relationship statuses.'\n          items:\n            $ref: '#/components/schemas/RelationshipStatus'\n          readOnly: true\n          type: array\n        residences:\n          description: '**DEPRECATED**: (Please use `person.locations` instead) The\n            person''s residences.'\n          items:\n            $ref: '#/components/schemas/Residence'\n          type: array\n        resourceName:\n          description: The resource name for the person, assigned by the server. An\n            ASCII string with a max length of 27 characters, in the form of `people/{person_id}`.\n          type: string\n        sipAddresses:\n          description: The person's SIP addresses.\n          items:\n            $ref: '#/components/schemas/SipAddress'\n          type: array\n        skills:\n          description: The person's skills.\n          items:\n            $ref: '#/components/schemas/Skill'\n          type: array\n        taglines:\n          description: 'Output only. **DEPRECATED**: No data will be returned The\n            person''s taglines.'\n          items:\n            $ref: '#/components/schemas/Tagline'\n          readOnly: true\n          type: array\n        urls:\n          description: The person's associated URLs.\n          items:\n            $ref: '#/components/schemas/Url'\n          type: array\n        userDefined:\n          description: The person's user defined data.\n          items:\n            $ref: '#/components/schemas/UserDefined'\n          type: array\n      type: object\n    PersonMetadata:\n      description: The metadata about a person.\n      properties:\n        deleted:\n          description: Output only. True if the person resource has been deleted.\n            Populated only for `people.connections.list` and `otherContacts.list`\n            sync requests.\n          readOnly: true\n          type: boolean\n        linkedPeopleResourceNames:\n          description: Output only. Resource names of people linked to this resource.\n          items:\n            type: string\n          readOnly: true\n          type: array\n        objectType:\n          description: Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType`\n            instead) The type of the person object.\n          enum:\n          - OBJECT_TYPE_UNSPECIFIED\n          - PERSON\n          - PAGE\n          readOnly: true\n          type: string\n        previousResourceNames:\n          description: Output only. Any former resource names this person has had.\n            Populated only for `people.connections.list` requests that include a sync\n            token. The resource name may change when adding or removing fields that\n            link a contact and profile such as a verified email, verified phone number,\n            or profile URL.\n          items:\n            type: string\n          readOnly: true\n          type: array\n        sources:\n          description: The sources of data for the person.\n          items:\n            $ref: '#/components/schemas/Source'\n          type: array\n      type: object\n    PersonResponse:\n      description: The response for a single person\n      properties:\n        httpStatusCode:\n          description: '**DEPRECATED** (Please use status instead) [HTTP 1.1 status\n            code] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).'\n          format: int32\n          type: integer\n        person:\n          $ref: '#/components/schemas/Person'\n          description: The person.\n        requestedResourceName:\n          description: The original requested resource name. May be different than\n            the resource name on the returned person. The resource name can change\n            when adding or removing fields that link a contact and profile such as\n            a verified email, verified phone number, or a profile URL.\n          type: string\n        status:\n          $ref: '#/components/schemas/Status'\n          description: The status of the response.\n      type: object\n    PhoneNumber:\n      description: A person's phone number.\n      properties:\n        canonicalForm:\n          description: Output only. The canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf)\n            form of the phone number.\n          readOnly: true\n          type: string\n        formattedType:\n          description: Output only. The type of the phone number translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the phone number.\n        type:\n          description: 'The type of the phone number. The type can be custom or one\n            of these predefined values: * `home` * `work` * `mobile` * `homeFax` *\n            `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` * `main`\n            * `googleVoice` * `other`'\n          type: string\n        value:\n          description: The phone number.\n          type: string\n      type: object\n    Photo:\n      description: A person's photo. A picture shown next to the person's name to\n        help others recognize the person.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the photo.\n        url:\n          description: 'The URL of the photo. You can change the desired size by appending\n            a query parameter `sz={size}` at the end of the url, where {size} is the\n            size in pixels. Example: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50'\n          type: string\n      type: object\n    ProfileMetadata:\n      description: The metadata about a profile.\n      properties:\n        objectType:\n          description: Output only. The profile object type.\n          enum:\n          - OBJECT_TYPE_UNSPECIFIED\n          - PERSON\n          - PAGE\n          readOnly: true\n          type: string\n        userTypes:\n          description: Output only. The user types.\n          items:\n            enum:\n            - USER_TYPE_UNKNOWN\n            - GOOGLE_USER\n            - GPLUS_USER\n            - GOOGLE_APPS_USER\n            type: string\n          readOnly: true\n          type: array\n      type: object\n    Relation:\n      description: A person's relation to another person.\n      properties:\n        formattedType:\n          description: Output only. The type of the relation translated and formatted\n            in the viewer's account locale or the locale specified in the Accept-Language\n            HTTP header.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the relation.\n        person:\n          description: The name of the other person this relation refers to.\n          type: string\n        type:\n          description: 'The person''s relation to the other person. The type can be\n            custom or one of these predefined values: * `spouse` * `child` * `mother`\n            * `father` * `parent` * `brother` * `sister` * `friend` * `relative` *\n            `domesticPartner` * `manager` * `assistant` * `referredBy` * `partner`'\n          type: string\n      type: object\n    RelationshipInterest:\n      description: '**DEPRECATED**: No data will be returned A person''s relationship\n        interest .'\n      properties:\n        formattedValue:\n          description: Output only. The value of the relationship interest translated\n            and formatted in the viewer's account locale or the locale specified in\n            the Accept-Language HTTP header.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the relationship interest.\n        value:\n          description: 'The kind of relationship the person is looking for. The value\n            can be custom or one of these predefined values: * `friend` * `date` *\n            `relationship` * `networking`'\n          type: string\n      type: object\n    RelationshipStatus:\n      description: '**DEPRECATED**: No data will be returned A person''s relationship\n        status.'\n      properties:\n        formattedValue:\n          description: Output only. The value of the relationship status translated\n            and formatted in the viewer's account locale or the `Accept-Language`\n            HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the relationship status.\n        value:\n          description: 'The relationship status. The value can be custom or one of\n            these predefined values: * `single` * `inARelationship` * `engaged` *\n            `married` * `itsComplicated` * `openRelationship` * `widowed` * `inDomesticPartnership`\n            * `inCivilUnion`'\n          type: string\n      type: object\n    Residence:\n      description: '**DEPRECATED**: Please use `person.locations` instead. A person''s\n        past or current residence.'\n      properties:\n        current:\n          description: True if the residence is the person's current residence; false\n            if the residence is a past residence.\n          type: boolean\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the residence.\n        value:\n          description: The address of the residence.\n          type: string\n      type: object\n    SearchDirectoryPeopleResponse:\n      description: The response to a request for people in the authenticated user's\n        domain directory that match the specified query.\n      properties:\n        nextPageToken:\n          description: A token, which can be sent as `page_token` to retrieve the\n            next page. If this field is omitted, there are no subsequent pages.\n          type: string\n        people:\n          description: The list of people in the domain directory that match the query.\n          items:\n            $ref: '#/components/schemas/Person'\n          type: array\n        totalSize:\n          description: The total number of items in the list without pagination.\n          format: int32\n          type: integer\n      type: object\n    SearchResponse:\n      description: The response to a search request for the authenticated user, given\n        a query.\n      properties:\n        results:\n          description: The results of the request.\n          items:\n            $ref: '#/components/schemas/SearchResult'\n          type: array\n      type: object\n    SearchResult:\n      description: A result of a search query.\n      properties:\n        person:\n          $ref: '#/components/schemas/Person'\n          description: The matched Person.\n      type: object\n    SipAddress:\n      description: A person's SIP address. Session Initial Protocol addresses are\n        used for VoIP communications to make voice or video calls over the internet.\n      properties:\n        formattedType:\n          description: Output only. The type of the SIP address translated and formatted\n            in the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the SIP address.\n        type:\n          description: 'The type of the SIP address. The type can be custom or or\n            one of these predefined values: * `home` * `work` * `mobile` * `other`'\n          type: string\n        value:\n          description: The SIP address in the [RFC 3261 19.1](https://tools.ietf.org/html/rfc3261#section-19.1)\n            SIP URI format.\n          type: string\n      type: object\n    Skill:\n      description: A skill that the person has.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the skill.\n        value:\n          description: The skill; for example, `underwater basket weaving`.\n          type: string\n      type: object\n    Source:\n      description: The source of a field.\n      properties:\n        etag:\n          description: '**Only populated in `person.metadata.sources`.** The [HTTP\n            entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the source. Used\n            for web cache validation.'\n          type: string\n        id:\n          description: The unique identifier within the source type generated by the\n            server.\n          type: string\n        profileMetadata:\n          $ref: '#/components/schemas/ProfileMetadata'\n          description: Output only. **Only populated in `person.metadata.sources`.**\n            Metadata about a source of type PROFILE.\n          readOnly: true\n        type:\n          description: The source type.\n          enum:\n          - SOURCE_TYPE_UNSPECIFIED\n          - ACCOUNT\n          - PROFILE\n          - DOMAIN_PROFILE\n          - CONTACT\n          - OTHER_CONTACT\n          - DOMAIN_CONTACT\n          type: string\n        updateTime:\n          description: Output only. **Only populated in `person.metadata.sources`.**\n            Last update timestamp of this source.\n          format: google-datetime\n          readOnly: true\n          type: string\n      type: object\n    Status:\n      description: 'The `Status` type defines a logical error model that is suitable\n        for different programming environments, including REST APIs and RPC APIs.\n        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\n        three pieces of data: error code, error message, and error details. You can\n        find out more about this error model and how to work with it in the [API Design\n        Guide](https://cloud.google.com/apis/design/errors).'\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a\n            common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type\n                URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English.\n            Any user-facing error message should be localized and sent in the google.rpc.Status.details\n            field, or localized by the client.\n          type: string\n      type: object\n    Tagline:\n      description: '**DEPRECATED**: No data will be returned A brief one-line description\n        of the person.'\n      properties:\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the tagline.\n        value:\n          description: The tagline.\n          type: string\n      type: object\n    UpdateContactGroupRequest:\n      description: A request to update an existing user contact group. All updated\n        fields will be replaced.\n      properties:\n        contactGroup:\n          $ref: '#/components/schemas/ContactGroup'\n          description: Required. The contact group to update.\n        readGroupFields:\n          description: 'Optional. A field mask to restrict which fields on the group\n            are returned. Defaults to `metadata`, `groupType`, and `name` if not set\n            or set to empty. Valid fields are: * clientData * groupType * memberCount\n            * metadata * name'\n          format: google-fieldmask\n          type: string\n        updateGroupFields:\n          description: 'Optional. A field mask to restrict which fields on the group\n            are updated. Multiple fields can be specified by separating them with\n            commas. Defaults to `name` if not set or set to empty. Updated fields\n            are replaced. Valid values are: * clientData * name'\n          format: google-fieldmask\n          type: string\n      type: object\n    UpdateContactPhotoRequest:\n      description: 'A request to update an existing contact''s photo. All requests\n        must have a valid photo format: JPEG or PNG.'\n      properties:\n        personFields:\n          description: 'Optional. A field mask to restrict which fields on the person\n            are returned. Multiple fields can be specified by separating them with\n            commas. Defaults to empty if not set, which will skip the post mutate\n            get. Valid values are: * addresses * ageRanges * biographies * birthdays\n            * calendarUrls * clientData * coverPhotos * emailAddresses * events *\n            externalIds * genders * imClients * interests * locales * locations *\n            memberships * metadata * miscKeywords * names * nicknames * occupations\n            * organizations * phoneNumbers * photos * relations * sipAddresses * skills\n            * urls * userDefined'\n          format: google-fieldmask\n          type: string\n        photoBytes:\n          description: Required. Raw photo bytes\n          format: byte\n          type: string\n        sources:\n          description: Optional. A mask of what source types to return. Defaults to\n            READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n      type: object\n    UpdateContactPhotoResponse:\n      description: The response for updating a contact's photo.\n      properties:\n        person:\n          $ref: '#/components/schemas/Person'\n          description: The updated person, if person_fields is set in the UpdateContactPhotoRequest;\n            otherwise this will be unset.\n      type: object\n    Url:\n      description: A person's associated URLs.\n      properties:\n        formattedType:\n          description: Output only. The type of the URL translated and formatted in\n            the viewer's account locale or the `Accept-Language` HTTP header locale.\n          readOnly: true\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the URL.\n        type:\n          description: 'The type of the URL. The type can be custom or one of these\n            predefined values: * `home` * `work` * `blog` * `profile` * `homePage`\n            * `ftp` * `reservations` * `appInstallPage`: website for a Currents application.\n            * `other`'\n          type: string\n        value:\n          description: The URL.\n          type: string\n      type: object\n    UserDefined:\n      description: Arbitrary user data that is populated by the end users.\n      properties:\n        key:\n          description: The end user specified key of the user defined data.\n          type: string\n        metadata:\n          $ref: '#/components/schemas/FieldMetadata'\n          description: Metadata about the user defined data.\n        value:\n          description: The end user specified value of the user defined data.\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/contacts: See, edit, download, and permanently\n              delete your contacts\n            https://www.googleapis.com/auth/contacts.other.readonly: See and download\n              contact info automatically saved in your \"Other contacts\"\n            https://www.googleapis.com/auth/contacts.readonly: See and download your\n              contacts\n            https://www.googleapis.com/auth/directory.readonly: See and download your\n              organization's GSuite directory\n            https://www.googleapis.com/auth/user.addresses.read: View your street\n              addresses\n            https://www.googleapis.com/auth/user.birthday.read: See and download your\n              exact date of birth\n            https://www.googleapis.com/auth/user.emails.read: See and download all\n              of your Google Account email addresses\n            https://www.googleapis.com/auth/user.gender.read: See your gender\n            https://www.googleapis.com/auth/user.organization.read: See your education,\n              work history and org info\n            https://www.googleapis.com/auth/user.phonenumbers.read: See and download\n              your personal phone numbers\n            https://www.googleapis.com/auth/userinfo.email: See your primary Google\n              Account email address\n            https://www.googleapis.com/auth/userinfo.profile: See your personal info,\n              including any personal info you've made publicly available\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/contacts: See, edit, download, and permanently\n              delete your contacts\n            https://www.googleapis.com/auth/contacts.other.readonly: See and download\n              contact info automatically saved in your \"Other contacts\"\n            https://www.googleapis.com/auth/contacts.readonly: See and download your\n              contacts\n            https://www.googleapis.com/auth/directory.readonly: See and download your\n              organization's GSuite directory\n            https://www.googleapis.com/auth/user.addresses.read: View your street\n              addresses\n            https://www.googleapis.com/auth/user.birthday.read: See and download your\n              exact date of birth\n            https://www.googleapis.com/auth/user.emails.read: See and download all\n              of your Google Account email addresses\n            https://www.googleapis.com/auth/user.gender.read: See your gender\n            https://www.googleapis.com/auth/user.organization.read: See your education,\n              work history and org info\n            https://www.googleapis.com/auth/user.phonenumbers.read: See and download\n              your personal phone numbers\n            https://www.googleapis.com/auth/userinfo.email: See your primary Google\n              Account email address\n            https://www.googleapis.com/auth/userinfo.profile: See your personal info,\n              including any personal info you've made publicly available\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources:\n    contactGroups:\n      id: google.people.contactGroups\n      methods:\n        batchGet:\n          operation:\n            $ref: '#/paths/~1v1~1contactGroups:batchGet/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create:\n          operation:\n            $ref: '#/paths/~1v1~1contactGroups/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1v1~1contactGroups~1{contactGroupsId}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1v1~1contactGroups~1{contactGroupsId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1contactGroups/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1v1~1contactGroups~1{contactGroupsId}/put'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: contactGroups\n      title: contactGroups\n    contactGroups.members:\n      id: google.people.contactGroups.members\n      methods:\n        modify:\n          operation:\n            $ref: '#/paths/~1v1~1contactGroups~1{contactGroupsId}~1members:modify/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: contactGroups.members\n      title: contactGroups.members\n    otherContacts:\n      id: google.people.otherContacts\n      methods:\n        copyOtherContactToMyContactsGroup:\n          operation:\n            $ref: '#/paths/~1v1~1otherContacts~1{otherContactsId}:copyOtherContactToMyContactsGroup/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1otherContacts/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        search:\n          operation:\n            $ref: '#/paths/~1v1~1otherContacts:search/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: otherContacts\n      title: otherContacts\n    people:\n      id: google.people.people\n      methods:\n        batchCreateContacts:\n          operation:\n            $ref: '#/paths/~1v1~1people:batchCreateContacts/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        batchDeleteContacts:\n          operation:\n            $ref: '#/paths/~1v1~1people:batchDeleteContacts/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        batchUpdateContacts:\n          operation:\n            $ref: '#/paths/~1v1~1people:batchUpdateContacts/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        createContact:\n          operation:\n            $ref: '#/paths/~1v1~1people:createContact/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        deleteContact:\n          operation:\n            $ref: '#/paths/~1v1~1people~1{peopleId}:deleteContact/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        deleteContactPhoto:\n          operation:\n            $ref: '#/paths/~1v1~1people~1{peopleId}:deleteContactPhoto/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1v1~1people~1{peopleId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        getBatchGet:\n          operation:\n            $ref: '#/paths/~1v1~1people:batchGet/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        listDirectoryPeople:\n          operation:\n            $ref: '#/paths/~1v1~1people:listDirectoryPeople/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        searchContacts:\n          operation:\n            $ref: '#/paths/~1v1~1people:searchContacts/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        searchDirectoryPeople:\n          operation:\n            $ref: '#/paths/~1v1~1people:searchDirectoryPeople/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        updateContact:\n          operation:\n            $ref: '#/paths/~1v1~1people~1{peopleId}:updateContact/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        updateContactPhoto:\n          operation:\n            $ref: '#/paths/~1v1~1people~1{peopleId}:updateContactPhoto/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: people\n      title: people\n    people.connections:\n      id: google.people.people.connections\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1people~1{peopleId}~1connections/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: people.connections\n      title: people.connections\nexternalDocs:\n  url: https://developers.google.com/people/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Provides access to information about profiles and contacts.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: People API\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\n  x-origin:\n  - converter:\n      url: https://github.com/mermade/oas-kit\n      version: 7.0.4\n    format: google\n    url: https://people.googleapis.com/$discovery/rest?version=v1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: people\nopenapi: 3.0.0\npaths:\n  /v1/contactGroups:\n    get:\n      description: List all contact groups owned by the authenticated user. Members\n        of the contact groups are not populated.\n      operationId: people.contactGroups.list\n      parameters:\n      - description: 'Optional. A field mask to restrict which fields on the group\n          are returned. Defaults to `metadata`, `groupType`, `memberCount`, and `name`\n          if not set or set to empty. Valid fields are: * clientData * groupType *\n          memberCount * metadata * name'\n        in: query\n        name: groupFields\n        schema:\n          type: string\n      - description: Optional. The maximum number of resources to return. Valid values\n          are between 1 and 1000, inclusive. Defaults to 30 if not set or set to 0.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. The next_page_token value returned from a previous\n          call to [ListContactGroups](/people/api/rest/v1/contactgroups/list). Requests\n          the next page of resources.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Optional. A sync token, returned by a previous call to `contactgroups.list`.\n          Only resources changed since the sync token was created will be returned.\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListContactGroupsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      tags:\n      - contactGroups\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Create a new contact group owned by the authenticated user. Created\n        contact group names must be unique to the users contact groups. Attempting\n        to create a group with a duplicate name will return a HTTP 409 error.\n      operationId: people.contactGroups.create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateContactGroupRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactGroup'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n  /v1/contactGroups/{contactGroupsId}:\n    delete:\n      description: Delete an existing contact group owned by the authenticated user\n        by specifying a contact group resource name.\n      operationId: people.contactGroups.delete\n      parameters:\n      - description: Optional. Set to true to also delete the contacts in the specified\n          group.\n        in: query\n        name: deleteContacts\n        schema:\n          type: boolean\n      - in: path\n        name: contactGroupsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n    get:\n      description: Provides information about a person by specifying a resource name.\n        Use `people/me` to indicate the authenticated user. The request returns a\n        400 error if 'personFields' is not specified.\n      operationId: people.people.get\n      parameters:\n      - description: 'Required. A field mask to restrict which fields on the person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: 'Required. Comma-separated list of person fields to be included\n          in the response. Each path should start with `person.`: for example, `person.names`\n          or `person.photos`.'\n        in: query\n        name: requestMask.includeField\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_PROFILE and READ_SOURCE_TYPE_CONTACT if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      - in: path\n        name: contactGroupsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/directory.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/directory.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.addresses.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.addresses.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.birthday.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.birthday.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.emails.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.emails.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.gender.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.gender.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.organization.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.organization.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.phonenumbers.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.phonenumbers.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/userinfo.email\n        Oauth2c:\n        - https://www.googleapis.com/auth/userinfo.email\n      - Oauth2:\n        - https://www.googleapis.com/auth/userinfo.profile\n        Oauth2c:\n        - https://www.googleapis.com/auth/userinfo.profile\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    put:\n      description: Update the name of an existing contact group owned by the authenticated\n        user. Updated contact group names must be unique to the users contact groups.\n        Attempting to create a group with a duplicate name will return a HTTP 409\n        error.\n      operationId: people.contactGroups.update\n      parameters:\n      - in: path\n        name: contactGroupsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContactGroupRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactGroup'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n  /v1/contactGroups/{contactGroupsId}/members:modify:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Modify the members of a contact group owned by the authenticated\n        user. The only system contact groups that can have members added are `contactGroups/myContacts`\n        and `contactGroups/starred`. Other system contact groups are deprecated and\n        can only have contacts removed.\n      operationId: people.contactGroups.members.modify\n      parameters:\n      - in: path\n        name: contactGroupsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModifyContactGroupMembersRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModifyContactGroupMembersResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n  /v1/contactGroups:batchGet:\n    get:\n      description: Get a list of contact groups owned by the authenticated user by\n        specifying a list of contact group resource names.\n      operationId: people.contactGroups.batchGet\n      parameters:\n      - description: 'Optional. A field mask to restrict which fields on the group\n          are returned. Defaults to `metadata`, `groupType`, `memberCount`, and `name`\n          if not set or set to empty. Valid fields are: * clientData * groupType *\n          memberCount * metadata * name'\n        in: query\n        name: groupFields\n        schema:\n          type: string\n      - description: Optional. Specifies the maximum number of members to return for\n          each group. Defaults to 0 if not set, which will return zero members.\n        in: query\n        name: maxMembers\n        schema:\n          type: integer\n      - description: Required. The resource names of the contact groups to get. There\n          is a maximum of 200 resource names.\n        explode: true\n        in: query\n        name: resourceNames\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetContactGroupsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      tags:\n      - contactGroups\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/otherContacts:\n    get:\n      description: List all \"Other contacts\", that is contacts that are not in a contact\n        group. \"Other contacts\" are typically auto created contacts from interactions.\n        Sync tokens expire 7 days after the full sync. A request with an expired sync\n        token will result in a 410 error. In the case of such an error clients should\n        make a full sync request without a `sync_token`. The first page of a full\n        sync request has an additional quota. If the quota is exceeded, a 429 error\n        will be returned. This quota is fixed and can not be increased. When the `sync_token`\n        is specified, resources deleted since the last sync will be returned as a\n        person with `PersonMetadata.deleted` set to true. When the `page_token` or\n        `sync_token` is specified, all other request parameters must match the first\n        call. Writes may have a propagation delay of several minutes for sync requests.\n        Incremental syncs are not intended for read-after-write use cases. See example\n        usage at [List the user's other contacts that have changed](/people/v1/other-contacts#list_the_users_other_contacts_that_have_changed).\n      operationId: people.otherContacts.list\n      parameters:\n      - description: Optional. The number of \"Other contacts\" to include in the response.\n          Valid values are between 1 and 1000, inclusive. Defaults to 100 if not set\n          or set to 0.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. A page token, received from a previous response `next_page_token`.\n          Provide this to retrieve the subsequent page. When paginating, all other\n          parameters provided to `otherContacts.list` must match the first call that\n          provided the page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          What values are valid depend on what ReadSourceType is used. If READ_SOURCE_TYPE_CONTACT\n          is used, valid values are: * emailAddresses * metadata * names * phoneNumbers\n          * photos If READ_SOURCE_TYPE_PROFILE is used, valid values are: * addresses\n          * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos\n          * emailAddresses * events * externalIds * genders * imClients * interests\n          * locales * locations * memberships * metadata * miscKeywords * names *\n          nicknames * occupations * organizations * phoneNumbers * photos * relations\n          * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: readMask\n        schema:\n          type: string\n      - description: Optional. Whether the response should return `next_sync_token`\n          on the last page of results. It can be used to get incremental changes since\n          the last request by setting it on the request `sync_token`. More details\n          about sync behavior at `otherContacts.list`.\n        in: query\n        name: requestSyncToken\n        schema:\n          type: boolean\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      - description: Optional. A sync token, received from a previous response `next_sync_token`\n          Provide this to retrieve only the resources changed since the last request.\n          When syncing, all other parameters provided to `otherContacts.list` must\n          match the first call that provided the sync token. More details about sync\n          behavior at `otherContacts.list`.\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOtherContactsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.other.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.other.readonly\n      tags:\n      - otherContacts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/otherContacts/{otherContactsId}:copyOtherContactToMyContactsGroup:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Copies an \"Other contact\" to a new contact in the user's \"myContacts\"\n        group\n      operationId: people.otherContacts.copyOtherContactToMyContactsGroup\n      parameters:\n      - in: path\n        name: otherContactsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CopyOtherContactToMyContactsGroupRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.other.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.other.readonly\n      tags:\n      - otherContacts\n  /v1/otherContacts:search:\n    get:\n      description: 'Provides a list of contacts in the authenticated user''s other\n        contacts that matches the search query. The query matches on a contact''s\n        `names`, `emailAddresses`, and `phoneNumbers` fields that are from the OTHER_CONTACT\n        source. **IMPORTANT**: Before searching, clients should send a warmup request\n        with an empty query to update the cache. See https://developers.google.com/people/v1/other-contacts#search_the_users_other_contacts'\n      operationId: people.otherContacts.search\n      parameters:\n      - description: Optional. The number of results to return. Defaults to 10 if\n          field is not set, or set to 0. Values greater than 30 will be capped to\n          30.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Required. The plain-text query for the request. The query is\n          used to match prefix phrases of the fields on a person. For example, a person\n          with name \"foo name\" matches queries such as \"f\", \"fo\", \"foo\", \"foo n\",\n          \"nam\", etc., but not \"oo n\".\n        in: query\n        name: query\n        schema:\n          type: string\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * emailAddresses * metadata * names * phoneNumbers'\n        in: query\n        name: readMask\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.other.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.other.readonly\n      tags:\n      - otherContacts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/people/{peopleId}:\n    delete:\n      description: Delete an existing contact group owned by the authenticated user\n        by specifying a contact group resource name.\n      operationId: people.contactGroups.delete\n      parameters:\n      - description: Optional. Set to true to also delete the contacts in the specified\n          group.\n        in: query\n        name: deleteContacts\n        schema:\n          type: boolean\n      - in: path\n        name: peopleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n    get:\n      description: Provides information about a person by specifying a resource name.\n        Use `people/me` to indicate the authenticated user. The request returns a\n        400 error if 'personFields' is not specified.\n      operationId: people.people.get\n      parameters:\n      - description: 'Required. A field mask to restrict which fields on the person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: 'Required. Comma-separated list of person fields to be included\n          in the response. Each path should start with `person.`: for example, `person.names`\n          or `person.photos`.'\n        in: query\n        name: requestMask.includeField\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_PROFILE and READ_SOURCE_TYPE_CONTACT if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      - in: path\n        name: peopleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/directory.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/directory.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.addresses.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.addresses.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.birthday.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.birthday.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.emails.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.emails.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.gender.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.gender.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.organization.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.organization.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.phonenumbers.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.phonenumbers.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/userinfo.email\n        Oauth2c:\n        - https://www.googleapis.com/auth/userinfo.email\n      - Oauth2:\n        - https://www.googleapis.com/auth/userinfo.profile\n        Oauth2c:\n        - https://www.googleapis.com/auth/userinfo.profile\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    put:\n      description: Update the name of an existing contact group owned by the authenticated\n        user. Updated contact group names must be unique to the users contact groups.\n        Attempting to create a group with a duplicate name will return a HTTP 409\n        error.\n      operationId: people.contactGroups.update\n      parameters:\n      - in: path\n        name: peopleId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContactGroupRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactGroup'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n  /v1/people/{peopleId}/connections:\n    get:\n      description: Provides a list of the authenticated user's contacts. Sync tokens\n        expire 7 days after the full sync. A request with an expired sync token will\n        result in a 410 error. In the case of such an error clients should make a\n        full sync request without a `sync_token`. The first page of a full sync request\n        has an additional quota. If the quota is exceeded, a 429 error will be returned.\n        This quota is fixed and can not be increased. When the `sync_token` is specified,\n        resources deleted since the last sync will be returned as a person with `PersonMetadata.deleted`\n        set to true. When the `page_token` or `sync_token` is specified, all other\n        request parameters must match the first call. Writes may have a propagation\n        delay of several minutes for sync requests. Incremental syncs are not intended\n        for read-after-write use cases. See example usage at [List the user's contacts\n        that have changed](/people/v1/contacts#list_the_users_contacts_that_have_changed).\n      operationId: people.people.connections.list\n      parameters:\n      - description: Optional. The number of connections to include in the response.\n          Valid values are between 1 and 1000, inclusive. Defaults to 100 if not set\n          or set to 0.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. A page token, received from a previous response `next_page_token`.\n          Provide this to retrieve the subsequent page. When paginating, all other\n          parameters provided to `people.connections.list` must match the first call\n          that provided the page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: 'Required. Comma-separated list of person fields to be included\n          in the response. Each path should start with `person.`: for example, `person.names`\n          or `person.photos`.'\n        in: query\n        name: requestMask.includeField\n        schema:\n          type: string\n      - description: Optional. Whether the response should return `next_sync_token`\n          on the last page of results. It can be used to get incremental changes since\n          the last request by setting it on the request `sync_token`. More details\n          about sync behavior at `people.connections.list`.\n        in: query\n        name: requestSyncToken\n        schema:\n          type: boolean\n      - description: Optional. The order in which the connections should be sorted.\n          Defaults to `LAST_MODIFIED_ASCENDING`.\n        in: query\n        name: sortOrder\n        schema:\n          enum:\n          - LAST_MODIFIED_ASCENDING\n          - LAST_MODIFIED_DESCENDING\n          - FIRST_NAME_ASCENDING\n          - LAST_NAME_ASCENDING\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      - description: Optional. A sync token, received from a previous response `next_sync_token`\n          Provide this to retrieve only the resources changed since the last request.\n          When syncing, all other parameters provided to `people.connections.list`\n          must match the first call that provided the sync token. More details about\n          sync behavior at `people.connections.list`.\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      - in: path\n        name: peopleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConnectionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/people/{peopleId}:deleteContact:\n    delete:\n      description: Delete a contact person. Any non-contact data will not be deleted.\n      operationId: people.people.deleteContact\n      parameters:\n      - in: path\n        name: peopleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/people/{peopleId}:deleteContactPhoto:\n    delete:\n      description: Delete a contact's photo.\n      operationId: people.people.deleteContactPhoto\n      parameters:\n      - description: 'Optional. A field mask to restrict which fields on the person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Defaults to empty if not set, which will skip the post mutate get. Valid\n          values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      - in: path\n        name: peopleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteContactPhotoResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/people/{peopleId}:updateContact:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: 'Update contact data for an existing contact person. Any non-contact\n        data will not be modified. Any non-contact data in the person to update will\n        be ignored. All fields specified in the `update_mask` will be replaced. The\n        server returns a 400 error if `person.metadata.sources` is not specified for\n        the contact to be updated or if there is no contact source. The server returns\n        a 400 error with reason `\"failedPrecondition\"` if `person.metadata.sources.etag`\n        is different than the contact''s etag, which indicates the contact has changed\n        since its data was read. Clients should get the latest person and merge their\n        updates into the latest person. The server returns a 400 error if `memberships`\n        are being updated and there are no contact group memberships specified on\n        the person. The server returns a 400 error if more than one field is specified\n        on a field that is a singleton for contact sources: * biographies * birthdays\n        * genders * names'\n      operationId: people.people.updateContact\n      parameters:\n      - description: 'Optional. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Defaults to all fields if not set. Valid values are: * addresses * ageRanges\n          * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses\n          * events * externalIds * genders * imClients * interests * locales * locations\n          * memberships * metadata * miscKeywords * names * nicknames * occupations\n          * organizations * phoneNumbers * photos * relations * sipAddresses * skills\n          * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      - description: 'Required. A field mask to restrict which fields on the person\n          are updated. Multiple fields can be specified by separating them with commas.\n          All updated fields will be replaced. Valid values are: * addresses * biographies\n          * birthdays * calendarUrls * clientData * emailAddresses * events * externalIds\n          * genders * imClients * interests * locales * locations * memberships *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * relations * sipAddresses * urls * userDefined'\n        in: query\n        name: updatePersonFields\n        schema:\n          type: string\n      - in: path\n        name: peopleId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Person'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n  /v1/people/{peopleId}:updateContactPhoto:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Update a contact's photo.\n      operationId: people.people.updateContactPhoto\n      parameters:\n      - in: path\n        name: peopleId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContactPhotoRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateContactPhotoResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n  /v1/people:batchCreateContacts:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Create a batch of new contacts and return the PersonResponses for\n        the newly created contacts. Limited to 10 parallel requests per user.\n      operationId: people.people.batchCreateContacts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchCreateContactsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchCreateContactsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n  /v1/people:batchDeleteContacts:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Delete a batch of contacts. Any non-contact data will not be deleted.\n        Limited to 10 parallel requests per user.\n      operationId: people.people.batchDeleteContacts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchDeleteContactsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n  /v1/people:batchGet:\n    get:\n      description: Provides information about a list of specific people by specifying\n        a list of requested resource names. Use `people/me` to indicate the authenticated\n        user. The request returns a 400 error if 'personFields' is not specified.\n      operationId: people.people.getBatchGet\n      parameters:\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: 'Required. Comma-separated list of person fields to be included\n          in the response. Each path should start with `person.`: for example, `person.names`\n          or `person.photos`.'\n        in: query\n        name: requestMask.includeField\n        schema:\n          type: string\n      - description: Required. The resource names of the people to provide information\n          about. It's repeatable. The URL query parameter should be resourceNames=\u003cname1\u003e\u0026resourceNames=\u003cname2\u003e\u0026...\n          - To get information about the authenticated user, specify `people/me`.\n          - To get information about a google account, specify `people/{account_id}`.\n          - To get information about a contact, specify the resource name that identifies\n          the contact as returned by `people.connections.list`. There is a maximum\n          of 200 resource names.\n        explode: true\n        in: query\n        name: resourceNames\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPeopleResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/directory.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/directory.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.addresses.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.addresses.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.birthday.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.birthday.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.emails.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.emails.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.gender.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.gender.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.organization.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.organization.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.phonenumbers.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.phonenumbers.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/userinfo.email\n        Oauth2c:\n        - https://www.googleapis.com/auth/userinfo.email\n      - Oauth2:\n        - https://www.googleapis.com/auth/userinfo.profile\n        Oauth2c:\n        - https://www.googleapis.com/auth/userinfo.profile\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/people:batchUpdateContacts:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Update a batch of contacts and return a map of resource names to\n        PersonResponses for the updated contacts. Limited to 10 parallel requests\n        per user.\n      operationId: people.people.batchUpdateContacts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchUpdateContactsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchUpdateContactsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n  /v1/people:createContact:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Create a new contact and return the person resource for that contact.\n        The request returns a 400 error if more than one field is specified on a field\n        that is a singleton for contact sources: * biographies * birthdays * genders\n        * names'\n      operationId: people.people.createContact\n      parameters:\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Defaults to all fields if not set. Valid values are: * addresses * ageRanges\n          * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses\n          * events * externalIds * genders * imClients * interests * locales * locations\n          * memberships * metadata * miscKeywords * names * nicknames * occupations\n          * organizations * phoneNumbers * photos * relations * sipAddresses * skills\n          * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Person'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n  /v1/people:listDirectoryPeople:\n    get:\n      description: Provides a list of domain profiles and domain contacts in the authenticated\n        user's domain directory. When the `sync_token` is specified, resources deleted\n        since the last sync will be returned as a person with `PersonMetadata.deleted`\n        set to true. When the `page_token` or `sync_token` is specified, all other\n        request parameters must match the first call. Writes may have a propagation\n        delay of several minutes for sync requests. Incremental syncs are not intended\n        for read-after-write use cases. See example usage at [List the directory people\n        that have changed](/people/v1/directory#list_the_directory_people_that_have_changed).\n      operationId: people.people.listDirectoryPeople\n      parameters:\n      - description: Optional. Additional data to merge into the directory sources\n          if they are connected through verified join keys such as email addresses\n          or phone numbers.\n        explode: true\n        in: query\n        name: mergeSources\n        schema:\n          items:\n            enum:\n            - DIRECTORY_MERGE_SOURCE_TYPE_UNSPECIFIED\n            - DIRECTORY_MERGE_SOURCE_TYPE_CONTACT\n            type: string\n          type: array\n        style: form\n      - description: Optional. The number of people to include in the response. Valid\n          values are between 1 and 1000, inclusive. Defaults to 100 if not set or\n          set to 0.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. A page token, received from a previous response `next_page_token`.\n          Provide this to retrieve the subsequent page. When paginating, all other\n          parameters provided to `people.listDirectoryPeople` must match the first\n          call that provided the page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: readMask\n        schema:\n          type: string\n      - description: Optional. Whether the response should return `next_sync_token`.\n          It can be used to get incremental changes since the last request by setting\n          it on the request `sync_token`. More details about sync behavior at `people.listDirectoryPeople`.\n        in: query\n        name: requestSyncToken\n        schema:\n          type: boolean\n      - description: Required. Directory sources to return.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - DIRECTORY_SOURCE_TYPE_UNSPECIFIED\n            - DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT\n            - DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE\n            type: string\n          type: array\n        style: form\n      - description: Optional. A sync token, received from a previous response `next_sync_token`\n          Provide this to retrieve only the resources changed since the last request.\n          When syncing, all other parameters provided to `people.listDirectoryPeople`\n          must match the first call that provided the sync token. More details about\n          sync behavior at `people.listDirectoryPeople`.\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDirectoryPeopleResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/directory.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/directory.readonly\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/people:searchContacts:\n    get:\n      description: 'Provides a list of contacts in the authenticated user''s grouped\n        contacts that matches the search query. The query matches on a contact''s\n        `names`, `nickNames`, `emailAddresses`, `phoneNumbers`, and `organizations`\n        fields that are from the CONTACT source. **IMPORTANT**: Before searching,\n        clients should send a warmup request with an empty query to update the cache.\n        See https://developers.google.com/people/v1/contacts#search_the_users_contacts'\n      operationId: people.people.searchContacts\n      parameters:\n      - description: Optional. The number of results to return. Defaults to 10 if\n          field is not set, or set to 0. Values greater than 30 will be capped to\n          30.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Required. The plain-text query for the request. The query is\n          used to match prefix phrases of the fields on a person. For example, a person\n          with name \"foo name\" matches queries such as \"f\", \"fo\", \"foo\", \"foo n\",\n          \"nam\", etc., but not \"oo n\".\n        in: query\n        name: query\n        schema:\n          type: string\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: readMask\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/people:searchDirectoryPeople:\n    get:\n      description: Provides a list of domain profiles and domain contacts in the authenticated\n        user's domain directory that match the search query.\n      operationId: people.people.searchDirectoryPeople\n      parameters:\n      - description: Optional. Additional data to merge into the directory sources\n          if they are connected through verified join keys such as email addresses\n          or phone numbers.\n        explode: true\n        in: query\n        name: mergeSources\n        schema:\n          items:\n            enum:\n            - DIRECTORY_MERGE_SOURCE_TYPE_UNSPECIFIED\n            - DIRECTORY_MERGE_SOURCE_TYPE_CONTACT\n            type: string\n          type: array\n        style: form\n      - description: Optional. The number of people to include in the response. Valid\n          values are between 1 and 500, inclusive. Defaults to 100 if not set or set\n          to 0.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. A page token, received from a previous response `next_page_token`.\n          Provide this to retrieve the subsequent page. When paginating, all other\n          parameters provided to `SearchDirectoryPeople` must match the first call\n          that provided the page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Required. Prefix query that matches fields in the person. Does\n          NOT use the read_mask for determining what fields to match.\n        in: query\n        name: query\n        schema:\n          type: string\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: readMask\n        schema:\n          type: string\n      - description: Required. Directory sources to return.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - DIRECTORY_SOURCE_TYPE_UNSPECIFIED\n            - DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT\n            - DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE\n            type: string\n          type: array\n        style: form\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchDirectoryPeopleResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/directory.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/directory.readonly\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/{resourceName}:\n    delete:\n      description: Delete an existing contact group owned by the authenticated user\n        by specifying a contact group resource name.\n      operationId: people.contactGroups.delete\n      parameters:\n      - description: Required. The resource name of the contact group to delete.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      - description: Optional. Set to true to also delete the contacts in the specified\n          group.\n        in: query\n        name: deleteContacts\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n    get:\n      description: Provides information about a person by specifying a resource name.\n        Use `people/me` to indicate the authenticated user. The request returns a\n        400 error if 'personFields' is not specified.\n      operationId: people.people.get\n      parameters:\n      - description: Required. The resource name of the person to provide information\n          about. - To get information about the authenticated user, specify `people/me`.\n          - To get information about a google account, specify `people/{account_id}`.\n          - To get information about a contact, specify the resource name that identifies\n          the contact as returned by `people.connections.list`.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      - description: 'Required. A field mask to restrict which fields on the person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: 'Required. Comma-separated list of person fields to be included\n          in the response. Each path should start with `person.`: for example, `person.names`\n          or `person.photos`.'\n        in: query\n        name: requestMask.includeField\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_PROFILE and READ_SOURCE_TYPE_CONTACT if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/directory.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/directory.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.addresses.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.addresses.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.birthday.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.birthday.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.emails.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.emails.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.gender.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.gender.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.organization.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.organization.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/user.phonenumbers.read\n        Oauth2c:\n        - https://www.googleapis.com/auth/user.phonenumbers.read\n      - Oauth2:\n        - https://www.googleapis.com/auth/userinfo.email\n        Oauth2c:\n        - https://www.googleapis.com/auth/userinfo.email\n      - Oauth2:\n        - https://www.googleapis.com/auth/userinfo.profile\n        Oauth2c:\n        - https://www.googleapis.com/auth/userinfo.profile\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    put:\n      description: Update the name of an existing contact group owned by the authenticated\n        user. Updated contact group names must be unique to the users contact groups.\n        Attempting to create a group with a duplicate name will return a HTTP 409\n        error.\n      operationId: people.contactGroups.update\n      parameters:\n      - description: The resource name for the contact group, assigned by the server.\n          An ASCII string, in the form of `contactGroups/{contact_group_id}`.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContactGroupRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactGroup'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n  /v1/{resourceName}/connections:\n    get:\n      description: Provides a list of the authenticated user's contacts. Sync tokens\n        expire 7 days after the full sync. A request with an expired sync token will\n        result in a 410 error. In the case of such an error clients should make a\n        full sync request without a `sync_token`. The first page of a full sync request\n        has an additional quota. If the quota is exceeded, a 429 error will be returned.\n        This quota is fixed and can not be increased. When the `sync_token` is specified,\n        resources deleted since the last sync will be returned as a person with `PersonMetadata.deleted`\n        set to true. When the `page_token` or `sync_token` is specified, all other\n        request parameters must match the first call. Writes may have a propagation\n        delay of several minutes for sync requests. Incremental syncs are not intended\n        for read-after-write use cases. See example usage at [List the user's contacts\n        that have changed](/people/v1/contacts#list_the_users_contacts_that_have_changed).\n      operationId: people.people.connections.list\n      parameters:\n      - description: Required. The resource name to return connections for. Only `people/me`\n          is valid.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      - description: Optional. The number of connections to include in the response.\n          Valid values are between 1 and 1000, inclusive. Defaults to 100 if not set\n          or set to 0.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. A page token, received from a previous response `next_page_token`.\n          Provide this to retrieve the subsequent page. When paginating, all other\n          parameters provided to `people.connections.list` must match the first call\n          that provided the page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: 'Required. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: 'Required. Comma-separated list of person fields to be included\n          in the response. Each path should start with `person.`: for example, `person.names`\n          or `person.photos`.'\n        in: query\n        name: requestMask.includeField\n        schema:\n          type: string\n      - description: Optional. Whether the response should return `next_sync_token`\n          on the last page of results. It can be used to get incremental changes since\n          the last request by setting it on the request `sync_token`. More details\n          about sync behavior at `people.connections.list`.\n        in: query\n        name: requestSyncToken\n        schema:\n          type: boolean\n      - description: Optional. The order in which the connections should be sorted.\n          Defaults to `LAST_MODIFIED_ASCENDING`.\n        in: query\n        name: sortOrder\n        schema:\n          enum:\n          - LAST_MODIFIED_ASCENDING\n          - LAST_MODIFIED_DESCENDING\n          - FIRST_NAME_ASCENDING\n          - LAST_NAME_ASCENDING\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      - description: Optional. A sync token, received from a previous response `next_sync_token`\n          Provide this to retrieve only the resources changed since the last request.\n          When syncing, all other parameters provided to `people.connections.list`\n          must match the first call that provided the sync token. More details about\n          sync behavior at `people.connections.list`.\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConnectionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.readonly\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/{resourceName}/members:modify:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Modify the members of a contact group owned by the authenticated\n        user. The only system contact groups that can have members added are `contactGroups/myContacts`\n        and `contactGroups/starred`. Other system contact groups are deprecated and\n        can only have contacts removed.\n      operationId: people.contactGroups.members.modify\n      parameters:\n      - description: Required. The resource name of the contact group to modify.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModifyContactGroupMembersRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModifyContactGroupMembersResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - contactGroups\n  /v1/{resourceName}:copyOtherContactToMyContactsGroup:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Copies an \"Other contact\" to a new contact in the user's \"myContacts\"\n        group\n      operationId: people.otherContacts.copyOtherContactToMyContactsGroup\n      parameters:\n      - description: Required. The resource name of the \"Other contact\" to copy.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CopyOtherContactToMyContactsGroupRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts.other.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts.other.readonly\n      tags:\n      - otherContacts\n  /v1/{resourceName}:deleteContact:\n    delete:\n      description: Delete a contact person. Any non-contact data will not be deleted.\n      operationId: people.people.deleteContact\n      parameters:\n      - description: Required. The resource name of the contact to delete.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/{resourceName}:deleteContactPhoto:\n    delete:\n      description: Delete a contact's photo.\n      operationId: people.people.deleteContactPhoto\n      parameters:\n      - description: Required. The resource name of the contact whose photo will be\n          deleted.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. A field mask to restrict which fields on the person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Defaults to empty if not set, which will skip the post mutate get. Valid\n          values are: * addresses * ageRanges * biographies * birthdays * calendarUrls\n          * clientData * coverPhotos * emailAddresses * events * externalIds * genders\n          * imClients * interests * locales * locations * memberships * metadata *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * photos * relations * sipAddresses * skills * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteContactPhotoResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/{resourceName}:updateContact:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: 'Update contact data for an existing contact person. Any non-contact\n        data will not be modified. Any non-contact data in the person to update will\n        be ignored. All fields specified in the `update_mask` will be replaced. The\n        server returns a 400 error if `person.metadata.sources` is not specified for\n        the contact to be updated or if there is no contact source. The server returns\n        a 400 error with reason `\"failedPrecondition\"` if `person.metadata.sources.etag`\n        is different than the contact''s etag, which indicates the contact has changed\n        since its data was read. Clients should get the latest person and merge their\n        updates into the latest person. The server returns a 400 error if `memberships`\n        are being updated and there are no contact group memberships specified on\n        the person. The server returns a 400 error if more than one field is specified\n        on a field that is a singleton for contact sources: * biographies * birthdays\n        * genders * names'\n      operationId: people.people.updateContact\n      parameters:\n      - description: The resource name for the person, assigned by the server. An\n          ASCII string with a max length of 27 characters, in the form of `people/{person_id}`.\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. A field mask to restrict which fields on each person\n          are returned. Multiple fields can be specified by separating them with commas.\n          Defaults to all fields if not set. Valid values are: * addresses * ageRanges\n          * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses\n          * events * externalIds * genders * imClients * interests * locales * locations\n          * memberships * metadata * miscKeywords * names * nicknames * occupations\n          * organizations * phoneNumbers * photos * relations * sipAddresses * skills\n          * urls * userDefined'\n        in: query\n        name: personFields\n        schema:\n          type: string\n      - description: Optional. A mask of what source types to return. Defaults to\n          READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set.\n        explode: true\n        in: query\n        name: sources\n        schema:\n          items:\n            enum:\n            - READ_SOURCE_TYPE_UNSPECIFIED\n            - READ_SOURCE_TYPE_PROFILE\n            - READ_SOURCE_TYPE_CONTACT\n            - READ_SOURCE_TYPE_DOMAIN_CONTACT\n            type: string\n          type: array\n        style: form\n      - description: 'Required. A field mask to restrict which fields on the person\n          are updated. Multiple fields can be specified by separating them with commas.\n          All updated fields will be replaced. Valid values are: * addresses * biographies\n          * birthdays * calendarUrls * clientData * emailAddresses * events * externalIds\n          * genders * imClients * interests * locales * locations * memberships *\n          miscKeywords * names * nicknames * occupations * organizations * phoneNumbers\n          * relations * sipAddresses * urls * userDefined'\n        in: query\n        name: updatePersonFields\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Person'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Person'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\n  /v1/{resourceName}:updateContactPhoto:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Update a contact's photo.\n      operationId: people.people.updateContactPhoto\n      parameters:\n      - description: Required. Person resource name\n        in: path\n        name: resourceName\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContactPhotoRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateContactPhotoResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/contacts\n        Oauth2c:\n        - https://www.googleapis.com/auth/contacts\n      tags:\n      - people\nservers:\n- url: https://people.googleapis.com/\ntags:\n- name: contactGroups\n- name: otherContacts\n- name: people\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v1/{resourceName}:updateContact: patch: duplicate operationId: \"people.people.updateContact\""
}