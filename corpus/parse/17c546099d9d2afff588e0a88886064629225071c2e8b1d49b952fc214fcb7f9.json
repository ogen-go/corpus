{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Azure/iot-identity-service"
		},
		"file": {
			"name": "2020-09-01.yaml",
			"size": 0,
			"path": "identity/aziot-identityd/openapi/2020-09-01.yaml",
			"byteSize": 17259,
			"content": "# Ref: https://spec.openapis.org/oas/v3.0.3\n\nopenapi: 3.0.1\n\ninfo:\n  title: Identity Service API\n\n  version: '2020-09-01'\n\n  description: |\n    This is the specification of the HTTP API of the aziot-identityd service.\n\n  license:\n    name: 'MIT'\n\nservers:\n- url: 'http://identityd.sock/'\n  description: |\n    The server listens on a unix socket `/run/aziot/identityd.sock`\n\n\npaths:\n  /identities/identity?api-version=2020-09-01:\n    get:\n      tags:\n      - Identity operations\n      summary: Get primary cloud identity for authenticated workload (caller)\n      operationId: getIdentity\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AziotIdentityResponse'\n              examples:\n                'Response for principals associated to device identities (SAS case)':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      auth:\n                        type: 'sas'\n                        keyHandle: 'string'\n                'Response for principals associated to device identities (X.509 case)':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      auth:\n                        type: 'x509'\n                        keyHandle: 'string'\n                        certId: 'string'\n                'Response for principals associated to module identities (SAS case)':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      moduleId: 'module01'\n                      genId: '12345'\n                      auth:\n                        type: 'sas'\n                        keyHandle: 'string'\n                'Response for principals associated to module identities (X.509 case)':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      moduleId: 'module01'\n                      genId: '12345'\n                      auth:\n                        type: 'x509'\n                        keyHandle: 'string'\n                        certId: 'string'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /identities/device?api-version=2020-09-01:\n    post:\n      tags:\n      - Identity operations\n      summary: Get the IoT device provisioning result\n      operationId: getDeviceIdentity\n      x-codegen-request-body-name: GetDeviceIdentityRequest\n      requestBody:\n        description: The type of provisioned identity\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProvisioningResultRequest'\n            example:\n              value:\n                type: 'aziot'\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                required: ['spec', 'type']\n                type: object\n                properties:\n                  'type':\n                    $ref: '#/components/schemas/AziotIdentityType'\n                  'spec':\n                    $ref: '#/components/schemas/AziotIdentitySpec'\n              examples:\n                'SAS case':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      auth:\n                        type: 'sas'\n                        keyHandle: 'string'\n                'X.509 case':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      auth:\n                        type: 'x509'\n                        keyHandle: 'string'\n                        certId: 'string'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /identities/modules?api-version=2020-09-01\u0026type={type}:\n    parameters:\n    - $ref: '#/components/parameters/AziotIdentityTypeParameter'\n    get:\n      tags:\n      - Identity operations\n      summary: List IoT module identities\n      operationId: getModuleIdentities\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AziotModuleIdentitiesResponse'\n              examples:\n                'SAS case':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      moduleId: 'module01'\n                      genId: '12345'\n                      auth:\n                        type: 'sas'\n                        keyHandle: 'string'\n                'X.509 case':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      moduleId: 'module01'\n                      genId: '12345'\n                      auth:\n                        type: 'x509'\n                        keyHandle: 'string'\n                        certId: 'string'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /identities/modules?api-version=2020-09-01:\n    post:\n      tags:\n      - Identity operations\n      summary: Create IoT module identity\n      operationId: createModuleIdentity\n      x-codegen-request-body-name: CreateModuleIdentityRequest\n      requestBody:\n        description: The type of module identity to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateModuleRequest'\n            examples:\n              'Module identity':\n                value:\n                  type: 'aziot'\n                  moduleId: 'module01'\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModuleIdentityResponse'\n              examples:\n                'SAS case':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      moduleId: 'module01'\n                      genId: '12345'\n                      auth:\n                        type: 'sas'\n                        keyHandle: 'string'\n                'X.509 case':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      moduleId: 'module01'\n                      genId: '12345'\n                      auth:\n                        type: 'x509'\n                        keyHandle: 'string'\n                        certId: 'string'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /identities/modules/{id}?api-version=2020-09-01\u0026type={type}:\n    parameters:\n      - $ref: '#/components/parameters/IdentityName'\n      - $ref: '#/components/parameters/ModuleIdentityKind'\n    get:\n      tags:\n      - Identity operations\n      summary: Get IoT module identity information\n      operationId: getModuleIdentityById\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModuleIdentityResponse'\n              examples:\n                'SAS case':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      moduleId: 'module01'\n                      genId: '12345'\n                      auth:\n                        type: 'sas'\n                        keyHandle: 'string'\n                'X.509 case':\n                  value:\n                    type: 'aziot'\n                    spec:\n                      hubName: 'myhub.net'\n                      gatewayHost: 'parentdevice'\n                      deviceId: 'device01'\n                      moduleId: 'module01'\n                      genId: '12345'\n                      auth:\n                        type: 'x509'\n                        keyHandle: 'string'\n                        certId: 'string'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n    delete:\n      tags:\n      - Identity operations\n      summary: Delete the IoT module identity\n      operationId: deleteModuleIdentity\n      responses:\n        204:\n          description: No Content\n          content: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /identities/device/reprovision?api-version=2020-09-01:\n    post:\n      tags:\n      - Identity operations\n      summary: Trigger an IoT device reprovisioning flow\n      operationId: reprovision\n      x-codegen-request-body-name: ReprovisionRequest\n      requestBody:\n        description: Type of identity to reprovision\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReprovisionRequest'\n      responses:\n        200:\n          description: Ok\n          content: {}\n        204:\n          description: No Content\n          content: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n\ncomponents:\n  schemas:\n    AuthenticationCredentials:\n      required:\n      - type\n      type: object\n      properties:\n        'type':\n          type: string\n          description: Indicates the type of authentication credential used.\n          enum:\n          - sas\n          - x509\n      discriminator:\n        propertyName: type\n        mapping:\n          sas: '#/components/schemas/SASAuthenticationCredentials'\n          x509: '#/components/schemas/X509AuthenticationCredentials'\n\n    AziotIdentityResponse:\n      required:\n      - spec\n      - type\n      type: object\n      properties:\n        'type':\n          $ref: '#/components/schemas/AziotIdentityType'\n        'spec':\n          $ref: '#/components/schemas/AziotIdentitySpec'\n\n    AziotModuleIdentitiesResponse:\n      type: object\n      properties:\n        'identities':\n          type: array\n          description: A collection of 'aziot' module identities\n          items:\n            $ref: '#/components/schemas/AziotModuleIdentityResponse'\n\n    AziotIdentitySpec:\n      required:\n      - deviceId\n      - gatewayHost\n      - hubName\n      type: object\n      properties:\n        'hubName':\n          type: string\n          description: The name of the IoT hub where the device is provisioned.\n          example: myhub.net\n        'gatewayHost':\n          type: string\n          description: The hostname of the parent Edge gateway that intermediates\n            all requests for the current device when in a nested configuration. In\n            a single-node deployment (i.e. non-nested) it will match the 'hubName'.\n          example: parentdevice\n        'deviceId':\n          type: string\n          description: The identity name of the provisioned device in the assigned\n            IoT Hub.\n          example: device01\n        'moduleId':\n          type: string\n          description: The identity name of the device workload in the provisioned\n            device in the assigned IoT Hub.\n          example: module01\n        'genId':\n          type: string\n          description: The generation ID of the device workload assigned by IoT Hub.\n          example: \"12345\"\n        'auth':\n          $ref: '#/components/schemas/AuthenticationCredentials'\n      description: The device identity specification.\n\n    AziotIdentityType:\n      type: string\n      enum:\n      - aziot\n      example:\n        aziot:\n          value: aziot\n          summary: 'Module identity.'\n\n    AziotModuleIdentityResponse:\n      required:\n      - spec\n      - type\n      type: object\n      properties:\n        'type':\n          $ref: '#/components/schemas/AziotIdentityType'\n        'spec':\n          $ref: '#/components/schemas/AziotModuleIdentitySpec'\n\n    AziotModuleIdentitySpec:\n      allOf:\n      - $ref: '#/components/schemas/AziotIdentitySpec'\n      required:\n      - moduleId\n      - genId\n      type: object\n      properties:\n        'moduleId':\n          type: string\n          description: The identity name of the device workload in the provisioned\n            device in the assigned IoT Hub.\n          example: module01\n        'genId':\n          type: string\n          description: The generation ID of the device workload assigned by IoT Hub.\n          example: \"12345\"\n      description: The module identity specification.\n\n    CreateIdentityRequest:\n      required:\n      - moduleId\n      - type\n      type: object\n      properties:\n        'type':\n          $ref: '#/components/schemas/IdentityKind'\n        'moduleId':\n          type: string\n          description: Name of the module to add to the identity registry.\n          example: module01\n\n    CreateModuleRequest:\n      oneOf:\n      - $ref: '#/components/schemas/CreateIdentityRequest'\n      discriminator:\n        propertyName: type\n        mapping:\n          aziot: '#/components/schemas/CreateIdentityRequest'\n\n    ErrorResponse:\n      required:\n      - message\n      type: object\n      properties:\n        'message':\n          type: string\n\n    IdentityKind:\n      type: string\n      description: The identity type.\n      enum:\n      - aziot\n      example:\n        aziot:\n          value: aziot\n          summary: 'Azure IoT Hub identity.'\n\n    ModuleIdentityResponse:\n      oneOf:\n      - $ref: '#/components/schemas/AziotModuleIdentityResponse'\n      discriminator:\n        propertyName: 'type'\n        mapping:\n          'aziot': '#/components/schemas/AziotModuleIdentityResponse'\n\n    ProvisioningResultRequest:\n      required:\n      - type\n      type: object\n      properties:\n        'type':\n          $ref: '#/components/schemas/AziotIdentityType'\n\n    ReprovisionRequest:\n      required:\n      - type\n      type: object\n      properties:\n        'type':\n          type: string\n          enum:\n          - aziot\n\n    SASAuthenticationCredentials:\n      allOf:\n      - $ref: '#/components/schemas/AuthenticationCredentials'\n      required:\n      - keyHandle\n      type: object\n      properties:\n        'keyHandle':\n          type: string\n          description: Key handle used for Key Service requests.\n\n    X509AuthenticationCredentials:\n      allOf:\n      - $ref: '#/components/schemas/AuthenticationCredentials'\n      required:\n      - certId\n      - keyHandle\n      type: object\n      properties:\n        'keyHandle':\n          type: string\n          description: Key handle used for Key Service requests.\n        'certId':\n          type: string\n          description: Certificate ID of the identity X.509 certificate.\n\n\n  parameters:\n    AziotIdentityTypeParameter:\n      name: type\n      in: path\n      description: Aziot identity type\n      required: true\n      schema:\n        $ref: '#/components/schemas/AziotIdentityType'\n\n    IdentityName:\n      name: id\n      in: path\n      description: ID\n      example: module01\n      required: true\n      schema:\n        type: string\n\n    ModuleIdentityKind:\n      name: type\n      in: path\n      description: Supported identity types\n      required: true\n      schema:\n        $ref: '#/components/schemas/IdentityKind'\n\n\n",
			"canonicalURL": "/github.com/Azure/iot-identity-service@0236a869c36d6ee5745ac75538172af130cd4e7b/-/blob/identity/aziot-identityd/openapi/2020-09-01.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Azure/iot-identity-service/blob/0236a869c36d6ee5745ac75538172af130cd4e7b/identity/aziot-identityd/openapi/2020-09-01.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/identities/device/reprovision?api-version=2020-09-01\": post: operation \"reprovision\": at identity/aziot-identityd/openapi/2020-09-01.yaml:323:7: parse path \"/identities/device/reprovision?api-version=2020-09-01\": path MUST NOT contain a query string"
}