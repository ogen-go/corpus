{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cartesi/creepts-backend"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "reference/anuto/openapi.yaml",
			"byteSize": 10000,
			"content": "openapi: 3.0.0\ninfo:\n  title: creepts\n  version: '1.0'\n  description: API for Creepts\n  contact:\n    name: Cartesi\n    url: https://www.cartesi.io\n    email: info@cartesi.io\n  license:\n    name: Apache 2.0\n    url: 'https://github.com/cartesi/creepts-backend/blob/master/LICENSE'\nservers:\n  - url: 'http://localhost:3000'\ntags:\n  - name: Tournament\n  - name: Tournament Score\npaths:\n  /tournaments:\n    get:\n      summary: List of Tournaments\n      description: Gets a paginated list of all tournaments, which can be filtered using query parameters\n      operationId: getTournaments\n      tags:\n        - Tournament\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offset:\n                    type: integer\n                  limit:\n                    type: integer\n                  results:\n                    type: array\n                    items:\n                      $ref: ./models/tournament.v1.yaml\n              examples:\n                example-1:\n                  value:\n                    $ref: './examples/tournaments.json'\n      parameters:\n        - in: query\n          name: limit\n          description: Maximum number of tournaments to return (default applies if not specified)\n          schema:\n            type: integer\n        - in: query\n          name: offset\n          description: Pagination offset, 10 returns 10th element up to (10+limit)th element\n          schema:\n            type: integer\n        - in: query\n          name: phase\n          description: Filter tournaments by phase\n          schema:\n            type: string\n            enum:\n              - commit\n              - reveal\n              - round\n              - end\n        - in: query\n          name: me\n          description: Filter tournaments which I am participating\n          schema:\n            type: boolean\n        - in: query\n          name: sort_by\n          description: Sort criteria of returned tournaments\n          schema:\n            type: string\n            enum:\n              - playerCount\n              - deadline\n        - in: query\n          name: order_by\n          description: Ascendent or descendent order of returned tournaments. Default is asc.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n  /tournaments/{id}:\n    parameters:\n      - in: path\n        name: id\n        description: Id of the tournament\n        schema:\n          type: string\n        required: true\n    get:\n      summary: Tournament\n      description: Gets a tournament definition and its current status\n      operationId: getTournamentById\n      tags:\n        - Tournament\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./models/tournament.v1.yaml\n              examples:\n                commit:\n                  summary: Tournament in commit phase\n                  value:\n                    $ref: ./examples/tournament_commit.json\n                reveal:\n                  summary: Tournament in reveal phase\n                  value:\n                    $ref: ./examples/tournament_reveal.json\n                round:\n                  summary: Tournament in round phase\n                  value:\n                    $ref: ./examples/tournament_round.json\n                end:\n                  summary: Tournament in end phase\n                  value:\n                    $ref: ./examples/tournament_end.json\n        '404':\n          description: Not Found\n  /tournaments/{tournament_id}/scores/{id}:\n    parameters:\n      - in: path\n        name: tournament_id\n        description: Id of the tournament\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        description: Id of the score in the tournament\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Score\n      description: Retrieve specific score of a player in a tournament\n      operationId: getTournamentScoreById\n      tags:\n        - Tournament Score\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./models/score.v1.yaml\n              examples:\n                p1:\n                  value:\n                    id: \"1\"\n                    score: 3981\n                    waves: 85\n                p2:\n                  value:\n                    id: \"2\"\n                    score: 5039\n                    waves: 110\n                p3:\n                  value:\n                    id: \"3\"\n                    score: 30291\n                    waves: 150\n                p4:\n                  value:\n                    id: \"4\"\n                    score: 2353\n                    waves: 77\n\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /tournaments/{tournament_id}/scores/my:\n    parameters:\n      - in: path\n        name: tournament_id\n        description: Id of the tournament\n        required: true\n        schema:\n          type: string\n    get:\n      summary: My Score\n      description: Retrieve my score of the tournament\n      operationId: getMyTournamentScore\n      tags:\n        - Tournament Score\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./models/score.v1.yaml\n              example:\n                - score: 3981\n                  waves: 85\n                  log:\n                    actions:\n                    - type: add_turret\n                      tick: 0\n                      typeTurret: projectile\n                      position:\n                        r: 3\n                        c: 2\n                    - type: next_wave\n                      tick: 0\n                    - type: add_turret\n                      tick: 46\n                      typeTurret: projectile\n                      position:\n                        r: 3\n                        c: 7\n                    - type: add_turret\n                      tick: 81\n                      typeTurret: laser\n                      position:\n                        r: 3\n                        c: 6\n                    - type: next_wave\n                      tick: 114\n                    - type: add_turret\n                      tick: 312\n                      typeTurret: launch\n                      position:\n                        r: 6\n                        c: 2\n                    - type: next_wave\n                      tick: 312\n                    - type: next_wave\n                      tick: 665\n                    - type: next_wave\n                      tick: 1687\n                    - type: add_turret\n                      tick: 2547\n                      typeTurret: glue\n                      position:\n                        r: 6\n                        c: 4\n                    - type: next_wave\n                      tick: 2779\n        '404':\n          description: Not Found\n    put:\n      summary: Update My Score\n      description: Send my score to the tournament\n      operationId: updateMyTournamentScore\n      tags:\n        - Tournament Score\n      responses:\n        '201':\n          description: Score, wave number and log were created for tournament (id)\n        '204':\n          description: No Content\n        '403':\n          description: 'The tournament for the provided id is not in the commit phase: (tournament)'\n        '404':\n          description: 'No tournament found with the provided id: (id)'\n        '409':\n          description: The given score is not higher than a previously submitted one\n      requestBody:\n        description: The result of my gameplay\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                score:\n                  type: integer\n                  description: My score\n                waves:\n                  type: integer\n                  description: Wave number reached before losing\n                log:\n                  $ref: ./models/log.v1.yaml\n              required:\n                - score\n                - waves\n                - log\n            example:\n                - score: 3981\n                  waves: 85\n                  log:\n                    actions:\n                    - type: add_turret\n                      tick: 0\n                      typeTurret: projectile\n                      position:\n                        r: 3\n                        c: 2\n                    - type: next_wave\n                      tick: 0\n                    - type: add_turret\n                      tick: 46\n                      typeTurret: projectile\n                      position:\n                        r: 3\n                        c: 7\n                    - type: add_turret\n                      tick: 81\n                      typeTurret: laser\n                      position:\n                        r: 3\n                        c: 6\n                    - type: next_wave\n                      tick: 114\n                    - type: add_turret\n                      tick: 312\n                      typeTurret: launch\n                      position:\n                        r: 6\n                        c: 2\n                    - type: next_wave\n                      tick: 312\n                    - type: next_wave\n                      tick: 665\n                    - type: next_wave\n                      tick: 1687\n                    - type: add_turret\n                      tick: 2547\n                      typeTurret: glue\n                      position:\n                        r: 6\n                        c: 4\n                    - type: next_wave\n                      tick: 2779\ncomponents:\n  schemas: {}\n",
			"canonicalURL": "/github.com/cartesi/creepts-backend@e30d9db20f0bfb5149fec172d026da530d4b4a06/-/blob/reference/anuto/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cartesi/creepts-backend/blob/e30d9db20f0bfb5149fec172d026da530d4b4a06/reference/anuto/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/tournaments\": get: operation \"getTournaments\": responses: 200: content: application/json: schema: parse schema: property \"results\": parse schema: parse schema: at 1:1591: external \"./models/tournament.v1.yaml\": get: file: local file reference is not allowed"
}