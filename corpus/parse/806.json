{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onosproject/config-models"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "models/testdevice-1.0.x/openapi.yaml",
			"content": "# SPDX-FileCopyrightText: 2021-present Open Networking Foundation \u003cinfo@opennetworking.org\u003e\n#\n# SPDX-License-Identifier: LicenseRef-ONF-Member-1.0\ncomponents:\n  parameters:\n    target:\n      content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: target (device in onos-config)\n      in: path\n      name: target\n      required: true\n  requestBodies:\n    RequestBody_Cont1a:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a'\n    RequestBody_Cont1a_Cont2a:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a_Cont2a'\n    RequestBody_Cont1a_List2a:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a_List2a'\n    RequestBody_Cont1a_List4:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a_List4'\n    RequestBody_Cont1a_List4_List4a:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a_List4_List4a'\n    RequestBody_Cont1a_List5:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1a_List5'\n    RequestBody_Cont1b-state:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1b-state'\n    RequestBody_Cont1b-state_List2b:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Cont1b-state_List2b'\n  schemas:\n    AdditionalPropertyTarget:\n      description: Optionally specify a target other than the default (only on PATCH\n        method)\n      properties:\n        target:\n          description: an override of the target (device)\n          title: target\n          type: string\n      title: AdditionalPropertyTarget\n      type: object\n    AdditionalPropertyUnchanged:\n      description: To optionally omit 'required' properties, add them to 'unchanged'\n        list\n      properties:\n        unchanged:\n          description: A comma seperated list of unchanged mandatory attribute names\n          title: unchanged\n          type: string\n      title: AdditionalPropertyUnchanged\n      type: object\n    Cont1a:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyTarget'\n      description: The top level container\n      properties:\n        cont2a:\n          $ref: '#/components/schemas/Cont1a_Cont2a'\n        leaf1a:\n          description: Leaf inside Container 1a\n          maxLength: 10\n          minLength: 5\n          title: leaf1a\n          type: string\n        list2a:\n          description: A simple list of configuration items\n          items:\n            $ref: '#/components/schemas/Cont1a_List2a'\n          maxItems: 4\n          title: ItemCont1a_List2a\n          type: array\n          uniqueItems: true\n          x-keys:\n          - name\n          x-must:\n          - ErrorMessage:\n              Name: range-min must be less than or equal to range-max\n            Name: number(./t1:range-min) \u003c= number(./t1:range-max)\n        list4:\n          description: A list with a leafref index\n          items:\n            $ref: '#/components/schemas/Cont1a_List4'\n          title: ItemCont1a_List4\n          type: array\n          uniqueItems: true\n          x-keys:\n          - id\n        list5:\n          description: A list with 2 keys\n          items:\n            $ref: '#/components/schemas/Cont1a_List5'\n          title: ItemCont1a_List5\n          type: array\n          uniqueItems: true\n          x-keys:\n          - key1\n          - key2\n          x-must:\n          - ErrorMessage:\n              Name: leaf5a must be formatted string like '5a \u003ckey1\u003e-\u003ckey2\u003e'\n            Name: concat('5a ', string(./@t1e:key1), '-', string(./@t1e:key2)) = string(./t1e:leaf5a)\n      title: Cont1a\n      type: object\n    Cont1a_Cont2a:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: The 2nd level container\n      properties:\n        leaf-list-leaf2e:\n          items:\n            description: leaf list inside Container 2a\n            maximum: 200\n            minimum: 100\n            title: leaf2e\n            type: integer\n          title: leaf-list-leaf2e\n          type: array\n        leaf2a:\n          description: Numeric leaf inside Container 2a\n          maximum: 13\n          minimum: 1\n          title: leaf2a\n          type: integer\n        leaf2b:\n          description: Voltage leaf inside Container 2a\n          maximum: 2\n          minimum: 0.001\n          title: leaf2b\n          type: number\n        leaf2c:\n          description: Read only leaf inside Container 2a\n          title: leaf2c\n          type: string\n        leaf2d:\n          description: Another decimal inside Container 2a\n          maximum: 2\n          minimum: 0.001\n          title: leaf2d\n          type: number\n        leaf2f:\n          description: binary leaf inside container 2a\n          format: byte\n          maxLength: 20\n          minLength: 20\n          title: leaf2f\n          type: string\n        leaf2g:\n          description: Boolean leaf inside Container 2a\n          title: leaf2g\n          type: boolean\n      required:\n      - leaf2b\n      title: Cont1a_Cont2a\n      type: object\n    Cont1a_List2a:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      properties:\n        name:\n          description: The list is keyed by name\n          maxLength: 8\n          minLength: 4\n          title: name\n          type: string\n        range-max:\n          description: A max value for the range\n          maximum: 255\n          minimum: 0\n          title: range-max\n          type: integer\n        range-min:\n          description: A simple range to test rules in YANG. Min must be \u003c= max\n          maximum: 255\n          minimum: 0\n          title: range-min\n          type: integer\n        ref2d:\n          description: A reference to leaf2d in the 2a container\n          title: ref2d\n          type: string\n          x-leafref: /cont1a/cont2a/leaf2d\n        tx-power:\n          description: Transmit power\n          maximum: 20\n          minimum: 1\n          title: tx-power\n          type: integer\n      required:\n      - name\n      - range-min\n      type: object\n    Cont1a_List4:\n      properties:\n        id:\n          description: Link to list2a names\n          title: id\n          type: string\n          x-leafref: /t1:cont1a/t1:list2a/t1:name\n        leaf4b:\n          description: leaf 4a on list4a elements\n          maxLength: 20\n          minLength: 1\n          title: leaf4b\n          type: string\n        list4a:\n          description: A list within a list with 2 keys as leaf refs\n          items:\n            $ref: '#/components/schemas/Cont1a_List4_List4a'\n          title: List4a\n          type: array\n          uniqueItems: true\n          x-keys:\n          - fkey1\n          - fkey2\n          x-must:\n          - ErrorMessage:\n              Name: displayname must be formatted string like 'Value \u003c../id\u003e-\u003cfkey1\u003e-\u003cfkey2\u003e'\n            Name: concat('Value ', string(../@t1e:id), '-', string(./@t1e:fkey1),\n              '-', string(./@t1e:fkey2)) = string(./t1e:displayname)\n      required:\n      - id\n      type: object\n    Cont1a_List4_List4a:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      properties:\n        displayname:\n          description: an optional display name attribute with 2 different length\n            ranges\n          maxLength: 20\n          minLength: 1\n          title: displayname\n          type: string\n        fkey1:\n          description: foreign key 1 - ref to list5a/key1\n          title: fkey1\n          type: string\n          x-leafref: /t1:cont1a/t1e:list5/t1e:key1\n        fkey2:\n          description: foreign key 2 - ref to list5a/key2\n          title: fkey2\n          type: string\n          x-leafref: /t1:cont1a/t1e:list5/t1e:key2\n      required:\n      - fkey1\n      - fkey2\n      type: object\n    Cont1a_List5:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      properties:\n        key1:\n          description: key1 of list 5 - string\n          maxLength: 20\n          minLength: 1\n          title: key1\n          type: string\n        key2:\n          description: key2 of list 5 - number\n          maximum: 10\n          minimum: 2\n          title: key2\n          type: integer\n        leaf5a:\n          description: non key attribute of list 5 - string\n          maxLength: 20\n          minLength: 1\n          title: leaf5a\n          type: string\n      required:\n      - key1\n      - key2\n      type: object\n    Cont1b-state:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyTarget'\n      description: A second top level container - this one for state attributes. Edit\n        symbol should not be visible\n      properties:\n        leaf2d:\n          description: A state attribute\n          maximum: 20000\n          minimum: 10000\n          title: leaf2d\n          type: integer\n        list2b:\n          description: A simple list of state items\n          items:\n            $ref: '#/components/schemas/Cont1b-state_List2b'\n          title: ItemCont1b-state_List2b\n          type: array\n          uniqueItems: true\n          x-keys:\n          - index\n      title: Cont1b-state\n      type: object\n    Cont1b-state_List2b:\n      properties:\n        index:\n          description: The list index\n          maximum: 255\n          minimum: 0\n          title: index\n          type: integer\n        leaf3c:\n          description: A string attribute in the list\n          maxLength: 20\n          minLength: 1\n          title: leaf3c\n          type: string\n      required:\n      - index\n      type: object\n    LeafAtTopLevel:\n      description: A leaf at the top level (not recommended but must be supported)\n      pattern: '[A-Z]{3}-[0-9]*'\n      title: leafAtTopLevel\n      type: string\ninfo:\n  contact:\n    email: info@opennetworking.org\n    name: Open Networking Foundation\n    url: https://opennetworking.org\n  description: TODO add a description field in Metadata.yaml?\n  license:\n    name: LicenseRef-ONF-Member-1.0\n    url: https://opennetworking.org/wp-content/uploads/2020/06/ONF-Member-Only-Software-License-v1.0.pdf\n  termsOfService: https://opennetworking.org/wp-content/uploads/2019/02/ONF-Licensing-and-IPR-FAQ-2020-06.pdf\n  title: testdevice-1.0.0\n  version: 1.0.0\nopenapi: 3.0.0\npaths:\n  /testdevice/v1.0.0/{target}/cont1a:\n    delete:\n      operationId: deleteCont1a\n      responses:\n        default:\n          description: \"\"\n      summary: DELETE /cont1a\n    description: The top level container\n    get:\n      operationId: getCont1a\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a'\n          description: GET OK 200\n      summary: GET /cont1a\n      tags:\n      - \"\"\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postCont1a\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a\n  /testdevice/v1.0.0/{target}/cont1a/cont2a:\n    delete:\n      operationId: deleteCont1a_Cont2a\n      responses:\n        default:\n          description: \"\"\n      summary: DELETE /cont1a/cont2a\n    description: The 2nd level container\n    get:\n      operationId: getCont1a_Cont2a\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_Cont2a'\n          description: GET OK 200\n      summary: GET /cont1a/cont2a\n      tags:\n      - Cont1a\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postCont1a_Cont2a\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a_Cont2a'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a/cont2a\n  /testdevice/v1.0.0/{target}/cont1a/list2a/{name}:\n    delete:\n      operationId: deleteCont1a_List2a\n      responses:\n        default:\n          description: \"\"\n      summary: DELETE /cont1a/list2a\n    description: A simple list of configuration items\n    get:\n      operationId: getCont1a_List2a\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_List2a'\n          description: GET OK 200\n      summary: GET /cont1a/list2a\n      tags:\n      - Cont1a_List2a\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postCont1a_List2a\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a_List2a'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a/list2a\n  /testdevice/v1.0.0/{target}/cont1a/list4/{id}:\n    delete:\n      operationId: deleteCont1a_List4\n      responses:\n        default:\n          description: \"\"\n      summary: DELETE /cont1a/list4\n    description: A list with a leafref index\n    get:\n      operationId: getCont1a_List4\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_List4'\n          description: GET OK 200\n      summary: GET /cont1a/list4\n      tags:\n      - Cont1a_List4\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {id}\n      in: path\n      name: id\n      required: true\n    post:\n      operationId: postCont1a_List4\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a_List4'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a/list4\n  /testdevice/v1.0.0/{target}/cont1a/list4/{id}/list4a/{fkey1}/{fkey2}:\n    delete:\n      operationId: deleteCont1a_List4_List4a\n      responses:\n        default:\n          description: \"\"\n      summary: DELETE /cont1a/list4/{id}/list4a\n    description: A list within a list with 2 keys as leaf refs\n    get:\n      operationId: getCont1a_List4_List4a\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_List4_List4a'\n          description: GET OK 200\n      summary: GET /cont1a/list4/{id}/list4a\n      tags:\n      - Cont1a_List4_List4a\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {id}\n      in: path\n      name: id\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {fkey1}\n      in: path\n      name: fkey1\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {fkey2}\n      in: path\n      name: fkey2\n      required: true\n    post:\n      operationId: postCont1a_List4_List4a\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a_List4_List4a'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a/list4/{id}/list4a\n  /testdevice/v1.0.0/{target}/cont1a/list5/{key1}/{key2}:\n    delete:\n      operationId: deleteCont1a_List5\n      responses:\n        default:\n          description: \"\"\n      summary: DELETE /cont1a/list5\n    description: A list with 2 keys\n    get:\n      operationId: getCont1a_List5\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1a_List5'\n          description: GET OK 200\n      summary: GET /cont1a/list5\n      tags:\n      - Cont1a_List5\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {key1}\n      in: path\n      name: key1\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {key2}\n      in: path\n      name: key2\n      required: true\n    post:\n      operationId: postCont1a_List5\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Cont1a_List5'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /cont1a/list5\n  /testdevice/v1.0.0/{target}/cont1b-state:\n    description: A second top level container - this one for state attributes. Edit\n      symbol should not be visible\n    get:\n      operationId: getCont1b-state\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1b-state'\n          description: GET OK 200\n      summary: GET /cont1b-state\n      tags:\n      - \"\"\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /testdevice/v1.0.0/{target}/cont1b-state/list2b/{index}:\n    description: A simple list of state items\n    get:\n      operationId: getCont1b-state_List2b\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cont1b-state_List2b'\n          description: GET OK 200\n      summary: GET /cont1b-state/list2b\n      tags:\n      - Cont1b-state_List2b\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {index}\n      in: path\n      name: index\n      required: true\n"
		}
	},
	"Error": "callback: json: cannot unmarshal number 0.001 into Go struct field Schema.minimum of type int64"
}