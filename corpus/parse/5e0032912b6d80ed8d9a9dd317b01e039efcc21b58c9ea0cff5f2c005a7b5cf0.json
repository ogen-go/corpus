{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/readmeio/oas-examples"
		},
		"file": {
			"name": "schema-validation.yaml",
			"size": 0,
			"path": "3.0/yaml/schema-validation.yaml",
			"byteSize": 8800,
			"content": "openapi: 3.0.3\ninfo:\n  title: Request Schema Validation\n  description: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#path-item-object\n  version: 1.0.0\nservers:\n  - url: https://httpbin.org\npaths:\n  '/anything/numbers':\n    parameters:\n      - in: query\n        name: id-required\n        schema:\n          type: number\n          minimum: 10\n          maximum: 20\n          multipleOf: 2\n          default: 12\n          example: 14\n        required: true\n      - in: query\n        name: id-optional\n        schema:\n          type: number\n          minimum: 10\n          maximum: 20\n          multipleOf: 2\n          default: 12\n          example: 14\n        required: false\n      - in: query\n        name: id-exclusive-required\n        schema:\n          type: number\n          minimum: 10\n          maximum: 20\n          exclusiveMinimum: true\n          exclusiveMaximum: true\n          multipleOf: 2\n          default: 12\n          example: 14\n        required: true\n      - in: query\n        name: id-exclusive-optional\n        schema:\n          type: number\n          minimum: 10\n          maximum: 20\n          exclusiveMinimum: true\n          exclusiveMaximum: true\n          multipleOf: 2\n          default: 12\n          example: 14\n        required: false\n    get:\n      summary: Number validation\n      responses:\n        '200':\n          description: OK\n  '/anything/strings':\n    parameters:\n      - in: query\n        name: name-length-required\n        schema:\n          type: string\n          minLength: 10\n          maxLength: 20\n          default: this is a default\n          example: this is an example\n        required: true\n      - in: query\n        name: name-length-optional\n        schema:\n          type: string\n          minLength: 10\n          maxLength: 20\n          default: this is a default\n          example: this is an example\n        required: false\n      - in: query\n        name: name-pattern-required\n        schema:\n          type: string\n          pattern: a\\w+b\n          default: aDEFAULTb\n          example: aEXAMPLEb\n        required: true\n      - in: query\n        name: complex-pattern-required\n        description: \"OpenAPI 3.0.3, which defaults to JSON Schema v4, does not provide\n          the unicode flag to the input tooltip regex validation. This means that the\n          following regex should work. It won't work if unicode is enabled because\n          it has unescaped brace literals \"\n        schema:\n          type: string\n          pattern: '^(?:{[0-9a-fA-F]{4}(?:-?[0-9a-fA-F]{4}){7}}|[0-9a-fA-F]{4}(?:-?[0-9a-fA-F]{4}){7})$'\n        required: true\n      - in: query\n        name: name-pattern-optional\n        schema:\n          type: string\n          pattern: a\\w+b\n          default: aDEFAULTb\n          example: aEXAMPLEb\n        required: false\n    get:\n      summary: String validation\n      responses:\n        '200':\n          description: OK\n  '/anything/jsonschema-formats':\n    parameters:\n      - in: query\n        name: date-time\n        schema:\n          type: string\n          format: date-time\n          default: '1985-04-12T23:20:50.52Z'\n          example: '1996-12-19T16:39:57-08:00'\n        required: true\n      - in: query\n        name: date\n        schema:\n          type: string\n          format: date\n          default: '1985-04-12'\n          example: '1996-12-19'\n        required: false\n      - in: query\n        name: time\n        schema:\n          type: string\n          format: time\n          default: '23:20:50.52'\n          example: 16:39:57-08:00\n        required: false\n      - in: query\n        name: duration\n        schema:\n          type: string\n          format: duration\n          default: TBD\n          example: TBD\n        required: false\n      - in: query\n        name: email\n        schema:\n          type: string\n          format: email\n          default: default@readme.io\n          example: example@readme.io\n        required: false\n      - in: query\n        name: idn-email\n        schema:\n          type: string\n          format: idn-email\n          default: 用户@例子.广告\n          example: अजय@डाटा.भारत\n        required: false\n      - in: query\n        name: hostname\n        schema:\n          type: string\n          format: hostname\n          default: readme.io\n          example: readme.com\n        required: false\n      - in: query\n        name: idn-hostname\n        schema:\n          type: string\n          format: idn-hostname\n          default: Bücher.example\n          example: Bücher.example\n        required: false\n      - in: query\n        name: ipv4\n        schema:\n          type: string\n          format: ipv4\n          default: 127.0.0.1\n          example: 127.0.0.1\n        required: false\n      - in: query\n        name: ipv6\n        schema:\n          type: string\n          format: ipv6\n          default: 0:0:0:0:0:0:0:1\n          example: 0:0:0:0:0:0:0:1\n        required: false\n      - in: query\n        name: uri\n        schema:\n          type: string\n          format: uri\n          default: http://www.ietf.org/rfc/rfc2396.txt\n          example: mailto:John.Doe@example.com\n        required: false\n      - in: query\n        name: uri-reference\n        schema:\n          type: string\n          format: uri-reference\n          default: '/default'\n          example: '/example'\n        required: false\n      - in: query\n        name: iri\n        schema:\n          type: string\n          format: iri\n          default: https://en.wiktionary.org/wiki/Ῥόδος\n          example: https://en.wiktionary.org/wiki/ῥόδον\n        required: false\n      - in: query\n        name: iri-reference\n        schema:\n          type: string\n          format: iri-reference\n          default: '/wiki/Ῥόδος'\n          example: '/wiki/ῥόδον'\n        required: false\n      - in: query\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n          default: 123e4567-e89b-12d3-a456-426614174000\n          example: 123e4567-e89b-12d3-a456-426652340000\n        required: false\n      - in: query\n        name: uri-template\n        schema:\n          type: string\n          format: uri-template\n          default: http://example.com/search{?q,lang}\n          example: http://example.com/dictionary/{term:1}/{term}\n        required: false\n      - in: query\n        name: json-pointer\n        schema:\n          type: string\n          format: json-pointer\n          default: '#/foo'\n          example: '#/a~1b'\n        required: false\n      - in: query\n        name: relative-json-pointer\n        schema:\n          type: string\n          format: relative-json-pointer\n          default: 1/nested/objects\n          example: 2/foo/0\n        required: false\n      - in: query\n        name: regex\n        schema:\n          type: string\n          format: regex\n          default: '/default/'\n          example: '/[Ee]xample/'\n        required: false\n    get:\n      summary: Formats defined by JSON Schema\n      responses:\n        '200':\n          description: OK\n  '/anything/oas-formats':\n    parameters:\n      - in: query\n        name: int32\n        schema:\n          type: integer\n          format: int32\n          default: '12345'\n          example: '23456'\n        required: true\n      - in: query\n        name: int64\n        schema:\n          type: integer\n          format: int64\n          default: '3000000000'\n          example: '4000000000'\n        required: false\n      - in: query\n        name: float\n        schema:\n          type: number\n          format: float\n          default: '1.0'\n          example: '2.0'\n        required: false\n      - in: query\n        name: double\n        schema:\n          type: number\n          format: double\n          default: '3000000000.0'\n          example: '4000000000.0'\n        required: false\n      - in: query\n        name: byte\n        schema:\n          type: string\n          format: byte\n        required: false\n      - in: query\n        name: binary\n        schema:\n          type: string\n          format: binary\n        required: false\n      - in: query\n        name: password\n        schema:\n          type: string\n          format: password\n          example: '******'\n        required: false\n    get:\n      summary: Formats defined by OpenAPI\n      responses:\n        '200':\n          description: OK\n  '/anything/booleans':\n    parameters:\n      - in: query\n        name: tf-required\n        schema:\n          type: boolean\n          default: true\n          example: false\n        required: true\n      - in: query\n        name: tf-optional\n        schema:\n          type: boolean\n          default: true\n          example: false\n        required: false\n    get:\n      summary: Booleans\n      responses:\n        '200':\n          description: OK\n",
			"canonicalURL": "/github.com/readmeio/oas-examples@ce1e5c9b6bda57cbfce4b9ba21c968a30eb63529/-/blob/3.0/yaml/schema-validation.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/readmeio/oas-examples/blob/ce1e5c9b6bda57cbfce4b9ba21c968a30eb63529/3.0/yaml/schema-validation.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/anything/oas-formats\": parameters: parse parameter \"int32\": parse schema: at 3.0/yaml/schema-validation.yaml:277:20: parse default: expected type \"integer\", got \"string\""
}