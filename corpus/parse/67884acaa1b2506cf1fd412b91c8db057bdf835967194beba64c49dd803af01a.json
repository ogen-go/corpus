{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/InterDigitalInc/AdvantEDGE"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "go-apps/meep-ams/api/swagger.yaml",
			"byteSize": 57561,
			"content": "openapi: 3.0.0\ninfo:\n  title: AdvantEDGE Application Mobility API\n  version: '2.2.1'\n  description: Application Mobility Service is AdvantEDGE's implementation of [ETSI\n    MEC ISG MEC021 Application Mobility API](http://www.etsi.org/deliver/etsi_gs/MEC/001_099/021/02.02.01_60/gs_MEC021v020201p.pdf)\n    \u003cp\u003e[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt)\n    \u003cp\u003e**Micro-service**\u003cbr\u003e[meep-ams](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-ams)\n    \u003cp\u003e**Type \u0026 Usage**\u003cbr\u003eEdge Service used by edge applications that want to get\n    information about application mobility in the network \u003cp\u003e**Note**\u003cbr\u003eAdvantEDGE\n    supports a selected subset of Application Mobility API endpoints (see below).\n  license:\n    name: Apache 2.0\n    url: 'https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE'\n  contact:\n    name: InterDigital AdvantEDGE Support\n    email: AdvantEDGE@InterDigital.com\nexternalDocs:\n  description: ETSI GS MEC 021 Application Mobility Service API, v2.2.1\n  url: https://www.etsi.org/deliver/etsi_gs/MEC/001_099/021/02.02.01_60/gs_mec021v020201p.pdf\nservers:\n- url: https://localhost/sandboxname/amsi/v1\n  variables: {}\ntags:\n  - name: amsi\n  - name: unsupported\npaths:\n  /queries/adjacent_app_instances:\n    get:\n      tags:\n      - unsupported\n      summary: 'Retrieve information about this subscription.'\n      description: Retrieve information about this subscription.\n      operationId: adj_app_instGET\n      parameters:\n      - name: filter\n        in: query\n        description: Attribute-based filtering parameters according to ETSI GS MEC 009\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: all_fields\n        in: query\n        description: Include all complex attributes in the response.\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: fields\n        in: query\n        description: Complex attributes to be included into the response. See clause 6.18 in ETSI GS MEC 009\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: exclude_fields\n        in: query\n        description: Complex attributes to be excluded from the response.See clause 6.18 in ETSI GS MEC 009\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: exclude_default\n        in: query\n        description: Indicates to exclude the following complex attributes from the response  See clause 6.18 in ETSI GS MEC 011 for details.\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A response body containing  zero or more adjacent application instances\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdjacentAppInstanceInfo'\n                description: ''\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    parameters: []\n  /app_mobility_services:\n    get:\n      tags:\n      - amsi\n      summary: 'Retrieve information about the registered application mobility service.'\n      description: ' Retrieve information about the registered application mobility service.'\n      operationId: app_mobility_serviceGET\n      parameters:\n      - name: filter\n        in: query\n        description: Attribute-based filtering parameters according to ETSI GS MEC 011\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: all_fields\n        in: query\n        description: Include all complex attributes in the response.\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: fields\n        in: query\n        description: Complex attributes to be included into the response. See clause 6.18 in ETSI GS MEC 011\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: exclude_fields\n        in: query\n        description: Complex attributes to be excluded from the response.See clause 6.18 in ETSI GS MEC 011\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: exclude_default\n        in: query\n        description: Indicates to exclude the following complex attributes from the response  See clause 6.18 in ETSI GS MEC 011 for details.\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Contains in an array the representations of zero or more application mobility services.\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegistrationInfo'\n                description: ''\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    post:\n      tags:\n      - amsi\n      summary: 'Create a new application mobility service for the service requester.'\n      description: Create a new application mobility service for the service requester.\n      operationId: app_mobility_servicePOST\n      parameters: []\n      requestBody:\n        description: Application mobility service to be created\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrationInfo'\n        required: true\n      responses:\n        '201':\n          description: Successful response for application mobility service creation\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistrationInfo'\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    parameters: []\n  /app_mobility_services/{appMobilityServiceId}:\n    get:\n      tags:\n      - amsi\n      summary: 'Retrieve information about this individual application mobility service'\n      description: Retrieve information about this individual application mobility service\n      operationId: app_mobility_service_by_idGET\n      parameters:\n      - name: appMobilityServiceId\n        in: path\n        description: It uniquely identifies the created individual application mobility service\n        required: true\n        style: simple\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Contains a representation of the application mobility service.\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistrationInfo'\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    put:\n      tags:\n      - amsi\n      summary: ' update the existing individual application mobility service'\n      description: ' update the existing individual application mobility service'\n      operationId: app_mobility_service_by_idPUT\n      parameters:\n      - name: appMobilityServiceId\n        in: path\n        description: It uniquely identifies the created individual application mobility service\n        required: true\n        style: simple\n        schema:\n          type: string\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrationInfo'\n        required: true\n      responses:\n        '200':\n          description: Contains a data type describing the updated application mobility service.\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistrationInfo'\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '412':\n          description: 'Precondition failed :  used when a condition has failed during conditional requests, e.g. when using ETags to avoid write conflicts when using PUT'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '422':\n          description: 'Unprocessable Entity : used to indicate that the server understands the content type of the request entity and that the syntax of the request entity is correct but that the server is unable to process the contained instructions. This error condition can occur if an JSON request body is syntactically correct but semantically incorrect, for example if the target area for the request is considered too large. This error condition can also occur if the capabilities required by the request are not supported.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    delete:\n      tags:\n      - amsi\n      summary: ' deregister the individual application mobility service'\n      description: ' deregister the individual application mobility service'\n      operationId: app_mobility_service_by_idDELETE\n      parameters:\n      - name: appMobilityServiceId\n        in: path\n        description: It uniquely identifies the created individual application mobility service\n        required: true\n        style: simple\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content\n          headers: {}\n          content: {}\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    parameters: []\n  /app_mobility_services/{appMobilityServiceId}/deregister_task:\n    post:\n      tags:\n      - unsupported\n      summary: ' deregister the individual application mobility service'\n      description: ' deregister the individual application mobility service'\n      operationId: app_mobility_service_derPOST\n      parameters:\n      - name: appMobilityServiceId\n        in: path\n        description: It uniquely identifies the created individual application mobility service\n        required: true\n        style: simple\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content\n          headers: {}\n          content: {}\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    parameters: []\n  /subscriptions:\n    get:\n      tags:\n      - amsi\n      summary: 'Retrieve information about the subscriptions for this requestor.'\n      description: Retrieve information about the subscriptions for this requestor.\n      operationId: subGET\n      parameters:\n      - name: subscriptionType\n        in: query\n        description: 'Query parameter to filter on a specific subscription type. Permitted values: mobility_proc or adj_app_info'\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Contains  the list of links to requestor subscriptions.\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionLinkList'\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    post:\n      tags:\n      - amsi\n      summary: 'Create a new subscription to Application Mobility Service notifications.'\n      description: Create a new subscription to Application Mobility Service notifications.\n      operationId: subPOST\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineSubscription'\n        required: true\n      responses:\n        '201':\n          description: Created subscription is described using the appropriate data type\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineSubscription'\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '415':\n          description: 'Unsupported Media Type :  used to indicate that the server or the client does not support the content type of the entity body.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '422':\n          description: 'Unprocessable Entity : used to indicate that the server understands the content type of the request entity and that the syntax of the request entity is correct but that the server is unable to process the contained instructions. This error condition can occur if an JSON request body is syntactically correct but semantically incorrect, for example if the target area for the request is considered too large. This error condition can also occur if the capabilities required by the request are not supported.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    parameters: []\n  /subscriptions/{subscriptionId}:\n    get:\n      tags:\n      - amsi\n      summary: 'Retrieve information about this subscription.'\n      description: Retrieve information about this subscription.\n      operationId: sub_byIdGET\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: Refers to created subscription, where the AMS API allocates a unique resource name for this subscription\n        required: true\n        style: simple\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A response body containing data type describing the specific RNI event subscription\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineSubscription'\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    put:\n      tags:\n      - amsi\n      summary: 'update the existing individual subscription.'\n      description: update the existing individual subscription.\n      operationId: sub_byIdPUT\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: Refers to created subscription, where the AMS API allocates a unique resource name for this subscription\n        required: true\n        style: simple\n        schema:\n          type: string\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineSubscription'\n        required: true\n      responses:\n        '200':\n          description: a response body containing data type describing the updated subscription\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineSubscription'\n        '400':\n          description: 'Bad Request : used to indicate that incorrect parameters were passed to the request.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: 'Not Acceptable : used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '412':\n          description: 'Precondition failed :  used when a condition has failed during conditional requests, e.g. when using ETags to avoid write conflicts when using PUT'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '422':\n          description: 'Unprocessable Entity : used to indicate that the server understands the content type of the request entity and that the syntax of the request entity is correct but that the server is unable to process the contained instructions. This error condition can occur if an JSON request body is syntactically correct but semantically incorrect, for example if the target area for the request is considered too large. This error condition can also occur if the capabilities required by the request are not supported.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    delete:\n      tags:\n      - amsi\n      summary: 'cancel the existing individual subscription'\n      description: cancel the existing individual subscription\n      operationId: sub_byIdDELETE\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: Refers to created subscription, where the AMS API allocates a unique resource name for this subscription\n        required: true\n        style: simple\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content\n          headers: {}\n          content: {}\n        '401':\n          description: 'Unauthorized :  used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: 'Forbidden :  operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: 'Not Found :  used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: 'Too Many Requests : used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      deprecated: false\n    parameters: []\n\n  /uri_provided_by_subscriber:\n    post:\n      tags:\n      - unsupported\n      summary: delivers a notification from the AMS resource to the subscriber\n      description: delivers a notification from the AMS resource to the subscriber\n      operationId: notificationPOST\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineNotification'\n        required: true\n      responses:\n        '204':\n          description: The notification was delivered successfully. The response body shall be empty.\n          headers: {}\n          content: {}\n        '401':\n          description: It is used when the client did not submit credentials.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '403':\n          description: operation is not allowed given the current status of the resource.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Used when a client provided a URI that cannot be mapped to a valid resource URI.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '406':\n          description: Used to indicate that the server cannot provide the any of the content formats supported by the client.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '429':\n          description: Used when a rate limiter has triggered.'\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n\n  /notifications/mec011/appTermination:\n    post:\n      tags:\n      - amsi\n      summary: 'MEC011 Application Termination notification for self termination'\n      description: 'Terminates itself.'\n      operationId: mec011AppTerminationPOST\n      requestBody:\n        description: 'Termination notification details'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppTerminationNotification'\n            example:\n                notificationType: 'AppTerminationNotification'\n                operationAction: 'TERMINATING'\n                maxGracefulTimeout: 10\n                links:\n                  subscription:\n                    href: 'http://mec011Server.example.com/mec_app_support/v1/applications/appId1234/subscriptions/sub123'\n                  confirmTermination:\n                    href: 'http://mec011Server.example.com/mec_app_support/v1/confirm_termination'\n      responses:\n        '204':\n          description: No Content\n      x-swagger-router-controller: 'notifications'\n\ncomponents:\n  schemas:\n    AdjacentAppInfoSubscriptionLinks:\n      title: AdjacentAppInfoSubscriptionLinks\n      required:\n      - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/LinkType'\n      description: Hyperlink related to the resource. This shall be only included in the HTTP responses and in HTTP PUT requests.\n    AdjacentAppInfoSubscriptionFilterCriteria:\n      title: AdjacentAppInfoSubscriptionFilterCriteria\n      type: object\n      properties:\n        appInstanceId:\n          type: string\n      description: List of filtering criteria for the subscription. Any filtering criteria from below, which is included in the request, shall also be included in the response.\n    AdjacentAppInfoSubscription:\n      title: AdjacentAppInfoSubscription\n      required:\n      - callbackReference\n      - filterCriteria\n      - subscriptionType\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/AdjacentAppInfoSubscriptionLinks'\n        callbackReference:\n          type: string\n          format: uri\n          description: URI selected by the service consumer to receive notifications on the subscribed Application Mobility Service. This shall be included both in the request and in response.\n        requestTestNotification:\n          type: boolean\n          description: Shall be set to TRUE by the service consumer to request a test notification via HTTP on the callbackReference URI, specified in ETSI GS MEC 009, as described in clause 6.12a.\n        websockNotifConfig:\n          $ref: '#/components/schemas/WebsockNotifConfig'\n        expiryDeadline:\n          description: Identifies a boundary after which the subscription will expire.\n          $ref: '#/components/schemas/TimeStamp'\n        filterCriteria:\n          $ref: '#/components/schemas/AdjacentAppInfoSubscriptionFilterCriteria'\n        subscriptionType:\n          $ref: '#/components/schemas/SubscriptionType'\n          description: Shall be set to \"AdjacentAppInfoSubscription\".\n          example:\n          - AdjacentAppInfoSubscription\n    AdjacentAppInstanceInfo:\n      title: AdjacentAppInstanceInfo\n      required:\n      - appDId\n      - appInstanceCommLink\n      - appInstanceId\n      type: object\n      properties:\n        appDId:\n          type: string\n          description: Identifier of the application descriptor.\n        appInstanceCommLink:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommunicationInterface'\n          description: It specifies the communication interface of application instance.\n        appInstanceId:\n          type: string\n          description: Identifier of the application instance.\n        mecHostInformation:\n          $ref: '#/components/schemas/MECHostInformation'\n        registeredInstanceId:\n          type: string\n          description: dentifier of the application instance that registers to the AMS, which is instantiated from the application descriptor identified by the attribute \"appDId\".\n    AppMobilityServiceLevel:\n      title: AppMobilityServiceLevel\n      enum:\n      - APP_MOBILITY_NOT_ALLOWED\n      - APP_MOBILITY_WITH_CONFIRMATION\n      - APP_MOBILITY_WITHOUT_CONFIRMATION\n      type: string\n      description: This attribute provides an option for the application instance (server) to communicate with the application client before relocating this application instance to another MEC host.\n      example:\n      - APP_MOBILITY_NOT_ALLOWED\n    CommunicationInterface.IpAddresses:\n      title: CommunicationInterface.IpAddresses\n      required:\n      - host\n      - port\n      type: object\n      properties:\n        host:\n          type: string\n        port:\n          type: integer\n    CommunicationInterface:\n      title: CommunicationInterface\n      type: object\n      properties:\n        ipAddresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommunicationInterface.IpAddresses'\n          description: ''\n    MobilityProcedureSubscriptionLinks:\n      title: MobilityProcedureSubscriptionLinks\n      required:\n      - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/LinkType'\n    MobilityProcedureSubscriptionFilterCriteria:\n      title: MobilityProcedureSubscriptionFilterCriteria\n      type: object\n      properties:\n        appInstanceId:\n          type: string\n          description: Identifier of the application instance that registers the Application Mobility Service.\n        associateId:\n          type: array\n          items:\n            $ref: '#/components/schemas/AssociateId'\n          description: 0 to N identifiers to associate the information for specific UE(s) and flow(s).\n        mobilityStatus:\n          type: array\n          items:\n            $ref: '#/components/schemas/MobilityStatus'\n          description: In case mobilityStatus is not included in the subscription request, the default value 1 = INTER_HOST_MOBILITY_TRIGGERED shall be used and included in the response.\n      description: List of filtering criteria for the subscription. Any filtering criteria from below, which is included in the request, shall also be included in the response.\n\n    WebsockNotifConfig:\n      type: object\n      properties:\n        websocketUri:\n          description: Set by AMS to indicate to the service consumer the Websocket URI to be used for delivering notifications.\n          type: string\n          format: uri\n        requestWebsocketUri:\n          type: boolean\n          description: Set to true by the service consumer to indicate that Websocket delivery is requested.\n\n    MobilityProcedureSubscription:\n      title: MobilityProcedureSubscription\n      required:\n      - filterCriteria\n      - subscriptionType\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/MobilityProcedureSubscriptionLinks'\n        callbackReference:\n          type: string\n          format: uri\n          description: URI selected by the service consumer to receive notifications on the subscribed Application Mobility Service. This shall be included both in the request and in response.\n        requestTestNotification:\n          type: boolean\n          description: Shall be set to TRUE by the service consumer to request a test notification via HTTP on the callbackReference URI, specified in ETSI GS MEC 009, as described in clause 6.12a.\n        websockNotifConfig:\n          description: Provides details to negotiate and signal the use of a Websocket connection between AMS and the service consumer for notifications.\n          $ref: '#/components/schemas/WebsockNotifConfig'\n        expiryDeadline:\n          description: Identifies a boundary after which the subscription will expire.\n          $ref: '#/components/schemas/TimeStamp'\n        filterCriteria:\n          $ref: '#/components/schemas/MobilityProcedureSubscriptionFilterCriteria'\n        subscriptionType:\n          $ref: '#/components/schemas/SubscriptionType'\n          description: Shall be set to \"MobilityProcedureSubscription\".\n          example:\n          - MobilityProcedureSubscription\n    MobilityProcedureNotification:\n      title: MobilityProcedureNotification\n      required:\n        - notificationType\n        - associateId\n        - mobilityStatus\n        - _links\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to \"MobilityProcedureNotification\".\n        timeStamp:\n          description: Date and time of the generation of the notification\n          $ref: '#/components/schemas/TimeStamp'\n        associateId:\n           type: array\n           description: 1 to N identifiers to associate the information for specific\n           items:\n             $ref: '#/components/schemas/AssociateId'\n        mobilityStatus:\n          description: Indicate the status of the UE mobility. Values are defined as following 1 = INTERHOST_MOVEOUT_TRIGGERED. 2 = INTERHOST_MOVEOUT_COMPLETED. 3 = INTERHOST_MOVEOUT_FAILED. Other values are reserved.\n          $ref: '#/components/schemas/MobilityStatus'\n        targetAppInfo:\n          type: object\n          required:\n            - appInstanceId\n          properties:\n            appInstanceId:\n              type: string\n              description: Identifiers of the target application instance.\n            commInterface:\n              description: If present, it specifies the communication interface of the application instance.\n              $ref: '#/components/schemas/CommunicationInterface'\n        _links:\n          $ref: '#/components/schemas/Link'\n    AdjacentAppInfoNotification:\n      title: AdjacentAppInfoNotification\n      required:\n        - notificationType\n        - _links\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to \"AdjacentAppInfoNotification\".\n        timeStamp:\n          description: Date and time of the generation of the notification\n          $ref: '#/components/schemas/TimeStamp'\n        associateId:\n           type: array\n           description: 1 to N identifiers to associate the information for specific\n           items:\n             $ref: '#/components/schemas/AssociateId'\n        adjacentAppInfo:\n          type: object\n          items:\n            $ref: '#/components/schemas/AdjacentAppInfoNotificationAdjacentAppInfo'\n        _links:\n          $ref: '#/components/schemas/Link'\n    AdjacentAppInfoNotificationAdjacentAppInfo:\n      type: object\n      required:\n        - appInstanceId\n        - commInterface\n      properties:\n        appInstanceId:\n          type: string\n          description: Identifier of the adjacent application instance.\n        commInterface:\n          type: array\n          description: If present, it represents the communication interface(s) information of the application instance.\n          items:\n            $ref: '#/components/schemas/CommunicationInterface'\n\n    ExpiryNotification:\n      title: ExpiryNotification\n      required:\n        - notificationType\n        - _links\n        - expiryDeadline\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to \"ExpiryNotification\".\n        timeStamp:\n          description: Date and time of the generation of the notification\n          $ref: '#/components/schemas/TimeStamp'\n        _links:\n          $ref: '#/components/schemas/Link'\n        expiryDeadline:\n          description: The boundary value setting in the subscription request.\n          $ref: '#/components/schemas/TimeStamp'\n    TestNotification:\n      title: TestNotification\n      required:\n        - notificationType\n        - _links\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to \"TestNotification\".\n        _links:\n           type: object\n           description: Hyperlink related to the resource.\n           required:\n             - subscription\n           properties:\n              subscription:\n                description: URI identifying the subscription for the test notification.\n                $ref: '#/components/schemas/LinkType'\n    MobilityStatus:\n      title: MobilityStatus\n      enum:\n      - INTERHOST_MOVEOUT_TRIGGERED\n      - INTERHOST_MOVEOUT_COMPLETED\n      - INTERHOST_MOVEOUT_FAILED\n      type: string\n      description: Indicate the status of the UE mobility\n      example:\n      - INTERHOST_MOVEOUT_TRIGGERED\n    RegistrationInfoDeviceInformation:\n      title: RegistrationInfoDeviceInformation\n      required:\n      - associateId\n      type: object\n      properties:\n        associateId:\n          $ref: '#/components/schemas/AssociateId'\n        appMobilityServiceLevel:\n          $ref: '#/components/schemas/AppMobilityServiceLevel'\n        contextTransferState:\n          $ref: '#/components/schemas/ContextTransferState'\n    RegistrationInfoServiceConsumerId:\n      title: RegistrationInfoServiceConsumerId\n      type: object\n      properties:\n        appInstanceId:\n          type: string\n          description: If present, it represents the identifier of the application instance registering the Application Mobility Service.\n        mepId:\n          type: string\n          description: If present, it represents the identifier of the MEC platform registering the Application Mobility Service.\n      description: The identifier of service consumer requesting the application mobility service, i.e. either the application instance ID or the MEC platform ID.\n    RegistrationInfo:\n      title: RegistrationInfo\n      required:\n      - serviceConsumerId\n      type: object\n      properties:\n        appMobilityServiceId:\n          type: string\n          description: The identifier of registered application mobility service. Shall be absent in POST requests, and present otherwise.\n        deviceInformation:\n          type: array\n          items:\n            $ref: '#/components/schemas/RegistrationInfoDeviceInformation'\n          description: If present, it specifies the device served by the application instance which is registering is registering the Application Mobility Service.\n        expiryTime:\n          type: integer\n          description: If present, it indicates the time of Application Mobility Service expiration from the time of registration accepted.The value \"0\" means infinite time, i.e. no expiration.The unit of expiry time is one second.\n        serviceConsumerId:\n          $ref: '#/components/schemas/RegistrationInfoServiceConsumerId'\n    SubscriptionLinkListLinks:\n      title: SubscriptionLinkListLinks\n      description: List of hyperlinks related to the resource.\n      required:\n      - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/LinkType'\n          description: URI of this resource.\n        subscription:\n          type: array\n          description: The service consumer’s subscriptions.\n          items:\n           $ref: '#/components/schemas/SubscriptionLinkListSubscription'\n    SubscriptionLinkListSubscription:\n      title: SubscriptionLinkListSubscription\n      required:\n      - href\n      - subscriptionType\n      type: object\n      properties:\n        href:\n          type: string\n          description: The URI referring to the subscription.\n        subscriptionType:\n          description:\n          $ref: '#/components/schemas/SubscriptionType'\n    SubscriptionLinkList:\n      title: SubscriptionLinkList\n      required:\n      - _links\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/SubscriptionLinkListLinks'\n          description: Hyperlinks related to the resource.\n\n    ContextTransferState:\n      title: ContextTransferState\n      enum:\n      - NOT_TRANSFERRED\n      - USER_CONTEXT_TRANSFER_COMPLETED\n      type: string\n      description: If present, it represents the state of transferring the user context to another application instance.\n      example:\n      - NOT_TRANSFERRED\n    SubscriptionType:\n      title: SubscriptionType\n      enum:\n      - MobilityProcedureSubscription\n      - AdjacentAppInfoSubscription\n      type: string\n    AssociateId:\n      title: AssociateId\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/AssociateIdType'\n        value:\n          type: string\n          description: Value for the identifier.\n    Link:\n      type: object\n      description: Object containing hyperlinks related to the resource.\n      required:\n        - subscription\n      properties:\n        subscription:\n          $ref: '#/components/schemas/LinkType'\n    LinkType:\n      title: LinkType\n      required:\n      - href\n      type: object\n      properties:\n        href:\n          type: string\n          description: The URI referring to the subscription.\n      description: \"'This data type represents a type of link'\"\n    TimeStamp:\n      title: TimeStamp\n      required:\n      - seconds\n      - nanoSeconds\n      type: object\n      properties:\n        seconds:\n          type: integer\n          description: \"'The seconds part of the Time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC.'\"\n        nanoSeconds:\n          type: integer\n          description: \"'The nanoseconds part of the Time. Time is defined as Unix-time since January 1, 1970, 00:00:00 UTC.'\"\n      description: \"'This data type represents the time stamp as Unix-time since January 1, 1970, 00:00:00 UTC'\"\n\n    KeyValuePairs:\n      type: object\n      additionalProperties:\n          type: object\n\n    MECHostInformation:\n      title: MECHostInformation\n      required:\n      - hostId\n      type: object\n      properties:\n        hostName:\n          type: string\n          description: Human-readable name of MEC host.\n        hostId:\n          description: \"'This data type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key-value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259'\"\n          $ref: '#/components/schemas/KeyValuePairs'\n\n\n    ProblemDetails:\n      title: ProblemDetails\n      type: object\n      properties:\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of the problem\n        instance:\n          type: string\n          description: A URI reference that identifies the specific occurrence of the problem\n        status:\n          type: integer\n          description: The HTTP status code for this occurrence of the problem\n        title:\n          type: string\n          description: A short, human-readable summary of the problem type\n        type:\n          type: string\n          description: A URI reference according to IETF RFC 3986 that identifies the problem type\n    AssociateIdType:\n      title: Type\n      enum:\n      - UE_IPv4_ADDRESS\n      - UE_IPV6_ADDRESS\n      - NATED_IP_ADDRESS\n      - GTP_TEID\n      type: string\n      description: Numeric value (0-255) corresponding to specified type of identifier\n      example:\n      - UE_IPv4_ADDRESS\n\n    AppTerminationNotification:\n      required:\n      - _links\n      - maxGracefulTimeout\n      - notificationType\n      - operationAction\n      type: object\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to AppTerminationNotification.\n        operationAction:\n          $ref: '#/components/schemas/OperationActionType'\n        maxGracefulTimeout:\n          type: integer\n          description: Maximum timeout value in seconds for graceful termination or\n            graceful stop of an application instance.\n          format: uint32\n        _links:\n          $ref: '#/components/schemas/AppTerminationNotification__links'\n      description: This type represents the information that the MEC platform notifies\n        the subscribed application instance about  the corresponding application instance\n        termination/stop.\n    OperationActionType:\n      description: Operation that is being performed on the MEC application instance.\n      type: string\n      enum:\n        - STOPPING\n        - TERMINATING\n    AppTerminationNotification__links:\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/LinkType'\n        confirmTermination:\n          $ref: '#/components/schemas/LinkType'\n    InlineSubscription:\n      oneOf:\n        - $ref: '#/components/schemas/MobilityProcedureSubscription'\n        - $ref: '#/components/schemas/AdjacentAppInfoSubscription'\n      discriminator:\n          propertyName: subscriptionType\n    InlineNotification:\n      oneOf:\n        - $ref: '#/components/schemas/MobilityProcedureNotification'\n        - $ref: '#/components/schemas/AdjacentAppInfoNotification'\n        - $ref: '#/components/schemas/ExpiryNotification'\n      discriminator:\n        propertyName: notificationType\n",
			"canonicalURL": "/github.com/InterDigitalInc/AdvantEDGE@f74051e57bea139bd3a4bb3c0b88ab88ea3242c6/-/blob/go-apps/meep-ams/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/InterDigitalInc/AdvantEDGE/blob/f74051e57bea139bd3a4bb3c0b88ab88ea3242c6/go-apps/meep-ams/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"AdjacentAppInfoNotification\": resolve \"#/components/schemas/AdjacentAppInfoNotification\": property \"adjacentAppInfo\": at go-apps/meep-ams/api/swagger.yaml:1203:13: items: object cannot contain 'items' field"
}