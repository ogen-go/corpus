{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opendatazurich/opendatazurich.github.io"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rpk-api/docs/openapi.yaml",
			"byteSize": 20471,
			"content": "openapi: 3.0.1\ninfo:\n  title: RPK-API, Finanzverwaltung\n  description: Schnittstelle der RPK Applikation für den Zugriff auf öffentliche Finanzdaten.\n  version: \"1.0\"\nservers:\n- url: https://api.stadt-zuerich.ch/rpkk-rs\n  variables: {}\n- url: https://api.integ.stadt-zuerich.ch/rpkk-rs\n  variables: {}\nsecurity:\n- api-key: []\npaths:\n  /v1/betragsreihen:\n    get:\n      summary: Liefert Betragsreihen.\n      description: Liefert die Betragsreihen für die angegebenen kontoIds und den\n        angegebenen Zeitraum.\n      operationId: getBetragsreihen\n      parameters:\n      - name: kontoId\n        in: query\n        description: kontoIds der Konten.\n        required: true\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int64\n      - name: jahre\n        in: query\n        description: Jahr(e) für welche(s) die Betragsreihen gesucht werden. Wird\n          der Parameter nicht angegeben, so werden die Betragsreihen für alle verfügbaren\n          Jahre geliefert.\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int32\n      responses:\n        default:\n          description: Liste von Konten.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListKontoBetragsReiheRs'\n        \"400\":\n          description: Wenn die kontoId nicht angegeben wird oder keiner Nummer entspricht.\n      security:\n      - ApiKeyAuth: []\n  /v1/budgetbuch:\n    get:\n      summary: Liefert die BudgetBuch-Einträge.\n      description: Liefert die BudgetBuch-Einträge für die angegebene Organisation\n        (Institution/Departement) und das entsprechende Jahr.\n      operationId: getBudgetBuch\n      parameters:\n      - name: orgKey\n        in: query\n        description: Key des gewünschten Departements oder der Institution.\n        required: true\n        schema:\n          type: string\n      - name: jahr\n        in: query\n        description: Jahr für welches die BudgetBuch-Einträge gesucht werden.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: BudgetBuch-Einträge für die angegebene Organisation und Jahr.\n            Wird kein entsprechendes Departement gefunden, so wird eine leere Antwort\n            geliefert.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListBudgetBuchEntryRs'\n        \"400\":\n          description: Wenn der orgKey leer ist oder wenn Jahr leer oder keine Zahl\n            ist.\n      security:\n      - ApiKeyAuth: []\n  /v1/betragsreihe:\n    get:\n      summary: Liefert Betragsreihen.\n      description: Liefert die Betragsreihen für die angegebene kontoId und den angegebenen\n        Zeitraum.\n      operationId: getBetragsreihe\n      parameters:\n      - name: kontoId\n        in: query\n        description: kontoId des Kontos.\n        required: true\n        schema:\n          type: string\n      - name: jahre\n        in: query\n        description: Jahr(e) für welche(s) die Betragsreihen gesucht werden. Wird\n          der Parameter nicht angegeben, so werden die Betragsreihen für alle verfügbaren\n          Jahre geliefert.\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int32\n      responses:\n        default:\n          description: Liste von Konten.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListBetragsReiheRs'\n        \"400\":\n          description: Wenn die kontoId nicht angegeben wird oder keiner Nummer entspricht.\n      security:\n      - ApiKeyAuth: []\n  /v1/departemente:\n    get:\n      summary: Liefert alle Departemente.\n      description: Liefert alle existierenden Departemente zurück.\n      operationId: getDepartemente\n      responses:\n        default:\n          description: Liste von Departementen.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListDepartementRs'\n      security:\n      - ApiKeyAuth: []\n  /v1/sachkonto2stellig:\n    get:\n      summary: Liefert die 2-stelligen Sachkonten mit ihren Beträgen.\n      description: Liefert die 2-stelligen Sachkonten entweder pro Institution oder\n        Departement für die angegebenen Jahre und Betragstyp. Das 2-stellige Sachkonto\n        entspricht den ersten 2 Stellen der Kontonummer. Der Betrag wird summiert\n        von allen Konten, welche das gleiche 2-stellige Sachkonto haben.\n      operationId: getSachkonten2Stellig\n      parameters:\n      - name: departement\n        in: query\n        description: Departement für welches die Sachkonten gesucht werden sollen.\n        schema:\n          type: integer\n          format: int32\n      - name: institution\n        in: query\n        description: Institution für welche die Sachkonten gesucht werden sollen.\n        schema:\n          type: integer\n          format: int32\n      - name: jahr\n        in: query\n        description: Jahr(e) für welche(s) die Sachkonten gesucht werden.\n        required: true\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int32\n      - name: betragsTyp\n        in: query\n        description: Betragstyp der Sachkonten.\n        required: true\n        schema:\n          type: string\n          enum:\n          - NOVEMBER_BRIEF\n          - GEMEINDERAT_BESCHLUSS\n          - NACHTRAGSKREDIT11_ANTRAG\n          - NACHTRAGSKREDIT12_ANTRAG\n          - NACHTRAGSKREDIT13_ANTRAG\n          - NACHTRAGSKREDIT14_ANTRAG\n          - NACHTRAGSKREDIT11_BESCHLUSS\n          - NACHTRAGSKREDIT12_BESCHLUSS\n          - NACHTRAGSKREDIT13_BESCHLUSS\n          - NACHTRAGSKREDIT14_BESCHLUSS\n          - NACHTRAGSKREDIT21_ANTRAG\n          - NACHTRAGSKREDIT22_ANTRAG\n          - NACHTRAGSKREDIT23_ANTRAG\n          - NACHTRAGSKREDIT24_ANTRAG\n          - NACHTRAGSKREDIT21_BESCHLUSS\n          - NACHTRAGSKREDIT22_BESCHLUSS\n          - NACHTRAGSKREDIT23_BESCHLUSS\n          - NACHTRAGSKREDIT24_BESCHLUSS\n          - RECHNUNG\n          - STADTRAT_ANTRAG\n          - N3\n          - N4\n      responses:\n        default:\n          description: Liste von Sachkonten.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListSachkontoRs'\n        \"400\":\n          description: Wenn kein Departement oder keine Institution, kein Jahr oder\n            kein Betragstyp angegeben wird.\n      security:\n      - ApiKeyAuth: []\n  /v1/rechnungsbuch:\n    get:\n      summary: Liefert die RechnungsBuch-Einträge.\n      description: Liefert die RechnungsBuch-Einträge für die angegebene Organisation\n        (Institution/Departement) und das entsprechende Jahr.\n      operationId: getRechnungsBuch\n      parameters:\n      - name: orgKey\n        in: query\n        description: Key des gewünschten Departements oder der Institution.\n        required: true\n        schema:\n          type: string\n      - name: jahr\n        in: query\n        description: Jahr für welches die RechnungsBuch-Einträge gesucht werden.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: RechnungsBuch-Einträge für die angegebene Organisation und\n            Jahr. Wird kein entsprechendes Departement gefunden, so wird eine leere\n            Antwort geliefert.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListRechnungsBuchEntryRs'\n        \"400\":\n          description: Wenn der Key leer ist oder wenn Jahr leer oder keine Zahl ist.\n      security:\n      - ApiKeyAuth: []\n  /v1/konten:\n    get:\n      summary: Liefert Konten.\n      description: Liefert alle Konten, welche den angeegebenen Kriterien entsprechen.\n        Nicht enthalten sind Konten deren Institutionen Produktgruppen enthalten und\n        die kontoNr mit 5,6,7 oder 8 beginnt.\n      operationId: getKonten\n      parameters:\n      - name: bezeichnung\n        in: query\n        description: Bezeichnung der Konten. Eine Suche mit Wildcards (*) ist möglich.\n        schema:\n          type: string\n      - name: kontoNr\n        in: query\n        description: KontoNr der Konten. Eine Suche mit Wildcards (*) ist möglich.\n        schema:\n          type: string\n      - name: orgKey\n        in: query\n        description: Key des Departements oder der Institution.\n        schema:\n          type: string\n      responses:\n        default:\n          description: Liste von Konten.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListKontoRs'\n      security:\n      - ApiKeyAuth: []\n  /v1/sachkonto1stellig:\n    get:\n      summary: Liefert die 1-stelligen Sachkonten mit ihren Beträgen.\n      description: Liefert die 1-stelligen Sachkonten für das Departement für die\n        angegebenen Jahre und Betragstyp. Das 1-stellige Sachkonto entspricht der\n        ersten Stelle der Kontonummer. Der Betrag wird summiert von allen Konten,\n        welche das gleiche 1-stellige Sachkonto haben.\n      operationId: getSachkonten1Stellig\n      parameters:\n      - name: departement\n        in: query\n        description: Departement für welches die Sachkonten gesucht werden sollen.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: jahr\n        in: query\n        description: Jahr(e) für welche(s) die Sachkonten gesucht werden.\n        required: true\n        schema:\n          type: array\n          items:\n            type: integer\n            format: int32\n      - name: betragsTyp\n        in: query\n        description: Betragstyp der Sachkonten.\n        required: true\n        schema:\n          type: string\n          enum:\n          - NOVEMBER_BRIEF\n          - GEMEINDERAT_BESCHLUSS\n          - NACHTRAGSKREDIT11_ANTRAG\n          - NACHTRAGSKREDIT12_ANTRAG\n          - NACHTRAGSKREDIT13_ANTRAG\n          - NACHTRAGSKREDIT14_ANTRAG\n          - NACHTRAGSKREDIT11_BESCHLUSS\n          - NACHTRAGSKREDIT12_BESCHLUSS\n          - NACHTRAGSKREDIT13_BESCHLUSS\n          - NACHTRAGSKREDIT14_BESCHLUSS\n          - NACHTRAGSKREDIT21_ANTRAG\n          - NACHTRAGSKREDIT22_ANTRAG\n          - NACHTRAGSKREDIT23_ANTRAG\n          - NACHTRAGSKREDIT24_ANTRAG\n          - NACHTRAGSKREDIT21_BESCHLUSS\n          - NACHTRAGSKREDIT22_BESCHLUSS\n          - NACHTRAGSKREDIT23_BESCHLUSS\n          - NACHTRAGSKREDIT24_BESCHLUSS\n          - RECHNUNG\n          - STADTRAT_ANTRAG\n          - N3\n          - N4\n      responses:\n        default:\n          description: Liste von Sachkonten.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListSachkontoRs'\n        \"400\":\n          description: Wenn kein Departement, Jahr oder Betragstyp angegeben wurde.\n      security:\n      - ApiKeyAuth: []\n  /v1/departemente/{orgKey}:\n    get:\n      summary: Liefert ein Departement.\n      description: Liefert das gewünschte Departement für den angegebenen orgKey.\n      operationId: getDepartement\n      parameters:\n      - name: orgKey\n        in: path\n        description: Key des gewünschten Departements.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Departement mit dem angegebenen orgKey. Wird kein entsprechendes\n            Departement gefunden, so wird eine leere Antwort geliefert.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepartementRs'\n      security:\n      - ApiKeyAuth: []\n  /v1/konten/{kontoId}:\n    get:\n      summary: Liefert ein Konto.\n      description: Liefert ein gewünschtes Konto mit der angegebenen kontoId.\n      operationId: getKonto\n      parameters:\n      - name: kontoId\n        in: path\n        description: kontoId der Konten. Eine Suche mit Wildcards (*) ist möglich.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Liste von Konten.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KontoRs'\n        \"400\":\n          description: Wenn die kontoId nicht angegeben wird oder keiner Nummer entspricht.\n      security:\n      - ApiKeyAuth: []\n  /v1/institutionen:\n    get:\n      summary: Liefert alle Institutionen.\n      description: Liefert alle existierenden Institutionen wenn kein orgKeyDepartement\n        angegeben wird. Falls ein orgKeyDepartement angegeben wird, so werden alle\n        Institutionen des entsprechenden Departements geliefert.\n      operationId: getInstitutionen\n      parameters:\n      - name: orgKeyDepartement\n        in: query\n        description: Key des Departements für welches die zugehörigen Institutionen\n          gesucht werden sollen. Wird kein Wert für orgKeyDepartement angegeben, so\n          werden sämtlich Institutionen zurückgegeben.\n        schema:\n          type: string\n      responses:\n        default:\n          description: Liste von Institutionen. Werden keine Institutionen für die\n            angegebene orgKeyDepartement gefunden, so wird ein leeres Resultat zurückgegeben.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultListInstitutionRs'\n      security:\n      - ApiKeyAuth: []\n  /v1/institutionen/{orgKey}:\n    get:\n      summary: Liefert eine Institution.\n      description: Liefert die gewünschte Institution für den angegebenen orgKey.\n        Falls ein orgKeyDepartement angegeben wird, so werden alle Institutionen des\n        entsprechenden Departements geliefert.\n      operationId: getInstitution\n      parameters:\n      - name: orgKey\n        in: path\n        description: Key der gewünschten Institution.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Institutionen mit dem angegebenen orgKey. Wird keine entsprechende\n            Institution gefunden, so wird ein leeres Resultat zurückgegeben.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstitutionRs'\n      security:\n      - ApiKeyAuth: []\ncomponents:\n  schemas:\n    BetragRs:\n      type: object\n      properties:\n        betragsTyp:\n          type: string\n          enum:\n          - NOVEMBER_BRIEF\n          - GEMEINDERAT_BESCHLUSS\n          - NACHTRAGSKREDIT11_ANTRAG\n          - NACHTRAGSKREDIT12_ANTRAG\n          - NACHTRAGSKREDIT13_ANTRAG\n          - NACHTRAGSKREDIT14_ANTRAG\n          - NACHTRAGSKREDIT11_BESCHLUSS\n          - NACHTRAGSKREDIT12_BESCHLUSS\n          - NACHTRAGSKREDIT13_BESCHLUSS\n          - NACHTRAGSKREDIT14_BESCHLUSS\n          - NACHTRAGSKREDIT21_ANTRAG\n          - NACHTRAGSKREDIT22_ANTRAG\n          - NACHTRAGSKREDIT23_ANTRAG\n          - NACHTRAGSKREDIT24_ANTRAG\n          - NACHTRAGSKREDIT21_BESCHLUSS\n          - NACHTRAGSKREDIT22_BESCHLUSS\n          - NACHTRAGSKREDIT23_BESCHLUSS\n          - NACHTRAGSKREDIT24_BESCHLUSS\n          - RECHNUNG\n          - STADTRAT_ANTRAG\n          - N3\n          - N4\n        wert:\n          type: number\n          format: double\n        begruendung:\n          type: string\n        betragInRappen:\n          type: integer\n          format: int64\n    KontoBetragsReiheRs:\n      type: object\n      properties:\n        jahr:\n          type: integer\n          format: int32\n        betraege:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetragRs'\n        konto:\n          type: integer\n          format: int64\n    ResultListKontoBetragsReiheRs:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/KontoBetragsReiheRs'\n    BudgetBuchEntryRs:\n      type: object\n      properties:\n        konto:\n          $ref: '#/components/schemas/KontoRs'\n        budgetAktuell:\n          type: integer\n          format: int32\n        budgetFlag:\n          type: string\n        budgetVorjahr:\n          type: integer\n          format: int32\n        rechnungVorjahr:\n          type: integer\n          format: int32\n        abweichungVJCHF:\n          type: integer\n          format: int32\n        abweichungVJProz:\n          type: number\n        begruendung:\n          type: string\n    DepartementRs:\n      type: object\n      properties:\n        key:\n          type: string\n        bezeichnung:\n          type: string\n        kurzname:\n          type: string\n    InstitutionRs:\n      type: object\n      properties:\n        key:\n          type: string\n        bezeichnung:\n          type: string\n        kurzname:\n          type: string\n        departement:\n          $ref: '#/components/schemas/DepartementRs'\n    KontoRs:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        kontoNr:\n          type: string\n        bezeichnung:\n          type: string\n        institution:\n          $ref: '#/components/schemas/InstitutionRs'\n    ResultListBudgetBuchEntryRs:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/BudgetBuchEntryRs'\n    BetragsReiheRs:\n      type: object\n      properties:\n        jahr:\n          type: integer\n          format: int32\n        betraege:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetragRs'\n    ResultListBetragsReiheRs:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetragsReiheRs'\n    ResultListDepartementRs:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/DepartementRs'\n    ResultListSachkontoRs:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/SachkontoRs'\n    SachkontoRs:\n      type: object\n      properties:\n        institution:\n          type: string\n        sachkonto:\n          type: string\n        betrag:\n          type: number\n          format: double\n        betragsTyp:\n          type: string\n          enum:\n          - NOVEMBER_BRIEF\n          - GEMEINDERAT_BESCHLUSS\n          - NACHTRAGSKREDIT11_ANTRAG\n          - NACHTRAGSKREDIT12_ANTRAG\n          - NACHTRAGSKREDIT13_ANTRAG\n          - NACHTRAGSKREDIT14_ANTRAG\n          - NACHTRAGSKREDIT11_BESCHLUSS\n          - NACHTRAGSKREDIT12_BESCHLUSS\n          - NACHTRAGSKREDIT13_BESCHLUSS\n          - NACHTRAGSKREDIT14_BESCHLUSS\n          - NACHTRAGSKREDIT21_ANTRAG\n          - NACHTRAGSKREDIT22_ANTRAG\n          - NACHTRAGSKREDIT23_ANTRAG\n          - NACHTRAGSKREDIT24_ANTRAG\n          - NACHTRAGSKREDIT21_BESCHLUSS\n          - NACHTRAGSKREDIT22_BESCHLUSS\n          - NACHTRAGSKREDIT23_BESCHLUSS\n          - NACHTRAGSKREDIT24_BESCHLUSS\n          - RECHNUNG\n          - STADTRAT_ANTRAG\n          - N3\n          - N4\n        jahr:\n          type: integer\n          format: int32\n    RechnungsBuchEntryRs:\n      type: object\n      properties:\n        konto:\n          $ref: '#/components/schemas/KontoRs'\n        rechnungVorjahr:\n          type: integer\n          format: int32\n        budgetAktuell:\n          type: integer\n          format: int32\n        zkAktuell:\n          type: integer\n          format: int32\n        zkFlag:\n          type: string\n        rechnungAktuell:\n          type: integer\n          format: int32\n        abweichungBudgetCHF:\n          type: integer\n          format: int32\n        abweichungBudgetProz:\n          type: number\n        begruendung:\n          type: string\n    ResultListRechnungsBuchEntryRs:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/RechnungsBuchEntryRs'\n    ResultListKontoRs:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/KontoRs'\n    ResultListInstitutionRs:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/InstitutionRs'\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      name: api-key\n      in: header\n"
		}
	},
	"Error": "parse: parse spec: paths: /v1/budgetbuch: get: operation \"getBudgetBuch\": security: parse global security: unknown security schema \"api-key\""
}