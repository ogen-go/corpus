{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackus/ftgogo"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "store-web/internal/handlers/openapi.yaml",
			"byteSize": 12517,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: Store Web API\n  description: The Store Web API is part of the FTGOGO demonstration application\n  contact:\n    name: FTGOGO Issues\n    url: https://github.com/stackus/ftgogo/issues\nservers:\n  - url: http://{host}:{port}/api\n    variables:\n      host:\n        default: localhost\n      port:\n        default: \"8001\"\npaths:\n  /accounts/{accountID}:\n    get:\n      operationId: getAccount\n      parameters:\n        - $ref: '#/components/parameters/AccountID'\n      responses:\n        '200':\n          $ref: '#/components/responses/AccountResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /accounts/{accountID}/disable:\n    put:\n      operationId: disableAccount\n      parameters:\n        - $ref: '#/components/parameters/AccountID'\n      responses:\n        '200':\n          $ref: '#/components/responses/AccountIDResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /accounts/{accountID}/enable:\n    put:\n      operationId: enableAccount\n      parameters:\n        - $ref: '#/components/parameters/AccountID'\n      responses:\n        '200':\n          $ref: '#/components/responses/AccountIDResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /consumers/{consumerID}:\n    get:\n      operationId: getConsumer\n      parameters:\n        - $ref: '#/components/parameters/ConsumerID'\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsumerResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /couriers/{courierID}/availability:\n    post:\n      operationId: setCourierAvailability\n      parameters:\n        - $ref: '#/components/parameters/CourierID'\n      requestBody:\n        description: courier availability request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ available ]\n              properties:\n                available:\n                  type: boolean\n      responses:\n        '200':\n          $ref: '#/components/responses/CourierAvailableResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /deliveries/{deliveryID}:\n    get:\n      operationId: getDeliveryHistory\n      parameters:\n        - $ref: '#/components/parameters/DeliveryID'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeliveryHistoryResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /orders/{orderID}:\n    get:\n      operationId: getOrder\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/OrderID'\n      responses:\n        '200':\n          $ref: '#/components/responses/OrderResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /orders/{orderID}/cancel:\n    put:\n      operationId: cancelOrder\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/OrderID'\n      responses:\n        '202':\n          $ref: '#/components/responses/OrderStatusResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /restaurants:\n    post:\n      operationId: createRestaurant\n      requestBody:\n        description: create restaurant request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ name, address, menu ]\n              properties:\n                name:\n                  type: string\n                address:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n                menu:\n                  type: object\n                  required: [ menu_items ]\n                  properties:\n                    menu_items:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/MenuItem'\n      responses:\n        '201':\n          $ref: '#/components/responses/RestaurantIDResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /restaurants/{restaurantID}:\n    get:\n      operationId: getRestaurant\n      parameters:\n        - $ref: '#/components/parameters/RestaurantID'\n      responses:\n        '200':\n          $ref: '#/components/responses/RestaurantResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\nsecurity:\n  - { }\n  - bearerAuth: [ ]\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Account:\n      type: object\n      required: [ account_id, enabled ]\n      properties:\n        account_id:\n          type: string\n        enabled:\n          type: boolean\n    DeliveryHistory:\n      type: object\n      required: [ id, status, assigned_courier, courier_actions ]\n      properties:\n        id:\n          type: string\n          format: uuid\n        status:\n          type: string\n        assigned_courier:\n          type: string\n        courier_actions:\n          type: array\n          items:\n            type: string\n    OrderState:\n      type: string\n      enum: [ Unknown, ApprovalPending, Approved, Rejected, CancelPending, Cancelled, RevisionPending ]\n    Order:\n      type: object\n      required: [ order_id, status, order_total ]\n      properties:\n        order_id:\n          type: string\n        status:\n          $ref: '#/components/schemas/OrderState'\n        order_total:\n          type: integer\n    OrderDetail:\n      type: object\n      required: [ order_id, status, restaurant_id, restaurant_name, created_at ]\n      properties:\n        order_id:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/OrderState'\n        restaurant_id:\n          type: string\n          format: uuid\n        restaurant_name:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n    OrderDetailFilters:\n      type: object\n      properties:\n        since:\n          type: string\n          format: date-time\n        keywords:\n          type: array\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/OrderState'\n    Restaurant:\n      type: object\n      required: [ id, name, address, menu ]\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        address:\n          $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n        menu:\n          type: object\n          required: [ menu_items ]\n          properties:\n            menu_items:\n              type: array\n              items:\n                $ref: '#/components/schemas/MenuItem'\n    MenuItem:\n      type: object\n      required: [ id, name, price ]\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        price:\n          type: integer\n  parameters:\n    NextQuery:\n      in: query\n      name: next\n      description: provide to read the next page of results\n      required: false\n      schema:\n        type: string\n    LimitQuery:\n      in: query\n      name: limit\n      description: provide to set the results page size\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 50\n        default: 20\n    AccountID:\n      in: path\n      name: accountID\n      description: account id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n    ConsumerID:\n      in: path\n      name: consumerID\n      description: consumer id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n    CourierID:\n      in: path\n      name: courierID\n      description: courier id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n    DeliveryID:\n      in: path\n      name: deliveryID\n      description: delivery id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n    OrderID:\n      in: path\n      name: orderID\n      description: order id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n    RestaurantID:\n      in: path\n      name: restaurantID\n      description: restaurant id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n  responses:\n    EmptyResponse:\n      description: No Content\n    ErrorResponse:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ message ]\n            properties:\n              message:\n                type: string\n    AccountIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    AccountResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ account ]\n            properties:\n              account:\n                $ref: '#/components/schemas/Account'\n    ConsumerIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    ConsumerResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ consumer_id, name ]\n            properties:\n              consumer_id:\n                type: string\n              name:\n                type: string\n    ConsumerAddressIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ consumer_id, address_id ]\n            properties:\n              consumer_id:\n                type: string\n              address_id:\n                type: string\n    ConsumerAddressResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ address ]\n            properties:\n              address:\n                $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n    CourierAvailableResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ available ]\n            properties:\n              available:\n                type: boolean\n    DeliveryHistoryResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ delivery_history ]\n            properties:\n              delivery_history:\n                $ref: '#/components/schemas/DeliveryHistory'\n    OrderIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    OrderStatusResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ status ]\n            properties:\n              status:\n                $ref: '#/components/schemas/OrderState'\n    OrderResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ order ]\n            properties:\n              order:\n                $ref: '#/components/schemas/Order'\n    SearchOrdersResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ orders, next ]\n            properties:\n              orders:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrderDetail'\n              next:\n                type: string\n    RestaurantIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    RestaurantResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ restaurant ]\n            properties:\n              restaurant:\n                $ref: '#/components/schemas/Restaurant'\n"
		}
	},
	"Error": "parse: parse spec: paths: /restaurants/{restaurantID}: get: operation \"getRestaurant\": responses: 200: resolve \"#/components/responses/RestaurantResponse\" reference: content: \"application/json\": schema: parse schema: restaurant: parse schema: reference \"#/components/schemas/Restaurant\": parse schema: address: parse schema: reference \"../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address\": resolve reference \"../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address\": invalid schema reference \"../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address\""
}