{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dataloop-ai/dtlpy-documentation"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "resources/rest_api/openapi.json",
			"byteSize": 710804,
			"content": "{\n    \"basePath\": \"/api/v1\",\n    \"definitions\": {\n        \"MetaData\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"system\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"projectId\": {\n                            \"type\": \"string\",\n                            \"description\": \"\"\n                        }\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"system\"\n            ]\n        },\n        \"DriverPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"type\": {\n                    \"enum\": [\n                        \"mongo\",\n                        \"gcs\",\n                        \"s3\",\n                        \"fs\",\n                        \"azureblob\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"integrationId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"integrationConfig\": {\n                    \"enum\": [\n                        \"S3IntegrationConfig\",\n                        \"GcsIntegrationConfig\",\n                        \"AzureBlobIntegrationConfig\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/MetaData\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"payload\": {\n                    \"enum\": [\n                        \"S3DriverPayload\",\n                        \"GcsDriverPayload\",\n                        \"AzureBlobDriverPayload\",\n                        \"FSDriverPayload\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"type\",\n                \"creator\",\n                \"metadata\",\n                \"name\",\n                \"payload\"\n            ]\n        },\n        \"PartialDriverPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"payload\": {\n                    \"enum\": [\n                        \"S3DriverPayload\",\n                        \"Partial\u003cGcsDriverPayload\u003e\",\n                        \"AzureBlobDriverPayload\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"payload\"\n            ]\n        },\n        \"Dictionary\": {\n            \"description\": \"\",\n            \"properties\": {},\n            \"type\": \"object\"\n        },\n        \"APIMetadata\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"system\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"system\",\n                \"system\"\n            ]\n        },\n        \"ExpirationOptions\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"itemMaxDays\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"Specifies the number of days after which each item becomes expired and should be deleted\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"itemMaxDays\"\n            ]\n        },\n        \"APIDataset\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"annotated\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"itemsCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"items\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"directoryTree\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projects\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"export\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"zip\": {\n                            \"type\": \"object\",\n                            \"description\": \"\"\n                        },\n                        \"json\": {\n                            \"type\": \"string\",\n                            \"description\": \"\"\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"readableType\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"accessLevel\": {\n                    \"enum\": [\n                        \"private\",\n                        \"project\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"driver\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"readonly\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"error\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"expirationOptions\": {\n                    \"$ref\": \"#/definitions/ExpirationOptions\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"annotated\",\n                \"itemsCount\",\n                \"items\",\n                \"directoryTree\",\n                \"creator\",\n                \"projects\",\n                \"export\",\n                \"createdAt\",\n                \"readableType\",\n                \"accessLevel\",\n                \"driver\",\n                \"readonly\",\n                \"id\",\n                \"url\"\n            ]\n        },\n        \"Errors.BadRequestError\": {\n            \"description\": \"Represents a BAD REQUEST error. The request could not be understood by the\\nserver due to malformed syntax. The client SHOULD NOT repeat the request\\nwithout modifications.\",\n            \"properties\": {\n                \"message\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"statusCode\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"stack\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"message\",\n                \"statusCode\",\n                \"name\",\n                \"message\",\n                \"statusCode\",\n                \"name\"\n            ]\n        },\n        \"CreateDatasetRequest\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Dataset name\"\n                },\n                \"projects\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"list of project ids related to the created dataset\"\n                },\n                \"driver\": {\n                    \"enum\": [\n                        \"mongo\",\n                        \"gcs\",\n                        \"fs\",\n                        \"s3\",\n                        \"azureblob\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"Driver type of an existing driver or new driver configuration\"\n                },\n                \"driverId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Driver id of an existing external driver\"\n                },\n                \"accessLevel\": {\n                    \"enum\": [\n                        \"private\",\n                        \"project\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"Share options, only user or all project members with the right role (default is project)\"\n                },\n                \"createDefaultRecipe\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"expirationOptions\": {\n                    \"$ref\": \"#/definitions/ExpirationOptions\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"projects\"\n            ]\n        },\n        \"APICommand\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"status\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"updatedAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"error\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"progress\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"spec\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"report\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"id\",\n                \"url\",\n                \"status\",\n                \"createdAt\",\n                \"type\",\n                \"progress\",\n                \"spec\"\n            ]\n        },\n        \"CloneDatasetParams\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"withItemsAnnotations\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"withMetadata\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"withTaskAnnotationsStatus\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"withItemsAnnotations\",\n                \"withMetadata\",\n                \"withTaskAnnotationsStatus\"\n            ]\n        },\n        \"CloneDatasetRequest\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"filter\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"cloneDatasetParams\": {\n                    \"$ref\": \"#/definitions/CloneDatasetParams\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projects\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"classes\": {\n                    \"type\": \"object\",\n                    \"properties\": {},\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"driver\": {\n                    \"enum\": [\n                        \"mongo\",\n                        \"gcs\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"driverId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"shareLevel\": {\n                    \"enum\": [\n                        \"private\",\n                        \"project\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"filter\",\n                \"cloneDatasetParams\",\n                \"name\",\n                \"creator\",\n                \"projects\"\n            ]\n        },\n        \"MergeDatasetParams\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"withItemsAnnotations\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"withMetadata\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"withTaskAnnotationsStatus\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"withItemsAnnotations\",\n                \"withMetadata\",\n                \"withTaskAnnotationsStatus\"\n            ]\n        },\n        \"MergeDatasetsRequest\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"classes\": {\n                    \"type\": \"object\",\n                    \"properties\": {},\n                    \"description\": \"\"\n                },\n                \"datasetsIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"projectIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"mergeDatasetParams\": {\n                    \"$ref\": \"#/definitions/MergeDatasetParams\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"creator\",\n                \"datasetsIds\",\n                \"projectIds\",\n                \"mergeDatasetParams\"\n            ]\n        },\n        \"APIDatasetConfiguration\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projects\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"driver\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"_id\",\n                \"name\",\n                \"creator\",\n                \"projects\",\n                \"driver\"\n            ]\n        },\n        \"APISystemMetadata\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"system\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"originalname\": {\n                            \"type\": \"string\",\n                            \"description\": \"\"\n                        },\n                        \"mimetype\": {\n                            \"type\": \"string\",\n                            \"description\": \"\"\n                        },\n                        \"size\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\",\n                            \"description\": \"\"\n                        },\n                        \"encoding\": {\n                            \"type\": \"string\",\n                            \"description\": \"\"\n                        },\n                        \"originalPath\": {\n                            \"type\": \"string\",\n                            \"description\": \"\"\n                        },\n                        \"height\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\",\n                            \"description\": \"\"\n                        },\n                        \"width\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\",\n                            \"description\": \"\"\n                        }\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"system\"\n            ]\n        },\n        \"APIDatasetDirectory\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"items\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"export\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"zip\": {\n                            \"type\": \"object\",\n                            \"description\": \"\"\n                        },\n                        \"json\": {\n                            \"type\": \"string\",\n                            \"description\": \"\"\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"datasetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"dir\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"filename\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"type\": {\n                    \"enum\": [\n                        \"file\",\n                        \"dir\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"hidden\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APISystemMetadata\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"dataset\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"items\",\n                \"export\",\n                \"id\",\n                \"url\",\n                \"datasetId\",\n                \"dir\",\n                \"filename\",\n                \"name\",\n                \"type\",\n                \"hidden\",\n                \"metadata\",\n                \"createdAt\",\n                \"dataset\",\n                \"creator\"\n            ]\n        },\n        \"DatasetDirectoryTree\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"value\": {\n                    \"$ref\": \"#/definitions/APIDatasetDirectory\"\n                },\n                \"children\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/DatasetDirectoryTree\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"value\"\n            ]\n        },\n        \"QueryFilter\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"context\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"datasets\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"description\": \"\"\n                        },\n                        \"projects\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"description\": \"\"\n                        },\n                        \"projectIds\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"description\": \"\"\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"page\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"pageSize\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"resource\": {\n                    \"enum\": [\n                        \"items\",\n                        \"annotations\",\n                        \"datasets\",\n                        \"items\",\n                        \"annotations\",\n                        \"datasets\",\n                        \"tasks\",\n                        \"assignments\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"filter\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"sort\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"update\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"delete\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"select\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"context\",\n                \"page\",\n                \"pageSize\",\n                \"resource\",\n                \"filter\",\n                \"context\",\n                \"page\",\n                \"pageSize\",\n                \"resource\",\n                \"filter\"\n            ]\n        },\n        \"ExportDatasetRequest\": {\n            \"description\": \"Export dataset as zip file.\\nitems/annotations filters can be specified, only matching results will be included in zip.\\nWhen specifying both items \u0026 annotations filters - they will be joined.\",\n            \"properties\": {\n                \"itemsQuery\": {\n                    \"$ref\": \"#/definitions/QueryFilter\"\n                },\n                \"annotationsQuery\": {\n                    \"$ref\": \"#/definitions/QueryFilter\"\n                },\n                \"annotations\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"include\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"determine if export should contain annotations\"\n                        },\n                        \"convertSemantic\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"determine if semantic annotations should exported as png files\"\n                        },\n                        \"filter\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"given an export by filter - determine if to filter out annotations\"\n                        }\n                    },\n                    \"description\": \"annotations export options\"\n                },\n                \"exportVersion\": {\n                    \"enum\": [\n                        \"V1\",\n                        \"V2\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"`V2` - exported items will have original extension in filename, `V1` - no original extension in filenames\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"ClassifyFilteredItems\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"query\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"filter\": {\n                            \"$ref\": \"#/definitions/Dictionary\"\n                        },\n                        \"join\": {\n                            \"$ref\": \"#/definitions/Dictionary\"\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"annotation\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"label\": {\n                            \"type\": \"string\",\n                            \"description\": \"\"\n                        },\n                        \"attributes\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"description\": \"\"\n                        },\n                        \"metadata\": {\n                            \"$ref\": \"#/definitions/Dictionary\"\n                        }\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"query\",\n                \"annotation\"\n            ]\n        },\n        \"LabelSuggestions\": {\n            \"description\": \"\",\n            \"properties\": {},\n            \"type\": \"object\",\n            \"additionalProperties\": {}\n        },\n        \"APIAnnotation\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"type\": {\n                    \"enum\": [\n                        \"class\",\n                        \"point\",\n                        \"line\",\n                        \"box\",\n                        \"cube\",\n                        \"segment\",\n                        \"ellipse\",\n                        \"binary\",\n                        \"note\",\n                        \"polyline\",\n                        \"comparison\",\n                        \"recording\",\n                        \"subtitle\",\n                        \"item_description\",\n                        \"text_mark\",\n                        \"pose\",\n                        \"cube_3d\",\n                        \"semantic_3d\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"label\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"coordinates\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"updatedAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"updatedBy\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"itemId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"item\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"datasetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"dataset\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"hash\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"labelSuggestions\": {\n                    \"$ref\": \"#/definitions/LabelSuggestions\"\n                },\n                \"source\": {\n                    \"enum\": [\n                        \"ui\",\n                        \"sdk\",\n                        \"other\",\n                        \"system\",\n                        \"unknown\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"id\",\n                \"url\",\n                \"type\",\n                \"label\",\n                \"creator\",\n                \"createdAt\",\n                \"updatedAt\",\n                \"updatedBy\",\n                \"itemId\",\n                \"item\",\n                \"datasetId\",\n                \"dataset\",\n                \"hash\",\n                \"labelSuggestions\"\n            ]\n        },\n        \"RestoreAnnotationsRequest\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"annotations\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"annotations\"\n            ]\n        },\n        \"ImportItemRequest\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"filename\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"storageId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"size\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"filename\",\n                \"storageId\"\n            ]\n        },\n        \"APIDatasetFileItem\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"annotationsCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"annotated\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"stream\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"thumbnail\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"annotations\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"datasetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"dir\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"filename\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"type\": {\n                    \"enum\": [\n                        \"file\",\n                        \"dir\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"hidden\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APISystemMetadata\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"dataset\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"annotationsCount\",\n                \"annotated\",\n                \"stream\",\n                \"thumbnail\",\n                \"annotations\",\n                \"id\",\n                \"url\",\n                \"datasetId\",\n                \"dir\",\n                \"filename\",\n                \"name\",\n                \"type\",\n                \"hidden\",\n                \"metadata\",\n                \"createdAt\",\n                \"dataset\",\n                \"creator\"\n            ]\n        },\n        \"APIDatasetItemCursor\": {\n            \"description\": \"For documentation purposes - swagger gen does not handle generics so well...\",\n            \"properties\": {\n                \"totalItemsCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIDatasetFileItem\"\n                    },\n                    \"description\": \"\"\n                },\n                \"totalPagesCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"hasNextPage\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"totalItemsCount\",\n                \"items\",\n                \"totalPagesCount\",\n                \"hasNextPage\"\n            ]\n        },\n        \"PartialAPIDatasetItem\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"filename\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APISystemMetadata\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"ItemCloneRequest\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"targetDatasetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Target dataset id\"\n                },\n                \"remoteFileName\": {\n                    \"type\": \"string\",\n                    \"description\": \"path at target dataset\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"cloneDatasetParams\": {\n                    \"$ref\": \"#/definitions/CloneDatasetParams\"\n                },\n                \"allowMany\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"allow multiple copies of the same source item\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"targetDatasetId\",\n                \"remoteFileName\",\n                \"metadata\",\n                \"cloneDatasetParams\"\n            ]\n        },\n        \"UpdateAnnotationRequest\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"type\": {\n                    \"enum\": [\n                        \"class\",\n                        \"point\",\n                        \"line\",\n                        \"box\",\n                        \"cube\",\n                        \"segment\",\n                        \"ellipse\",\n                        \"binary\",\n                        \"note\",\n                        \"polyline\",\n                        \"comparison\",\n                        \"recording\",\n                        \"subtitle\",\n                        \"item_description\",\n                        \"text_mark\",\n                        \"pose\",\n                        \"cube_3d\",\n                        \"semantic_3d\"\n                    ],\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"label\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"coordinates\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"creator\",\n                \"type\",\n                \"label\"\n            ]\n        },\n        \"APIAnnotationCursor\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"totalItemsCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIAnnotation\"\n                    },\n                    \"description\": \"\"\n                },\n                \"totalPagesCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"hasNextPage\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"totalItemsCount\",\n                \"items\",\n                \"totalPagesCount\",\n                \"hasNextPage\"\n            ]\n        },\n        \"APIAnnotationsQuery\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"annotationId\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"labels\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"annotationTypes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"enum\": [\n                            \"class\",\n                            \"point\",\n                            \"line\",\n                            \"box\",\n                            \"cube\",\n                            \"segment\",\n                            \"ellipse\",\n                            \"binary\",\n                            \"note\",\n                            \"polyline\",\n                            \"comparison\",\n                            \"recording\",\n                            \"subtitle\",\n                            \"item_description\",\n                            \"text_mark\",\n                            \"pose\",\n                            \"cube_3d\",\n                            \"semantic_3d\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"creators\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"annotationMetadata\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"annotationId\",\n                \"labels\",\n                \"annotationTypes\",\n                \"attributes\",\n                \"creators\",\n                \"annotationMetadata\"\n            ]\n        },\n        \"APIFeatureVector\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"entityId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"org\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"project\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"value\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"description\": \"value - actual vector - immutable\"\n                },\n                \"featureSetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"featureSetId - ref to a featureSet this vector is a part of\"\n                },\n                \"version\": {\n                    \"type\": \"string\",\n                    \"description\": \"version - version of the feature set generator\"\n                },\n                \"parentId\": {\n                    \"type\": \"string\",\n                    \"description\": \"parentId - used when FeatureVector is a subFeature\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"entityId\",\n                \"project\",\n                \"creator\",\n                \"createdAt\",\n                \"value\",\n                \"featureSetId\",\n                \"version\",\n                \"id\",\n                \"url\"\n            ]\n        },\n        \"APIFeatureSet\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"entityType\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"org\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"project\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"updatedAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"updatedBy\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"tags - optional tag per feature  - matched by index\"\n                },\n                \"size\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"size - set size\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"type\",\n                \"entityType\",\n                \"project\",\n                \"creator\",\n                \"createdAt\",\n                \"updatedAt\",\n                \"updatedBy\",\n                \"name\",\n                \"tags\",\n                \"size\",\n                \"id\",\n                \"url\"\n            ]\n        },\n        \"PartialFeatureSet\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"entityType\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"project\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"org\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"updatedAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"updatedBy\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"size\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"ProjectStorageRequest\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"projectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"external\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"projectId\",\n                \"external\"\n            ]\n        },\n        \"ItemStatus\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"approved\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"completed\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"remaining\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"approved\",\n                \"completed\",\n                \"remaining\"\n            ]\n        },\n        \"APIAssignment\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"annotator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"status\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"projectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                },\n                \"totalItems\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"itemStatus\": {\n                    \"$ref\": \"#/definitions/ItemStatus\"\n                },\n                \"annotationStatus\": {\n                    \"type\": \"object\",\n                    \"properties\": {},\n                    \"description\": \"\"\n                },\n                \"taskType\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"progress\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"forReview\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"issues\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"error\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"annotator\",\n                \"status\",\n                \"projectId\",\n                \"metadata\",\n                \"totalItems\",\n                \"itemStatus\",\n                \"annotationStatus\",\n                \"taskType\",\n                \"progress\",\n                \"forReview\",\n                \"issues\",\n                \"id\",\n                \"url\"\n            ]\n        },\n        \"AssignmentPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"annotator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"status\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"projectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"annotator\",\n                \"status\",\n                \"projectId\",\n                \"metadata\"\n            ]\n        },\n        \"PartialAssignmentPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"annotator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"status\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"projectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"APIAssignmentCursor\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"totalItemsCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIAssignment\"\n                    },\n                    \"description\": \"\"\n                },\n                \"totalPagesCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"hasNextPage\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"totalItemsCount\",\n                \"items\",\n                \"totalPagesCount\",\n                \"hasNextPage\"\n            ]\n        },\n        \"Errors.NotFoundError\": {\n            \"description\": \"Represents a NOT FOUND error. The server has not found anything matching\\nthe Request-URI. No indication is given of whether the condition is temporary\\nor permanent. The 410 (GoneError) status code SHOULD be used if the server knows,\\nthrough some internally configurable mechanism, that an old resource is permanently\\nunavailable and has no forwarding address.\\n\\nThis error is commonly used when\\nthe server does not wish to reveal exactly why the request has been refused,\\nor when no other response is applicable.\",\n            \"properties\": {\n                \"message\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"statusCode\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"stack\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"message\",\n                \"statusCode\",\n                \"name\"\n            ]\n        },\n        \"ReassignAssignmentPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"taskId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"annotator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"taskId\",\n                \"annotator\"\n            ]\n        },\n        \"AssignmentWorkload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"assigneeId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"load\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"assigneeId\",\n                \"load\"\n            ]\n        },\n        \"RedistributeAssignmentPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"taskId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"workload\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/AssignmentWorkload\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"taskId\",\n                \"workload\"\n            ]\n        },\n        \"APILabelTree\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"children\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APILabelTree\"\n                    },\n                    \"description\": \"\"\n                },\n                \"value\": {\n                    \"$ref\": \"#/definitions/APILabel\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"value\"\n            ]\n        },\n        \"APILabel\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"tag\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"displayLabel\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"color\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"tag\",\n                \"displayLabel\",\n                \"color\"\n            ]\n        },\n        \"APIOntology\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"roots\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APILabelTree\"\n                    },\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"errors\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"creator\",\n                \"title\",\n                \"roots\",\n                \"metadata\",\n                \"id\",\n                \"url\"\n            ]\n        },\n        \"Label\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"tag\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"displayLabel\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"color\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"system\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"tag\",\n                \"color\"\n            ]\n        },\n        \"LabelTree\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"value\": {\n                    \"$ref\": \"#/definitions/Label\"\n                },\n                \"children\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LabelTree\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"value\",\n                \"children\"\n            ]\n        },\n        \"CreateOntologyPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"roots\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/LabelTree\"\n                    },\n                    \"description\": \"\"\n                },\n                \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projectIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"system\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"roots\",\n                \"title\"\n            ]\n        },\n        \"APIOntologyConfiguration\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"roots\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APILabelTree\"\n                    },\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"id\",\n                \"creator\",\n                \"roots\",\n                \"metadata\"\n            ]\n        },\n        \"CreateLabelPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"tag\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"displayLabel\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"color\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"tag\"\n            ]\n        },\n        \"AddLabelsNodePayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"labelsNode\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/CreateLabelPayload\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"labelsNode\"\n            ]\n        },\n        \"UpdateLabelsNodePayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"upsert\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"labelsNode\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/CreateLabelPayload\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"labelsNode\"\n            ]\n        },\n        \"APIOntologyCursor\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"totalItemsCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIOntology\"\n                    },\n                    \"description\": \"\"\n                },\n                \"totalPagesCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"hasNextPage\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"totalItemsCount\",\n                \"items\",\n                \"totalPagesCount\",\n                \"hasNextPage\"\n            ]\n        },\n        \"APIInstruction\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"scope\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"action\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"tool\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"class\",\n                        \"point\",\n                        \"line\",\n                        \"box\",\n                        \"segment\",\n                        \"binary\",\n                        \"note\",\n                        \"polyline\"\n                    ],\n                    \"description\": \"\"\n                },\n                \"options\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"scope\",\n                \"action\",\n                \"tool\",\n                \"options\",\n                \"tags\"\n            ]\n        },\n        \"APIGoodExample\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"instructions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIInstruction\"\n                    },\n                    \"description\": \"\"\n                },\n                \"itemId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"comments\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"instructions\",\n                \"itemId\"\n            ]\n        },\n        \"APIBadExample\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"itemId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"comments\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"itemId\"\n            ]\n        },\n        \"APICustomAction\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"targets\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"ontologyId\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"labelId\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            }\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"controls\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"targets\",\n                \"controls\"\n            ]\n        },\n        \"APIRecipe\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projectIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"ontologyIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"instructions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIInstruction\"\n                    },\n                    \"description\": \"\"\n                },\n                \"examples\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"good\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIGoodExample\"\n                            },\n                            \"description\": \"\"\n                        },\n                        \"bad\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIBadExample\"\n                            },\n                            \"description\": \"\"\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"customActions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APICustomAction\"\n                    },\n                    \"description\": \"\"\n                },\n                \"uiSettings\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"creator\",\n                \"title\",\n                \"projectIds\",\n                \"description\",\n                \"ontologyIds\",\n                \"instructions\",\n                \"examples\",\n                \"customActions\",\n                \"uiSettings\",\n                \"metadata\",\n                \"id\",\n                \"url\"\n            ]\n        },\n        \"RecipePayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projectIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"ontologyIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"instructions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIInstruction\"\n                    },\n                    \"description\": \"\"\n                },\n                \"examples\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"good\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIGoodExample\"\n                            },\n                            \"description\": \"\"\n                        },\n                        \"bad\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIBadExample\"\n                            },\n                            \"description\": \"\"\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"customActions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APICustomAction\"\n                    },\n                    \"description\": \"\"\n                },\n                \"uiSettings\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"title\",\n                \"projectIds\",\n                \"ontologyIds\"\n            ]\n        },\n        \"CloneRecipePayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"shallow\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"PartialRecipePayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projectIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"ontologyIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"instructions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIInstruction\"\n                    },\n                    \"description\": \"\"\n                },\n                \"examples\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"good\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIGoodExample\"\n                            },\n                            \"description\": \"\"\n                        },\n                        \"bad\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIBadExample\"\n                            },\n                            \"description\": \"\"\n                        }\n                    },\n                    \"description\": \"\"\n                },\n                \"customActions\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APICustomAction\"\n                    },\n                    \"description\": \"\"\n                },\n                \"uiSettings\": {\n                    \"$ref\": \"#/definitions/Dictionary\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"APIRecipeCursor\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"totalItemsCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APIRecipe\"\n                    },\n                    \"description\": \"\"\n                },\n                \"totalPagesCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"hasNextPage\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"totalItemsCount\",\n                \"items\",\n                \"totalPagesCount\",\n                \"hasNextPage\"\n            ]\n        },\n        \"APITask\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"creator\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"createdAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"updatedAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"description\": \"\"\n                },\n                \"taskOwner\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"dueDate\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"datasetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"recipeId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"spec\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"hasParent\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                },\n                \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"assignmentIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"status\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"metadata\": {\n                    \"$ref\": \"#/definitions/APIMetadata\"\n                },\n                \"totalItems\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"itemStatus\": {\n                    \"$ref\": \"#/definitions/ItemStatus\"\n                },\n                \"annotationStatus\": {\n                    \"type\": \"object\",\n                    \"properties\": {},\n                    \"description\": \"\"\n                },\n                \"progress\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"forReview\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"issues\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"error\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"url\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"creator\",\n                \"name\",\n                \"createdAt\",\n                \"updatedAt\",\n                \"taskOwner\",\n                \"dueDate\",\n                \"datasetId\",\n                \"recipeId\",\n                \"projectId\",\n                \"spec\",\n                \"hasParent\",\n                \"query\",\n                \"assignmentIds\",\n                \"status\",\n                \"metadata\",\n                \"totalItems\",\n                \"itemStatus\",\n                \"annotationStatus\",\n                \"progress\",\n                \"forReview\",\n                \"issues\",\n                \"id\",\n                \"url\"\n            ]\n        },\n        \"TaskWorkload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"assigneeId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"load\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"assigneeId\",\n                \"load\"\n            ]\n        },\n        \"TaskPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"datasetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"recipeId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"taskOwner\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"dueDate\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"status\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"assignmentIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"spec\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                },\n                \"workload\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskWorkload\"\n                    },\n                    \"description\": \"\"\n                },\n                \"limit\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"percentage\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"datasetId\",\n                \"recipeId\",\n                \"projectId\",\n                \"name\",\n                \"taskOwner\",\n                \"dueDate\",\n                \"query\",\n                \"status\",\n                \"assignmentIds\",\n                \"spec\"\n            ]\n        },\n        \"AddToTaskPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"workload\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TaskWorkload\"\n                    },\n                    \"description\": \"\"\n                },\n                \"limit\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"percentage\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"query\"\n            ]\n        },\n        \"PartialTaskPayload\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"datasetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"recipeId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"projectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"dueDate\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"status\": {\n                    \"type\": \"string\",\n                    \"description\": \"\"\n                },\n                \"assignmentIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"\"\n                },\n                \"spec\": {\n                    \"type\": \"object\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"APITaskCursor\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"totalItemsCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/APITask\"\n                    },\n                    \"description\": \"\"\n                },\n                \"totalPagesCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"hasNextPage\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"totalItemsCount\",\n                \"items\",\n                \"totalPagesCount\",\n                \"hasNextPage\"\n            ]\n        },\n        \"APITaskCounters\": {\n            \"description\": \"\",\n            \"properties\": {\n                \"activeProjects\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"activeDatasets\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"activeTasks\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                },\n                \"tasksCount\": {\n                    \"type\": \"number\",\n                    \"format\": \"double\",\n                    \"description\": \"\"\n                }\n            },\n            \"type\": \"object\",\n            \"required\": [\n                \"activeProjects\",\n                \"activeDatasets\",\n                \"activeTasks\",\n                \"tasksCount\"\n            ]\n        }\n    },\n    \"info\": {\n        \"description\": \"# Drive your AI to production with end-to-end data management, automation pipelines and a quality-first data labeling platform.\",\n        \"title\": \"Dataloop.ai REST API\",\n        \"contact\": {\n            \"email\": \"support@dataloop.ai\"\n        },\n        \"x-logo\": {\n            \"url\": \"https://console.dataloop.ai/img/logo-for-white-bkg-big.3ad1a938.png\"\n        },\n        \"version\": \"1.11.2\"\n    },\n    \"paths\": {\n        \"/drivers\": {\n            \"get\": {\n                \"operationId\": \"DriversGetAllDrivers\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"List storage drivers\",\n                \"tags\": [\n                    \"Drivers\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"- when specified - filter drivers by project\",\n                        \"in\": \"query\",\n                        \"name\": \"projectId\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"DriversCreate\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Create a new storage driver\",\n                \"tags\": [\n                    \"Drivers\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": driver payload\",\n                        \"in\": \"body\",\n                        \"name\": \"config\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/DriverPayload\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/drivers/test\": {\n            \"post\": {\n                \"operationId\": \"DriversVerifyDriver\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Test external storage access\",\n                \"tags\": [\n                    \"Drivers\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": driver payload\",\n                        \"in\": \"body\",\n                        \"name\": \"config\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/DriverPayload\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/drivers/{id}\": {\n            \"get\": {\n                \"operationId\": \"DriversGetDriver\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Get storage driver configuration\",\n                \"tags\": [\n                    \"Drivers\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"driver id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"DriversUpdateDriver\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Update storage driver configuration\",\n                \"tags\": [\n                    \"Drivers\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": fields to update\",\n                        \"in\": \"body\",\n                        \"name\": \"config\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/PartialDriverPayload\"\n                        }\n                    },\n                    {\n                        \"description\": \": driverId\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"DriversDeleteDriver\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete storage driver\\nNOTICE: datasets using the deleted driver will not be able to access storage after deletion\",\n                \"tags\": [\n                    \"Drivers\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/drivers/{id}/test\": {\n            \"get\": {\n                \"operationId\": \"DriversTestDriverPermissions\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Test external storage access\",\n                \"tags\": [\n                    \"Drivers\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets\": {\n            \"get\": {\n                \"operationId\": \"DatasetsListDatasets\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIDataset\"\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get a names list of all existing datasets\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"name\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"creator\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"DatasetsCreateDataset\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDataset\"\n                        },\n                        \"examples\": {\n                            \"application/json\": {\n                                \"name\": \"New Set Name\",\n                                \"projects\": [\n                                    \"project-id-1\",\n                                    \"project-id-2\"\n                                ],\n                                \"driver\": \"mongo\",\n                                \"accessLevel\": \"project\"\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing argument\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    }\n                },\n                \"description\": \"Create a new dataset\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset creation options\",\n                        \"in\": \"body\",\n                        \"name\": \"options\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/CreateDatasetRequest\"\n                        }\n                    }\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"lang\": \"Python\",\n                        \"source\": \"\\nproject.datasets.create(dataset_name='dataset_name', ontology_ids='ontology_ids')\\n\\n# \\n# Create a new dataset\\n# \\n# **Prerequisites**: You must be in the role of an *owner* or *developer*.\\n# \\n# :param str dataset_name: dataset name\\n# :param list labels: dictionary of {tag: color} or list of label entities\\n# :param list attributes: dataset's ontology's attributes\\n# :param list ontology_ids: optional - dataset ontology\\n# :param dtlpy.entities.driver.Driver driver: optional - storage driver Driver object or driver name\\n# :param str driver_id: optional - driver id\\n# :param bool checkout: bool. cache the dataset to work locally\\n# :param ExpirationOptions expiration_options: dl.ExpirationOptions object that contain definitions for dataset like MaxItemDays\\n# :param str index_driver: dl.IndexDriver, dataset driver version\\n# :return: Dataset object\\n# :rtype: dtlpy.entities.dataset.Dataset\\n# \\n# \"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}\": {\n            \"get\": {\n                \"operationId\": \"DatasetsGetDataset\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDataset\"\n                        }\n                    }\n                },\n                \"description\": \"Get a specific Dataset\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"x-codeSamples\": [\n                    {\n                        \"lang\": \"Python\",\n                        \"source\": \"\\nproject.datasets.get(dataset_id='dataset_id')\\n\\n# \\n# Get dataset by name or id.\\n# \\n# **Prerequisites**: You must be an *owner* or *developer* to use this method.\\n# \\n# You must provide at least ONE of the following params: dataset_id, dataset_name.\\n# \\n# :param str dataset_name: optional - search by name\\n# :param str dataset_id: optional - search by id\\n# :param bool checkout: True to checkout\\n# :param bool fetch: optional - fetch entity from platform, default taken from cookie\\n# :return: Dataset object\\n# :rtype: dtlpy.entities.dataset.Dataset\\n# \\n# \"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"DatasetsDeleteDataset\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete a dataset\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"force\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"DatasetsPatchDataset\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDataset\"\n                        }\n                    }\n                },\n                \"description\": \"Update dataset properties\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Properties to update on the dataset\",\n                        \"in\": \"body\",\n                        \"name\": \"params\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDatasetConfiguration\"\n                        }\n                    },\n                    {\n                        \"description\": \"when specified - editing system space metadata is enabled\",\n                        \"in\": \"query\",\n                        \"name\": \"system\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/clone\": {\n            \"post\": {\n                \"operationId\": \"DatasetsCloneDataset\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APICommand\"\n                        },\n                        \"examples\": {\n                            \"application/json\": {\n                                \"name\": \"\",\n                                \"filter\": {\n                                    \"filter\": {}\n                                },\n                                \"cloneDatasetParams\": {\n                                    \"withItemsAnnotations\": true,\n                                    \"withMetadata\": true\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing argument\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"options\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/CloneDatasetRequest\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/deleteExpiredItems\": {\n            \"post\": {\n                \"operationId\": \"DatasetsDeleteExpiredItems\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APICommand\"\n                        }\n                    }\n                },\n                \"description\": \"Deletes all expired items\\nEach dataset has the option to set it's SLA according to the attached example\\n\\nWhen setting expirationOptions.itemMaxAge to a number (100 for example),\\nEach item in the dataset will be deleted once the corresponding number of days have passed since it's creation\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": []\n            }\n        },\n        \"/datasets/merge\": {\n            \"post\": {\n                \"operationId\": \"DatasetsMergeDatasets\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APICommand\"\n                        },\n                        \"examples\": {\n                            \"application/json\": {\n                                \"name\": \"New Set Name\",\n                                \"datasetsIds\": [],\n                                \"projectIds\": [],\n                                \"mergeDatasetParams\": {\n                                    \"withItemsAnnotations\": true,\n                                    \"withMetadata\": true\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing argument\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"options\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/MergeDatasetsRequest\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/directoryTree\": {\n            \"get\": {\n                \"operationId\": \"DatasetsGetDirectoryTree\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/DatasetDirectoryTree\"\n                        }\n                    }\n                },\n                \"description\": \"Get a directory tree of the dataset\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/annotations/json\": {\n            \"get\": {\n                \"operationId\": \"DatasetsGetAnnotationsAsJSON\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Download a JSON file representing all annotations in the specified dataset\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"directory\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/annotations/zip\": {\n            \"get\": {\n                \"operationId\": \"DatasetsGetAnnotationsAsZIP\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Download a zip archive containing all annotations in the specified dataset\\nDirectory structure is preserved in the zip archive\\nEach item will be represented by a json file containing it's annotations\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"directory\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/annotations/zip/chunks\": {\n            \"get\": {\n                \"operationId\": \"DatasetsGetAnnotationsZIPChunks\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/annotations/labels\": {\n            \"get\": {\n                \"operationId\": \"DatasetsGetDatasetLabelAggregation\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"DatasetsGetFilteredDatasetLabelAggregation\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"filter\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"creators\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"description\": \"\"\n                                }\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/export\": {\n            \"post\": {\n                \"operationId\": \"DatasetsExportDatasetAsZip\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"options\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ExportDatasetRequest\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/annotations/zip/chunks/{chunk}\": {\n            \"get\": {\n                \"operationId\": \"DatasetsStreamAnnotationsZIPChunk\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"chunk\",\n                        \"required\": true,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/annotations\": {\n            \"post\": {\n                \"operationId\": \"DatasetsAnnotateItemsByRQL\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ClassifyFilteredItems\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/query\": {\n            \"post\": {\n                \"operationId\": \"DatasetsQueryDatasets\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"enum\": [\n                                \"FilterQuery\",\n                                \"UpdateQuery\",\n                                \"DeleteQuery\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"enum\": [\n                            \"FilterQuery\",\n                            \"UpdateQuery\",\n                            \"DeleteQuery\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/counters\": {\n            \"delete\": {\n                \"operationId\": \"DatasetsResetDatasetCounters\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Reset dataset counters (items count, anntotated count, etc...)\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset to be reset\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/query\": {\n            \"post\": {\n                \"operationId\": \"DatasetsQueryDataset\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Detailed information about RQL can be found at /api/v1/rql-docs\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset to be queried\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Query JSON\",\n                        \"in\": \"body\",\n                        \"name\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"enum\": [\n                                \"FilterQuery\",\n                                \"UpdateQuery\",\n                                \"DeleteQuery\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"enum\": [\n                            \"FilterQuery\",\n                            \"UpdateQuery\",\n                            \"DeleteQuery\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/restore\": {\n            \"post\": {\n                \"operationId\": \"DatasetsRestoreAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIAnnotation\"\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"request\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/RestoreAnnotationsRequest\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/sync\": {\n            \"post\": {\n                \"operationId\": \"DatasetsSync\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APICommand\"\n                        }\n                    }\n                },\n                \"description\": \"Synchronize missing files from storage\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{id}/imports\": {\n            \"post\": {\n                \"operationId\": \"DatasetsImportItemsToDataset\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"importRequests\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/ImportItemRequest\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"DatasetsDetachItemsFromDataset\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"storageIds\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/count\": {\n            \"post\": {\n                \"operationId\": \"DatasetsGetProjectDatasets\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"For org admin / owner:\\nGet datasets count for projects\\nGet datasets if a single project required\",\n                \"tags\": [\n                    \"Datasets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"projectIds\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"description\": \"\"\n                                }\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items\": {\n            \"get\": {\n                \"operationId\": \"DatasetItemsGetItems\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDatasetItemCursor\"\n                        },\n                        \"examples\": {\n                            \"application/json\": {\n                                \"example_query\": {\n                                    \"itemType\": \"file\",\n                                    \"directories\": [\n                                        \"/some/dir\",\n                                        \"/\",\n                                        \"...\"\n                                    ],\n                                    \"filenames\": [\n                                        \"/some/file.jpg\",\n                                        \"/item/in/directory\",\n                                        \"/\",\n                                        \"...\"\n                                    ],\n                                    \"createdAt\": {},\n                                    \"size\": {\n                                        \"$gt\": 50000\n                                    },\n                                    \"mimetypes\": [\n                                        \"image/jpeg\",\n                                        \"video/mp4\",\n                                        \"...\"\n                                    ],\n                                    \"annotated\": true,\n                                    \"itemMetadata\": {\n                                        \"my\": {\n                                            \"metadata\": {\n                                                \"has\": {\n                                                    \"these\": {\n                                                        \"field1\": true,\n                                                        \"field2\": 1\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    },\n                                    \"labels\": [\n                                        \"dog\",\n                                        \"cat\",\n                                        \"...\"\n                                    ],\n                                    \"annotationTypes\": [\n                                        null,\n                                        null,\n                                        null\n                                    ],\n                                    \"attributes\": [\n                                        \"1\",\n                                        \",2\",\n                                        \"...\"\n                                    ],\n                                    \"creators\": [\n                                        \"assaf@dataloop.ai\",\n                                        \"john\",\n                                        \"some-org.com\"\n                                    ],\n                                    \"annotationMetadata\": {\n                                        \"some\": {\n                                            \"annotation\": {\n                                                \"metadata\": {\n                                                    \"is\": true,\n                                                    \"queried\": \"123\"\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"List items in a dataset\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"datasetId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"URL encoded JSON query - See JSON example below\",\n                        \"in\": \"query\",\n                        \"name\": \"query\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"sort\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Pages to skip\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"Number of items to fetch in each page\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"DatasetItemsCreateItem\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDatasetFileItem\"\n                        }\n                    }\n                },\n                \"description\": \"Create a new item in a dataset\\nOrder is important - FILE MUST BE LAST FIELD OF THE FORM\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"datasetId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Item type - 'file' or 'dir'\",\n                        \"in\": \"formData\",\n                        \"name\": \"type\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Path in dataset for the new item, i.e: /my/file/path.jpg\",\n                        \"in\": \"formData\",\n                        \"name\": \"path\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Stringified JSON object that represents the item metadata. i.e: {\\\"some\\\":{\\\"meta\\\":\\\"data\\\",\\\"bool\\\":true,\\\"numeric\\\":123}}\",\n                        \"in\": \"formData\",\n                        \"name\": \"metadata\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"File input (binary data)\",\n                        \"in\": \"formData\",\n                        \"name\": \"file\",\n                        \"required\": false,\n                        \"type\": \"file\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{id}\": {\n            \"put\": {\n                \"operationId\": \"DatasetItemsMoveItems\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Move files to a specified directory\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset Id\",\n                        \"in\": \"path\",\n                        \"name\": \"datasetId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"List of files to move to the specified directory\",\n                        \"in\": \"body\",\n                        \"name\": \"itemIds\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"DatasetItemsGetItem\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"enum\": [\n                                \"APIDatasetFileItem\",\n                                \"APIDatasetDirectory\"\n                            ],\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"DatasetItemsRemoveItem\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"DatasetItemsEditItem\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"enum\": [\n                                \"APIDatasetFileItem\",\n                                \"APIDatasetDirectory\"\n                            ],\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"item\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/PartialAPIDatasetItem\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"system\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/\": {\n            \"delete\": {\n                \"operationId\": \"DatasetItemsRemoveItemsByQuery\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"datasetId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"filter\": {\n                                    \"$ref\": \"#/definitions/Dictionary\"\n                                },\n                                \"join\": {\n                                    \"$ref\": \"#/definitions/Dictionary\"\n                                }\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{id}/revisions\": {\n            \"post\": {\n                \"operationId\": \"DatasetItemsCreateItemRevision\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDatasetFileItem\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{id}/stream\": {\n            \"get\": {\n                \"operationId\": \"DatasetItemsStreamItem\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{id}/thumbnail\": {\n            \"get\": {\n                \"operationId\": \"DatasetItemsStreamItemThumbnail\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"width\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"height\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"annotations\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{id}/items\": {\n            \"get\": {\n                \"operationId\": \"DatasetItemsGetDirectoryChildItems\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDatasetItemCursor\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{id}/clone\": {\n            \"post\": {\n                \"operationId\": \"DatasetItemsCloneItem\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APICommand\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"options\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ItemCloneRequest\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{itemId}/annotations\": {\n            \"get\": {\n                \"operationId\": \"DatasetItemAnnotationsListAnnotations\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIAnnotation\"\n                            }\n                        }\n                    }\n                },\n                \"description\": \"List all annotations of an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Item id\",\n                        \"in\": \"path\",\n                        \"name\": \"itemId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"DatasetItemAnnotationsCreateAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"description\": \"Create an annotation or annotations for an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Item id\",\n                        \"in\": \"path\",\n                        \"name\": \"itemId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Annotation/s to be created\\nIn the case of annotation parenting, annotation will need to include a parent - annotation request object and children - array of annotation request objects\\nIn that case only the parent and children will be used\\nThere is handling for mixed requests - both simple annotation and parent/children will be accepted and handled together\",\n                        \"in\": \"body\",\n                        \"name\": \"annotations\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{itemId}/annotations/{annotationId}\": {\n            \"get\": {\n                \"operationId\": \"DatasetItemAnnotationsGetAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"List all annotations of an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"DatasetItemAnnotationsDeleteAnnotation\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete an Annotation from an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"operationId\": \"DatasetItemAnnotationsUpdateAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Updated annotation object\",\n                        \"in\": \"body\",\n                        \"name\": \"annotation\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/UpdateAnnotationRequest\"\n                        }\n                    },\n                    {\n                        \"description\": \"when specified - editing system space metadata is enabled\",\n                        \"in\": \"query\",\n                        \"name\": \"system\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"replace\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{itemId}/annotations/{annotationId}/issue\": {\n            \"put\": {\n                \"operationId\": \"DatasetItemAnnotationsAnnotationIssues\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation status to issue\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{itemId}/annotations-log\": {\n            \"get\": {\n                \"operationId\": \"DatasetItemAnnotationsLogListAnnotationsLog\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"description\": \"List all annotations of an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Item id\",\n                        \"in\": \"path\",\n                        \"name\": \"itemId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"datasetId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{itemId}/annotations-log/{annotationId}\": {\n            \"get\": {\n                \"operationId\": \"DatasetItemAnnotationsLogGetAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"List all annotations of an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"DatasetItemAnnotationsLogDeleteAnnotation\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete an Annotation from an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"operationId\": \"DatasetItemAnnotationsLogUpdateAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Updated annotation object\",\n                        \"in\": \"body\",\n                        \"name\": \"annotation\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/UpdateAnnotationRequest\"\n                        }\n                    },\n                    {\n                        \"description\": \"when specified - editing system space metadata is enabled\",\n                        \"in\": \"query\",\n                        \"name\": \"system\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"replace\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/items/{itemId}/annotations-log/{annotationId}/issue\": {\n            \"put\": {\n                \"operationId\": \"DatasetItemAnnotationsLogAnnotationIssues\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation status to issue\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/{datasetId}/annotations\": {\n            \"post\": {\n                \"operationId\": \"DatasetAnnotationsQueryAnnotations\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotationCursor\"\n                        }\n                    }\n                },\n                \"description\": \"Query annotations for a specified dataset\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Dataset id\",\n                        \"in\": \"path\",\n                        \"name\": \"datasetId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotationsQuery\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            }\n        },\n        \"/features/vectors\": {\n            \"get\": {\n                \"operationId\": \"FeatureVectorsGetFeatureVectors\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIFeatureVector\"\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get feature vectors by creator\",\n                \"tags\": [\n                    \"features\",\n                    \"vectors\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"page\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"FeatureVectorsAddFeatureVectors\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIFeatureVector\"\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing argument\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    }\n                },\n                \"description\": \"Add new feature vector/s\",\n                \"tags\": [\n                    \"features\",\n                    \"vectors\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"feature vector/s to be uploaded\",\n                        \"in\": \"body\",\n                        \"name\": \"vectors\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/features/vectors/{id}\": {\n            \"get\": {\n                \"operationId\": \"FeatureVectorsGetFeatureVector\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIFeatureVector\"\n                        }\n                    }\n                },\n                \"description\": \"Get a feature vector by id\",\n                \"tags\": [\n                    \"features\",\n                    \"vectors\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"FeatureVectorsDeleteFeatureVector\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete a feature vector by id\",\n                \"tags\": [\n                    \"features\",\n                    \"vectors\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/features/vectors/query\": {\n            \"post\": {\n                \"operationId\": \"FeatureVectorsQueryFeatures\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Query feature vectors\",\n                \"tags\": [\n                    \"features\",\n                    \"vectors\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"query to filter features by\",\n                        \"in\": \"body\",\n                        \"name\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/QueryFilter\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/features/sets\": {\n            \"get\": {\n                \"operationId\": \"FeatureSetsGetFeatureSets\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIFeatureSet\"\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get a feature set by id\",\n                \"tags\": [\n                    \"features\",\n                    \"sets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"page\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"FeatureSetsAddFeatureSets\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIFeatureSet\"\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing argument\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    }\n                },\n                \"description\": \"Add a new feature set\",\n                \"tags\": [\n                    \"features\",\n                    \"sets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Feature set/s to be uploaded\",\n                        \"in\": \"body\",\n                        \"name\": \"sets\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/features/sets/{id}\": {\n            \"get\": {\n                \"operationId\": \"FeatureSetsGetFeatureSet\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIFeatureSet\"\n                        }\n                    }\n                },\n                \"description\": \"Get a feature set by id\",\n                \"tags\": [\n                    \"features\",\n                    \"sets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"FeatureSetsDeleteFeatureSet\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete a feature set by id\",\n                \"tags\": [\n                    \"features\",\n                    \"sets\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"FeatureSetsEditFeatureSet\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIFeatureSet\"\n                        }\n                    }\n                },\n                \"description\": \"Update a feature set by id\",\n                \"tags\": [\n                    \"features\",\n                    \"sets\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"partial feature set to update\",\n                        \"in\": \"body\",\n                        \"name\": \"featureSet\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/PartialFeatureSet\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/items/{id}\": {\n            \"get\": {\n                \"operationId\": \"ItemsGetItem\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"enum\": [\n                                \"APIDatasetFileItem\",\n                                \"APIDatasetDirectory\"\n                            ],\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"ItemsRemoveItem\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"ItemsEditItem\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"enum\": [\n                                \"APIDatasetFileItem\",\n                                \"APIDatasetDirectory\"\n                            ],\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"item\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/PartialAPIDatasetItem\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"system\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/items/{id}/revisions\": {\n            \"post\": {\n                \"operationId\": \"ItemsCreateItemRevision\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDatasetFileItem\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/items/{id}/stream\": {\n            \"get\": {\n                \"operationId\": \"ItemsStreamItem\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/items/{id}/thumbnail\": {\n            \"get\": {\n                \"operationId\": \"ItemsStreamItemThumbnail\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"width\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"height\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"annotations\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/items/{id}/items\": {\n            \"get\": {\n                \"operationId\": \"ItemsGetDirectoryChildItems\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIDatasetItemCursor\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            }\n        },\n        \"/items/{id}/clone\": {\n            \"post\": {\n                \"operationId\": \"ItemsCloneItem\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APICommand\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Items\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"options\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ItemCloneRequest\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/annotations/{annotationId}\": {\n            \"get\": {\n                \"operationId\": \"AnnotationsGetAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"List all annotations of an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"AnnotationsDeleteAnnotation\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete an Annotation from an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"operationId\": \"AnnotationsUpdateAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Updated annotation object\",\n                        \"in\": \"body\",\n                        \"name\": \"annotation\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/UpdateAnnotationRequest\"\n                        }\n                    },\n                    {\n                        \"description\": \"when specified - editing system space metadata is enabled\",\n                        \"in\": \"query\",\n                        \"name\": \"system\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"replace\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/annotations/{annotationId}/issue\": {\n            \"put\": {\n                \"operationId\": \"AnnotationsAnnotationIssues\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation status to issue\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/items/{itemId}/annotations\": {\n            \"get\": {\n                \"operationId\": \"ItemAnnotationsListAnnotations\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIAnnotation\"\n                            }\n                        }\n                    }\n                },\n                \"description\": \"List all annotations of an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Item id\",\n                        \"in\": \"path\",\n                        \"name\": \"itemId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"ItemAnnotationsCreateAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"description\": \"Create an annotation for an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Item id\",\n                        \"in\": \"path\",\n                        \"name\": \"itemId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"annotations\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/items/{itemId}/annotations/{annotationId}\": {\n            \"get\": {\n                \"operationId\": \"ItemAnnotationsGetAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"List all annotations of an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"ItemAnnotationsDeleteAnnotation\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete an Annotation from an item\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"put\": {\n                \"operationId\": \"ItemAnnotationsUpdateAnnotation\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"Updated annotation object\",\n                        \"in\": \"body\",\n                        \"name\": \"annotation\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/UpdateAnnotationRequest\"\n                        }\n                    },\n                    {\n                        \"description\": \"when specified - editing system space metadata is enabled\",\n                        \"in\": \"query\",\n                        \"name\": \"system\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"replace\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    }\n                ]\n            }\n        },\n        \"/items/{itemId}/annotations/{annotationId}/issue\": {\n            \"put\": {\n                \"operationId\": \"ItemAnnotationsAnnotationIssues\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAnnotation\"\n                        }\n                    }\n                },\n                \"description\": \"Update an item's annotation status to issue\",\n                \"tags\": [\n                    \"Annotations\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Annotation id\",\n                        \"in\": \"path\",\n                        \"name\": \"annotationId\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/datasets/storage/project\": {\n            \"post\": {\n                \"operationId\": \"StorageGetProjectSizeInBytes\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"request\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ProjectStorageRequest\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/assignments\": {\n            \"post\": {\n                \"operationId\": \"AssignmentsCreateAssignment\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAssignment\"\n                        }\n                    }\n                },\n                \"description\": \"Create a new Assignment\",\n                \"tags\": [\n                    \"Assignments\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Assignment creation payload\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/AssignmentPayload\"\n                        }\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"AssignmentsFindAssignments\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAssignmentCursor\"\n                        }\n                    }\n                },\n                \"description\": \"Find assignments by query\",\n                \"tags\": [\n                    \"Assignments\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"name\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Filter by project IDs\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"- Filter by assignee\",\n                        \"in\": \"query\",\n                        \"name\": \"annotator\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Find by status\",\n                        \"in\": \"query\",\n                        \"name\": \"status\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- The number of pages to skip from the start\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"- How many assignments in one page\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"taskId\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/assignments/{id}\": {\n            \"patch\": {\n                \"operationId\": \"AssignmentsPatchAssignment\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAssignment\"\n                        }\n                    }\n                },\n                \"description\": \"Update an existing assignment\",\n                \"tags\": [\n                    \"Assignments\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": The fields to update\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/PartialAssignmentPayload\"\n                        }\n                    },\n                    {\n                        \"description\": \": Assignment ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"AssignmentsGetAssignment\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAssignment\"\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing or Invalid id\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Assignment not found\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.NotFoundError\"\n                        }\n                    }\n                },\n                \"description\": \"Get a specific assignment\",\n                \"tags\": [\n                    \"Assignments\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Assignment ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"AssignmentsDeleteAssignment\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete a assignment\",\n                \"tags\": [\n                    \"Assignments\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Assignment ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/assignments/{id}/reassign\": {\n            \"post\": {\n                \"operationId\": \"AssignmentsReassignAssignment\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIAssignment\"\n                        }\n                    }\n                },\n                \"description\": \"Reassign Assignment to annotator\",\n                \"tags\": [\n                    \"Assignments\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \": Assignment creation payload\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/ReassignAssignmentPayload\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/assignments/{id}/redistribute\": {\n            \"post\": {\n                \"operationId\": \"AssignmentsRedistributeAssignment\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/APIAssignment\"\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Redistribute Assignment to annotators\",\n                \"tags\": [\n                    \"Assignments\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \": Assignment creation payload\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/RedistributeAssignmentPayload\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/ontologies\": {\n            \"post\": {\n                \"operationId\": \"OntologiesCreateOntology\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIOntology\"\n                        }\n                    }\n                },\n                \"description\": \"Create a new Ontology\",\n                \"tags\": [\n                    \"Ontologies\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Ontology creation payload\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/CreateOntologyPayload\"\n                        }\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"OntologiesFindOntologies\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIOntologyCursor\"\n                        }\n                    }\n                },\n                \"description\": \"Find ontologies by query\",\n                \"tags\": [\n                    \"Ontologies\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"- An array of project IDs\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"- System flag\",\n                        \"in\": \"query\",\n                        \"name\": \"system\",\n                        \"required\": false,\n                        \"type\": \"boolean\"\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"ids\",\n                        \"required\": false,\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"- The number of pages to skip from the start\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"- How many ontologies in one page\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            }\n        },\n        \"/ontologies/{id}\": {\n            \"put\": {\n                \"operationId\": \"OntologiesUpdateOntology\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIOntology\"\n                        }\n                    }\n                },\n                \"description\": \"Update an existing Ontology\",\n                \"tags\": [\n                    \"Ontologies\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"ontology\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIOntologyConfiguration\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"OntologiesGetOntology\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIOntology\"\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing or Invalid id\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Ontology not found\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.NotFoundError\"\n                        }\n                    }\n                },\n                \"description\": \"Get a specific Ontology\",\n                \"tags\": [\n                    \"Ontologies\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Ontology ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"OntologiesDeleteOntology\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete an Ontology\",\n                \"tags\": [\n                    \"Ontologies\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Ontology ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/ontologies/{id}/addLabels\": {\n            \"patch\": {\n                \"operationId\": \"OntologiesAddLabels\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIOntology\"\n                        }\n                    }\n                },\n                \"description\": \"Update an existing Ontology\",\n                \"tags\": [\n                    \"Ontologies\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"labelsPayload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/AddLabelsNodePayload\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/ontologies/{id}/labels\": {\n            \"patch\": {\n                \"operationId\": \"OntologiesUpdateLabels\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIOntology\"\n                        }\n                    }\n                },\n                \"description\": \"Update an existing Ontology\",\n                \"tags\": [\n                    \"Ontologies\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"labelsPayload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/UpdateLabelsNodePayload\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/recipes\": {\n            \"post\": {\n                \"operationId\": \"RecipesCreateRecipe\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIRecipe\"\n                        }\n                    }\n                },\n                \"description\": \"Create a new Recipe\",\n                \"tags\": [\n                    \"Recipes\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Recipe creation payload\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/RecipePayload\"\n                        }\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"RecipesFindRecipes\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIRecipeCursor\"\n                        }\n                    }\n                },\n                \"description\": \"Find recipes by query\",\n                \"tags\": [\n                    \"Recipes\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"- An array of project IDs\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"- Filter by creator\",\n                        \"in\": \"query\",\n                        \"name\": \"creator\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Find by title\",\n                        \"in\": \"query\",\n                        \"name\": \"title\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- An array of ontology IDs\",\n                        \"in\": \"query\",\n                        \"name\": \"ontologies\",\n                        \"required\": false,\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"- The number of pages to skip from the start\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"- How many recipes in one page\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                ]\n            }\n        },\n        \"/recipes/{id}/clone\": {\n            \"post\": {\n                \"operationId\": \"RecipesCloneRecipe\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIRecipe\"\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Recipes\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/CloneRecipePayload\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/recipes/{id}\": {\n            \"patch\": {\n                \"operationId\": \"RecipesPatchRecipe\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIRecipe\"\n                        }\n                    }\n                },\n                \"description\": \"Update an existing recipe\",\n                \"tags\": [\n                    \"Recipes\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": The fields to update\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/PartialRecipePayload\"\n                        }\n                    },\n                    {\n                        \"description\": \": Recipe ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"RecipesGetRecipe\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APIRecipe\"\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing or Invalid id\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Recipe not found\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.NotFoundError\"\n                        }\n                    }\n                },\n                \"description\": \"Get a specific recipe\",\n                \"tags\": [\n                    \"Recipes\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Recipe ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"RecipesDeleteRecipe\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete a recipe\",\n                \"tags\": [\n                    \"Recipes\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Recipe ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/annotationtasks\": {\n            \"post\": {\n                \"operationId\": \"TasksCreateTask\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APITask\"\n                        }\n                    }\n                },\n                \"description\": \"Create a new Task\",\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Task creation payload\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/TaskPayload\"\n                        }\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"TasksFindTasks\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APITaskCursor\"\n                        }\n                    }\n                },\n                \"description\": \"Find tasks by query\",\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"- An array of project IDs\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"- Find by dataset\",\n                        \"in\": \"query\",\n                        \"name\": \"dataset\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Find by recipe\",\n                        \"in\": \"query\",\n                        \"name\": \"recipe\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Find by task status\",\n                        \"in\": \"query\",\n                        \"name\": \"status\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Filter by creator\",\n                        \"in\": \"query\",\n                        \"name\": \"creator\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Filter by task owner\",\n                        \"in\": \"query\",\n                        \"name\": \"taskOwner\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Find by task name\",\n                        \"in\": \"query\",\n                        \"name\": \"name\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Due date lower limit\",\n                        \"in\": \"query\",\n                        \"name\": \"minDate\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"- Due date upper limit\",\n                        \"in\": \"query\",\n                        \"name\": \"maxDate\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"- An array of assignment IDs\",\n                        \"in\": \"query\",\n                        \"name\": \"assignments\",\n                        \"required\": false,\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"- The number of pages to skip from the start\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"- How many tasks in one page\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    {\n                        \"description\": \"- Filter by parent task\",\n                        \"in\": \"query\",\n                        \"name\": \"parentTaskId\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"description\": \"- Filter by task type - Annotation or QA\",\n                        \"in\": \"query\",\n                        \"name\": \"type\",\n                        \"required\": false,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/annotationtasks/{id}/addToTask\": {\n            \"post\": {\n                \"operationId\": \"TasksAddItemsToTask\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APITask\"\n                        }\n                    }\n                },\n                \"description\": \"Add work to an existing Task\",\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Task update payload\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/AddToTaskPayload\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/annotationtasks/{id}\": {\n            \"patch\": {\n                \"operationId\": \"TasksPatchTask\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APITask\"\n                        }\n                    }\n                },\n                \"description\": \"Update an existing task\",\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": The fields to update\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/PartialTaskPayload\"\n                        }\n                    },\n                    {\n                        \"description\": \": Task ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"TasksGetTask\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APITask\"\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Missing or Invalid id\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.BadRequestError\"\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Task not found\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Errors.NotFoundError\"\n                        }\n                    }\n                },\n                \"description\": \"Get a specific task\",\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Task ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"TasksDeleteTask\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete a task\",\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \": Task ID\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ]\n            }\n        },\n        \"/annotationtasks/query\": {\n            \"post\": {\n                \"operationId\": \"TasksQueryTasks\",\n                \"produces\": [\n                    \"text/html\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/QueryFilter\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/annotationtasks/count\": {\n            \"post\": {\n                \"operationId\": \"TasksActiveCounters\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/APITaskCounters\"\n                        }\n                    }\n                },\n                \"description\": \"For org admin / owner:\\r\\nGet active counters for projects\",\n                \"tags\": [\n                    \"Tasks\"\n                ],\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"body\",\n                        \"name\": \"payload\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/register\": {\n            \"post\": {\n                \"tags\": [\n                    \"Register\"\n                ],\n                \"summary\": \"Registers a user\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserDetails\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/users/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Returns details of the logged in user\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserDetails\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/users/projects/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Returns a list of all projects the logged in user is a member of which\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProjectDetails\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/users/{user_id}/org\": {\n            \"patch\": {\n                \"tags\": [\n                    \"Users\"\n                ],\n                \"summary\": \"Change or add org to user\",\n                \"description\": \"Adding or updating org to existing user\",\n                \"parameters\": [\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"org_id\",\n                        \"in\": \"query\",\n                        \"description\": \"Org id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserDetails\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/projects\": {\n            \"get\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"List user's active org projects\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ProjectDetails\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Creates a new project\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"name\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Project name\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProjectDetails\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"x-codeSamples\": [\n                    {\n                        \"lang\": \"Python\",\n                        \"source\": \"\\ndl.projects.create(project_name='project_name')\\n\\n\\n# \\n# Create a new project.\\n# \\n# **Prerequisites**: Any user can create a project.\\n# \\n# :param str project_name: project name\\n# :param checkout: checkout\\n# :return: Project object\\n# :rtype: dtlpy.entities.project.Project\\n# \\n# \"\n                    }\n                ]\n            }\n        },\n        \"/projects/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Returns details of a specific project\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProjectDetails\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"x-codeSamples\": [\n                    {\n                        \"lang\": \"Python\",\n                        \"source\": \"\\ndl.projects.get(project_id='project_id')\\n\\n# \\n# Get a Project object.\\n# \\n# **Prerequisites**: You must be in the role of an *owner* to get a project object.\\n# \\n# You must check out to a project or provide at least one of the following params: project_id, project_name\\n# \\n# :param str project_name: optional - search by name\\n# :param str project_id: optional - search by id\\n# :param bool checkout: checkout\\n# :param bool fetch: optional - fetch entity from platform, default taken from cookie\\n# :param bool log_error: optional - show the logs errors\\n# :return: Project object\\n# :rtype: dtlpy.entities.project.Project\\n# \\n# \"\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Delete a project\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                },\n                \"x-codeSamples\": [\n                    {\n                        \"lang\": \"Python\",\n                        \"source\": \"\\ndl.projects.delete(project_id='project_id', sure=True, really=True)\\n\\n# \\n# Delete a project forever!\\n# \\n# **Prerequisites**: You must be in the role of an *owner* to delete a project.\\n# \\n# :param str project_name: optional - search by name\\n# :param str project_id: optional - search by id\\n# :param bool sure: Are you sure you want to delete?\\n# :param boll really: Really really sure?\\n# :return: True if sucess error if not\\n# :rtype: bool\\n# \\n# \"\n                    }\n                ]\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Change project name\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"name\",\n                        \"in\": \"query\",\n                        \"description\": \"New name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            }\n        },\n        \"/projects/{id}/members\": {\n            \"get\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Lists all project contributors\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Contributor\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/projects/{project_name}/name'\": {\n            \"get\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"List of user projects by name\",\n                \"parameters\": [\n                    {\n                        \"name\": \"project_name\",\n                        \"in\": \"path\",\n                        \"description\": \"Project name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ProjectDetails\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/projects/{project_id}/members/{user_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Add a user to a project\",\n                \"parameters\": [\n                    {\n                        \"name\": \"project_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"role\",\n                        \"in\": \"query\",\n                        \"description\": \"Role\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"annotator\",\n                                \"engineer\",\n                                \"owner\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Remove a member from a project\",\n                \"parameters\": [\n                    {\n                        \"name\": \"project_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Change user role\",\n                \"parameters\": [\n                    {\n                        \"name\": \"project_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"role\",\n                        \"in\": \"query\",\n                        \"description\": \"role\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"annotator\",\n                                \"engineer\",\n                                \"owner\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            }\n        },\n        \"/projects/{project_id}/org\": {\n            \"patch\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Change project org\",\n                \"parameters\": [\n                    {\n                        \"name\": \"project_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"org_id\",\n                        \"in\": \"query\",\n                        \"description\": \"Org id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            }\n        },\n        \"/projects/{project_id}/accounts\": {\n            \"post\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Add an account to a project\",\n                \"parameters\": [\n                    {\n                        \"name\": \"project_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"account\",\n                        \"in\": \"query\",\n                        \"description\": \"Account id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Remove an account from a project\",\n                \"parameters\": [\n                    {\n                        \"name\": \"project_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Allowed for superuser only\",\n                        \"content\": {}\n                    }\n                }\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"Projects\"\n                ],\n                \"summary\": \"Replace an account for a project\",\n                \"parameters\": [\n                    {\n                        \"name\": \"project_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Project id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"account\",\n                        \"in\": \"query\",\n                        \"description\": \"Account id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Allowed for superuser only\",\n                        \"content\": {}\n                    }\n                }\n            }\n        },\n        \"/orgs/{org_id}/projects\": {\n            \"get\": {\n                \"tags\": [\n                    \"Organization\"\n                ],\n                \"summary\": \"List all org projects\",\n                \"parameters\": [\n                    {\n                        \"name\": \"org_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Org id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Allowed for org's admin only\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ProjectDetails\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/orgs/{org_id}/members/{user_id}/projects\": {\n            \"get\": {\n                \"tags\": [\n                    \"Organization\"\n                ],\n                \"summary\": \"List user's org projects\",\n                \"parameters\": [\n                    {\n                        \"name\": \"org_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Org id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"user_id\",\n                        \"in\": \"path\",\n                        \"description\": \"User id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Allowed for org's admin and for user in org only\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ProjectDetails\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/orgs/{org_id}/members\": {\n            \"post\": {\n                \"tags\": [\n                    \"Organization\"\n                ],\n                \"summary\": \"Adding new member to existing org\",\n                \"parameters\": [\n                    {\n                        \"name\": \"org_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Org id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"emails\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"type\": \"string\"\n                                        }\n                                    },\n                                    \"role\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Contributor\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"x-codegen-request-body-name\": \"payload\"\n            }\n        },\n        \"/orgs/{org_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Organization\"\n                ],\n                \"summary\": \"api/v1/orgs/{org_id}\",\n                \"description\": \"get a specific Org\",\n                \"parameters\": [\n                    {\n                        \"name\": \"org_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Org id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Contributor\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Organization\"\n                ],\n                \"summary\": \"Delete an organization\",\n                \"parameters\": [\n                    {\n                        \"name\": \"org_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Org id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            }\n        },\n        \"/orgs/{org_id}/plan\": {\n            \"patch\": {\n                \"tags\": [\n                    \"Organization\"\n                ],\n                \"summary\": \"Update existing org\",\n                \"parameters\": [\n                    {\n                        \"name\": \"org_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Org id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"plan\",\n                        \"in\": \"query\",\n                        \"description\": \"update plan for org\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"freemium\",\n                                \"premium\"\n                            ]\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Contributor\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/accounts\": {\n            \"get\": {\n                \"tags\": [\n                    \"Account\"\n                ],\n                \"summary\": \"List all user's accounts\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Allowed for org admin or account admin only\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/AccountDetails\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Account\"\n                ],\n                \"summary\": \"Creates a new account\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"org\"\n                                ],\n                                \"properties\": {\n                                    \"org\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Org ID\"\n                                    },\n                                    \"name\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Account name\"\n                                    },\n                                    \"createdBy\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Account creator\"\n                                    },\n                                    \"owner\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"Account owner\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AccountDetails\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/accounts/{account_id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Account\"\n                ],\n                \"summary\": \"get a specific account\",\n                \"parameters\": [\n                    {\n                        \"name\": \"account_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Account id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Allowed for org admin or account admin only\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AccountDetails\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Account\"\n                ],\n                \"summary\": \"Delete an account\",\n                \"parameters\": [\n                    {\n                        \"name\": \"account_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Account id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"Account\"\n                ],\n                \"summary\": \"Change an account name, creator or owner\",\n                \"parameters\": [\n                    {\n                        \"name\": \"account_id\",\n                        \"in\": \"path\",\n                        \"description\": \"Account id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"name\",\n                        \"in\": \"query\",\n                        \"description\": \"New name\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"createdBy\",\n                        \"in\": \"query\",\n                        \"description\": \"New creator\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"owner\",\n                        \"in\": \"query\",\n                        \"description\": \"New owner\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {}\n                    }\n                }\n            }\n        },\n        \"/ml/metrics/shebang\": {\n            \"post\": {\n                \"operationId\": \"Generate Model Metrics Report\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Dictionary\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Generate Model Metrics Report\\n\\nSupply single or multiple Model ids to generate report for\",\n                \"tags\": [\n                    \"Model Metrics\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"datasetIds\": {\n                                        \"anyOf\": [\n                                            {\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"items\": {\n                                                    \"type\": \"string\"\n                                                },\n                                                \"type\": \"array\"\n                                            }\n                                        ],\n                                        \"description\": \"The dataset or datasets to generate report for\"\n                                    },\n                                    \"modelIds\": {\n                                        \"anyOf\": [\n                                            {\n                                                \"type\": \"string\"\n                                            },\n                                            {\n                                                \"items\": {\n                                                    \"type\": \"string\"\n                                                },\n                                                \"type\": \"array\"\n                                            }\n                                        ],\n                                        \"description\": \"The models to generate report for\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"modelIds\"\n                                ],\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/metrics/publish\": {\n            \"post\": {\n                \"operationId\": \"Publish Model Metrics\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"errorMap\": {\n                                            \"properties\": {},\n                                            \"additionalProperties\": {\n                                                \"$ref\": \"#/components/schemas/Error\"\n                                            },\n                                            \"type\": \"object\"\n                                        },\n                                        \"failed\": {\n                                            \"type\": \"number\",\n                                            \"format\": \"double\"\n                                        },\n                                        \"succeeded\": {\n                                            \"type\": \"number\",\n                                            \"format\": \"double\"\n                                        }\n                                    },\n                                    \"required\": [\n                                        \"failed\",\n                                        \"succeeded\"\n                                    ],\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Publish Model Metrics\\n\\nSupply single or multiple metrics to publish\",\n                \"tags\": [\n                    \"Model Metrics\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The metric or metrics to publish\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"anyOf\": [\n                                    {\n                                        \"$ref\": \"#/components/schemas/MetricRequest\"\n                                    },\n                                    {\n                                        \"items\": {\n                                            \"$ref\": \"#/components/schemas/MetricRequest\"\n                                        },\n                                        \"type\": \"array\"\n                                    }\n                                ],\n                                \"description\": \"The metric or metrics to publish\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/metrics/{id}\": {\n            \"delete\": {\n                \"operationId\": \"Delete Metric\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Delete a Metric\\n\\nSupply the unique id of the Metric to delete\",\n                \"tags\": [\n                    \"Model Metrics\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Metric to Delete\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/ml/metrics/query\": {\n            \"post\": {\n                \"operationId\": \"Query Model Metrics\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPISetting\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Query Model Metrics\\n\\nSupply the query requested to query Metrics\",\n                \"tags\": [\n                    \"Model Metrics\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The query\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/QueryModel\",\n                                \"description\": \"The query\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/{id}\": {\n            \"get\": {\n                \"operationId\": \"Get Model\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIModel\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Retrieves the details of a Model.\\n\\nSupply the unique Model ID to fetch it's details.\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Model to fetch\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"Update Model\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIModel\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Update a Model\\n\\nSupply the unique id of the Model to update and an object describing which fields update\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Model to Update\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"The values to update with\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"allOf\": [\n                                    {\n                                        \"$ref\": \"#/components/schemas/PatchModelRequest\"\n                                    },\n                                    {\n                                        \"properties\": {\n                                            \"system\": {\n                                                \"type\": \"boolean\"\n                                            }\n                                        },\n                                        \"type\": \"object\"\n                                    }\n                                ],\n                                \"description\": \"The values to update with\"\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"operationId\": \"Delete Model\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Delete a Model\\n\\nSupply the unique id of the Model to delete\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Model to Delete\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/ml/models\": {\n            \"get\": {\n                \"operationId\": \"List Models\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPISetting\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Retrieves Models.\\n\\nSupply query parameters to filter the list.\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"filter: accepts any string\",\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"sort: accepts any string\",\n                        \"in\": \"query\",\n                        \"name\": \"sort\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"page: accepts any number\",\n                        \"in\": \"query\",\n                        \"name\": \"page\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"double\",\n                            \"type\": \"number\"\n                        }\n                    },\n                    {\n                        \"description\": \"pageSize: accepts any number\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"format\": \"double\",\n                            \"type\": \"number\"\n                        }\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"Create Model\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIModel\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Creates a new Model.\\n\\nSupply the appropriate Create Request object in order to create a Model.\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The Model to create\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/CreateModelRequest\",\n                                \"description\": \"The Model to create\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/query\": {\n            \"post\": {\n                \"operationId\": \"Query Models\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPISetting\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Query Models\\n\\nSupply the query requested to query Models\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The query\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/QueryModel\",\n                                \"description\": \"The query\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/{id}/train\": {\n            \"post\": {\n                \"operationId\": \"Train Model\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Execution\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Train Model\\n\\nSupply the model id to initiate a training session\\nYou can also supply specific config for the deployed service\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Model to train\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Service Configuration\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"pipeline\": {\n                                        \"$ref\": \"#/components/schemas/Dictionary\"\n                                    },\n                                    \"serviceConfig\": {\n                                        \"$ref\": \"#/components/schemas/Dictionary\"\n                                    }\n                                },\n                                \"type\": \"object\",\n                                \"description\": \"Service Configuration\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/{id}/predict\": {\n            \"post\": {\n                \"operationId\": \"Model Prediction\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Execution\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Model Prediction\\n\\nSupply the resource to perform prediction on\\nYou can also supply specific config for the deployed service\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Model to train\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"config\": {\n                                        \"properties\": {\n                                            \"serviceId\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"pipeline\": {\n                                                \"$ref\": \"#/components/schemas/Dictionary\"\n                                            },\n                                            \"serviceConfig\": {\n                                                \"$ref\": \"#/components/schemas/Dictionary\"\n                                            }\n                                        },\n                                        \"type\": \"object\",\n                                        \"description\": \"Service Configuration\"\n                                    },\n                                    \"input\": {\n                                        \"properties\": {\n                                            \"datasetQuery\": {\n                                                \"$ref\": \"#/components/schemas/Dictionary\"\n                                            },\n                                            \"datasetId\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"dataUris\": {\n                                                \"anyOf\": [\n                                                    {\n                                                        \"type\": \"string\"\n                                                    },\n                                                    {\n                                                        \"items\": {\n                                                            \"type\": \"string\"\n                                                        },\n                                                        \"type\": \"array\"\n                                                    }\n                                                ]\n                                            },\n                                            \"itemIds\": {\n                                                \"anyOf\": [\n                                                    {\n                                                        \"type\": \"string\"\n                                                    },\n                                                    {\n                                                        \"items\": {\n                                                            \"type\": \"string\"\n                                                        },\n                                                        \"type\": \"array\"\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        \"type\": \"object\",\n                                        \"description\": \"Predict input\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"input\"\n                                ],\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/{id}/evaluate\": {\n            \"post\": {\n                \"operationId\": \"Evaluate Model\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Execution\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Evaluate Model\\n\\nSupply data to evaluate the model on\\nYou can also supply specific config for the deployed service\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Model to train\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"config\": {\n                                        \"properties\": {\n                                            \"pipeline\": {\n                                                \"$ref\": \"#/components/schemas/Dictionary\"\n                                            },\n                                            \"serviceConfig\": {\n                                                \"$ref\": \"#/components/schemas/Dictionary\"\n                                            }\n                                        },\n                                        \"type\": \"object\",\n                                        \"description\": \"Service Configuration\"\n                                    },\n                                    \"input\": {\n                                        \"properties\": {\n                                            \"datasetQuery\": {\n                                                \"$ref\": \"#/components/schemas/Dictionary\"\n                                            },\n                                            \"datasetId\": {\n                                                \"type\": \"string\"\n                                            }\n                                        },\n                                        \"type\": \"object\",\n                                        \"description\": \"Evaluate input\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"input\"\n                                ],\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/{id}/deploy\": {\n            \"post\": {\n                \"operationId\": \"Deploy Model\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Deploy Model\\n\\nSupply the model id to deploy it as a service\\nYou can also supply specific config for the deployed service\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Model to train\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Service Configuration\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"pipeline\": {\n                                        \"$ref\": \"#/components/schemas/Dictionary\"\n                                    },\n                                    \"serviceConfig\": {\n                                        \"$ref\": \"#/components/schemas/Dictionary\"\n                                    }\n                                },\n                                \"type\": \"object\",\n                                \"description\": \"Service Configuration\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/{id}/clone\": {\n            \"post\": {\n                \"operationId\": \"Clone Model\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"anyOf\": [\n                                        {\n                                            \"$ref\": \"#/components/schemas/APIModel\"\n                                        },\n                                        {\n                                            \"$ref\": \"#/components/schemas/APICommand\"\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Clone Model\\n\\nthis will either clone or create a copy both dataset and model and create new instances of them\\n\\nProvide the model ID of the Model to clone from\\n\\nAlso provide the Clone spec to clone a dataset with a filter and the model\\nOr provide parameters to overwrite the current values in the model you want to clone\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Model to clone from\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Provide the Clone spec to clone a dataset with a filter and the model\\nOr Provide parameters to overwrite the current values in the model you want to clone\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"anyOf\": [\n                                    {\n                                        \"$ref\": \"#/components/schemas/Partial_CreateModelRequest_\"\n                                    },\n                                    {\n                                        \"$ref\": \"#/components/schemas/APICopyEnviromentSpec\"\n                                    }\n                                ],\n                                \"description\": \"Provide the Clone spec to clone a dataset with a filter and the model\\nOr Provide parameters to overwrite the current values in the model you want to clone\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/executions\": {\n            \"post\": {\n                \"operationId\": \"Models Executions\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelJoinMap\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Models Executions\\n\\nThis will return latest 1000 models executions\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The query\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/QueryModel\",\n                                \"description\": \"The query\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/services\": {\n            \"post\": {\n                \"operationId\": \"Models Services\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ModelJoinMap\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Models Services\\n\\nThis will return latest 1000 models servuces\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The query\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/QueryModel\",\n                                \"description\": \"The query\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ml/models/datasets/count\": {\n            \"get\": {\n                \"operationId\": \"Models Datasets Count\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"datasetsCount\": {\n                                            \"type\": \"number\",\n                                            \"format\": \"double\"\n                                        }\n                                    },\n                                    \"required\": [\n                                        \"datasetsCount\"\n                                    ],\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Models Datasets Count\\n\\nThis will return the total dataset count that models have been assigned to\",\n                \"tags\": [\n                    \"Models\"\n                ],\n                \"security\": [],\n                \"parameters\": []\n            }\n        },\n        \"/compositions\": {\n            \"post\": {\n                \"operationId\": \"Composition_create\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIComposition\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Create a new Composition.\\nSupply the entities in the body request to create a Composition.\",\n                \"tags\": [\n                    \"compositions\"\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/IPostComposition\"\n                }\n            },\n            \"get\": {\n                \"operationId\": \"Composition_list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPIComposition\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Retrieves Composition.\\n\\nSupply query parameters to filter the list.\",\n                \"tags\": [\n                    \"compositions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"filter: accepts any string\",\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"sort: accepts any string\",\n                        \"in\": \"query\",\n                        \"name\": \"sort\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"page: accepts any number\",\n                        \"in\": \"query\",\n                        \"name\": \"page\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    },\n                    {\n                        \"description\": \"pageSize: accepts any number\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/compositions/{compositionId}\": {\n            \"get\": {\n                \"operationId\": \"Composition_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIComposition\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get an composition updated object from the db.\",\n                \"tags\": [\n                    \"compositions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The composition id\",\n                        \"in\": \"path\",\n                        \"name\": \"compositionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"Composition_update\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIComposition\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update existing composition.\\nThe server will save the new composition props and refresh all the entities belonging to the composition\",\n                \"tags\": [\n                    \"compositions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The composition id\",\n                        \"in\": \"path\",\n                        \"name\": \"compositionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/IPostComposition\"\n                }\n            }\n        },\n        \"/compositions/{compositionId}/install\": {\n            \"post\": {\n                \"operationId\": \"Composition_install\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIComposition\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Install existing composition. setting all the entities\",\n                \"tags\": [\n                    \"compositions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The composition id\",\n                        \"in\": \"path\",\n                        \"name\": \"compositionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/compositions/{compositionId}/uninstall\": {\n            \"post\": {\n                \"operationId\": \"Composition_uninstall\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIComposition\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Uninstall existing composition. move all the entities to uninstall state\",\n                \"tags\": [\n                    \"compositions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The composition id\",\n                        \"in\": \"path\",\n                        \"name\": \"compositionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/compositions/{compositionId}/terminate\": {\n            \"post\": {\n                \"operationId\": \"Composition_terminate\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"enum\": [\n                                        \"Created\",\n                                        \"Initializing\",\n                                        \"Installed\",\n                                        \"Activated\",\n                                        \"Deactivated\",\n                                        \"Uninstalled\",\n                                        \"Terminating\",\n                                        \"Terminated\",\n                                        \"Updating\",\n                                        \"Failure\"\n                                    ],\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Delete the composition. delete all the entities\",\n                \"tags\": [\n                    \"compositions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The composition id\",\n                        \"in\": \"path\",\n                        \"name\": \"compositionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/pipelines\": {\n            \"post\": {\n                \"operationId\": \"Pipeline_create\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIPipeline\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Create a pipeline.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/IPostPipeline\"\n                }\n            }\n        },\n        \"/pipelines/{pipelineId}\": {\n            \"get\": {\n                \"operationId\": \"Pipeline_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIPipeline\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get pipeline by id.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"pipeline id.\",\n                        \"in\": \"path\",\n                        \"name\": \"pipelineId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"Pipeline_update\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIPipeline\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update pipeline changes.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"pipeline id.\",\n                        \"in\": \"path\",\n                        \"name\": \"pipelineId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/IPostPipeline\"\n                }\n            }\n        },\n        \"/pipelines/{id}/statistics\": {\n            \"get\": {\n                \"operationId\": \"Pipeline_getStatistics\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IPipelineStatistics\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get pipeline counters.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"pipeline id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/pipelines/{pipelineId}/reset\": {\n            \"post\": {\n                \"operationId\": \"Pipeline_reset\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIPipeline\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Reset pipeline counters.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"pipeline id.\",\n                        \"in\": \"path\",\n                        \"name\": \"pipelineId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/pipelines/{pipelineId}/terminate\": {\n            \"delete\": {\n                \"operationId\": \"Pipeline_terminate\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Delete the pipeline, should terminate the composition.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"pipeline id.\",\n                        \"in\": \"path\",\n                        \"name\": \"pipelineId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/pipelines/{pipelineId}/execute\": {\n            \"post\": {\n                \"operationId\": \"Pipeline_execute\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"enum\": [\n                                        \"APIPipelineState\",\n                                        \"APICommand\"\n                                    ],\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Execute a pipeline and return the pipeline execution as an object - or command in case batch is defined on the body.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"pipeline id.\",\n                        \"in\": \"path\",\n                        \"name\": \"pipelineId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APIPipelineExecuteOptions\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/pipelines/{pipelineId}/nodes/{nodeId}\": {\n            \"get\": {\n                \"operationId\": \"Pipeline_getNode\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NodeDescriptor\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"get one of pipeline nodes by pipeline id and node id.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"pipeline id.\",\n                        \"in\": \"path\",\n                        \"name\": \"pipelineId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"nodeId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/pipelines/{projectId}/compositionStatus\": {\n            \"get\": {\n                \"operationId\": \"Pipeline_list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPIPipeline\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Retrieves pipelines.\\n\\nSupply query parameters to filter the list.\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"filter: accepts any string\",\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"sort: accepts any string\",\n                        \"in\": \"query\",\n                        \"name\": \"sort\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"page: accepts any number\",\n                        \"in\": \"query\",\n                        \"name\": \"page\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    },\n                    {\n                        \"description\": \"pageSize: accepts any number\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/pipelines/{pipelineId}/executions\": {\n            \"get\": {\n                \"operationId\": \"PipelineExecution_executions\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPIPipelineState\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"sort\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"page\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"pipelineId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/pipelines/{piplineId}/logs\": {\n            \"post\": {\n                \"operationId\": \"PipelineLogs_logs\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/PipelineExecutionLogs\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"pipelines\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"piplineId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"logsOptions\": {\n                                        \"$ref\": \"#/components/schemas/LogQuery\"\n                                    },\n                                    \"query\": {\n                                        \"$ref\": \"#/components/schemas/QueryString\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/pipelines/templates/\": {\n            \"post\": {\n                \"operationId\": \"PipelineTemplates_create\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIPipeline\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"pipelines/templates\"\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/IPostPipeline\"\n                }\n            }\n        },\n        \"/pipelines/templates/query\": {\n            \"post\": {\n                \"operationId\": \"PipelineTemplates_query\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APITemplateQuery\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"pipelines/templates\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"projectId\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/TemplateQuery\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/pipelines/query\": {\n            \"post\": {\n                \"operationId\": \"Query_query\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageT\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"pipelines/query\"\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/QueryString\"\n                }\n            }\n        },\n        \"/triggers\": {\n            \"get\": {\n                \"operationId\": \"Triggers_listTriggers\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TriggersPage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Retrieves services.\\n\\nSupply query parameters to filter the list.\",\n                \"tags\": [\n                    \"Triggers\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"type\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"Event\",\n                                \"Cron\"\n                            ]\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"name\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"resource\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"active\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"executionMode\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"serviceId\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"webhookId\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"operationType\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"entity\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"action\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"Triggers_createTrigger\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APITrigger\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Create a Trigger. Can create two types: a cron trigger or an event trigger.\\nInputs are different for each type\",\n                \"tags\": [\n                    \"Triggers\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/CreateTriggerRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/triggers/{id}\": {\n            \"get\": {\n                \"operationId\": \"Triggers_getTrigger\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APITrigger\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get trigger by id.\\nSupply query parameters to filter the list.\",\n                \"tags\": [\n                    \"Triggers\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Trigger id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"Triggers_updateTrigger\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APITrigger\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update trigger.\",\n                \"tags\": [\n                    \"Triggers\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Trigger Id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APITrigger\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            },\n            \"delete\": {\n                \"operationId\": \"Triggers_deleteTriggers\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete Trigger.\",\n                \"tags\": [\n                    \"Triggers\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Trigger Id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/trigger-resource-information\": {\n            \"post\": {\n                \"operationId\": \"TriggerResourceInformation_queryTriggerResourceInformation\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TriggerResourceInformationPage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"TriggerResourceInformation\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/TriggerResourceInformationQuery\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/query/faas\": {\n            \"post\": {\n                \"operationId\": \"FaasQueryQueryEntities\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Query\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"resource\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"\"\n                                    },\n                                    \"filter\": {\n                                        \"type\": \"object\",\n                                        \"description\": \"\"\n                                    },\n                                    \"sort\": {\n                                        \"type\": \"object\",\n                                        \"description\": \"\"\n                                    },\n                                    \"page\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"double\",\n                                        \"description\": \"\"\n                                    },\n                                    \"pageSize\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"double\",\n                                        \"description\": \"\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/services/global\": {\n            \"post\": {\n                \"operationId\": \"Services_getGlobalServices\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get all global services \\nby using list of projectId and service name\\n\\nExample: [{ projectId: 'my-project-id', name: 'my-service-name' },\\n          { projectId: 'my-project-id2', name: 'my-service-name2' }, ... ]\\n\\n the server will search in the db for the service with the name my-service-name belonging to the project 'my-project-id\\n also the service with the name my-service-name2 belonging to the project 'my-project-id2\\n and so on...\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"projectId\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"\"\n                                        },\n                                        \"name\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/services/cache\": {\n            \"post\": {\n                \"operationId\": \"Services_cache\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Add or remove Cache for the org.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Cache request mode\",\n                        \"in\": \"query\",\n                        \"name\": \"mode\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"apply\",\n                                \"destroy\",\n                                \"get\"\n                            ]\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/ICacheOptions\"\n                }\n            }\n        },\n        \"/services/fs-cache\": {\n            \"post\": {\n                \"operationId\": \"Services_fsCache\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"mode\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"apply\",\n                                \"destroy\",\n                                \"get\"\n                            ]\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/ICacheOptions\"\n                }\n            }\n        },\n        \"/services\": {\n            \"get\": {\n                \"operationId\": \"Services_listServices\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ServicesPage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Retrieves services.\\n\\nSupply query parameters to filter the list.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"projects: array of project id\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"style\": \"form\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    {\n                        \"description\": \"name: service name\",\n                        \"in\": \"query\",\n                        \"name\": \"name\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"packageId: the package that service related to\",\n                        \"in\": \"query\",\n                        \"name\": \"packageId\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"pageOffset: accepts any number\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    },\n                    {\n                        \"description\": \"pageSize: accepts any number\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"Services_createService\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIService\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Create new package.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APIService\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/services/{id}\": {\n            \"get\": {\n                \"operationId\": \"Services_getService\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIService\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get service by id and version.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The service version\",\n                        \"in\": \"query\",\n                        \"name\": \"version\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"Services_updateService\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update service changes.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"optional - force updated old replicas immediately\\nif the value has set is true, it will go to services driver(kubernetes...) and restarting all the replicas without waiting\",\n                        \"in\": \"query\",\n                        \"name\": \"force\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APIServicePatch\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            },\n            \"delete\": {\n                \"operationId\": \"Services_deleteService\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete Service.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/services/{id}/revisions\": {\n            \"get\": {\n                \"operationId\": \"Services_getServiceRevisions\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/APIService\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get service revisions by id.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/services/{id}/stop\": {\n            \"post\": {\n                \"operationId\": \"Services_stopService\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Pause service.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"optional - terminate old replicas immediately\",\n                        \"in\": \"query\",\n                        \"name\": \"force\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/services/{id}/resume\": {\n            \"post\": {\n                \"operationId\": \"Services_resumeService\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Pause service.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"force\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/services/logs\": {\n            \"post\": {\n                \"operationId\": \"Services_getLogs\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ServiceLogsPage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get logs for pipelines.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"verbose\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/LogQuery\"\n                }\n            }\n        },\n        \"/services/{id}/logs\": {\n            \"post\": {\n                \"operationId\": \"Services_getServiceLogs\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ServiceLogsPage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get service logs.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"verbose\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/LogQuery\"\n                }\n            }\n        },\n        \"/services/{id}/status\": {\n            \"post\": {\n                \"operationId\": \"Services_updateReplicaStatus\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIReplicaStatusUpdate\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update Replica Status.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APIReplicaStatusUpdate\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            },\n            \"get\": {\n                \"operationId\": \"Services_getServiceStatus\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIServiceStatus\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get service status.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/services/{id}/rollout\": {\n            \"post\": {\n                \"operationId\": \"Services_rolloutService\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIService\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Rolling out service.\",\n                \"tags\": [\n                    \"Services\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"version\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/compute/registry/orgs/{orgId}/integrations/{integrationId}\": {\n            \"post\": {\n                \"operationId\": \"Compute_registryCred\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Apply docker private registry credentials on the user compute system.\",\n                \"tags\": [\n                    \"compute\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The org id\",\n                        \"in\": \"path\",\n                        \"name\": \"orgId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The integration id, each registry credentials should be saved as an integration vault\",\n                        \"in\": \"path\",\n                        \"name\": \"integrationId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"Compute_deleteRegistryCred\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete docker private registry credentials from the user compute system.\",\n                \"tags\": [\n                    \"compute\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The org id\",\n                        \"in\": \"path\",\n                        \"name\": \"orgId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The integration id, each registry credentials should be saved as an integration vault\",\n                        \"in\": \"path\",\n                        \"name\": \"integrationId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/packages\": {\n            \"get\": {\n                \"operationId\": \"Packages_listPackages\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PackagesPage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Packages\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"name\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"creator\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"Packages_createPackage\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIPackage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Create new package.\",\n                \"tags\": [\n                    \"Packages\"\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/APIPackage\"\n                }\n            }\n        },\n        \"/packages/{id}\": {\n            \"get\": {\n                \"operationId\": \"Packages_getPackage\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIPackage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get package by id.\",\n                \"tags\": [\n                    \"Packages\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Package id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The package version\",\n                        \"in\": \"query\",\n                        \"name\": \"version\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"Packages_updatePackage\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIPackage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update package changes.\",\n                \"tags\": [\n                    \"Packages\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"package id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/APIPackage\"\n                }\n            }\n        },\n        \"/packages/{id}/revisions\": {\n            \"get\": {\n                \"operationId\": \"Packages_getPackageRevisions\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/APIPackage\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get package revisions by id.\",\n                \"tags\": [\n                    \"Packages\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"package id.\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/packages/{ids}\": {\n            \"delete\": {\n                \"operationId\": \"Packages_deletePackages\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Delete Package object.\",\n                \"tags\": [\n                    \"Packages\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"List of Package id.\",\n                        \"in\": \"path\",\n                        \"name\": \"ids\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/executions/{id}\": {\n            \"get\": {\n                \"operationId\": \"Executions_getExecution\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIExecution\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get an execution by id.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Execution id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"if true, wait for the execution to finish\",\n                        \"in\": \"query\",\n                        \"name\": \"sync\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"Executions_updateExecution\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIExecution\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update execution changes to platform.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Execution id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APIExecutionPatch\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/executions/{id}/attempts\": {\n            \"post\": {\n                \"operationId\": \"Executions_incrementExecutionAttempts\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"type\": \"number\",\n                                    \"format\": \"double\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Increment the number of attempts that an execution is allowed to attempt to run a service that is not responding.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Execution id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/executions\": {\n            \"get\": {\n                \"operationId\": \"Executions_listExecutions\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ExecutionsPage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"List service executions.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The project id\",\n                        \"in\": \"query\",\n                        \"name\": \"projects\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The service name which the execution was running of\",\n                        \"in\": \"query\",\n                        \"name\": \"service\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The trigger name that has create the execution\",\n                        \"in\": \"query\",\n                        \"name\": \"trigger\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The function name\",\n                        \"in\": \"query\",\n                        \"name\": \"functionName\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"orderByType\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"createdAt\",\n                                \"updatedAt\"\n                            ]\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"orderByDirection\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"asc\",\n                                \"desc\"\n                            ]\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"createdAfter\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"createdBefore\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"The execution status\",\n                        \"in\": \"query\",\n                        \"name\": \"status\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"created\",\n                                \"in-progress\",\n                                \"failed\",\n                                \"success\",\n                                \"canceled\",\n                                \"aborted\",\n                                \"rerun\",\n                                \"system-failure\"\n                            ]\n                        }\n                    },\n                    {\n                        \"description\": \"The resourceType should be executions\",\n                        \"in\": \"query\",\n                        \"name\": \"resourceType\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"Dataset\",\n                                \"Item\",\n                                \"Annotation\",\n                                \"Execution\",\n                                \"Task\",\n                                \"Assignment\",\n                                \"Service\",\n                                \"Package\",\n                                \"Project\",\n                                \"Json\",\n                                \"String\",\n                                \"Number\",\n                                \"Integer\",\n                                \"Float\",\n                                \"Boolean\",\n                                \"Model\",\n                                \"Recipe\",\n                                \"Snapshot\",\n                                \"Dataset[]\",\n                                \"Item[]\",\n                                \"Annotation[]\",\n                                \"Execution[]\",\n                                \"Task[]\",\n                                \"Assignment[]\",\n                                \"Service[]\",\n                                \"Package[]\",\n                                \"Project[]\",\n                                \"Json[]\",\n                                \"String[]\",\n                                \"Number[]\",\n                                \"Integer[]\",\n                                \"Float[]\",\n                                \"Boolean[]\",\n                                \"Model[]\",\n                                \"Recipe[]\",\n                                \"Snapshot[]\"\n                            ]\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"resourceId\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/executions/{executionId}/rerun\": {\n            \"post\": {\n                \"operationId\": \"Executions_rerunExecution\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"enum\": [\n                                        \"APIExecution\",\n                                        \"PiperSettingsCommands\"\n                                    ],\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Rerun execution.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Execution id\",\n                        \"in\": \"path\",\n                        \"name\": \"executionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Wait for the execution to finish\",\n                        \"in\": \"query\",\n                        \"name\": \"sync\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/executions/rerun\": {\n            \"post\": {\n                \"operationId\": \"Executions_rerunExecutionQuery\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APICommand\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Rerun batch execution.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\"\n                            }\n                        }\n                    },\n                    \"description\": \"Rerun options.\",\n                    \"required\": true\n                }\n            }\n        },\n        \"/executions/{serviceId}\": {\n            \"post\": {\n                \"operationId\": \"Executions_createExecution\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"enum\": [\n                                        \"APIExecution\",\n                                        \"APICommand\"\n                                    ],\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Execute a function on an existing service.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Service id to execute on.\",\n                        \"in\": \"path\",\n                        \"name\": \"serviceId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"if true, wait for function to end.\",\n                        \"in\": \"query\",\n                        \"name\": \"sync\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"batch\": {\n                                        \"$ref\": \"#/components/schemas/APIExecuteOptionsBatch\"\n                                    },\n                                    \"functionName\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"\"\n                                    },\n                                    \"input\": {\n                                        \"$ref\": \"#/components/schemas/Dictionary\"\n                                    },\n                                    \"projectId\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"\"\n                                    },\n                                    \"pipeline\": {\n                                        \"$ref\": \"#/components/schemas/IPipelineExecution\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/executions/{id}/progress\": {\n            \"post\": {\n                \"operationId\": \"Executions_pushProgress\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Update Execution Progress.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Execution id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"timestamp\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"date-time\",\n                                        \"description\": \"\"\n                                    },\n                                    \"status\": {\n                                        \"enum\": [\n                                            \"created\",\n                                            \"in-progress\",\n                                            \"failed\",\n                                            \"success\",\n                                            \"canceled\",\n                                            \"aborted\",\n                                            \"rerun\",\n                                            \"system-failure\"\n                                        ],\n                                        \"type\": \"string\",\n                                        \"description\": \"Execution status\"\n                                    },\n                                    \"message\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"message\"\n                                    },\n                                    \"percentComplete\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"double\",\n                                        \"description\": \"percent work done\"\n                                    },\n                                    \"error\": {\n                                        \"$ref\": \"#/components/schemas/Dictionary\"\n                                    },\n                                    \"output\": {\n                                        \"$ref\": \"#/components/schemas/Dictionary\"\n                                    },\n                                    \"serviceVersion\": {\n                                        \"type\": \"string\",\n                                        \"description\": \"service version\"\n                                    },\n                                    \"duration\": {\n                                        \"type\": \"number\",\n                                        \"format\": \"double\",\n                                        \"description\": \"\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/executions/{id}/terminate\": {\n            \"post\": {\n                \"operationId\": \"Executions_terminateExecution\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Terminate Execution.\",\n                \"tags\": [\n                    \"Executions\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"Execution id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ExecutionStatusReport\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/instance_catalog\": {\n            \"get\": {\n                \"operationId\": \"InstanceCatalog_getInstanceCatalog\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"InstanceCatalog\"\n                ]\n            }\n        },\n        \"/piper-misc/naming/packages/{name}\": {\n            \"get\": {\n                \"operationId\": \"Misc_validatePackageName\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"PiperMisc\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/piper-misc/naming/services/{name}\": {\n            \"get\": {\n                \"operationId\": \"Misc_validateServiceName\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"PiperMisc\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/piper-misc/naming/triggers/{name}\": {\n            \"get\": {\n                \"operationId\": \"Misc_validateTriggerName\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"PiperMisc\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/activities/\": {\n            \"get\": {\n                \"operationId\": \"UiActivities_getUiActivities\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ActivitiesDescriptor_\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"Activities\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"projectId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/webhooks\": {\n            \"get\": {\n                \"operationId\": \"WebHooks_listWebHooks\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/WebHooksPage\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"WebHooks\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageOffset\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    },\n                    {\n                        \"description\": \"\",\n                        \"in\": \"query\",\n                        \"name\": \"pageSize\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"format\": \"double\"\n                        }\n                    }\n                ]\n            },\n            \"post\": {\n                \"operationId\": \"WebHooks_createWebHook\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIWebHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"WebHooks\"\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/APIWebHook\"\n                }\n            }\n        },\n        \"/webhooks/{id}\": {\n            \"get\": {\n                \"operationId\": \"WebHooks_getWebHook\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIWebHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"WebHooks\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"WebHooks_updateWebHook\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIWebHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"WebHooks\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/APIWebHook\"\n                }\n            }\n        },\n        \"/webhooks/{ids}\": {\n            \"delete\": {\n                \"operationId\": \"WebHooks_deleteWebHooks\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"WebHooks\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"\",\n                        \"in\": \"path\",\n                        \"name\": \"ids\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/app-registry\": {\n            \"post\": {\n                \"operationId\": \"Dpk_publish\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIDpk\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Publish an DPK app.\\nSupply the dpk settings in the body request to create the object.\",\n                \"tags\": [\n                    \"dpk\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APIPostDpk\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/app-registry/{id}\": {\n            \"get\": {\n                \"operationId\": \"Dpk_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIDpk\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get an dpk updated object from the db.\",\n                \"tags\": [\n                    \"dpk\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The dpk id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/app-registry/{name}/revisions\": {\n            \"post\": {\n                \"operationId\": \"Dpk_getRevisions\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPIDpk\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get the revisions of dpk by name.\",\n                \"tags\": [\n                    \"dpk\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The dpk id\",\n                        \"in\": \"path\",\n                        \"name\": \"name\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/QueryString\"\n                }\n            }\n        },\n        \"/app-registry/query\": {\n            \"post\": {\n                \"operationId\": \"Dpk_query\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPIDpk\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"\",\n                \"tags\": [\n                    \"dpk\"\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/QueryString\"\n                }\n            }\n        },\n        \"/apps\": {\n            \"post\": {\n                \"operationId\": \"App_install\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIApp\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Install a new app.\\nCreate and install a new app on the platform by given dpk name in the body request.\",\n                \"tags\": [\n                    \"apps\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APIPostApp\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            }\n        },\n        \"/apps/{id}\": {\n            \"put\": {\n                \"operationId\": \"App_update\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIApp\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Update existing app.\\nThe server will save the new app props and refresh all the components belonging to the dpk app\",\n                \"tags\": [\n                    \"apps\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The app id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/APIPatchApp\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                }\n            },\n            \"get\": {\n                \"operationId\": \"App_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIApp\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Get an app updated object from the db.\",\n                \"tags\": [\n                    \"apps\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The app id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"delete\": {\n                \"operationId\": \"App_uninstall\",\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No content\"\n                    }\n                },\n                \"description\": \"Uninstall running application.\\nwill remove all the components belonging to the app\",\n                \"tags\": [\n                    \"apps\"\n                ],\n                \"parameters\": [\n                    {\n                        \"description\": \"The app id\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/settings/resolve\": {\n            \"post\": {\n                \"operationId\": \"Resolve Settings\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"anyOf\": [\n                                            {\n                                                \"$ref\": \"#/components/schemas/APIFeatureFlag\"\n                                            },\n                                            {\n                                                \"$ref\": \"#/components/schemas/APIUserSetting\"\n                                            }\n                                        ]\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Resolves the relevant settings for a specific Context.\\n\\nSupply the specific Context to resolve by\",\n                \"tags\": [\n                    \"Settings\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The context to resolve by\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/IUserContext\",\n                                \"description\": \"The context to resolve by\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/settings/{id}\": {\n            \"get\": {\n                \"operationId\": \"Get Setting\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"anyOf\": [\n                                        {\n                                            \"$ref\": \"#/components/schemas/APIFeatureFlag\"\n                                        },\n                                        {\n                                            \"$ref\": \"#/components/schemas/APIUserSetting\"\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Retrieves the details of a setting.\\n\\nSupply the unique setting ID to fetch it's details.\",\n                \"tags\": [\n                    \"Settings\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Setting to fetch\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            },\n            \"patch\": {\n                \"operationId\": \"Update Setting\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"anyOf\": [\n                                        {\n                                            \"$ref\": \"#/components/schemas/APIFeatureFlag\"\n                                        },\n                                        {\n                                            \"$ref\": \"#/components/schemas/APIUserSetting\"\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Update a setting\\n\\nSupply the unique id of the setting to update and an object describing which fields update\",\n                \"tags\": [\n                    \"Settings\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Setting to update\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"The values to update with\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"anyOf\": [\n                                    {\n                                        \"$ref\": \"#/components/schemas/PatchFeatureFlagRequest\"\n                                    },\n                                    {\n                                        \"$ref\": \"#/components/schemas/PatchUserSettingRequest\"\n                                    }\n                                ],\n                                \"description\": \"The values to update with\"\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"operationId\": \"Delete Setting\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Delete a setting\\n\\nSupply the unique id of the setting to delete\",\n                \"tags\": [\n                    \"Settings\"\n                ],\n                \"security\": [],\n                \"parameters\": [\n                    {\n                        \"description\": \"ID of the Setting to delete\",\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/settings\": {\n            \"post\": {\n                \"operationId\": \"Create Setting\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"anyOf\": [\n                                        {\n                                            \"$ref\": \"#/components/schemas/APIFeatureFlag\"\n                                        },\n                                        {\n                                            \"$ref\": \"#/components/schemas/APIUserSetting\"\n                                        }\n                                    ]\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Creates a new Setting.\\n\\nSupply the appropriate Create Request object for either Feature flag or User setting.\",\n                \"tags\": [\n                    \"Settings\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The setting to create\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/CreateSettingRequest\",\n                                \"description\": \"The setting to create\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/settings/query\": {\n            \"post\": {\n                \"operationId\": \"Query Settings\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/CursorPageAPISetting\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server Error\"\n                    }\n                },\n                \"description\": \"Query settings\\n\\nSupply the query requested to query settings\",\n                \"tags\": [\n                    \"Settings\"\n                ],\n                \"security\": [],\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"description\": \"The query\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/QueryModel\",\n                                \"description\": \"The query\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/ui-status\": {\n            \"get\": {\n                \"operationId\": \"Get OA Version\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Ok\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IVersion\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"description\": \"Retrieves the latest OA versions.\",\n                \"tags\": [\n                    \"Version\"\n                ],\n                \"security\": [],\n                \"parameters\": []\n            }\n        }\n    },\n    \"securityDefinitions\": {},\n    \"openapi\": \"3.0.0\",\n    \"servers\": [\n        {\n            \"url\": \"https://gate.dataloop.ai/api/v1\",\n            \"description\": \"Main Dataloop Gateway\"\n        }\n    ],\n    \"components\": {\n        \"schemas\": {\n            \"UserDetails\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"createdAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"firstname\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastname\": {\n                        \"type\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"avatar\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"Org\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"createdAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"logoUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"plan\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"account\": {\n                        \"type\": \"string\"\n                    },\n                    \"createdBy\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"Contributor\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"createdAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"firstname\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastname\": {\n                        \"type\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"avatar\": {\n                        \"type\": \"string\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"annotator\",\n                            \"engineer\",\n                            \"owner\"\n                        ]\n                    }\n                }\n            },\n            \"ProjectDetails\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"contributors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Contributor\"\n                        }\n                    },\n                    \"createdAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\"\n                    },\n                    \"org\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Org\"\n                        }\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"AccountDetails\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"createdAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"integer\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"org\": {\n                        \"type\": \"string\"\n                    },\n                    \"createdBy\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"Dictionary\": {\n                \"properties\": {},\n                \"additionalProperties\": {},\n                \"type\": \"object\",\n                \"description\": \"\"\n            },\n            \"Error\": {\n                \"properties\": {\n                    \"stack\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"LineData\": {\n                \"properties\": {\n                    \"y\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"x\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    }\n                },\n                \"required\": [\n                    \"y\",\n                    \"x\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MatrixData\": {\n                \"properties\": {\n                    \"matrix\": {\n                        \"items\": {\n                            \"items\": {\n                                \"type\": \"number\",\n                                \"format\": \"double\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"matrix\"\n                ],\n                \"type\": \"object\"\n            },\n            \"SummaryData\": {\n                \"properties\": {\n                    \"summary\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    }\n                },\n                \"required\": [\n                    \"summary\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MetricData\": {\n                \"anyOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/LineData\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/MatrixData\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/SummaryData\"\n                    }\n                ]\n            },\n            \"MetricRequest\": {\n                \"properties\": {\n                    \"modelId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The model the metric was generated on\"\n                    },\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The dataset the metric was generated on\"\n                    },\n                    \"figure\": {\n                        \"type\": \"string\",\n                        \"description\": \"The figure of the metric\"\n                    },\n                    \"legend\": {\n                        \"type\": \"string\",\n                        \"description\": \"The legend of the metric\"\n                    },\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/MetricData\",\n                        \"description\": \"The metric data\"\n                    }\n                },\n                \"required\": [\n                    \"modelId\",\n                    \"figure\",\n                    \"data\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"MetricDataTypes\": {\n                \"enum\": [\n                    \"line\",\n                    \"matrix\",\n                    \"summary\"\n                ],\n                \"type\": \"string\"\n            },\n            \"EntityContext\": {\n                \"properties\": {\n                    \"project\": {\n                        \"type\": \"string\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\"\n                    },\n                    \"org\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"APIMetric\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"modelId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The model the metric was generated on\"\n                    },\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The dataset the metric was generated on\"\n                    },\n                    \"figure\": {\n                        \"type\": \"string\",\n                        \"description\": \"The figure of the metric\"\n                    },\n                    \"legend\": {\n                        \"type\": \"string\",\n                        \"description\": \"The legend of the metric\"\n                    },\n                    \"data\": {\n                        \"$ref\": \"#/components/schemas/MetricData\",\n                        \"description\": \"The metric data\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/MetricDataTypes\"\n                    },\n                    \"context\": {\n                        \"$ref\": \"#/components/schemas/EntityContext\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"modelId\",\n                    \"datasetId\",\n                    \"figure\",\n                    \"data\",\n                    \"type\",\n                    \"context\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"CursorPageAPISetting\": {\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"items\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIMetric\",\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/APIFeatureFlag\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/APIUserSetting\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\",\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"QueryResource\": {\n                \"enum\": [\n                    \"models\",\n                    \"metrics\",\n                    \"executions\",\n                    \"services\",\n                    \"settings\",\n                    \"setting\"\n                ],\n                \"type\": \"string\"\n            },\n            \"ModelOperationTypes\": {\n                \"enum\": [\n                    \"train\",\n                    \"predict\",\n                    \"evaluate\",\n                    \"deploy\"\n                ],\n                \"type\": \"string\"\n            },\n            \"QueryModel\": {\n                \"properties\": {\n                    \"resource\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/QueryResource\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/QueryResource\"\n                            }\n                        ],\n                        \"nullable\": true\n                    },\n                    \"filter\": {\n                        \"nullable\": true\n                    },\n                    \"sort\": {\n                        \"nullable\": true\n                    },\n                    \"page\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"nullable\": true\n                    },\n                    \"pageSize\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"nullable\": true\n                    },\n                    \"type\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelOperationTypes\"\n                            }\n                        ],\n                        \"nullable\": true\n                    }\n                },\n                \"required\": [\n                    \"filter\",\n                    \"filter\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"EntityScopeLevel\": {\n                \"enum\": [\n                    \"private\",\n                    \"project\",\n                    \"org\",\n                    \"public\"\n                ],\n                \"type\": \"string\"\n            },\n            \"ModelStatus\": {\n                \"enum\": [\n                    \"created\",\n                    \"pending\",\n                    \"training\",\n                    \"trained\",\n                    \"deployed\",\n                    \"failed\"\n                ],\n                \"type\": \"string\"\n            },\n            \"APIModelConfiguration\": {\n                \"properties\": {\n                    \"label_to_id_map\": {\n                        \"properties\": {},\n                        \"additionalProperties\": {\n                            \"anyOf\": [\n                                {\n                                    \"type\": \"number\",\n                                    \"format\": \"double\"\n                                },\n                                {\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"ModelInputType\": {\n                \"enum\": [\n                    \"image\",\n                    \"video\",\n                    \"text\",\n                    \"audio\"\n                ],\n                \"type\": \"string\"\n            },\n            \"AnnotationType\": {\n                \"enum\": [\n                    \"class\",\n                    \"point\",\n                    \"line\",\n                    \"box\",\n                    \"cube\",\n                    \"segment\",\n                    \"ellipse\",\n                    \"binary\",\n                    \"note\",\n                    \"polyline\",\n                    \"comparison\",\n                    \"recording\",\n                    \"subtitle\",\n                    \"item_description\",\n                    \"text_mark\",\n                    \"pose\",\n                    \"cube_3d\",\n                    \"semantic_3d\",\n                    \"polyline_3d\",\n                    \"pdf_text\"\n                ],\n                \"type\": \"string\"\n            },\n            \"ArtifactType\": {\n                \"enum\": [\n                    \"item\",\n                    \"local\",\n                    \"link\"\n                ],\n                \"type\": \"string\"\n            },\n            \"ItemArtifact\": {\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/ArtifactType\"\n                    },\n                    \"itemId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"type\",\n                    \"itemId\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"LocalArtifact\": {\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/ArtifactType\"\n                    },\n                    \"localPath\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"type\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"APIModelMetadataSystem\": {\n                \"properties\": {\n                    \"archived\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"ontologyId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"APIModelMetadata\": {\n                \"properties\": {\n                    \"system\": {\n                        \"$ref\": \"#/components/schemas/APIModelMetadataSystem\"\n                    }\n                },\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"APIModel\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The models name\"\n                    },\n                    \"packageId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The model this model is derived from\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"description of the model\\ndefault 'My model'\"\n                    },\n                    \"scope\": {\n                        \"$ref\": \"#/components/schemas/EntityScopeLevel\",\n                        \"description\": \"Field that shows the scope in which the model exists\\ndefault 'private'\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/ModelStatus\",\n                        \"description\": \"the current models status\\ndefault ModelStatus.CREATED\"\n                    },\n                    \"tags\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"description\": \"Tags related to the model\\ndefault []\"\n                    },\n                    \"labels\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"description\": \"Labels related to the model\\ndefault []\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/APIModelConfiguration\",\n                        \"description\": \"The configuration that the model was created with\\ndefault {}\"\n                    },\n                    \"inputType\": {\n                        \"$ref\": \"#/components/schemas/ModelInputType\",\n                        \"description\": \"Model Input Type\\ndefault ModelInputType.IMAGE\"\n                    },\n                    \"outputType\": {\n                        \"$ref\": \"#/components/schemas/AnnotationType\",\n                        \"description\": \"Model Output Type\\ndefault AnnotationType.BOX\"\n                    },\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The datasets id that the model is connected to\"\n                    },\n                    \"artifacts\": {\n                        \"items\": {\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/ItemArtifact\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/LocalArtifact\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\",\n                        \"description\": \"the artifacts of the model\\nan artifact indicates where the model binaries sit\"\n                    },\n                    \"context\": {\n                        \"$ref\": \"#/components/schemas/EntityContext\",\n                        \"description\": \"The context which the model exists in\"\n                    },\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/APIModelMetadata\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"name\",\n                    \"packageId\",\n                    \"description\",\n                    \"scope\",\n                    \"status\",\n                    \"tags\",\n                    \"labels\",\n                    \"configuration\",\n                    \"inputType\",\n                    \"outputType\",\n                    \"context\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"CreateModelRequest\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The models name\"\n                    },\n                    \"packageId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The model this model is derived from\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"description of the model\\ndefault 'My model'\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"the id of the project the model belongs to\"\n                    },\n                    \"scope\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/EntityScopeLevel\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Field that shows the scope in which the model exists\\ndefault 'project'\"\n                    },\n                    \"status\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelStatus\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the current models status\\ndefault ModelStatus.CREATED\"\n                    },\n                    \"tags\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"Tags related to the model\\ndefault []\"\n                    },\n                    \"labels\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"Labels related to the model\"\n                    },\n                    \"configuration\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/APIModelConfiguration\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"The configuration that the model was created with\\ndefault {}\"\n                    },\n                    \"inputType\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelInputType\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Model Input Type\\ndefault ModelInputType.IMAGE\"\n                    },\n                    \"outputType\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/AnnotationType\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Model Output Type\\ndefault AnnotationType.BOX\"\n                    },\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"The datasets id that the model is connected to\"\n                    },\n                    \"artifacts\": {\n                        \"items\": {\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/ItemArtifact\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/LocalArtifact\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"the artifacts of the model\\nan artifact indicates where the model binaries sit\"\n                    },\n                    \"metadata\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/APIModelMetadata\"\n                            }\n                        ],\n                        \"nullable\": true\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"packageId\",\n                    \"projectId\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"PatchModelRequest\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"The models name\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"description of the model\"\n                    },\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"The datasets id that the model is connected to\"\n                    },\n                    \"artifacts\": {\n                        \"items\": {\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/ItemArtifact\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/LocalArtifact\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"the artifacts of the model\\nan artifact indicates where the model binaries sit\"\n                    },\n                    \"scope\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/EntityScopeLevel\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Field that shows the scope in which the model exists\"\n                    },\n                    \"status\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelStatus\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the current models status\"\n                    },\n                    \"tags\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"Tags related to the model\"\n                    },\n                    \"labels\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"Labels related to the model\"\n                    },\n                    \"configuration\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/APIModelConfiguration\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"The configuration that the model was created with\"\n                    },\n                    \"inputType\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelInputType\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Model Input Type\"\n                    },\n                    \"outputType\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/AnnotationType\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Model Output Type\"\n                    },\n                    \"metadata\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/APIModelMetadata\"\n                            }\n                        ],\n                        \"nullable\": true\n                    }\n                },\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"ExecutionStatus\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"created\",\n                    \"in-progress\",\n                    \"failed\",\n                    \"success\",\n                    \"canceled\",\n                    \"rerun\"\n                ]\n            },\n            \"ExecutionStatusReport\": {\n                \"properties\": {\n                    \"timestamp\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/ExecutionStatus\",\n                        \"enum\": [\n                            \"created\",\n                            \"in-progress\",\n                            \"failed\",\n                            \"success\",\n                            \"canceled\",\n                            \"rerun\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"percentComplete\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"error\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"output\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"action\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"required\": [\n                    \"timestamp\",\n                    \"status\",\n                    \"message\",\n                    \"percentComplete\",\n                    \"timestamp\",\n                    \"status\",\n                    \"message\",\n                    \"percentComplete\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"description\": \"\"\n            },\n            \"ExecutionPipelineStateReference\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"nodeId\": {\n                        \"type\": \"string\"\n                    },\n                    \"executionId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"nodeId\",\n                    \"executionId\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"Execution\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\"\n                    },\n                    \"attempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"toTerminate\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"input\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"output\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"feedbackQueue\": {\n                        \"properties\": {\n                            \"routing\": {\n                                \"type\": \"string\"\n                            },\n                            \"exchange\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\n                            \"routing\",\n                            \"exchange\"\n                        ],\n                        \"type\": \"object\"\n                    },\n                    \"status\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ExecutionStatusReport\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"statusLog\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ExecutionStatusReport\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"latestStatus\": {\n                        \"$ref\": \"#/components/schemas/ExecutionStatusReport\"\n                    },\n                    \"duration\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\"\n                    },\n                    \"functionName\": {\n                        \"type\": \"string\"\n                    },\n                    \"serviceId\": {\n                        \"type\": \"string\"\n                    },\n                    \"triggerId\": {\n                        \"type\": \"string\"\n                    },\n                    \"serviceName\": {\n                        \"type\": \"string\"\n                    },\n                    \"packageId\": {\n                        \"type\": \"string\"\n                    },\n                    \"packageName\": {\n                        \"type\": \"string\"\n                    },\n                    \"packageRevision\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"serviceVersion\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"pipeline\": {\n                        \"$ref\": \"#/components/schemas/ExecutionPipelineStateReference\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"creator\",\n                    \"attempts\",\n                    \"maxAttempts\",\n                    \"toTerminate\",\n                    \"input\",\n                    \"feedbackQueue\",\n                    \"status\",\n                    \"statusLog\",\n                    \"latestStatus\",\n                    \"duration\",\n                    \"projectId\",\n                    \"serviceId\",\n                    \"packageId\",\n                    \"packageName\",\n                    \"packageRevision\",\n                    \"serviceVersion\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"APICommand\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"error\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"progress\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"spec\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"report\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"status\",\n                    \"createdAt\",\n                    \"type\",\n                    \"progress\",\n                    \"spec\",\n                    \"id\",\n                    \"url\",\n                    \"status\",\n                    \"createdAt\",\n                    \"type\",\n                    \"progress\",\n                    \"spec\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"description\": \"\"\n            },\n            \"Partial_CreateModelRequest_\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The models name\"\n                    },\n                    \"packageId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The model this model is derived from\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"description of the model\\ndefault 'My model'\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"the id of the project the model belongs to\"\n                    },\n                    \"scope\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/EntityScopeLevel\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Field that shows the scope in which the model exists\\ndefault 'project'\"\n                    },\n                    \"status\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelStatus\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the current models status\\ndefault ModelStatus.CREATED\"\n                    },\n                    \"tags\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"Tags related to the model\\ndefault []\"\n                    },\n                    \"labels\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"Labels related to the model\"\n                    },\n                    \"configuration\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/APIModelConfiguration\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"The configuration that the model was created with\\ndefault {}\"\n                    },\n                    \"inputType\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ModelInputType\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Model Input Type\\ndefault ModelInputType.IMAGE\"\n                    },\n                    \"outputType\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/AnnotationType\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"Model Output Type\\ndefault AnnotationType.BOX\"\n                    },\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"The datasets id that the model is connected to\"\n                    },\n                    \"artifacts\": {\n                        \"items\": {\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/ItemArtifact\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/LocalArtifact\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\",\n                        \"nullable\": true,\n                        \"description\": \"the artifacts of the model\\nan artifact indicates where the model binaries sit\"\n                    },\n                    \"metadata\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/APIModelMetadata\"\n                            }\n                        ],\n                        \"nullable\": true\n                    }\n                },\n                \"type\": \"object\",\n                \"description\": \"Make all properties in T optional\"\n            },\n            \"APICopyEnviromentSpec\": {\n                \"properties\": {\n                    \"cloneModelRequest\": {\n                        \"$ref\": \"#/components/schemas/Partial_CreateModelRequest_\"\n                    },\n                    \"fromDatasetId\": {\n                        \"type\": \"string\"\n                    },\n                    \"fromProjectId\": {\n                        \"type\": \"string\"\n                    },\n                    \"cloneDatasetName\": {\n                        \"type\": \"string\"\n                    },\n                    \"fromDatasetFilter\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"fromArtifactItemId\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"clonedModelId\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"clonedBucketItemId\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"clonedDatasetId\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    }\n                },\n                \"required\": [\n                    \"cloneModelRequest\",\n                    \"fromDatasetId\",\n                    \"fromProjectId\",\n                    \"cloneDatasetName\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"ModelJoinMap\": {\n                \"properties\": {},\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                    \"properties\": {\n                        \"items\": {\n                            \"items\": {},\n                            \"type\": \"array\"\n                        },\n                        \"ids\": {\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                        },\n                        \"modelName\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"items\",\n                        \"ids\",\n                        \"modelName\"\n                    ],\n                    \"type\": \"object\"\n                }\n            },\n            \"ServiceRuntime\": {\n                \"description\": \"\",\n                \"properties\": {},\n                \"type\": \"object\"\n            },\n            \"ServiceVersions\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"dtlpy\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"runner\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"proxy\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"verify\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"Panel\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"role\": {\n                        \"enum\": [\n                            \"owner\",\n                            \"annotator\",\n                            \"engineer\",\n                            \"annotationManager\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"role\"\n                ]\n            },\n            \"IServiceAppConfig\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"isCustomServer\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"APIServiceCompositionElement\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"state\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"status\": {\n                                \"enum\": [\n                                    \"uninstalled\",\n                                    \"installed\",\n                                    \"attached\",\n                                    \"failed\",\n                                    \"pause\",\n                                    \"resume\"\n                                ],\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"serviceId\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"errorMessage\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"errorDate\": {\n                                \"type\": \"string\",\n                                \"format\": \"date-time\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"packageName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"uiHooks\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"shareable\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"packageId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"appId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"packageRevision\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"initParams\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"runtime\": {\n                        \"$ref\": \"#/components/schemas/ServiceRuntime\"\n                    },\n                    \"useUserJwt\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"botUserName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"versions\": {\n                        \"$ref\": \"#/components/schemas/ServiceVersions\"\n                    },\n                    \"moduleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"global\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"active\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"runExecutionAsProcess\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"executionTimeout\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"drainTime\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"onReset\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"driverId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"queueLengthLimit\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"secrets\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"Array of integrations ids - each one will be added to the service deployment as an environment variable\"\n                    },\n                    \"panels\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Panel\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"config\": {\n                        \"$ref\": \"#/components/schemas/IServiceAppConfig\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"system\",\n                            \"regular\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"state\",\n                    \"id\",\n                    \"packageId\",\n                    \"initParams\",\n                    \"runtime\",\n                    \"useUserJwt\",\n                    \"botUserName\",\n                    \"versions\",\n                    \"moduleName\",\n                    \"runExecutionAsProcess\",\n                    \"executionTimeout\",\n                    \"drainTime\",\n                    \"onReset\",\n                    \"name\",\n                    \"projectId\",\n                    \"driverId\",\n                    \"version\",\n                    \"url\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"creator\"\n                ]\n            },\n            \"NodeNamespace\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"projectName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"serviceName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"functionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"moduleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"packageName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"projectName\",\n                    \"serviceName\",\n                    \"functionName\"\n                ]\n            },\n            \"PipelineOperation\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"rootNodeNamespace\": {\n                        \"$ref\": \"#/components/schemas/NodeNamespace\"\n                    },\n                    \"rootNodeProjectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"pipeline\",\n                            \"function\",\n                            \"webhook\",\n                            \"rabbitmq\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"functionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"webHookId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"serviceId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\"\n                ]\n            },\n            \"ICompositionTrigger\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"triggerId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"Event\",\n                            \"Cron\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"spec\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"resource\": {\n                                \"enum\": [\n                                    \"Dataset\",\n                                    \"Item\",\n                                    \"Annotation\",\n                                    \"ItemStatus\",\n                                    \"Task\",\n                                    \"Assignment\",\n                                    \"Model\"\n                                ],\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"actions\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"enum\": [\n                                        \"Created\",\n                                        \"Updated\",\n                                        \"Deleted\",\n                                        \"statusChanged\",\n                                        \"taskAssigned\",\n                                        \"Clone\"\n                                    ],\n                                    \"type\": \"string\"\n                                },\n                                \"description\": \"\"\n                            },\n                            \"executionMode\": {\n                                \"enum\": [\n                                    \"Once\",\n                                    \"Always\"\n                                ],\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"filter\": {\n                                \"type\": \"object\",\n                                \"description\": \"\"\n                            },\n                            \"operation\": {\n                                \"$ref\": \"#/components/schemas/PipelineOperation\"\n                            }\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"projectId\",\n                    \"type\",\n                    \"spec\"\n                ]\n            },\n            \"PartialModule\": {\n                \"description\": \"Make all properties in T optional\",\n                \"properties\": {},\n                \"type\": \"object\"\n            },\n            \"PackageRequirement\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"operator\": {\n                        \"enum\": [\n                            \"==\",\n                            \"\u003e\",\n                            \"\u003c\",\n                            \"\u003c=\",\n                            \"\u003e=\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\"\n                ]\n            },\n            \"Codebase\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"item\",\n                            \"git\",\n                            \"filesystem\",\n                            \"local\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\"\n                ]\n            },\n            \"ICompositionPackage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"packageId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"codebaseId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"entryFile\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"code\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"module\": {\n                        \"$ref\": \"#/components/schemas/PartialModule\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"codebase\",\n                            \"code\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"requirements\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PackageRequirement\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"codebase\": {\n                        \"$ref\": \"#/components/schemas/Codebase\"\n                    },\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"module\",\n                    \"name\"\n                ]\n            },\n            \"TaskWorkload\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"assigneeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"load\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"assigneeId\",\n                    \"load\"\n                ]\n            },\n            \"ItemAction\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"action\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"color\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"icon\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"action\",\n                    \"color\",\n                    \"displayName\"\n                ]\n            },\n            \"ICompositionTask\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"taskOwner\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"recipeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"dueDate\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"state\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"status\": {\n                                \"enum\": [\n                                    \"open\",\n                                    \"dismissed\",\n                                    \"completed\",\n                                    \"completed with issues\",\n                                    \"in progress\"\n                                ],\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"taskId\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"workload\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/TaskWorkload\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"availableActions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ItemAction\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"taskType\": {\n                        \"enum\": [\n                            \"annotation\",\n                            \"qa\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"datasetId\",\n                    \"taskOwner\",\n                    \"recipeId\",\n                    \"name\",\n                    \"dueDate\",\n                    \"state\",\n                    \"metadata\",\n                    \"nodeId\",\n                    \"taskType\"\n                ]\n            },\n            \"APIComposition\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"orgId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"spec\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIServiceCompositionElement\"\n                        },\n                        \"description\": \"Array of services details\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"Created\",\n                            \"Initializing\",\n                            \"Installed\",\n                            \"Activated\",\n                            \"Deactivated\",\n                            \"Uninstalled\",\n                            \"Terminating\",\n                            \"Terminated\",\n                            \"Updating\",\n                            \"Failure\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"terminated\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"errorText\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"triggers\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ICompositionTrigger\"\n                        },\n                        \"description\": \"Array of services details\"\n                    },\n                    \"packages\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ICompositionPackage\"\n                        },\n                        \"description\": \"Array of packages details\"\n                    },\n                    \"tasks\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ICompositionTask\"\n                        },\n                        \"description\": \"Array of tasks details\"\n                    },\n                    \"secrets\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"Array of integrations ids - each one will be added to the service deployment as an environment variable\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"name\",\n                    \"creator\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"projectId\",\n                    \"orgId\",\n                    \"spec\",\n                    \"status\",\n                    \"terminated\"\n                ]\n            },\n            \"IPostComposition\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The composition name\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The project where the composition should be install the entities\"\n                    },\n                    \"triggers\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ICompositionTrigger\"\n                        },\n                        \"description\": \"An array of triggers\"\n                    },\n                    \"packages\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ICompositionPackage\"\n                        },\n                        \"description\": \"An array of packages\"\n                    },\n                    \"tasks\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ICompositionTask\"\n                        },\n                        \"description\": \"An array of tasks\"\n                    },\n                    \"spec\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIServiceCompositionElement\"\n                        },\n                        \"description\": \"An array of services\"\n                    },\n                    \"driverId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The user cluster driver id - defining the compute cluster the server should connect to\"\n                    },\n                    \"secrets\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"The vault secrets\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"projectId\",\n                    \"spec\",\n                    \"driverId\"\n                ]\n            },\n            \"CursorPageAPIComposition\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIComposition\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"INodeConfig\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"package\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"type\": {\n                                \"enum\": [\n                                    \"codebase\",\n                                    \"code\"\n                                ],\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"entryFile\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"code\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"requirements\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/PackageRequirement\"\n                                },\n                                \"description\": \"\"\n                            },\n                            \"requirementsFilename\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"codebase\": {\n                                \"$ref\": \"#/components/schemas/Codebase\"\n                            },\n                            \"codebaseFilename\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"IODescriptor\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"Dataset\",\n                            \"Item\",\n                            \"Annotation\",\n                            \"Execution\",\n                            \"Task\",\n                            \"Assignment\",\n                            \"Service\",\n                            \"Package\",\n                            \"Project\",\n                            \"Json\",\n                            \"String\",\n                            \"Number\",\n                            \"Integer\",\n                            \"Float\",\n                            \"Boolean\",\n                            \"Model\",\n                            \"Recipe\",\n                            \"Snapshot\",\n                            \"Dataset[]\",\n                            \"Item[]\",\n                            \"Annotation[]\",\n                            \"Execution[]\",\n                            \"Task[]\",\n                            \"Assignment[]\",\n                            \"Service[]\",\n                            \"Package[]\",\n                            \"Project[]\",\n                            \"Json[]\",\n                            \"String[]\",\n                            \"Number[]\",\n                            \"Integer[]\",\n                            \"Float[]\",\n                            \"Boolean[]\",\n                            \"Model[]\",\n                            \"Recipe[]\",\n                            \"Snapshot[]\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"portId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"color\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"actionIcon\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"action\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"portPercentage\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"defaultValue\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"name\",\n                    \"portId\"\n                ]\n            },\n            \"INodeInfo\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"counts\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"pending\": {\n                                \"type\": \"number\",\n                                \"format\": \"double\",\n                                \"description\": \"\"\n                            },\n                            \"inProgress\": {\n                                \"type\": \"number\",\n                                \"format\": \"double\",\n                                \"description\": \"\"\n                            },\n                            \"failed\": {\n                                \"type\": \"number\",\n                                \"format\": \"double\",\n                                \"description\": \"\"\n                            },\n                            \"success\": {\n                                \"type\": \"number\",\n                                \"format\": \"double\",\n                                \"description\": \"\"\n                            },\n                            \"queue\": {\n                                \"type\": \"number\",\n                                \"format\": \"double\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"stats\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"avgMs\": {\n                                \"type\": \"number\",\n                                \"format\": \"double\",\n                                \"description\": \"\"\n                            },\n                            \"avgPerDay\": {\n                                \"type\": \"number\",\n                                \"format\": \"double\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"pending\",\n                            \"in-progress\",\n                            \"failed\",\n                            \"success\",\n                            \"queue\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"counts\"\n                ]\n            },\n            \"PipelineNodeDescriptor\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"config\": {\n                        \"$ref\": \"#/components/schemas/INodeConfig\"\n                    },\n                    \"namespace\": {\n                        \"$ref\": \"#/components/schemas/NodeNamespace\"\n                    },\n                    \"inputs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IODescriptor\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"outputs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IODescriptor\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"code\",\n                            \"function\",\n                            \"task\",\n                            \"merge\",\n                            \"split\",\n                            \"ml\",\n                            \"storage\",\n                            \"api\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"info\": {\n                        \"$ref\": \"#/components/schemas/INodeInfo\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"metadata\",\n                    \"id\",\n                    \"namespace\",\n                    \"inputs\",\n                    \"outputs\",\n                    \"type\",\n                    \"name\"\n                ]\n            },\n            \"PipelineNodeSource\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"portId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"nodeId\",\n                    \"portId\"\n                ]\n            },\n            \"PipelineNodeTarget\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"portId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"nodeId\",\n                    \"portId\"\n                ]\n            },\n            \"PipelineConnection\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"src\": {\n                        \"$ref\": \"#/components/schemas/PipelineNodeSource\"\n                    },\n                    \"tgt\": {\n                        \"$ref\": \"#/components/schemas/PipelineNodeTarget\"\n                    },\n                    \"condition\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"src\",\n                    \"tgt\"\n                ]\n            },\n            \"IStartNodeTrigger\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"Event\",\n                            \"Cron\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"spec\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"resource\": {\n                                \"enum\": [\n                                    \"Dataset\",\n                                    \"Item\",\n                                    \"Annotation\",\n                                    \"ItemStatus\",\n                                    \"Task\",\n                                    \"Assignment\",\n                                    \"Model\"\n                                ],\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"actions\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"enum\": [\n                                        \"Created\",\n                                        \"Updated\",\n                                        \"Deleted\",\n                                        \"statusChanged\",\n                                        \"taskAssigned\",\n                                        \"Clone\"\n                                    ],\n                                    \"type\": \"string\"\n                                },\n                                \"description\": \"\"\n                            },\n                            \"executionMode\": {\n                                \"enum\": [\n                                    \"Once\",\n                                    \"Always\"\n                                ],\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"filter\": {\n                                \"$ref\": \"#/components/schemas/Dictionary\"\n                            }\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"spec\"\n                ]\n            },\n            \"IStartNode\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"root\",\n                            \"trigger\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"trigger\": {\n                        \"$ref\": \"#/components/schemas/IStartNodeTrigger\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"nodeId\",\n                    \"type\"\n                ]\n            },\n            \"APIPipeline\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"orgId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"compositionId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"nodes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PipelineNodeDescriptor\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"connections\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PipelineConnection\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"preview\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"startNodes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IStartNode\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"name\",\n                    \"creator\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"projectId\",\n                    \"orgId\",\n                    \"nodes\",\n                    \"connections\",\n                    \"description\",\n                    \"preview\"\n                ]\n            },\n            \"IPostPipeline\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"startNodes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IStartNode\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"spec\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"compositionId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"preview\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"nodes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PipelineNodeDescriptor\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"connections\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PipelineConnection\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"secrets\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"projectId\",\n                    \"description\",\n                    \"preview\",\n                    \"nodes\",\n                    \"connections\",\n                    \"secrets\"\n                ]\n            },\n            \"IPipelineExecutionCount\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"status\": {\n                        \"enum\": [\n                            \"pending\",\n                            \"in-progress\",\n                            \"failed\",\n                            \"success\",\n                            \"queue\",\n                            \"terminated\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"count\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"status\",\n                    \"count\"\n                ]\n            },\n            \"IExecutionCount\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"status\": {\n                        \"enum\": [\n                            \"created\",\n                            \"in-progress\",\n                            \"failed\",\n                            \"success\",\n                            \"canceled\",\n                            \"rerun\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"count\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"status\",\n                    \"count\"\n                ]\n            },\n            \"INodeExecutionCount\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"statusCount\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IExecutionCount\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"nodeId\",\n                    \"statusCount\"\n                ]\n            },\n            \"IExecutionStatistics\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"avgTimePerExecution\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"avgExecutionsPerDay\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"avgTimePerExecution\",\n                    \"avgExecutionsPerDay\"\n                ]\n            },\n            \"INodeExecutionStatistics\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"executionStatistics\": {\n                        \"$ref\": \"#/components/schemas/IExecutionStatistics\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"nodeId\",\n                    \"executionStatistics\"\n                ]\n            },\n            \"IPipelineStatistics\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"pipelineExecutionCounters\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IPipelineExecutionCount\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"nodeExecutionsCounters\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/INodeExecutionCount\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"pipelineExecutionStatistics\": {\n                        \"$ref\": \"#/components/schemas/IExecutionStatistics\"\n                    },\n                    \"nodeExecutionStatistics\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/INodeExecutionStatistics\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"pipelineExecutionCounters\",\n                    \"nodeExecutionsCounters\"\n                ]\n            },\n            \"APIExecuteOptionsBatch\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"query\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"resource\": {\n                        \"enum\": [\n                            \"QueryResource\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"args\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"payload\": {\n                        \"enum\": [\n                            \"{ datasetId: string }\",\n                            \"{ itemId: string }\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"query\",\n                    \"resource\",\n                    \"payload\"\n                ]\n            },\n            \"APIPipelineExecuteOptions\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"pipeline\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"nodeId\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"input\": {\n                                \"type\": \"object\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"batch\": {\n                        \"$ref\": \"#/components/schemas/APIExecuteOptionsBatch\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"batch\"\n                ]\n            },\n            \"NodeDescriptor\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"config\": {\n                        \"$ref\": \"#/components/schemas/INodeConfig\"\n                    },\n                    \"namespace\": {\n                        \"$ref\": \"#/components/schemas/NodeNamespace\"\n                    },\n                    \"inputs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IODescriptor\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"outputs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IODescriptor\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"code\",\n                            \"function\",\n                            \"task\",\n                            \"merge\",\n                            \"split\",\n                            \"ml\",\n                            \"storage\",\n                            \"api\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"info\": {\n                        \"$ref\": \"#/components/schemas/INodeInfo\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"namespace\",\n                    \"inputs\",\n                    \"outputs\",\n                    \"type\",\n                    \"name\"\n                ]\n            },\n            \"CompositionStatusDescriptor\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"running\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"failed\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"pending\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"standBy\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"running\",\n                    \"failed\",\n                    \"pending\",\n                    \"standBy\"\n                ]\n            },\n            \"CursorPageAPIPipeline\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIPipeline\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"ExecutionIO\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"Dataset\",\n                            \"Item\",\n                            \"Annotation\",\n                            \"Execution\",\n                            \"Task\",\n                            \"Assignment\",\n                            \"Service\",\n                            \"Package\",\n                            \"Project\",\n                            \"Json\",\n                            \"String\",\n                            \"Number\",\n                            \"Integer\",\n                            \"Float\",\n                            \"Boolean\",\n                            \"Model\",\n                            \"Recipe\",\n                            \"Snapshot\",\n                            \"Dataset[]\",\n                            \"Item[]\",\n                            \"Annotation[]\",\n                            \"Execution[]\",\n                            \"Task[]\",\n                            \"Assignment[]\",\n                            \"Service[]\",\n                            \"Package[]\",\n                            \"Project[]\",\n                            \"Json[]\",\n                            \"String[]\",\n                            \"Number[]\",\n                            \"Integer[]\",\n                            \"Float[]\",\n                            \"Boolean[]\",\n                            \"Model[]\",\n                            \"Recipe[]\",\n                            \"Snapshot[]\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"portId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"value\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"name\",\n                    \"portId\"\n                ]\n            },\n            \"IPipelineNodeState\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"namespace\": {\n                        \"$ref\": \"#/components/schemas/NodeNamespace\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"pending\",\n                            \"in-progress\",\n                            \"failed\",\n                            \"success\",\n                            \"queue\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"ports\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ExecutionIO\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"serviceId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"code\",\n                            \"function\",\n                            \"task\",\n                            \"merge\",\n                            \"split\",\n                            \"ml\",\n                            \"storage\",\n                            \"api\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"id\",\n                    \"namespace\",\n                    \"status\",\n                    \"ports\",\n                    \"serviceId\",\n                    \"metadata\",\n                    \"projectId\",\n                    \"name\",\n                    \"type\"\n                ]\n            },\n            \"INodeTransitionError\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"sourceNodeName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"sourceNodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"targetNodeName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"targetNodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"error\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"displayMessage\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"sourceNodeName\",\n                    \"sourceNodeId\",\n                    \"targetNodeName\",\n                    \"targetNodeId\",\n                    \"error\",\n                    \"displayMessage\"\n                ]\n            },\n            \"APIPipelineState\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"pipelineId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"executions\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"nodes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IPipelineNodeState\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"pending\",\n                            \"in-progress\",\n                            \"failed\",\n                            \"success\",\n                            \"queue\",\n                            \"terminated\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"transitionErrors\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/INodeTransitionError\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"pipelineId\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"executions\",\n                    \"nodes\",\n                    \"status\",\n                    \"maxAttempts\"\n                ]\n            },\n            \"CursorPageAPIPipelineState\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIPipelineState\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"ServiceLogEntry\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"timestamp\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"replicaId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"executionId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"functionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"level\": {\n                        \"enum\": [\n                            \"CRITICAL\",\n                            \"ERROR\",\n                            \"WARNING\",\n                            \"INFO\",\n                            \"DEBUG\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"message\",\n                    \"timestamp\",\n                    \"replicaId\"\n                ]\n            },\n            \"ExecutionLogs\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"inputs\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"output\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"functionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"logs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ServiceLogEntry\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"stop\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"checkpoint\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"inputs\",\n                    \"output\",\n                    \"functionName\",\n                    \"logs\",\n                    \"stop\"\n                ]\n            },\n            \"PipelineExecutionLogs\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"executions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ExecutionLogs\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"nodeId\",\n                    \"executions\"\n                ]\n            },\n            \"LogQuery\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"serviceId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"follow\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"size\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"checkpoint\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"direction\": {\n                        \"enum\": [\n                            \"asc\",\n                            \"desc\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"start\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"end\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"executionId\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"functionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"replicaId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"text\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"logLevel\": {\n                        \"enum\": [\n                            \"CRITICAL\",\n                            \"ERROR\",\n                            \"WARNING\",\n                            \"INFO\",\n                            \"DEBUG\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"pipelineId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"pipelineExecutionId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"system\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"QueryString\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"resource\": {\n                        \"enum\": [\n                            \"triggers\",\n                            \"executions\",\n                            \"services\",\n                            \"packages\",\n                            \"annotations\",\n                            \"items\",\n                            \"labels\",\n                            \"tasks\",\n                            \"datasets\",\n                            \"assignments\",\n                            \"directory\",\n                            \"pipeline\",\n                            \"pipelineState\",\n                            \"pipelineTemplate\",\n                            \"composition\",\n                            \"resourceExecution\",\n                            \"apps\",\n                            \"dpks\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"filter\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"sort\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"page\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"pageSize\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"resource\",\n                    \"filter\",\n                    \"sort\",\n                    \"page\",\n                    \"pageSize\"\n                ]\n            },\n            \"CursorPageAPIPipelineTemplate\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIPipeline\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"APITemplateQuery\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"global\": {\n                        \"$ref\": \"#/components/schemas/CursorPageAPIPipelineTemplate\"\n                    },\n                    \"project\": {\n                        \"$ref\": \"#/components/schemas/CursorPageAPIPipelineTemplate\"\n                    },\n                    \"org\": {\n                        \"$ref\": \"#/components/schemas/CursorPageAPIPipelineTemplate\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"global\",\n                    \"project\",\n                    \"org\"\n                ]\n            },\n            \"QueryStringTemplate\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"filter\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"sort\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"page\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"pageSize\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"filter\",\n                    \"sort\",\n                    \"page\",\n                    \"pageSize\"\n                ]\n            },\n            \"TemplateQuery\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"project\": {\n                        \"$ref\": \"#/components/schemas/QueryStringTemplate\"\n                    },\n                    \"org\": {\n                        \"$ref\": \"#/components/schemas/QueryStringTemplate\"\n                    },\n                    \"global\": {\n                        \"$ref\": \"#/components/schemas/QueryStringTemplate\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"project\",\n                    \"org\",\n                    \"global\"\n                ]\n            },\n            \"CursorPageT\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"enum\": [\n                            \"APIComposition[]\",\n                            \"APIPipeline[]\",\n                            \"APIPipelineState[]\",\n                            \"ResourceExecution[]\",\n                            \"APIDpk[]\",\n                            \"APIApp[]\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"APITrigger\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"Event\",\n                            \"Cron\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"active\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"id\",\n                    \"url\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"creator\",\n                    \"name\",\n                    \"projectId\",\n                    \"active\"\n                ]\n            },\n            \"TriggersPage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APITrigger\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"CreateTriggerRequest\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"Event\",\n                            \"Cron\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"active\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"name\",\n                    \"projectId\",\n                    \"active\"\n                ]\n            },\n            \"TriggerResourceInformationItem\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"serviceId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"serviceName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"triggerId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"triggerActions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"packageModuleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"packageFunctionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"packageFunctionDescription\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"serviceId\",\n                    \"serviceName\",\n                    \"triggerId\",\n                    \"triggerActions\",\n                    \"packageModuleName\",\n                    \"packageFunctionName\",\n                    \"packageFunctionDescription\"\n                ]\n            },\n            \"TriggerResourceInformationPage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/TriggerResourceInformationItem\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"TriggerResourceInformationQuery\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"resource\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"entity\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"action\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"resource\",\n                    \"entity\",\n                    \"action\"\n                ]\n            },\n            \"ICacheRunner\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"redisHost\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"numReplicas\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"podType\": {\n                        \"enum\": [\n                            \"small\",\n                            \"medium\",\n                            \"large\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"minReplica\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"maxReplica\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"redisHost\",\n                    \"numReplicas\",\n                    \"podType\",\n                    \"minReplica\",\n                    \"maxReplica\"\n                ]\n            },\n            \"ICacheOptions\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"org\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"id\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"driverId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"runner\": {\n                        \"$ref\": \"#/components/schemas/ICacheRunner\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"org\"\n                ]\n            },\n            \"APIService\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"packageId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"appId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"packageRevision\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"initParams\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"runtime\": {\n                        \"$ref\": \"#/components/schemas/ServiceRuntime\"\n                    },\n                    \"useUserJwt\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"botUserName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"versions\": {\n                        \"$ref\": \"#/components/schemas/ServiceVersions\"\n                    },\n                    \"moduleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"global\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"active\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"runExecutionAsProcess\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"executionTimeout\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"drainTime\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"onReset\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"driverId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"queueLengthLimit\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"secrets\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"Array of integrations ids - each one will be added to the service deployment as an environment variable\"\n                    },\n                    \"panels\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Panel\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"config\": {\n                        \"$ref\": \"#/components/schemas/IServiceAppConfig\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"system\",\n                            \"regular\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"packageId\",\n                    \"initParams\",\n                    \"runtime\",\n                    \"useUserJwt\",\n                    \"botUserName\",\n                    \"versions\",\n                    \"moduleName\",\n                    \"runExecutionAsProcess\",\n                    \"executionTimeout\",\n                    \"drainTime\",\n                    \"onReset\",\n                    \"name\",\n                    \"projectId\",\n                    \"driverId\",\n                    \"id\",\n                    \"version\",\n                    \"url\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"creator\"\n                ]\n            },\n            \"ServicesPage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIService\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"APIServicePatch\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"packageRevision\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"initParams\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"runtime\": {\n                        \"$ref\": \"#/components/schemas/ServiceRuntime\"\n                    },\n                    \"useUserJwt\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"versions\": {\n                        \"$ref\": \"#/components/schemas/ServiceVersions\"\n                    },\n                    \"moduleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"global\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"active\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"runExecutionAsProcess\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"executionTimeout\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"drainTime\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"onReset\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"queueLengthLimit\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"botUserName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"driverId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"secrets\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"Array of integrations ids - each one will be added to the service deployment as an environment variable\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"system\",\n                            \"regular\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ServiceLogsPage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"logs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ServiceLogEntry\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"stop\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"checkpoint\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"logs\",\n                    \"stop\"\n                ]\n            },\n            \"APIReplicaStatusUpdate\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"replicaId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"down\",\n                            \"initializing\",\n                            \"running\",\n                            \"full\",\n                            \"terminating\",\n                            \"failed\",\n                            \"paused\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"numRestarts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"uptime\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"replicaId\",\n                    \"status\",\n                    \"numRestarts\",\n                    \"uptime\"\n                ]\n            },\n            \"DeploymentStatus\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"lastTransitionTime\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"lastUpdateTime\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"reason\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"lastTransitionTime\",\n                    \"lastUpdateTime\",\n                    \"message\",\n                    \"reason\",\n                    \"status\",\n                    \"type\"\n                ]\n            },\n            \"ServiceRuntimeStatus\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"replicaId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"reason\": {\n                        \"enum\": [\n                            \"ContainerCreating\",\n                            \"CrashLoopBackOff\",\n                            \"ErrImagePull\",\n                            \"ImagePullBackOff\",\n                            \"CreateContainerConfigError\",\n                            \"InvalidImageName\",\n                            \"CreateContainerError\",\n                            \"Unschedulable\",\n                            \"OOMKilled\",\n                            \"Error\",\n                            \"Completed\",\n                            \"ContainerCannotRun\",\n                            \"DeadlineExceeded\",\n                            \"NodeLost\",\n                            \"Evicted\",\n                            \"UnexpectedAdmissionError\",\n                            \"NodeAffinity\",\n                            \"Shutdown\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"restartCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"replicaId\",\n                    \"status\"\n                ]\n            },\n            \"APIServiceStatus\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"replicaStatus\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIReplicaStatusUpdate\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"numMessagesInQueue\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"deploymentStatus\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DeploymentStatus\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"runtimeStatus\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ServiceRuntimeStatus\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"replicaStatus\",\n                    \"numMessagesInQueue\",\n                    \"deploymentStatus\",\n                    \"runtimeStatus\"\n                ]\n            },\n            \"FunctionIO\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"Dataset\",\n                            \"Item\",\n                            \"Annotation\",\n                            \"Execution\",\n                            \"Task\",\n                            \"Assignment\",\n                            \"Service\",\n                            \"Package\",\n                            \"Project\",\n                            \"Json\",\n                            \"String\",\n                            \"Number\",\n                            \"Integer\",\n                            \"Float\",\n                            \"Boolean\",\n                            \"Model\",\n                            \"Recipe\",\n                            \"Snapshot\",\n                            \"Dataset[]\",\n                            \"Item[]\",\n                            \"Annotation[]\",\n                            \"Execution[]\",\n                            \"Task[]\",\n                            \"Assignment[]\",\n                            \"Service[]\",\n                            \"Package[]\",\n                            \"Project[]\",\n                            \"Json[]\",\n                            \"String[]\",\n                            \"Number[]\",\n                            \"Integer[]\",\n                            \"Float[]\",\n                            \"Boolean[]\",\n                            \"Model[]\",\n                            \"Recipe[]\",\n                            \"Snapshot[]\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"value\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"name\"\n                ]\n            },\n            \"Function\": {\n                \"description\": \"Creates a new function.\",\n                \"properties\": {\n                    \"prototype\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"length\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"arguments\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"caller\": {\n                        \"$ref\": \"#/components/schemas/Function\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"prototype\",\n                    \"length\",\n                    \"arguments\",\n                    \"caller\"\n                ]\n            },\n            \"Module\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"entryPoint\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"className\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"initInputs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionIO\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"functions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Function\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"entryPoint\",\n                    \"initInputs\",\n                    \"functions\"\n                ]\n            },\n            \"UiHook\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"bindTo\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"config\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"icon\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"slots\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"bindTo\",\n                    \"config\",\n                    \"icon\",\n                    \"slots\"\n                ]\n            },\n            \"DisplayScope\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"resource\": {\n                        \"enum\": [\n                            \"annotation\",\n                            \"item\",\n                            \"dataset\",\n                            \"datasetQuery\",\n                            \"project\",\n                            \"task\",\n                            \"assignment\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"panel\": {\n                        \"enum\": [\n                            \"browser\",\n                            \"studio\",\n                            \"table\",\n                            \"all\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"resource\",\n                    \"filter\"\n                ]\n            },\n            \"ExecutionPostAction\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"download\",\n                            \"drawAnnotation\",\n                            \"noAction\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\"\n                ]\n            },\n            \"DLFunctionDefaultInputSpec\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"value\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"value\"\n                ]\n            },\n            \"DLFunctionInputOptionsSpec\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"values\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"values\"\n                ]\n            },\n            \"UiSlot\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"moduleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"functionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"displayScopes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DisplayScope\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"postAction\": {\n                        \"$ref\": \"#/components/schemas/ExecutionPostAction\"\n                    },\n                    \"displayIcon\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"defaultInputs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DLFunctionDefaultInputSpec\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"inputOptions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DLFunctionInputOptionsSpec\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"moduleName\",\n                    \"functionName\",\n                    \"displayName\",\n                    \"displayScopes\",\n                    \"postAction\"\n                ]\n            },\n            \"ServiceConfig\": {\n                \"description\": \"Service Configuration\",\n                \"properties\": {\n                    \"initParams\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"runtime\": {\n                        \"$ref\": \"#/components/schemas/ServiceRuntime\"\n                    },\n                    \"useUserJwt\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"botUserName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"versions\": {\n                        \"$ref\": \"#/components/schemas/ServiceVersions\"\n                    },\n                    \"moduleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"global\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"active\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"runExecutionAsProcess\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"executionTimeout\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"onReset\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"PackageMetadata\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"user\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"system\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"APIPackage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"global\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"codebase\": {\n                        \"$ref\": \"#/components/schemas/Codebase\"\n                    },\n                    \"modules\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Module\"\n                        },\n                        \"description\": \"List of modules PackageModules of the package\"\n                    },\n                    \"uiHooks\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/UiHook\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"slots\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/UiSlot\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"serviceConfig\": {\n                        \"$ref\": \"#/components/schemas/ServiceConfig\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"app\",\n                            \"faas\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"requirements\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PackageRequirement\"\n                        },\n                        \"description\": \"The Requirement list (list of packages your code requires to run).\"\n                    },\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/PackageMetadata\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"version\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"creator\",\n                    \"name\",\n                    \"global\",\n                    \"projectId\",\n                    \"codebase\",\n                    \"modules\",\n                    \"type\"\n                ]\n            },\n            \"PackagesPage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIPackage\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"IPipelineExecution\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"executionId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"nodeId\",\n                    \"executionId\"\n                ]\n            },\n            \"ItemStatusEvent\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"pipelineId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"nodeId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"taskId\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"assignmentId\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"status\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"creator\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"timestamp\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"action\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"pipelineId\",\n                    \"nodeId\",\n                    \"status\",\n                    \"action\"\n                ]\n            },\n            \"ExecutionEventContext\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"resource\": {\n                        \"enum\": [\n                            \"items\",\n                            \"annotations\",\n                            \"datasets\",\n                            \"executions\",\n                            \"items.status\",\n                            \"tasks\",\n                            \"assignments\",\n                            \"recipes\",\n                            \"ontologies\",\n                            \"snapshots\",\n                            \"packages\",\n                            \"compositions\",\n                            \"pipelines\",\n                            \"pipeline.run\",\n                            \"services\",\n                            \"triggers\",\n                            \"models\",\n                            \"projects\",\n                            \"users\",\n                            \"groups\",\n                            \"trigger_cmds\",\n                            \"orgs\",\n                            \"projectGuests\",\n                            \"integrations\",\n                            \"apps\",\n                            \"dpk\",\n                            \"billingResources\",\n                            \"subscriptions\",\n                            \"accounts\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"source\": {\n                        \"enum\": [\n                            \"ui\",\n                            \"sdk\",\n                            \"other\",\n                            \"system\",\n                            \"unknown\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"action\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"resourceId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"userId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"body\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"itemStatusEvent\": {\n                        \"$ref\": \"#/components/schemas/ItemStatusEvent\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"APIExecution\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"attempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"toTerminate\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"input\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"output\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"feedbackQueue\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"exchange\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"routing\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"status\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ExecutionStatusReport\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"statusLog\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ExecutionStatusReport\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"latestStatus\": {\n                        \"$ref\": \"#/components/schemas/ExecutionStatusReport\"\n                    },\n                    \"duration\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"functionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"serviceId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"triggerId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"serviceName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The service name where the execution was executed\"\n                    },\n                    \"moduleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The module containing the function code\"\n                    },\n                    \"packageId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"packageName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"packageRevision\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"serviceVersion\": {\n                        \"type\": \"object\",\n                        \"description\": \"\"\n                    },\n                    \"pipeline\": {\n                        \"$ref\": \"#/components/schemas/IPipelineExecution\"\n                    },\n                    \"syncReplyTo\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"exchange\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            },\n                            \"route\": {\n                                \"type\": \"string\",\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"Used when running execution in sync mode\"\n                    },\n                    \"eventContext\": {\n                        \"$ref\": \"#/components/schemas/ExecutionEventContext\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"creator\",\n                    \"attempts\",\n                    \"maxAttempts\",\n                    \"toTerminate\",\n                    \"input\",\n                    \"feedbackQueue\",\n                    \"status\",\n                    \"statusLog\",\n                    \"latestStatus\",\n                    \"duration\",\n                    \"projectId\",\n                    \"serviceId\",\n                    \"packageId\",\n                    \"packageName\",\n                    \"packageRevision\",\n                    \"serviceVersion\",\n                    \"syncReplyTo\"\n                ]\n            },\n            \"ExecutionsPage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIExecution\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"APIExecutionPatch\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"duration\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"serviceVersion\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ActivitiesDescriptor_\": {\n                \"description\": \"\",\n                \"properties\": {},\n                \"type\": \"object\",\n                \"additionalProperties\": {}\n            },\n            \"APIWebHook\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"project\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"httpMethod\": {\n                        \"enum\": [\n                            \"GET\",\n                            \"POST\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"hookUrl\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"url\",\n                    \"project\",\n                    \"creator\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"name\",\n                    \"httpMethod\",\n                    \"hookUrl\"\n                ]\n            },\n            \"WebHooksPage\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIWebHook\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"IDpkComponentPanel\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"minRole\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"supportedSlots\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"type\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"\"\n                                },\n                                \"id\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"\"\n                                },\n                                \"configuration\": {\n                                    \"$ref\": \"#/components/schemas/Dictionary\"\n                                }\n                            }\n                        },\n                        \"description\": \"\"\n                    },\n                    \"icon\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"defaultSettings\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"minRole\",\n                    \"supportedSlots\",\n                    \"icon\",\n                    \"metadata\"\n                ]\n            },\n            \"IDpkComponentModel\": {\n                \"description\": \"\",\n                \"properties\": {},\n                \"type\": \"object\"\n            },\n            \"IDpkComponentModule\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"version\": {\n                        \"$ref\": \"#/components/schemas/ServiceVersions\"\n                    },\n                    \"config\": {\n                        \"$ref\": \"#/components/schemas/IServiceAppConfig\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"entryPoint\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"className\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"initInputs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionIO\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"functions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Function\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"version\",\n                    \"name\",\n                    \"entryPoint\",\n                    \"initInputs\",\n                    \"functions\"\n                ]\n            },\n            \"IDpkComponentTrigger\": {\n                \"description\": \"\",\n                \"properties\": {},\n                \"type\": \"object\"\n            },\n            \"IDpkComponentService\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"runtime\": {\n                        \"$ref\": \"#/components/schemas/ServiceRuntime\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"initParams\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"moduleName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"botUserName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"initParams\",\n                    \"moduleName\",\n                    \"botUserName\",\n                    \"maxAttempts\"\n                ]\n            },\n            \"IDpkComponentHooks\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"htmlTag\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"location\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"emit\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"htmlTag\",\n                    \"location\",\n                    \"displayName\",\n                    \"description\",\n                    \"emit\"\n                ]\n            },\n            \"APIDpk\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"categories\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"icon\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"tags\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"codebase\": {\n                        \"$ref\": \"#/components/schemas/Codebase\"\n                    },\n                    \"trusted\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"scope\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"components\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"panels\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentPanel\"\n                                },\n                                \"description\": \"\"\n                            },\n                            \"models\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentModel\"\n                                },\n                                \"description\": \"\"\n                            },\n                            \"modules\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentModule\"\n                                },\n                                \"description\": \"\"\n                            },\n                            \"triggers\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentTrigger\"\n                                },\n                                \"description\": \"\"\n                            },\n                            \"services\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentService\"\n                                },\n                                \"description\": \"\"\n                            },\n                            \"hooks\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentHooks\"\n                                },\n                                \"description\": \"\"\n                            }\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"url\",\n                    \"version\",\n                    \"updatedAt\",\n                    \"createdAt\",\n                    \"creator\",\n                    \"displayName\",\n                    \"description\",\n                    \"icon\",\n                    \"tags\",\n                    \"codebase\",\n                    \"scope\",\n                    \"components\"\n                ]\n            },\n            \"APIPostDpk\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The app name\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\",\n                        \"description\": \"The app version\"\n                    },\n                    \"categories\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"List of categories linked to the app\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The display Name\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"description of the dpk\"\n                    },\n                    \"icon\": {\n                        \"type\": \"string\",\n                        \"description\": \"icon style - should present in the ui platform\"\n                    },\n                    \"tags\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"List of tags linked to the app\"\n                    },\n                    \"codebase\": {\n                        \"$ref\": \"#/components/schemas/Codebase\"\n                    },\n                    \"scope\": {\n                        \"type\": \"string\",\n                        \"description\": \"the scope is belong to\"\n                    },\n                    \"trusted\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    },\n                    \"components\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"panels\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentPanel\"\n                                },\n                                \"description\": \"the panels component\"\n                            },\n                            \"models\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentModel\"\n                                },\n                                \"description\": \"the models component\"\n                            },\n                            \"modules\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentModule\"\n                                },\n                                \"description\": \"the modules component\"\n                            },\n                            \"triggers\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentTrigger\"\n                                },\n                                \"description\": \"the triggers component\"\n                            },\n                            \"services\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentService\"\n                                },\n                                \"description\": \"the services component\"\n                            },\n                            \"hooks\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/IDpkComponentHooks\"\n                                },\n                                \"description\": \"the hooks component\"\n                            }\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"codebase\",\n                    \"components\"\n                ]\n            },\n            \"CursorPageAPIDpk\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"items\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/APIDpk\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\",\n                        \"description\": \"\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ]\n            },\n            \"APIApp\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"\"\n                    },\n                    \"creator\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"orgId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"dpkName\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"dpkVersion\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"compositionId\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"scope\": {\n                        \"type\": \"string\",\n                        \"description\": \"\"\n                    },\n                    \"routes\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"trusted\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"url\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"creator\",\n                    \"projectId\",\n                    \"orgId\",\n                    \"dpkName\",\n                    \"dpkVersion\",\n                    \"compositionId\",\n                    \"scope\",\n                    \"routes\"\n                ]\n            },\n            \"APIPostApp\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The app name\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The project where the app should be install\"\n                    },\n                    \"dpkName\": {\n                        \"type\": \"string\",\n                        \"description\": \"A unique DPK app name\"\n                    },\n                    \"dpkVersion\": {\n                        \"type\": \"string\",\n                        \"description\": \"The version of the dpk app\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"projectId\",\n                    \"dpkName\"\n                ]\n            },\n            \"APIPatchApp\": {\n                \"description\": \"\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The app name\"\n                    },\n                    \"dpkName\": {\n                        \"type\": \"string\",\n                        \"description\": \"A unique DPK app name\"\n                    },\n                    \"dpkVersion\": {\n                        \"type\": \"string\",\n                        \"description\": \"The version of the dpk app\"\n                    },\n                    \"trusted\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"\"\n                    }\n                },\n                \"type\": \"object\",\n                \"required\": [\n                    \"name\",\n                    \"dpkName\"\n                ]\n            },\n            \"SettingsValueTypes\": {\n                \"enum\": [\n                    \"boolean\",\n                    \"number\",\n                    \"select\",\n                    \"multi-select\"\n                ],\n                \"type\": \"string\"\n            },\n            \"PlatformEntityType\": {\n                \"enum\": [\n                    \"user\",\n                    \"task\",\n                    \"dataset\",\n                    \"project\",\n                    \"billing-project\",\n                    \"org\",\n                    \"billing-org\"\n                ],\n                \"type\": \"string\"\n            },\n            \"Role\": {\n                \"enum\": [\n                    \"owner\",\n                    \"annotator\",\n                    \"engineer\",\n                    \"annotationManager\"\n                ],\n                \"type\": \"string\"\n            },\n            \"OrgRole\": {\n                \"enum\": [\n                    \"owner\",\n                    \"admin\",\n                    \"member\"\n                ],\n                \"type\": \"string\"\n            },\n            \"SettingScope\": {\n                \"properties\": {\n                    \"type\": {\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PlatformEntityType\"\n                            },\n                            {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"DATALOOP\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"id\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"*\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"role\": {\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Role\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/OrgRole\"\n                            },\n                            {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"*\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"preventOverride\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"visible\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"type\",\n                    \"id\",\n                    \"role\",\n                    \"preventOverride\",\n                    \"visible\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"SettingsTypes\": {\n                \"enum\": [\n                    \"feature_flag\",\n                    \"user_settings\"\n                ],\n                \"type\": \"string\"\n            },\n            \"APIFeatureFlag\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"defaultValue\": {\n                        \"description\": \"the value that will be taken if no value was passed\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the setting\"\n                    },\n                    \"value\": {\n                        \"description\": \"the value of the setting\"\n                    },\n                    \"valueType\": {\n                        \"$ref\": \"#/components/schemas/SettingsValueTypes\",\n                        \"description\": \"the value type of the setting\"\n                    },\n                    \"scope\": {\n                        \"$ref\": \"#/components/schemas/SettingScope\",\n                        \"description\": \"the scope in which the setting is defined.\"\n                    },\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"settingType\": {\n                        \"$ref\": \"#/components/schemas/SettingsTypes\",\n                        \"description\": \"the setting type\\ncan either be UserSetting or FeatureFlag\"\n                    },\n                    \"expiredAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"the date the feature flag expired\"\n                    },\n                    \"expired\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"value of that is interpreted from the expired at date. it signals if the flag is expired or not\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"defaultValue\",\n                    \"name\",\n                    \"value\",\n                    \"valueType\",\n                    \"scope\",\n                    \"metadata\",\n                    \"settingType\",\n                    \"expired\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"SettingsSectionNames\": {\n                \"enum\": [\n                    \"Account\",\n                    \"Contact\",\n                    \"Applications\",\n                    \"Studio\",\n                    \"Platform\",\n                    \"SDK\"\n                ],\n                \"type\": \"string\"\n            },\n            \"APIUserSetting\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"defaultValue\": {\n                        \"description\": \"the value that will be taken if no value was passed\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the setting\"\n                    },\n                    \"value\": {\n                        \"description\": \"the value of the setting\"\n                    },\n                    \"valueType\": {\n                        \"$ref\": \"#/components/schemas/SettingsValueTypes\",\n                        \"description\": \"the value type of the setting\"\n                    },\n                    \"scope\": {\n                        \"$ref\": \"#/components/schemas/SettingScope\",\n                        \"description\": \"the scope in which the setting is defined.\"\n                    },\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/Dictionary\"\n                    },\n                    \"settingType\": {\n                        \"$ref\": \"#/components/schemas/SettingsTypes\",\n                        \"description\": \"the setting type\\ncan either be UserSetting or FeatureFlag\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"description\": \"description field for the user setting\"\n                    },\n                    \"inputs\": {\n                        \"description\": \"inputs specified for the user setting\"\n                    },\n                    \"icon\": {\n                        \"type\": \"string\",\n                        \"description\": \"an icon for the setting\"\n                    },\n                    \"hint\": {\n                        \"type\": \"string\",\n                        \"description\": \"a hint for the setting\"\n                    },\n                    \"sectionName\": {\n                        \"$ref\": \"#/components/schemas/SettingsSectionNames\",\n                        \"description\": \"the main section that the setting belongs to\"\n                    },\n                    \"subSectionName\": {\n                        \"type\": \"string\",\n                        \"description\": \"the sub section that the setting belongs to\"\n                    }\n                },\n                \"required\": [\n                    \"id\",\n                    \"defaultValue\",\n                    \"name\",\n                    \"value\",\n                    \"valueType\",\n                    \"scope\",\n                    \"metadata\",\n                    \"settingType\",\n                    \"inputs\",\n                    \"sectionName\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"IUserContext\": {\n                \"properties\": {\n                    \"userId\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the User\"\n                    },\n                    \"orgId\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the Org\"\n                    },\n                    \"projectId\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the Project\"\n                    },\n                    \"taskId\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the Task\"\n                    },\n                    \"datasetId\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the Dataset\"\n                    }\n                },\n                \"required\": [\n                    \"userId\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"CreateSettingRequest\": {\n                \"properties\": {\n                    \"defaultValue\": {\n                        \"description\": \"the value that will be taken if no value was passed\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the setting\"\n                    },\n                    \"value\": {\n                        \"description\": \"the value of the setting\"\n                    },\n                    \"valueType\": {\n                        \"$ref\": \"#/components/schemas/SettingsValueTypes\",\n                        \"description\": \"the value type of the setting\"\n                    },\n                    \"scope\": {\n                        \"$ref\": \"#/components/schemas/SettingScope\",\n                        \"description\": \"the scope in which the setting is defined.\"\n                    },\n                    \"metadata\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Dictionary\"\n                            }\n                        ],\n                        \"nullable\": true\n                    },\n                    \"settingType\": {\n                        \"$ref\": \"#/components/schemas/SettingsTypes\",\n                        \"description\": \"the setting type\\ncan either be UserSetting or FeatureFlag\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"valueType\",\n                    \"scope\",\n                    \"settingType\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"CreateFeatureFlagRequest\": {\n                \"properties\": {\n                    \"defaultValue\": {\n                        \"description\": \"the value that will be taken if no value was passed\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the setting\"\n                    },\n                    \"value\": {\n                        \"description\": \"the value of the setting\"\n                    },\n                    \"valueType\": {\n                        \"$ref\": \"#/components/schemas/SettingsValueTypes\",\n                        \"description\": \"the value type of the setting\"\n                    },\n                    \"scope\": {\n                        \"$ref\": \"#/components/schemas/SettingScope\",\n                        \"description\": \"the scope in which the setting is defined.\"\n                    },\n                    \"metadata\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Dictionary\"\n                            }\n                        ],\n                        \"nullable\": true\n                    },\n                    \"settingType\": {\n                        \"$ref\": \"#/components/schemas/SettingsTypes\",\n                        \"description\": \"the setting type\\ncan either be UserSetting or FeatureFlag\"\n                    },\n                    \"expiredAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"nullable\": true,\n                        \"description\": \"the date the feature flag expired\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"valueType\",\n                    \"scope\",\n                    \"settingType\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"CreateUserSettingRequest\": {\n                \"properties\": {\n                    \"defaultValue\": {\n                        \"description\": \"the value that will be taken if no value was passed\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"description\": \"the name of the setting\"\n                    },\n                    \"value\": {\n                        \"description\": \"the value of the setting\"\n                    },\n                    \"valueType\": {\n                        \"$ref\": \"#/components/schemas/SettingsValueTypes\",\n                        \"description\": \"the value type of the setting\"\n                    },\n                    \"scope\": {\n                        \"$ref\": \"#/components/schemas/SettingScope\",\n                        \"description\": \"the scope in which the setting is defined.\"\n                    },\n                    \"metadata\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Dictionary\"\n                            }\n                        ],\n                        \"nullable\": true\n                    },\n                    \"settingType\": {\n                        \"$ref\": \"#/components/schemas/SettingsTypes\",\n                        \"description\": \"the setting type\\ncan either be UserSetting or FeatureFlag\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"description field for the user setting\"\n                    },\n                    \"inputs\": {\n                        \"description\": \"inputs specified for the user setting\"\n                    },\n                    \"icon\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"an icon for the setting\"\n                    },\n                    \"hint\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"a hint for the setting\"\n                    },\n                    \"sectionName\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/SettingsSectionNames\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the main section that the setting belongs to\"\n                    },\n                    \"subSectionName\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"the sub section that the setting belongs to\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"valueType\",\n                    \"scope\",\n                    \"settingType\",\n                    \"sectionName\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"Partial_SettingScope_\": {\n                \"properties\": {\n                    \"type\": {\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PlatformEntityType\"\n                            },\n                            {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"DATALOOP\"\n                                ]\n                            }\n                        ],\n                        \"description\": \"The type for which the setting belongs\"\n                    },\n                    \"id\": {\n                        \"anyOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"*\"\n                                ]\n                            }\n                        ],\n                        \"description\": \"The id for which the setting belongs\"\n                    },\n                    \"role\": {\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Role\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/OrgRole\"\n                            },\n                            {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"*\"\n                                ]\n                            }\n                        ],\n                        \"description\": \"The role for which the setting belongs\"\n                    },\n                    \"preventOverride\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"allow other settings to override this setting\"\n                    },\n                    \"visible\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"a toggle if the setting is visible or not\"\n                    }\n                },\n                \"type\": \"object\",\n                \"description\": \"Make all properties in T optional\"\n            },\n            \"PatchFeatureFlagRequest\": {\n                \"properties\": {\n                    \"defaultValue\": {\n                        \"description\": \"the value that will be taken if no value was passed\"\n                    },\n                    \"value\": {\n                        \"description\": \"the value of the setting\"\n                    },\n                    \"valueType\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/SettingsValueTypes\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the value type of the setting\"\n                    },\n                    \"scope\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Partial_SettingScope_\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the scope in which the setting is defined.\"\n                    },\n                    \"metadata\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Dictionary\"\n                            }\n                        ],\n                        \"nullable\": true\n                    },\n                    \"expiredAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"nullable\": true,\n                        \"description\": \"the date the feature flag expired\"\n                    }\n                },\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"PatchUserSettingRequest\": {\n                \"properties\": {\n                    \"defaultValue\": {\n                        \"description\": \"the value that will be taken if no value was passed\"\n                    },\n                    \"value\": {\n                        \"description\": \"the value of the setting\"\n                    },\n                    \"valueType\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/SettingsValueTypes\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the value type of the setting\"\n                    },\n                    \"scope\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Partial_SettingScope_\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the scope in which the setting is defined.\"\n                    },\n                    \"metadata\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/Dictionary\"\n                            }\n                        ],\n                        \"nullable\": true\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"description field for the user setting\"\n                    },\n                    \"inputs\": {\n                        \"description\": \"inputs specified for the user setting\"\n                    },\n                    \"icon\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"an icon for the setting\"\n                    },\n                    \"hint\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"a hint for the setting\"\n                    },\n                    \"sectionName\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/SettingsSectionNames\"\n                            }\n                        ],\n                        \"nullable\": true,\n                        \"description\": \"the main section that the setting belongs to\"\n                    },\n                    \"subSectionName\": {\n                        \"type\": \"string\",\n                        \"nullable\": true,\n                        \"description\": \"the sub section that the setting belongs to\"\n                    }\n                },\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"CursorPage_APIUserSetting-or-APIFeatureFlag_\": {\n                \"properties\": {\n                    \"totalItemsCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"items\": {\n                        \"items\": {\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/APIUserSetting\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/APIFeatureFlag\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"totalPagesCount\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                    },\n                    \"hasNextPage\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"totalItemsCount\",\n                    \"items\",\n                    \"totalPagesCount\",\n                    \"hasNextPage\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            },\n            \"IVersion\": {\n                \"properties\": {\n                    \"latestVersion\": {\n                        \"type\": \"string\"\n                    },\n                    \"latestForcedVersion\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"latestVersion\",\n                    \"latestForcedVersion\"\n                ],\n                \"type\": \"object\",\n                \"additionalProperties\": true\n            }\n        },\n        \"examples\": {},\n        \"headers\": {},\n        \"parameters\": {},\n        \"requestBodies\": {\n            \"IPostPipeline\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/IPostPipeline\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"APIPackage\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/APIPackage\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"IPostComposition\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/IPostComposition\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"QueryString\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/QueryString\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"ICacheOptions\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/ICacheOptions\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"LogQuery\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/LogQuery\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"APIWebHook\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/APIWebHook\"\n                        }\n                    }\n                },\n                \"required\": true\n            }\n        },\n        \"responses\": {},\n        \"securitySchemes\": {}\n    },\n    \"host\": \"gate.dataloop.ai\",\n    \"schemes\": [\n        \"https\"\n    ],\n    \"x-servers\": [\n        {\n            \"url\": \"https://gate.dataloop.ai/api/v1\",\n            \"description\": \"Main Dataloop Gateway\"\n        }\n    ]\n}",
			"canonicalURL": "/github.com/dataloop-ai/dtlpy-documentation@9694b8d8faec106f27a3626418b007910966c9da/-/blob/resources/rest_api/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/dataloop-ai/dtlpy-documentation/blob/9694b8d8faec106f27a3626418b007910966c9da/resources/rest_api/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/annotations/{annotationId}\": get: operation \"AnnotationsGetAnnotation\": parameters: parse parameter \"annotationId\": at resources/rest_api/openapi.json:5867:21: parameter MUST contain either a schema property, or a content property"
}