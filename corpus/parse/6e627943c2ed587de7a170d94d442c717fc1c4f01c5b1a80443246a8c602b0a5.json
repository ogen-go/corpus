{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/UnionInternationalCheminsdeFer/OSDM"
		},
		"file": {
			"name": "OSDM-online-api-v1.4.1.yml",
			"size": 0,
			"path": "specification/v1.4.0/OSDM-online-api-v1.4.1.yml",
			"byteSize": 289668,
			"content": "openapi: 3.0.3\ninfo:\n  title: UIC 90918-10 - OSDM\n  version: 1.4.1\n  description: |\n    Specifications for the OSDM API standard. The OSDM specification supports two\n    modes of operation: Distributor Mode and Allocator Mode. The API works the same in \n    both mode, except that in allocator mode the API also returns fare information.\n    The OSDM specification combines the allocator and distributor modes into one aligned\n    API interface.\n  contact:\n    name: Nicolas Selleslagh, Clemens Gantert and Andreas Schlapbach\n    url: https://unioninternationalcheminsdefer.github.io/OSDM/\n    email: osdm@uic.org\n  license:\n    name: Apache 2.0\n    url: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\nservers:\n  - description: OSDM Mock on Mocklab\n    url: https://osdm.mocklab.io\n  - description: Sqills Sandbox\n    url: https://s3p-osdm.cloud.sqills.com\n  - description: OEBB OSDM Simulator\n    url: https://tickets-otest.oebb.at/osdm-sim/api\ntags:\n  - name: Places\n    description: \u003e-\n      resources to search for places\n  - name: Trips\n    description: \u003e-\n      resources to search for trips\n  - name: Offers\n    description: \u003e-\n      resources to get bookable offers\n  - name: Bookings\n    description: \u003e-\n      resources to manipulate bookings\n  - name: Fares\n    description: \u003e-\n      resources to access fares\n  - name: Reservations\n    description: \u003e-\n      resources to access reservations\n  - name: Passengers\n    description: \u003e-\n      resources to manipulate a passenger's information at every stage of the flow\n  - name: Purchaser\n    description: \u003e-\n      resources to manipulate a purchaser's information at every stage of the flow\n  - name: Fulfillments\n    description: \u003e-\n      resources to retrieve fulfillments, e.g. tickets\n  - name: Refund\n    description: \u003e-\n      resources to get and accept a refund offer\n  - name: Exchange\n    description: \u003e-\n      resources to get exchange offers and book it\n  - name: Complaint Management\n    description: \u003e-\n      resources to manage complaints\n  - name: Master Data\n    description: \u003e-\n      resources to get master data\n\npaths:\n  /places:\n    get:\n      tags:\n        - Master Data\n      summary: Returns all places\n      description: \u003e-\n        Returns all places\n      operationId: getPlaces\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      responses:\n        \"200\":\n          description: the requested places\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: \"public, max-age=10000\"\n                description: \u003e-\n                  A places resource is fairly persistent and has a medium time to live to allow short-term caching.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n    post:\n      tags:\n        - Places\n      summary: returns place information for a given place request\n      description: \u003e-\n        Returns places for a given place request based on the OJP specification.\n      operationId: postPlaces\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      requestBody:\n        description: request for place\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PlaceRequest\"\n      responses:\n        \"200\":\n          description: place information found matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /places/{placeId}:\n    get:\n      tags:\n        - Places\n      summary: returns a place\n      description: \u003e-\n        Returns places\n      operationId: getPlacesId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: placeId\n          schema:\n            type: string\n          required: true\n          description: id of the place to get.\n      responses:\n        \"200\":\n          description: the requested places\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: \"public, max-age=10000\"\n                description: \u003e-\n                  A places resource is fairly persistent and has a medium time to live to allow short-term caching.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /trips/{tripId}:\n    get:\n      tags:\n        - Trips\n      summary: Returns a trip element representing a travel trip.\n      description:\n        A trip consists of one or more legs for a given tripId. Depending on the\n        embed either references or full location definitions is returned.\n      operationId: getTripsId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: tripId\n          schema:\n            type: string\n            description: unique (on this server) and opaque id of the trip\n          required: true\n          description: id of the trip to get.\n        - in: query\n          name: stopBehavior\n          description: \u003e-\n            Influences what stops are to be returned in response\n            (ORIGIN_DESTINATION_ONLY returns no intermediate stops;\n            REAL_BOARDING_ALIGHTING returns all stops except virtual stops).\n          schema:\n            type: string\n            default: ORIGIN_DESTINATION_ONLY\n            enum:\n              - ORIGIN_DESTINATION_ONLY\n              - REAL_BOARDING_ALIGHTING\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - PLACES\n                - NONE\n            default: [ALL]\n            maxItems: 1\n      responses:\n        \"200\":\n          description: the requested trip\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: \"public, max-age=10000\"\n                description: \u003e-\n                  A trip resource is fairly persistent and has a medium time to live to allow short-term caching.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TripResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /trips-collection:\n    post:\n      tags:\n        - Trips\n      summary: returns a collection of trips for a given OJP trip request\n      description: \u003e-\n        Returns trips for a given trip request based on the OJP specification.\n      operationId: postTrips\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      requestBody:\n        description: request for trips\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TripSearchCriteria\"\n      responses:\n        \"200\":\n          description: trips found matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TripsCollectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /trips-collection/{tripsCollectionId}:\n    get:\n      tags:\n        - Trips\n      summary: Returns a collection of trips for a specified origin and destination (and via).\n      description: \u003e-\n        The unique codes of the origin and destination can be resolved using the places service.\n      operationId: getTripsCollectionId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: tripsCollectionId\n          description: id of the trips\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - TRIPS\n                - TRIPS.PLACES\n                - NONE\n            default: [ALL]\n            maxItems: 2\n      responses:\n        \"200\":\n          description: Trip(s) found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TripsCollectionResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /trip-offers-collection:\n    post:\n      tags:\n        - Offers\n      summary: Returns trip offers for origin and destination (and via) places.\n      operationId: postTripOffersCollection\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TripOfferRequest\"\n      responses:\n        \"200\":\n          description: Collection of trip offers found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TripOffersCollectionResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /trip-offers-collection/{tripOffersCollectionId}:\n    get:\n      tags:\n        - Offers\n      summary: Returns offers and trips for a specified origin and destination (and via).\n      description: The unique codes of the origin and destination can be resolved using the places service.\n      operationId: getTripOffersCollectionId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: tripOffersCollectionId\n          schema:\n            type: string\n          required: true\n          description: id of the trip offers\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - TRIPOFFERS\n                - TRIPOFFERS.TRIPS\n                - TRIPOFFERS.TRIPS.PLACES\n                - TRIPOFFERS.OFFERS\n                - TRIPOFFERS.OFFERS.OFFERPARTS\n                - TRIPOFFERS.PASSENGERS\n                - NONE\n            default: [ALL]\n            maxItems: 5\n      responses:\n        \"200\":\n          description: Trip Offer Collection(s) found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TripOffersCollectionResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /trip-offers/{tripOfferId}:\n    get:\n      tags:\n        - Offers\n      summary: Returns offers for a specified tripOfferId.\n      operationId: getTripOffersId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: tripOfferId\n          schema:\n            type: string\n          required: true\n          description: id of the trip offer to get.\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - TRIPS\n                - TRIPS.PLACES\n                - OFFERS\n                - OFFERS.OFFERPARTS\n                - PASSENGERS\n                - NONE\n            default: [ALL]\n            maxItems: 5\n      responses:\n        \"200\":\n          description: Trip offer found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TripOfferResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /offers-collection:\n    post:\n      tags:\n        - Offers\n      summary: Returns offers for non-journey based products.\n      description: \u003e-\n        Get offers based on key words or regional information not linked to trips. \n        This includes simple passes or one day tickets.\n      operationId: postOffersCollection\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      requestBody:\n        description: request parameter for offer search\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OfferSearch\"\n      responses:\n        \"200\":\n          description: offer collection\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OffersCollectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /offers-collection/{offersCollectionId}:\n    get:\n      tags:\n        - Offers\n      summary: Returns offers unbound to a journey.\n      operationId: getOffersCollectionId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: offersCollectionId\n          schema:\n            type: string\n          required: true\n          description: id of the trip offers\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - OFFERS\n                - OFFERS.OFFERRPARTS\n                - OFFERS.PASSENGERS\n                - NONE\n            default: [ALL]\n            maxItems: 3\n      responses:\n        \"200\":\n          description: Offer Collection(s) found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OffersCollectionResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /offers/{offerId}:\n    get:\n      tags:\n        - Offers\n      summary: Returns an offer for the id requested.\n      description: \u003e-\n        Returns an offer.\n      operationId: getOffersId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: offerId\n          schema:\n            type: string\n          required: true\n          description: id of the offer to get.\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - OFFERPARTS\n                - TRIP\n                - TRIP.PLACES\n                - NONE\n            default: [ALL]\n            maxItems: 3\n      responses:\n        \"200\":\n          description: Offer found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OfferResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  \"/offers/{offerId}/reservations/{reservationId}/available-preferences\":\n    get:\n      tags:\n        - Reservations\n      summary: Allows validating reservation selection parameters.\n      description: \u003e-\n        The selected place preferences of the customer are checked for availability and the in combination available preferences are returned.\n        This service provides the availability service to be compliant with existing 90918-1 services (as-if-reservation).\n      operationId: validateReservationPreferencesId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: offerId\n          schema:\n            type: string\n          required: true\n          description: id of the offer.\n        - in: path\n          name: reservationId\n          schema:\n            type: string\n          required: true\n          description: id of the reservation where to validate the place availability\n        - in: query\n          name: preferences\n          description: \u003e-\n            Place preferences (see code list Reservation Place Preferences) the customer wants to have\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: preferencesBundle\n          description: \u003e-\n            Place preferences the customer wants to have applying to a selection of passengers or transportables only\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PlacePreferencesBundle\"\n      responses:\n        \"200\":\n          description: places available\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceAvailabilitiesResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  \"/offers/{offerId}/reservations/{reservationId}/nearby\":\n    get:\n      tags:\n        - Reservations\n      summary: \u003e-\n        Allows validating reservation selection parameters near to a reference place.\n      description: \u003e-\n        Check whether the reservation can be located near the provided reference place\n        If selected place preferences of the customer are provided they are checked for availability and the in \n        combination available preferences are returned. This service provides the availability service to be \n        compliant with existing 90918-1 services (as-if-reservation).\n      operationId: validateReservationNearbyId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: offerId\n          schema:\n            type: string\n          required: true\n          description: id of the offer.\n        - in: path\n          name: reservationId\n          schema:\n            type: string\n          required: true\n          description: id of the reservation where to validate the place availability\n        - in: query\n          name: coachNumber\n          description: coach of the referenced place\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: placeNumber\n          description: place number of the referenced place\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: preferences\n          description: \u003e-\n            Place preferences (see code list Reservation Place Preferences) the customer wants to have\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: preferencesBundle\n          description: \u003e-\n            Place preferences the customer wants to have applying to a selection of passengers or transportables only\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PlacePreferencesBundle\"\n      responses:\n        \"200\":\n          description: nearby places available\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceAvailabilitiesResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  \"/offers/{offerId}/reservations/{reservationId}/place-map\":\n    get:\n      tags:\n        - Reservations\n      summary: Provides available places for place selection.\n      description: \u003e-\n        Provide the availability per place to be displayed in a graphical place map for place selection.\n        If selected place preferences of the customer are provided they are checked for availability and the in \n        combination available preferences are returned.\n      operationId: provideReservationSeatMap\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: offerId\n          schema:\n            type: string\n          required: true\n          description: id of the offer\n        - in: path\n          name: reservationId\n          schema:\n            type: string\n          required: true\n          description: id of the reservation where to validate the place availability\n        - in: query\n          name: preferences\n          description: \u003e-\n            Place preferences (see code list Reservation Place Preferences) the customer wants to have\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: preferencesBundle\n          description: \u003e-\n            Place preferences the customer wants to have applying to a selection of passengers or transportables only\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PlacePreferencesBundle\"\n      responses:\n        \"200\":\n          description: available places for selection\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceAvailabilityResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  \"/offers/{offerId}/fares/{fareId}/available-preferences\":\n    get:\n      tags:\n        - Fares\n      summary: Allows validating reservation selection parameters.\n      description: \u003e-\n        The selected place preferences of the customer are checked for availability and the in combination\n        available preferences are returned. This service provides the availability service to be compliant \n        with existing 90918-1 services (as-if-reservation)\n      operationId: validateFareReservationPreferencesId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: offerId\n          schema:\n            type: string\n          required: true\n          description: id of the offer\n        - in: path\n          name: fareId\n          schema:\n            type: string\n          required: true\n          description: id of the fare where to validate the place availability\n        - in: query\n          name: preferences\n          description: \u003e-\n            Place preferences (see code list Reservation Place Preferences) the customer wants to have\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: preferencesBundle\n          description: \u003e-\n            Place preferences the customer wants to have applying to a selection of passengers or transportables only\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PlacePreferencesBundle\"\n      responses:\n        \"200\":\n          description: Places available\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceAvailabilitiesResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  \"/offers/{offerId}/fares/{fareId}/nearby\":\n    get:\n      tags:\n        - Fares\n      summary: \u003e-\n        Allows validating reservation selection parameters near to a reference place.\n      description: \u003e-\n        Check whether the fare reservation can be located near the provided reference place (given by\n        coach number and place number). If selected place preferences of the customer are provided they\n        are checked for availability and the in combination available preferences are returned.\n        This service provides the availability service to be compliant with existing 90918-1 services (as-if-reservation).\n      operationId: validateFareReservationNearbyId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: offerId\n          schema:\n            type: string\n          required: true\n          description: id of the offer\n        - in: path\n          name: fareId\n          schema:\n            type: string\n          required: true\n          description: id of the fare where to validate the place availability\n        - in: query\n          name: coachNumber\n          description: coach of the referenced place\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: placeNumber\n          description: place number of the referenced place\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: preferences\n          description: \u003e-\n            Place preferences (see code list Reservation Place Preferences) the customer wants to have\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: preferencesBundle\n          description: \u003e-\n            Place preferences the customer wants to have applying to a selection of passengers or transportables only\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PlacePreferencesBundle\"\n      responses:\n        \"200\":\n          description: Places available\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceAvailabilitiesResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  \"/offers/{offerId}/fares/{fareId}/place-map\":\n    get:\n      tags:\n        - Fares\n      summary: Provides available places for place selection\n      description: \u003e-\n        Provide the availability per place to be displayed in a graphical place map for place selection.\n        If selected place preferences of the customer are provided they are checked for availability and the in\n        combination available preferences are returned.\n      operationId: provideFareReservationPlaceMap\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: offerId\n          schema:\n            type: string\n          required: true\n          description: id of the offer\n        - in: path\n          name: fareId\n          schema:\n            type: string\n          required: true\n          description: id of the reservation fare where to get the place availability\n        - in: query\n          name: preferences\n          description: \u003e-\n            Place preferences (see code list Reservation Place Preferences) the customer wants to have\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: preferencesBundle\n          description: \u003e-\n            Place preferences the customer wants to have applying to a selection of passengers or transportables only\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PlacePreferencesBundle\"\n      responses:\n        \"200\":\n          description: selectable places\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceAvailabilityResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /bookings/{bookingId}/passengers/{passengerId}:\n    get:\n      tags:\n        - Passengers\n      summary: Returns the passenger's information at booking step.\n      operationId: getBookingPassengersId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking\n        - in: path\n          name: passengerId\n          schema:\n            type: string\n          required: true\n          description: id of the passenger\n      responses:\n        \"200\":\n          description: Passenger found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PassengerResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    patch:\n      tags:\n        - Passengers\n      summary: Allows updating a passenger's information at booking step.\n      operationId: patchBookingPassenger\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking the passenger is in.\n        - in: path\n          name: passengerId\n          schema:\n            type: string\n          required: true\n          description: id of the passenger\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Passenger\"\n      responses:\n        \"200\":\n          description: Passenger successfully patched\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Passenger\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /bookings/{bookingId}/purchaser:\n    get:\n      tags:\n        - Purchaser\n      summary: Returns the purchaser's information at booking step.\n      operationId: getBookingPurchaser\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking the purchaser is in.\n      responses:\n        \"200\":\n          description: Purchaser found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PurchaserResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    patch:\n      tags:\n        - Purchaser\n      summary: Allows updating a purchaser's information at booking step.\n      operationId: patchBookingPurchaser\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking the purchaser is in.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Purchaser\"\n      responses:\n        \"200\":\n          description: Purchaser successfully patched\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Purchaser\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /products:\n    get:\n      tags:\n        - Master Data\n      summary: Returns all products available to the caller.\n      operationId: getProducts\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      responses:\n        \"200\":\n          description: Product found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductCollectionResponse\"\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: \"public, max-age=43200\"\n                description: \u003e-\n                  A product resource has a long time to live to allow long-term caching. Any update of the product \n                  information will lead to the creation of a new resource.\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /products/{productId}:\n    get:\n      tags:\n        - Master Data\n      summary: Returns a product for the id provided.\n      operationId: getProductsId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: productId\n          schema:\n            type: string\n            description: unique and opaque id of the product\n          required: true\n          description: id of the product to get\n      responses:\n        \"200\":\n          description: Product found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductResponse\"\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: \"public, max-age=43200\"\n                description: \u003e-\n                  A product resource has a long time to live to allow long-term caching. Any update of the product \n                  information will lead to the creation of a new resource.\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /bookings:\n    post:\n      tags:\n        - Bookings\n      summary: Allows to create a booking based on a previously requested offer.\n      operationId: postBookings\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BookingRequest\"\n      responses:\n        \"200\":\n          description: \u003e-\n            Booking prebooked\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BookingResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /bookings/{bookingId}:\n    get:\n      tags:\n        - Bookings\n      summary: Returns a booking with the id provided.\n      operationId: getBookingsId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking to get.\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - BOOKEDOFFERS.TRIP\n                - BOOKEDOFFERS.TRIP.PLACES\n                - BOOKEDOFFERS\n                - BOOKEDOFFERS.OFFERPARTS\n                - PASSENGERS\n                - TICKETS\n                - REFUND_PROPOSITIONS\n                - NONE\n            default: [ALL]\n            maxItems: 7\n      responses:\n        \"200\":\n          description: booking found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BookingResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    delete:\n      tags:\n        - Bookings\n      summary: Deletes the booking with the id provided.\n      description: \u003e-\n        It is only possible before the booking is confirmed or in case of a technical problem in confirming multiple \n        independent bookings within a sales transaction. Deletes on a confirmed booking must be documented\n        and evidence on the issue must be provided on request. \n        The delete on a confirmed booking is allowed immediately after the confirmation of the booking, \n        but must be repeated according to the error handling rules in case the delete fails.\n      operationId: deleteBookingsId\n      parameters:\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking to delete.\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/NoContentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    patch:\n      tags:\n        - Bookings\n      summary: Allows updating the fulfillment type of the booking.\n      operationId: confirmBooking\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking to be patched\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BookingPatchRequest\"\n      responses:\n        \"200\":\n          description: booking fulfillment type updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BookingResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /bookings/{bookingId}/fulfillments:\n    post:\n      tags:\n        - Fulfillments\n      summary: Triggers the fulfillment of the booking, but does not actually return the fulfillments.\n      operationId: postFulfillments\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking to be patched\n      responses:\n        \"200\":\n          description: \u003e-\n            Fulfillment successfully completed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FulfillmentsResponse\"\n        \"202\":\n          description: \u003e-\n            Fulfillment successfully initiated, retrieve booking to retrieve the fulfillment documents\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: \"#/components/schemas/WarningCollection\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    patch:\n      tags:\n        - Fulfillments\n      summary: Finalizes the fulfillments and returns the documents.\n      operationId: patchFulfillment\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking to be patched\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FulfillmentsPatch\"\n      responses:\n        \"200\":\n          description: \u003e-\n            Fulfillment successfully completed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FulfillmentsResponse\"\n        \"202\":\n          description: \u003e-\n            Fulfillment successfully initiated, retrieve booking to retrieve the fulfillment documents\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: \"#/components/schemas/WarningCollection\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /fulfillments/{fulfillmentId}:\n    get:\n      tags:\n        - Fulfillments\n      summary: Returns the fulfillment, aka. ticket for the provided id.\n      operationId: getFulfillmentId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: fulfillmentId\n          schema:\n            type: string\n          required: true\n          description: id of the fulfillment to get.\n      responses:\n        \"200\":\n          description: fulfillment found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FulfillmentResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /bookings/{bookingId}/refundOffers:\n    post:\n      tags:\n        - Refund\n      summary: Initiates a refund process by creating a RefundOffer resource.\n      description:\n        The RefundOffer contains the required information on the potential operation. One refund offer can then be\n        accepted via a PATCH, deleted or left to die at the end of its lifetime.\n      operationId: postRefundOffersBookingId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RefundOfferRequest\"\n      responses:\n        \"200\":\n          description: Refund offer created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefundOffersCollectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /bookings/{bookingId}/refundOffers/{refundOfferId}:\n    get:\n      tags:\n        - Refund\n      summary: Returns the refund offer for the ids provided.\n      operationId: getRefundOffersId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking\n        - in: path\n          name: refundOfferId\n          schema:\n            type: string\n          required: true\n          description: id of the refund offer to get.\n      responses:\n        \"200\":\n          description: RefundOffer found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefundOffersCollectionResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    patch:\n      tags:\n        - Refund\n      summary: Allows to accept and confirm a refund offer.\n      operationId: patchRefundOffersId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking\n        - in: path\n          name: refundOfferId\n          schema:\n            type: string\n          required: true\n          description: id of the refund offer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RefundOfferConfirm\"\n      responses:\n        \"200\":\n          description: RefundOffer confirmed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefundOffersCollectionResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    delete:\n      tags:\n        - Refund\n      summary: Deletes a refundOffer without waiting for expiry.\n      operationId: deleteRefundOffersId\n      parameters:\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking\n        - in: path\n          name: refundOfferId\n          schema:\n            type: string\n          required: true\n          description: id of the refund offer\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/NoContentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /bookings/{bookingId}/exchangeOperations/{exchangeOperationId}:\n    get:\n      tags:\n        - Exchange\n      summary: \u003e-\n        Returns the exchange operation with the id provided. It may be a provisional or a confirmed exchange.\n      operationId: getExchangeOperation\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking\n        - in: path\n          name: exchangeOperationId\n          schema:\n            type: string\n          required: true\n          description: id of the exchange operation\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - TRIP\n                - TRIP.PLACES\n                - OFFERS\n                - OFFERS.OFFERPARTS\n                - OFFERS.OFFERPARTS.PRODUCTS\n                - PASSENGERS\n            default: [ALL]\n            maxItems: 5\n      responses:\n        \"200\":\n          description: ExchangeOperation found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExchangeOperationResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    patch:\n      tags:\n        - Exchange\n      summary: \u003e-\n        Allows to update an ongoing exchange operation.\n      operationId: patchExchangeOperation\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking to be exchanged.\n        - in: path\n          name: exchangeOperationId\n          schema:\n            type: string\n          required: true\n          description: id of the exchange operation.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExchangeOperationPatchRequest\"\n      responses:\n        \"200\":\n          description: Exchange successfully completed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExchangeOperationResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n    delete:\n      tags:\n        - Exchange\n      summary: \u003e-\n        Cancels an ongoing exchange operation in provisional state.\n      operationId: deleteExchangeOperation\n      parameters:\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n          required: true\n          description: id of the booking containing the exchange operation\n        - in: path\n          name: exchangeOperationId\n          schema:\n            type: string\n          required: true\n          description: id of the exchangeOperation to delete.\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/NoContentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /exchange-trip-offers-collection:\n    post:\n      tags:\n        - Exchange\n      summary: \u003e-\n        Returns exchange offers for a specified fulfillments submitted given requested new trip \n        characteristics.\n      operationId: postExchangeTripOffersCollection\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/idempotencyKey\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExchangeTripOfferRequest\"\n      responses:\n        \"200\":\n          description: Collection of exchange trip offers found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExchangeTripOffersCollectionResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /exchange-trip-offers-collection/{exchangeTripOffersCollectionId}:\n    get:\n      tags:\n        - Exchange\n      summary: \u003e-\n        Returns offers and trips for a specified origin and destination (and via).\n      operationId: getExchangeTripOffersCollectionId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: exchangeTripOffersCollectionId\n          schema:\n            type: string\n          required: true\n          description: id of the trip to get.\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - TRIPOFFERS\n                - TRIPOFFERS.TRIPS\n                - TRIPOFFERS.TRIPS.PLACES\n                - TRIPOFFERS.OFFERS\n                - TRIPOFFERS.OFFERS.OFFERPARTS\n                - TRIPOFFERS.OFFERS.OFFERPARTS.PRODUCTS\n                - TRIPOFFERS.PASSENGERS\n                - NONE\n            default: [ALL]\n            maxItems: 7\n      responses:\n        \"200\":\n          description: Trip Offer Collection(s) found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExchangeTripOffersCollectionResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /exchange-trip-offers/{exchangeTripOfferId}:\n    get:\n      tags:\n        - Exchange\n      summary: Returns offers for a specified trip offer id.\n      operationId: getExchangeTripOffersId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          name: exchangeTripOfferId\n          schema:\n            type: string\n          required: true\n          description: id of the trip to get.\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references\n            only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - TRIPS\n                - TRIPS.PLACES\n                - OFFERS\n                - OFFERS.OFFERPARTS\n                - OFFERS.OFFERPARTS.PRODUCTS\n                - PASSENGERS\n                - NONE\n            default: [ALL]\n            maxItems: 6\n      responses:\n        \"200\":\n          description: Trip offer found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExchangeTripOfferResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /complaints:\n    post:\n      tags:\n        - Complaint Management\n      summary: Allows adding the Complaint.\n      operationId: createComplaint\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Complaint\"\n      responses:\n        \"200\":\n          description: complaint\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComplaintResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /complaints/{complaintId}:\n    get:\n      tags:\n        - Complaint Management\n      summary: returns a complaint\n      description: \u003e-\n        Returns a complaint\n      operationId: getComplaint\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - in: path\n          name: complaintId\n          schema:\n            type: string\n          required: true\n          description: id of the complaint\n      responses:\n        \"200\":\n          description: the requested complaint\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: \"public, max-age=10000\"\n                description: \u003e-\n                  A places resource is fairly persistent and has a medium time to live to allow short-term caching.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComplaintResponse\"\n        \"400\":\n          description: bad input parameter\n        \"401\":\n          description: unauthorized\n        \"403\":\n          description: forbidden\n        \"404\":\n          description: no place information found\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          description: not implemented\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n\n    patch:\n      tags:\n        - Complaint Management\n      summary: Allows updating the Complaint.\n      operationId: patchComplaint\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - in: path\n          name: complaintId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: id of the complaint to be patched\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ComplaintPatchRequest\"\n      responses:\n        \"200\":\n          description: complaint updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComplaintResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /coachLayouts:\n    get:\n      tags:\n        - Master Data\n      summary: Returns all coach layouts.\n      description: \u003e-\n        Retrieve the coach layout description needed for graphical reservation. The coach\n        layouts can either be retrieved as a complete list or specificity for a train identified via offerId and reservationId or fareId\n      operationId: getCoachLayouts\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      responses:\n        \"200\":\n          description: coach layouts\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CoachLayoutsResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /coachLayouts/{layoutId}:\n    get:\n      tags:\n        - Master Data\n      summary: Returns a coach layout for a provided id.\n      description: \u003e-\n        Retrieve a coach layout description needed for graphical reservation for a given layout id.\n      operationId: getCoachLayoutsLayoutId\n      parameters:\n        - $ref: \"#/components/parameters/acceptLanguage\"\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n        - in: path\n          description: id of the layout\n          name: layoutId\n          schema:\n            type: string\n          required: true\n      responses:\n        \"200\":\n          description: coach layouts\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CoachLayoutResponse\"\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\n  /reductionCards:\n    get:\n      tags:\n        - Master Data\n      summary: Returns a collection of reduction card definitions.\n      operationId: getReductionCards\n      parameters:\n        - $ref: \"#/components/parameters/traceParent\"\n        - $ref: \"#/components/parameters/traceState\"\n      responses:\n        \"200\":\n          description: Reduction cards provided\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReductionCardCollectionResponse\"\n          headers:\n            Expires:\n              schema:\n                type: string\n                description: \u003e-\n                  Gives the date/time after which the response is considered stale (in \"HTTP-date\" format as defined by RFC 7231).\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/ForbiddenResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptableResponse\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaTypeResponse\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerErrorResponse\"\n        \"501\":\n          $ref: \"#/components/responses/NotImplementedResponse\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailableResponse\"\n        \"default\":\n          $ref: \"#/components/responses/DefaultErrorResponse\"\n\nsecurity:\n  - oAuth2ClientCredentials: []\n\ncomponents:\n  securitySchemes:\n    oAuth2ClientCredentials:\n      type: oauth2\n      description: See https://swagger.io/docs/specification/authentication/oauth2/\n      flows:\n        clientCredentials:\n          tokenUrl: \"https://login.microsoftonline.com/tbd\"\n          refreshUrl: \"https://required.refresh.url/tbd\"\n          scopes: {} # The scopes are not being used yet\n\n  parameters:\n    acceptLanguage:\n      name: Accept-Language\n      in: header\n      description: \u003e-\n        Describes the set of natural languages that are preferred for localized text in the response\n        to the request (see RFC2616-sec14.4). Supporting English (en) is a must.\n      schema:\n        type: string\n      required: false\n\n    idempotencyKey:\n      name: Idempotency-Key\n      in: header\n      description: \u003e-\n        The HTTP Idempotency request header field can be used to carry idempotency key in order to make \n        non-idempotent HTTP methods such as POST or PATCH fault-tolerant.\n      schema:\n        type: string\n      required: false\n\n    traceParent:\n      name: traceparent\n      in: header\n      description: \u003e-\n        The traceparent header describes the position of the incoming request in its trace graph in a portable, \n        fixed-length format. Its design focuses on fast parsing. Every tracing tool MUST properly set \n        traceparent even when it only relies on vendor-specific information in tracestate (see W3C Trace Context).\n      schema:\n        type: string\n      required: false\n\n    traceState:\n      name: tracestate\n      in: header\n      description:\n        The tracestate extends traceparent with vendor-specific data represented by a set of name/value pairs.\n        Storing information in tracestate is optional (see W3C Trace Context).\n      schema:\n        type: string\n      required: false\n\n  responses:\n    NoContentResponse:\n      description: No Content (204)\n      content:\n        \"application/problem+json\":\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    BadRequestResponse:\n      description: Bad Request (400)\n      content:\n        \"application/problem+json\":\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    UnauthorizedResponse:\n      description: \u003e-\n        Unauthorized (401)\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    ForbiddenResponse:\n      description: \u003e-\n        Forbidden (403)\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    NotFoundResponse:\n      description: \u003e-\n        Not Found (404)\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    NotAcceptableResponse:\n      description: \u003e-\n        Not Acceptable (406)\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    ConflictResponse:\n      description: Conflict (409)\n      content:\n        \"application/problem+json\":\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    UnsupportedMediaTypeResponse:\n      description: \u003e-\n        Unsupported Media Type (415)\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    InternalServerErrorResponse:\n      description: \u003e-\n        Internal Server Error (500)\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    NotImplementedResponse:\n      description: \u003e-\n        Not Implemented (501)\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    ServiceUnavailableResponse:\n      description: \u003e-\n        Service Unavailable (503)\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n    DefaultErrorResponse:\n      description: \u003e-\n        Default error reponse\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/Problem\"\n\n  schemas:\n    WarningCollection:\n      type: array\n      description: \u003e-\n        List of warnings.\n      items:\n        $ref: \"#/components/schemas/Warning\"\n\n    Warning:\n      type: object\n      description: \u003e-\n        This element can be used to pass non-blocking information or events,\n        such as a price difference with the initially offered price at booking time. \n        It is inspired on the JSon problem structure.\n      required:\n        - code\n      properties:\n        code:\n          type: string\n        type:\n          type: string\n          format: uri\n          description: \u003e-\n            An absolute URI that identifies the warning type. When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          default: \"about:blank\"\n          example: \"https://example.com/warns/price-updated\"\n        detail:\n          type: string\n          description: \u003e-\n            A human readable explanation specific to this occurrence of the\n            warning.\n          example: The price of the given offer part has been updated during the booking operation\n        instance:\n          type: string\n          format: uri\n          description: \u003e-\n            An absolute URI that identifies the specific occurrence of the warning.\n            example: offers/offer1234\n\n    PlaceResponse:\n      type: object\n      required:\n        - places\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        places:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Place\"\n\n    TripResponse:\n      type: object\n      required:\n        - trip\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        trip:\n          $ref: \"#/components/schemas/Trip\"\n\n    PlaceRequest: ## OJP  # Reduced scope\n      type: object\n      description: \u003e-\n        Initial input for the place information request. This input defines what is originally looked for.\n        Provided by OJP.\n      properties:\n        placeInput:\n          $ref: \"#/components/schemas/InitialPlaceInput\"\n        restrictions:\n          $ref: \"#/components/schemas/PlaceParam\"\n\n    PlaceParam: ## OJP  # Reduced scope\n      type: object\n      description: \u003e-\n        More parameters for restricting the request. Provided by OJP.\n      properties:\n        type:\n          $ref: \"#/components/schemas/PlaceType\"\n        usage:\n          $ref: \"#/components/schemas/PlaceUsage\"\n        ptModes:\n          $ref: \"#/components/schemas/ModeFilter\"\n        serviceBrandFilter:\n          $ref: \"#/components/schemas/ServiceBrandFilter\"\n        carrierFilter:\n          $ref: \"#/components/schemas/CarrierFilter\"\n        # topographicPlaceRef:  ## Out of scope\n        #   $ref: \"#/components/schemas/TopographicPlaceRef\"\n        pointOfInterestFilter:\n          $ref: \"#/components/schemas/PointOfInterestFilter\"\n        numberOfResults:\n          description: \u003e-\n            Maximum number of results to be returned. The service is allowed to return fewer objects if reasonable\n            or otherwise appropriate.\n          type: integer\n          format: int32\n          minimum: 1\n      # continueAt:   # Out of scope\n      #  type: number\n      #  format: int32\n      # includePtModes:   # Out of scope\n      #  type: boolean\n\n    PlaceType: ## OJP\n      type: string\n      description: Provided by OJP.\n      enum:\n        - STOP\n        - ADDRESS\n        - POI\n        - GEO_COORDINATE\n        - TOPOGRAPHIC_PLACE\n\n    PlaceUsage: ## OJP\n      type: string\n      description: \u003e-\n        Provided by OJP.\n      enum:\n        - ORIGIN\n        - VIA\n        - DESTINATION\n\n    InitialPlaceInput: ## OJP\n      type: object\n      description: \u003e-\n        Initial input for the place information request. This input defines what is originally looked for.\n        Provided by OJP.\n      properties:\n        #initialInput:\n        #  anyOf:\n        name:\n          description: \u003e-\n            Name of the place object which is looked after. This is usually the user's input. If not given,\n            the name of the resulting place objects is not relevant.\n          type: string\n          example: \"Bern Bärengraben\"\n        geoPosition:\n          $ref: \"#/components/schemas/GeoPosition\"\n    #         - $ref: \"#/components/schemas/GeoRestriction\"   # Out of scope\n    #         - $ref: \"#/components/schemas/AllowedSystemId\"    # Out of scope\n\n    TripSearchCriteria: ## OJP # Renamed from TripRequest, reduced scope\n      type: object\n      description: \u003e-\n        Trip request structure. Provided by OJP.\n      required:\n        - origin\n        - destination\n      properties:\n        departureTime: # EXT Array out of Scope\n          type: string\n          format: date-time\n        arrivalTime:\n          description: \u003e-\n            requested arrival time. If arrival time is provided the departure time must be omitted.\n          type: string\n          format: date-time\n        origin: # EXT Array out of Scope\n          description: \u003e-\n            Specifies the origin situation from where the user wants to start.\n          $ref: \"#/components/schemas/PlaceRef\"\n        destination: # EXT Array out of Scope\n          description: \u003e-\n            Specifies the destination situation where the user is heading to.\n          $ref: \"#/components/schemas/PlaceRef\"\n        requestedSection: # EXT Indicates sub part of trip that is requested to price.\n          $ref: \"#/components/schemas/Section\"\n        via:\n          description: \u003e-\n            Ordered series of points where the journey must pass through. If more\n            than one via point is given all of them must be obeyed - in the correct\n            order. The server is allowed to replace a via stop by equivalent stops.\n          type: array\n          items:\n            $ref: \"#/components/schemas/TripVia\"\n        # notVia:   # Out of scope\n        #   description: \u003e-\n        #     Not-via restrictions for a TRIP, i.e. SCHEDULED STOP POINTs or STOP PLACEs\n        #     that the TRIP is not allowed to pass through. If more than one not via point\n        #     is given all of them must be obeyed.\n        #   oneOf:\n        #     - $ref: \"#/components/schemas/StopPointRef\"\n        #     - $ref: \"#/components/schemas/StopPlaceRef\"\n        # noChangesAt:   # Out of scope\n        #   description: \u003e-\n        #     No-change-at restrictions for a TRIP, i.e. SCHEDULED STOP POINTs or STOP PLACEs\n        #     at which no TRANSFER is allowed within a TRIP\n        #   oneOf:\n        #     - $ref: \"#/components/schemas/StopPointRef\"\n        #     - $ref: \"#/components/schemas/StopPlaceRef\"\n        params:\n          description: \u003e-\n            Options to control the search behavior and response contents.\n          $ref: \"#/components/schemas/TripParam\"\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. Proposed default ALL\n          type: array\n          items:\n            type: string\n            enum:\n              - TRIPS\n              - TRIPS.PLACES\n              - NONE\n              - ALL\n\n    TripVia: ## OJP\n      type: object\n      description: \u003e-\n        Via restrictions for a trip. Provided by OJP.\n      required:\n        - viaPoint\n      properties:\n        viaPoint:\n          $ref: \"#/components/schemas/PlaceRef\"\n        dwellTime:\n          type: string\n          format: duration\n          description: desired dwell time at the via place\n          example: \"30M\"\n\n    BaseTripPolicyFilter: ## OJP # Reduced Scope\n      type: object\n      description: \u003e-\n        Policies that control the trip search behavior for both public and individual transport. \n        Provided by OJP.\n      properties:\n        noSingleStep:\n          description: The user is not able to climb one step, i.e. wheel chair.\n          type: boolean\n          default: false\n        # noStairs:  # Out of scope\n        #   description: The user is not able to walk up/down stairs.\n        #   type: boolean\n        #   default: false\n        # noEscalator:  # Out of scope\n        #   type: boolean\n        #   description: The user is not able to use an escalator.\n        #   default: false\n        # noElevator:  # Out of scope\n        #   type: boolean\n        #   description: The user is not able to use an elevator.\n        #   default: false\n        # noRamp:  # Out of scope\n        #   type: boolean\n        #   description: The user is not able to use an ramp.\n        #   default: false\n        noSight:\n          type: boolean\n          description: The user is not able to see.\n          default: false\n\n    TripMobilityFilter: ## OJP\n      type: object\n      description: \u003e-\n        Base mobility options to be applied for both public and individual transport.\n        Provided by OJP.\n      properties:\n        # levelEntrance:  # Out of Scope\n        #   description: \u003e-\n        #     The user needs vehicles with level entrance between platform and vehicle, f.e.\n        #     for wheelchair access.\n        #   type: boolean\n        #   default: false\n        bikeTransport:\n          description: \u003e-\n            The user wants to carry a bike on public transport.\n          type: boolean\n          default: false\n        walkSpeed:\n          description: \u003e-\n            Deviation from average walk speed in percent. 100% percent is average speed.\n          type: integer\n          format: int32\n          default: 100\n        additionalTransferTime:\n          description: \u003e-\n            Additional time added to all transfers (also to transfers between individual to\n            public transport).\n          type: string\n          format: duration\n          example: 0S\n\n    ModeFilter: ## OJP\n      type: object\n      description: \u003e-\n        List of public transport modes to include or exclude. Provided by OJP.\n      properties:\n        exclude:\n          description: Whether modes in list are to include or exclude from search.\n          type: boolean\n          default: True\n        transportModes:\n          description: List of Transport modes to include/exclude.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Mode\"\n\n    CarrierFilter: ## OJP\n      type: object\n      description: \u003e-\n        Filter for in/exclusion of carriers. Provided by OJP.\n      properties:\n        exclude:\n          description: Whether carrier in list are to include or exclude from search.\n          type: boolean\n          default: True\n        carriers:\n          description: Reference to carrier\n          type: array\n          items:\n            $ref: \"#/components/schemas/Company\"\n\n    ServiceBrandFilter: ## OJP\n      type: object\n      description: \u003e-\n        Filter for in/exclusion of service brands. Provided by OJP.\n      properties:\n        exclude:\n          description: Whether service brand in list are to include or exclude from search.\n          type: boolean\n          default: True\n        serviceBrands:\n          description: Reference to service brand codes\n          type: array\n          items:\n            $ref: \"#/components/schemas/ServiceBrandCode\"\n\n    VehicleFilter: ## OJP # EXT\n      type: object\n      description: \u003e-\n        Filter for in/exclusion of vehicle based on vehicle number or line number.\n      properties:\n        exclude:\n          description: Whether vehicle in list is to include or exclude from search.\n          type: boolean\n          default: True\n        vehicleNumbers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VehicleNumber\"\n        lineNumbers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/LineNumber\"\n\n    PointOfInterestFilter: ## OJP\n      type: object\n      description: \u003e-\n        Filter POIs by category. Provided by OJP.\n      properties:\n        exclude:\n          description: Whether operators in list are to include or exclude from search.\n          type: boolean\n          default: True\n        pointOfInterestCategory:\n          description: \u003e-\n            These POI categories can be used to filter POIs. If more than one is given the filtering\n            is by logical \"OR\" (when Exclude=FALSE) and logical \"AND\" (when Exclude=TRUE).\n          type: array\n          items:\n            $ref: \"#/components/schemas/PointOfInterestCategory\"\n\n    TripDataFilter: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        Data to be included/excluded from search, f.e. modes, operators. Provided by OJP.\n      properties:\n        ptModeFilter:\n          $ref: \"#/components/schemas/ModeFilter\"\n        # lineFilter:  # Out of scope\n        #   $ref: \"#/components/schemas/LineDirectionFilter\"\n        carrierFilter: # EXT\n          $ref: \"#/components/schemas/CarrierFilter\"\n        serviceBrandFilter: # EXT\n          $ref: \"#/components/schemas/ServiceBrandFilter\"\n        # privateModeFilter:  # Out of scope\n        #   $ref: \"#/components/schemas/PrivateModeFilter\"\n        vehicleFilter: # EXT\n          $ref: \"#/components/schemas/VehicleFilter\"\n\n    TripParam: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        Options to control the search behavior and response contents.\n        number of results \u003e either number of results or number of results before and after are used.\n        Provided by OJP.\n      properties:\n        # allOf:\n        dataFilter:\n          $ref: \"#/components/schemas/TripDataFilter\"\n        policyFilter:\n          $ref: \"#/components/schemas/BaseTripPolicyFilter\"\n        mobilityFilter:\n          $ref: \"#/components/schemas/TripMobilityFilter\"\n        numberOfResults:\n          type: integer\n          format: int32\n          default: 5\n        numberOfResultsBefore:\n          type: integer\n          format: int32\n          default: 0\n        numberOfResultsAfter:\n          type: integer\n          format: int32\n          default: 5\n        ignoreRealtimeData:\n          type: boolean\n          default: false\n        transferLimit:\n          description: The maximum number of interchanges the user will accept per trip.\n          type: integer\n          format: int32\n          minimum: 0\n        # optimizationMethod:  # Out of scope\n        #  $ref: \"#/components/schemas/OptimizationMethod\"\n        itModesToCover:\n          $ref: \"#/components/schemas/IndividualMode\"\n      #  - $ref: \"#/components/schemas/BaseTripContentFilter\"  ## Out of scope\n      #  - $ref: \"#/components/schemas/TripContentFilter\"\n      #  - $ref: \"#/components/schemas/FareParam\"\n\n    TripsCollectionResponse: ## OJP  # Reduced scope\n      type: object\n      description: \u003e-\n        Trip response structure. Provided by OJP.\n      required:\n        - id\n        - trips\n      properties:\n        # calcTime:\n        #  type: integer\n        #  minimum: 0\n        # tripResponseContext:  # Out of scope\n        #  $ref: \"#/components/schemas/ResponseContext\"\n        #        tripResult:\n        #          type: array\n        #          items:\n        #            $ref: \"#/components/schemas/TripResult\"\n        warning:\n          $ref: \"#/components/schemas/WarningCollection\"\n        id:\n          type: string\n        trips:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Trip\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    Trip: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        A complete trip from origin to destination. Provided by OJP.\n      required:\n        - id # EXT replaces tripId, fix to OJP submitted, see https://github.com/VDVde/OJP/issues/179\n        - duration\n        - startTime\n        - endTime\n        - transfers\n        - legs # EXT replaces tripLegs, fix to OJP submitted, see https://github.com/VDVde/OJP/issues/179\n      properties:\n        id:\n          description: \u003e-\n            Id of this trip for referencing purposes. Unique within a trip.\n          type: string\n        duration:\n          description: Overall duration of the trip\n          type: string\n          example: \"PT20M\"\n        origin: # EXT\n          description: \u003e-\n            Specifies the origin situation from where the user wants to start.\n          $ref: \"#/components/schemas/PlaceRef\" # EXT no support for array\n        destination: # EXT\n          description: \u003e-\n            Specifies the destination situation where the user is heading to.\n          $ref: \"#/components/schemas/PlaceRef\" # EXT no support for array\n        startTime:\n          description: Departure time at origin.\n          type: string\n          format: date-time\n        endTime:\n          description: Arrival time at destination\n          type: string\n          format: date-time\n        transfers:\n          description: Number of interchanges\n          type: integer\n          format: int32\n          minimum: 0\n        distance:\n          description: \u003e-\n            Distance in meters over the the complete trip, i.e., including transfer legs.\n          type: integer\n          format: int32\n          minimum: 0\n        legs:\n          description: Legs ot the trip\n          type: array\n          items:\n            $ref: \"#/components/schemas/TripLeg\"\n          minItems: 1\n        operatingDays:\n          $ref: \"#/components/schemas/OperatingDays\"\n        operatingDaysDescription:\n          type: string\n          description: \u003e-\n            Textual description of the operation days, e.g. \"Monday to Friday\" or \"Not on holidays\".\n        situationFullRefs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SituationFullRef\"\n        tripStatus:\n          $ref: \"#/components/schemas/TripStatus\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    TripStatus:\n      type: object\n      properties:\n        unplanned:\n          description: Whether this trip is an additional one that has not been planned.\n          type: boolean\n          default: false\n        cancelled:\n          description: Whether this trip is cancelled and will not be run.\n          type: boolean\n          default: false\n        deviation:\n          description: Whether this trip deviates from the planned service pattern.\n          type: boolean\n          default: false\n        delayed:\n          description: Whether this trip is delayed.\n          type: boolean\n          default: false\n        infeasible:\n          description: Whether this trip cannot be used, due to operational delays and impossible transfers.\n          type: boolean\n          default: false\n\n    TripSpecification:\n      type: object\n      description: \u003e-\n        A minimal trip specification from origin to destination.\n      required:\n        - externalRef\n        - legs # EXT replaces tripLegs, fix to OJP submitted, see https://github.com/VDVde/OJP/issues/179\n      properties:\n        externalRef:\n          description: \u003e-\n            External reference of this trip for referencing purposes. Unique within a trip specification.\n          type: string\n        legs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TripLegSpecification\"\n          minItems: 1\n\n    OperatingDays: ## OJP\n      type: object\n      description: \u003e-\n        Day of public transport operation of which the characteristics are defined in a specific\n        service calendar and which may last more than 24 hours. Provided by OJP.\n      required:\n        - from\n        - until # EXT to renamed to until\n        - pattern\n      properties:\n        from:\n          type: string\n          description: Start date of period\n          format: date\n        until:\n          type: string\n          description: End date of period\n          format: dateTime\n        pattern:\n          type: string\n          description: \u003e-\n            Bit pattern for operating days between start date and end date.\n            The length of the pattern is equal to the number of days from \n            start date to end date. A bit value of \"1\" indicates that an event\n            actually happens on the day that is represented by the bit position.\n\n    TripLeg: ## OJP\n      type: object\n      description: \u003e-\n        A single stage of a trip that is made without change of MODE or service (ie: \n        between each interchange). Provided by OJP.\n      required:\n        - id ## EXT replaces legId, fix to OJP submitted, see https://github.com/VDVde/OJP/issues/181\n      properties:\n        id:\n          description: Id of this trip leg. Unique within trip result. A seqId is a leg id.\n          type: string\n        timedLeg:\n          $ref: \"#/components/schemas/TimedLeg\"\n        transferLeg:\n          $ref: \"#/components/schemas/TransferLeg\"\n        continuousLeg:\n          $ref: \"#/components/schemas/ContinuousLeg\"\n\n    TripLegSpecification:\n      type: object\n      description: \u003e-\n        A minimal trip leg specification.\n      required:\n        - externalRef\n      properties:\n        externalRef:\n          description: \u003e-\n            External reference of this trip leg. Unique within trip result.\n          type: string\n        timedLeg:\n          $ref: \"#/components/schemas/TimedLegSpecification\"\n        transferLeg:\n          $ref: \"#/components/schemas/TransferLeg\"\n        # continuousLeg:\n        #   $ref: \"#/components/schemas/ContinuousLeg\"\n\n    TimedLeg: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        A leg which is bound to a timetabled schedule. Corresponds to a ride. Provided by OJP.\n      required:\n        - start # EXT legBoard renamed to start\n        - end # EXT legAlight renamed to end\n        - service\n      properties:\n        start:\n          $ref: \"#/components/schemas/Board\"\n        intermediates:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Intermediate\"\n        end:\n          $ref: \"#/components/schemas/Alight\"\n        service:\n          $ref: \"#/components/schemas/DatedJourney\"\n        # legAttribute:  # Out of scope\n        #   type: array\n        #   items:\n        #     $ref: \"#/components/schemas/LegAttribute\"\n        operatingDays:\n          $ref: \"#/components/schemas/OperatingDays\"\n        operatingDaysDescription:\n          type: string\n          description: \u003e-\n            Textual description of the operation days, e.g. \"Monday to Friday\" or \"not on holidays\".\n        # legTrack:  # Out of scope\n        #   type: array\n        #   items:\n        #     $ref: \"#/components/schemas/LegTrack\"\n        duration: # EXT add attribute for consistency\n          type: string\n          format: duration\n\n    TimedLegSpecification:\n      type: object\n      description: \u003e-\n        A minimal timed leg specification.\n      required:\n        - start # EXT legBoard renamed to start\n        - end # EXT legAlight renamed to board\n        - service\n      properties:\n        start:\n          $ref: \"#/components/schemas/BoardSpecification\"\n        intermediates:\n          type: array\n          items:\n            $ref: \"#/components/schemas/IntermediateSpecification\"\n        end:\n          $ref: \"#/components/schemas/AlightSpecification\"\n        service:\n          $ref: \"#/components/schemas/DatedJourney\"\n\n    TransferLeg: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        A leg which links other legs of a trip where a transfer between different places is required. \n        Provided by OJP.\n      required:\n        - start # EXT legStart renamed to start\n        - end # EXT legEnd renamed to end\n      properties:\n        continuousMode:\n          $ref: \"#/components/schemas/ContinuousMode\"\n        transferMode:\n          $ref: \"#/components/schemas/TransferMode\"\n        start:\n          description: Stop/Station to board.\n          $ref: \"#/components/schemas/PlaceRef\"\n        end:\n          description: Stop/Station to alight.\n          $ref: \"#/components/schemas/PlaceRef\"\n        timeWindowStart: # Inlined from TimeWindow\n          description: Time at which window begins.\n          type: string\n          format: date-time\n        timeWindowEnd: # Inlined from TimeWindow\n          description: Time at which window ends.\n          type: string\n          format: date-time\n        duration:\n          description: Overall duration of this interchange.\n          type: string\n          format: duration\n          example: \"PT20M\"\n        # walkDuration:  # Out of scope\n        #   description: Walk time as part of the overall interchange duration.\n        #   type: string\n        #   format: duration\n        #   example: \"PT20M\"\n        # bufferTime:  # Out of scope\n        #   description: \u003e-\n        #     Buffer time as part of the overall interchange duration. Buffer times,\n        #     e.g. check in/out times, sometimes are mandatory for using certain\n        #     services as f.e. airplanes, ferries or high speed trains.\n        #   type: string\n        #   format: duration\n        #   example: \"0SM\"\n        # legDescription:  # Out of scope\n        #   type: string\n        # length:  # Out of scope\n        #   type: number\n        #   minimum: 0\n        # pathGuidance:  # Out of scope\n        #   $ref: \"#/components/schemas/PathGuidance\"\n        situationFullRefs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SituationFullRef\"\n\n    ContinuousLeg: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        A leg of a journey that is not bound to a timetable. Provided by OJP.\n      required:\n        - start # EXT legStart renamed to start\n        - end # EXT legEnd renamed to end\n        - service\n      properties:\n        start:\n          description: Stop/Station to board.\n          $ref: \"#/components/schemas/Place\"\n        end:\n          description: Stop/Station to alight.\n          $ref: \"#/components/schemas/Place\"\n        service:\n          $ref: \"#/components/schemas/ContinuousService\"\n        timeWindowStart: # Inlined from TimeWindow\n          description: Time at which window begins.\n          type: string\n          format: date-time\n        timeWindowEnd: # Inlined from TimeWindow\n          description: Time at which window ends.\n          type: string\n          format: date-time\n        duration:\n          description: \u003e-\n            Duration of this leg according to user preferences like walk speed.\n          type: string\n          format: duration\n          example: \"1800S\"\n        # legDescription:  # Out of scope\n        #   type: string\n        # length:  # Out of scope\n        #   type: number\n        #   minimum: 0\n        # pathGuidance:  # Out of scope\n        #   $ref: \"#/components/schemas/PathGuidance\"\n        situationFullRefs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SituationFullRef\"\n\n    ContinuousService: ## OJP\n      type: object\n      description: \u003e-\n        A vehicle movement on a continuous, non-timetabled service.\n        Service of this leg. May be \"walk\" in most cases, but also cycling or taxi etc.\n        Provided by OJP.\n      required:\n        - operatingDayRef\n        - journeyRef\n        - mode\n        - publishedServiceName\n        - originText\n        - destinationText\n      properties:\n        continuousMode:\n          $ref: \"#/components/schemas/ContinuousMode\"\n        individualMode:\n          $ref: \"#/components/schemas/IndividualMode\"\n        operatingDayRef:\n          $ref: \"#/components/schemas/OperationDayRef\"\n        journeyRef:\n          $ref: \"#/components/schemas/JourneyRef\"\n        mode: # Ask Stefan\n          type: string\n          example: \"Ask Stefan\"\n        publishedServiceName:\n          type: string\n          example: \"Circle Line\"\n        originText:\n          type: string\n        destinationText:\n          type: string\n\n    ContinuousMode: ## OJP\n      type: string\n      description: Types of modes that run at any time without a timetable. Provided by OJP.\n      x-extensible-enum:\n        - WALK\n        - DEMAND_RESPONSIVE\n        - REPLACEMENT_SERVICE\n\n    IndividualMode: ## OJP\n      type: string\n      description: Modes which an individual powers themselves (such as walk, cycle). Provided by OJP.\n      x-extensible-enum:\n        - WALK\n        - CYCLE\n        - TAXI\n        - SELF_DRIVE_CAR\n        - OTHERS_DRIVE_CAR\n        - MOTORCYCLE\n        - TRUCK\n        - SCOOTER\n        - RIDE_POOL_CAR\n        - CAR_SHARING\n        - CYCLE_SHARING\n        - SCOOTER_SHARING\n\n    TransferMode: ## OJP\n      type: string\n      description: Modes dedicated to perform transfers. Provided by OJP.\n      x-extensible-enum:\n        - WALK\n        - PARK_AND_RIDE\n        - BIKE_AND_RIDE\n        - CAR_HIRE\n        - BIKE_HIRE\n        - PROTECTED_CONNECTION\n        - GUARANTEED_CONNECTION\n        - REMAIN_IN_VEHICLE\n        - CHANGE_WITHIN_VEHICLE\n        - CHECK_IN\n        - CHECK_OUT\n\n    StopCallStatus: ## OJP\n      type: object\n      description: Status properties for the vehicle call at this stop. Provided by OJP.\n      properties:\n        order:\n          description: Sequence number of this stop in the service pattern of the journey.\n          type: integer\n          format: int32\n          minimum: 1\n        requestStop:\n          description: The vehicle journey calls at this stop only on demand.\n          type: boolean\n          default: false\n        unplannedStop:\n          description: This stop has not been planned by the planning department.\n          type: boolean\n          default: false\n        notServicedStop:\n          description: The vehicle will not call at this stop despite earlier planning.\n          type: boolean\n          default: false\n        noBoardingAtStop:\n          description: Boarding will not be allowed at this stop of this journey.\n          type: boolean\n          default: false\n        noAlightingAtStop:\n          description: Alighting will not be allowed at this stop of this journey.\n          type: boolean\n          default: false\n\n    Board: ## OJP\n      type: object\n      description: \u003e-\n        Describes the the situation at a stop or station at which the passenger boards a Leg\n        of a trip including time-related information. Provided by OJP.\n      #allOf:\n      required:\n        - stopPlaceRef ## EXT stopPlaceRef instead of stopPointRef\n        - stopPlaceName ## EXT stopPlaceName instead of stopPointRef\n        - serviceDeparture\n      properties:\n        stopPlaceRef:\n          $ref: \"#/components/schemas/StopPlaceRef\" ## EXT stopPlaceRef instead of stopPointRef\n        stopPlaceName:\n          type: string\n          example: Luzern\n        plannedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board/alight from the vehicle. According to \n            planned timetable.\n          type: string\n          example: \"3\"\n        estimatedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.\n          type: string\n          example: \"8\"\n        serviceDeparture: # EXT directly inline service time\n          description: \u003e-\n            Describes the departure situation at this leg board stop point (group of attributes\n            of timetabled passing time, estimated passing time, observed passing time).\n          $ref: \"#/components/schemas/ServiceTime\"\n        status:\n          $ref: \"#/components/schemas/StopCallStatus\"\n\n    BoardSpecification:\n      type: object\n      description: Minimal board specification.\n      required:\n        - stopPlaceRef ## EXT stopPlaceRef instead of stopPointRef\n        - serviceDeparture\n      properties:\n        stopPlaceRef:\n          $ref: \"#/components/schemas/StopPlaceRef\" ## EXT stopPlaceRef instead of stopPointRef\n        serviceDeparture:\n          description: \u003e-\n            Describes the departure situation at this leg board stop point (group of attributes\n            of timetabled passing time, estimated passing time, observed passing time).\n          $ref: \"#/components/schemas/ServiceTime\"\n\n    Intermediate: ## OJP\n      type: object\n      description: \u003e-\n        Describes the situation at a stop or station that lies between the Board and \n        Alight stop or station including time-related information. Provided by OJP.\n      #allOf:\n      required:\n        - stopPlaceRef ## EXT stopPlaceRef instead of stopPointRef\n        - stopPlaceName ## EXT stopPlaceName instead of stopPointName\n        - serviceArrival\n        - serviceDeparture\n      properties:\n        stopPlaceRef:\n          $ref: \"#/components/schemas/StopPlaceRef\" ## EXT stopPlaceRef instead of stopPointRef\n        stopPlaceName: ## EXT stopPlaceName instead of stopPointName\n          type: string\n          example: Luzern\n        plannedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board/alight from the vehicle. According to \n            planned timetable.\n          type: string\n          example: \"3\"\n        estimatedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.\n          type: string\n          example: \"8\"\n        serviceArrival: # EXT directly inline service time\n          description: \u003e-\n            Describes the arrival situation at this leg board stop point (group of attributes\n            of timetabled passing time, estimated passing time, observed passing time).\n          $ref: \"#/components/schemas/ServiceTime\"\n        serviceDeparture: # EXT directly inline service time\n          description: \u003e-\n            Describes the departure situation at this leg board stop point (group of attributes\n            of timetabled passing time, estimated passing time, observed passing time).\n          $ref: \"#/components/schemas/ServiceTime\"\n        status:\n          $ref: \"#/components/schemas/StopCallStatus\"\n\n    IntermediateSpecification:\n      type: object\n      description: Minimal intermediate specification.\n      required:\n        - stopPlaceRef ## EXT stopPlaceRef instead of stopPointRef\n        - serviceArrival\n        - serviceDeparture\n      properties:\n        stopPlaceRef:\n          $ref: \"#/components/schemas/StopPlaceRef\" ## EXT stopPlaceRef instead of stopPointRef\n        serviceArrival:\n          description: \u003e-\n            Describes the arrival situation at this leg board stop point (group of attributes\n            of timetabled passing time, estimated passing time, observed passing time).\n          $ref: \"#/components/schemas/ServiceTime\"\n        serviceDeparture:\n          description: \u003e-\n            Describes the departure situation at this leg board stop point (group of attributes\n            of timetabled passing time, estimated passing time, observed passing time).\n          $ref: \"#/components/schemas/ServiceTime\"\n\n    Alight: ## OJP\n      type: object\n      description: \u003e-\n        Describes the situation at a stop or station at which the passenger alights from a Leg \n        of a trip including time-related information. Provided by OJP.\n      #allOf:\n      required:\n        - stopPlaceRef ## EXT stopPlaceRef instead of stopPointRef\n        - stopPlaceName ## EXT stopPlaceName instead of stopPointName\n        - serviceArrival\n      properties:\n        stopPlaceRef:\n          $ref: \"#/components/schemas/StopPlaceRef\" ## EXT stopPlaceRef instead of stopPointRef\n        stopPlaceName:\n          type: string\n          example: Luzern\n        plannedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board/alight from the vehicle. According to \n            planned timetable.\n          type: string\n          example: \"3\"\n        estimatedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.\n          type: string\n          example: \"8\"\n        serviceArrival: # EXT directly inline service time\n          description: \u003e-\n            Describes the arrival situation at this leg board stop point (group of attributes\n            of timetabled passing time, estimated passing time, observed passing time).\n          $ref: \"#/components/schemas/ServiceTime\"\n        status:\n          $ref: \"#/components/schemas/StopCallStatus\"\n\n    AlightSpecification:\n      type: object\n      description: Minimal alight specification\n      required:\n        - stopPlaceRef ## EXT stopPlaceRef instead of stopPointRef\n        - serviceArrival\n      properties:\n        stopPlaceRef:\n          $ref: \"#/components/schemas/StopPlaceRef\" ## EXT stopPlaceRef instead of stopPointRef\n        serviceArrival:\n          description: \u003e-\n            Describes the arrival situation at this leg board stop point (group of attributes\n            of timetabled passing time, estimated passing time, observed passing time).\n          $ref: \"#/components/schemas/ServiceTime\"\n\n    ServiceTime: ## OJP\n      type: object\n      description: \u003e-\n        Contains at least scheduled time, but can contain real time and estimated times. Provided by OJP.\n      required:\n        - timetabledTime\n      properties:\n        timetabledTime:\n          type: string\n          format: date-time\n        estimatedTime:\n          type: string\n          format: date-time\n        observedTime:\n          type: string\n          format: date-time\n\n    DatedJourney: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        Vehicle journey that runs at a specific date. Provided by OJP.\n      required:\n        # - operatingDayRef\n        # - journeyRef\n        # - mode\n        # - publishedServiceName # EXT\n        # - privateMode # EXT\n        - operatorRefs\n        # - originText\n        # - destinationText\n      properties:\n        operatingDayRef:\n          $ref: \"#/components/schemas/OperationDayRef\"\n        # journeyRef:  # Out of scope\n        #   $ref: \"#/components/schemas/JourneyRef\"\n        mode:\n          $ref: \"#/components/schemas/Mode\"\n        productCategory:\n          $ref: \"#/components/schemas/ProductCategory\"\n        publishedServiceName:\n          description: \u003e-\n            Line name or service description as known to the public, f.e. \"512\", \"S8\"\n            or \"Circle Line\" or \"ICE 488\".\n          type: string\n          example: S1\n        vehicleNumbers: # EXT Fix to OJP submitted, see https://github.com/VDVde/OJP/issues/173\n          type: array\n          items:\n            $ref: \"#/components/schemas/VehicleNumber\"\n        lineNumbers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/LineNumber\"\n        operatorRefs:\n          description: \u003e-\n            Reference to transport operators.\n            For UIC see: https://unioninternationalcheminsdefer.github.io/OSDM/spec/catalog-of-code-lists/\n\n            As a leg can be operated by more than operator we model it as an array here.\n          type: array\n          items:\n            type: string\n            example:\n              - \"urn:uic:rics:1185:11\"\n              - \"urn:uic:rics:1185:72\"\n              - \"urn:uic:rics:1185:48\"\n        serviceStatus:\n          $ref: \"#/components/schemas/ServiceStatus\"\n        situationFullRefs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SituationFullRef\"\n\n    Mode: ## OJP\n      type: object\n      description: \u003e-\n        A method of transportation such as bus, rail, etc. Provided by OJP.\n      required:\n        - ptMode\n      properties:\n        ptMode: # EXT\n          description: \u003e-\n            TAP-TSI/UIC contains a sensible subset of SIRI Transport Modes.\n          type: string\n          x-extensible-enum:\n            - HIGH_SPEED_TRAIN\n            - HISTORIC_TRAIN\n            - INTERCITY\n            - REGIONAL\n            - INTERREGIONAL\n            - URBAN\n            - TRAM\n            - UNDERGROUND\n            - NIGHT_TRAIN\n            - SHARED_TAXI\n            - MOTOR_RAIL\n            - MOUNTAIN_TRAIN\n            - PLANE\n            - COACH_GROUP\n            - SHIP\n            - BUS\n        name:\n          description: Name of the mode\n          type: string\n          example: rail\n        shortName:\n          description: Short name or acronym of the mode\n          type: string\n          example: S\n        description:\n          description: Additional text that further describes the mode\n          type: string\n\n    ProductCategory: ## OJP\n      type: object\n      description: \u003e-\n        Product category based on NeTEx/SIRI. A product category is a classification for vehicle journeys\n        to express some common properties of journeys for marketing and fare products. Provided by OJP.\n      required:\n        - name\n        - shortName\n        - productCategoryRef\n      properties:\n        name:\n          description: \u003e-\n            Full name of this product category, e.g. \"TGV Lyria\" in Switzerland and France.\n            UIC: Long name of Service Brand\n          type: string\n          example: TGV Lyria\n        shortName:\n          description: \u003e-\n            Short name or acronym of the product category, likely to be published, e.g. \"TGV\"\n            UIC: Abbreviation of Service Brand\n          type: string\n          example: TGV\n        productCategoryRef:\n          $ref: \"#/components/schemas/ProductCategoryRef\"\n\n    ServiceStatus:\n      type: object\n      description: \u003e-\n        Parameters which describe the current status of a dated vehicle journey.\n        Provided by OJP.\n      properties:\n        unplanned:\n          type: boolean\n          description: Whether this trip is an additional one that has not been planned.\n          default: false\n        cancelled:\n          type: boolean\n          description: Whether this trip is cancelled and will not be run.\n          default: false\n        deviation:\n          type: boolean\n          description: Whether this trip deviates from the planned service pattern.\n          default: false\n        occupancy:\n          type: string\n          description: \u003e-\n            Passenger load status on vehicle. If omitted, not known. \n            Equivalent to siri:OccupancyEnumeration which describes three values: \n            \"full\", \"seatingAvailable\" and \"standingAvailable\".\n\n    Place: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        A geographic place of any type which may be specified as the origin or destination of a trip. Provided by OJP.\n      # allOf:\n      #- oneOf:\n      #  - $ref: \"#/components/schemas/AddressStructure\"\n      #  - $ref: \"#/components/schemas/PointOfInterest\"\n      #  - $ref: \"#/components/schemas/StopPlace\"\n      #  - $ref: \"#/components/schemas/StopPointStructure\"  # Out of scope\n      #  - $ref: \"#/components/schemas/TopographicPlaceStructure\"  # Out of scope\n      #  - $ref: \"#/components/schemas/FareConnectionPoint # EXT OSDM extension\n      #- $ref: \"#/components/schemas/GeoPosition\"\n      required:\n        - id\n        # - name  ## EXT\n        # - geoPosition  ## EXT\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            id  defining the place. The code is provided as URN, relative URNs are allowed with base path urn:uic:stn \"0850000\"\n          example: \"urn:uic:stn:8500000\"\n        name:\n          type: string\n          example: Zürich HB\n        address:\n          $ref: \"#/components/schemas/Address\"\n        pointOfInterest:\n          $ref: \"#/components/schemas/PointOfInterest\"\n        stopPlace:\n          $ref: \"#/components/schemas/StopPlace\"\n        # stopPoint:\n        #  - $ref: \"#/components/schemas/StopPointStructure\"  # Out of scope\n        # topographicPlace:\n        #  - $ref: \"#/components/schemas/TopographicPlaceStructure\"  # Out of scope\n        fareConnectionPoint: # EXT OSDM extension for virtual border points\n          $ref: \"#/components/schemas/FareConnectionPoint\"\n        geoPosition:\n          $ref: \"#/components/schemas/GeoPosition\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    Address: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        A descriptive data associated with a place that can be used to describe the unique geographical context of a\n        place for the purposes of identifying it. may be refined as either a road address, a postal address or both.\n        Provided by OJP.\n      # allOf:\n      required:\n        - code # EXT code instead of addressCode, see https://github.com/VDVde/OJP/issues/183\n        - name # EXT name instead of addressName, see https://github.com/VDVde/OJP/issues/183\n      properties:\n        code:\n          description: id of the address\n          type: string\n          example: NL:1916200000022621\n        # privateCode:  # Out of scope\n        #   description: Code of this address in private/foreign/proprietary coding schemes.\n        #   $ref: \"#/components/schemas/PrivateCode\"\n        name:\n          description: Name or description of address for use in passenger information.\n          type: string\n          example: Oude Trambaan 7, 2265CA Leidschendam, Nederland\n        # nameSuffix:  # Out of scope\n        #   description: House number of the address. If none is given, either a crossing street can be given, or the whole street is meant.\n        #   type: string\n        # - $ref: \"#/components/schemas/AddressDetail\"\n        countryName:\n          description: Country of the address.\n          type: string\n          example: The Netherlands\n        countryCode:\n          $ref: \"#/components/schemas/CountryCode\"\n        postCode:\n          description: Postal code of the address.\n          type: string\n          example: 2265CA\n        city: # EXT\n          description: City name\n          type: string\n          example: Leidschendam\n        topographicPlaceName:\n          description: \u003e-\n            TopographicPlace name of the address. If set it should at least contain the city name.\n          type: string\n          example: Leidschendam\n        # topographicPlaceRef:  # Out of scope\n        #   description: If at least one is set, only place objects within the given localities are allowed.If at least one is set, only place objects within the given localities are allowed.Reference to a TopographicPlace\n        #   $ref: \"#/components/schemas/TopographicPlaceRef\"\n        street:\n          description: Street name of the address.\n          type: string\n          example: Oude Trambaan\n        houseNumber:\n          description: House number of the address. If none is given, either a crossing street can be given, or the whole street is meant.\n          type: string\n          example: 7\n        # crossRoad:  # Out of scope\n        #   description: Crossing. This can be used to be more specific without using house numbers.\n        #   type: string\n\n    CountryCode:\n      type: string\n      description: ISO country code (2 alpha), relative URNs with base urn:iso:std:iso:3166 are recommended\n      example: DE\n\n    PointOfInterest: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        A type of place to or through which passengers may wish to navigate as part of\n        their journey and which is modelled in detail by journey planners. Provided by OJP.\n      required:\n        - code # EXT code instead of pointOfInterestCode, see https://github.com/VDVde/OJP/issues/183\n        - name # EXT name instead of pointOfInterestName, see https://github.com/VDVde/OJP/issues/183\n      properties:\n        code:\n          description: id of the Point of Interest.\n          type: string\n        name:\n          description: Name or description of point of interest for use in passenger information.\n          type: string\n          example: Park Rozenrust\n        # nameSuffix:  # Out of scope\n        #   description: \u003e-\n        #     Additional description of the point of interest that may be appended to the name if enough space\n        #     is available. F.e. \"Exhibition Center\".\n        #   type: string\n        # pointOfInterestCategory:  # Out of scope\n        #   description: Categories this POI is associated with. Order indicates descending relevance.\n        #   $ref: \"#/components/schemas/PointOfInterestCategory\"\n        # privateCode:  # Out of scope\n        #   description: Code of this address in private/foreign/proprietary coding schemes.\n        #   $ref: \"#/components/schemas/PrivateCode\"\n        # topographicPlaceRef:  # Out of scope\n        #   description: \u003e-\n        #     If at least one is set, only place objects within the given localities are allowed. If at least one is set,\n        #     only place objects within the given localities are allowed. Reference to a TopographicPlace.\n        #   $ref: \"#/components/schemas/TopographicPlaceRef\"\n\n    PointOfInterestCategory: ## OJP\n      type: object\n      description: \u003e-\n        A categorisation of points of interest in respect of the activities undertaken at them \n        (defined by key-value-pairs). Provided by OJP.\n      # oneOf:\n      #  required:\n      #   - pointOfInterestClassification  #EXT no longer mandatory\n      properties:\n        osmTags:\n          description: Open Street Map tag structure (key-value)\n          type: array\n          items:\n            $ref: \"#/components/schemas/OsmTag\"\n        #    required:\n        #      - osmTag\n        #  - type: object\n        #    properties:\n        pointOfInterestClassifications:\n          description: \u003e-\n            Classification of the POI (when it is not from OSM). The codification of the \n            classification Id may include de codification source (for example \n            \"IGN:[classificationCode]\")\n          type: array\n          items:\n            type: string\n\n    OsmTag: ## OJP\n      type: object\n      description: \u003e-\n        Structure of an Open Street Map tag. Provided by OJP.\n      properties:\n        tag:\n          type: string\n          description: Name of Open Street Map tag (amenity, leisure, tourism, bike, ...)\n          example: name\n        value:\n          type: string\n          description: Value for Open Street Map tag (charging_station, hostel, yes, ...)\n          example: Rozenrust\n      required:\n        - tag\n        - value\n\n    StopPlace: ## OJP # Reduced scope\n      type: object\n      description: \u003e-\n        A place extended by accessibility limitation properties and some attributes of the associated equipment, \n        comprising one or more places where vehicles may stop and where passengers may board or leave vehicles \n        or prepare their trip, and which will usually have one or more wellknown names. Provided by OJP.\n      #allOf:\n      required:\n        - ref # EXT ref instead of stopPlaceRef\n        - name # EXT name instead of stopPlaceName\n      properties:\n        ref:\n          description: Reference to a Stop Place\n          $ref: \"#/components/schemas/StopPlaceRef\"\n        name:\n          description: Name of this stop place for use in passenger information.\n          type: string\n          example: Zürich HB\n        # nameSuffix:  # Out of scope\n        #   description: Additional description of the stop place that may be appended to the name if enough space is available.\n        #   type: string\n        #   example: Exhibition Center\n        # privateCode:  # Out of scope\n        #   description: Code of this stop place in private/foreign/proprietary coding schemes.\n        #   $ref: \"#/components/schemas/PrivateCode\"\n        # topographicPlaceRef:  # Out of scope\n        #   description: If at least one is set, only place objects within the given localities are allowed.If at least one is set, only place objects within the given localities are allowed.Reference to a TopographicPlace\n        #   $ref: \"#/components/schemas/TopographicPlaceRef\"\n        # - $ref: \"#/components/schemas/StopAttributes\" # Out of scope\n\n    PlaceRef: ### OJP\n      type: object\n      additionalProperties: false\n      discriminator:\n        propertyName: objectType\n      required:\n        - objectType\n      properties:\n        objectType:\n          description: Attribute is used as discriminator for inheritance between data types.\n          type: string\n\n    StopPlaceRef: ## OJP\n      description: \u003e-\n        Reference to a Stop Place using URNs to define code.\n        For UIC see UIC MERITS/TAP-TSI station codes. Provided by OJP.\n      allOf:\n        - $ref: \"#/components/schemas/PlaceRef\"\n        - type: object\n          properties:\n            stopPlaceRef:\n              type: string\n              example: urn:uic:stn:8503000\n            name:\n              type: string\n          required:\n            - stopPlaceRef\n\n    PointOfInterestRef: ## OJP\n      description: \u003e-\n        Reference to a Point of Interest. Provided by OJP.\n      allOf:\n        - $ref: \"#/components/schemas/PlaceRef\"\n        - type: object\n          properties:\n            pointOfInterestRef:\n              type: string\n            name:\n              type: string\n          required:\n           - pointOfInterestRef\n\n    AddressRef: ## OJP\n      description: \u003e-\n        Reference to an Address.\n      allOf:\n        - $ref: \"#/components/schemas/PlaceRef\"\n        - type: object\n          properties:\n            addressRef:\n              type: string\n            name:\n              type: string\n          required:\n           - addressRef\n\n    FareConnectionPointRef:\n      description: \u003e-\n        Reference to a Fare Connection Point.\n      allOf:\n        - $ref: \"#/components/schemas/PlaceRef\"\n        - type: object\n          properties:\n            fareConnectionPoint:\n              $ref: \"#/components/schemas/FareConnectionPoint\"\n            name:\n              type: string\n          required:\n           - fareConnectionPoint\n\n    ProductCategoryRef: ## OJP\n      description: \u003e-\n        Reference to a product category. Product categories should be defined once and used\n        uniformly in all channels (e.g. NeTEx, SIRI, OJP). Provided by OJP.\n      type: string\n      example:\n        - \"urn:uic:sbc:76\"\n        - \"urn:uic:sbc:43\"\n\n    OperationDayRef: ## OJP\n      type: string\n      description: Reference to an operating day. Provided by OJP.\n      example: \"OperatingDay:12345\"\n\n    JourneyRef: ## OJP\n      type: string\n      description: Reference to a journey. Provided by OJP.\n      example: \"ServiceJourney:1\"\n\n    SituationFullRef: ## OJP\n      type: string\n      description: \u003e-\n        Reference to situation message. Message details might be found in response \n        context or through other communication channels. Provided by OJP.\n\n    VehicleNumber:\n      type: string\n      description: \u003e-\n        The vehicle number(s) of the vehicle that runs this timed leg. On some legs a vehicle can\n        have multiple vehicle numbers, e.g. if it is split into two trains at a intermediate stop.\n        E.g. the vehicle numbers of \"TGV 9218\", \"TH 9340\" or \"ICE 15\".\n        For backwards compatibility with Hermes/Hosa the length of the string must be restricted\n        to 5 characters. If's longer, it is not possible to use the H2O converter.\n      example:\n        - \"9218\"\n        - \"9340\"\n        - \"15\"\n\n    LineNumber:\n      type: string\n      description: \u003e-\n        Especially on regional traffic, a vehicle is defined by a line number. \n        E.g. the line numbers of \"S 52\" or \"B 19\".\n      example:\n        - \"52\"\n        - \"19\"\n\n    OfferSearchCriteria:\n      type: object\n      properties:\n        freeText:\n          type: string\n          description: \u003e-\n            Allows the API consumer to provide a free-text based search. Usage of the provided\n            text in the search process is left to the OSDM provider but should be documented.\n        flexibilities:\n          description: \u003e-\n            Defines the flexibility levels desired of the fares returned.\n            This refers to the after sales flexibility levels as defined in IRS-90918-10\n          type: array\n          items:\n            $ref: \"#/components/schemas/Flexibility\"\n        comfortClasses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ComfortClass\"\n          description: \u003e-\n            The classes returned might be different from the requested classes.\n        serviceClassTypes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ServiceClassType\"\n          description: \u003e-\n            The classes returned might be different from the requested classes.\n          maxItems: 4\n        requestedOfferParts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferPartType\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n          description: The currency returned might be different from the one requested.\n\n    OfferPartType:\n      type: string\n      description: \u003e-\n        Allows to request offerparts of a certain type. \n        To support H/H use [\"RESERVATION\", \"ANCILLARY\"].\n        Default is to get search for offers of all types.\n      enum:\n        - ADMISSION\n        - RESERVATION\n        - ANCILLARY\n        - FARE_ADMISSION\n        - FARE_RESERVATION\n        - FARE_ANCILLARY\n        - ALL\n\n    TripOfferRequest:\n      type: object\n      description: \u003e-\n        Defines the parameters needed to request an offer. Either a tripSearchCriteria\n        or a list of trip specifications can be passed in to request trip offer.\n        If you are searching for fares you pass in the complete trip and the use the \n        returnSearchCriteria to define which part you need fares (including virtual \n        border points).\n      properties:\n        tripSpecifications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TripSpecification\"\n        tripSearchCriteria:\n          $ref: \"#/components/schemas/TripSearchCriteria\"\n        returnSearchParameters:\n          type: object\n          description: \u003e-\n            This property can be used in case a return trip is being requested. \n            This will allow to benefit from return-specific fares or product\n          properties:\n            inwardReturnDate:\n              type: string\n              format: date-time\n              description: \u003e-\n                Needs to be provided when creating the collection of outward travels so that the\n                provider knows when a return travel can be expected and propose appropriate\n                product and fares.\n            outwardTripOfferCollectionId:\n              type: string\n              description: \u003e-\n                Needs to be provided when creating the collection of inward travels so that the provider\n                can relate the inward travels to the outward travels context.\n            outwardOfferTag:\n              type: string\n              description: \u003e-\n                Needs to be provided when creating the collection of inward travels so that the provider\n                knows what the outward offer is and and propose compatible offers only if desired or mandatory.\n        requestedFulfillmentOptions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentOption\"\n        passengerSpecifications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PassengerSpecification\"\n        promotionCodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PromotionCode\"\n        offerSearchCriteria:\n          $ref: \"#/components/schemas/OfferSearchCriteria\"\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. Proposed default ALL\n          type: array\n          items:\n            type: string\n            enum:\n              - ALL\n              - TRIPOFFERS\n              - TRIPOFFERS.TRIP\n              - TRIPOFFERS.TRIP.PLACES\n              - TRIPOFFERS.OFFERS\n              - TRIPOFFERS.OFFERS.OFFERPARTS\n              - TRIPOFFERS.PASSENGERS\n              - NONE\n          maxItems: 5\n\n    TripOffersCollectionResponse:\n      type: object\n      required:\n        - id\n        - tripOffers\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        id:\n          type: string\n        tripOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TripOffer\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    TripOfferResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        tripOffer:\n          $ref: \"#/components/schemas/TripOffer\"\n\n    TripOffer:\n      type: object\n      required:\n        - id\n        - trip\n        - offers\n        - passengers\n      properties:\n        id:\n          type: string\n        summary:\n          type: string\n          description: A human-readable description of the trip offer.\n          example: Trip offer for Bruxelles-Midi 2022-07-01 10:05 CET, 44 €, full flexible\n        trip:\n          $ref: \"#/components/schemas/Trip\"\n        offers:\n          type: array\n          description: \u003e-\n            Non trip offers like day passes can be returned as up- or cross-selling items\n            to trip offers.\n          items:\n            discriminator:\n              propertyName: offerType\n            oneOf:\n              - $ref: \"#/components/schemas/Offer\"\n              - $ref: \"#/components/schemas/NonTripOffer\"\n          minItems: 1\n        passengers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Passenger\"\n          minItems: 1\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    RequestedInformation:\n      type: string\n      description: \u003e-\n        Boolean-expression indicating the data that must be set in the data\n        model in order to proceed to next step of the process.\n\n    OfferSummary:\n      type: object\n      required:\n        - minimalPrice\n        - overallServiceClass\n        - overallFlexibility\n      description: \u003e-\n        The offer summary indicates the most relevant service class, level, flexibility or accommodation \n        that describe this offer, but this does not imply that these values exactly apply to all parts of\n        the offer. \n        Let's consider, as a simplified example, a trip composed of two legs, one with both 1st and \n        2nd class, and one with only 2nd. \n        On this trip, the railway is expected to propose one offer with overallServiceClass FIRST composed \n        of one admission in 1st class on the first legs and one admission in 2nd class on the second one, \n        plus a second offer with overallServiceClass SECOND composed of two second class admissions.\n        Likewise for all 'overall' attributes. The purpose of these attributes is to convey to the client\n        system the service class, level, flexibility and accommodation that best represent this offer so to\n        facilitate presentation to the final user.\n      properties:\n        minimalPrice:\n          $ref: \"#/components/schemas/Price\"\n        overallServiceClass:\n          $ref: \"#/components/schemas/ServiceClass\"\n        overallComfortClass:\n          $ref: \"#/components/schemas/ComfortClass\"\n        overallAccommodationType:\n          $ref: \"#/components/schemas/AccommodationType\"\n        overallAccommodationSubType:\n          $ref: \"#/components/schemas/AccommodationSubType\"\n        overallFlexibility:\n          $ref: \"#/components/schemas/Flexibility\"\n\n    OfferResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        offer:\n          oneOf:\n            - $ref: \"#/components/schemas/Offer\"\n            - $ref: \"#/components/schemas/NonTripOffer\"\n          discriminator:\n            propertyName: offerType\n\n    Offer:\n      description: \u003e-\n        An offer for a given leg or trip.\n      type: object\n      required:\n        - id\n        - offerType\n      properties:\n        id:\n          type: string\n        offerType:\n          type: string\n          enum:\n            - Offer\n        summary:\n          type: string\n          description: A human-readable description of the Offer.\n          example: Bruxelles-Midi - Paris-Nord 2022-07-01 10:05 CET, Normal Fare, 50 €\n        offerSummary:\n          $ref: \"#/components/schemas/OfferSummary\"\n        priceGuaranteedUntil:\n          type: string\n          format: date-time\n          description: \u003e-\n            Indicates until when the price for the given offer is guaranteed.\n        isReusable:\n          type: boolean\n          default: false\n          description: \u003e-\n            Indicates whether the offerId can be used in more than one booking.\n        offerTag:\n          type: object\n          description: \u003e-\n            The offerTag can/must (depending on the mandatory flag) be used in some cases to restrict the \n            set of offers returned in a subsequent and related offer search to only compatible ones.\n            Note the offerTag does not need to be unique.\n          properties:\n            id:\n              type: string\n            isMandatory:\n              type: boolean\n              default: false\n        coveredLegIds:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            Indicate which legs are covered by the specific offer. Not used for fares.\n        returnTags:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            List of tags (and their type) that allow identifying sets of compatible offers when booking a return trip\n            involving return-specific fares. All returnTags must be present in the counterpart offer to allow combination\n            If no tag is provided, there is no return constraint on this specific offer.\n        tripTags:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            List of tags (and their type) that allow identifying sets of compatible offers when trying to combine multiple offers covering one single trip. \n            At least one (not all) tripTags must be in common to allow combination\n            If no tag is provided, there is no trip constraint on this specific offer.\n        appliedThroughTicketTags:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            the list of all through ticket tags that were effectively used in building or booking the offer.\n            Cross-checking this list with the products, the actual groupings applied can be identified.\n        requestedInformation:\n          $ref: \"#/components/schemas/RequestedInformation\"\n        availableFulfillmentTypes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentType\"\n        trip:\n          $ref: \"#/components/schemas/Trip\"\n          description: \u003e-\n            This trip will be included in the offer if the offer is part of the booking.\n        validFrom:\n          type: string\n          format: date-time\n          description: \u003e-\n            Defines the minimum validity period of the trip booked, meaning the period \n            during which it will be possible to travel with the fulfillments for this offer.\n        validUntil:\n          type: string\n          format: date-time\n          description: \u003e-\n            Defines the minimum validity period of the trip booked, meaning the period \n            during which it will be possible to travel with the fulfillments for this offer.\n        admissions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Admission\"\n        reservations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Reservation\"\n        ancillaries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Ancillary\"\n        fees:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fee\"\n        fares:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FareOnline\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    BookedOffer:\n      description: \u003e-\n        The attribute 'offerSummary' is meaningful at trip-offer-collection response time only.\n      type: object\n      properties:\n        id:\n          type: string\n        summary:\n          type: string\n          description: A human-readable description of the booked offer.\n          example: Bruxelles-Midi - Paris-Nord 2022-07-01 10:05 CET, Normal Fare, 50 €\n        coveredLegIds:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            Indicate which legs are covered by the specific offer. Not used for fares.\n        appliedThroughTicketTags:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            All through ticket tags that were effectively used in building or booking the offer.\n            Cross-checking this list with the products, the actual groupings applied can be identified.\n        trip:\n          $ref: \"#/components/schemas/Trip\"\n          description: \u003e-\n            This trip will be included in the offer if the offer is part of the booking.\n        admissions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Admission\"\n        reservations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Reservation\"\n        ancillaries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Ancillary\"\n        fees:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fee\"\n        fares:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FareOnline\"\n      required:\n        - id\n\n    ComfortClass:\n      description: \u003e-\n        Generic class classification, mostly used to harmonize choice and\n        representation across multiple carriers.\n      type: string\n      x-extensible-enum:\n        - FIRST\n        - SECOND\n    Flexibility:\n      type: string\n      x-extensible-enum:\n        - FULL_FLEXIBLE\n        - SEMI_FLEXIBLE\n        - NON_FLEXIBLE\n\n    CommonOfferPartAttributes:\n      type: object\n      properties:\n        price:\n          $ref: \"#/components/schemas/Price\"\n        pricingMode:\n          type: string\n          description: Proposed default INDIVIDUAL\n          enum:\n            - COLLECTIVE\n            - INDIVIDUAL\n        appliedReductions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CardReference\"\n        appliedPromotionCodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PromotionCode\"\n        passengerIds:\n          type: array\n          items:\n            description: Id of the passenger\n            type: string\n        providerBookingReference:\n          type: string\n          description: \u003e-\n            The booking reference of the booking the offer part is in on the provider side.\n        finalProviderBookingReference:\n          type: string\n          description: \u003e-\n            The booking reference of the order the offer part is in on the final provider \n            side = the provider actually hosting or allocating  the product.\n        availableFulfillmentOptions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentOption\"\n        validFrom:\n          type: string\n          format: date-time\n          description: Validity of offer towards passenger\n        validUntil:\n          type: string\n          format: date-time\n          description: Validity of offer towards passenger\n        numericAvailability:\n          type: integer\n          format: int32\n          description: \u003e-\n            If supported by the allocator system, this returns the number of remaining available\n            offerparts, i.e. admissions, reservation or ancillaries.\n        refundable:\n          type: string\n          description: \u003e-\n            If set to YES the offerpart is refundable without a fee before the day of departure.\n            NO when not refundable or refundable with 100% fee, WITH_CONDITIONS in all other cases.\n          enum:\n            - YES\n            - NO\n            - WITH_CONDITIONS\n        exchangeable:\n          type: string\n          description: \u003e-\n            If set to YES the offerpart is exchangeable without a fee before the day of departure. \n            NO when not exchangeable or exchangeable with 100% fee, WITH_CONDITIONS in all other cases.\n          enum:\n            - YES\n            - NO\n        afterSaleConditions:\n          type: array\n          description: Fine grained specification of the after sale condition of the booking.\n          items:\n            $ref: \"#/components/schemas/AfterSaleCondition\"\n        products:\n          type: array\n          description: \u003e-\n            In offer mode, in almost all cases exactly one product is referenced. Only on some French\n            trips consisting of a TGV and a TER two products need to be used.\n            In fare mode, no product exists as first needs to created from the different fares.\n          items:\n            type: object\n            properties:\n              product:\n                $ref: \"#/components/schemas/Product\"\n              legIds:\n                description: indices of the legs in the trip given by the provider of the offer\n                type: array\n                items:\n                  type: string\n      required:\n        - price\n        - passengerIds\n        - validFrom\n        - refundable\n        - exchangeable\n\n    AfterSaleCondition:\n      type: object\n      properties:\n        condition:\n          $ref: \"#/components/schemas/AfterSaleConditionType\"\n        validFrom:\n          type: string\n          format: date-time\n        validUntil:\n          type: string\n          format: date-time\n        afterSaleFee:\n          $ref: \"#/components/schemas/Price\"\n\n    AfterSaleConditionType:\n      type: string\n      x-extensible-enum:\n        - PLACE_CHANGE\n        - EXCHANGE\n        - REFUND\n\n    ProductCollectionResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        products:\n          type: array\n          description: The list of all products available to the caller.\n          items:\n            $ref: \"#/components/schemas/Product\"\n\n    ProductResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        product:\n          $ref: \"#/components/schemas/Product\"\n\n    Product:\n      type: object\n      description: \u003e-\n        Structured description of the product, its name, comfort and sales / after-sales conditions\n      required:\n        - id\n        - code\n      properties:\n        id:\n          type: string\n          description: id of the product\n        summary:\n          type: string\n          description: A human-readable description of the product.\n          example: TGV Lyria Loisir 2\n        code:\n          type: string\n          description: \u003e-\n            The product code expressed in the provider system (could be a\n            mapping from an even lower-level provider).\n          example: PT00AD\n        description:\n          type: string\n          description: Textual description of the product.\n          example: Loisir Non-flex Adult Fare\n        conditions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Condition\"\n          description: \u003e-\n            Structured description of the sales or after-sales conditions.\n        serviceClass:\n          $ref: \"#/components/schemas/ServiceClass\"\n        comfortClass:\n          $ref: \"#/components/schemas/ComfortClass\"\n        isTrainBound:\n          type: boolean\n          default: false\n        isReturnProduct:\n          type: boolean\n          default: false\n        fulfillmentOptions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentOption\"\n        serviceConstraintText:\n          type: string\n        carrierConstraintText:\n          type: string\n        tariff:\n          type: string\n          description: \u003e-\n            Mapping to Tariff 42 of IRS-90918-3 (Hermes/Hosa). Helps the H2O converter in mapping\n            offers to a requested tariff. See legacyReservationParameter.tariff in OSDM offline.\n        throughTicketTags:\n          type: array\n          items:\n            type: string\n          description: \u003e-\n            List of tags (and their type) that allow identifying sets of offers for which related \n            contracts can be grouped into one through ticket.\n        combinationTags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CombinationTag\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    CombinationTag:\n      type: object\n      description: \u003e-\n        Tag to indicate that some products from a provider can be sold only when in conjunction\n        with product(s) from another provider using the same tag. At least one, not all, \n        combinationTags must be in common to allow combination. No combinationTags indicate \n        that there are no combination constraints on the product.\n      properties:\n        id:\n          type: string\n        needsToBeCombined:\n          description: \u003e-\n            If false it means that this product can be sold also when not in conjunction with\n            a product with the same tag. This is needed to propose specific products from one \n            provider that depend on public ones of another.\n          type: boolean\n          default: false\n\n    FulfillmentMediaType:\n      type: string\n      description: \u003e-\n        Fulfillment types. RCT2, RCCST and UIC_PDF are official UIC standards.\n      x-extensible-enum:\n        - RCT2\n        - RCCST\n        - UIC_PDF\n        - PDF_A4\n        - PKPASS\n        - TICKETLESS\n\n    Admission:\n      type: object\n      description:\n        An admission represents a travel right, or the entitlement to travel onboard a train between\n        the given origin and destination, following the given route. It does not include a seat reservation.\n      required:\n        - id\n        - commonOfferPartAttributes\n      properties:\n        id:\n          type: string\n        commonOfferPartAttributes:\n          $ref: \"#/components/schemas/CommonOfferPartAttributes\"\n        isReservationRequired:\n          type: boolean\n        reservations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferPartReference\"\n        ancillaries:\n          type: array\n          items:\n            type: object\n            properties:\n              relationType:\n                type: string\n                enum:\n                  - OPTIONAL\n                  - INCLUDED\n              ancillary:\n                $ref: \"#/components/schemas/OfferPartReference\"\n        fees:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferPartReference\"\n\n    SelectedPlaces:\n      type: object\n      description: \u003e-\n        place selection options and selected options in an offer\n        - reference place for adjacent reservation\n        - selected optional place options\n        - selected places from a graphical place selection (coach and places)\n      properties:\n        referencePlace:\n          type: object\n          description: reference place for an adjacent reservation\n          properties:\n            placeNumber:\n              type: string\n            coachNumber:\n              type: string\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SelectedOption\"\n        coaches:\n          description: selected coach and places for graphical reservation\n          type: array\n          items:\n            $ref: \"#/components/schemas/SelectedCoach\"\n\n    Reservation:\n      type: object\n      description: \u003e-\n        Reservation includes the reference to the in the initial offer. \n        The offer needs to be updated with the selected places before the confirmation\n        which creates the reservation details including the reserved places.\n      required:\n        - id\n        - commonOfferPartAttributes\n        - reservationDetail\n      properties:\n        id:\n          type: string\n        commonOfferPartAttributes:\n          $ref: \"#/components/schemas/CommonOfferPartAttributes\"\n        reservationDetail:\n          $ref: \"#/components/schemas/ReservationDetail\"\n        placeSelection:\n          $ref: \"#/components/schemas/SelectedPlaceOption\"\n        optionality:\n          description: \u003e-\n            INCLUDED: the reservation is included in the offer\n            MANDATORY: the reservation is mandatory for the booking\n            OPTIONAL: the reservation is not included but can be added optionally\n          type: string\n          enum:\n            - INCLUDED\n            - MANDATORY\n            - OPTIONAL\n        ancillaries:\n          type: array\n          items:\n            type: object\n            properties:\n              relationType:\n                type: string\n                enum:\n                  - OPTIONAL\n                  - INCLUDED\n              ancillary:\n                $ref: \"#/components/schemas/OfferPartReference\"\n        fees:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferPartReference\"\n\n    Ancillary:\n      type: object\n      required:\n        - id\n        - commonOfferPartAttributes\n      properties:\n        id:\n          type: string\n        commonOfferPartAttributes:\n          $ref: \"#/components/schemas/CommonOfferPartAttributes\"\n        optionality:\n          description: \u003e-\n            INCLUDED: the ancillary is included in the offer but is not mandatory \n            OPTIONAL: the ancillary is not included but can be optionally added\n          type: string\n          enum:\n            - INCLUDED\n            - OPTIONAL\n        category:\n          type: string\n        fees:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferPartReference\"\n\n    Fee:\n      type: object\n      required:\n        - id\n        - price\n      properties:\n        id:\n          type: string\n        summary:\n          type: string\n          description: A human-readable description of the fee.\n          example: Reservierungsentgelt, 5 €\n        price:\n          $ref: \"#/components/schemas/Price\"\n        applicability:\n          type: string\n          x-extensible-enum:\n            - BOOKING\n            - TRIP\n            - OFFERPART\n        providerBookingReference:\n          type: string\n          description: \u003e-\n            The booking reference of the booking the offer part is in on the provider side.\n        refundable:\n          type: string\n          enum:\n            - YES\n            - NO\n            - WITH_CONDITIONS\n        conditions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Condition\"\n          description: \u003e-\n            Structured description of the sales or after-sales conditions.\n        productCode:\n          type: string\n          description: \u003e-\n            The product code expressed in the provider system (could be a\n            mapping from an even lower-level provider).\n          example: Reservierungsentgelt\n\n    PromotionCode:\n      type: object\n      description: \u003e-\n        The promotion code is a token that reduces the price at POST booking time OR\n        Token that reduces the price at POST trip-offer-collection time OR\n        Token to receive offers that are not available without it.\n      properties:\n        code:\n          description: \u003e-\n            The code issued by the issuer\n          type: string\n          example: SPRING_DISCOUNT\n        issuer:\n          description: \u003e-\n            The party that issues the promotion code, in case of a railway it's its RICS code\n          type: string\n\n    OfferPartReference:\n      type: object\n      description: \u003e-\n        References all the offer part elements in an uniform format.\n        In its part, an OfferPartReference can refer to reservation, admission, ancillary or fee.\n      required:\n        - id\n      properties:\n        id:\n          type: string\n        summary:\n          type: string\n          description: A human-readable description of the offer part reference.\n          example: ICE Wifi on Board of train ICE 3, 2022-07-11\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    BookingRequest:\n      type: object\n      required:\n        - offers\n      properties:\n        purchaser:\n          $ref: \"#/components/schemas/PurchaserSpecification\"\n        offers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferSelection\"\n          description: \u003e-\n            The list of offers that need to be provisionally booked, with possibly the reservations and ancillaries associated that should be booked as well.\n        promotionCodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PromotionCode\"\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. \n          type: array\n          items:\n            type: string\n            description: Proposed default ALL\n            enum:\n              - ALL\n              - BOOKEDOFFERS\n              - BOOKEDOFFERS.TRIPS\n              - BOOKEDOFFERS.TRIPS.PLACES\n              - BOOKEDOFFERS.OFFERPARTS\n              - PASSENGERS\n              - REFUND_PROPOSITIONS\n              - NONE\n          maxItems: 6\n\n    OfferSelection:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          description: id of the selected offer or exchangeOffer\n        optionalReservationIds:\n          type: array\n          items:\n            type: string\n            description: \u003e-\n              If relevant, ids of the selected optional reservations.\n        optionalAncillaryIds:\n          type: array\n          items:\n            type: object\n            properties:\n              ancillaryId:\n                type: string\n                description: \u003e-\n                  If relevant, ids of the selected optional ancillaries.\n              passengerIds:\n                type: array\n                items:\n                  type: string\n                  description: \u003e-\n                    Id of the passengers the selected optional ancillaries are for.\n        passengers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Passenger\"\n          description: \u003e-\n            If needed (cf requiredInformation) or desired, this array allows providing the required details on some or all passengers\n        placeSelections:\n          type: object\n          properties:\n            reservationId:\n              type: string\n            placeSelection:\n              $ref: \"#/components/schemas/SelectedPlaceOption\"\n        afterSaleByDistributorOnly:\n          description: \u003e-\n            in case the distributor has proposed this offer in conjunction with an offer of another provider constrained\n            by a combinationTag, this flag must be set to true to indicate to the provider that after-sale must be done \n            on the totality of the distributor's booking. Only after-sale requests triggered by the distributor can be \n            safely processed on this offer. When the flag is not set, standard provider logic applies.\n          type: boolean\n          default: false\n        throughTicketTag:\n          description: \u003e-\n            in case the carriage contracts represented by this offer have been grouped with carriage contracts from other\n            providers by the distributor. The same throughTicketTag that was used to perform the grouping can be specified here.\n          type: string\n\n    BookingResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        booking:\n          $ref: \"#/components/schemas/Booking\"\n\n    Booking:\n      type: object\n      required:\n        - id\n        - status\n        - passengers\n      properties:\n        id:\n          type: string\n        summary:\n          type: string\n          description: A human-readable description of the booking.\n          example: Booking 2345 for Clemens Gantert\n        reference:\n          type: string\n          description: \u003e-\n            The unique booking reference in the provider system. Usually refers to an order number or PNR.\n        status:\n          $ref: \"#/components/schemas/BookingStatus\"\n        provisionalPrice:\n          $ref: \"#/components/schemas/Price\"\n        confirmedPrice:\n          $ref: \"#/components/schemas/Price\"\n        requestedInformation:\n          $ref: \"#/components/schemas/RequestedInformation\"\n        ticketTimeLimit:\n          type: string\n          format: date-time\n        fulfillmentType:\n          $ref: \"#/components/schemas/FulfillmentType\"\n        bookedOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/BookedOffer\"\n        appliedPromoCodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PromotionCode\"\n        purchaser:\n          description: \u003e-\n            Some caller do want to provide information about the purchaser, thus this attribute \n            can not be made mandatory.\n          $ref: \"#/components/schemas/Purchaser\"\n        passengers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Passenger\"\n        fulfillments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fulfillment\"\n        refundOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RefundOffer\"\n          description: \u003e-\n            Refund offers are created with the details of the to-be-confirmed refund operation. \n            One refund offer can then be confirmed, which turns it into a refund.\n        exchangeOperations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ExchangeOperation\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    BookingStatus:\n      type: string\n      enum:\n        - PREBOOKED\n        - CONFIRMED\n        - FULFILLED\n        - CANCELLED\n        - REFUNDED\n        - EXCHANGE_ONGOING\n        - ERROR\n\n    FulfillmentType:\n      type: string\n      x-extensible-enum:\n        - ETICKET\n        - CIT_PAPER\n        - PASS_CHIP\n        - PASS_REFERENCE\n\n    BookingPatchRequest:\n      type: object\n      description: \u003e-\n        Allows setting the required fulfillment type, e.g. value paper\n        or e-ticket and preferred fulfillment media. \n        The latter is optional and relevant in some cases only.\n      required:\n        - exchangeOffers\n      properties:\n        promotionCodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PromotionCode\"\n        requestedFulfillmentType:\n          $ref: \"#/components/schemas/FulfillmentType\"\n        preferredFulfillmentMedia:\n          $ref: \"#/components/schemas/FulfillmentMediaType\"\n        exchangeOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferSelection\"\n\n    FulfillmentOption:\n      type: object\n      description: \u003e-\n        CIT paper implies printing on value paper which is stock controlled.\n      properties:\n        type:\n          $ref: \"#/components/schemas/FulfillmentType\"\n        media:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentMediaType\"\n\n    FulfillmentsPatch:\n      type: object\n      description: \u003e-\n        Changes the fulfillment to status FULFILLED.\n      properties:\n        fulfillmentUpdates:\n          type: array\n          items:\n            type: object\n            properties:\n              fulfilledFulfillmentId:\n                type: string\n\n    FulfillmentsResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        fulfillments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fulfillment\"\n\n    FulfillmentResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        fulfillment:\n          $ref: \"#/components/schemas/Fulfillment\"\n\n    Fulfillment:\n      type: object\n      description: \u003e-\n        A fulfillment is a document (or part of a document in allocator mode) that\n        - allows the passenger to prove its travel right\n        - provides easier access to trains and stations\n        - allows an exchange for other services (voucher)\n        A fulfillment refers to services of one or multiple offer parts or a fare (allocator mode).\n      required:\n        - id\n      properties:\n        id:\n          type: string\n        summary:\n          type: string\n          description: A human-readable description of the fulfillment.\n          example: e-ticket 12345\n        status:\n          $ref: \"#/components/schemas/FulfillmentStatus\"\n        controlNumber:\n          type: string\n          description: Ticket Control Number.\n        offerParts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferPartReference\"\n        documents:\n          description: Final document created for fulfillment.\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentDocument\"\n        fulfillmentItems:\n          description: Fulfillment items to be integrated into tickets (allocator mode).\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentItem\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    FulfillmentStatus:\n      type: string\n      enum:\n        - CONFIRMED\n        - FULFILLED\n        - CHECKEDIN\n        - REFUNDED\n\n    FulfillmentDocument:\n      type: object\n      description: \u003e-\n        Document created for fulfillment. Either downloadLink + downloadExpiry or content + format must\n        be provided.\n      properties:\n        medium:\n          $ref: \"#/components/schemas/FulfillmentMediaType\"\n        type:\n          type: string\n          x-extensible-enum:\n            - BOOKING_RECEIPT\n            - TICKET\n            - BOARDING_PASS\n            - INFORMATION\n            - VOUCHER\n        downloadLink:\n          type: string\n          format: uri\n        downloadExpiry:\n          type: string\n          format: date-time\n          description: \u003e-\n            Expiration time of the download link, the document will not be available at the given URI \n            after this time.\n        content:\n          type: string\n          format: base64\n          description: base64 encoded binary of the actual fulfillment document\n        format:\n          type: string\n          example: \"application/pdf\"\n          description: \u003e-\n            Physical format of the document provided in the content field in Mime-Type format, e.g. \n            application/pdf, image/jpeg, etc. Must be filled if the \"content\" field is present.\n\n    FulfillmentItem:\n      type: object\n      description: \u003e-\n        Fulfillment items to be integrated in to tickets, \n        e.g. visual security elements, additional bar codes, control keys.\n      properties:\n        fulfillmentMedia:\n          description: \u003e-\n            list of fulfillment media where this item applies\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentMediaType\"\n        passengerReference:\n          description: reference to a passenger\n          type: string\n        controlId:\n          type: string\n        securityFeatures:\n          description: \"visual elements, bar codes\"\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                $ref: \"#/components/schemas/SecurityFeatureType\"\n              data:\n                description: base 64 encoded data\n                type: string\n        securityFeatureLinks:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                $ref: \"#/components/schemas/SecurityFeatureType\"\n              uri:\n                description: link to download the security feature\n                type: string\n                format: uri\n        isMandatory:\n          description: \u003e-\n            The use of the provided features is mandatory.\n          type: boolean\n          default: false\n        securePaperOnly:\n          description: \u003e-\n            The security feature must be used on secure paper.\n          type: boolean\n          default: false\n\n    SecurityFeatureType:\n      description: \u003e-\n        Defines type and format of the security feature.\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - VISUAL_ELEMENT\n            - BAR_CODE\n        format:\n          type: string\n          enum:\n            - PNG\n            - GIF\n            - SVG\n\n    RefundOffersCollectionResponse:\n      type: object\n      required:\n        - id\n        - refundOffers\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        id:\n          type: string\n        refundOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RefundOffer\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    RefundOffer:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          description: id of the refund offer\n        summary:\n          type: string\n          description: A human-readable description of the refund offer.\n          example: Refund Offer for Paris-Barcelona Andre Dupont 2022-07-23\n        validUntil:\n          type: string\n          format: date-time\n        status:\n          $ref: \"#/components/schemas/RefundStatus\"\n        reimbursementStatus:\n          description: \u003e-\n            If set to IMMEDIATE the distributor is allowed to return the \n            reimbursement amount immediately.\n          type: string\n          enum:\n            - IMMEDIATE\n            - DELAYED\n          default: IMMEDIATE\n        reimbursementDateTime:\n          type: string\n          format: date-time\n        appliedOverruleCode:\n          description: \u003e-\n            Reason for and type of an after sale, Code list in IRS 90918-10.\n          type: string\n        fulfillments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fulfillment\"\n        refundFee:\n          $ref: \"#/components/schemas/Price\"\n        refundableAmount:\n          $ref: \"#/components/schemas/Price\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    RefundOfferRequest:\n      type: object\n      description: \u003e-\n        Request for a refund offer. \n        Fulfillments can be provided in case the booking contains multiple individual fulfillments.\n      required:\n        - fulfillmentIds\n      properties:\n        fulfillmentIds:\n          type: array\n          items:\n            type: string\n            description: id of the fulfillment to refund\n        overruleCode:\n          $ref: \"#/components/schemas/OverruleCode\"\n        refundDate:\n          type: string\n          format: date-time\n          description: \u003e-\n            Indicates for passes the date taken as reference to compute possible partial refund. It is also the date taken\n            as reference to invalidate the pass partially refunded.\n\n    RefundOfferConfirm:\n      type: object\n      description: \u003e-\n        Changes the refund offer to status CONFIRMED. De-confirmation by setting PROPOSED status is not supported by API.\n      required:\n        - status\n      properties:\n        status:\n          $ref: \"#/components/schemas/RefundStatus\"\n\n    RefundStatus:\n      type: string\n      enum:\n        - PROPOSED\n        - CONFIRMED\n\n    OverruleCode:\n      type: string\n      description: \u003e-\n        Reason for and type of an after sale, code list in IRS 90918-10.\n        The PRM_SUPPORT_UNAVAILABLE overrule code shall only be used by\n        the UIC PRM ABT tool.\n      x-extensible-enum:\n        - PAYMENT_FAILURE\n        - PRM_SUPPORT_UNAVAILABLE\n        - SALES_STAFF_ERROR\n        - STRIKE\n        - TECHNICAL_FAILURE\n\n    ExchangeTripOfferRequest:\n      type: object\n      description: \u003e-\n        Defines the parameters needed to request an exchange offer, either based on either an\n        existing trip (that is then passed in) plus a set of offer search\n        criteria, or based on trip-search and offer search criteria. At least one\n        of the trip or tripSearchCriteria must be set.\n      required:\n        - tripOfferRequest\n        - fulfillmentIds\n      properties:\n        tripOfferRequest:\n          $ref: \"#/components/schemas/TripOfferRequest\"\n        fulfillmentIds:\n          type: array\n          items:\n            type: string\n        overruleCode:\n          $ref: \"#/components/schemas/OverruleCode\"\n\n    ExchangeTripOffersCollectionResponse:\n      type: object\n      required:\n        - id\n        - exchangeTripOffers\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        id:\n          type: string\n        exchangeTripOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ExchangeTripOffer\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    ExchangeTripOfferResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        tripOffer:\n          $ref: \"#/components/schemas/ExchangeTripOffer\"\n\n    ExchangeTripOffer:\n      type: object\n      required:\n        - id\n        - trip\n      properties:\n        id:\n          type: string\n        summary:\n          type: string\n          description: A human-readable description of the exchange offer\n          example: Exchange offer for Bruxelles-Midi 2022-07-01 10:05 CET\n        trip:\n          $ref: \"#/components/schemas/Trip\"\n        exchangeOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ExchangeOffer\"\n        passengers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Passenger\"\n        fulfillments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fulfillment\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    ExchangeOperationResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        exchangeOperation:\n          $ref: \"#/components/schemas/ExchangeOperation\"\n\n    ExchangeOperation:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n        status:\n          $ref: \"#/components/schemas/ExchangeStatus\"\n        exchangeOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ExchangeOffer\"\n        fulfillments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fulfillment\"\n        ticketTimeLimit:\n          type: string\n          format: date-time\n        fulfillmentType:\n          $ref: \"#/components/schemas/FulfillmentType\"\n\n    ExchangeStatus:\n      type: string\n      enum:\n        - PREBOOKED\n        - CONFIRMED\n        - FULFILLED\n        - ERROR\n\n    ExchangeOperationPatchRequest:\n      type: object\n      description: \u003e-\n        Allows modifying a general setting for the booking:\n         * setting the required fulfillment type, e.g. value paper\n           or e-ticket and preferred fulfillment media. \n           The latter is optional and relevant in some cases only.\n         * Provisionally exchanging some of the fulfillments in the booking\n      properties:\n        requestedFulfillmentType:\n          $ref: \"#/components/schemas/FulfillmentType\"\n        preferredFulfillmentMedia:\n          $ref: \"#/components/schemas/FulfillmentMediaType\"\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          type: array\n          items:\n            type: string\n            enum:\n              - ALL\n              - TRIP\n              - TRIP.PLACES\n              - OFFERS\n              - OFFERS.OFFERPARTS\n              - OFFERS.OFFERPARTS.PRODUCTS\n              - PASSENGERS\n            maxItems: 5\n\n    ExchangeOffer:\n      type: object\n      properties:\n        offer:\n          $ref: \"#/components/schemas/Offer\"\n        exchangeFee:\n          $ref: \"#/components/schemas/Price\"\n        exchangePrice:\n          $ref: \"#/components/schemas/Price\"\n\n    OfferSearch:\n      type: object\n      description: \u003e-\n        Search parameter for an offer search on offers not based on a trip (e.g. passes).\n      properties:\n        searchTags:\n          description: \u003e-\n            list of tags to search for\n          type: array\n          items:\n            type: string\n        nutsCodes:\n          description: \u003e-\n            Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011\n          type: array\n          items:\n            type: string\n        origin:\n          $ref: \"#/components/schemas/PlaceRef\"\n        destination:\n          $ref: \"#/components/schemas/PlaceRef\"\n        travelPeriods:\n          type: array\n          items:\n            type: string\n            format: date-time\n        passengerSpecifications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PassengerSpecification\"\n        promotionCodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PromotionCode\"\n        requestedFulfillmentOptions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentOption\"\n        offerSearchCriteria:\n          $ref: \"#/components/schemas/OfferSearchCriteria\"\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          type: array\n          items:\n            type: string\n            description: Proposed default ALL\n            enum:\n              - OFFERPARTS\n              - NONE\n              - ALL\n          maxItems: 1\n\n    OffersCollectionResponse:\n      type: object\n      required:\n        - id\n        - offers\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        id:\n          type: string\n        offers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/NonTripOffer\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    NonTripOffer:\n      type: object\n      description: \u003e-\n        Non trip offers do not reference a trip. E.g., a day pass or a reduction card.\n      required:\n        - id\n        - offerType\n      properties:\n        id:\n          type: string\n        offerType:\n          type: string\n          enum:\n            - NonTripOffer\n        summary:\n          type: string\n          description: A human-readable description of the offer.\n          example: Super Saver One Day Pass\n        offerSummary:\n          $ref: \"#/components/schemas/OfferSummary\"\n        priceGuaranteedUntil:\n          type: string\n          format: date-time\n          description: \u003e-\n            Indicates until when the price for the given offer is guaranteed.\n        isReusable:\n          type: boolean\n          default: false\n          description: \u003e-\n            Indicates whether the offerId can be used in more than one booking.\n        offerTag:\n          type: object\n          description: \u003e-\n            The offerTag can/must (depending on the mandatory flag) be used in some cases to restrict the \n            set of offers returned in a subsequent and related offer search to only compatible ones.\n            Note the offerTag does not need to be unique.\n          properties:\n            id:\n              type: string\n            isMandatory:\n              type: boolean\n              default: false\n        requestedInformation:\n          $ref: \"#/components/schemas/RequestedInformation\"\n        availableFulfillmentTypes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FulfillmentType\"\n        validFrom:\n          type: string\n          format: date-time\n          description: \u003e-\n            Defines the minimum validity period of the trip booked, meaning the period \n            during which it will be possible to travel with the fulfillments for this offer.\n        validUntil:\n          type: string\n          format: date-time\n          description: \u003e-\n            Defines the minimum validity period of the trip booked, meaning the period \n            during which it will be possible to travel with the fulfillments for this offer.\n        admissions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Admission\"\n        ancillaries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Ancillary\"\n        fees:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Fee\"\n        fares:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FareOnline\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    CoachLayoutsResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        layouts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CoachLayout\"\n\n    CoachLayoutResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        coachLayout:\n          $ref: \"#/components/schemas/CoachLayout\"\n\n    CoachLayout:\n      type: object\n      description: \u003e-\n        coach layout providing data to draw a coach layout. The items of a coach\n        are located via coordinates with (0,0) in the upper left corner. All\n        coordinates are given without sign.\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          description: id of this coachLayout on this server\n        summary:\n          type: string\n          description: A human-readable description of the coach layout.\n          example: Coach 3 in train T-122\n        places:\n          description: list of places included in the layout\n          type: array\n          items:\n            type: object\n            properties:\n              number:\n                description: place number as displayed physically on the place\n                type: string\n              direction:\n                description: \u003e-\n                  Direction of a place, defined optional as it might be omitted in\n                  case of berths in future. \n                  Code list according to UIC90918-1\n                   - RIGHT: to right\n                   - LEFT: to left\n                   - UP: up (from right side of a coach pointing to the middle of the aisle)\n                   - DOWN: down (from right side of the coach pointing to the middle of the aisle)\n                type: string\n                enum:\n                  - RIGHT\n                  - LEFT\n                  - UP\n                  - DOWN\n              remarkId:\n                description: \u003e-\n                  Remark concerning the place (e.g. to be used in a tool tip).\n                  Code list according to UIC90918-1 \n                   - value 1: place might have a table\n                   - value 2: table at the place might be missing \n                   - value 3: place might have a different direction \n                   - value 4: place might have a table and a different direction \n                   - value 5: table at the place might be missing and place might have a different direction\n                   - value 6: place might be in compartment\n                   - value 7: place might be in open space\n                type: string\n                x-extensible-enum:\n                  - MIGHT_HAVE_TABLE\n                  - MIGHT_NOT_HAVE_TABLE\n                  - MIGHT_HAVE_DIFFERENT_DIRECTION\n                  - MIGHT_HAVE_TABLE_AND_DIFFERENT_DIRECTION\n                  - MIGHT_NOT_HAVE_TABLE_AND_MIGHT_HAVE_DIFFERENT_DIRECTION\n                  - MIGHT_BE_IN_COMPARTMENT\n                  - MIGHT_BE_IN_OPEN_SPACE\n              coords:\n                $ref: \"#/components/schemas/LayoutCoordinates\"\n            required:\n              - number\n              - coords\n        signs:\n          type: array\n          items:\n            type: object\n            properties:\n              icon:\n                description: \u003e-\n                  Icon type of the graphical item type. Code list according to UIC90918-1\n                  graphical item type e.g. silence area sign = 116\n                type: string\n              coords:\n                $ref: \"#/components/schemas/LayoutCoordinates\"\n            required:\n              - icon\n              - coords\n        internals:\n          type: array\n          items:\n            type: object\n            properties:\n              icon:\n                description: \u003e-\n                  icon type of the graphical item type. Code list according to UIC90918-1\n                  graphical item type e.g. seat = 1, berth = 2, couchette = 3\n                type: string\n              mounting:\n                description: \u003e-\n                  indicates, that the item is located at the upper border (U), the\n                  lower border (L), goes from upper to lower border (E) or is\n                  placed free (F).\n                type: string\n                enum:\n                  - UPPER_BORDER\n                  - LOWER_BORDER\n                  - UPPER_TO_LOWER_BORDER\n                  - FREE\n              coords:\n                $ref: \"#/components/schemas/LayoutCoordinates\"\n            required:\n              - icon\n              - coords\n        gridSize:\n          type: object\n          properties:\n            x:\n              type: integer\n              format: int32\n            y:\n              type: integer\n              format: int32\n        _links:\n          type: array\n          description: Context information required by the services.\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    LayoutCoordinates:\n      type: object\n      required:\n        - x\n        - y\n        - zOrder\n      properties:\n        x:\n          description: \u003e-\n            horizontal coordinate of the center of the place\n          type: integer\n          format: int32\n        y:\n          description: \u003e-\n            vertical coordinate of the center of the place\n          type: integer\n          format: int32\n        zOrder:\n          description: \u003e-\n            Graphical layer where this item has to be placed. \n            Code list according to UIC90918-1\n              - value 0: lowest layer usually used for walls \n              - value 1: middle layer usually used by places\n              - value 2: top layer usually used by icons\n          type: string\n\n    Problem:\n      type: object\n      description: \u003e-\n        Problem Details for HTTP APIs (RFC 7807) defines a \"problem detail\" as a way\n        to carry machine-readable details of errors in a HTTP response to avoid\n        the need to define new error response formats for HTTP APIs.\n        See: https://tools.ietf.org/html/rfc7807\n      properties:\n        type:\n          type: string\n          format: uri\n          description: \u003e-\n            An absolute URI that identifies the problem type. When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          default: \"about:blank\"\n          example: \"https://example.com/probs/passenger-too-young\"\n        title:\n          type: string\n          description: \u003e-\n            A short, summary of the problem type. Written in English and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized); example: Service Unavailable\n        status:\n          type: integer\n          format: int32\n          description: \u003e-\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          minimum: 100\n          maximum: 600\n          exclusiveMaximum: true\n          example: 503\n        detail:\n          type: string\n          description: \u003e-\n            A human readable explanation specific to this occurrence of the\n            problem.\n          example: Connection to database timed out\n        instance:\n          type: string\n          format: uri\n          description: \u003e-\n            An absolute URI that identifies the specific occurrence of the problem.\n\n    PlacePreferencesBundle:\n      type: object\n      description: \u003e-\n        Place preferences per passenger.\n      properties:\n        passengerId:\n          type: string\n        preferences:\n          description: \u003e-\n            Place preferences (see code list Reservation Place Preferences) the customer wants to have\n          type: array\n          items:\n            type: string\n\n    PlaceAvailabilitiesResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        availablePlaces:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AvailablePlace\"\n\n    ComplaintResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        complaint:\n          $ref: \"#/components/schemas/Complaint\"\n\n    CustomerComplaint:\n      description: complaint details provided by the passengers\n      type: object\n      properties:\n        applicationTime:\n          description: \u003e-\n            date and time when the claim was made. This starts the legal time line to process the claim\n          type: string\n          format: date-time\n        journeyDetails:\n          $ref: \"#/components/schemas/ClaimedJourneyDetails\"\n        claimManager:\n          $ref: \"#/components/schemas/PersonDetail\"\n        affectedPassengers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Passenger\"\n        supportingDocuments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Document\"\n        bookingIds:\n          description: list of booking Ids\n          type: array\n          items:\n            type: string\n        ticketControlNumber:\n          description: list of ticket control number (visible ticket identification for the customer)\n          type: array\n          items:\n            type: string\n        requestedPaymentType:\n          type: string\n          x-extensible-enum:\n            - VOUCHER\n            - MONEY\n        bankAccount:\n          $ref: \"#/components/schemas/BankAccountReference\"\n\n    BankAccountReference:\n      description: bank account\n      type: object\n      properties:\n        iban:\n          description: IBAN to be used in Europe\n          type: string\n          pattern: \"[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}\"\n        accountId:\n          description: bank account id to be used outside of EU\n          type: string\n        bankIdCodelist:\n          type: string\n          x-extensible-enum:\n            - SWIFT\n        bankId:\n          type: string\n        ownerName:\n          type: string\n          example: \"John Doe\"\n\n    Document:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n          example: \"delay confirmation written by staff on board\"\n        content:\n          type: string\n          format: base64\n          description: base64 encoded binary of the actual document\n        format:\n          type: string\n          example: \"application/pdf\"\n          description: \u003e-\n            Physical format of the document provided in the content field in Mime-Type format, e.g. \n            application/pdf, image/jpeg, etc. Must be filled if the \"content\" field is present.\n\n    ClaimedJourneyDetails:\n      type: object\n      properties:\n        impact:\n          description: impact that was caused by the event\n          type: string\n          x-extensible-enum:\n            - DELAY ## delayed arrival\n            - JOURNEY_ABANDONED ## trip way abandoned during the travel\n            - JOURNEY_NOT_STARTED ## trip was not started due to the delay\n            - SERVICE_DEGRADED ## e.g. service class not provided\n          example: JOURNEY_ABANDONED\n        finalDelay:\n          type: string\n          format: duration\n          example: PT30M\n        onReturn:\n          type: boolean\n          default: false\n        delayedJourney:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ClaimedLeg\"\n\n    ClaimedLeg:\n      type: object\n      properties:\n        trainNumber:\n          type: string\n        connectionMissed:\n          description: connection missed due to a delay on the previous leg\n          type: boolean\n        serviceDegradation:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ServiceDegradation\"\n        departureStation:\n          $ref: \"#/components/schemas/Place\"\n        arrivalStation:\n          $ref: \"#/components/schemas/Place\"\n        plannedDepartureTime:\n          type: string\n          format: date-time\n        timetabledArrivalTime:\n          type: string\n          format: date-time\n        observedArrivalTime:\n          type: string\n          format: date-time\n\n    ServiceDegradation:\n      description: \u003e-\n        enumeration of service degradations\n      type: string\n      x-extensible-enum:\n        - RESERVED_PLACES_MISSING\n        - BOOKED_ACCOMMODATION_TYPE_MISSING\n        - BOOKED_CLASS_MISSING\n        - BOOKED_MEAL_MISSING\n\n    ComplaintPatchRequest:\n      description: \u003e-\n        Changes to a claim already made.\n        This covers upload of additional supporting documents, changes to  the passenger and claim manager data.\n        The patch of the compensation amount requires an agreement between the involved parties and is used in\n        case the legal time line for deciding the claim is passed.\n      type: object\n      properties:\n        reason:\n          type: string\n          x-extensible-enum:\n            - BANK_ACCOUNT\n            - SETTLED_TIME_LIMIT_EXCEEDED ## an allocator settled the claim as the fare provided did not reply in due time. The compensation amount debited is provided\n            - PASSENGER_CHANGE\n        compensationAmount:\n          $ref: \"#/components/schemas/Price\"\n        claimManager:\n          $ref: \"#/components/schemas/PersonDetail\"\n        affectedPassengers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Passenger\"\n        supportingDocuments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Document\"\n        bankAccount:\n          $ref: \"#/components/schemas/BankAccountReference\"\n\n    Complaint:\n      type: object\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n          x-extensible-enum:\n            - INITIATED\n            - EVALUATING\n            - DECIDED\n            - SETTLED\n        customerComplaint:\n          $ref: \"#/components/schemas/CustomerComplaint\"\n        missingInformation:\n          description: \u003e-\n            indication of missing customer information\n          type: array\n          items:\n            type: string\n        decision:\n          $ref: \"#/components/schemas/ComplaintDecision\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    ComplaintDecision:\n      type: object\n      properties:\n        compensationAmount:\n          $ref: \"#/components/schemas/Price\"\n        refundVoucher:\n          $ref: \"#/components/schemas/FulfillmentDocument\"\n        explanation:\n          $ref: \"#/components/schemas/FulfillmentDocument\"\n        shortExplanation:\n          type: string\n        delayedJourney:\n          description: \u003e-\n            allocator or fare provider view on the delays. This might differ from the customer view\n          type: array\n          items:\n            $ref: \"#/components/schemas/Trip\"\n\n    ReductionCardCollectionResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        reductionCardsDelivery:\n          $ref: \"#/components/schemas/ReductionCardsDelivery\"\n\n    ReductionCardsDelivery:\n      type: object\n      description: Delivery of a list of reduction cards.\n      properties:\n        deliveryDate:\n          description: date of the assembly of the reduction card data set\n          type: string\n          format: date-time\n        reductionCards:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReductionCard\"\n\n    ReductionCard:\n      type: object\n      required:\n        - issuer\n        - id\n        - name\n      properties:\n        issuer:\n          $ref: \"#/components/schemas/Company\"\n        id:\n          description: id of the card type within the issue\n          type: string\n        name:\n          $ref: \"#/components/schemas/Text\"\n        includedCards:\n          description: This card includes the listed cards\n          type: array\n          items:\n            $ref: \"#/components/schemas/CardReference\"\n        serviceClassTypes:\n          description: \u003e-\n            list of service classes where this card applies\n          type: array\n          items:\n            $ref: \"#/components/schemas/ServiceClassType\"\n          maxItems: 4\n        cardType:\n          $ref: \"#/components/schemas/CardType\"\n        cardIdRequired:\n          description: the card id must be delivered in online sales\n          type: boolean\n          default: false\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    #### Fare-specific elements begin\n\n    FareOnline:\n      type: object\n      description: \u003e-\n        The online representation of a fare.\n      required:\n        - id\n        - type\n        - prices\n        - regionalConstraint\n        - combinationConstraint\n        - travelValidityConstraint\n        - afterSalesCondition\n      properties:\n        id:\n          description: id of the fare item to be included in accounting\n          type: string\n        type:\n          $ref: \"#/components/schemas/FareType\"\n        name:\n          description: \u003e-\n            If the online fare is based on a offline fare it corresponds to the name\n            of the corresponding offline fare.\n          $ref: \"#/components/schemas/Text\"\n        description:\n          description: detailed description of the fare\n          $ref: \"#/components/schemas/Text\"\n        prices:\n          description: allows specifying a price in multiple currencies\n          type: array\n          minItems: 1\n          items:\n            $ref: \"#/components/schemas/Price\"\n        regionalConstraint:\n          type: object\n          description: \u003e-\n            Regional constraint of the fare- offline bulk data use the id of connection points whereas \n            in an online environment the connection point is included\n          required:\n            - regionalValidities\n          properties:\n            entryConnectionPoint:\n              $ref: \"#/components/schemas/FareConnectionPoint\"\n            exitConnectionPoint:\n              $ref: \"#/components/schemas/FareConnectionPoint\"\n            regionalValidities:\n              $ref: \"#/components/schemas/RegionalValidities\"\n            distance:\n              description: Distance in km for statistics\n              type: integer\n              format: int32\n              minimum: 0\n        serviceConstraint:\n          $ref: \"#/components/schemas/ServiceConstraint\"\n        carrierConstraint:\n          $ref: \"#/components/schemas/CarrierConstraint\"\n        regulatoryConditions:\n          $ref: \"#/components/schemas/RegulatoryConditions\"\n        serviceClass:\n          $ref: \"#/components/schemas/ServiceClass\"\n        comfortClass:\n          $ref: \"#/components/schemas/ComfortClass\"\n        afterSalesCondition:\n          type: object\n          properties:\n            conditions:\n              type: array\n              minItems: 1\n              items:\n                $ref: \"#/components/schemas/AfterSaleCondition\"\n              description: \u003e-\n                Structured description of the after-sales conditions.\n            isSupportingIndividualContracts:\n              description: \u003e-\n                Indicates that the after sales of this fare can be treated independently per person.\n              type: boolean\n              default: false\n        combinationConstraint:\n          type: object\n          properties:\n            combinationModels:\n              type: array\n              minItems: 1\n              items:\n                $ref: \"#/components/schemas/FareCombinationModel\"\n          required:\n            - combinationModels\n        fulfillmentConstraint:\n          type: object\n          properties:\n            acceptedControlSecurityTypes:\n              type: array\n              minItems: 1\n              items:\n                $ref: \"#/components/schemas/ControlSecurityType\"\n            acceptedBarCodes:\n              description: for SiD fulfillment one of the listed bar codes is required\n              type: array\n              items:\n                description: \u003e-\n                  Item according to IRS 90918-9: FCB, TLB, SSB\n                type: string\n                x-extensible-enum:\n                  - FCB\n                  - TLB\n                  - SSB\n            requiredBarCodes:\n              description: \u003e-\n                One of the listed bar codes must be provided.\n              type: array\n              items:\n                type: string\n            requiredSiS:\n              description: \u003e-\n                To guarantee security in system (SiS) of the fulfillment one of the listed interfaces is required.\n              type: array\n              items:\n                description: \u003e-\n                  Interface type to ticket control data. REGISTRY means submitting\n                  the data to the central UIC registry. PEER_TO_PEER means data exchange\n                  is handled between the two parties directly.\n                type: string\n                x-extensible-enum:\n                  - REGISTRY\n                  - PEER_TO_PEER\n            isIndividualTicketingForbidden:\n              description: a separate fulfillment per passenger is forbidden\n              type: boolean\n              default: false\n        reductionConstraint:\n          type: object\n          properties:\n            requiredCards:\n              description: \u003e-\n                One of the listed cards is required to be valid at the time of travel.\n              type: array\n              items:\n                $ref: \"#/components/schemas/CardReference\"\n          required:\n            - requiredCards\n        travelValidityConstraint:\n          type: object\n          description: \u003e-\n            travel validity data are needed to create barcode and control data (IRS 90918-4)\n            in allocator mode even in case they have been checked during the online sale\n          properties:\n            validTravelDates:\n              $ref: \"#/components/schemas/CalendarOnline\"\n            validityRange:\n              type: object\n              properties:\n                timeUnit:\n                  type: string\n                  enum:\n                    - DAYS\n                    - HOURS\n                    - MINUTES\n                value:\n                  type: integer\n                  format: int32\n                hoursAfterMidnight:\n                  description: validity extended after midnight\n                  type: integer\n                  format: int32\n              required:\n                - timeUnit\n                - value\n            excludedTimeRanges:\n              description: time ranges excluded from the validity (e.g. off peak fulfillments)\n              type: array\n              items:\n                type: object\n                properties:\n                  from:\n                    description: minutes of the day in the time zone of travel\n                    type: integer\n                    format: int32\n                  until:\n                    description: minutes of the day in the time zone of travel\n                    type: integer\n                    format: int32\n                  scope:\n                    type: string\n                    enum:\n                      - START_OF_TRAVEL\n                      - COMPLETE_RANGE\n                required:\n                  - from\n                  - until\n                  - scope\n            numberOfTravelDays:\n              description: number of allowed travel days (e.g. 3 travel days within 2 weeks)\n              type: integer\n              format: int32\n            returnConstraint:\n              description: a return trip with the same carrier must be sold in combination\n              type: object\n              properties:\n                latestReturn:\n                  description: number of days after departure or start of validity of the last return\n                  type: integer\n                  format: int32\n                  minimum: 0\n                earliestReturn:\n                  description: number of days after departure or start of validity of the earliest return\n                  type: integer\n                  format: int32\n                  minimum: 0\n                excludedWeekdays:\n                  description: weekdays (ISO day of the week, 1 = Monday) between travel and return where travel is not allowed\n                  type: array\n                  items:\n                    type: integer\n                    format: int32\n              required:\n                - latestReturn\n                - earliestReturn\n            trainValidity:\n              $ref: \"#/components/schemas/TrainValidity\"\n            validityType:\n              description: \u003e-\n                Type of usage, either as single trip or multiple trips. Unrestricted fares might be combined \n                into single trips if appropriate.\n              type: string\n              default: SINGLE_TRIP\n              x-extensible-enum:\n                - SINGLE_TRIP\n                - MULTIPLE_TRIPS\n                - UNRESTRICTED\n            tripAllocationConstraint:\n              $ref: \"#/components/schemas/TripAllocationConstraint\"\n            tripInterruptionConstraint:\n              $ref: \"#/components/schemas/TripInterruptionConstraint\"\n          required:\n            - validityRange\n        availablePlaces:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AvailablePlace\"\n        selectedPlaceOption:\n          $ref: \"#/components/schemas/SelectedPlaceOption\"\n        reservationDetails:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReservationDetail\"\n        coveredSection:\n          description: \u003e-\n            The section of the fare that is covered by the fare. The leg id allows \n            to uniquely identify a place if it is passed through several times.\n          $ref: \"#/components/schemas/Section\"\n        passengerConstraints:\n          description: \u003e-\n            passenger constraint to be included in bar codes\n          type: array\n          items:\n            type: object\n            properties:\n              number:\n                description: number of passengers with this constraint\n                type: integer\n                format: int32\n              upperAgeLimit:\n                type: integer\n                format: int32\n              lowerAgeLimit:\n                type: integer\n                format: int32\n        involvedTCOs:\n          description: \u003e-\n            The ticket controlling organizations (TCOs) involved in the control.\n            Used to provide TCOs access to the ticket in the control data (UIC IRS 90918-4).\n          type: array\n          items:\n            $ref: \"#/components/schemas/Company\"\n        legacyAccountingIdentifier:\n          type: object\n          description: identifier of the fare in the current 301 accounting file\n          required:\n            - serialId\n          properties:\n            serialId:\n              description: sequential number of regional validities\n              type: integer\n              format: int32\n              minimum: 0\n              maximum: 99999\n            addId:\n              description: \u003e-\n                Sequential number of regional validities (leading positions in case the series\n                is too short).\n              type: integer\n              format: int32\n              minimum: 0\n              maximum: 99\n            tariffId:\n              description: Tarif id for the old serie format.\n              type: integer\n              format: int32\n              minimum: 0\n              maximum: 9999\n        legacyReservationParameter:\n          type: object\n          description: reservation parameter to support the UIC 90918-1 interface for booking\n          properties:\n            travelClass:\n              description: 90918-1 class code in reservation\n              type: string\n            serviceLevelCode:\n              description: service level code defined in UIC 90918-1\n              type: string\n            serviceCode:\n              description: service code to be used in reservation\n              type: string\n            berthType:\n              description: berth type code in UIC 90918-1 to be used in reservation\n              type: string\n            coachTypeCode:\n              description: coach type code in UIC 90918-1 to be used in reservation\n              type: string\n            compartmentTypeCode:\n              description: compartment type code in UIC 90918-1 to be used in reservation\n              type: string\n            tariffs:\n              description: tariff according to UIC 90918-1 to be used for booking\n              type: array\n              items:\n                $ref: \"#/components/schemas/LegacyReservationTariff\"\n          required:\n            - travelClass\n            - serviceLevelCode\n            - serviceCode\n\n    TripInterruptionProcess:\n      description: \u003e-\n        MANUAL: passenger needs manual confirmation of train or station staff to interrupt the trip. \n        ACTIVATION: Passenger needs to deactivate the ticket during the interruption (via an app).\n      type: string\n      x-extensible-enum:\n        - NONE\n        - MANUAL\n        - ACTIVATION\n\n    TripAllocationProcess:\n      description: \u003e-\n        NONE: Individual trips don't need to be allocated. \n        MANUAL: The passenger has to allocate a trip manually (This should not be used as it is by design non-interoperable). \n        ACTIVATION: Individual trips can be allocated by activation of the ticket. \n        FULFILLMENT: A new fulfillment needs to be created to allocate a trip.\n      type: string\n      x-extensible-enum:\n        - NONE\n        - MANUAL\n        - ACTIVATION\n        - FULFILLMENT\n\n    TripAllocationUnit:\n      description: \u003e-\n        Unit to allocate trips in a multi-trip fare. Trips can be allocated per day (e.g. Eurail) or per \n        duration (e.g. multiples of a duration unit to cover the trip) or as single trips (e.g. carnet))\n\n        NONE: Individual trips don't need to be allocated. \n        TRIP: allocation per individual trip. \n        DAY: The allocation is per travel day.\n        DURATION: the allocation is per duration.\n      type: string\n      x-extensible-enum:\n        - NONE\n        - TRIP\n        - DAY\n        - DURATION\n\n    TripAllocationConstraint:\n      type: object\n      description: constraint on the use of a multiple trip ticket\n      required:\n        - allocationUnit\n        - requiredProcesses\n      properties:\n        allocationUnit:\n          $ref: \"#/components/schemas/TripAllocationUnit\"\n        maxUnits:\n          description: maximum number of allowed units to be allocated\n          type: integer\n          format: int32\n        durationUnit:\n          description: multiples of this duration can be allocated\n          type: string\n          format: duration\n          example: \"PT30M\"\n        requiredProcesses:\n          description: one of the listed processes is required for the allocation of a single trip\n          type: array\n          items:\n            $ref: \"#/components/schemas/TripAllocationProcess\"\n\n    TripInterruptionConstraint:\n      type: object\n      description: \u003e-\n        rules on allowed trip interruptions. Interruptions due to a train change \n        indicated by a trip search must not be included here.\n      required:\n        - maxInterruptions\n        - requiredProcesses\n      properties:\n        maxInterruptions:\n          description: maximum number of allowed interruptions\n          type: integer\n          format: int32\n        maxDuration:\n          description: maximum duration of one interruption\n          type: string\n          format: duration\n          example: \"PT30M\"\n        totalMaxDuration:\n          description: maximum duration of all interruptions on the route\n          type: string\n          format: duration\n          example: \"PT30M\"\n        requiredProcesses:\n          description: one of the listed processes is required for the interruption of the trip\n          type: array\n          items:\n            $ref: \"#/components/schemas/TripInterruptionProcess\"\n\n    RegulatoryConditions:\n      description: \u003e-\n        General conditions applied to cover legal regulations within the area of validity. Allocators must \n        reflect these terms and conditions in the conditions of combined offers and indicate them to the customer\n        where required. Which indications are mandatory to be shown to the customer will be defined in the SCICs\n         - CIV: terms and conditions according to COTIV regulation\n         - MD:  terms and conditions according to SMPS regulation\n         - EU-PRR: terms and conditions according to EU-PRR regulation\n      type: array\n      items:\n        type: string\n        enum:\n          - CIV\n          - MD\n          - EU-PRR\n\n    CalendarOnline:\n      type: object\n      properties:\n        fromDate:\n          type: string\n          format: date-time\n        untilDate:\n          type: string\n          format: date-time\n        dates:\n          description: \u003e-\n            dates included in the calendar. In case no dates are provided the range is assumed to be valid\n          type: array\n          items:\n            type: string\n            format: date-time\n        utcOffset:\n          description: \u003e-\n            offset to UTC in minutes (number of minutes to be added to get UTC dates)\n          type: integer\n          format: int32\n\n    FareCombinationModel:\n      type: object\n      required:\n        - model\n      properties:\n        model:\n          description: \u003e-\n            Possible models are SEPARATE_TICKET, SEPARATE_CONTRACT, CLUSTERING, COMBINING. \n            The models need to be supported by the allocator.\n          type: string\n        combinableCarriers:\n          description: \u003e-\n            List of all carriers where the model can be applied, in case the list is empty\n            all combinations are allowed.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Company\"\n        isValidOnlyWhenCombined:\n          description: \u003e-\n            This combination model applies only in case the fare is combined with another carrier\n          type: boolean\n          default: false\n        referenceCluster:\n          description: \u003e-\n            In case of CLUSTERING model: the cluster to which the fare belongs\n          type: string\n        allowedClusters:\n          description: \u003e-\n            In case of CLUSTERING model: the other clusters that allow a combination\n          type: array\n          items:\n            type: string\n        allowedCommonContracts:\n          description: \u003e-\n            List of carriers where a common contract with separate fulfillments are allowed.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Company\"\n\n    ServiceConstraint:\n      type: object\n      description: \u003e-\n        Either excluded or included service brands can be set.\n      properties:\n        restrictedToServiceBrands:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ServiceBrandCode\"\n        excludedServiceBrands:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ServiceBrandCode\"\n        description:\n          $ref: \"#/components/schemas/Text\"\n\n    RegionalValidities:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RegionalValidity\"\n\n    RegionalValidity:\n      type: object\n      description: \u003e-\n        One of the elements Zone, ViaStation, TrainLink, Line, or Polygon defining the regional validity\n      properties:\n        seqNb:\n          description: order number of the list item\n          type: integer\n          format: int32\n        zone:\n          $ref: \"#/components/schemas/Zone\"\n        route:\n          $ref: \"#/components/schemas/Route\"\n        trainLink:\n          $ref: \"#/components/schemas/TrainLink\"\n        line:\n          $ref: \"#/components/schemas/Line\"\n        polygon:\n          $ref: \"#/components/schemas/Polygon\"\n        serviceConstraint:\n          $ref: \"#/components/schemas/ServiceConstraint\"\n\n    Line:\n      type: object\n      description: \u003e-\n        terminalStation - in case the product requires a destination within the zone (e.g. local ticket \n        to go to the main rail station). \n        entryStation - Station to enter the zone in case the product requires to enter the zone via a \n        specific station (e.g. local zone ticket to start from the main rail station).\n      required:\n        - carrier\n      properties:\n        binaryLineId:\n          type: string\n          description: \u003e-\n            Id to support local traffic standards (e.g. VDV,...).\n        carrier:\n          $ref: \"#/components/schemas/Company\"\n        city:\n          type: integer\n          format: int32\n        entryStation:\n          $ref: \"#/components/schemas/StopPlace\" # EXT Changed from StopPoint\n        lineIds:\n          type: array\n          items:\n            type: string\n        terminalStation:\n          $ref: \"#/components/schemas/StopPlace\" # EXT Changed from StopPoint\n        nutsCode:\n          description: \u003e-\n            Nomenclature des units territoriales statistiques  \n             COMMISSION REGULATION (EU) No 31/2011\n          type: string\n\n    TrainLink:\n      type: object\n      required:\n        - fromStation\n        - toStation\n        - train\n        - travelDate\n      properties:\n        fromStation:\n          $ref: \"#/components/schemas/StopPlace\" # EXT Changed from StopPoint\n        toStation:\n          $ref: \"#/components/schemas/StopPlace\" # EXT Changed from StopPoint\n        train:\n          type: string\n        travelDate:\n          type: string\n          format: date-time\n          description: date and time of the departure where the train link starts\n\n    Polygon:\n      type: object\n      properties:\n        edges:\n          type: array\n          minItems: 1\n          items:\n            $ref: \"#/components/schemas/GeoPosition\"\n\n    ViaStations:\n      type: object\n      properties:\n        alternativeRoute:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ViaStations\"\n        carrierConstraint:\n          $ref: \"#/components/schemas/CarrierConstraint\"\n        route:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ViaStations\"\n        serviceConstraint:\n          $ref: \"#/components/schemas/ServiceConstraint\"\n        station:\n          $ref: \"#/components/schemas/StopPlace\" # EXT Changed from StopPoint\n        fareReferenceStation:\n          $ref: \"#/components/schemas/FareReferenceStation\"\n\n    Route:\n      description: \u003e-\n        Route description including the first and last real stopPoint\n      properties:  \n        routeItem:\n           $ref: \"#/components/schemas/RouteItem\"\n        routeItemList:\n          description: list of route items referenced within the list\n          type: array\n          items: \n            $ref: \"#/components/schemas/RouteItem\"\n\n    RouteItem:\n      description: \u003e-\n        Items to compose routes (Note - replaced viaStation, content compliant with viaStation in IRS 90918-4 and 90918-9)\n      type: object\n      properties:\n        alternativeRouteItemIndices:\n          description: \u003e- \n            list of alternative route parts to be used on this travel path referenced by the index in the provided list of route items\n          type: array\n          items:\n            type: integer\n            format: int32\n        carrierConstraint:\n          $ref: \"#/components/schemas/CarrierConstraint\"\n        routeItemIndices:\n          description: \u003e- \n            sequence of route items along the travel path referenced by the index in the provided list of route items\n          type: array\n          items:\n            type: integer\n            format: int32\n        serviceConstraint:\n          $ref: \"#/components/schemas/ServiceConstraint\"\n        station:\n          $ref: \"#/components/schemas/StopPlace\" # EXT Changed from StopPoint\n        fareReferenceStation:\n          $ref: \"#/components/schemas/FareReferenceStation\"\n\n    FareReferenceStation:\n      type: object\n      description: \u003e-\n        Reference to a list of stations jointly valid in a fare. The fare\n        reference station defines a set of station that are equivalent from \n        a tariff point of view. The code is issued by the carrier. Needed to\n        generate bar codes as well as fulfillments.\n      required:\n        - name\n        - code\n        - carrier\n        - stations\n      properties:\n        name:\n          type: string\n        code:\n          type: string\n        carrier:\n          $ref: \"#/components/schemas/Company\"\n        stations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/StopPlaceRef\"\n          minItems: 1\n\n    CarrierConstraint:\n      type: object\n      description: Either excluded or included carriers can be set.\n      properties:\n        includedCarrier:\n          type: array\n          items:\n            type: string\n        excludedCarrier:\n          type: array\n          items:\n            type: string\n\n    Zone:\n      type: object\n      description: \u003e-\n        carrier - carrier responsible for the transport.\n        entryStation - Station to enter the zone in case the product requires to enter the zone via a specific station\n        (e.g. local zone ticket to start from the main rail station).\n        terminalStation - Terminal station in case the product requires a destination within the zone (e.g. local ticket\n        to go to the main rail station).\n      required:\n        - carrier\n      properties:\n        binaryZoneId:\n          type: string\n          format: base64\n          description: Id to support local traffic standards (e.g. VDV,...)\n        carrier:\n          $ref: \"#/components/schemas/Company\"\n        city:\n          type: integer\n          format: int32\n        entryStation:\n          $ref: \"#/components/schemas/StopPlace\" # EXT Changed from StopPoint\n        terminalStation:\n          $ref: \"#/components/schemas/StopPlace\" # EXT Changed from StopPoint\n        zoneIds:\n          description: to be used in bar codes\n          type: array\n          items:\n            type: integer\n            format: int32\n        nutsCode:\n          description: Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011\n          type: string\n\n    ControlSecurityType:\n      type: string\n      description: \u003e-\n        SiP: secure paper tickets\n        SiP: security in data (signed bar code)\n        SiS: security in system\n      x-extensible-enum:\n        - SiP\n        - SiD\n        - SiS\n\n    LegacyReservationTariff:\n      type: object\n      description: \u003e-\n        Legacy tariff code and number of items or persons in case UIC 90918-1 is used for booking.\n      properties:\n        number:\n          description: number of items with this tariff code\n          type: integer\n          format: int32\n        code:\n          description: legacy tariff code\n          type: integer\n          format: int32\n\n    FareType:\n      type: string\n      description: Basic UIC fare types used in 90918-10, 90918-4, and 90918-9.\n      x-extensible-enum:\n        - ADMISSION\n        - RESERVATION\n        - INTEGRATED_RESERVATION\n        - ANCILLARY\n\n    FareConnectionPoint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Connection point connecting two fare regimes. The connection is possible between stations of the two provided station sets.\n        A legacy border point code (id) might be provided as an additional code within the stations (code list BORDER_POINT provided in URN).\n        In case the connection point is a real station this station is indicated.\n        In case the connection point is between stations for each side of the border real stations must be provided.\n        Multiple sets of station can be provided in the rare case that the connection point connects more than two station (A-B and A-C).\n        Multiple stations within a set at one side of the border might be provided in case of changes (new stations build near the border). \n        \n        Providing the UIC code for the station is mandatory.\n      required:\n        - stationSets\n      properties:\n        name:\n          type: string\n        stationSets:\n          type: array\n          items:\n            $ref: \"#/components/schemas/StationSet\"\n          minItems: 1\n\n    StationSet:\n      type: object\n      additionalProperties: false\n      required:\n        - stations\n      properties:\n        stations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/StopPlaceRef\"\n          minItems: 1\n\n    TrainValidity:\n      type: object\n      description: \u003e-\n        Validity depending on boarding / leaving of a train. The ticket is valid\n        from departure until the destination station in the train if departure or destination is within the from - until range.\n        The validation can reference the departure or the destination time to decide the validity (e.g. Eurail/Interrail passes\n        currently use the departure for the validity on night trains).\n      required:\n        - from\n        - until\n        - carriers\n        - scope\n      properties:\n        from:\n          type: string\n          format: date-time\n        until:\n          type: string\n          format: date-time\n        carriers:\n          type: array\n          minItems: 1\n          items:\n            $ref: \"#/components/schemas/Company\"\n        excludedServiceBrands:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ServiceBrandCode\"\n        includedServiceBrands:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ServiceBrandCode\"\n        scope:\n          type: string\n          description: Proposed default BOARDING\n          enum:\n            - BOARDING\n            - ARRIVAL\n      additionalProperties: false\n\n    ##### Fare-specific elements end\n\n    #### Common elements start\n    ## Referenced by distributor as well as allocator part\n\n    GeoPosition:\n      description: \u003e-\n        WGS84 coordinates position. Provided by OJP.\n      allOf:\n        - $ref: \"#/components/schemas/PlaceRef\"\n        - type: object\n          properties:\n            longitude:\n              $ref: \"#/components/schemas/Longitude\"\n            latitude:\n              $ref: \"#/components/schemas/Latitude\"\n#           altitude:   # Out of scope\n#             $ref: \"#/components/schemas/Altitude\"\n#           precision:   # Out of scope\n#             $ref: \"#/components/schemas/Precision\"\n          required:\n            - latitude\n            - longitude\n\n    Longitude:\n      type: number\n      description: Longitude from Greenwich Meridian. -180 (West) to +180 (East). Decimal degrees. eg 2.356.\n      format: float\n      example: 8.54021\n      minimum: -180.0\n      maximum: 180.0\n\n    Latitude:\n      type: number\n      description: Latitude from equator. -90 (South) to +90 (North). Decimal degrees. eg 56.356.\n      format: float\n      example: 47.37818\n      minimum: -90.0\n      maximum: 90.0\n\n    Section:\n      type: object\n      description: \u003e-\n        Allows to indicate the sub-part of the trip. LegIds are only relevant if\n        a trip can be referenced. When absent, the totality of the trip is priced.\n      properties:\n        startPlace:\n          $ref: \"#/components/schemas/PlaceRef\"\n        startLegId:\n          type: string\n        endPlace:\n          $ref: \"#/components/schemas/PlaceRef\"\n        endLegId:\n          type: string\n\n    Link:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The underlying system may provide links for pagination of links pointing on \n        further information (such as HTML download links, web sites or extended APIs).\n        Mechanism to add flexible extensions specific to an underlying system. Implemented\n        the JSON-HAL specification.\n      required:\n        - rel\n        - href\n      properties:\n        rel:\n          type: string\n          description: the \"rel\" field in HATEOAS navigation.\n          example: \"self\"\n        href:\n          type: string\n          format: uri\n          description: A URI\n          example: \"https://api.osdm.com/trips-collections/12345?cursor=2\"\n        type:\n          type: string\n          description: \u003e-\n            Hint to indicate the media type expected when dereferencing the target resource.\n          example: application/json\n\n    Translation:\n      type: object\n      required:\n        - language\n        - text\n      properties:\n        language:\n          type: string\n          description: ISO-639-1 language code\n        text:\n          type: string\n        shortText:\n          type: string\n\n    Text:\n      type: object\n      description: \u003e-\n        Directly included text in case of online services. Text must be encoded in UTF-8 format.\n      required:\n        - id\n        - text\n      properties:\n        id:\n          type: string\n        translations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Translation\"\n        text:\n          type: string\n        shortText:\n          type: string\n\n    Price:\n      type: object\n      required:\n        - currency\n        - amount\n      properties:\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        amount:\n          description: amount in cents\n          type: integer\n          format: int32\n        scale:\n          description: scale of the amount - the number of positions after the comma\n          type: integer\n          format: int32\n          default: 2\n        vats:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VAT\"\n\n    Currency:\n      type: string\n      description: ISO 4217 currency codes\n      example:\n        - CHF\n        - EUR\n        - SEK\n\n    VAT:\n      type: object\n      required:\n        - countryCode\n        - amount\n      properties:\n        countryCode:\n          $ref: \"#/components/schemas/CountryCode\"\n        amount:\n          description: amount in cents\n          type: integer\n          format: int32\n          example: 5\n        scale:\n          description: scale of the amount - the number of positions after the comma\n          type: integer\n          format: int32\n          default: 2\n        percentage:\n          type: number\n          format: float\n        taxId:\n          type: string\n        scope:\n          $ref: \"#/components/schemas/VatScope\"\n\n    VatScope:\n      type: string\n      description: scope where the VAT applies\n      x-extensible-enum:\n        - INTERNATIONAL\n        - NATIONAL\n        - SHORT_DISTANCE\n        - LONG_DISTANCE\n\n    Company:\n      type: string\n      description: \u003e-\n        Identifies a company. For rail, a RICS company code or compatible ERA company code are used.\n      example: \"urn:uic:rics:1185\"\n\n    ServiceBrandCode:\n      type: string\n      description: \u003e-\n        Service brand codes. For public transport, a code list can be found in OSDM's catalog of code list.\n        For example, \"163\" denotes TGV Lyria and \"175\" denotes Glacier Express.\n      example:\n        - 163\n        - 175\n\n    ServiceClass:\n      type: object\n      description: Class of service.\n      required:\n        - type\n        - name\n      properties:\n        type:\n          $ref: \"#/components/schemas/ServiceClassType\"\n        name:\n          type: string\n          description: The name the carrier itself uses to designate this specific service class.\n\n    ServiceClassType:\n      type: string\n      description: \u003e-\n        Type of quality level, finer grained than the comfort class.\n      x-extensible-enum:\n        - BEST\n        - HIGH\n        - STANDARD\n        - BASIC\n\n    Condition:\n      type: object\n      description: \u003e-\n        Describes sales and after sales conditions applicable to the product. \n        For a product to be refundable or exchangeable, at least one refund or exchange \n        (respectively) condition must be present.\n      required:\n        - type\n        - description\n      properties:\n        type:\n          $ref: \"#/components/schemas/ConditionType\"\n        description:\n          type: string\n\n    ConditionType:\n      type: string\n      x-extensible-enum:\n        - SALE\n        - PLACE_CHANGE\n        - FULFILLMENT\n        - EXCHANGE\n        - REFUND\n        - TRAVEL\n\n    AvailablePlace:\n      type: object\n      description: \u003e-\n        Describes the details of the available places.\n      required:\n        - accommodationType\n      properties:\n        accommodationType:\n          $ref: \"#/components/schemas/AccommodationType\"\n        accommodationSubType:\n          $ref: \"#/components/schemas/AccommodationSubType\"\n        placeProperties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AvailablePlaceProperty\"\n\n    AvailablePlaceProperty:\n      type: object\n      properties:\n        placeProperty:\n          $ref: \"#/components/schemas/PlaceProperty\"\n        numericAvailability:\n          type: integer\n          format: int32\n\n    ReservationDetail:\n      type: object\n      description: \u003e-\n        Describes the details of the reserved place(s).\n      required:\n        - accommodationType\n        - accommodationSubType\n      properties:\n        accommodationType:\n          $ref: \"#/components/schemas/AccommodationType\"\n        accommodationSubType:\n          $ref: \"#/components/schemas/AccommodationSubType\"\n        reservedPlaces:\n          description: \u003e-\n            Reserved places in a confirmed reservation. \n            Multiple place packs are needed to combined person and bicycle reservations\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReservedPlace\"\n\n    ReservedPlace:\n      type: object\n      description: \u003e-\n        Selection of places with common properties description element - textual description of the places\n        placeProperties is mandatory for allocator mode, for distributors the textual description is used\n      required:\n        - id\n        - passengerIds\n        - vehicle\n        - coach\n      properties:\n        id:\n          type: string\n        passengerIds:\n          type: array\n          items:\n            description: Id of the passenger\n            type: string\n        vehicle:\n          description: vehicle number (e.g. train number)\n          type: string\n        coach:\n          type: string\n        places:\n          description: descriptive string of the places (e.g. 11-35,51)\n          type: string\n        placeIds:\n          description: list of individual place numbers\n          type: array\n          items:\n            type: string\n        placeProperties:\n          description: place properties to be indicated to the customer\n          type: array\n          items:\n            type: object\n            description: \u003e-\n              Place properties of places in the place pack. Properties without a number refer \n              to all places.\n            required:\n              - placeProperty\n            properties:\n              placeProperty:\n                $ref: \"#/components/schemas/PlaceProperty\"\n\n    PlaceProperty:\n      type: string\n      description: see code list\n\n    AccommodationType:\n      type: string\n      description: \u003e-\n        Accommodation type definition out of the Accommodation Type Code List\n      default: SEAT\n\n    AccommodationSubType:\n      type: string\n      description: \u003e-\n        Accommodation type definition out of the Accommodation Sub Type Code List\n\n    SelectedPlaceOption:\n      type: object\n      description: \u003e-\n        Place selection options and selected options in an offer\n        - reference place for adjacent reservation\n        - selected optional place properties\n        - selected places from a graphical place selection\n      properties:\n        reservationOptions:\n          $ref: \"#/components/schemas/ReservationOption\"\n        vehicle:\n          description: \u003e-\n            Vehicle / train number is necessary in case of train parts with different train numbers\n          type: string\n        referencePlace:\n          $ref: \"#/components/schemas/SelectedReferencePlace\"\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SelectedOption\"\n        coaches:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SelectedCoach\"\n\n    ReservationOption:\n      type: object\n      properties:\n        preferences:\n          description: possible preferences to be requested in reservation without changing the fare\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReservationOptionGroup\"\n        graphicalReservation:\n          description: graphical reservation is supported, interface type \"NO\",\"UIC_918\",..\n          type: string\n\n    ReservationOptionGroup:\n      type: object\n      required:\n        - preferenceGroup\n        - preferences\n      properties:\n        preferenceGroup:\n          type: string\n          example: SEAT_DIRECTION\n        preferences:\n          type: array\n          items:\n            type: string\n            example: \"FORWARD_FACING\"\n\n    SelectedReferencePlace:\n      type: object\n      description: reference place for an adjacent reservation\n      properties:\n        coachNumber:\n          type: string\n        placeNumber:\n          type: string\n\n    SelectedOption:\n      type: object\n      description: \u003e-\n        Place selection of places for reservation linked to passengers.\n      required:\n        - passengerIds\n        - accommodationType\n        - accommodationSubType\n      properties:\n        passengerIds:\n          type: array\n          items:\n            description: Id of the passenger\n            type: string\n        accommodationType:\n          $ref: \"#/components/schemas/AccommodationType\"\n        accommodationSubType:\n          $ref: \"#/components/schemas/AccommodationSubType\"\n        placeProperties:\n          description: Properties of places as defined in 90810-10.\n          type: array\n          items:\n            description: selection from the optional place properties provided in the offer\n            type: string\n\n    PlaceAvailabilityResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        reservation:\n          $ref: \"#/components/schemas/PlaceAvailability\"\n\n    PlaceAvailability:\n      type: object\n      description: Availability of places on vehicle.\n      properties:\n        vehicle:\n          $ref: \"#/components/schemas/Vehicle\"\n        preSelections:\n          description: suggested pre-selection of places\n          type: array\n          items:\n            type: object\n            properties:\n              coach:\n                type: string\n              place:\n                type: string\n\n    Vehicle:\n      description: \u003e-\n        List of the coaches in a vehicle run ordered according to the physical\n        ordering of the vehicle.\n      type: array\n      items:\n        $ref: \"#/components/schemas/Coach\"\n\n    Coach:\n      type: object\n      required:\n        - number\n        - layoutId\n      properties:\n        compartments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Compartment\"\n        number:\n          description: coach number\n          type: string\n        status:\n          $ref: \"#/components/schemas/AvailabilityStatus\"\n        layoutId:\n          description: id to identify the coach layout\n          type: string\n        layoutIdUpperDeck:\n          description: id to identify a layout for the upper deck in a double deck coach\n          type: string\n        layoutIdLowerDeck:\n          description: id to identify a layout for the lower deck in a double deck coach\n          type: string\n        direction:\n          description: \u003e-\n            indication of the direction of travel standard direction is left\n            to right with ascending coordinates in the layout values.\n          type: string\n          x-extensible-enum:\n            - UNSPECIFIED\n            - IN_DIRECTION\n            - OPPOSITE_DIRECTION\n            - CHANGING\n            - STARING_IN_DIRECTION\n        owner:\n          $ref: \"#/components/schemas/Company\"\n        specialCoach:\n          type: string\n          description: indication of special coach\n          x-extensible-enum:\n            - RESTAURANT_COACH\n            - BICYCLE_COACH\n            - LUGGAGE_COACH\n            - TRAIN_HEAD\n\n    Compartment:\n      type: object\n      description: \u003e-\n        Areas within a coach that holds places. Areas might be selectable\n        as a whole. Usual areas would be classic compartments.\n      properties:\n        places:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PlacePosition\"\n        status:\n          type: string\n        isSelectable:\n          description: Indicates whether compartments are selectable as a whole only\n          type: boolean\n          default: false\n\n    PlacePosition:\n      type: object\n      description: description of a place\n      required:\n        - number\n        - status\n      properties:\n        number:\n          description: place number as indicated at the place in the coach\n          type: string\n        status:\n          $ref: \"#/components/schemas/AvailabilityStatus\"\n        isNotSelectable:\n          description: \u003e-\n            Flag to indicate individual places as non-selectable in\n            case complete compartments must be selected.\n          type: boolean\n          default: false\n\n    AvailabilityStatus:\n      description: status of the place or coach\n      type: string\n      enum:\n        - ALLOCATED\n        - FREE\n        - RESTRICTED\n      default: FREE\n\n    SelectedCoach:\n      type: object\n      properties:\n        coachNumber:\n          type: string\n          description: selected coach in case of graphical booking\n        places:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SelectedPlace\"\n\n    SelectedPlace:\n      type: object\n      description: selected place in case of graphical booking\n      properties:\n        passengerId:\n          description: Id of the passenger\n          type: string\n        placeNumber:\n          type: string\n\n    PurchaserResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        purchaser:\n          $ref: \"#/components/schemas/Purchaser\"\n\n    Purchaser:\n      type: object\n      description: purchaser information\n      required:\n        - id\n        - details\n      properties:\n        id:\n          type: string\n        externalRef:\n          description: \u003e-\n            A stable reference to a purchaser from other elements, or from caller system.\n            When received in input of a trip-offers-collection request, it must be echoed back in the\n            response.\n          type: string\n        details:\n          $ref: \"#/components/schemas/PersonDetail\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n    \n    PurchaserSpecification:\n      type: object\n      description: Minimal specification of a purchaser to request booking of an offer.\n      required:\n        - details\n      properties:\n        externalRef:\n          description: \u003e-\n            A stable reference to a purchaser from other elements, or from caller system.\n            When received in input of a trip-offers-collection request, it must be echoed back in the\n            response.\n          type: string\n        details:\n          $ref: \"#/components/schemas/PersonDetail\"\n\n    PassengerResponse:\n      type: object\n      properties:\n        warnings:\n          $ref: \"#/components/schemas/WarningCollection\"\n        passenger:\n          $ref: \"#/components/schemas/Passenger\"\n\n    Passenger:\n      type: object\n      description: passenger information needed at offering step\n      required:\n        - id\n        - type\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            Id of the passenger resource in case service to patch a single passenger is provided.\n        summary:\n          type: string\n          description: A human-readable description of the passenger.\n          example: Andreas Schlapbach\n        externalRef:\n          description: \u003e-\n            A stable reference to a passenger from other elements, or from caller system.\n            When received in input of a trip-offers-collection request, it must be echoed back in the\n            response.\n          type: string\n        dateOfBirth:\n          description: date of birth of the passenger\n          type: string\n          format: date\n        type:\n          $ref: \"#/components/schemas/PassengerType\"\n        cards:\n          description: reduction or loyalty cards owned by the passenger\n          type: array\n          items:\n            $ref: \"#/components/schemas/CardReference\"\n        gender:\n          $ref: \"#/components/schemas/Gender\"\n        details:\n          $ref: \"#/components/schemas/PersonDetail\"\n        passport:\n          $ref: \"#/components/schemas/IdentificationDocument\"\n        transportable:\n          $ref: \"#/components/schemas/Transportable\"\n        prmNeeds:\n          type: array\n          description: \u003e-\n            For the persons with reduced mobility (PRMs) its specific needs for support are expressed.\n          items:\n            $ref: \"#/components/schemas/PRMNeedType\"\n        _links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Link\"\n\n    PassengerSpecification:\n      type: object\n      description: \u003e-\n        Minimal specification of a passenger to request offers.\n      required:\n        - type\n      properties:\n        externalRef:\n          description: \u003e-\n            A stable reference to a passenger from other elements, or from caller system.\n            When received in input of a trip-offers-collection request, it must be echoed back in the\n            response.\n          type: string\n          example: \"TK-id-12345\"\n        type:\n          $ref: \"#/components/schemas/PassengerType\"\n        dateOfBirth:\n          description: \u003e-\n            Date of birth of the passenger. Only needed for passengers of type persons, family child, PRM\n            and wheelchair.\n          type: string\n          format: date\n        cards:\n          description: reduction or loyalty cards owned by the passenger\n          type: array\n          items:\n            $ref: \"#/components/schemas/CardReference\"\n        prmNeeds:\n          type: array\n          description: \u003e-\n            For the persons with reduced mobility (PRMs) its specific needs for support are expressed.\n          items:\n            $ref: \"#/components/schemas/PRMNeedType\"\n\n    PassengerType:\n      type: string\n      description: \u003e-\n        Passenger type according to UIC passenger, i.e. passenger type list.\n        See https://unioninternationalcheminsdefer.github.io/OSDM/spec/catalog-of-code-lists/\n        Proposed default PERSON\n      x-extensible-enum:\n        - DOG\n        - PET\n        - LUGGAGE\n        - PRM\n        - BICYCLE\n        - PRAM\n        - COMPANION_DOG\n        - CAR\n        - PERSON\n        - MOTORCYCLE\n        - TRAILER\n        - FAMILY_CHILD\n        - WHEELCHAIR\n      example: PERSON\n\n    PRMNeedType:\n      type: string\n      x-extensible-enum:\n        - NEED_PRM_SUPPORT\n        - WHEELCHAIR\n        - ACCOMPANYING_DOG\n        - COMPANION_SEAT\n        - COMPANION\n\n    PersonDetail:\n      type: object\n      description: \u003e-\n        Personal information potentially needed at booking step. To support privacy by design,\n        it is not permitted to send personal information not required to create a valid booking.\n      required:\n        - firstName\n        - lastName\n      properties:\n        preferredLanguage:\n          type: string\n          description: ISO-639-1 language code\n        summary:\n          type: string\n          description: A human-readable description of the person.\n          example: Andreas Schlapbach, Riedweg 4, 3074 Bern, schlpbch@gmail.com\n        firstName:\n          type: string\n        lastName:\n          type: string\n        eMail:\n          type: string\n        phoneNumber:\n          description: \u003e-\n            Preferably a mobile phone number, to be contacted in case changes to the booking occur, e.g.,\n            in case of interruptions.\n          type: string\n        address:\n          description: Address of the person, relevant for some pass holders\n          $ref: \"#/components/schemas/Address\"\n\n    Gender:\n      type: string\n      description: \u003e-\n        The gender of the passenger, which is important in the case of night trains.\n      enum:\n        - MALE\n        - FEMALE\n        - X\n\n    Transportable:\n      type: object\n      description: \u003e-\n        Transportables are handled similar to passengers and might need a ticket or \n        reservation.\n      required:\n        - type\n      properties:\n        type:\n          description: \u003e-\n            Subset of the values from the passenger type code list IRS 90918-10\n          type: string\n          x-extensible-enum:\n            - PET\n            - BICYCLE\n            - CAR\n            - MOTOR_CYCLE\n            - CAR_TRAILER\n        car:\n          $ref: \"#/components/schemas/Car\"\n        motorCycle:\n          $ref: \"#/components/schemas/MotorCycle\"\n        trailer:\n          $ref: \"#/components/schemas/Trailer\"\n\n    Car:\n      type: object\n      description: \u003e-\n        For an auto car reservation the required attributes weight, length, width and height are required.\n        For a parking reservation the license plate might be required.\n      properties:\n        weight:\n          description: weight in kg\n          type: integer\n          format: int32\n          minimum: 0\n        length:\n          description: length in cm\n          type: integer\n          format: int32\n          minimum: 0\n        width:\n          description: width in cm\n          type: integer\n          format: int32\n          minimum: 0\n        height:\n          description: height in cm\n          type: integer\n          format: int32\n          minimum: 0\n        model:\n          type: string\n          description: Free text description of the model.\n          example: BMW X5\n        attachedItems:\n          description: Indication of items attached to the car.\n          type: array\n          items:\n            type: string\n            x-extensible-enum:\n              - ROOF_RACK\n              - BICYCLE_STAND\n        licensePlate:\n          type: string\n          description: \u003e-\n            The license plate is a personal data item and must not be requested in an offer request. \n\n    MotorCycle:\n      type: object\n      required:\n        - isSideCarIncluded\n      properties:\n        isSideCarIncluded:\n          type: boolean\n          default: false\n        licensePlate:\n          type: string\n          description: \u003e-\n            The license plate is a personal data item and must not be requested in an offer request. \n\n    Trailer:\n      type: object\n      description: \u003e-\n        For an auto car reservation the required attributes weight, length, width and height are required.\n        For a parking reservation the license plate might be required.\n      properties:\n        weight:\n          description: weight in kg\n          type: integer\n          format: int32\n          minimum: 0\n        length:\n          description: length in cm\n          type: integer\n          format: int32\n          minimum: 0\n        width:\n          description: width in cm\n          type: integer\n          format: int32\n          minimum: 0\n        height:\n          description: height in cm\n          type: integer\n          format: int32\n        licensePlate:\n          description: \u003e-\n            The trailer plate is a personal data item and must not be provided in an offer request. \n            It must be patched into the offer after the customer accepted the offer for booking\n          type: string\n\n    IdentificationDocument:\n      type: object\n      description: \u003e-\n        Travel document data to be exchanged for border control in case of legal requirements\n        PassengerDetails providing personal information only information required in the offer. \n        It is not allowed to send personal information not required in the offer reply. \n        It is legally not allowed to send these personal data already in the offer request.\n      required:\n        - id\n        - type\n      properties:\n        id:\n          description: Identifier on the document.\n          type: string\n        type:\n          description: Refer to code list for values\n          type: string\n        name:\n          description: ICAO transliteration identical as written in the document\n          type: string\n        nationality:\n          description: ISO 3166 2A codes\n          type: string\n        birthCity:\n          type: string\n        issuingCity:\n          description: place where the document is issued\n          type: string\n        residenceCity:\n          type: string\n        birthCountryCode:\n          $ref: \"#/components/schemas/CountryCode\"\n        issuingCountryCode:\n          $ref: \"#/components/schemas/CountryCode\"\n        residenceCountryCode:\n          $ref: \"#/components/schemas/CountryCode\"\n        issuingDate:\n          type: string\n          format: date-time\n        gender:\n          $ref: \"#/components/schemas/Gender\"\n        expirationDate:\n          type: string\n          format: date\n\n    CardReference:\n      type: object\n      required:\n        - types\n        - code\n      properties:\n        types:\n          description: Types of card. One card can have multiple roles, such as loyalty and reduction\n          type: array\n          items:\n            $ref: \"#/components/schemas/CardType\"\n        code:\n          description: Code of the card type according to issuer.\n          type: string\n        name:\n          description: Card name for printing on fulfillments.\n          type: string\n        number:\n          description: Unique number identifying the card.\n          type: string\n        issuer:\n          $ref: \"#/components/schemas/Company\"\n\n    CardType:\n      type: string\n      description: Proposed default REDUCTION_CARD\n      x-extensible-enum:\n        - REDUCTION_CARD\n        - LOYALTY_CARD\n        - CHIP_CARD\n        - PASS\n\n    #### Common elements end\n",
			"canonicalURL": "/github.com/UnionInternationalCheminsdeFer/OSDM@bd550f68320ebd345af8743b3a04c57529ed998c/-/blob/specification/v1.4.0/OSDM-online-api-v1.4.1.yml",
			"externalURLs": [
				{
					"url": "https://github.com/UnionInternationalCheminsdeFer/OSDM/blob/bd550f68320ebd345af8743b3a04c57529ed998c/specification/v1.4.0/OSDM-online-api-v1.4.1.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"OfferResponse\": parse schema: property \"offer\": parse schema: parse schema: parse schema: property \"admissions\": parse schema: parse schema: parse schema: property \"commonOfferPartAttributes\": parse schema: parse schema: property \"exchangeable\": at 1:25806: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}