{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gematik/api-vzd"
		},
		"file": {
			"name": "DirectoryAdministration.yaml",
			"size": 0,
			"path": "src/openapi/DirectoryAdministration.yaml",
			"byteSize": 78554,
			"content": "openapi: 3.0.1\ninfo:\n  title: I_Directory_Administration\n  description: REST Schnittstelle zur Pflege der Verzeichniseinträge.\n              Über diese Schnittstelle können Verzeichniseinträge inklusive Zertifikaten erzeugt, aktualisiert und gelöscht werden. Die Administration von Fachdaten erfolgt über Schnittstelle I_Directory_Application_Maintenance und wird durch die Fachanwendungen durchgeführt. Lesender Zugriff auf die Fachdaten ist mit Operation getDirectoryEntries in vorliegender Schnittstelle möglich.\n  version: 1.8.1\n  # Änderungen in Version 1.8.1\n  #  - Attribute \"KOM-LE-Version\" in eine Liste geändert \n  #  - Attribut \"active\" für Zertifikate aufgenommen\n  # Änderungen in Version 1.8.0\n  #  - Operation read_Directory_Entry_for_Sync: Zur Kompatibilität mit existierenden Clients wurde \n  #    read_Directory_Entry_for_Sync in der Version ohne Paging wieder aufgenommen.\n  #    Die Operation mit Paging Mechanismus wurde in read_Directory_Entry_for_Sync_paging umbenannt.\n  #  - Konkretisierung der Filtermöglichkeiten der Operationen read_Directory_Entry, \n  #    read_Directory_Entry_for_Sync und read_Directory_Entry_for_Sync_paging\n  #  - Schema readDirectoryEntryforSyncResponse: Verschachtelung von directoryEntries reduziert.\n  #  - Schema userCertificate: \"required: dn\" entfernt, da diese Attribute nicht im Request enthalten sein müssen.\n  #\n  # Änderungen in Version 1.7.0\n  #  - Schema baseDirectoryEntry: \"required: cn, dn\" entfernt, da diese Attribute nicht im Request enthalten sein müssen.\n  #  - Error Struktur angepasst (mehrere Fehlermeldungen ermöglicht)\n  #  - Paging in Operation read_Directory_Entry_for_Sync aufgenommen\n  #  - Filtermöglichkeiten in Leseoperationen read_Directory_Entry und\n  #    read_Directory_Entry_for_Sync (Wildcard \"*\" \u0026 Vorhandensein \\00) aufgenommen.\n  #  - Suchparameter in Leseoperationen read_Directory_Entry und\n  #    read_Directory_Entry_for_Sync aufgenommen:\n  #    maxKOMLEadr, changeDateTimeFrom, changeDateTimeTo\n  #  - Fehlercodes aus Version 1.5.2 übernommen:\n  #     - Fehlercode 409 für Operation add_Directory_Entry_Certificate hinzugefügt.\n  #     - Fehlercode 409 für Operation add_Directory_Entry hinzugefügt  (Basiseintrag bereits vorhanden).  \n  #     - Fehlercode 400 für Operation add_Directory_Entry hinzugefügt  (generelle Fehlersituationen).  \n  #  - Schema #/components/schemas/Error' korrigiert:\n  #      In der bisherigen Definition war die Angabe von maxItems/minItems wirkungslos.\n  #      Deshalb wird jetzt in dem Error Schema ein 'array' genutzt. \n  #\n  # Änderungen in Version 1.6.3\n  #  - Operation \"delete_Directory_Entry_Certificate\" hinzugefügt.\n  #\n  # Änderungen in Version 1.6.2\n  #  - Im Datenmodell für Attribut \"changeDateTime\" den Format String \"date-time\" auskommentiert. Mit dieser Format Vorgabe ist kein Code mehr generierbar. Es soll sich aber weiterhin an das Format gehalten werden.\n  #\n  # Änderungen in Version 1.6.1\n  #  - modify_Directory_Entry Operation - responses:\n  #      Für Response 200 Header \"X-maxKOMLEadr-Limit\" hinzugefügt\n  #      Über diesen Header wird dem Client angezeigt, ob die Anzahl der aktuell - in den Fachdaten - hinterlegten mail Adressen den Wert in Attribut maxKOMLEadr übersteigt. \n  #  - KOM-LE_Version in Schema FAD1 hinzugefügt\n  #\n  # Änderungen in Version 1.6.0\n  #  - getInfo Operation - inklusive den dazugehörenden Schema Objekten \"InfoObject\", \"Contact\" und \"License\" - hinzugefügt.\n  #  - Attribute professionOID und entryType zusätzlich in die Basisdaten - als Kopie aus den Zertifikatsdaten (userCertificate) aufgenommen. Diese Attribute wurden ebenfalls in die read_Directory_Entry Operation als Suchparameter aufgenommen.\n  #\n  # Änderungen in Version 1.5.2\n  #  - Fehlercode 409 für Operation add_Directory_Entry_Certificate hinzugefügt (Zertifikat bereits vorhanden).\n  #  - Fehlercode 409 für Operation add_Directory_Entry hinzugefügt  (Basiseintrag bereits vorhanden).  \n  #  - Fehlercode 400 für Operation add_Directory_Entry hinzugefügt  (generelle Fehlersituationen).  \n  #\n  # Änderungen in Version 1.5.1\n  #  - Header 'Accept: application/json' wird bei delete_Directory_Entry benötigt.\n  #    Dies wird durch Angabe von \"application/json\" für den content von dem\n  #    Response mit HTTP Status 200 gewährleistet. \n  #\n  # Änderungen in Version 1.5.0\n  #  - Attribut \"owner\" in \"holder\" umbenannt (\"owner\" ist in LDAP vordefiniert und kann deshalb nicht für den vorgesehenen Zweck genutzt werden)\n\n  # Änderungen in Version 1.4.0\n  #  - Operation read_Directory_Entry: Einschränkung auf 100 Suchergebnisse wieder eingeführt\n  #  - Operation read_Directory_Entry_for_Sync: Für die Datensynchronisation der Herausgeber mit dem VZD wird diese Suchabfrage ohne Limitierung auf 100 Suchergebnisse ergänzt. Die parallele Ausführung dieser Operation wird vom Server aus Performancegründen eingeschränkt.\n  #  - Attribut \"usage\" in Datenstruktur \"userCertificate\": \"enum\" im Format gestrichen.\n  #\n  # Änderungen in Version 1.3.0\n  #  - Die direkte Suche von Verzeichniseinträgen (baseDirectoryEntry) mit dem \n  #  Suchparameter telematikID wird unterstützt.\n  #     o telematikID im baseDirectoryEntry hinzugefügt und in \n  #       add_Directory_Entry, read_Directory_Entry und modify_Directory_Entry ergänzt\n  #  - Paging Parameter entfernt (für eigene Verzeichniseinträge und Verzeichniseinträge \n  #    ohne owner wird die Begrenzung auf 100 Suchergebnisse aufgehoben)\n  #  - Operation read_Directory_Entry: Suchparameter telematikID-SubStr ergänzt\n  #  - Operation read_Directory_Entry: Suchparameter telematikID-SubStr ergänzt\n  #  - Datenmodell: \"baseDirectoryEntry\"\n  #     o Ländercode \"countryCode\" ergänzt und in Operationen hinzugefügt\n  #     o Änderungsdatum \"changeDateTime\" ergänzt\n  #\n  # Änderungen in Version 1.2.2\n  # Übernahme der Änderungen aus f_r313_hotfix_5 (version 1.1.2)\n  #   - /DirectoryEntries\n  #       get - Response Fehlercode 400 gestrichen. \n  #       Bei mehr als 100 gefundenen Einträgen werden nur 100\n  #       gefundenen Einträge zurückgegeben (Response 200), falls kein Paging genutzt wird.\n  #   - /DirectoryEntries/Certificates\n  #       get - Response Fehlercode 400 gestrichen. \n  #       Bei mehr als 100 gefundenen Einträgen werden nur 100\n  #       gefundenen Einträge zurückgegeben (Response 200).                                                                                             \n  #\n  # Änderungen in Version 1.2.1\n  #   - /DirectoryEntries\n  #       read_Directory_Entry: \n  #          Suchparameter \"baseEntryOnly\" ergänzt\n  # Änderungen in Version 1.2.0\n  #   - /DirectoryEntries\n  #       read_Directory_Entry: \n  #          Suchparameter \"owner\" ergänzt\n  #          Paging Parameter ergänzt\n  #   - searchControlValue für Paging der Suchergebnisse ergänzt\n  #   - /DirectoryEntries/{uid}/baseDirectoryEntries:\n  #        modify_Directory_Entry: Fehlerkode 422 ergänzt (ungültiger owner im Request Parameter)\n  #   - /DirectoryEntries/{uid}/Certificates/{certificateEntryID}:\n  #       put \u0026 delete - Operationen gestrichen\n  #   -   schemas:\n  #         baseDirectoryEntry:\n  #           Attribute \"owner\" und \"maxKOMLEadr\" mit Beschreibung der Auswirkungen auf die Operationen hinzugefügt\n  # Änderungen in Version 1.1.1\n  #   - /DirectoryEntries/Certificates\n  #       get - UID ist kein Pflichtparameter mehr um die Suche mit der TelematikID zu ermöglichen\n  #   - Texte der HTTP Fehlercodes angepasst\n\nexternalDocs:\n  description: Schnittstelle zur Pflege der Verzeichniseinträge\n  url: http://github.com/gematik/api-vzd/\nservers:\n- url: https://vzdpflege-test.vzd.ti-dienste.de:9543/\n  description: Testumgebung\n- url: https://vzdpflege-ref.vzd.ti-dienste.de:9543/\n  description: Referenzumgebung\n- url: https://vzdpflege.vzd.ti-dienste.de:9543/\n  description: Produktivumgebung\ntags:\n- name: getInfo DirectoryEntry Administration\n  description: Diese Operation liefert Metadaten über diese Schnittstelle\n- name: DirectoryEntry Administration\n  description: Pflege der Verzeichniseinträge (Basiseinträge)\n- name: Certificate Administration\n  description: Pflege der Zertifikatseinträge \n- name: DirectoryEntry Synchronization\n  description: Synchronisation der Verzeichniseinträge (Basiseinträge) mit dem eigenen Datenbestand\npaths:\n  /:\n    get:\n      tags:\n      - getInfo DirectoryEntry Administration\n      summary: Diese Operation liefert Metadaten über diese Schnittstelle\n      description: Liefert die Metadaten aus dem Info Object diese OpenAPI Spezifikation und ergänzt sie.\n      operationId: getInfo\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/InfoObject'\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n\n\n  /DirectoryEntries:\n    post:\n      tags:\n      - DirectoryEntry Administration\n      summary: Einen Eintrag zum Verzeichnisdienst hinzufügen\n      operationId: add_Directory_Entry\n      requestBody:\n        description: Datensatz für den neuen Eintrag. Die Attribute müssen wie folgt belegt sein\n                       dn.*          Leer/nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                       givenName     Nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                       sn            Nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                       cn            Nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                       displayName   Kann optional belegt werden.\n                       streetAddress Kann optional belegt werden.\n                       postalCode    Kann optional belegt werden.\n                       countryCode   Kann optional belegt werden.\n                                     Falls nicht belegt, ergänzt der VZD den Code für Deutschland (Defaultwert).\n                       localityName  Kann optional belegt werden.\n                       stateOrProvinceName  Kann optional belegt werden.\n                       title         Kann optional belegt werden.\n                       organization  Kann optional belegt werden.\n                       otherName     Kann optional belegt werden.\n                       telematikID Kann optional belegt werden.\n                          Das ist die telematikID in den Basisdaten (baseDirectoryEntry).\n                          Wird diese telematikID und userCertificate bzw. die telematikID in userCertificate angegeben, dann müssen diese telematikIDs übereinstimmen.\n                          Bei unterschiedlichen telematikID wird die Operation mit Fehlercode 422 abgelehnt.\n\n                       specialization  Kann optional belegt werden.\n                       domainID      Kann optional belegt werden.\n                       holder         Kann optional belegt werden.\n                       maxKOMLEadr   Kann optional belegt werden.\n                       personalEntry Nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                       dataFromAuthority Nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                       userCertificates  Kann optional belegt werden.\n                        dn.uid        Leer/nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                        dn.dc         Leer/nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                        dn.ou         Leer/nicht vorhanden (wird vom Verzeichnisdienst  belegt)\n                        dn.cn         Leer/nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                        telematikID   Kann optional belegt werden.\n                          Wird telematikID und userCertificate angegeben, dann muss diese telematikID mit der telematikID im userCertificate übereinstimmen.\n                          Bei unterschiedlichen telematikID wird die Operation mit Fehlercode 422 abgelehnt.\n                        entryType     Nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                        professionOID Nicht vorhanden (wird vom Verzeichnisdienst belegt)\n                        usage         Kann optional belegt werden.\n                        userCertificate   Kann optional belegt werden (Format DER, Base64 kodiert)\n                        description   Kann optional belegt werden.\n                        Entsprechend gemSpec_VZD wird ein Teil der Attribute durch den Verzeichnisdienst automatisch mit Werten aus dem Zertifikat gefüllt. Wenn in dieser Operation Attribute - für die dies erlaubt ist - mit einem Wert belegt werden, wird dieser Wert im Verzeichniseintrag gespeichert (auch wenn der Wert durch den Verzeichnisdienst aus dem Zertifikat entnommen werden kann).   \n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDirectoryEntry'\n        required: true\n      responses:\n        201:\n          description: Created\n                     # Der Verzeichniseintrag wurde angelegt. Zurückgegeben wird der distinguishedName des erzeugten Eintrags.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/distinguishedName'\n        400:\n          description: Bad Request\n                # Allgemeiner Fehler im Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n                     # Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        405:\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        409:\n          description: Conflict\n                # Verzeichniseintrag (identifiziert anhand der Telematik-ID) ist schon vorhanden.\n                #      Die 'Error' Parameter werden für diese Fehler so gesetzt:\n                #           \"attributeName\": \"telematikID\",\n                #           \"attributeError\": \"DirectoryEntry already exists\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        422:\n          description: Unprocessable Entity\n                # Z.B. Wert aus dem Request Attribut \"holder\" nicht gültig\n                # Bei unterschiedlichen telematikIDs (Parameter telematikID und Wert im userCertificate) wird die Operation mit Fehlercode 422 abgelehnt.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n    get:\n      tags:\n      - DirectoryEntry Administration\n      summary: Gesamten Verzeichniseintrag lesen\n      description: Liefert alle zum Filter passenden Verzeichniseinträge (maximal 100 Einträge). Die angegebenen Parameter werden mit logischen UND verknüpft.\n#\n# Für die Leseoperationen read_Directory_Entry, read_Directory_Entry_for_Sync und\n# read_Directory_Entry_for_Sync_paging der Schnittstellen I_Directory_Administration \n# und I_Directory_Application_Maintenance\n# werden die folgenden Filtermöglichkeiten unterstützt: \n#     o Suche mit Wildcard \"*\" in den Parametern\n#           - givenName\n#           - sn\n#           - cn\n#           - displayName\n#           - streetAddress\n#           - postalCode\n#           - countryCode\n#           - localityName\n#           - stateOrProvinceName\n#           - title\n#           - organization\n#           - otherName\n#           - telematikID\n#           - specialization\n#           - domainID\n#           - holder\n#           - professionOID\n#       Wildcard ist am Ende und am Anfang nutzbar:\n#           - *Mustermann* - \"contains\" \n#           - \"Dr. Manfred*\" - \"startsWith\"\n#           - \"* MBA\" - \"endsWith\"\n#           treffen alle \"Dr. Manfred Mustermann MBA\".\n#\n#      o Suche nach Vorhandensein ODER leerem Inhalt eines Attributs des \n#        VZD Datensatzes durch Belegung des Attributs im GET Request mit \"\" in den Parametern\n#           - givenName\n#           - sn\n#           - cn\n#           - displayName\n#           - streetAddress\n#           - postalCode\n#           - countryCode\n#           - localityName\n#           - stateOrProvinceName\n#           - title\n#           - organization\n#           - otherName\n#           - specialization\n#           - domainID\n#           - holder\n#           - professionOID\n#           - maxKOMLEadr\n#           - changeDateTimeFrom\n#           - changeDateTimeTo\n#        Diese Suche findet sowohl Datensätze mit nicht vorhandenem Attribut\n#        wie auch vorhandenem aber leerem Attribut.\n#     Alle Filterparameter einer Leseoperationen werden mit einem UND (\u0026) verknüpft.\n#        \n\n      operationId: read_Directory_Entry\n      parameters:\n      - name: uid\n        in: query\n        description: ID von dem Verzeichniseintrag (distinguishedName.uid)\n        schema:\n          type: string  \n      - name: givenName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs givenName.\n        schema:\n          type: string  \n      - name: sn\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs sn.\n        schema:\n          type: string  \n      - name: cn\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs cn.\n        schema:\n          type: string  \n      - name: displayName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs displayName.\n        schema:\n          type: string  \n      - name: streetAddress\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs streetAddress.\n        schema:\n          type: string  \n      - name: postalCode\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs postalCode.\n        schema:\n          type: string  \n      - name: countryCode\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs countryCode.\n        schema:\n          type: string    \n      - name: localityName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs localityName.\n        schema:\n          type: string  \n      - name: stateOrProvinceName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs stateOrProvinceName.\n        schema:\n          type: string  \n      - name: title\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs title.\n        schema:\n          type: string  \n      - name: organization\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs organization.\n        schema:\n          type: string  \n      - name: otherName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs otherName.\n        schema:\n          type: string  \n      - name: telematikID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).\n        schema:\n          type: string  \n      - name: telematikID-SubStr\n        in: query\n        description: Erlaubt die Suche nach einem Substring am Anfang der telematikID (die telematikID in den Basisdaten).\n                      Entspricht der LDAP Filters Substring Assertion vom Typ \"subInitial Component\".\n        schema:\n          type: string  \n      - name: specialization\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs specialization. \n                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: domainID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs domainID. \n                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: holder\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs holder. \n                     Der Verzeichniseintrag wird selektiert, wenn der angegebene holder im Attribut holder (array) des Verzeichniseintrags enthalten ist.\n                     Wenn der Parameter mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (maximal 100 Einträge).\n                     Zur Suche nach Einträge ohne holder ist der Parameter mit dem einem leeren String \"\" zu belegen. Auch in diesem Fall werden alle gefundenen Einträge zurückgegeben (maximal 100 Einträge).\n        schema:\n          type: string  \n      - name: personalEntry\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs personalEntry. \n        schema:\n          type: string  \n      - name: dataFromAuthority\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs dataFromAuthority. \n        schema:\n          type: string  \n      - name: professionOID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs professionOID. \n                     Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den professionOID's (array) des Basiseintrags vorhanden ist. \n        schema:\n          type: string  \n      - name: entryType\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs entryType. \n                     Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den entryType's (array) des Basiseintrags vorhanden ist. \n        schema:\n          type: string  \n      - name: maxKOMLEadr\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs maxKOMLEadr. \n        schema:\n          type: string  \n      - name: changeDateTimeFrom\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. \n                  #  Selektiert alle Datensätze mit \n                  #  changeDateTime \u003e= changeDateTimeFrom\n        schema:\n          type: string  \n          # format: date-time\n          example: \"2017-07-21T17:32:28Z\"          \n      - name: changeDateTimeTo\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. \n                  #  Selektiert alle Datensätze mit \n                  #  changeDateTime \u003c= changeDateTimeTo\n        schema:\n          type: string  \n          # format: date-time\n          example: \"2018-07-21T17:32:28Z\"\n      - name: baseEntryOnly\n        in: query\n        description: Mit baseEntryOnly = \"true\" wird nur der Basiseintrag (baseDirectoryEntry) im Response zurückgegeben. Falls nicht angegeben oder mit \"false\" belegt, wird der gesamte Verzeichniseintrag mit Zertifikaten und Fachdaten im Response zurückgegeben.\n        schema:\n          type: boolean\n          example: true\n\n        \n      responses:\n        200:\n          description: OK\n                    #  Es werden alle zu dem Filter Parametern passenden Verzeichniseinträge - inklusive Zertifikaten und Fachdaten - zurückgegeben.\n                    # Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.   \n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DirectoryEntries'\n\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n\n  /DirectoryEntriesSync:\n    get:\n      tags:\n      - DirectoryEntry Synchronization\n      summary: Synchronisation der Verzeichniseinträge zwischen VZD und Herausgeber\n      description: Liefert - analog zu read_Directory_Entry - alle zum Filter passenden Verzeichniseinträge. Im Unterschied zu read_Directory_Entry wird die Limitierung auf 100 Suchergebnisse aufgehoben. Die parallele Ausführung dieser Operation wird vom Server aus Performancegründen eingeschränkt.\n        Diese Operation soll nur genutzt werden, wenn mehr als 100 Suchergebnisse benötigt werden. Für alle anderen Suchanfragen soll Operation read_Directory_Entry genutzt werden.\n#\n# Für die Leseoperationen read_Directory_Entry, read_Directory_Entry_for_Sync und\n# read_Directory_Entry_for_Sync_paging der Schnittstellen I_Directory_Administration \n# und I_Directory_Application_Maintenance\n# werden die folgenden Filtermöglichkeiten unterstützt: \n#     o Suche mit Wildcard \"*\" in den Parametern\n#           - givenName\n#           - sn\n#           - cn\n#           - displayName\n#           - streetAddress\n#           - postalCode\n#           - countryCode\n#           - localityName\n#           - stateOrProvinceName\n#           - title\n#           - organization\n#           - otherName\n#           - telematikID\n#           - specialization\n#           - domainID\n#           - holder\n#           - professionOID\n#       Wildcard ist am Ende und am Anfang nutzbar:\n#           - *Mustermann* - \"contains\" \n#           - \"Dr. Manfred*\" - \"startsWith\"\n#           - \"* MBA\" - \"endsWith\"\n#           treffen alle \"Dr. Manfred Mustermann MBA\".\n#\n#      o Suche nach Vorhandensein ODER leerem Inhalt eines Attributs des \n#        VZD Datensatzes durch Belegung des Attributs im GET Request mit \"\" in den Parametern\n#           - givenName\n#           - sn\n#           - cn\n#           - displayName\n#           - streetAddress\n#           - postalCode\n#           - countryCode\n#           - localityName\n#           - stateOrProvinceName\n#           - title\n#           - organization\n#           - otherName\n#           - specialization\n#           - domainID\n#           - holder\n#           - professionOID\n#           - maxKOMLEadr\n#           - changeDateTimeFrom\n#           - changeDateTimeTo\n#        Diese Suche findet sowohl Datensätze mit nicht vorhandenem Attribut\n#        wie auch vorhandenem aber leerem Attribut.\n#     Alle Filterparameter einer Leseoperationen werden mit einem UND (\u0026) verknüpft.\n#        \n      operationId: read_Directory_Entry_for_Sync\n      parameters:\n      - name: uid\n        in: query\n        description: ID von dem Verzeichniseintrag (distinguishedName.uid)\n        schema:\n          type: string  \n      - name: givenName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs givenName.\n        schema:\n          type: string  \n      - name: sn\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs sn.\n        schema:\n          type: string  \n      - name: cn\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs cn.\n        schema:\n          type: string  \n      - name: displayName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs displayName.\n        schema:\n          type: string  \n      - name: streetAddress\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs streetAddress.\n        schema:\n          type: string  \n      - name: postalCode\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs postalCode.\n        schema:\n          type: string  \n      - name: countryCode\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs countryCode.\n        schema:\n          type: string    \n      - name: localityName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs localityName.\n        schema:\n          type: string  \n      - name: stateOrProvinceName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs stateOrProvinceName.\n        schema:\n          type: string  \n      - name: title\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs title.\n        schema:\n          type: string  \n      - name: organization\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs organization.\n        schema:\n          type: string  \n      - name: otherName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs otherName.\n        schema:\n          type: string  \n      - name: telematikID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).\n        schema:\n          type: string  \n      - name: telematikID-SubStr\n        in: query\n        description: Erlaubt die Suche nach einem Substring am Anfang der telematikID (die telematikID in den Basisdaten).\n                      Entspricht der LDAP Filters Substring Assertion vom Typ \"subInitial Component\".\n        schema:\n          type: string  \n      - name: specialization\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs specialization. \n                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: domainID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs domainID. \n                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: holder\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs holder. \n                     Der Verzeichniseintrag wird selektiert, wenn der angegebene holder im Attribut holder (array) des Verzeichniseintrags enthalten ist.\n                     Wenn der Parameter mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (für eigene Einträge gilt das Limit von 100 Ergebnissen nicht).\n                     Zur Suche nach Einträge ohne holder ist der Parameter mit dem einem leeren String \"\" zu belegen. Auch in diesem Fall werden alle gefundenen Einträge zurückgegeben (für Einträge ohne holder gilt das Limit von 100 Ergebnissen nicht).\n        schema:\n          type: string  \n      - name: personalEntry\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs personalEntry. \n        schema:\n          type: string  \n      - name: dataFromAuthority\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs dataFromAuthority. \n        schema:\n          type: string  \n      - name: maxKOMLEadr\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs maxKOMLEadr. \n        schema:\n          type: string  \n      - name: changeDateTimeFrom\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. \n                  #  Selektiert alle Datensätze mit \n                  #  changeDateTime \u003e= changeDateTimeFrom\n        schema:\n          type: string  \n          # format: date-time\n          example: \"2017-07-21T17:32:28Z\"          \n      - name: changeDateTimeTo\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. \n                  #  Selektiert alle Datensätze mit \n                  #  changeDateTime \u003c= changeDateTimeTo\n        schema:\n          type: string  \n          # format: date-time\n          example: \"2018-07-21T17:32:28Z\"\n      - name: baseEntryOnly\n        in: query\n        description: Mit baseEntryOnly = \"true\" wird nur der Basiseintrag (baseDirectoryEntry) im Response zurückgegeben. Falls nicht angegeben oder mit \"false\" belegt, wird der gesamte Verzeichniseintrag mit Zertifikaten und Fachdaten im Response zurückgegeben.\n        schema:\n          type: boolean\n          example: true\n\n      responses:\n        200:\n          description: OK\n                    #  Es werden alle zu dem Filter Parametern passenden Verzeichniseinträge - inklusive Zertifikaten und Fachdaten - zurückgegeben.\n                    # Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.   \n                    # Wenn der Suchparameter \"holder\" mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (für eigene Einträge gilt das Limit von 100 Ergebnissen nicht).\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DirectoryEntries'\n\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n        503:\n          description: Service Unavailable\n          # Der Server schränkt die parallele Nutzung dieser Operation read_Directory_Entry_WL ein. Der Request kann nach einer angemessenen Zeitspanne wiederholt werden. \n          content: {}  \n\n  /v2/DirectoryEntriesSync:\n    get:\n      tags:\n      - DirectoryEntry Synchronization\n      summary: Synchronisation der Verzeichniseinträge zwischen VZD und Herausgeber\n      description: Liefert - analog zu read_Directory_Entry - alle zum Filter passenden Verzeichniseinträge. Im Unterschied zu read_Directory_Entry wird die Limitierung auf 100 Suchergebnisse aufgehoben. Die parallele Ausführung dieser Operation wird vom Server aus Performancegründen eingeschränkt.\n        Diese Operation soll nur genutzt werden, wenn mehr als 100 Suchergebnisse benötigt werden. Für alle anderen Suchanfragen soll Operation read_Directory_Entry genutzt werden.\n#\n# Für die Leseoperationen read_Directory_Entry, read_Directory_Entry_for_Sync und\n# read_Directory_Entry_for_Sync_paging der Schnittstellen I_Directory_Administration \n# und I_Directory_Application_Maintenance\n# werden die folgenden Filtermöglichkeiten unterstützt: \n#     o Suche mit Wildcard \"*\" in den Parametern\n#           - givenName\n#           - sn\n#           - cn\n#           - displayName\n#           - streetAddress\n#           - postalCode\n#           - countryCode\n#           - localityName\n#           - stateOrProvinceName\n#           - title\n#           - organization\n#           - otherName\n#           - telematikID\n#           - specialization\n#           - domainID\n#           - holder\n#           - professionOID\n#       Wildcard ist am Ende und am Anfang nutzbar:\n#           - *Mustermann* - \"contains\" \n#           - \"Dr. Manfred*\" - \"startsWith\"\n#           - \"* MBA\" - \"endsWith\"\n#           treffen alle \"Dr. Manfred Mustermann MBA\".\n#\n#      o Suche nach Vorhandensein ODER leerem Inhalt eines Attributs des \n#        VZD Datensatzes durch Belegung des Attributs im GET Request mit \"\" in den Parametern\n#           - givenName\n#           - sn\n#           - cn\n#           - displayName\n#           - streetAddress\n#           - postalCode\n#           - countryCode\n#           - localityName\n#           - stateOrProvinceName\n#           - title\n#           - organization\n#           - otherName\n#           - specialization\n#           - domainID\n#           - holder\n#           - professionOID\n#           - maxKOMLEadr\n#           - changeDateTimeFrom\n#           - changeDateTimeTo\n#        Diese Suche findet sowohl Datensätze mit nicht vorhandenem Attribut\n#        wie auch vorhandenem aber leerem Attribut.\n#     Alle Filterparameter einer Leseoperationen werden mit einem UND (\u0026) verknüpft.\n#        \n      operationId: read_Directory_Entry_for_Sync_paging\n      parameters:\n      - name: uid\n        in: query\n        description: ID von dem Verzeichniseintrag (distinguishedName.uid)\n        schema:\n          type: string  \n      - name: givenName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs givenName.\n        schema:\n          type: string  \n      - name: sn\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs sn.\n        schema:\n          type: string  \n      - name: cn\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs cn.\n        schema:\n          type: string  \n      - name: displayName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs displayName.\n        schema:\n          type: string  \n      - name: streetAddress\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs streetAddress.\n        schema:\n          type: string  \n      - name: postalCode\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs postalCode.\n        schema:\n          type: string  \n      - name: countryCode\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs countryCode.\n        schema:\n          type: string    \n      - name: localityName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs localityName.\n        schema:\n          type: string  \n      - name: stateOrProvinceName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs stateOrProvinceName.\n        schema:\n          type: string  \n      - name: title\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs title.\n        schema:\n          type: string  \n      - name: organization\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs organization.\n        schema:\n          type: string  \n      - name: otherName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs otherName.\n        schema:\n          type: string  \n      - name: telematikID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).\n        schema:\n          type: string  \n      - name: telematikID-SubStr\n        in: query\n        description: Erlaubt die Suche nach einem Substring am Anfang der telematikID (die telematikID in den Basisdaten).\n                      Entspricht der LDAP Filters Substring Assertion vom Typ \"subInitial Component\".\n        schema:\n          type: string  \n      - name: specialization\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs specialization. \n                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: domainID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs domainID. \n                     Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: holder\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs holder. \n                     Der Verzeichniseintrag wird selektiert, wenn der angegebene holder im Attribut holder (array) des Verzeichniseintrags enthalten ist.\n                     Wenn der Parameter mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (für eigene Einträge gilt das Limit von 100 Ergebnissen nicht).\n                     Zur Suche nach Einträge ohne holder ist der Parameter mit dem einem leeren String \"\" zu belegen. Auch in diesem Fall werden alle gefundenen Einträge zurückgegeben (für Einträge ohne holder gilt das Limit von 100 Ergebnissen nicht).\n        schema:\n          type: string  \n      - name: personalEntry\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs personalEntry. \n        schema:\n          type: string  \n      - name: dataFromAuthority\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs dataFromAuthority. \n        schema:\n          type: string  \n      - name: maxKOMLEadr\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs maxKOMLEadr. \n        schema:\n          type: string  \n      - name: changeDateTimeFrom\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. \n                  #  Selektiert alle Datensätze mit \n                  #  changeDateTime \u003e= changeDateTimeFrom\n        schema:\n          type: string  \n          # format: date-time\n          example: \"2017-07-21T17:32:28Z\"          \n      - name: changeDateTimeTo\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs changeDateTime. \n                  #  Selektiert alle Datensätze mit \n                  #  changeDateTime \u003c= changeDateTimeTo\n        schema:\n          type: string  \n          # format: date-time\n          example: \"2018-07-21T17:32:28Z\"\n      - name: baseEntryOnly\n        in: query\n        description: Mit baseEntryOnly = \"true\" wird nur der Basiseintrag (baseDirectoryEntry) im Response zurückgegeben. Falls nicht angegeben oder mit \"false\" belegt, wird der gesamte Verzeichniseintrag mit Zertifikaten und Fachdaten im Response zurückgegeben.\n        schema:\n          type: boolean\n          example: true\n    # Paging Parameter entsprechend https://tools.ietf.org/html/rfc2696\n    # Paging ist nur für eigene Verzeichniseinträge erlaubt. Deshalb muss bei\n    # Verwendung des Pagings zwingend der \"holder\" Suchparameter angegeben werden \n    # und den eigenen holderID (entsprechend dem Wert im ID_Token claim scope) enthalten.\n    # Siehe auch #/components/schemas/searchControlValue\n      - name: size   \n        in: query\n        description: Paging Größe \n           # Entspricht realSearchControlValue.size in RFC2696.\n           # Maximal diese Anzahl von Verzeichniseinträgen sind in einem Response enthalten. \n           # In dem nächsten Response sind die nächsten Verzeichniseinträge enthalten.\n        schema:\n         type: integer \n         example: 50\n      - name: cookie  \n        in: query\n        description: Paging Cookie\n          # Im ersten Request übergibt der Client einen leeren String in diesem Parameter. \n          # In den Folgerequests übernimmt der Client dieses Cookie jeweils aus dem letzten Response und erhält die nächsten Verzeichniseinträge.\n        schema:\n         type: string \n          \n      responses:\n        200:\n          description: OK\n                    #  Es werden alle zu dem Filter Parametern passenden Verzeichniseinträge - inklusive Zertifikaten und Fachdaten - zurückgegeben.\n                    # Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.   \n                    # Wenn der Suchparameter \"holder\" mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (für eigene Einträge gilt das Limit von 100 Ergebnissen nicht).\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/readDirectoryEntryforSyncResponse'\n\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response wird auf OAuth gesetzt.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n        503:\n          description: Service Unavailable\n          # Der Server schränkt die parallele Nutzung dieser Operation read_Directory_Entry_WL ein. Der Request kann nach einer angemessenen Zeitspanne wiederholt werden. \n          content: {}  \n\n\n\n  /DirectoryEntries/{uid}/baseDirectoryEntries:\n    put:\n      tags:\n      - DirectoryEntry Administration\n      summary: Der Verzeichniseintrag (ohne Zertifikate und Fachdaten) wird mit den übergebenen Daten aktualisiert. \n      operationId: modify_Directory_Entry\n      parameters:\n      - name: uid\n        in: path\n        description: ID von dem Verzeichniseintrag\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Datensatz für die Aktualisierung des Eintrags\n\n                     Die Attribute müssen wie folgt belegt sein\n\n                      dn.*          Nicht vorhanden (Adressierung erfolgt über uid in Path).\n                      givenName     Nicht vorhanden. \n                      sn            Nicht vorhanden.\n                      cn            Nicht vorhanden.\n                      displayName   Kann optional belegt werden.\n                      streetAddress Kann optional belegt werden.\n                      postalCode    Kann optional belegt werden.\n                      countryCode   Kann optional belegt werden.\n                      localityName  Kann optional belegt werden.\n                      stateOrProvinceName  Kann optional belegt werden.\n                      title         Kann optional belegt werden.\n                      organization  Kann optional belegt werden.\n                      otherName     Nicht vorhanden.\n                      telematikID   Kann optional belegt werden.\n                          Das ist die telematikID in den Basisdaten (baseDirectoryEntry).\n                          Sind Zertifikateseinträge (userCertificate) vorhanden, dann müssen die telematikIDs übereinstimmen.\n                          Bei unterschiedlichen telematikID wird die Operation mit Fehlercode 422 abgelehnt.\n\n                      specialization  Kann optional belegt werden.\n                      domainID      Kann optional belegt werden.\n                      holder         Kann optional belegt werden.\n                      maxKOMLEadr   Kann optional belegt werden.\n                      personalEntry Nicht vorhanden.\n                      dataFromAuthority Nicht vorhanden\n\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/baseDirectoryEntry'\n        required: true\n      responses:\n        200:\n          description: OK\n                     # Der Verzeichniseintrag wurde aktualisiert.\n          headers:\n            X-maxKOMLEadr-Limit:\n              schema:\n                type: integer\n                example: 0\n                description:  Anzahl der hinterlegten mail Adressen in den KOM-LE Fachdaten, die den aktuellen (nach eventuellem Update durch diese Operation) Wert Attribut maxKOMLEadr übersteigen.\n                  Wenn der Parameter maxKOMLEadr im Request nicht genutzt wurde, wird ebenfall der aktuelle Wert von Attribut maxKOMLEadr als Berechnungsgrundlage genutzt.\n                  Beispiele\n                    a) maxKOMLEadr (nach Ausführung des Updates) = 1\n                       hinterlegte mail Adressen in den KOM-LE Fachdaten = 1\n                       -\u003e X-maxKOMLEadr-Limit = 0\n                    a) maxKOMLEadr (nach Ausführung des Updates) = 1\n                       hinterlegte mail Adressen in den KOM-LE Fachdaten = 3\n                       -\u003e X-maxKOMLEadr-Limit = 2\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/distinguishedName'\n        400:\n          description: Bad Request\n                     # Invalid ID supplied\n          content: {}\n        401:\n          description: Unauthorized\n                     # Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n        405:\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        422:\n          description: Unprocessable Entity\n                # Z.B. Wert aus dem Request Attribut \"holder\" nicht gültig\n                # Bei unterschiedlichen telematikIDs (Parameter telematikID und Wert im userCertificate) wird die Operation mit Fehlercode 422 abgelehnt.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n          \n  /DirectoryEntries/{uid}:\n\n    delete:\n      tags:\n      - DirectoryEntry Administration\n      summary: Gesamten Verzeichniseintrag löschen\n      operationId: delete_Directory_Entry\n      parameters:\n      - name: uid\n        in: path\n        description: ID von dem zu löschenden Verzeichniseintrag\n                     Gelöscht werden der Basis Verzeichniseintrag sowie alle dazugehörenden Zertifikate und Fachdaten.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n                schema: {}\n        400:\n          description: Bad Request\n                     # Invalid ID supplied\n          content: {}\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n\n  /DirectoryEntries/{uid}/Certificates:\n    post:\n      tags:\n      - Certificate Administration\n      summary: Der Zertifikatseintrag wird im Verzeichnisdienst hinzugefügt und ist logisch über dn.uid mit dem übergeordneten Verzeichniseintrag verknüpft.  \n      operationId: add_Directory_Entry_Certificate\n      parameters:\n      - name: uid\n        in: path\n        description: ID (dn.uid) vom übergeordneten Verzeichniseintrag\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Datensatz für die Erzeugung des Eintrags\n\n                     Die Attribute müssen wie folgt belegt sein\n\n                      Attribut          Wert \n                     -------------------------------------------\n                      dn.*              Nicht vorhanden (Adressierung erfolgt über uid in Path)    \n                      telematikID       Kann optional belegt werden.\n                            Wird telematikID angegeben, dann muss diese telematikID mit der telematikID im userCertificate übereinstimmen.\n                            Die telematikID muss mit der telematikID in den Basisdaten (baseDirectoryEntry) übereinstimmen (falls dort angegeben).\n                            Falls die telematikID in den Basisdaten (baseDirectoryEntry) leer ist, muss sie auf den Wert aus dem Zertifikat bzw. dem hier angegebenen Wert gesetzt werden.\n                            Bei unterschiedlichen telematikIDs wird die Operation mit Fehlercode 422 abgelehnt.\n                      entryType         Nicht vorhanden (wird vom Verzeichnisdienst belegt)        \n                      professionOID     Nicht vorhanden (wird vom Verzeichnisdienst belegt)      \n                      usage             Kann optional belegt werden \n                      userCertificate   Muss vorhanden sein      \n                      description       Kann optional belegt werden \n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userCertificate'\n        required: true\n      responses:\n        201:\n          description: Created\n                      # Der Zertifikatseintrag wurde hinzugefügt. Zurückgegeben wird der distinguishedName des erzeugten Eintrags.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/distinguishedName'\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        405:\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        409:\n          description: Conflict\n                # Zertifikat (identifiziert anhand der Serial Number) ist für den \n                # Verzeichniseintrag (identifiziert anhand der Telematik-ID) schon vorhanden.\n                #      Die 'Error' Parameter werden für diese Fehler so gesetzt:\n                #           \"attributeName\": \"userCertificate\",\n                #           \"attributeError\": \"userCertificate already exists\"\n                # Wenn es sich um ein anderes / weiteres Zertifikat handelt (andere Serial Number), \n                # wird dieses normal hinzugefügt.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        422:\n          description: Unprocessable Entity\n            # Bei unterschiedlichen telematikIDs (Parameter telematikID und Wert im userCertificate) wird die Operation mit Fehlercode 422 abgelehnt.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \n\n  /DirectoryEntries/Certificates:\n  \n    get:\n      tags:\n      - Certificate Administration\n      summary: Zertifikat lesen\n      description: Liefert alle Zertifikate, die dem Filter (siehe 'parameters') entsprechen.\n      operationId: read_Directory_Certificates\n      parameters:\n      - name: uid\n        in: query\n        description: ID vom übergeordneten Verzeichniseintrag\n        schema:\n          type: string\n      - name: certificateEntryID\n        in: query\n        description: ID von dem Zertifikat (dn.cn vom Zertifikatseintrag)\n                     Wenn angegeben wird das adressierte (certificateEntryID) Zertifikat geliefert.\n                     Wenn nicht angegeben werden alle Zertifikate des übergeordneten Verzeichniseintrags geliefert.\n        schema:\n          type: string\n      - name: entryType\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs entryType.\n        schema:\n          type: string\n      - name: telematikID\n        in: query\n        description: telematikID von dem Zertifikat \n                     Erlaubt die Suche nach Zertifikatseinträgen einer telematikID.\n        schema:\n          type: string\n      - name: professionOID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs professionOID. \n                     Der Verzeichniseintrag wird selektiert, wenn die angegebene professionOID im Attribut professionOID (array) des Zertifikatseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: usage\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs usage. \n                     Der Verzeichniseintrag wird selektiert, wenn die angegebene usage im Attribut usage (array) des Zertifikatseintrags enthalten ist.\n        schema:\n          type: string  \n\n      responses:\n        200:\n          description: OK\n                    #  Es werden alle gefundenen Zertifikatseinträge zurückgegeben.\n                    # Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.                                                                                                         \n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/userCertificates'\n\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden.\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n                    #  Certificate not found\n          content: {}\n\n  /DirectoryEntries/{uid}/Certificates/{certificateEntryID}:\n    delete:\n      tags:\n      - Certificate Administration\n      summary: Zertifikatseintrag löschen\n            Dem Verzeichniseintrag muss immer mindestens ein Zertifikat zugeordnet sein. Wenn nach dem Löschen kein Zertifikat mehr dem Verzeichniseintrag zugeordnet wäre, muss die delete Operation abgelehnt werden. \n      operationId: delete_Directory_Entry_Certificate\n      parameters:\n      - name: uid\n        in: path\n        description: ID vom übergeordneten Verzeichniseintrag\n        required: true\n        schema:\n          type: string\n      - name: certificateEntryID\n        in: path\n        description: ID von dem zu löschenden Zertifikatseintrag\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content: {}\n        400:\n          description: Bad Request\n                    #  Invalid uid supplied\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n                    #  Der WWW-Authenticate Header im Response muss auf OAuth gesetzt werden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n                     # Certificate not found (certificateEntryID)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        409:\n          description: Conflict\n                     # nach dem Löschen wäre dem Verzeichniseintrag kein Zertifikat mehr zugeordnet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  \n\ncomponents:\n\n  schemas:\n  \n    userCertificate:\n      description: Jeder Verzeichniseintrag muss mindestens ein Zertifikat enthalten.\n      type: object\n      properties:\n        dn:\n          $ref: '#/components/schemas/distinguishedName'\n        entryType:\n          type: string\n          description: 'Eintragstyp Wird vom VZD anhand der in dem Zertifikat\n            enthaltenen OID (Extension Admission, Attribut ProfessionOID) und der\n            Spalte Eintragstyp in Tab_VZD_Mapping_Eintragstyp_und_ProfessionOID automatisch\n            eingetragen. Siehe auch [gemSpecOID]# Tab_PKI_402 und Tab_PKI_403'\n          readOnly: true\n        telematikID:\n          type: string\n          description: 'Wird beim Anlegen des Eintrags vom VZD aus dem Zertifikat übernommen (Feld registrationNumber der Extension Admission).\n                    Falls der Basiseintrag (baseDirectoryEntry) ohne Zertifikat angelegt wird, kann in Operation add_Directory_Entry die telematikID angegeben werden.\n            Damit ist der Verzeichniseintrag bereits über die telematikID auffindbar.'\n        professionOID:\n          maxItems: 100\n          minItems: 0\n          type: array\n          readOnly: true\n          items:\n            type: string\n            description: 'Profession OID / Wird vom VZD anhand der in\n              den Zertifikaten enthaltenen OIDs (Extension Admission, Attribut ProfessionOID)\n              und dem Mapping in ab_VZD_Mapping_Eintragstyp_und_ProfessionOID automatisch\n              eingetragen. Siehe [gemSpecOID]# Tab_PKI_402 und Tab_PKI_403. / kann\n              mehrfach vorkommen (0..100)'\n        usage:\n          maxItems: 100\n          minItems: 0\n          type: array\n          description: 'Nutzungskennzeichnung kann pro Zertifikat mehrfach\n            vergeben werden. Vorgegebener Wertebereich [KOM-LE, ePA].\n            Obligatorisch für LEI und KTR mit vorgegebenem Wert usage=ePA'\n          items:\n            type: string\n            enum:\n            - KOM-LE\n            - ePA\n        userCertificate:\n          type: string\n          description: 'Zertifikat im DER Format. Base64 kodiert.\n                        Die pflegende Stelle erhält das Zertifikat vom TSP oder falls das nicht möglich ist wird ein Ersatzverfahren abgestimmt.'\n        description:\n          type: string\n          description: Dieses Attribut ermöglicht das Zertifikat zu beschreiben, um\n             die Administration des VZD Eintrags zu vereinfachen.\n        active:\n          type: boolean\n          readOnly: true\n          example: true\n          description: Dieses Attribut eigt an, ob das Zertifikat aktiv ist oder nicht (true oder false).\n             \n    userCertificates:\n      type: array\n      items:\n        $ref: '#/components/schemas/userCertificate'\n            \n    Fachdaten:\n      required:\n      - dn\n      type: object\n      properties:\n        dn:\n          $ref: '#/components/schemas/distinguishedName'\n        FAD1:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/FAD1'\n\n    FAD1:\n      required:\n      - dn\n      type: object\n      properties:\n        dn:\n          $ref: '#/components/schemas/distinguishedName'\n        mail:\n          type: array\n          items:\n            type: string\n            description: 'E-Mail-Adresse'\n        komLeData:\n          type: array\n          items:\n            type: object\n            properties:\n              mail:\n                type: string\n                description: 'E-Mail-Adresse'\n              version:\n                type: string\n                example: 1.5\n                description: Die höchste KOM-LE_Version der KIM Clientmodule für die KIM Mail Adresse\n            # Für jede Mail Adresse aus dem \"mail\" Attribut darf es nur einen Eintrag in Attribut\n            # KOM-LE_Version geben. Es dürfen in KOM-LE_Version keine Mail Adressen referenziert werden,\n            # die nicht im zugehörigen \"mail\" Attribut enthalten sind.\n            # Wenn eine Mail Adresse gelöscht wird, muss auch ihre KOM-LE_Version gelöscht werden.\n            # Geschrieben wird immer die gesamte Liste. Für Änderungen muss erst der aktuelle Eintrag\n            # gelesen werden und nach Änderung in der Liste der gesamte Eintrag wieder geschrieben werden.\n\n    distinguishedName:\n      required:\n      - uid\n      readOnly: true\n      type: object\n      properties:\n        uid:\n          type: string\n          description: 'entryID: Name/ID, den den Eintrag eindeutig identifiziert. Hat für den Verzeichnisdienst_Eintrag, Certificate, KOM-LE_Fachdaten und FAD1 eines Verzeichniseintrags den gleichen Wert.'\n        dc:\n          type: array\n          items:\n            type: string\n            description: Domain Component\n        ou:\n          type: array\n          items:\n            type: string\n            description: Organizational Unit\n        cn:\n          type: string\n          description: Common Name\n\n    baseDirectoryEntry:\n      type: object\n      properties:\n        dn:\n          $ref: '#/components/schemas/distinguishedName'\n        givenName:\n          type: string\n          description: 'HBA: Vorname, obligatorisch, wird aus dem Zertifikat\n            übernommen / SMC-B: nicht verwendet'\n          readOnly: true\n          example:  Vorname\n        sn:\n          type: string\n          description: 'HBA: Name, obligatorisch, wird aus dem Zertifikat\n            übernommen / SMC-B: nicht verwendet'\n          readOnly: true\n          example:  Nachname\n        cn:\n          type: string\n          description: 'HBA: Vorname und Nachname / SMC-B: Bezeichner:\n            Name Wird vom VZD aus dem Zertifikatsattribut commonName übernommen.'\n          readOnly: true\n          example:  Vorname Nachname  \n        displayName:\n          type: string\n          description: 'Anzeigename, kann geändert werden. \n            Dieses Attribut wird genutzt um den Namen der Organisation gegenüber dem Anwender darzustellen (Verwendung als Filter-Attribut um die Suche einzuschränken und bei der Darstellung des Ergebnisses).\n              Der Wert wird von der pflegenden Stelle festgelegt.\n              Konvention für HBA Einträge: Name, Vorname'\n          example:  Name, Vorname\n        streetAddress:\n          type: string\n          description: 'Straße und Hausnummer\n                        Der Wert wird von der pflegenden Stelle festgelegt'\n          example: Friedrichstraße 136\n        postalCode:\n          type: string\n          description: 'Postleitzahl\n                        Der Wert wird von der pflegenden Stelle festgelegt'\n          example: 10117\n        countryCode:\n          type: string\n          maxLength: 2\n          description: 'Ländercode\n                        Entsprechend ISO-3166-1 ALPHA-2'\n                    # Falls das Attribut beim Anlegen des Datensatzes nicht beölegt wird, ergänzt der VZD den Code für Deutschland (Defaultwert).\n          example: DE        \n        localityName:\n          type: string\n          description: 'Ort\n                        Der Wert wird von der pflegenden Stelle festgelegt'\n          example: Berlin\n        stateOrProvinceName:\n          type: string\n          description: 'Bundesland\n                        Der Wert wird von der pflegenden Stelle festgelegt'\n          example: Berlin\n        title:\n          type: string\n          description: 'HBA: Titel, optional / SMC-B: nicht verwendet'\n        organization:\n          type: string\n          example: 12345670\n          description: 'Organisation\n                        Der Wert wird von der pflegenden Stelle festgelegt'\n        otherName:\n          type: string\n          description: 'Anderer Name. \n                        Wird vom VZD aus dem Zertifikatsattribut otherName übernommen.'\n        telematikID:\n          type: string\n          description: 'Wird beim Anlegen des Eintrags vom VZD aus dem Zertifikat übernommen (Feld registrationNumber der Extension Admission).\n                    Falls der Basiseintrag (baseDirectoryEntry) ohne Zertifikat angelegt wird, kann in Operation add_Directory_Entry die telematikID angegeben werden.\n            Damit ist der Verzeichniseintrag bereits über die telematikID im baseDirectoryEntry auffindbar. Diese telematikID muss mit der telematikID aus dem Zertifikatseintrag (userCertificate) übereinstimmen. Simmten die telematikIDs nicht überein, wird die Operation mit Fehlercode 422 abgelehnt' \n        specialization:\n          maxItems: 100\n          type: array\n          description: 'Fachgebiet\n                        Der Wert wird von der pflegenden Stelle festgelegt'\n          items:\n            type: string\n        domainID:\n          maxItems: 100\n          type: array\n          description: 'Ärzte-\u003e Betriebsstättennummer\n                        Der Wert wird aus dem Zertifikat übernommen (Attribut organizationName)'\n          items:\n            type: string\n            example: 345678975\n        holder:\n          maxItems: 100\n          type: array\n          description: Identifiziert den Eigentümer dieses Verzeichniseintrags, der Änderungen an ihm vornehmen darf.\n            Hat keinen Einfluss auf Fachdaten und Zertifikatsdaten.\n            Beim Anlegen eines neuen Verzeichniseintrags (add_Directory_Entry)\n              - Ist im add_Directory_Entry Request das Attribut \"holder\" nicht vorhanden oder enthält keine Werte\n                 o Wird vom VZD in dieses Attribut kein Wert (leeres Attribut) eingetragen. \n              - Ist im add_Directory_Entry Request das Attribut \"holder\" vorhanden und mit Inhalten gefüllt\n                 o Ist ein Wert aus dem Request Attribut \"holder\" nicht gültig, MUSS der VZD die Operation mit \n                 HTTP-Status-Code 422 abweisen und die weitere Verarbeitung von diesem Request abbrechen.\n                 o Sind alle Werte aus dem Request Attribut \"holder\" gültig, MUSS der VZD die Werte aus dem Request \n                 entnehmen und sie in das \"holder\" Attribut des Verzeichniseintrags übernehmen.\n            Beim Ändern eines neuen Verzeichniseintrags (modify_Directory_Entry)\n              - Ist im modify_Directory_Entry Request das Attribut \"holder\" nicht vorhanden oder enthält keine Werte\n                 o Die Werte im aktuellen \"holder\" Attribut des Verzeichniseintrags bleiben erhalten.\n          items:\n            type: string\n            example: KartenHerausgeberABC\n        maxKOMLEadr:\n          type: string\n          description: Maximale Anzahl von mail Adressen in den KOM-LE Fachdaten. Falls kein Wert eingetragen wurde, können beliebig viele mail Adressen in den KOM-LE Fachdaten eingetragen werden. Falls ein Wert eingetragen wurde, können maximal so viele mail Adressen in den KOM-LE Fachdaten eingetragen werden.\n          example: 1\n        personalEntry:\n          type: boolean\n          description: Wird vom VZD eingetragen / Wert == TRUE, wenn alle Zertifikate\n            den entryType 1 haben (Berufsgruppe), Wert == FALSE sonst\n          readOnly: true\n          example: true\n        dataFromAuthority:\n          type: boolean\n          description: Wird vom VZD eingetragen / Wert == TRUE, wenn der Verzeichnisdienst_Eintrag von dem Kartenherausgeber geschrieben wurde, Wert == FALSE sonst \n          readOnly: true\n          example: true\n        changeDateTime:\n          type: string\n#          format: date-time Mit dieser Format Vorgabe ist kein Code mehr generierbar, deshalb auskommentiert. Es soll sich aber weiterhin an das Format gehalten werden.\n          description: Der VZD setzt dieses Attribut bei jeder Schreiboperation für den Datensatz (Basisdaten) auf die aktuelle Zeit. Format entsprechend RFC 3339, section 5.6.\n          readOnly: true\n          example: \"2017-07-21T17:32:28Z\"\n        professionOID:\n          maxItems: 100\n          minItems: 0\n          type: array\n          readOnly: true\n          items:\n            type: string\n            description: Wird vom VZD beim Hinzufügen eines Zertifikatseintrags (userCertificate) ebenfalls hier in den Basiseintrag eingefügt, wenn der Wert von professionOID noch nicht hier in den Basisdaten vorhanden ist.\n              Beim Löschen eines Zertifikatseintrags werden die professionOID's dieses Zertifikatseintrags auch in den Basisdaten entfernt, falls sie nicht in anderen (noch gültigen und verlinkten) Zertifikatseinträgen vorhanden sind.\n        entryType:\n          maxItems: 10\n          minItems: 0\n          type: array\n          readOnly: true\n          items:\n            type: string\n            description: Wird vom VZD beim Hinzufügen eines Zertifikatseintrags (userCertificate) ebenfalls hier in den Basiseintrag eingefügt, wenn der Wert von entryType noch nicht hier in den Basisdaten vorhanden ist.\n              Beim Löschen eines Zertifikatseintrags wird der entryType dieses Zertifikatseintrags auch in den Basisdaten entfernt, falls er nicht in anderen (noch gültigen und verlinkten) Zertifikatseinträgen vorhanden ist.\n\n    DirectoryEntry:\n      type: object\n      properties:\n        DirectoryEntryBase:\n          $ref: '#/components/schemas/baseDirectoryEntry'\n        userCertificates:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/userCertificate'\n        Fachdaten:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/Fachdaten'\n\n    CreateDirectoryEntry:\n      type: object\n      properties:\n        DirectoryEntryBase:\n          $ref: '#/components/schemas/baseDirectoryEntry'\n        userCertificates:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/userCertificate'\n\n    DirectoryEntries:\n      type: array\n      items:\n        $ref: '#/components/schemas/DirectoryEntry'\n\n            \n    Error:\n      type: object\n      properties:\n        errors:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/InnerError'\n\n    InnerError:\n      type: object\n      properties:\n        attributeName:\n          description: Name des Attributs, in dem ein Fehler erkannt wurde\n          type: string\n        attributeError:\n          description: Beschreibung des erkannten Fehlers\n          type: string\n\n    InfoObject:\n      required:\n      - title\n      - version\n      readOnly: true\n      type: object\n      properties:\n        title:\n          type: string\n          description: Der Titel der Anwendung\n          example: \"I_Directory_Administration\"\n        description:\n          type: string\n          description: Eine kurze Beschreibung der Anwendung\n          example: \"REST Schnittstelle zur Pflege der Verzeichniseinträge.\n            Über diese Schnittstelle können Verzeichniseinträge inklusive Zertifikaten erzeugt, aktualisiert und gelöscht werden. Die Administration von Fachdaten erfolgt über Schnittstelle I_Directory_Application_Maintenance und wird durch die Fachanwendungen durchgeführt. Lesender Zugriff auf die Fachdaten ist mit Operation getDirectoryEntries in vorliegender Schnittstelle möglich.\"\n        termsOfService:\n          type: string\n          format: uri\n          description: Eine URL zu den Terms of Service für dieses API.\n          example: \"http://example.com/terms/\"\n        contact:\n          $ref: '#/components/schemas/contact'\n        license:\n          $ref: '#/components/schemas/license'\n        version:\n          type: string\n          description: Die Version von dem OpenAPI Document (YAML Datei)\n          example: \"1.6.0\"\n\n    contact:\n      readOnly: true\n      description: Die Kontaktinformationen für diese Schnittstelle.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Der Name von der Kontaktperson / -Organisation\n          example: \"Firma 123\"\n        url:\n          type: string\n          format: uri\n          description: Eine URL zu den Kontaktinformationen für dieses API.\n                       In dem Dokument unter dieser URL muss ein Link zum Download der aktuell genutzten YAML Datei dieser Schnittstelle hinterlegt sein.\n          example: \"http://www.example.com/support\"\n        email:\n          type: string\n          format: email\n          description: Der E-Mail Adresse der Kontaktperson / -Organisation.\n          example: \"support@example.com\"\n\n    license:\n      required:\n      - name\n      readOnly: true\n      description: Der Lizenzinformationen für diese Schnittstelle.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Der Lizenzname\n          example: \"Apache 2.0\"\n        url:\n          type: string\n          description: Eine URL zu den Lizenzinformationen für dieses API.\n          example: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n\n    searchControlValue:\n    # https://tools.ietf.org/html/rfc2696\n    # Mit den Parametern dieser Datenstruktur kann das Paging von LDAP Suchergebnissen entsprechend RFC2696 gesteuert werden.\n    # Mit dem Paging können alle (oder eine Teilmenge) eigenen Verzeichniseinträge gelesen werden, auch wenn das Limit von 100 Suchergebnissen überschritten wird.\n    # Paging ist nur für eigene Verzeichniseinträge erlaubt. Deshalb muss bei Verwendung des Pagings zwingend der \"owner\" Suchparameter angegeben werden \n    # und den eigenen ownerID (entsprechend dem Wert im ID_Token) enthalten. Wird Paging nicht mit dem korrekten \"owner\" Suchparameter ausgeführt,\n    # wird mit einem Fehler (HTTP Status Code 403) geantwortet.\n    # Die Suchparameter müssen während eines Pagings (mit mehreren Request/Response Sequenzen) identisch sein (nur das \"cookie\" ändert sich). \n      type: object\n      properties:\n        size:\n          type: integer\n          example: 50\n      # Im Request gibt der Client die gewünschte Paging Größe an (Maximalgröße entsprechend TIP1-A_5552). \n      #    Maximal diese Anzahl von Verzeichniseinträgen sind in einer Antwort enthalten.\n      # Im Response trägt der Verzeichnisdienst in diesen Parameter die gesamte Anzahl von gefundenen Verzeichniseinträge an.\n        cookie:\n          type: string\n          example: bGlnaHQgd29yay4=\n      # Im ersten Request übergibt der Client einen leeren String in diesem Parameter. \n      # In jedes Response trägt der Verzeichnisdienst in diesen Parameter ein Cookie ein, über den das Paging zum nächsten Ergebnis erfolgt.\n      # Der Client übernimmt dieses Cookie jeweils in den folgenden Request und erhält die nachsten Verzeichniseinträge.\n      # Für den Client ist das Cookie transparent und darf nicht von ihm manipuliert werden.\n      # In dem letzten Response - mit den letzten Verzeichniseinträgen - liefert der Verzeichnisdienst in diesem Parameter einen leeren String.\n\n    readDirectoryEntryforSyncResponse:\n      type: object\n      properties:\n        searchControlValue:\n          $ref: '#/components/schemas/searchControlValue'\n        directoryEntries:\n          $ref: '#/components/schemas/DirectoryEntries'\n\n  securitySchemes:\n    OAuth2:\n      description: |\n        I_Directory_Administration unterstützt OAuth2 Client Credentials Flow.\n        Token Endpoint ist spezifisch für die jeweilige Umgebung:\n        \n        **Testumgenung:**\n        * https://auth-test.vzd.ti-dienste.de:9443/auth/realms/RSDirectoryAdministration/protocol/openid-connect/token\n        \n        **Referenzumgebung:**\n        * https://auth-ref.vzd.ti-dienste.de:9443/auth/realms/RSDirectoryAdministration/protocol/openid-connect/token\n        \n        **Produktifumgebung:**\n        * https://auth.vzd.ti-dienste.de:9443/auth/realms/RSDirectoryAdministration/protocol/openid-connect/token\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: '#umgebungsspezifisch'\n          scopes:\n            VZD:DirectoryAdministration: I_Directory_Administration Client Scope\n              Als Clients dieser Schnittstelle sind nur Systeme der TI Kartenherausgeber und von ihnen beauftragte Organisationen (z.B. TSPs) zulässig.\n              Sie dürfen alle Operationen zur Administration der Verzeichniseinträge nutzen.\n              Das AccessToken enthält im 'sub' claim den Identifier des Clients, der auf die Einträge zugreift. Dieser Identifier wird im Log abgelegt, welcher die Zugriffe über diese Schnittstelle protokolliert.\n\nsecurity:\n  - OAuth2:\n      - VZD:DirectoryAdministration\n",
			"canonicalURL": "/github.com/gematik/api-vzd@ef26060d601a49410c45dfc7b0fcacd6fa2875fb/-/blob/src/openapi/DirectoryAdministration.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gematik/api-vzd/blob/ef26060d601a49410c45dfc7b0fcacd6fa2875fb/src/openapi/DirectoryAdministration.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/\": get: operation \"getInfo\": security: parse security scheme \"OAuth2\": oauth2: flow \"clientCredentials\": at 1:14478: \"tokenUrl\" MUST be in the form of a URL: parse \"#umgebungsspezifisch\": invalid URI for request"
}