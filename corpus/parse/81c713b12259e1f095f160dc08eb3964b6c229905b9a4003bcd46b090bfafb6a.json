{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cablelabs/lpwanserver"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "docs/openapi/api.yml",
			"byteSize": 7746,
			"content": "openapi: 3.0.0\nservers: []\ninfo:\n  description: \u003e-\n    This service goes between an IoT application server and the various networks\n    to which the devices connect.  LPWAN Server uses extensions to support\n    additional networks.\n  version: 1.2.1\n  title: LPWAN Server\n  contact:\n    email: n.baroni@cablelabs.com\n    name: Nick Baroni\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Application\n    description: An Application is a grouping of devices that share data reporting configuration.\n  - name: ApplicationNetworkTypeLink\n    description: An ApplicationNetworkTypeLink enables an Application for a NetworkType.  These records also store Application configuration for the NetworkType.\n  - name: Company\n    description: A Company is a grouping of Users.  Companies also have an ownership relationship with other entities, such as Applications.\n  - name: CompanyNetworkTypeLink\n    description: A CompanyNetworkTypeLink enables links a company's entities and a NetworkType.\n  - name: Device\n    description: A Device represents a physical device.\n  - name: DeviceNetworkTypeLink\n    description: A DeviceNetworkTypeLink enables a Device for a NetworkType.  These records also store Device configuration for a the NetworkType.\n  - name: DeviceProfile\n    description: A DeviceProfile profiles a type of device for a specific NetworkType.  These records store configuration for Devices in regards to the NetworkType.\n  - name: Network\n    description: A Network represents a remote IoT network, such as an instance of ChirpStack.\n  - name: NetworkProtocol\n    description: A NetworkProtocol wraps the API used by LPWAN Server to communicate with Networks.  A NeworkProtocol references the code that communicates with the remote network.\n  - name: NetworkProvider\n    description: A NetworkProvider identifies who hosts/provides a Network.\n  - name: NetworkType\n    description: A NetworkType represents an LPWAN type, such as LoRa or IP (3GPP).\n  - name: PasswordPolicy\n    description: PasswordPolicies are used by companies to enforce password requirements on their users.\n  - name: ReportingProtocol\n    description: ReportingProtocols are used by the Application to forward data from the devices to the IoT application server.\n  - name: Session\n    description: Session endpoints allow for the management of User authentication.\n  - name: User\n    description: A user of the system\npaths:\n  /api/applications:\n    $ref: 'endpoints/application.yml#/paths/~1api~1applications'\n  /api/applications/{id}:\n    $ref: 'endpoints/application.yml#/paths/~1api~1applications~1{id}'\n  /api/applications/{id}/bulk-device-import:\n    $ref: 'endpoints/application.yml#/paths/~1api~1applications~1{id}~1bulk-device-import'\n  /api/applications/{id}/start:\n    $ref: 'endpoints/application.yml#/paths/~1api~1applications~1{id}~1start'\n  /api/applications/{id}/stop:\n    $ref: 'endpoints/application.yml#/paths/~1api~1applications~1{id}~1stop'\n  /api/applicationNetworkTypeLinks:\n    $ref: 'endpoints/application-network-type-link.yml#/paths/~1api~1applicationNetworkTypeLinks'\n  /api/applicationNetworkTypeLinks/{id}:\n    $ref: 'endpoints/application-network-type-link.yml#/paths/~1api~1applicationNetworkTypeLinks~1{id}'\n  /api/companies:\n    $ref: 'endpoints/company.yml#/paths/~1api~1companies'\n  /api/companies/{id}:\n    $ref: 'endpoints/company.yml#/paths/~1api~1companies~1{id}'\n  /api/companyNetworkTypeLinks:\n    $ref: 'endpoints/company-network-type-link.yml#/paths/~1api~1companyNetworkTypeLinks'\n  /api/companyNetworkTypeLinks/{id}:\n    $ref: 'endpoints/company-network-type-link.yml#/paths/~1api~1companyNetworkTypeLinks~1{id}'\n  /api/devices:\n    $ref: 'endpoints/device.yml#/paths/~1api~1devices'\n  /api/devices/{id}:\n    $ref: 'endpoints/device.yml#/paths/~1api~1devices~1{id}'\n  /api/devices/{id}/downlinks:\n    $ref: 'endpoints/device.yml#/paths/~1api~1devices~1{id}~1downlinks'\n  /api/deviceNetworkTypeLinks:\n    $ref: 'endpoints/device-network-type-link.yml#/paths/~1api~1deviceNetworkTypeLinks'\n  /api/deviceNetworkTypeLinks/{id}:\n    $ref: 'endpoints/device-network-type-link.yml#/paths/~1api~1deviceNetworkTypeLinks~1{id}'\n  /api/deviceProfiles:\n    $ref: 'endpoints/device-profile.yml#/paths/~1api~1deviceProfiles'\n  /api/deviceProfiles/{id}:\n    $ref: 'endpoints/device-profile.yml#/paths/~1api~1deviceProfiles~1{id}'\n  /api/deviceProfiles/{id}/push:\n    $ref: 'endpoints/device-profile.yml#/paths/~1api~1deviceProfiles~1{id}~1push'\n  /api/ingest/{applicationId}/{networkId}:\n    $ref: 'endpoints/application.yml#/paths/~1api~1ingest~1{applicationId}~1{networkId}'\n  /api/ip-device-uplinks:\n    $ref: 'endpoints/device.yml#/paths/~1api~1ip-device-uplinks'\n  /api/ip-device-downlinks:\n    $ref: 'endpoints/device.yml#/paths/~1api~1ip-device-downlinks'\n  /api/networks:\n    $ref: 'endpoints/network.yml#/paths/~1api~1networks'\n  /api/networks/{id}:\n    $ref: 'endpoints/network.yml#/paths/~1api~1networks~1{id}'\n  /api/networkProtocols:\n    $ref: 'endpoints/network-protocol.yml#/paths/~1api~1networkProtocols'\n  /api/networkProtocols/{id}:\n    $ref: 'endpoints/network-protocol.yml#/paths/~1api~1networkProtocols~1{id}'\n  /api/networkProtocolHandlers:\n    $ref: 'endpoints/network-protocol.yml#/paths/~1api~1networkProtocolHandlers'\n  /api/networkProviders:\n    $ref: 'endpoints/network-provider.yml#/paths/~1api~1networkProviders'\n  /api/networkProviders/{id}:\n    $ref: 'endpoints/network-provider.yml#/paths/~1api~1networkProviders~1{id}'\n  /api/networkTypes:\n    $ref: 'endpoints/network-type.yml#/paths/~1api~1networkTypes'\n  /api/networkTypes/{id}:\n    $ref: 'endpoints/network-type.yml#/paths/~1api~1networkTypes~1{id}'\n  /api/passwordPolicies:\n    $ref: 'endpoints/password-policy.yml#/paths/~1api~1passwordPolicies'\n  /api/passwordPolicies/{id}:\n    $ref: 'endpoints/password-policy.yml#/paths/~1api~1passwordPolicies~1{id}'\n  /api/reportingProtocols:\n    $ref: 'endpoints/reporting-protocol.yml#/paths/~1api~1reportingProtocols'\n  /api/reportingProtocols/{id}:\n    $ref: 'endpoints/reporting-protocol.yml#/paths/~1api~1reportingProtocols~1{id}'\n  /api/reportingProtocolHandlers:\n    $ref: 'endpoints/reporting-protocol.yml#/paths/~1api~1reportingProtocolHandlers'\n  /api/sessions:\n    $ref: 'endpoints/session.yml#/paths/~1api~1sessions'\n  /api/users:\n    $ref: 'endpoints/user.yml#/paths/~1api~1users'\n  /api/users/{id}:\n    $ref: 'endpoints/user.yml#/paths/~1api~1users~1{id}'\n  /api/users/me:\n    $ref: 'endpoints/user.yml#/paths/~1api~1users~1me'\n  /api/users/verifyEmail/{uuid}:\n    $ref: 'endpoints/user.yml#/paths/~1api~1users~1verifyEmail~1{uuid}'\ncomponents:\n  securitySchemes:\n    bearer_token:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    idParam:\n      name: id\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n    offsetParam:\n      name: offset\n      in: query\n      description: Number of records to skip\n      required: false\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n        default: 0\n    limitParam:\n      name: limit\n      in: query\n      description: Max records to return\n      required: false\n      schema:\n        type: integer\n        format: int32\n    nameSearch:\n      name: search\n      in: query\n      description: Search for a string within name\n      required: false\n      schema:\n        type: string\n  schemas:\n    ResourceCreatedResponse:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    ListResponse:\n      type: object\n      required:\n        - totalCount\n      properties:\n        totalCount:\n          type: integer\n          format: int32\n"
		}
	},
	"Error": "parse: parse spec: parse operations: /api/applications: referenced pathItem not supported"
}