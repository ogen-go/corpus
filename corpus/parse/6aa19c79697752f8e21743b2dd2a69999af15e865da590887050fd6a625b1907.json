{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "firebasedatabase-v1beta.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.0/services/firebasedatabase-v1beta.yaml",
			"byteSize": 32837,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    DatabaseInstance:\n      description: 'Representation of a Realtime Database instance. Details on interacting\n        with contents of a DatabaseInstance can be found at: https://firebase.google.com/docs/database/rest/start.'\n      properties:\n        databaseUrl:\n          description: Immutable. The globally unique hostname of the database.\n          type: string\n        name:\n          description: 'The fully qualified resource name of the database instance,\n            in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`.'\n          type: string\n        project:\n          description: 'The resource name of the project this instance belongs to.\n            For example: `projects/{project-number}`.'\n          type: string\n        state:\n          description: The database's lifecycle state. Read-only.\n          enum:\n          - LIFECYCLE_STATE_UNSPECIFIED\n          - ACTIVE\n          - DISABLED\n          - DELETED\n          type: string\n        type:\n          description: The database instance type. On creation only USER_DATABASE\n            is allowed, which is also the default when omitted.\n          enum:\n          - DATABASE_INSTANCE_TYPE_UNSPECIFIED\n          - DEFAULT_DATABASE\n          - USER_DATABASE\n          type: string\n      type: object\n    DisableDatabaseInstanceRequest:\n      description: The request sent to the DisableDatabaseInstance method.\n      properties: {}\n      type: object\n    ListDatabaseInstancesResponse:\n      description: The response from the ListDatabaseInstances method.\n      properties:\n        instances:\n          description: List of each DatabaseInstance that is in the parent Firebase\n            project.\n          items:\n            $ref: '#/components/schemas/DatabaseInstance'\n          type: array\n        nextPageToken:\n          description: If the result list is too large to fit in a single response,\n            then a token is returned. If the string is empty, then this response is\n            the last page of results. This token can be used in a subsequent call\n            to `ListDatabaseInstances` to find the next group of database instances.\n            Page tokens are short-lived and should not be persisted.\n          type: string\n      type: object\n    ReenableDatabaseInstanceRequest:\n      description: The request sent to the ReenableDatabaseInstance method.\n      properties: {}\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n            https://www.googleapis.com/auth/cloud-platform.read-only: View your data\n              across Google Cloud services and see the email address of your Google\n              Account\n            https://www.googleapis.com/auth/firebase: View and administer all your\n              Firebase data and settings\n            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase\n              data and settings\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n            https://www.googleapis.com/auth/cloud-platform.read-only: View your data\n              across Google Cloud services and see the email address of your Google\n              Account\n            https://www.googleapis.com/auth/firebase: View and administer all your\n              Firebase data and settings\n            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase\n              data and settings\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources:\n    projects.locations.instances:\n      id: google.firebasedatabase.projects.locations.instances\n      methods:\n        create:\n          operation:\n            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        disable:\n          operation:\n            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:disable/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        reenable:\n          operation:\n            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reenable/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: projects.locations.instances\n      title: projects.locations.instances\nexternalDocs:\n  url: https://firebase.google.com/docs/reference/rest/database/database-management/rest/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: The Firebase Realtime Database Management API enables programmatic\n    provisioning and management of Realtime Database instances.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Firebase Realtime Database Management API\n  version: v1beta\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n  - format: google\n    url: https://firebasedatabase.googleapis.com/$discovery/rest?version=v1beta\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: firebasedatabase\nopenapi: 3.0.0\npaths:\n  /v1beta/projects/{projectsId}/locations/{locationsId}/instances:\n    get:\n      description: Lists each DatabaseInstance associated with the specified parent\n        project. The list items are returned in no particular order, but will be a\n        consistent view of the database instances when additional requests are made\n        with a `pageToken`. The resulting list contains instances in any STATE. The\n        list results may be stale by a few seconds. Use GetDatabaseInstance for consistent\n        reads.\n      operationId: firebasedatabase.projects.locations.instances.list\n      parameters:\n      - description: The maximum number of database instances to return in the response.\n          The server may return fewer than this at its discretion. If no value is\n          specified (or too large a value is specified), then the server will impose\n          its own limit.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Token returned from a previous call to `ListDatabaseInstances`\n          indicating where in the set of database instances to resume listing.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDatabaseInstancesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Requests that a new DatabaseInstance be created. The state of a\n        successfully created DatabaseInstance is ACTIVE. Only available for projects\n        on the Blaze plan. Projects can be upgraded using the Cloud Billing API https://cloud.google.com/billing/reference/rest/v1/projects/updateBillingInfo.\n        Note that it might take a few minutes for billing enablement state to propagate\n        to Firebase systems.\n      operationId: firebasedatabase.projects.locations.instances.create\n      parameters:\n      - description: The globally unique identifier of the database instance.\n        in: query\n        name: databaseId\n        schema:\n          type: string\n      - description: When set to true, the request will be validated but not submitted.\n        in: query\n        name: validateOnly\n        schema:\n          type: boolean\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatabaseInstance'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\n  /v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:\n    delete:\n      description: Marks a DatabaseInstance to be deleted. The DatabaseInstance will\n        be purged within 30 days. The default database cannot be deleted. IDs for\n        deleted database instances may never be recovered or re-used. The Database\n        may only be deleted if it is already in a DISABLED state.\n      operationId: firebasedatabase.projects.locations.instances.delete\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: instancesId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\n    get:\n      description: Gets the DatabaseInstance identified by the specified resource\n        name.\n      operationId: firebasedatabase.projects.locations.instances.get\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: instancesId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disable:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Disables a DatabaseInstance. The database can be re-enabled later\n        using ReenableDatabaseInstance. When a database is disabled, all reads and\n        writes are denied, including view access in the Firebase console.\n      operationId: firebasedatabase.projects.locations.instances.disable\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: instancesId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableDatabaseInstanceRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\n  /v1beta/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reenable:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Enables a DatabaseInstance. The database must have been disabled\n        previously using DisableDatabaseInstance. The state of a successfully reenabled\n        DatabaseInstance is ACTIVE.\n      operationId: firebasedatabase.projects.locations.instances.reenable\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: instancesId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReenableDatabaseInstanceRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\n  /v1beta/{name}:\n    delete:\n      description: Marks a DatabaseInstance to be deleted. The DatabaseInstance will\n        be purged within 30 days. The default database cannot be deleted. IDs for\n        deleted database instances may never be recovered or re-used. The Database\n        may only be deleted if it is already in a DISABLED state.\n      operationId: firebasedatabase.projects.locations.instances.delete\n      parameters:\n      - description: 'The fully qualified resource name of the database instance,\n          in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\n    get:\n      description: Gets the DatabaseInstance identified by the specified resource\n        name.\n      operationId: firebasedatabase.projects.locations.instances.get\n      parameters:\n      - description: 'The fully qualified resource name of the database instance,\n          in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`.\n          `database-id` is a globally unique identifier across all parent collections.\n          For convenience, this method allows you to supply `-` as a wildcard character\n          in place of specific collections under `projects` and `locations`. The resulting\n          wildcarding form of the method is: `projects/-/locations/-/instances/{database-id}`.'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta/{name}:disable:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Disables a DatabaseInstance. The database can be re-enabled later\n        using ReenableDatabaseInstance. When a database is disabled, all reads and\n        writes are denied, including view access in the Firebase console.\n      operationId: firebasedatabase.projects.locations.instances.disable\n      parameters:\n      - description: 'The fully qualified resource name of the database instance,\n          in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableDatabaseInstanceRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\n  /v1beta/{name}:reenable:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Enables a DatabaseInstance. The database must have been disabled\n        previously using DisableDatabaseInstance. The state of a successfully reenabled\n        DatabaseInstance is ACTIVE.\n      operationId: firebasedatabase.projects.locations.instances.reenable\n      parameters:\n      - description: 'The fully qualified resource name of the database instance,\n          in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReenableDatabaseInstanceRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\n  /v1beta/{parent}/instances:\n    get:\n      description: Lists each DatabaseInstance associated with the specified parent\n        project. The list items are returned in no particular order, but will be a\n        consistent view of the database instances when additional requests are made\n        with a `pageToken`. The resulting list contains instances in any STATE. The\n        list results may be stale by a few seconds. Use GetDatabaseInstance for consistent\n        reads.\n      operationId: firebasedatabase.projects.locations.instances.list\n      parameters:\n      - description: 'The parent project for which to list database instances, in\n          the form: `projects/{project-number}/locations/{location-id}` To list across\n          all locations, use a parent in the form: `projects/{project-number}/locations/-`'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The maximum number of database instances to return in the response.\n          The server may return fewer than this at its discretion. If no value is\n          specified (or too large a value is specified), then the server will impose\n          its own limit.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Token returned from a previous call to `ListDatabaseInstances`\n          indicating where in the set of database instances to resume listing.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDatabaseInstancesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform.read-only\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase.readonly\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Requests that a new DatabaseInstance be created. The state of a\n        successfully created DatabaseInstance is ACTIVE. Only available for projects\n        on the Blaze plan. Projects can be upgraded using the Cloud Billing API https://cloud.google.com/billing/reference/rest/v1/projects/updateBillingInfo.\n        Note that it might take a few minutes for billing enablement state to propagate\n        to Firebase systems.\n      operationId: firebasedatabase.projects.locations.instances.create\n      parameters:\n      - description: 'The parent project for which to create a database instance,\n          in the form: `projects/{project-number}/locations/{location-id}`.'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The globally unique identifier of the database instance.\n        in: query\n        name: databaseId\n        schema:\n          type: string\n      - description: When set to true, the request will be validated but not submitted.\n        in: query\n        name: validateOnly\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatabaseInstance'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatabaseInstance'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      - Oauth2:\n        - https://www.googleapis.com/auth/firebase\n        Oauth2c:\n        - https://www.googleapis.com/auth/firebase\n      tags:\n      - projects\nservers:\n- url: https://firebasedatabase.googleapis.com/\ntags:\n- name: projects\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v1beta/{name}: get: duplicate operationId: \"firebasedatabase.projects.locations.instances.get\""
}