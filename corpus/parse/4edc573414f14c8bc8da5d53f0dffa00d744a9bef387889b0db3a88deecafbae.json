{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/matthewpi/access-oidc"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 23994,
			"content": "openapi: 3.0.0\n\ninfo:\n  version: \"1.0\"\n  title: \"Access OIDC\"\n  license:\n    name: MIT\n\nservers:\n  - url: \"http://localhost:8787\"\n    description: \"localhost\"\n\nsecurity:\n  - OAuth2:\n      - openid\n#  - OpenID: []\n\npaths:\n  /.well-known/openid-configuration:\n    get:\n      summary: Provider Configuration\n      operationId: openid-configuration\n      security: []\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Configuration\"\n        default:\n          $ref: \"#/components/responses/Default\"\n  /protocol/openid-connect/auth:\n    get:\n      summary: Authorization Endpoint\n      operationId: openid-authorization_endpoint\n      security: []\n      # https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n      parameters:\n        - in: query\n          name: client_id\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: redirect_uri\n          schema:\n            type: string\n            format: uri\n          required: true\n        - in: query\n          name: response_type\n          schema:\n            type: string\n          required: true\n          example: \"code\"\n        - in: query\n          name: scope\n          schema:\n            type: string\n          required: true\n          example: \"openid\"\n          description: 'Requires at least \"openid\".'\n        - in: query\n          name: state\n          schema:\n            type: string\n            format: password\n          description: \"A random string that is returned on success and can be used to verify the call and protect against cross site scripting attacks.\"\n        - in: query\n          name: nonce\n          schema:\n            type: string\n            format: password\n          description: \"A secure random string that is used by the OpenID provider to protect against replay attacks.\"\n        - in: query\n          name: prompt\n          schema:\n            type: string\n          description: |\n            If used must be set to one of the following:\n\n            - **login** - The user will be prompted with a login dialog.\n            - **none** - The user will not be prompted with a login dialog.  If they do not have a current session a **login_required** error will be returned.\n        - in: query\n          name: code_challenge_method\n          schema:\n            type: string\n          description: |\n            Set this to **S256**.\n\n            Required when using PKCE.\n        - in: query\n          name: code_challenge\n          schema:\n            type: string\n          description: |\n            A Base64 Url Encoded SHA256 hash of a string that you will be required to send as **code_verifier** when making the second request in the Auth Code Flow.\n\n            Required when using PKCE.\n      # https://openid.net/specs/openid-connect-core-1_0.html#AuthResponse\n      # https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n      responses:\n        302:\n          description: |\n            Redirect\n\n            If the request parameters are valid a 302 redirect will occur to the registered `redirect_uri` with the following query parameters appended.\n\n            Success - User is authenticated\n\n            The authorization code is returned with a 10 minute expiry time.\n            ```\n            ?code=M2QyYWU2OGQtNDAxNi00NzQyLTlhYzktMDRmNTY0ZTIyNTZifFPdOVT...\u0026state=61c07cd68b0c65a0e9a35bf6c4f472f4\n            ```\n\n            Error - Invalid Response Type\n            ```\n            ?error=unsupported_response_type\u0026error_description=the%20specified%20response_type%20is%20not%20supported\n            ```\n\n            Error - Missing the scope parameter\n            ```\n            ?error=invalid_request\u0026error_description=missing%20required%20parameter(s)%20scope\n            ```\n\n            Error - Prompt=none and the user was not authenticated\n            ```\n            ?error=login_required\u0026error_description=End-User%20authentication%20is%20required\n            ```\n\n            Error - invalid_scope - some of requested scopes are not whitelisted\n\n            This indicates that you have supplied scopes that are not official OIDC scopes or not defined as part of an API Authorization Server.\n            ```\n            ?error=invalid_scope\u0026error_description=some%20of%20requested%20scopes%20are%20not%20whitelisted\n            ```\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              examples:\n                missing_redirect_uri:\n                  summary: \"Missing `redirect_uri`\"\n                  value:\n                    error: \"invalid_request\"\n                    error_description: \"missing required parameter(s) redirect_uri\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Default\"\n  /protocol/openid-connect/token:\n    post:\n      summary: Token Endpoint\n      operationId: openid-token_endpoint\n      security:\n        - TokenBasic: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - code\n                - grant_type\n                - redirect_uri\n              properties:\n                client_id:\n                  type: string\n                client_secret:\n                  type: string\n                  format: password\n                code:\n                  type: string\n                  format: password\n                code_verifier:\n                  type: string\n                  format: password\n                grant_type:\n                  type: string\n                  example: \"authorization_code\"\n                redirect_uri:\n                  type: string\n      responses:\n        200:\n          $ref: \"#/components/responses/Token\"\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              examples:\n                resource_not_found:\n                  summary: \"Probably an invalid `client_id`\"\n                  value:\n                    error: \"invalid_request\"\n                    error_description: \"Resource not found\"\n                grant_invalid:\n                  summary: \"The grant has been used or has expired\"\n                  value:\n                    error: \"invalid_grant\"\n                    error_description: \"Grant request is invalid\"\n                missing_redirect_uri:\n                  summary: \"Missing `redirect_uri`\"\n                  value:\n                    error: \"invalid_request\"\n                    error_description: \"Missing required parameter(s). (redirect_uri)\"\n                invalid_authorization:\n                  summary: \"The authorization header is invalid\"\n                  value:\n                    error: \"invalid_request\"\n                    error_description: \"Invalid authorization header value format\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Default\"\n  # https://openid.net/specs/openid-connect-core-1_0.html#UserInfoRequest\n  /protocol/openid-connect/userinfo:\n    get:\n      summary: Get User Info\n      operationId: oidc-userinfo_endpoint\n      responses:\n        # https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              examples:\n                no_token_provided:\n                  value:\n                    error: \"invalid_request\"\n                    error_description: \"No bearer token provided\"\n                invalid_authorization:\n                  value:\n                    error: \"invalid_request\"\n                    error_description: \"Invalid authorization header value format\"\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              examples:\n                invalid_token:\n                  value:\n                    error: \"invalid_token\"\n                    error_description: \"Invalid token provided\"\n        default:\n          $ref: \"#/components/responses/Default\"\n    post:\n      summary: Get User Info\n      operationId: oidc-userinfo_endpoint\n      responses:\n        # https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              examples:\n                no_token_provided:\n                  value:\n                    error: \"invalid_request\"\n                    error_description: \"No bearer token provided\"\n                invalid_authorization:\n                  value:\n                    error: \"invalid_request\"\n                    error_description: \"Invalid authorization header value format\"\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              examples:\n                invalid_token:\n                  value:\n                    error: \"invalid_token\"\n                    error_description: \"Invalid token provided\"\n        default:\n          $ref: \"#/components/responses/Default\"\n  /protocol/openid-connect/certs:\n    get:\n      summary: List Signing Keys\n      operationId: oidc-jwks_uri\n      security: []\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - keys\n                properties:\n                  keys:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/JWK\"\n                    uniqueItems: true\n        default:\n          $ref: \"#/components/responses/Default\"\n  # https://openid.net/specs/openid-connect-registration-1_0.html#RegistrationRequest\n  /client-registrations/openid-connect:\n    get:\n      summary: List Registered Clients\n      responses:\n        200:\n          description: OK\n    post:\n      summary: Dynamic Client Registration\n      operationId: oidc-registration_endpoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ClientMetadata\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Client\"\n  /client-registrations/openid-connect/{client_id}:\n    get:\n      summary: Get Client Information\n      parameters:\n        - in: path\n          name: client_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientMetadata\"\n    patch:\n      summary: Update Client Information\n      parameters:\n        - in: path\n          name: client_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientMetadata\"\n    delete:\n      summary: Delete Client\n      parameters:\n        - in: path\n          name: client_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n      responses:\n        204:\n          description: OK\n\ncomponents:\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: /protocol/openid-connect/auth\n          tokenUrl: /protocol/openid-connect/token\n          scopes:\n            openid: OpenID Connect\n#    OpenID:\n#      type: openIdConnect\n#      openIdConnectUrl: /.well-known/openid-configuration\n    TokenBasic:\n      type: http\n      scheme: basic\n\n  schemas:\n    Client:\n      allOf:\n        - type: object\n          required:\n            - client_id\n            - client_id_issued_at\n          properties:\n            client_id:\n              type: string\n            client_id_issued_at:\n              type: string\n              format: date-time\n            client_secret:\n              type: string\n              format: password\n            client_secret_expires_at:\n              type: string\n              format: date-time\n        - $ref: \"#/components/schemas/ClientMetadata\"\n    ClientMetadata:\n      type: object\n      required:\n        - redirect_uris\n      properties:\n        redirect_uris:\n          type: array\n          items:\n            type: string\n            format: uri\n          example:\n            - https://client.example.org/callback\n          uniqueItems: true\n        response_types:\n          type: array\n          items:\n            type: string\n            enum:\n              - code\n              - id_token\n              - id_token token\n          default:\n            - code\n          uniqueItems: true\n        grant_types:\n          type: array\n          items:\n            type: string\n            enum:\n              - authorization_code\n              - implicit\n              - refresh_token\n          default:\n            - authorization_code\n            - implicit\n            - refresh_token\n          uniqueItems: true\n        application_type:\n          type: string\n          enum:\n            - native\n            - web\n          default: web\n        contacts:\n          type: array\n          items:\n            type: string\n            format: email\n          example:\n            - user@example.com\n          default: [ ]\n          uniqueItems: true\n        client_name:\n          type: string\n          example: \"My Client\"\n        logo_uri:\n          type: string\n          format: uri\n        client_uri:\n          type: string\n          format: uri\n        policy_uri:\n          type: string\n          format: uri\n        tos_uri:\n          type: string\n          format: uri\n        jwks_uri:\n          type: string\n          format: uri\n          description: \"Mutually exclusive with `jwks`\"\n        jwks:\n          type: array\n          items:\n            $ref: \"#/components/schemas/JWK\"\n          description: \"Mutually exclusive with `jwks_uri`\"\n          uniqueItems: true\n        sector_identifier_uri:\n          type: string\n          format: uri\n        subject_type:\n          type: string\n          enum:\n            - pairwise\n            - public\n          default: public\n        id_token_signed_response_alg:\n          $ref: \"#/components/schemas/JWSAlgorithm\"\n        id_token_encrypted_response_alg:\n          $ref: \"#/components/schemas/JWEAlgorithm\"\n        id_token_encrypted_response_enc:\n          $ref: \"#/components/schemas/JWEEncryption\"\n        userinfo_signed_response_alg:\n          $ref: \"#/components/schemas/JWSAlgorithm\"\n        userinfo_encrypted_response_alg:\n          $ref: \"#/components/schemas/JWEAlgorithm\"\n        userinfo_encrypted_response_enc:\n          $ref: \"#/components/schemas/JWEEncryption\"\n        request_object_signing_alg:\n          $ref: \"#/components/schemas/JWSAlgorithm\"\n        request_object_encryption_alg:\n          $ref: \"#/components/schemas/JWEAlgorithm\"\n        request_object_encryption_enc:\n          $ref: \"#/components/schemas/JWEEncryption\"\n        token_endpoint_auth_method:\n          type: string\n          enum:\n            - client_secret_basic\n            - client_secret_post\n            - client_secret_jwt\n            - private_key_jwt\n            - none\n          default: client_secret_basic\n        token_endpoint_auth_signing_alg:\n          $ref: \"#/components/schemas/JWSAlgorithm\"\n        default_max_age:\n          type: number\n          format: int32\n          default: 0\n        require_auth_time:\n          type: boolean\n          default: false\n        default_acr_values:\n          type: array\n          items:\n            type: string\n          uniqueItems: true\n        initiate_login_uri:\n          type: string\n          format: uri\n        request_uris:\n          type: array\n          items:\n            type: string\n            format: uri\n          uniqueItems: true\n    Configuration:\n      type: object\n      required:\n        - issuer\n        - authorization_endpoint\n        - jwks_uri\n        - response_types_supported\n        - subject_types_supported\n        - id_token_signing_alg_values_supported\n      properties:\n        issuer:\n          type: string\n          example: \"http://127.0.0.1:8787\"\n        authorization_endpoint:\n          type: string\n          example: \"http://127.0.0.1:8787/protocol/openid-connect/auth\"\n        token_endpoint:\n          type: string\n          example: \"http://127.0.0.1:8787/protocol/openid-connect/token\"\n        userinfo_endpoint:\n          type: string\n          example: \"http://127.0.0.1:8787/protocol/openid-connect/userinfo\"\n        jwks_uri:\n          type: string\n          example: \"http://127.0.0.1:8787/protocol/openid-connect/certs\"\n        scopes_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - \"openid\"\n          uniqueItems: true\n        response_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - \"code\"\n            - \"code id_token\"\n            - \"id_token\"\n          uniqueItems: true\n        grant_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - \"authorization_code\"\n            - \"refresh_token\"\n          default:\n            - \"authorization_code\"\n            - \"implicit\"\n          uniqueItems: true\n        subject_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - \"pairwise\"\n            - \"public\"\n          uniqueItems: true\n        id_token_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - \"RS256\"\n          uniqueItems: true\n        token_endpoint_auth_methods_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - \"client_secret_basic\"\n            - \"client_secret_post\"\n          uniqueItems: true\n        claims_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - \"aud\"\n            - \"exp\"\n            - \"iat\"\n            - \"iss\"\n            - \"sub\"\n          uniqueItems: true\n    Error:\n      type: object\n      required:\n        - error\n        - error_description\n      properties:\n        error:\n          type: string\n          example: \"\"\n        error_description:\n          type: string\n          example: \"\"\n    JWK:\n      type: object\n      required:\n        - kid\n        - kty\n        # - e\n        # - n\n      properties:\n        kid:\n          type: string\n          example: \"9b43e575-a435-4868-9ca5-197255dc4ce3\"\n          description: \"Key ID\"\n        kty:\n          type: string\n          example: \"RSA\"\n          description: \"Key Type\"\n        use:\n          type: string\n          example: \"sig\"\n          description: \"Key Use\"\n        e:\n          type: string\n          example: \"AQAB\"\n          description: \"\"\n        n:\n          type: string\n          example: \"\"\n          description: \"\"\n    JWEAlgorithm:\n      type: string\n      enum:\n        - RSA1_5\n        - RSA-OAEP\n        - RSA-OAEP-256\n      example: RSA-OAEP\n    JWEEncryption:\n      type: string\n      enum:\n        - A128GCM\n        - A192GCM\n        - A256GCM\n        - A128CBC-HS256\n        - A192CBC-HS384\n        - A256CBC-HS512\n      example: A128CBC-HS256\n    JWSAlgorithm:\n      type: string\n      enum:\n        - ES256\n        - ES384\n        - ES512\n        - PS256\n        - PS384\n        - PS512\n        - RS256\n        - RS384\n        - RS512\n      example: RS256\n    User:\n      type: object\n      required:\n        - sub\n      properties:\n        sub:\n          type: string\n          example: \"248289761001\"\n          description: \"\"\n        name:\n          type: string\n          example: \"Jane Doe\"\n          description: \"The full name of the user\"\n        given_name:\n          type: string\n          example: \"Jane\"\n          description: \"The first name of the user\"\n        family_name:\n          type: string\n          example: \"doe\"\n          description: \"The last name of the user\"\n        preferred_username:\n          type: string\n          example: \"j.doe\"\n          description: \"The username for the user.  Not always an email address.\"\n        email:\n          type: string\n          format: email\n          example: \"janedoe@example.com\"\n          description: \"The email address of the user.\"\n        picture:\n          type: string\n          format: uri\n          example: \"https://example.com/janedoe/me.jpg\"\n        groups:\n          type: array\n          items:\n            type: string\n          example:\n            - \"admin\"\n          description: \"\"\n          uniqueItems: true\n    Token:\n      type: object\n      required:\n        - access_token\n        - expires_in\n        - id_token\n        - token_type\n        # - refresh_token\n      properties:\n        access_token:\n          type: string\n          format: password\n          description: |\n            A JSON Web Token (JWT) that represents the session that has just been created\n            for the user.\n\n            For example the body of the JWT contains:\n            ```json\n            {\n              \"jti\": \"\",\n              \"iss\": \"\",\n              \"iat\": 0,\n              \"exp\": 0,\n              \"aud\": \"\"\n            }\n            ```\n        expires_in:\n          type: integer\n          format: int32\n          example: 3600\n          default: 3600\n          description: \"The number of seconds until the session expires. Defaults to 3600.\"\n        id_token:\n          type: string\n          format: password\n          description: \"A JSON Web Token (JWT) containing user and scope information for this session.\"\n        token_type:\n          type: string\n          example: \"Bearer\"\n          description: 'The type of access token. Always set to \"Bearer\".'\n        refresh_token:\n          type: string\n          format: password\n\n  responses:\n    Default:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Token:\n      description: \"OK\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Token\"\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          examples:\n            authentication_failed:\n              value:\n                error: \"invalid_request\"\n                error_description: \"Authentication Failed\"\n            unauthorized_access:\n              value:\n                error: \"invalid_request\"\n                error_description: \"Access is unauthorized\"\n",
			"canonicalURL": "/github.com/matthewpi/access-oidc@8ec112c26dfac3bd32eedd007471a511213117d8/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/matthewpi/access-oidc/blob/8ec112c26dfac3bd32eedd007471a511213117d8/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /protocol/openid-connect/userinfo: post: duplicate operationId: \"oidc-userinfo_endpoint\""
}