{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DataDog/datadog-api-client-ruby"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": ".generator/schemas/v2/openapi.yaml",
			"byteSize": 624431,
			"content": "components:\n  callbacks: {}\n  examples: {}\n  headers: {}\n  links: {}\n  parameters:\n    APIKeyFilterCreatedAtEndParameter:\n      description: Only include API keys created on or before the specified date.\n      in: query\n      name: filter[created_at][end]\n      required: false\n      schema:\n        example: '2020-11-24T18:46:21+00:00'\n        type: string\n    APIKeyFilterCreatedAtStartParameter:\n      description: Only include API keys created on or after the specified date.\n      in: query\n      name: filter[created_at][start]\n      required: false\n      schema:\n        example: '2020-11-24T18:46:21+00:00'\n        type: string\n    APIKeyFilterModifiedAtEndParameter:\n      description: Only include API keys modified on or before the specified date.\n      in: query\n      name: filter[modified_at][end]\n      required: false\n      schema:\n        example: '2020-11-24T18:46:21+00:00'\n        type: string\n    APIKeyFilterModifiedAtStartParameter:\n      description: Only include API keys modified on or after the specified date.\n      in: query\n      name: filter[modified_at][start]\n      required: false\n      schema:\n        example: '2020-11-24T18:46:21+00:00'\n        type: string\n    APIKeyFilterParameter:\n      description: Filter API keys by the specified string.\n      in: query\n      name: filter\n      required: false\n      schema:\n        type: string\n    APIKeyId:\n      description: The ID of the API key.\n      in: path\n      name: api_key_id\n      required: true\n      schema:\n        type: string\n    APIKeyIncludeParameter:\n      description: Comma separated list of resource paths for related resources to\n        include in the response. Supported resource paths are `created_by` and `modified_by`.\n      in: query\n      name: include\n      required: false\n      schema:\n        example: created_by,modified_by\n        type: string\n    APIKeysSortParameter:\n      description: 'API key attribute used to sort results. Sort order is ascending\n\n        by default. In order to specify a descending sort, prefix the\n\n        attribute with a minus sign.'\n      in: query\n      name: sort\n      required: false\n      schema:\n        $ref: '#/components/schemas/APIKeysSort'\n    ApplicationKeyFilterCreatedAtEndParameter:\n      description: Only include application keys created on or before the specified\n        date.\n      in: query\n      name: filter[created_at][end]\n      required: false\n      schema:\n        example: '2020-11-24T18:46:21+00:00'\n        type: string\n    ApplicationKeyFilterCreatedAtStartParameter:\n      description: Only include application keys created on or after the specified\n        date.\n      in: query\n      name: filter[created_at][start]\n      required: false\n      schema:\n        example: '2020-11-24T18:46:21+00:00'\n        type: string\n    ApplicationKeyFilterParameter:\n      description: Filter application keys by the specified string.\n      in: query\n      name: filter\n      required: false\n      schema:\n        type: string\n    ApplicationKeyID:\n      description: The ID of the application key.\n      in: path\n      name: app_key_id\n      required: true\n      schema:\n        type: string\n    ApplicationKeyIncludeParameter:\n      description: Resource path for related resources to include in the response.\n        Only `owned_by` is supported.\n      in: query\n      name: include\n      required: false\n      schema:\n        example: owned_by\n        type: string\n    ApplicationKeysSortParameter:\n      description: 'Application key attribute used to sort results. Sort order is\n        ascending\n\n        by default. In order to specify a descending sort, prefix the\n\n        attribute with a minus sign.'\n      in: query\n      name: sort\n      required: false\n      schema:\n        $ref: '#/components/schemas/ApplicationKeysSort'\n    ArchiveID:\n      description: The ID of the archive.\n      in: path\n      name: archive_id\n      required: true\n      schema:\n        type: string\n    AuthNMappingID:\n      description: The UUID of the AuthN Mapping.\n      in: path\n      name: authn_mapping_id\n      required: true\n      schema:\n        type: string\n    CloudWorkloadSecurityAgentRuleID:\n      description: The ID of the Agent rule.\n      example: 3b5-v82-ns6\n      in: path\n      name: agent_rule_id\n      required: true\n      schema:\n        type: string\n    ConfluentAccountID:\n      description: Confluent Account id.\n      in: path\n      name: account_id\n      required: true\n      schema:\n        type: string\n    ConfluentResourceID:\n      description: Confluent Account Resource ID.\n      in: path\n      name: resource_id\n      required: true\n      schema:\n        type: string\n    IncidentAttachmentFilterQueryParameter:\n      description: Specifies which types of attachments are included in the response.\n      explode: false\n      in: query\n      name: filter[attachment_type]\n      required: false\n      schema:\n        items:\n          $ref: '#/components/schemas/IncidentAttachmentAttachmentType'\n        type: array\n    IncidentAttachmentIncludeQueryParameter:\n      description: Specifies which types of related objects are included in the response.\n      explode: false\n      in: query\n      name: include\n      required: false\n      schema:\n        items:\n          $ref: '#/components/schemas/IncidentAttachmentRelatedObject'\n        type: array\n    IncidentIDPathParameter:\n      description: The UUID of the incident.\n      in: path\n      name: incident_id\n      required: true\n      schema:\n        type: string\n    IncidentIncludeQueryParameter:\n      description: Specifies which types of related objects should be included in\n        the response.\n      explode: false\n      in: query\n      name: include\n      required: false\n      schema:\n        items:\n          $ref: '#/components/schemas/IncidentRelatedObject'\n        type: array\n    IncidentServiceIDPathParameter:\n      description: The ID of the incident service.\n      in: path\n      name: service_id\n      required: true\n      schema:\n        type: string\n    IncidentServiceIncludeQueryParameter:\n      description: Specifies which types of related objects should be included in\n        the response.\n      in: query\n      name: include\n      required: false\n      schema:\n        $ref: '#/components/schemas/IncidentRelatedObject'\n    IncidentServiceSearchQueryParameter:\n      description: A search query that filters services by name.\n      in: query\n      name: filter\n      required: false\n      schema:\n        example: ExampleServiceName\n        type: string\n    IncidentTeamIDPathParameter:\n      description: The ID of the incident team.\n      in: path\n      name: team_id\n      required: true\n      schema:\n        type: string\n    IncidentTeamIncludeQueryParameter:\n      description: Specifies which types of related objects should be included in\n        the response.\n      in: query\n      name: include\n      required: false\n      schema:\n        $ref: '#/components/schemas/IncidentRelatedObject'\n    IncidentTeamSearchQueryParameter:\n      description: A search query that filters teams by name.\n      in: query\n      name: filter\n      required: false\n      schema:\n        example: ExampleTeamName\n        type: string\n    MetricID:\n      description: The name of the log-based metric.\n      in: path\n      name: metric_id\n      required: true\n      schema:\n        type: string\n    MetricName:\n      description: The name of the metric.\n      example: dist.http.endpoint.request\n      in: path\n      name: metric_name\n      required: true\n      schema:\n        type: string\n    OpsgenieServiceIDPathParameter:\n      description: The UUID of the service.\n      in: path\n      name: integration_service_id\n      required: true\n      schema:\n        type: string\n    PageNumber:\n      description: Specific page number to return.\n      in: query\n      name: page[number]\n      required: false\n      schema:\n        default: 0\n        example: 0\n        format: int64\n        type: integer\n    PageOffset:\n      description: Specific offset to use as the beginning of the returned page.\n      in: query\n      name: page[offset]\n      required: false\n      schema:\n        default: 0\n        example: 0\n        format: int64\n        type: integer\n    PageSize:\n      description: Size for a given page. The maximum allowed value is 5000.\n      in: query\n      name: page[size]\n      required: false\n      schema:\n        default: 10\n        example: 10\n        format: int64\n        type: integer\n    RoleID:\n      description: The unique identifier of the role.\n      in: path\n      name: role_id\n      required: true\n      schema:\n        type: string\n    SecurityFilterID:\n      description: The ID of the security filter.\n      in: path\n      name: security_filter_id\n      required: true\n      schema:\n        type: string\n    SecurityMonitoringRuleID:\n      description: The ID of the rule.\n      in: path\n      name: rule_id\n      required: true\n      schema:\n        type: string\n    SensitiveDataScannerGroupID:\n      description: The ID of a group of rules.\n      in: path\n      name: group_id\n      required: true\n      schema:\n        type: string\n    SensitiveDataScannerRuleID:\n      description: The ID of the rule.\n      in: path\n      name: rule_id\n      required: true\n      schema:\n        type: string\n    ServiceAccountID:\n      description: The ID of the service account.\n      in: path\n      name: service_account_id\n      required: true\n      schema:\n        example: 00000000-0000-1234-0000-000000000000\n        type: string\n    ServiceName:\n      description: The name of the service.\n      in: path\n      name: service_name\n      required: true\n      schema:\n        example: my-service\n        type: string\n    SignalID:\n      description: The ID of the signal.\n      in: path\n      name: signal_id\n      required: true\n      schema:\n        type: string\n    UserID:\n      description: The ID of the user.\n      in: path\n      name: user_id\n      required: true\n      schema:\n        example: 00000000-0000-9999-0000-000000000000\n        type: string\n  requestBodies: {}\n  responses:\n    BadRequestResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIErrorResponse'\n      description: Bad Request\n    ConcurrentModificationResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIErrorResponse'\n      description: Concurrent Modification\n    ConflictResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIErrorResponse'\n      description: Conflict\n    ForbiddenResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIErrorResponse'\n      description: Forbidden\n    NotAuthorizedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIErrorResponse'\n      description: Not Authorized\n    NotFoundResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIErrorResponse'\n      description: Not Found\n    TooManyRequestsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIErrorResponse'\n      description: Too many requests\n    UnauthorizedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/APIErrorResponse'\n      description: Unauthorized\n  schemas:\n    APIErrorResponse:\n      description: API error response.\n      properties:\n        errors:\n          description: A list of errors.\n          items:\n            description: A list of items.\n            example: Bad Request\n            type: string\n          type: array\n      required:\n      - errors\n      type: object\n    APIKeyCreateAttributes:\n      description: Attributes used to create an API Key.\n      properties:\n        name:\n          description: Name of the API key.\n          example: API Key for submitting metrics\n          type: string\n      required:\n      - name\n      type: object\n    APIKeyCreateData:\n      description: Object used to create an API key.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/APIKeyCreateAttributes'\n        type:\n          $ref: '#/components/schemas/APIKeysType'\n      required:\n      - attributes\n      - type\n      type: object\n    APIKeyCreateRequest:\n      description: Request used to create an API key.\n      properties:\n        data:\n          $ref: '#/components/schemas/APIKeyCreateData'\n      required:\n      - data\n      type: object\n    APIKeyRelationships:\n      description: Resources related to the API key.\n      properties:\n        created_by:\n          $ref: '#/components/schemas/RelationshipToUser'\n        modified_by:\n          $ref: '#/components/schemas/RelationshipToUser'\n      type: object\n    APIKeyResponse:\n      description: Response for retrieving an API key.\n      properties:\n        data:\n          $ref: '#/components/schemas/FullAPIKey'\n        included:\n          description: Array of objects related to the API key.\n          items:\n            $ref: '#/components/schemas/APIKeyResponseIncludedItem'\n          type: array\n      type: object\n    APIKeyResponseIncludedItem:\n      description: An object related to an API key.\n      oneOf:\n      - $ref: '#/components/schemas/User'\n      type: object\n    APIKeyUpdateAttributes:\n      description: Attributes used to update an API Key.\n      properties:\n        name:\n          description: Name of the API key.\n          example: API Key for submitting metrics\n          type: string\n      required:\n      - name\n      type: object\n    APIKeyUpdateData:\n      description: Object used to update an API key.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/APIKeyUpdateAttributes'\n        id:\n          description: ID of the API key.\n          example: 00112233-4455-6677-8899-aabbccddeeff\n          type: string\n        type:\n          $ref: '#/components/schemas/APIKeysType'\n      required:\n      - attributes\n      - id\n      - type\n      type: object\n    APIKeyUpdateRequest:\n      description: Request used to update an API key.\n      properties:\n        data:\n          $ref: '#/components/schemas/APIKeyUpdateData'\n      required:\n      - data\n      type: object\n    APIKeysResponse:\n      description: Response for a list of API keys.\n      properties:\n        data:\n          description: Array of API keys.\n          items:\n            $ref: '#/components/schemas/PartialAPIKey'\n          type: array\n        included:\n          description: Array of objects related to the API key.\n          items:\n            $ref: '#/components/schemas/APIKeyResponseIncludedItem'\n          type: array\n      type: object\n    APIKeysSort:\n      default: name\n      description: Sorting options\n      enum:\n      - created_at\n      - -created_at\n      - last4\n      - -last4\n      - modified_at\n      - -modified_at\n      - name\n      - -name\n      type: string\n      x-enum-varnames:\n      - CREATED_AT_ASCENDING\n      - CREATED_AT_DESCENDING\n      - LAST4_ASCENDING\n      - LAST4_DESCENDING\n      - MODIFIED_AT_ASCENDING\n      - MODIFIED_AT_DESCENDING\n      - NAME_ASCENDING\n      - NAME_DESCENDING\n    APIKeysType:\n      default: api_keys\n      description: API Keys resource type.\n      enum:\n      - api_keys\n      example: api_keys\n      type: string\n      x-enum-varnames:\n      - API_KEYS\n    ApplicationKeyCreateAttributes:\n      description: Attributes used to create an application Key.\n      properties:\n        name:\n          description: Name of the application key.\n          example: Application Key for managing dashboards\n          type: string\n        scopes:\n          description: Array of scopes to grant the application key. This feature\n            is in private beta, please contact Datadog support to enable scopes for\n            your application keys.\n          example:\n          - dashboards_read\n          - dashboards_write\n          - dashboards_public_share\n          items:\n            description: Name of scope.\n            type: string\n          nullable: true\n          type: array\n      required:\n      - name\n      type: object\n    ApplicationKeyCreateData:\n      description: Object used to create an application key.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ApplicationKeyCreateAttributes'\n        type:\n          $ref: '#/components/schemas/ApplicationKeysType'\n      required:\n      - attributes\n      - type\n      type: object\n    ApplicationKeyCreateRequest:\n      description: Request used to create an application key.\n      properties:\n        data:\n          $ref: '#/components/schemas/ApplicationKeyCreateData'\n      required:\n      - data\n      type: object\n    ApplicationKeyRelationships:\n      description: Resources related to the application key.\n      properties:\n        owned_by:\n          $ref: '#/components/schemas/RelationshipToUser'\n      type: object\n    ApplicationKeyResponse:\n      description: Response for retrieving an application key.\n      properties:\n        data:\n          $ref: '#/components/schemas/FullApplicationKey'\n        included:\n          description: Array of objects related to the application key.\n          items:\n            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'\n          type: array\n      type: object\n    ApplicationKeyResponseIncludedItem:\n      description: An object related to an application key.\n      oneOf:\n      - $ref: '#/components/schemas/User'\n      - $ref: '#/components/schemas/Role'\n      type: object\n    ApplicationKeyUpdateAttributes:\n      description: Attributes used to update an application Key.\n      properties:\n        name:\n          description: Name of the application key.\n          example: Application Key for managing dashboards\n          type: string\n        scopes:\n          description: Array of scopes to grant the application key. This feature\n            is in private beta, please contact Datadog support to enable scopes for\n            your application keys.\n          example:\n          - dashboards_read\n          - dashboards_write\n          - dashboards_public_share\n          items:\n            description: Name of scope.\n            type: string\n          nullable: true\n          type: array\n      type: object\n    ApplicationKeyUpdateData:\n      description: Object used to update an application key.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ApplicationKeyUpdateAttributes'\n        id:\n          description: ID of the application key.\n          example: 00112233-4455-6677-8899-aabbccddeeff\n          type: string\n        type:\n          $ref: '#/components/schemas/ApplicationKeysType'\n      required:\n      - attributes\n      - id\n      - type\n      type: object\n    ApplicationKeyUpdateRequest:\n      description: Request used to update an application key.\n      properties:\n        data:\n          $ref: '#/components/schemas/ApplicationKeyUpdateData'\n      required:\n      - data\n      type: object\n    ApplicationKeysSort:\n      default: name\n      description: Sorting options\n      enum:\n      - created_at\n      - -created_at\n      - last4\n      - -last4\n      - name\n      - -name\n      type: string\n      x-enum-varnames:\n      - CREATED_AT_ASCENDING\n      - CREATED_AT_DESCENDING\n      - LAST4_ASCENDING\n      - LAST4_DESCENDING\n      - NAME_ASCENDING\n      - NAME_DESCENDING\n    ApplicationKeysType:\n      default: application_keys\n      description: Application Keys resource type.\n      enum:\n      - application_keys\n      example: application_keys\n      type: string\n      x-enum-varnames:\n      - APPLICATION_KEYS\n    AuditLogsEvent:\n      description: Object description of an Audit Logs event after it is processed\n        and stored by Datadog.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/AuditLogsEventAttributes'\n        id:\n          description: Unique ID of the event.\n          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\n          type: string\n        type:\n          $ref: '#/components/schemas/AuditLogsEventType'\n      type: object\n    AuditLogsEventAttributes:\n      description: JSON object containing all event attributes and their associated\n        values.\n      properties:\n        attributes:\n          additionalProperties: {}\n          description: JSON object of attributes from Audit Logs events.\n          example:\n            customAttribute: 123\n            duration: 2345\n          type: object\n        service:\n          description: 'Name of the application or service generating Audit Logs events.\n\n            This name is used to correlate Audit Logs to APM, so make sure you specify\n            the same\n\n            value when you use both products.'\n          example: web-app\n          type: string\n        tags:\n          description: Array of tags associated with your event.\n          example:\n          - team:A\n          items:\n            description: Tag associated with your event.\n            type: string\n          type: array\n        timestamp:\n          description: Timestamp of your event.\n          example: '2019-01-02T09:42:36.320Z'\n          format: date-time\n          type: string\n      type: object\n    AuditLogsEventType:\n      default: audit\n      description: Type of the event.\n      enum:\n      - audit\n      example: audit\n      type: string\n      x-enum-varnames:\n      - Audit\n    AuditLogsEventsResponse:\n      description: Response object with all events matching the request and pagination\n        information.\n      properties:\n        data:\n          description: Array of events matching the request.\n          items:\n            $ref: '#/components/schemas/AuditLogsEvent'\n          type: array\n        links:\n          $ref: '#/components/schemas/AuditLogsResponseLinks'\n        meta:\n          $ref: '#/components/schemas/AuditLogsResponseMetadata'\n      type: object\n    AuditLogsQueryFilter:\n      description: Search and filter query settings.\n      properties:\n        from:\n          default: now-15m\n          description: Minimum time for the requested events. Supports date, math,\n            and regular timestamps (in milliseconds).\n          example: now-15m\n          type: string\n        query:\n          default: '*'\n          description: Search query following the Audit Logs search syntax.\n          example: '@type:session AND @session.type:user'\n          type: string\n        to:\n          default: now\n          description: Maximum time for the requested events. Supports date, math,\n            and regular timestamps (in milliseconds).\n          example: now\n          type: string\n      type: object\n    AuditLogsQueryOptions:\n      description: 'Global query options that are used during the query.\n\n        Note: Specify either timezone or time offset, not both. Otherwise, the query\n        fails.'\n      properties:\n        time_offset:\n          description: Time offset (in seconds) to apply to the query.\n          format: int64\n          type: integer\n        timezone:\n          default: UTC\n          description: The timezone can be specified as GMT, UTC, an offset from UTC\n            (like UTC+1), or as a Timezone Database identifier (like America/New_York).\n          example: GMT\n          type: string\n      type: object\n    AuditLogsQueryPageOptions:\n      description: Paging attributes for listing events.\n      properties:\n        cursor:\n          description: List following results with a cursor provided in the previous\n            query.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n        limit:\n          default: 10\n          description: Maximum number of events in the response.\n          example: 25\n          format: int32\n          maximum: 1000\n          type: integer\n      type: object\n    AuditLogsResponseLinks:\n      description: Links attributes.\n      properties:\n        next:\n          description: 'Link for the next set of results. Note that the request can\n            also be made using the\n\n            POST endpoint.'\n          example: https://app.datadoghq.com/api/v2/audit/event?filter[query]=foo\u0026page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    AuditLogsResponseMetadata:\n      description: The metadata associated with a request.\n      properties:\n        elapsed:\n          description: Time elapsed in milliseconds.\n          example: 132\n          format: int64\n          type: integer\n        page:\n          $ref: '#/components/schemas/AuditLogsResponsePage'\n        request_id:\n          description: The identifier of the request.\n          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR\n          type: string\n        status:\n          $ref: '#/components/schemas/AuditLogsResponseStatus'\n        warnings:\n          description: 'A list of warnings (non-fatal errors) encountered. Partial\n            results may return if\n\n            warnings are present in the response.'\n          items:\n            $ref: '#/components/schemas/AuditLogsWarning'\n          type: array\n      type: object\n    AuditLogsResponsePage:\n      description: Paging attributes.\n      properties:\n        after:\n          description: The cursor to use to get the next results, if any. To make\n            the next request, use the same parameters with the addition of `page[cursor]`.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    AuditLogsResponseStatus:\n      description: The status of the response.\n      enum:\n      - done\n      - timeout\n      example: done\n      type: string\n      x-enum-varnames:\n      - DONE\n      - TIMEOUT\n    AuditLogsSearchEventsRequest:\n      description: The request for a Audit Logs events list.\n      properties:\n        filter:\n          $ref: '#/components/schemas/AuditLogsQueryFilter'\n        options:\n          $ref: '#/components/schemas/AuditLogsQueryOptions'\n        page:\n          $ref: '#/components/schemas/AuditLogsQueryPageOptions'\n        sort:\n          $ref: '#/components/schemas/AuditLogsSort'\n      type: object\n    AuditLogsSort:\n      description: Sort parameters when querying events.\n      enum:\n      - timestamp\n      - -timestamp\n      type: string\n      x-enum-varnames:\n      - TIMESTAMP_ASCENDING\n      - TIMESTAMP_DESCENDING\n    AuditLogsWarning:\n      description: Warning message indicating something that went wrong with the query.\n      properties:\n        code:\n          description: Unique code for this type of warning.\n          example: unknown_index\n          type: string\n        detail:\n          description: Detailed explanation of this specific warning.\n          example: 'indexes: foo, bar'\n          type: string\n        title:\n          description: Short human-readable summary of the warning.\n          example: One or several indexes are missing or invalid, results hold data\n            from the other indexes\n          type: string\n      type: object\n    AuthNMapping:\n      description: The AuthN Mapping object returned by API.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/AuthNMappingAttributes'\n        id:\n          description: ID of the AuthN Mapping.\n          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d\n          type: string\n        relationships:\n          $ref: '#/components/schemas/AuthNMappingRelationships'\n        type:\n          $ref: '#/components/schemas/AuthNMappingsType'\n      required:\n      - id\n      - type\n      type: object\n    AuthNMappingAttributes:\n      description: Attributes of AuthN Mapping.\n      properties:\n        attribute_key:\n          description: Key portion of a key/value pair of the attribute sent from\n            the Identity Provider.\n          example: member-of\n          type: string\n        attribute_value:\n          description: Value portion of a key/value pair of the attribute sent from\n            the Identity Provider.\n          example: Development\n          type: string\n        created_at:\n          description: Creation time of the AuthN Mapping.\n          format: date-time\n          readOnly: true\n          type: string\n        modified_at:\n          description: Time of last AuthN Mapping modification.\n          format: date-time\n          readOnly: true\n          type: string\n        saml_assertion_attribute_id:\n          description: The ID of the SAML assertion attribute.\n          example: '0'\n          type: string\n      type: object\n    AuthNMappingCreateAttributes:\n      description: Key/Value pair of attributes used for create request.\n      properties:\n        attribute_key:\n          description: Key portion of a key/value pair of the attribute sent from\n            the Identity Provider.\n          example: member-of\n          type: string\n        attribute_value:\n          description: Value portion of a key/value pair of the attribute sent from\n            the Identity Provider.\n          example: Development\n          type: string\n      type: object\n    AuthNMappingCreateData:\n      description: Data for creating an AuthN Mapping.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/AuthNMappingCreateAttributes'\n        relationships:\n          $ref: '#/components/schemas/AuthNMappingCreateRelationships'\n        type:\n          $ref: '#/components/schemas/AuthNMappingsType'\n      required:\n      - type\n      type: object\n    AuthNMappingCreateRelationships:\n      description: Relationship of AuthN Mapping create object to Role.\n      properties:\n        role:\n          $ref: '#/components/schemas/RelationshipToRole'\n      type: object\n    AuthNMappingCreateRequest:\n      description: Request for creating an AuthN Mapping.\n      properties:\n        data:\n          $ref: '#/components/schemas/AuthNMappingCreateData'\n      required:\n      - data\n      type: object\n    AuthNMappingIncluded:\n      description: Included data in the AuthN Mapping response.\n      oneOf:\n      - $ref: '#/components/schemas/SAMLAssertionAttribute'\n      - $ref: '#/components/schemas/Role'\n      properties: {}\n      type: object\n    AuthNMappingRelationships:\n      description: All relationships associated with AuthN Mapping.\n      properties:\n        role:\n          $ref: '#/components/schemas/RelationshipToRole'\n        saml_assertion_attribute:\n          $ref: '#/components/schemas/RelationshipToSAMLAssertionAttribute'\n      type: object\n    AuthNMappingResponse:\n      description: AuthN Mapping response from the API.\n      properties:\n        data:\n          $ref: '#/components/schemas/AuthNMapping'\n        included:\n          description: Included data in the AuthN Mapping response.\n          items:\n            $ref: '#/components/schemas/AuthNMappingIncluded'\n          type: array\n      type: object\n    AuthNMappingUpdateAttributes:\n      description: Key/Value pair of attributes used for update request.\n      properties:\n        attribute_key:\n          description: Key portion of a key/value pair of the attribute sent from\n            the Identity Provider.\n          example: member-of\n          type: string\n        attribute_value:\n          description: Value portion of a key/value pair of the attribute sent from\n            the Identity Provider.\n          example: Development\n          type: string\n      type: object\n    AuthNMappingUpdateData:\n      description: Data for updating an AuthN Mapping.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/AuthNMappingUpdateAttributes'\n        id:\n          description: ID of the AuthN Mapping.\n          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d\n          type: string\n        relationships:\n          $ref: '#/components/schemas/AuthNMappingUpdateRelationships'\n        type:\n          $ref: '#/components/schemas/AuthNMappingsType'\n      required:\n      - id\n      - type\n      type: object\n    AuthNMappingUpdateRelationships:\n      description: Relationship of AuthN Mapping update object to Role.\n      properties:\n        role:\n          $ref: '#/components/schemas/RelationshipToRole'\n      type: object\n    AuthNMappingUpdateRequest:\n      description: Request to update an AuthN Mapping.\n      properties:\n        data:\n          $ref: '#/components/schemas/AuthNMappingUpdateData'\n      required:\n      - data\n      type: object\n    AuthNMappingsResponse:\n      description: Array of AuthN Mappings response.\n      properties:\n        data:\n          description: Array of returned AuthN Mappings.\n          items:\n            $ref: '#/components/schemas/AuthNMapping'\n          type: array\n        included:\n          description: Included data in the AuthN Mapping response.\n          items:\n            $ref: '#/components/schemas/AuthNMappingIncluded'\n          type: array\n        meta:\n          $ref: '#/components/schemas/ResponseMetaAttributes'\n      type: object\n    AuthNMappingsSort:\n      description: Sorting options for AuthN Mappings.\n      enum:\n      - created_at\n      - -created_at\n      - role_id\n      - -role_id\n      - saml_assertion_attribute_id\n      - -saml_assertion_attribute_id\n      - role.name\n      - -role.name\n      - saml_assertion_attribute.attribute_key\n      - -saml_assertion_attribute.attribute_key\n      - saml_assertion_attribute.attribute_value\n      - -saml_assertion_attribute.attribute_value\n      type: string\n      x-enum-varnames:\n      - CREATED_AT_ASCENDING\n      - CREATED_AT_DESCENDING\n      - ROLE_ID_ASCENDING\n      - ROLE_ID_DESCENDING\n      - SAML_ASSERTION_ATTRIBUTE_ID_ASCENDING\n      - SAML_ASSERTION_ATTRIBUTE_ID_DESCENDING\n      - ROLE_NAME_ASCENDING\n      - ROLE_NAME_DESCENDING\n      - SAML_ASSERTION_ATTRIBUTE_KEY_ASCENDING\n      - SAML_ASSERTION_ATTRIBUTE_KEY_DESCENDING\n      - SAML_ASSERTION_ATTRIBUTE_VALUE_ASCENDING\n      - SAML_ASSERTION_ATTRIBUTE_VALUE_DESCENDING\n    AuthNMappingsType:\n      default: authn_mappings\n      description: AuthN Mappings resource type.\n      enum:\n      - authn_mappings\n      example: authn_mappings\n      type: string\n      x-enum-varnames:\n      - AUTHN_MAPPINGS\n    CIAppAggregateBucketValue:\n      description: A bucket value, can either be a timeseries or a single value.\n      oneOf:\n      - $ref: '#/components/schemas/CIAppAggregateBucketValueSingleString'\n      - $ref: '#/components/schemas/CIAppAggregateBucketValueSingleNumber'\n      - $ref: '#/components/schemas/CIAppAggregateBucketValueTimeseries'\n    CIAppAggregateBucketValueSingleNumber:\n      description: A single number value.\n      format: double\n      type: number\n    CIAppAggregateBucketValueSingleString:\n      description: A single string value.\n      type: string\n    CIAppAggregateBucketValueTimeseries:\n      description: A timeseries array.\n      items:\n        $ref: '#/components/schemas/CIAppAggregateBucketValueTimeseriesPoint'\n      type: array\n      x-generate-alias-as-model: true\n    CIAppAggregateBucketValueTimeseriesPoint:\n      description: A timeseries point.\n      properties:\n        time:\n          description: The time value for this point.\n          example: '2020-06-08T11:55:00.123Z'\n          format: date-time\n          type: string\n        value:\n          description: The value for this point.\n          example: 19\n          format: double\n          type: number\n      type: object\n    CIAppAggregateSort:\n      description: A sort rule.\n      example:\n        aggregation: count\n        order: asc\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/CIAppAggregationFunction'\n        metric:\n          description: The metric to sort by (only used for `type=measure`).\n          example: '@duration'\n          type: string\n        order:\n          $ref: '#/components/schemas/CIAppSortOrder'\n        type:\n          $ref: '#/components/schemas/CIAppAggregateSortType'\n      type: object\n    CIAppAggregateSortType:\n      default: alphabetical\n      description: The type of sorting algorithm.\n      enum:\n      - alphabetical\n      - measure\n      type: string\n      x-enum-varnames:\n      - ALPHABETICAL\n      - MEASURE\n    CIAppAggregationFunction:\n      description: An aggregation function.\n      enum:\n      - count\n      - cardinality\n      - pc75\n      - pc90\n      - pc95\n      - pc98\n      - pc99\n      - sum\n      - min\n      - max\n      - avg\n      - median\n      - latest\n      - earliest\n      - most_frequent\n      - delta\n      example: pc90\n      type: string\n      x-enum-varnames:\n      - COUNT\n      - CARDINALITY\n      - PERCENTILE_75\n      - PERCENTILE_90\n      - PERCENTILE_95\n      - PERCENTILE_98\n      - PERCENTILE_99\n      - SUM\n      - MIN\n      - MAX\n      - AVG\n      - MEDIAN\n      - LATEST\n      - EARLIEST\n      - MOST_FREQUENT\n      - DELTA\n    CIAppCompute:\n      description: A compute rule to compute metrics or timeseries.\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/CIAppAggregationFunction'\n        interval:\n          description: 'The time buckets'' size (only used for type=timeseries)\n\n            Defaults to a resolution of 150 points.'\n          example: 5m\n          type: string\n        metric:\n          description: The metric to use.\n          example: '@duration'\n          type: string\n        type:\n          $ref: '#/components/schemas/CIAppComputeType'\n      required:\n      - aggregation\n      type: object\n    CIAppComputeType:\n      default: total\n      description: The type of compute.\n      enum:\n      - timeseries\n      - total\n      type: string\n      x-enum-varnames:\n      - TIMESERIES\n      - TOTAL\n    CIAppComputes:\n      additionalProperties:\n        $ref: '#/components/schemas/CIAppAggregateBucketValue'\n      description: A map of the metric name to value for regular compute, or a list\n        of values for a timeseries.\n      type: object\n    CIAppEventAttributes:\n      description: JSON object containing all event attributes and their associated\n        values.\n      properties:\n        attributes:\n          additionalProperties: {}\n          description: JSON object of attributes from CI Visibility events.\n          example:\n            customAttribute: 123\n            duration: 2345\n          type: object\n        service:\n          description: 'The name of the application or service generating CI Visibility\n            events.\n\n            It is used to switch from CI Visibility to APM, so make sure you define\n            the same\n\n            value when you use both products.'\n          example: web-ui-tests\n          type: string\n        tags:\n          $ref: '#/components/schemas/TagsEventAttribute'\n        timestamp:\n          $ref: '#/components/schemas/TimestampEventAttribute'\n      type: object\n    CIAppGroupByHistogram:\n      description: 'Used to perform a histogram computation (only for measure facets).\n\n        At most, 100 buckets are allowed, the number of buckets is `(max - min)/interval`.'\n      properties:\n        interval:\n          description: The bin size of the histogram buckets.\n          example: 10\n          format: double\n          type: number\n        max:\n          description: 'The maximum value for the measure used in the histogram\n\n            (values greater than this one are filtered out).'\n          example: 100\n          format: double\n          type: number\n        min:\n          description: 'The minimum value for the measure used in the histogram\n\n            (values smaller than this one are filtered out).'\n          example: 50\n          format: double\n          type: number\n      required:\n      - interval\n      - min\n      - max\n      type: object\n    CIAppGroupByMissing:\n      description: The value to use for logs that don't have the facet used to group-by.\n      oneOf:\n      - $ref: '#/components/schemas/CIAppGroupByMissingString'\n      - $ref: '#/components/schemas/CIAppGroupByMissingNumber'\n    CIAppGroupByMissingNumber:\n      description: The missing value to use if there is a number valued facet.\n      format: double\n      type: number\n    CIAppGroupByMissingString:\n      description: The missing value to use if there is a string valued facet.\n      type: string\n    CIAppGroupByTotal:\n      default: false\n      description: A resulting object to put the given computes in over all the matching\n        records.\n      oneOf:\n      - $ref: '#/components/schemas/CIAppGroupByTotalBoolean'\n      - $ref: '#/components/schemas/CIAppGroupByTotalString'\n      - $ref: '#/components/schemas/CIAppGroupByTotalNumber'\n    CIAppGroupByTotalBoolean:\n      description: If set to true, creates an additional bucket labeled \"$facet_total\".\n      type: boolean\n    CIAppGroupByTotalNumber:\n      description: A number to use as the key value for the total bucket.\n      format: double\n      type: number\n    CIAppGroupByTotalString:\n      description: A string to use as the key value for the total bucket.\n      type: string\n    CIAppPipelineEvent:\n      description: Object description of a pipeline event after being processed and\n        stored by Datadog.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/CIAppEventAttributes'\n        id:\n          description: Unique ID of the event.\n          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\n          type: string\n        type:\n          $ref: '#/components/schemas/CIAppPipelineEventTypeName'\n      type: object\n    CIAppPipelineEventTypeName:\n      description: Type of the event.\n      enum:\n      - cipipeline\n      example: cipipeline\n      type: string\n      x-enum-varnames:\n      - cipipeline\n    CIAppPipelineEventsRequest:\n      description: The request for a pipelines search.\n      properties:\n        filter:\n          $ref: '#/components/schemas/CIAppPipelinesQueryFilter'\n        options:\n          $ref: '#/components/schemas/CIAppQueryOptions'\n        page:\n          $ref: '#/components/schemas/CIAppQueryPageOptions'\n        sort:\n          $ref: '#/components/schemas/CIAppSort'\n      type: object\n    CIAppPipelineEventsResponse:\n      description: Response object with all pipeline events matching the request and\n        pagination information.\n      properties:\n        data:\n          description: Array of events matching the request.\n          items:\n            $ref: '#/components/schemas/CIAppPipelineEvent'\n          type: array\n        links:\n          $ref: '#/components/schemas/CIAppResponseLinks'\n        meta:\n          $ref: '#/components/schemas/CIAppResponseMetadata'\n      type: object\n    CIAppPipelinesAggregateRequest:\n      description: The object sent with the request to retrieve aggregation buckets\n        of pipeline events from your organization.\n      properties:\n        compute:\n          description: The list of metrics or timeseries to compute for the retrieved\n            buckets.\n          items:\n            $ref: '#/components/schemas/CIAppCompute'\n          type: array\n        filter:\n          $ref: '#/components/schemas/CIAppPipelinesQueryFilter'\n        group_by:\n          description: The rules for the group-by.\n          items:\n            $ref: '#/components/schemas/CIAppPipelinesGroupBy'\n          type: array\n        options:\n          $ref: '#/components/schemas/CIAppQueryOptions'\n        page:\n          $ref: '#/components/schemas/CIAppQueryPageOptions'\n      type: object\n    CIAppPipelinesAggregationBucketsResponse:\n      description: The query results.\n      properties:\n        buckets:\n          description: The list of matching buckets, one item per bucket.\n          items:\n            $ref: '#/components/schemas/CIAppPipelinesBucketResponse'\n          type: array\n      type: object\n    CIAppPipelinesAnalyticsAggregateResponse:\n      description: The response object for the pipeline events aggregate API endpoint.\n      properties:\n        data:\n          $ref: '#/components/schemas/CIAppPipelinesAggregationBucketsResponse'\n        links:\n          $ref: '#/components/schemas/CIAppResponseLinks'\n        meta:\n          $ref: '#/components/schemas/CIAppResponseMetadata'\n      type: object\n    CIAppPipelinesBucketResponse:\n      description: Bucket values.\n      properties:\n        by:\n          additionalProperties:\n            description: The values for each group-by.\n            oneOf:\n            - type: string\n            - format: double\n              type: number\n            - type: boolean\n          description: The key-value pairs for each group-by.\n          example:\n            '@ci.provider.name': gitlab\n            '@ci.status': success\n          type: object\n        computes:\n          $ref: '#/components/schemas/CIAppComputes'\n      type: object\n    CIAppPipelinesGroupBy:\n      description: A group-by rule.\n      properties:\n        facet:\n          description: The name of the facet to use (required).\n          example: '@ci.status'\n          type: string\n        histogram:\n          $ref: '#/components/schemas/CIAppGroupByHistogram'\n        limit:\n          default: 10\n          description: The maximum buckets to return for this group-by.\n          format: int64\n          type: integer\n        missing:\n          $ref: '#/components/schemas/CIAppGroupByMissing'\n        sort:\n          $ref: '#/components/schemas/CIAppAggregateSort'\n        total:\n          $ref: '#/components/schemas/CIAppGroupByTotal'\n      required:\n      - facet\n      type: object\n    CIAppPipelinesQueryFilter:\n      description: The search and filter query settings.\n      properties:\n        from:\n          default: now-15m\n          description: The minimum time for the requested events; supports date, math,\n            and regular timestamps (in milliseconds).\n          example: now-15m\n          type: string\n        query:\n          default: '*'\n          description: The search query following the Log search syntax.\n          example: '@ci.provider.name:github AND @ci.status:error'\n          type: string\n        to:\n          default: now\n          description: The maximum time for the requested events, supports date, math,\n            and regular timestamps (in milliseconds).\n          example: now\n          type: string\n      type: object\n    CIAppQueryOptions:\n      description: 'Global query options that are used during the query.\n\n        Only supply timezone or time offset, not both. Otherwise, the query fails.'\n      properties:\n        time_offset:\n          description: The time offset (in seconds) to apply to the query.\n          format: int64\n          type: integer\n        timezone:\n          default: UTC\n          description: The timezone can be specified as GMT, UTC, an offset from UTC\n            (like UTC+1), or as a Timezone Database identifier (like America/New_York).\n          example: GMT\n          type: string\n      type: object\n    CIAppQueryPageOptions:\n      description: Paging attributes for listing events.\n      properties:\n        cursor:\n          description: List following results with a cursor provided in the previous\n            query.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n        limit:\n          default: 10\n          description: Maximum number of events in the response.\n          example: 25\n          format: int32\n          maximum: 1000\n          type: integer\n      type: object\n    CIAppResponseLinks:\n      description: Links attributes.\n      properties:\n        next:\n          description: 'Link for the next set of results. The request can also be\n            made using the\n\n            POST endpoint.'\n          example: https://app.datadoghq.com/api/v2/ci/tests/events?filter[query]=foo\u0026page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    CIAppResponseMetadata:\n      description: The metadata associated with a request.\n      properties:\n        elapsed:\n          description: The time elapsed in milliseconds.\n          example: 132\n          format: int64\n          type: integer\n        page:\n          $ref: '#/components/schemas/CIAppResponsePage'\n        request_id:\n          description: The identifier of the request.\n          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR\n          type: string\n        status:\n          $ref: '#/components/schemas/CIAppResponseStatus'\n        warnings:\n          description: 'A list of warnings (non-fatal errors) encountered. Partial\n            results may return if\n\n            warnings are present in the response.'\n          items:\n            $ref: '#/components/schemas/CIAppWarning'\n          type: array\n      type: object\n    CIAppResponsePage:\n      description: Paging attributes.\n      properties:\n        after:\n          description: The cursor to use to get the next results, if any. To make\n            the next request, use the same parameters with the addition of `page[cursor]`.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    CIAppResponseStatus:\n      description: The status of the response.\n      enum:\n      - done\n      - timeout\n      example: done\n      type: string\n      x-enum-varnames:\n      - DONE\n      - TIMEOUT\n    CIAppSort:\n      description: Sort parameters when querying events.\n      enum:\n      - timestamp\n      - -timestamp\n      type: string\n      x-enum-varnames:\n      - TIMESTAMP_ASCENDING\n      - TIMESTAMP_DESCENDING\n    CIAppSortOrder:\n      description: The order to use, ascending or descending.\n      enum:\n      - asc\n      - desc\n      example: asc\n      type: string\n      x-enum-varnames:\n      - ASCENDING\n      - DESCENDING\n    CIAppTestEvent:\n      description: Object description of test event after being processed and stored\n        by Datadog.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/CIAppEventAttributes'\n        id:\n          description: Unique ID of the event.\n          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\n          type: string\n        type:\n          $ref: '#/components/schemas/CIAppTestEventTypeName'\n      type: object\n    CIAppTestEventTypeName:\n      description: Type of the event.\n      enum:\n      - citest\n      example: citest\n      type: string\n      x-enum-varnames:\n      - citest\n    CIAppTestEventsRequest:\n      description: The request for a tests search.\n      properties:\n        filter:\n          $ref: '#/components/schemas/CIAppTestsQueryFilter'\n        options:\n          $ref: '#/components/schemas/CIAppQueryOptions'\n        page:\n          $ref: '#/components/schemas/CIAppQueryPageOptions'\n        sort:\n          $ref: '#/components/schemas/CIAppSort'\n      type: object\n    CIAppTestEventsResponse:\n      description: Response object with all test events matching the request and pagination\n        information.\n      properties:\n        data:\n          description: Array of events matching the request.\n          items:\n            $ref: '#/components/schemas/CIAppTestEvent'\n          type: array\n        links:\n          $ref: '#/components/schemas/CIAppResponseLinks'\n        meta:\n          $ref: '#/components/schemas/CIAppResponseMetadata'\n      type: object\n    CIAppTestsAggregateRequest:\n      description: The object sent with the request to retrieve aggregation buckets\n        of test events from your organization.\n      properties:\n        compute:\n          description: The list of metrics or timeseries to compute for the retrieved\n            buckets.\n          items:\n            $ref: '#/components/schemas/CIAppCompute'\n          type: array\n        filter:\n          $ref: '#/components/schemas/CIAppTestsQueryFilter'\n        group_by:\n          description: The rules for the group-by.\n          items:\n            $ref: '#/components/schemas/CIAppTestsGroupBy'\n          type: array\n        options:\n          $ref: '#/components/schemas/CIAppQueryOptions'\n        page:\n          $ref: '#/components/schemas/CIAppQueryPageOptions'\n      type: object\n    CIAppTestsAggregationBucketsResponse:\n      description: The query results.\n      properties:\n        buckets:\n          description: The list of matching buckets, one item per bucket.\n          items:\n            $ref: '#/components/schemas/CIAppTestsBucketResponse'\n          type: array\n      type: object\n    CIAppTestsAnalyticsAggregateResponse:\n      description: The response object for the test events aggregate API endpoint.\n      properties:\n        data:\n          $ref: '#/components/schemas/CIAppTestsAggregationBucketsResponse'\n        links:\n          $ref: '#/components/schemas/CIAppResponseLinks'\n        meta:\n          $ref: '#/components/schemas/CIAppResponseMetadata'\n      type: object\n    CIAppTestsBucketResponse:\n      description: Bucket values.\n      properties:\n        by:\n          additionalProperties:\n            description: The values for each group-by.\n            oneOf:\n            - type: string\n            - format: double\n              type: number\n            - type: boolean\n          description: The key-value pairs for each group-by.\n          example:\n            '@test.service': web-ui-tests\n            '@test.status': skip\n          type: object\n        computes:\n          $ref: '#/components/schemas/CIAppComputes'\n      type: object\n    CIAppTestsGroupBy:\n      description: A group-by rule.\n      properties:\n        facet:\n          description: The name of the facet to use (required).\n          example: '@test.service'\n          type: string\n        histogram:\n          $ref: '#/components/schemas/CIAppGroupByHistogram'\n        limit:\n          default: 10\n          description: The maximum buckets to return for this group-by.\n          format: int64\n          type: integer\n        missing:\n          $ref: '#/components/schemas/CIAppGroupByMissing'\n        sort:\n          $ref: '#/components/schemas/CIAppAggregateSort'\n        total:\n          $ref: '#/components/schemas/CIAppGroupByTotal'\n      required:\n      - facet\n      type: object\n    CIAppTestsQueryFilter:\n      description: The search and filter query settings.\n      properties:\n        from:\n          default: now-15m\n          description: The minimum time for the requested events; supports date, math,\n            and regular timestamps (in milliseconds).\n          example: now-15m\n          type: string\n        query:\n          default: '*'\n          description: The search query following the Log search syntax.\n          example: '@test.service:web-ui-tests AND @test.status:fail'\n          type: string\n        to:\n          default: now\n          description: The maximum time for the requested events, supports date, math,\n            and regular timestamps (in milliseconds).\n          example: now\n          type: string\n      type: object\n    CIAppWarning:\n      description: A warning message indicating something that went wrong with the\n        query.\n      properties:\n        code:\n          description: A unique code for this type of warning.\n          example: unknown_index\n          type: string\n        detail:\n          description: A detailed explanation of this specific warning.\n          example: 'indexes: foo, bar'\n          type: string\n        title:\n          description: A short human-readable summary of the warning.\n          example: One or several indexes are missing or invalid, results hold data\n            from the other indexes\n          type: string\n      type: object\n    ChargebackBreakdown:\n      description: Charges breakdown.\n      properties:\n        charge_type:\n          description: The type of charge for a particular product.\n          example: on_demand\n          type: string\n        cost:\n          description: The cost for a particular product and charge type during a\n            given month.\n          format: double\n          type: number\n        product_name:\n          description: The product for which cost is being reported.\n          example: infra_host\n          type: string\n      type: object\n    CloudConfigurationComplianceRuleOptions:\n      description: 'Options for cloud_configuration rules.\n\n        Fields `resourceType` and `regoRule` are mandatory when managing custom `cloud_configuration`\n        rules.\n\n        '\n      properties:\n        complexRule:\n          description: 'Whether the rule is a complex one.\n\n            Must be set to true if `regoRule.resourceTypes` contains more than one\n            item. Defaults to false.\n\n            '\n          type: boolean\n        regoRule:\n          $ref: '#/components/schemas/CloudConfigurationRegoRule'\n        resourceType:\n          description: 'Main resource type to be checked by the rule. It should be\n            specified again in `regoRule.resourceTypes`.\n\n            '\n          example: aws_acm\n          type: string\n      type: object\n    CloudConfigurationRegoRule:\n      description: Rule details.\n      properties:\n        policy:\n          description: 'The policy written in `rego`, see: https://www.openpolicyagent.org/docs/latest/policy-language/'\n          example: \"package datadog\\n\\nimport data.datadog.output as dd_output\\nimport\n            future.keywords.contains\\nimport future.keywords.if\\nimport future.keywords.in\\n\\neval(resource)\n            = \\\"skip\\\" if {\\n  # Logic that evaluates to true if the resource should\n            be skipped\\n  true\\n} else = \\\"pass\\\" {\\n  # Logic that evaluates to true\n            if the resource is compliant\\n  true\\n} else = \\\"fail\\\" {\\n  # Logic that\n            evaluates to true if the resource is not compliant\\n  true\\n}\\n\\n# This\n            part remains unchanged for all rules\\nresults contains result if {\\n  some\n            resource in input.resources[input.main_resource_type]\\n  result := dd_output.format(resource,\n            eval(resource))\\n}\\n\"\n          type: string\n        resourceTypes:\n          description: List of resource types that will be evaluated upon. Must have\n            at least one element.\n          example:\n          - gcp_iam_service_account\n          - gcp_iam_policy\n          items:\n            type: string\n          type: array\n      required:\n      - policy\n      - resourceTypes\n      type: object\n    CloudConfigurationRuleCaseCreate:\n      description: Description of signals.\n      properties:\n        notifications:\n          description: Notification targets for each rule case.\n          items:\n            description: Notification.\n            type: string\n          type: array\n        status:\n          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'\n      required:\n      - status\n      type: object\n    CloudConfigurationRuleComplianceSignalOptions:\n      description: How to generate compliance signals. Useful for cloud_configuration\n        rules only.\n      properties:\n        userActivationStatus:\n          description: Whether signals will be sent.\n          type: boolean\n        userGroupByFields:\n          description: Fields to use to group findings by when sending signals.\n          items:\n            type: string\n          type: array\n      type: object\n    CloudConfigurationRuleCreatePayload:\n      description: Create a new cloud configuration rule.\n      properties:\n        cases:\n          description: 'Description of generated findings and signals (severity and\n            channels to be notified in case of a signal). Must contain exactly one\n            item.\n\n            '\n          items:\n            $ref: '#/components/schemas/CloudConfigurationRuleCaseCreate'\n          type: array\n        complianceSignalOptions:\n          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'\n        isEnabled:\n          description: Whether the rule is enabled.\n          example: true\n          type: boolean\n        message:\n          description: Message in markdown format for generated findings and signals.\n          example: '#Description\n\n            Explanation of the rule.\n\n\n            #Remediation\n\n            How to fix the security issue.\n\n            '\n          type: string\n        name:\n          description: The name of the rule.\n          example: My security monitoring rule.\n          type: string\n        options:\n          $ref: '#/components/schemas/CloudConfigurationRuleOptions'\n        tags:\n          description: Tags for generated findings and signals.\n          example:\n          - env:prod\n          - team:security\n          items:\n            description: Tag.\n            type: string\n          type: array\n        type:\n          $ref: '#/components/schemas/CloudConfigurationRuleType'\n      required:\n      - name\n      - isEnabled\n      - options\n      - complianceSignalOptions\n      - cases\n      - message\n      type: object\n    CloudConfigurationRuleOptions:\n      description: Options on cloud configuration rules.\n      properties:\n        complianceRuleOptions:\n          $ref: '#/components/schemas/CloudConfigurationComplianceRuleOptions'\n      required:\n      - complianceRuleOptions\n      type: object\n    CloudConfigurationRuleType:\n      description: The rule type.\n      enum:\n      - cloud_configuration\n      type: string\n      x-enum-varnames:\n      - CLOUD_CONFIGURATION\n    CloudWorkloadSecurityAgentRuleAttributes:\n      description: A Cloud Workload Security Agent rule returned by the API.\n      properties:\n        category:\n          description: The category of the Agent rule.\n          example: Process Activity\n          type: string\n        creationDate:\n          description: When the Agent rule was created, timestamp in milliseconds.\n          example: 1624366480320\n          format: int64\n          type: integer\n        creator:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreatorAttributes'\n        defaultRule:\n          description: Whether the rule is included by default.\n          example: false\n          type: boolean\n        description:\n          description: The description of the Agent rule.\n          example: My Agent rule\n          type: string\n        enabled:\n          description: Whether the Agent rule is enabled.\n          example: true\n          type: boolean\n        expression:\n          description: The SECL expression of the Agent rule.\n          example: exec.file.name == \\\"sh\\\"\n          type: string\n        name:\n          description: The name of the Agent rule.\n          example: my_agent_rule\n          type: string\n        updatedAt:\n          description: When the Agent rule was last updated, timestamp in milliseconds.\n          example: 1624366480320\n          format: int64\n          type: integer\n        updater:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdaterAttributes'\n        version:\n          description: The version of the Agent rule.\n          example: 23\n          format: int64\n          type: integer\n      type: object\n    CloudWorkloadSecurityAgentRuleCreateAttributes:\n      description: Create a new Cloud Workload Security Agent rule.\n      properties:\n        description:\n          description: The description of the Agent rule.\n          example: My Agent rule\n          type: string\n        enabled:\n          description: Whether the Agent rule is enabled.\n          example: true\n          type: boolean\n        expression:\n          description: The SECL expression of the Agent rule.\n          example: exec.file.name == \\\"sh\\\"\n          type: string\n        name:\n          description: The name of the Agent rule.\n          example: my_agent_rule\n          type: string\n      required:\n      - name\n      - expression\n      type: object\n    CloudWorkloadSecurityAgentRuleCreateData:\n      description: Object for a single Agent rule.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateAttributes'\n        type:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'\n      required:\n      - attributes\n      - type\n      type: object\n    CloudWorkloadSecurityAgentRuleCreateRequest:\n      description: Request object that includes the Agent rule to create.\n      properties:\n        data:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateData'\n      required:\n      - data\n      type: object\n    CloudWorkloadSecurityAgentRuleCreatorAttributes:\n      description: The attributes of the user who created the Agent rule.\n      properties:\n        handle:\n          description: The handle of the user.\n          example: datadog.user@example.com\n          type: string\n        name:\n          description: The name of the user.\n          example: Datadog User\n          type: string\n      type: object\n    CloudWorkloadSecurityAgentRuleData:\n      description: Object for a single Agent rule.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleAttributes'\n        id:\n          description: The ID of the Agent rule.\n          example: 3dd-0uc-h1s\n          type: string\n        type:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'\n      type: object\n    CloudWorkloadSecurityAgentRuleResponse:\n      description: Response object that includes an Agent rule.\n      properties:\n        data:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleData'\n      type: object\n    CloudWorkloadSecurityAgentRuleType:\n      default: agent_rule\n      description: The type of the resource. The value should always be `agent_rule`.\n      enum:\n      - agent_rule\n      example: agent_rule\n      type: string\n      x-enum-varnames:\n      - AGENT_RULE\n    CloudWorkloadSecurityAgentRuleUpdateAttributes:\n      description: Update an existing Cloud Workload Security Agent rule.\n      properties:\n        description:\n          description: The description of the Agent rule.\n          example: My Agent rule\n          type: string\n        enabled:\n          description: Whether the Agent rule is enabled.\n          example: true\n          type: boolean\n        expression:\n          description: The SECL expression of the Agent rule.\n          example: exec.file.name == \\\"sh\\\"\n          type: string\n      type: object\n    CloudWorkloadSecurityAgentRuleUpdateData:\n      description: Object for a single Agent rule.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateAttributes'\n        type:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'\n      required:\n      - attributes\n      - type\n      type: object\n    CloudWorkloadSecurityAgentRuleUpdateRequest:\n      description: Request object that includes the Agent rule with the attributes\n        to update.\n      properties:\n        data:\n          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateData'\n      required:\n      - data\n      type: object\n    CloudWorkloadSecurityAgentRuleUpdaterAttributes:\n      description: The attributes of the user who last updated the Agent rule.\n      properties:\n        handle:\n          description: The handle of the user.\n          example: datadog.user@example.com\n          type: string\n        name:\n          description: The name of the user.\n          example: Datadog User\n          type: string\n      type: object\n    CloudWorkloadSecurityAgentRulesListResponse:\n      description: Response object that includes a list of Agent rule.\n      properties:\n        data:\n          description: A list of Agent rules objects.\n          items:\n            $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleData'\n          type: array\n      type: object\n    ConfluentAccountCreateRequest:\n      description: Payload schema when adding a Confluent account.\n      properties:\n        data:\n          $ref: '#/components/schemas/ConfluentAccountCreateRequestData'\n      required:\n      - data\n      type: object\n    ConfluentAccountCreateRequestAttributes:\n      description: Attributes associated with the account creation request.\n      properties:\n        api_key:\n          description: The API key associated with your Confluent account.\n          example: TESTAPIKEY123\n          type: string\n        api_secret:\n          description: The API secret associated with your Confluent account.\n          example: test-api-secret-123\n          type: string\n        resources:\n          description: A list of Confluent resources associated with the Confluent\n            account.\n          items:\n            $ref: '#/components/schemas/ConfluentAccountResourceAttributes'\n          type: array\n        tags:\n          description: A list of strings representing tags. Can be a single key, or\n            key-value pairs separated by a colon.\n          example:\n          - myTag\n          - myTag2:myValue\n          items:\n            type: string\n          type: array\n      required:\n      - api_key\n      - api_secret\n      type: object\n    ConfluentAccountCreateRequestData:\n      description: The data body for adding a Confluent account.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ConfluentAccountCreateRequestAttributes'\n        type:\n          $ref: '#/components/schemas/ConfluentAccountType'\n      required:\n      - attributes\n      - type\n      type: object\n    ConfluentAccountResourceAttributes:\n      description: Attributes object for updating a Confluent resource.\n      properties:\n        id:\n          description: The ID associated with a Confluent resource.\n          example: resource-id-123\n          type: string\n        resource_type:\n          description: The resource type of the Resource. Can be `kafka`, `connector`,\n            `ksql`, or `schema_registry`.\n          example: kafka\n          type: string\n        tags:\n          description: A list of strings representing tags. Can be a single key, or\n            key-value pairs separated by a colon.\n          example:\n          - myTag\n          - myTag2:myValue\n          items:\n            type: string\n          type: array\n      type: object\n    ConfluentAccountResponse:\n      description: The expected response schema when getting a Confluent account.\n      properties:\n        data:\n          $ref: '#/components/schemas/ConfluentAccountResponseData'\n      type: object\n    ConfluentAccountResponseAttributes:\n      description: The attributes of a Confluent account.\n      properties:\n        api_key:\n          description: The API key associated with your Confluent account.\n          example: TESTAPIKEY123\n          type: string\n        resources:\n          description: A list of Confluent resources associated with the Confluent\n            account.\n          items:\n            $ref: '#/components/schemas/ConfluentResourceResponseAttributes'\n          type: array\n        tags:\n          description: A list of strings representing tags. Can be a single key, or\n            key-value pairs separated by a colon.\n          example:\n          - myTag\n          - myTag2:myValue\n          items:\n            type: string\n          type: array\n      required:\n      - api_key\n      type: object\n    ConfluentAccountResponseData:\n      description: An API key and API secret pair that represents a Confluent account.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ConfluentAccountResponseAttributes'\n        id:\n          description: A randomly generated ID associated with a Confluent account.\n          example: account_id_abc123\n          type: string\n        type:\n          $ref: '#/components/schemas/ConfluentAccountType'\n      required:\n      - attributes\n      - id\n      - type\n      type: object\n    ConfluentAccountType:\n      default: confluent-cloud-accounts\n      description: The JSON:API type for this API. Should always be `confluent-cloud-accounts`.\n      enum:\n      - confluent-cloud-accounts\n      example: confluent-cloud-accounts\n      type: string\n      x-enum-varnames:\n      - CONFLUENT_CLOUD_ACCOUNTS\n    ConfluentAccountUpdateRequest:\n      description: The JSON:API request for updating a Confluent account.\n      properties:\n        data:\n          $ref: '#/components/schemas/ConfluentAccountUpdateRequestData'\n      required:\n      - data\n      type: object\n    ConfluentAccountUpdateRequestAttributes:\n      description: Attributes object for updating a Confluent account.\n      properties:\n        api_key:\n          description: The API key associated with your Confluent account.\n          example: TESTAPIKEY123\n          type: string\n        api_secret:\n          description: The API secret associated with your Confluent account.\n          example: test-api-secret-123\n          type: string\n        tags:\n          description: A list of strings representing tags. Can be a single key, or\n            key-value pairs separated by a colon.\n          example:\n          - myTag\n          - myTag2:myValue\n          items:\n            type: string\n          type: array\n      required:\n      - api_key\n      - api_secret\n      type: object\n    ConfluentAccountUpdateRequestData:\n      description: Data object for updating a Confluent account.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ConfluentAccountUpdateRequestAttributes'\n        type:\n          $ref: '#/components/schemas/ConfluentAccountType'\n      required:\n      - attributes\n      - type\n      type: object\n    ConfluentAccountsResponse:\n      description: Confluent account returned by the API.\n      properties:\n        data:\n          description: The Confluent account.\n          items:\n            $ref: '#/components/schemas/ConfluentAccountResponseData'\n          type: array\n      type: object\n    ConfluentResourceRequest:\n      description: The JSON:API request for updating a Confluent resource.\n      properties:\n        data:\n          $ref: '#/components/schemas/ConfluentResourceRequestData'\n      required:\n      - data\n      type: object\n    ConfluentResourceRequestAttributes:\n      description: Attributes object for updating a Confluent resource.\n      properties:\n        resource_type:\n          description: The resource type of the Resource. Can be `kafka`, `connector`,\n            `ksql`, or `schema_registry`.\n          example: kafka\n          type: string\n        tags:\n          description: A list of strings representing tags. Can be a single key, or\n            key-value pairs separated by a colon.\n          example:\n          - myTag\n          - myTag2:myValue\n          items:\n            type: string\n          type: array\n      type: object\n    ConfluentResourceRequestData:\n      description: JSON:API request for updating a Confluent resource.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ConfluentResourceRequestAttributes'\n        id:\n          description: The ID associated with a Confluent resource.\n          example: resource-id-123\n          type: string\n        type:\n          $ref: '#/components/schemas/ConfluentResourceType'\n      required:\n      - attributes\n      - type\n      - id\n      type: object\n    ConfluentResourceResponse:\n      description: Response schema when interacting with a Confluent resource.\n      properties:\n        data:\n          $ref: '#/components/schemas/ConfluentResourceResponseData'\n      type: object\n    ConfluentResourceResponseAttributes:\n      description: Model representation of a Confluent Cloud resource.\n      properties:\n        resource_type:\n          description: The resource type of the Resource. Can be `kafka`, `connector`,\n            `ksql`, or `schema_registry`.\n          example: kafka\n          type: string\n        tags:\n          description: A list of strings representing tags. Can be a single key, or\n            key-value pairs separated by a colon.\n          example:\n          - myTag\n          - myTag2:myValue\n          items:\n            type: string\n          type: array\n      required:\n      - resource_type\n      type: object\n    ConfluentResourceResponseData:\n      description: Confluent Cloud resource data.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ConfluentResourceResponseAttributes'\n        id:\n          description: The ID associated with the Confluent resource.\n          example: resource_id_abc123\n          type: string\n        type:\n          $ref: '#/components/schemas/ConfluentResourceType'\n      required:\n      - attributes\n      - type\n      - id\n      type: object\n    ConfluentResourceType:\n      default: confluent-cloud-resources\n      description: The JSON:API type for this request.\n      enum:\n      - confluent-cloud-resources\n      example: confluent-cloud-resources\n      type: string\n      x-enum-varnames:\n      - CONFLUENT_CLOUD_RESOURCES\n    ConfluentResourcesResponse:\n      description: Response schema when interacting with a list of Confluent resources.\n      properties:\n        data:\n          description: The JSON:API data attribute.\n          items:\n            $ref: '#/components/schemas/ConfluentResourceResponseData'\n          type: array\n      type: object\n    ContentEncoding:\n      description: HTTP header used to compress the media-type.\n      enum:\n      - identity\n      - gzip\n      - deflate\n      type: string\n      x-enum-varnames:\n      - IDENTITY\n      - GZIP\n      - DEFLATE\n    CostByOrg:\n      description: Cost data.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/CostByOrgAttributes'\n        id:\n          description: Unique ID of the response.\n          type: string\n        type:\n          $ref: '#/components/schemas/CostByOrgType'\n      type: object\n    CostByOrgAttributes:\n      description: Cost attributes data.\n      properties:\n        charges:\n          description: List of charges data reported for the requested month.\n          items:\n            $ref: '#/components/schemas/ChargebackBreakdown'\n          type: array\n        date:\n          description: The month requested.\n          format: date-time\n          type: string\n        org_name:\n          description: The organization name.\n          type: string\n        public_id:\n          description: The organization public ID.\n          type: string\n        total_cost:\n          description: The total cost of products for the month.\n          format: double\n          type: number\n      type: object\n    CostByOrgResponse:\n      description: Chargeback Summary response.\n      properties:\n        data:\n          description: Response containing Chargeback Summary.\n          items:\n            $ref: '#/components/schemas/CostByOrg'\n          type: array\n      type: object\n    CostByOrgType:\n      default: cost_by_org\n      description: Type of cost data.\n      enum:\n      - cost_by_org\n      example: cost_by_org\n      type: string\n      x-enum-varnames:\n      - COST_BY_ORG\n    Creator:\n      description: Creator of the object.\n      properties:\n        email:\n          description: Email of the creator.\n          type: string\n        handle:\n          description: Handle of the creator.\n          type: string\n        name:\n          description: Name of the creator.\n          type: string\n      type: object\n    DashboardListAddItemsRequest:\n      description: Request containing a list of dashboards to add.\n      properties:\n        dashboards:\n          description: List of dashboards to add the dashboard list.\n          items:\n            $ref: '#/components/schemas/DashboardListItemRequest'\n          type: array\n      type: object\n    DashboardListAddItemsResponse:\n      description: Response containing a list of added dashboards.\n      properties:\n        added_dashboards_to_list:\n          description: List of dashboards added to the dashboard list.\n          items:\n            $ref: '#/components/schemas/DashboardListItemResponse'\n          type: array\n      type: object\n    DashboardListDeleteItemsRequest:\n      description: Request containing a list of dashboards to delete.\n      properties:\n        dashboards:\n          description: List of dashboards to delete from the dashboard list.\n          items:\n            $ref: '#/components/schemas/DashboardListItemRequest'\n          type: array\n      type: object\n    DashboardListDeleteItemsResponse:\n      description: Response containing a list of deleted dashboards.\n      properties:\n        deleted_dashboards_from_list:\n          description: List of dashboards deleted from the dashboard list.\n          items:\n            $ref: '#/components/schemas/DashboardListItemResponse'\n          type: array\n      type: object\n    DashboardListItem:\n      description: A dashboard within a list.\n      properties:\n        author:\n          $ref: '#/components/schemas/Creator'\n        created:\n          description: Date of creation of the dashboard.\n          format: date-time\n          readOnly: true\n          type: string\n        icon:\n          description: URL to the icon of the dashboard.\n          readOnly: true\n          type: string\n        id:\n          description: ID of the dashboard.\n          example: q5j-nti-fv6\n          type: string\n        is_favorite:\n          description: Whether or not the dashboard is in the favorites.\n          readOnly: true\n          type: boolean\n        is_read_only:\n          description: Whether or not the dashboard is read only.\n          readOnly: true\n          type: boolean\n        is_shared:\n          description: Whether the dashboard is publicly shared or not.\n          readOnly: true\n          type: boolean\n        modified:\n          description: Date of last edition of the dashboard.\n          format: date-time\n          readOnly: true\n          type: string\n        popularity:\n          description: Popularity of the dashboard.\n          format: int32\n          maximum: 5\n          readOnly: true\n          type: integer\n        title:\n          description: Title of the dashboard.\n          readOnly: true\n          type: string\n        type:\n          $ref: '#/components/schemas/DashboardType'\n        url:\n          description: URL path to the dashboard.\n          readOnly: true\n          type: string\n      required:\n      - type\n      - id\n      type: object\n    DashboardListItemRequest:\n      description: A dashboard within a list.\n      properties:\n        id:\n          description: ID of the dashboard.\n          example: q5j-nti-fv6\n          type: string\n        type:\n          $ref: '#/components/schemas/DashboardType'\n      required:\n      - type\n      - id\n      type: object\n    DashboardListItemResponse:\n      description: A dashboard within a list.\n      properties:\n        id:\n          description: ID of the dashboard.\n          example: q5j-nti-fv6\n          readOnly: true\n          type: string\n        type:\n          $ref: '#/components/schemas/DashboardType'\n      required:\n      - type\n      - id\n      type: object\n    DashboardListItems:\n      description: Dashboards within a list.\n      properties:\n        dashboards:\n          description: List of dashboards in the dashboard list.\n          example: []\n          items:\n            $ref: '#/components/schemas/DashboardListItem'\n          type: array\n        total:\n          description: Number of dashboards in the dashboard list.\n          format: int64\n          readOnly: true\n          type: integer\n      required:\n      - dashboards\n      type: object\n    DashboardListUpdateItemsRequest:\n      description: Request containing the list of dashboards to update to.\n      properties:\n        dashboards:\n          description: List of dashboards to update the dashboard list to.\n          items:\n            $ref: '#/components/schemas/DashboardListItemRequest'\n          type: array\n      type: object\n    DashboardListUpdateItemsResponse:\n      description: Response containing a list of updated dashboards.\n      properties:\n        dashboards:\n          description: List of dashboards in the dashboard list.\n          items:\n            $ref: '#/components/schemas/DashboardListItemResponse'\n          type: array\n      type: object\n    DashboardType:\n      description: The type of the dashboard.\n      enum:\n      - custom_timeboard\n      - custom_screenboard\n      - integration_screenboard\n      - integration_timeboard\n      - host_timeboard\n      example: host_timeboard\n      type: string\n      x-enum-varnames:\n      - CUSTOM_TIMEBOARD\n      - CUSTOM_SCREENBOARD\n      - INTEGRATION_SCREENBOARD\n      - INTEGRATION_TIMEBOARD\n      - HOST_TIMEBOARD\n    Event:\n      description: The metadata associated with a request.\n      properties:\n        id:\n          description: Event ID.\n          example: '6509751066204996294'\n          type: string\n        name:\n          description: The event name.\n          type: string\n        source_id:\n          description: Event source ID.\n          example: 36\n          format: int64\n          type: integer\n        type:\n          description: Event type.\n          example: error_tracking_alert\n          type: string\n      type: object\n    EventAttributes:\n      description: Object description of attributes from your event.\n      properties:\n        aggregation_key:\n          description: Aggregation key of the event.\n          type: string\n        date_happened:\n          description: 'POSIX timestamp of the event. Must be sent as an integer (no\n            quotation marks).\n\n            Limited to events no older than 18 hours.'\n          format: int64\n          type: integer\n        device_name:\n          description: A device name.\n          type: string\n        duration:\n          description: The duration between the triggering of the event and its recovery\n            in nanoseconds.\n          format: int64\n          type: integer\n        event_object:\n          description: The event title.\n          example: Did you hear the news today?\n          type: string\n        evt:\n          $ref: '#/components/schemas/Event'\n        hostname:\n          description: 'Host name to associate with the event.\n\n            Any tags associated with the host are also applied to this event.'\n          type: string\n        monitor:\n          $ref: '#/components/schemas/MonitorType'\n        monitor_groups:\n          description: List of groups referred to in the event.\n          items:\n            description: Group referred to in the event.\n            type: string\n          nullable: true\n          type: array\n        monitor_id:\n          description: ID of the monitor that triggered the event. When an event isn't\n            related to a monitor, this field is empty.\n          format: int64\n          nullable: true\n          type: integer\n        priority:\n          $ref: '#/components/schemas/EventPriority'\n        related_event_id:\n          description: Related event ID.\n          format: int64\n          type: integer\n        service:\n          description: Service that triggered the event.\n          example: datadog-api\n          type: string\n        source_type_name:\n          description: 'The type of event being posted.\n\n            For example, `nagios`, `hudson`, `jenkins`, `my_apps`, `chef`, `puppet`,\n            `git` or `bitbucket`.\n\n            The list of standard source attribute values is [available here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).'\n          type: string\n        sourcecategory:\n          description: Identifier for the source of the event, such as a monitor alert,\n            an externally-submitted event, or an integration.\n          type: string\n        status:\n          $ref: '#/components/schemas/EventStatusType'\n        tags:\n          description: A list of tags to apply to the event.\n          example:\n          - environment:test\n          items:\n            description: A tag.\n            type: string\n          type: array\n        timestamp:\n          description: POSIX timestamp of your event in milliseconds.\n          example: 1652274265000\n          format: int64\n          type: integer\n        title:\n          description: The event title.\n          example: Oh boy!\n          type: string\n      type: object\n    EventPriority:\n      description: The priority of the event's monitor. For example, `normal` or `low`.\n      enum:\n      - normal\n      - low\n      example: normal\n      nullable: true\n      type: string\n      x-enum-varnames:\n      - NORMAL\n      - LOW\n    EventResponse:\n      description: The object description of an event after being processed and stored\n        by Datadog.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/EventResponseAttributes'\n        id:\n          description: the unique ID of the event.\n          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\n          type: string\n        type:\n          $ref: '#/components/schemas/EventType'\n      type: object\n    EventResponseAttributes:\n      description: The object description of an event response attribute.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/EventAttributes'\n        tags:\n          description: An array of tags associated with the event.\n          example:\n          - team:A\n          items:\n            description: The tag associated with the event.\n            type: string\n          type: array\n        timestamp:\n          description: The timestamp of the event.\n          example: '2019-01-02T09:42:36.320Z'\n          format: date-time\n          type: string\n      type: object\n    EventStatusType:\n      description: 'If an alert event is enabled, its status is one of the following:\n\n        `failure`, `error`, `warning`, `info`, `success`, `user_update`,\n\n        `recommendation`, or `snapshot`.'\n      enum:\n      - failure\n      - error\n      - warning\n      - info\n      - success\n      - user_update\n      - recommendation\n      - snapshot\n      example: info\n      type: string\n      x-enum-varnames:\n      - FAILURE\n      - ERROR\n      - WARNING\n      - INFO\n      - SUCCESS\n      - USER_UPDATE\n      - RECOMMENDATION\n      - SNAPSHOT\n    EventType:\n      default: event\n      description: Type of the event.\n      enum:\n      - event\n      example: event\n      type: string\n      x-enum-varnames:\n      - EVENT\n    EventsAggregation:\n      default: count\n      description: The type of aggregation that can be performed on events-based queries.\n      enum:\n      - count\n      - cardinality\n      - pc75\n      - pc90\n      - pc95\n      - pc98\n      - pc99\n      - sum\n      - min\n      - max\n      - avg\n      example: count\n      type: string\n      x-enum-varnames:\n      - COUNT\n      - CARDINALITY\n      - PC75\n      - PC90\n      - PC95\n      - PC98\n      - PC99\n      - SUM\n      - MIN\n      - MAX\n      - AVG\n    EventsCompute:\n      description: The instructions for what to compute for this query.\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/EventsAggregation'\n        interval:\n          description: Interval for compute in milliseconds.\n          example: 60000\n          format: int64\n          type: integer\n        metric:\n          description: The \"measure\" attribute on which to perform the computation.\n          type: string\n      required:\n      - aggregation\n      type: object\n    EventsDataSource:\n      default: logs\n      description: A data source that is powered by the Events Platform.\n      enum:\n      - logs\n      example: logs\n      type: string\n      x-enum-varnames:\n      - LOGS\n    EventsGroupBy:\n      description: A dimension on which to split a query's results.\n      properties:\n        facet:\n          description: The facet by which to split groups.\n          example: '@error.type'\n          type: string\n        limit:\n          description: The maximum number of groups to return.\n          example: 10\n          format: int32\n          maximum: 2147483647\n          type: integer\n        sort:\n          $ref: '#/components/schemas/EventsGroupBySort'\n      required:\n      - facet\n      type: object\n    EventsGroupBySort:\n      description: The dimension by which to sort a query's results.\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/EventsAggregation'\n        metric:\n          description: Metric whose calculated value should be used to define the\n            sort order of a query's results.\n          example: '@duration'\n          type: string\n        order:\n          $ref: '#/components/schemas/QuerySortOrder'\n        type:\n          $ref: '#/components/schemas/EventsSortType'\n      required:\n      - aggregation\n      type: object\n    EventsListRequest:\n      description: The object sent with the request to retrieve a list of events from\n        your organization.\n      properties:\n        filter:\n          $ref: '#/components/schemas/EventsQueryFilter'\n        options:\n          $ref: '#/components/schemas/EventsQueryOptions'\n        page:\n          $ref: '#/components/schemas/EventsRequestPage'\n        sort:\n          $ref: '#/components/schemas/EventsSort'\n      type: object\n    EventsListResponse:\n      description: The response object with all events matching the request and pagination\n        information.\n      properties:\n        data:\n          description: An array of events matching the request.\n          items:\n            $ref: '#/components/schemas/EventResponse'\n          type: array\n        links:\n          $ref: '#/components/schemas/EventsListResponseLinks'\n        meta:\n          $ref: '#/components/schemas/EventsResponseMetadata'\n      type: object\n    EventsListResponseLinks:\n      description: Links attributes.\n      properties:\n        next:\n          description: 'Link for the next set of results. Note that the request can\n            also be made using the\n\n            POST endpoint.'\n          example: https://app.datadoghq.com/api/v2/events?filter[query]=foo\u0026page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    EventsQueryFilter:\n      description: The search and filter query settings.\n      properties:\n        from:\n          default: now-15m\n          description: The minimum time for the requested events. Supports date math\n            and regular timestamps in milliseconds.\n          example: now-15m\n          type: string\n        query:\n          default: '*'\n          description: The search query following the event search syntax.\n          example: service:web* AND @http.status_code:[200 TO 299]\n          type: string\n        to:\n          default: now\n          description: The maximum time for the requested events. Supports date math\n            and regular timestamps in milliseconds.\n          example: now\n          type: string\n      type: object\n    EventsQueryGroupBys:\n      description: The list of facets on which to split results.\n      items:\n        $ref: '#/components/schemas/EventsGroupBy'\n      type: array\n    EventsQueryOptions:\n      description: 'The global query options that are used. Either provide a timezone\n        or a time offset but not both,\n\n        otherwise the query fails.'\n      properties:\n        timeOffset:\n          description: The time offset to apply to the query in seconds.\n          format: int64\n          type: integer\n        timezone:\n          default: UTC\n          description: The timezone can be specified as GMT, UTC, an offset from UTC\n            (like UTC+1), or as a Timezone Database identifier (like America/New_York).\n          example: GMT\n          type: string\n      type: object\n    EventsRequestPage:\n      description: Pagination settings.\n      properties:\n        cursor:\n          description: The returned paging point to use to get the next results.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n        limit:\n          default: 10\n          description: The maximum number of logs in the response.\n          example: 25\n          format: int32\n          maximum: 1000\n          type: integer\n      type: object\n    EventsResponseMetadata:\n      description: The metadata associated with a request.\n      properties:\n        elapsed:\n          description: The time elapsed in milliseconds.\n          example: 132\n          format: int64\n          type: integer\n        page:\n          $ref: '#/components/schemas/EventsResponseMetadataPage'\n        request_id:\n          description: The identifier of the request.\n          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR\n          type: string\n        warnings:\n          description: 'A list of warnings (non-fatal errors) encountered. Partial\n            results might be returned if\n\n            warnings are present in the response.'\n          items:\n            $ref: '#/components/schemas/EventsWarning'\n          type: array\n      type: object\n    EventsResponseMetadataPage:\n      description: Pagination attributes.\n      properties:\n        after:\n          description: 'The cursor to use to get the next results, if any. To make\n            the next request, use the same\n\n            parameters with the addition of the `page[cursor]`.'\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    EventsScalarQuery:\n      description: An individual scalar events query.\n      properties:\n        compute:\n          $ref: '#/components/schemas/EventsCompute'\n        data_source:\n          $ref: '#/components/schemas/EventsDataSource'\n        group_by:\n          $ref: '#/components/schemas/EventsQueryGroupBys'\n        indexes:\n          description: The indexes in which to search.\n          items:\n            description: The unique index name.\n            example: main\n            type: string\n          type: array\n        name:\n          description: The variable name for use in formulas.\n          type: string\n        search:\n          $ref: '#/components/schemas/EventsSearch'\n      required:\n      - data_source\n      - compute\n      type: object\n    EventsSearch:\n      description: Configuration of the search/filter for an events query.\n      properties:\n        query:\n          description: The search/filter string for an events query.\n          example: status:warn service:foo\n          type: string\n      type: object\n    EventsSort:\n      description: The sort parameters when querying events.\n      enum:\n      - timestamp\n      - -timestamp\n      type: string\n      x-enum-varnames:\n      - TIMESTAMP_ASCENDING\n      - TIMESTAMP_DESCENDING\n    EventsSortType:\n      description: The type of sort to use on the calculated value.\n      enum:\n      - alphabetical\n      - measure\n      type: string\n      x-enum-varnames:\n      - ALPHABETICAL\n      - MEASURE\n    EventsTimeseriesQuery:\n      description: An individual timeseries events query.\n      properties:\n        compute:\n          $ref: '#/components/schemas/EventsCompute'\n        data_source:\n          $ref: '#/components/schemas/EventsDataSource'\n        group_by:\n          $ref: '#/components/schemas/EventsQueryGroupBys'\n        indexes:\n          description: The indexes in which to search.\n          items:\n            description: The unique index name.\n            example: main\n            type: string\n          type: array\n        name:\n          description: The variable name for use in formulas.\n          type: string\n        search:\n          $ref: '#/components/schemas/EventsSearch'\n      required:\n      - data_source\n      - compute\n      type: object\n    EventsWarning:\n      description: A warning message indicating something is wrong with the query.\n      properties:\n        code:\n          description: A unique code for this type of warning.\n          example: unknown_index\n          type: string\n        detail:\n          description: A detailed explanation of this specific warning.\n          example: 'indexes: foo, bar'\n          type: string\n        title:\n          description: A short human-readable summary of the warning.\n          example: One or several indexes are missing or invalid. Results hold data\n            from the other indexes.\n          type: string\n      type: object\n    FormulaLimit:\n      description: Message for specifying limits to the number of values returned\n        by a query.\n      properties:\n        count:\n          description: The number of results to which to limit.\n          example: 10\n          format: int32\n          maximum: 2147483647\n          type: integer\n        order:\n          $ref: '#/components/schemas/QuerySortOrder'\n      type: object\n    FullAPIKey:\n      description: Datadog API key.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/FullAPIKeyAttributes'\n        id:\n          description: ID of the API key.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/APIKeyRelationships'\n        type:\n          $ref: '#/components/schemas/APIKeysType'\n      type: object\n    FullAPIKeyAttributes:\n      description: Attributes of a full API key.\n      properties:\n        created_at:\n          description: Creation date of the API key.\n          example: '2020-11-23T10:00:00.000Z'\n          readOnly: true\n          type: string\n        key:\n          description: The API key.\n          readOnly: true\n          type: string\n        last4:\n          description: The last four characters of the API key.\n          example: abcd\n          maxLength: 4\n          minLength: 4\n          readOnly: true\n          type: string\n        modified_at:\n          description: Date the API key was last modified.\n          example: '2020-11-23T10:00:00.000Z'\n          readOnly: true\n          type: string\n        name:\n          description: Name of the API key.\n          example: API Key for submitting metrics\n          type: string\n      type: object\n    FullApplicationKey:\n      description: Datadog application key.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/FullApplicationKeyAttributes'\n        id:\n          description: ID of the application key.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/ApplicationKeyRelationships'\n        type:\n          $ref: '#/components/schemas/ApplicationKeysType'\n      type: object\n    FullApplicationKeyAttributes:\n      description: Attributes of a full application key.\n      properties:\n        created_at:\n          description: Creation date of the application key.\n          example: '2020-11-23T10:00:00.000Z'\n          readOnly: true\n          type: string\n        key:\n          description: The application key.\n          readOnly: true\n          type: string\n        last4:\n          description: The last four characters of the application key.\n          example: abcd\n          maxLength: 4\n          minLength: 4\n          readOnly: true\n          type: string\n        name:\n          description: Name of the application key.\n          example: Application Key for managing dashboards\n          type: string\n        scopes:\n          description: Array of scopes to grant the application key. This feature\n            is in private beta, please contact Datadog support to enable scopes for\n            your application keys.\n          example:\n          - dashboards_read\n          - dashboards_write\n          - dashboards_public_share\n          items:\n            description: Name of scope.\n            type: string\n          nullable: true\n          type: array\n      type: object\n    GroupTags:\n      description: List of tags that apply to a single response value.\n      items:\n        description: A single tag that applies to a single response value.\n        type: string\n      type: array\n    HTTPLog:\n      description: Structured log message.\n      items:\n        $ref: '#/components/schemas/HTTPLogItem'\n      type: array\n    HTTPLogError:\n      description: List of errors.\n      properties:\n        detail:\n          description: Error message.\n          example: Malformed payload\n          type: string\n        status:\n          description: Error code.\n          example: '400'\n          type: string\n        title:\n          description: Error title.\n          example: Bad Request\n          type: string\n      type: object\n    HTTPLogErrors:\n      description: Invalid query performed.\n      properties:\n        errors:\n          description: Structured errors.\n          items:\n            $ref: '#/components/schemas/HTTPLogError'\n          type: array\n      type: object\n    HTTPLogItem:\n      additionalProperties:\n        description: Additional log attributes.\n        type: string\n      description: Logs that are sent over HTTP.\n      properties:\n        ddsource:\n          description: 'The integration name associated with your log: the technology\n            from which the log originated.\n\n            When it matches an integration name, Datadog automatically installs the\n            corresponding parsers and facets.\n\n            See [reserved attributes](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).'\n          example: nginx\n          type: string\n        ddtags:\n          description: Tags associated with your logs.\n          example: env:staging,version:5.1\n          type: string\n        hostname:\n          description: The name of the originating host of the log.\n          example: i-012345678\n          type: string\n        message:\n          description: 'The message [reserved attribute](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes)\n\n            of your log. By default, Datadog ingests the value of the message attribute\n            as the body of the log entry.\n\n            That value is then highlighted and displayed in the Logstream, where it\n            is indexed for full text search.'\n          example: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World\n          type: string\n        service:\n          description: 'The name of the application or service generating the log\n            events.\n\n            It is used to switch from Logs to APM, so make sure you define the same\n            value when you use both products.\n\n            See [reserved attributes](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).'\n          example: payment\n          type: string\n      required:\n      - message\n      type: object\n    HourlyUsage:\n      description: Hourly usage for a product family for an org.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/HourlyUsageAttributes'\n        id:\n          description: Unique ID of the response.\n          type: string\n        type:\n          $ref: '#/components/schemas/UsageTimeSeriesType'\n      type: object\n    HourlyUsageAttributes:\n      description: Attributes of hourly usage for a product family for an org for\n        a time period.\n      properties:\n        measurements:\n          description: List of the measured usage values for the product family for\n            the org for the time period.\n          items:\n            $ref: '#/components/schemas/HourlyUsageMeasurement'\n          type: array\n        org_name:\n          description: The organization name.\n          type: string\n        product_family:\n          description: The product for which usage is being reported.\n          type: string\n        public_id:\n          description: The organization public ID.\n          type: string\n        region:\n          description: The region of the Datadog instance that the organization belongs\n            to.\n          type: string\n        timestamp:\n          description: Datetime in ISO-8601 format, UTC. The hour for the usage.\n          format: date-time\n          type: string\n      type: object\n    HourlyUsageMeasurement:\n      description: Usage amount for a given usage type.\n      properties:\n        usage_type:\n          description: Type of usage.\n          type: string\n        value:\n          description: Contains the number measured for the given usage_type during\n            the hour.\n          format: int64\n          nullable: true\n          type: integer\n      type: object\n    HourlyUsageMetadata:\n      description: The object containing document metadata.\n      properties:\n        pagination:\n          $ref: '#/components/schemas/HourlyUsagePagination'\n      type: object\n    HourlyUsagePagination:\n      description: The metadata for the current pagination.\n      properties:\n        next_record_id:\n          description: The cursor to get the next results (if any). To make the next\n            request, use the same parameters and add `next_record_id`.\n          nullable: true\n          type: string\n      type: object\n    HourlyUsageResponse:\n      description: Hourly usage response.\n      properties:\n        data:\n          description: Response containing hourly usage.\n          items:\n            $ref: '#/components/schemas/HourlyUsage'\n          type: array\n        meta:\n          $ref: '#/components/schemas/HourlyUsageMetadata'\n      type: object\n    HourlyUsageType:\n      description: Usage type that is being measured.\n      enum:\n      - app_sec_host_count\n      - observability_pipelines_bytes_processed\n      - lambda_traced_invocations_count\n      example: observability_pipelines_bytes_processed\n      type: string\n      x-enum-varnames:\n      - APP_SEC_HOST_COUNT\n      - OBSERVABILITY_PIPELINES_BYTES_PROCESSSED\n      - LAMBDA_TRACED_INVOCATIONS_COUNT\n    IdPMetadataFormData:\n      description: The form data submitted to upload IdP metadata\n      properties:\n        idp_file:\n          description: The IdP metadata XML file\n          format: binary\n          type: string\n          x-mimetype: application/xml\n      type: object\n    IncidentAttachmentAttachmentType:\n      description: The type of the incident attachment attributes.\n      enum:\n      - link\n      - postmortem\n      example: link\n      type: string\n      x-enum-varnames:\n      - LINK\n      - POSTMORTEM\n    IncidentAttachmentAttributes:\n      description: The attributes object for an attachment.\n      oneOf:\n      - $ref: '#/components/schemas/IncidentAttachmentPostmortemAttributes'\n      - $ref: '#/components/schemas/IncidentAttachmentLinkAttributes'\n      type: object\n    IncidentAttachmentData:\n      description: A single incident attachment.\n      example:\n        attributes:\n          attachment:\n            documentUrl: ''\n            title: Postmortem IR-123\n          attachment_type: postmortem\n        id: 00000000-abcd-0002-0000-000000000000\n        relationships:\n          last_modified_by_user:\n            data:\n              id: 00000000-0000-0000-cccc-000000000000\n              type: users\n        type: incident_attachments\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentAttachmentAttributes'\n        id:\n          description: A unique identifier that represents the incident attachment.\n          example: 00000000-abcd-0001-0000-000000000000\n          type: string\n        relationships:\n          $ref: '#/components/schemas/IncidentAttachmentRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentAttachmentType'\n      required:\n      - type\n      - attributes\n      - id\n      - relationships\n      type: object\n    IncidentAttachmentLinkAttachmentType:\n      default: link\n      description: The type of link attachment attributes.\n      enum:\n      - link\n      example: link\n      type: string\n      x-enum-varnames:\n      - LINK\n    IncidentAttachmentLinkAttributes:\n      description: The attributes object for a link attachment.\n      properties:\n        attachment:\n          $ref: '#/components/schemas/IncidentAttachmentLinkAttributesAttachmentObject'\n        attachment_type:\n          $ref: '#/components/schemas/IncidentAttachmentLinkAttachmentType'\n      required:\n      - attachment_type\n      - attachment\n      type: object\n    IncidentAttachmentLinkAttributesAttachmentObject:\n      description: The link attachment.\n      properties:\n        documentUrl:\n          description: The URL of this link attachment.\n          example: https://www.example.com/webstore-failure-runbook\n          type: string\n        title:\n          description: The title of this link attachment.\n          example: Runbook for webstore service failures\n          type: string\n      required:\n      - documentUrl\n      - title\n      type: object\n    IncidentAttachmentPostmortemAttachmentType:\n      default: postmortem\n      description: The type of postmortem attachment attributes.\n      enum:\n      - postmortem\n      example: postmortem\n      type: string\n      x-enum-varnames:\n      - POSTMORTEM\n    IncidentAttachmentPostmortemAttributes:\n      description: The attributes object for a postmortem attachment.\n      properties:\n        attachment:\n          $ref: '#/components/schemas/IncidentAttachmentsPostmortemAttributesAttachmentObject'\n        attachment_type:\n          $ref: '#/components/schemas/IncidentAttachmentPostmortemAttachmentType'\n      required:\n      - attachment_type\n      - attachment\n      type: object\n    IncidentAttachmentRelatedObject:\n      description: The object related to an incident attachment.\n      enum:\n      - users\n      type: string\n      x-enum-varnames:\n      - USERS\n    IncidentAttachmentRelationships:\n      description: The incident attachment's relationships.\n      properties:\n        last_modified_by_user:\n          $ref: '#/components/schemas/RelationshipToUser'\n      type: object\n    IncidentAttachmentType:\n      default: incident_attachments\n      description: The incident attachment resource type.\n      enum:\n      - incident_attachments\n      example: incident_attachments\n      type: string\n      x-enum-varnames:\n      - INCIDENT_ATTACHMENTS\n    IncidentAttachmentUpdateAttributes:\n      description: Incident attachment attributes.\n      oneOf:\n      - $ref: '#/components/schemas/IncidentAttachmentPostmortemAttributes'\n      - $ref: '#/components/schemas/IncidentAttachmentLinkAttributes'\n      type: object\n    IncidentAttachmentUpdateData:\n      description: A single incident attachment.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentAttachmentUpdateAttributes'\n        id:\n          description: A unique identifier that represents the incident attachment.\n          example: 00000000-abcd-0001-0000-000000000000\n          type: string\n        type:\n          $ref: '#/components/schemas/IncidentAttachmentType'\n      required:\n      - type\n      type: object\n    IncidentAttachmentUpdateRequest:\n      description: The update request for an incident's attachments.\n      properties:\n        data:\n          description: 'An array of incident attachments. An attachment object without\n            an \"id\" key indicates that you want to\n\n            create that attachment. An attachment object without an \"attributes\" key\n            indicates that you want to\n\n            delete that attachment. An attachment object with both the \"id\" key and\n            a populated \"attributes\" object\n\n            indicates that you want to update that attachment.'\n          example:\n          - attributes:\n              attachment:\n                documentUrl: https://app.datadoghq.com/notebook/123\n                title: Postmortem IR-123\n              attachment_type: postmortem\n            id: 00000000-abcd-0002-0000-000000000000\n            type: incident_attachments\n          - attributes:\n              attachment:\n                documentUrl: https://www.example.com/webstore-failure-runbook\n                title: Runbook for webstore service failures\n              attachment_type: link\n            type: incident_attachments\n          - id: 00000000-abcd-0003-0000-000000000000\n            type: incident_attachments\n          items:\n            $ref: '#/components/schemas/IncidentAttachmentUpdateData'\n          type: array\n      required:\n      - data\n      type: object\n    IncidentAttachmentUpdateResponse:\n      description: The response object containing the created or updated incident\n        attachments.\n      properties:\n        data:\n          description: 'An array of incident attachments. Only the attachments that\n            were created or updated by the request are\n\n            returned.'\n          items:\n            $ref: '#/components/schemas/IncidentAttachmentData'\n          type: array\n        included:\n          description: Included related resources that the user requested.\n          items:\n            $ref: '#/components/schemas/IncidentAttachmentsResponseIncludedItem'\n          type: array\n      required:\n      - data\n      type: object\n    IncidentAttachmentsPostmortemAttributesAttachmentObject:\n      description: The postmortem attachment.\n      properties:\n        documentUrl:\n          description: The URL of this notebook attachment.\n          example: https://app.datadoghq.com/notebook/123\n          type: string\n        title:\n          description: The title of this postmortem attachment.\n          example: Postmortem IR-123\n          type: string\n      required:\n      - documentUrl\n      - title\n      type: object\n    IncidentAttachmentsResponse:\n      description: The response object containing an incident's attachments.\n      properties:\n        data:\n          description: An array of incident attachments.\n          items:\n            $ref: '#/components/schemas/IncidentAttachmentData'\n          type: array\n        included:\n          description: Included related resources that the user requested.\n          items:\n            $ref: '#/components/schemas/IncidentAttachmentsResponseIncludedItem'\n          type: array\n      required:\n      - data\n      type: object\n    IncidentAttachmentsResponseIncludedItem:\n      description: An object related to an attachment that is included in the response.\n      oneOf:\n      - $ref: '#/components/schemas/User'\n      type: object\n    IncidentCreateAttributes:\n      description: The incident's attributes for a create request.\n      properties:\n        customer_impacted:\n          description: A flag indicating whether the incident caused customer impact.\n          example: false\n          type: boolean\n        fields:\n          additionalProperties:\n            $ref: '#/components/schemas/IncidentFieldAttributes'\n          description: A condensed view of the user-defined fields for which to create\n            initial selections.\n          example:\n            severity:\n              type: dropdown\n              value: SEV-5\n          type: object\n        initial_cells:\n          description: An array of initial timeline cells to be placed at the beginning\n            of the incident timeline.\n          items:\n            $ref: '#/components/schemas/IncidentTimelineCellCreateAttributes'\n          type: array\n        notification_handles:\n          description: Notification handles that will be notified of the incident\n            at creation.\n          items:\n            $ref: '#/components/schemas/IncidentNotificationHandle'\n          type: array\n        title:\n          description: The title of the incident, which summarizes what happened.\n          example: A test incident title\n          type: string\n      required:\n      - title\n      - customer_impacted\n      type: object\n    IncidentCreateData:\n      description: Incident data for a create request.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentCreateAttributes'\n        relationships:\n          $ref: '#/components/schemas/IncidentCreateRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentType'\n      required:\n      - type\n      - attributes\n      type: object\n    IncidentCreateRelationships:\n      description: The relationships the incident will have with other resources once\n        created.\n      properties:\n        commander_user:\n          $ref: '#/components/schemas/NullableRelationshipToUser'\n      required:\n      - commander_user\n      type: object\n    IncidentCreateRequest:\n      description: Create request for an incident.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentCreateData'\n      required:\n      - data\n      type: object\n    IncidentFieldAttributes:\n      description: Dynamic fields for which selections can be made, with field names\n        as keys.\n      oneOf:\n      - $ref: '#/components/schemas/IncidentFieldAttributesSingleValue'\n      - $ref: '#/components/schemas/IncidentFieldAttributesMultipleValue'\n      required:\n      - type\n      type: object\n    IncidentFieldAttributesMultipleValue:\n      description: A field with potentially multiple values selected.\n      properties:\n        type:\n          $ref: '#/components/schemas/IncidentFieldAttributesValueType'\n        value:\n          description: The multiple values selected for this field.\n          example:\n          - '1.0'\n          - '1.1'\n          items:\n            description: A value which has been selected for the parent field.\n            example: '1.1'\n            type: string\n          nullable: true\n          type: array\n      type: object\n    IncidentFieldAttributesSingleValue:\n      description: A field with a single value selected.\n      properties:\n        type:\n          $ref: '#/components/schemas/IncidentFieldAttributesSingleValueType'\n        value:\n          description: The single value selected for this field.\n          example: SEV-1\n          nullable: true\n          type: string\n      type: object\n    IncidentFieldAttributesSingleValueType:\n      default: dropdown\n      description: Type of the single value field definitions.\n      enum:\n      - dropdown\n      - textbox\n      example: dropdown\n      type: string\n      x-enum-varnames:\n      - DROPDOWN\n      - TEXTBOX\n    IncidentFieldAttributesValueType:\n      default: multiselect\n      description: Type of the multiple value field definitions.\n      enum:\n      - multiselect\n      - textarray\n      - metrictag\n      - autocomplete\n      example: multiselect\n      type: string\n      x-enum-varnames:\n      - MULTISELECT\n      - TEXTARRAY\n      - METRICTAG\n      - AUTOCOMPLETE\n    IncidentIntegrationMetadataType:\n      default: incident_integrations\n      description: Integration metadata resource type.\n      enum:\n      - incident_integrations\n      example: incident_integrations\n      type: string\n      x-enum-varnames:\n      - INCIDENT_INTEGRATIONS\n    IncidentNotificationHandle:\n      description: A notification handle that will be notified at incident creation.\n      properties:\n        display_name:\n          description: The name of the notified handle.\n          example: Jane Doe\n          type: string\n        handle:\n          description: The email address used for the notification.\n          example: '@test.user@test.com'\n          type: string\n      type: object\n    IncidentPostmortemType:\n      default: incident_postmortems\n      description: Incident postmortem resource type.\n      enum:\n      - incident_postmortems\n      example: incident_postmortems\n      type: string\n      x-enum-varnames:\n      - INCIDENT_POSTMORTEMS\n    IncidentRelatedObject:\n      description: Object related to an incident.\n      enum:\n      - users\n      - attachments\n      type: string\n      x-enum-varnames:\n      - USERS\n      - ATTACHMENTS\n    IncidentResponse:\n      description: Response with an incident.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentResponseData'\n        included:\n          description: Included related resources that the user requested.\n          items:\n            $ref: '#/components/schemas/IncidentResponseIncludedItem'\n          readOnly: true\n          type: array\n      required:\n      - data\n      type: object\n    IncidentResponseAttributes:\n      description: The incident's attributes from a response.\n      properties:\n        created:\n          description: Timestamp when the incident was created.\n          format: date-time\n          readOnly: true\n          type: string\n        customer_impact_duration:\n          description: 'Length of the incident''s customer impact in seconds.\n\n            Equals the difference between `customer_impact_start` and `customer_impact_end`.'\n          format: int64\n          readOnly: true\n          type: integer\n        customer_impact_end:\n          description: Timestamp when customers were no longer impacted by the incident.\n          format: date-time\n          nullable: true\n          type: string\n        customer_impact_scope:\n          description: A summary of the impact customers experienced during the incident.\n          example: An example customer impact scope\n          nullable: true\n          type: string\n        customer_impact_start:\n          description: Timestamp when customers began being impacted by the incident.\n          format: date-time\n          nullable: true\n          type: string\n        customer_impacted:\n          description: A flag indicating whether the incident caused customer impact.\n          example: false\n          type: boolean\n        detected:\n          description: Timestamp when the incident was detected.\n          format: date-time\n          nullable: true\n          type: string\n        fields:\n          additionalProperties:\n            $ref: '#/components/schemas/IncidentFieldAttributes'\n          description: A condensed view of the user-defined fields attached to incidents.\n          example:\n            severity:\n              type: dropdown\n              value: SEV-5\n          type: object\n        modified:\n          description: Timestamp when the incident was last modified.\n          format: date-time\n          readOnly: true\n          type: string\n        notification_handles:\n          description: Notification handles that will be notified of the incident\n            during update.\n          items:\n            $ref: '#/components/schemas/IncidentNotificationHandle'\n          nullable: true\n          type: array\n        public_id:\n          description: The monotonically increasing integer ID for the incident.\n          example: 1\n          format: int64\n          type: integer\n        resolved:\n          description: Timestamp when the incident's state was last changed from active\n            or stable to resolved or completed.\n          format: date-time\n          nullable: true\n          type: string\n        time_to_detect:\n          description: 'The amount of time in seconds to detect the incident.\n\n            Equals the difference between `customer_impact_start` and `detected`.'\n          format: int64\n          readOnly: true\n          type: integer\n        time_to_internal_response:\n          description: The amount of time in seconds to call incident after detection.\n            Equals the difference of `detected` and `created`.\n          format: int64\n          readOnly: true\n          type: integer\n        time_to_repair:\n          description: The amount of time in seconds to resolve customer impact after\n            detecting the issue. Equals the difference between `customer_impact_end`\n            and `detected`.\n          format: int64\n          readOnly: true\n          type: integer\n        time_to_resolve:\n          description: The amount of time in seconds to resolve the incident after\n            it was created. Equals the difference between `created` and `resolved`.\n          format: int64\n          readOnly: true\n          type: integer\n        title:\n          description: The title of the incident, which summarizes what happened.\n          example: A test incident title\n          type: string\n      required:\n      - title\n      type: object\n    IncidentResponseData:\n      description: Incident data from a response.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentResponseAttributes'\n        id:\n          description: The incident's ID.\n          example: 00000000-0000-0000-1234-000000000000\n          type: string\n        relationships:\n          $ref: '#/components/schemas/IncidentResponseRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentType'\n      required:\n      - id\n      - type\n      type: object\n    IncidentResponseIncludedItem:\n      description: An object related to an incident that is included in the response.\n      oneOf:\n      - $ref: '#/components/schemas/User'\n      - $ref: '#/components/schemas/IncidentAttachmentData'\n      type: object\n    IncidentResponseMeta:\n      description: The metadata object containing pagination metadata.\n      properties:\n        pagination:\n          $ref: '#/components/schemas/IncidentResponseMetaPagination'\n      readOnly: true\n      type: object\n    IncidentResponseMetaPagination:\n      description: Pagination properties.\n      properties:\n        next_offset:\n          description: The index of the first element in the next page of results.\n            Equal to page size added to the current offset.\n          example: 1000\n          format: int64\n          type: integer\n        offset:\n          description: The index of the first element in the results.\n          example: 10\n          format: int64\n          type: integer\n        size:\n          description: Maximum size of pages to return.\n          example: 1000\n          format: int64\n          type: integer\n      type: object\n    IncidentResponseRelationships:\n      description: The incident's relationships from a response.\n      properties:\n        attachments:\n          $ref: '#/components/schemas/RelationshipToIncidentAttachment'\n        commander_user:\n          $ref: '#/components/schemas/NullableRelationshipToUser'\n        created_by_user:\n          $ref: '#/components/schemas/RelationshipToUser'\n        integrations:\n          $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadatas'\n        last_modified_by_user:\n          $ref: '#/components/schemas/RelationshipToUser'\n      type: object\n    IncidentServiceCreateAttributes:\n      description: The incident service's attributes for a create request.\n      properties:\n        name:\n          description: Name of the incident service.\n          example: an example service name\n          type: string\n      required:\n      - name\n      type: object\n    IncidentServiceCreateData:\n      description: Incident Service payload for create requests.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentServiceCreateAttributes'\n        relationships:\n          $ref: '#/components/schemas/IncidentServiceRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentServiceType'\n      required:\n      - type\n      type: object\n    IncidentServiceCreateRequest:\n      description: Create request with an incident service payload.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentServiceCreateData'\n      required:\n      - data\n      type: object\n    IncidentServiceIncludedItems:\n      description: An object related to an incident service which is present in the\n        included payload.\n      oneOf:\n      - $ref: '#/components/schemas/User'\n      type: object\n    IncidentServiceRelationships:\n      description: The incident service's relationships.\n      properties:\n        created_by:\n          $ref: '#/components/schemas/RelationshipToUser'\n        last_modified_by:\n          $ref: '#/components/schemas/RelationshipToUser'\n      readOnly: true\n      type: object\n    IncidentServiceResponse:\n      description: Response with an incident service payload.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentServiceResponseData'\n        included:\n          description: Included objects from relationships.\n          items:\n            $ref: '#/components/schemas/IncidentServiceIncludedItems'\n          readOnly: true\n          type: array\n      required:\n      - data\n      type: object\n    IncidentServiceResponseAttributes:\n      description: The incident service's attributes from a response.\n      properties:\n        created:\n          description: Timestamp of when the incident service was created.\n          format: date-time\n          readOnly: true\n          type: string\n        modified:\n          description: Timestamp of when the incident service was modified.\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          description: Name of the incident service.\n          example: service name\n          type: string\n      type: object\n    IncidentServiceResponseData:\n      description: Incident Service data from responses.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentServiceResponseAttributes'\n        id:\n          description: The incident service's ID.\n          example: 00000000-0000-0000-0000-000000000000\n          type: string\n        relationships:\n          $ref: '#/components/schemas/IncidentServiceRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentServiceType'\n      required:\n      - id\n      - type\n      type: object\n    IncidentServiceType:\n      default: services\n      description: Incident service resource type.\n      enum:\n      - services\n      example: services\n      type: string\n      x-enum-varnames:\n      - SERVICES\n    IncidentServiceUpdateAttributes:\n      description: The incident service's attributes for an update request.\n      properties:\n        name:\n          description: Name of the incident service.\n          example: an example service name\n          type: string\n      required:\n      - name\n      type: object\n    IncidentServiceUpdateData:\n      description: Incident Service payload for update requests.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentServiceUpdateAttributes'\n        id:\n          description: The incident service's ID.\n          example: 00000000-0000-0000-0000-000000000000\n          type: string\n        relationships:\n          $ref: '#/components/schemas/IncidentServiceRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentServiceType'\n      required:\n      - type\n      type: object\n    IncidentServiceUpdateRequest:\n      description: Update request with an incident service payload.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentServiceUpdateData'\n      required:\n      - data\n      type: object\n    IncidentServicesResponse:\n      description: Response with a list of incident service payloads.\n      properties:\n        data:\n          description: An array of incident services.\n          example:\n          - id: 00000000-0000-0000-0000-000000000000\n            type: services\n          items:\n            $ref: '#/components/schemas/IncidentServiceResponseData'\n          type: array\n        included:\n          description: Included related resources which the user requested.\n          items:\n            $ref: '#/components/schemas/IncidentServiceIncludedItems'\n          readOnly: true\n          type: array\n        meta:\n          $ref: '#/components/schemas/IncidentResponseMeta'\n      required:\n      - data\n      type: object\n    IncidentTeamCreateAttributes:\n      description: The incident team's attributes for a create request.\n      properties:\n        name:\n          description: Name of the incident team.\n          example: team name\n          type: string\n      required:\n      - name\n      type: object\n    IncidentTeamCreateData:\n      description: Incident Team data for a create request.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentTeamCreateAttributes'\n        relationships:\n          $ref: '#/components/schemas/IncidentTeamRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentTeamType'\n      required:\n      - type\n      type: object\n    IncidentTeamCreateRequest:\n      description: Create request with an incident team payload.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentTeamCreateData'\n      required:\n      - data\n      type: object\n    IncidentTeamIncludedItems:\n      description: An object related to an incident team which is present in the included\n        payload.\n      oneOf:\n      - $ref: '#/components/schemas/User'\n      type: object\n    IncidentTeamRelationships:\n      description: The incident team's relationships.\n      properties:\n        created_by:\n          $ref: '#/components/schemas/RelationshipToUser'\n        last_modified_by:\n          $ref: '#/components/schemas/RelationshipToUser'\n      readOnly: true\n      type: object\n    IncidentTeamResponse:\n      description: Response with an incident team payload.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentTeamResponseData'\n        included:\n          description: Included objects from relationships.\n          items:\n            $ref: '#/components/schemas/IncidentTeamIncludedItems'\n          readOnly: true\n          type: array\n      required:\n      - data\n      type: object\n    IncidentTeamResponseAttributes:\n      description: The incident team's attributes from a response.\n      properties:\n        created:\n          description: Timestamp of when the incident team was created.\n          format: date-time\n          readOnly: true\n          type: string\n        modified:\n          description: Timestamp of when the incident team was modified.\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          description: Name of the incident team.\n          example: team name\n          type: string\n      type: object\n    IncidentTeamResponseData:\n      description: Incident Team data from a response.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentTeamResponseAttributes'\n        id:\n          description: The incident team's ID.\n          example: 00000000-7ea3-0000-000a-000000000000\n          type: string\n        relationships:\n          $ref: '#/components/schemas/IncidentTeamRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentTeamType'\n      type: object\n    IncidentTeamType:\n      default: teams\n      description: Incident Team resource type.\n      enum:\n      - teams\n      example: teams\n      type: string\n      x-enum-varnames:\n      - TEAMS\n    IncidentTeamUpdateAttributes:\n      description: The incident team's attributes for an update request.\n      properties:\n        name:\n          description: Name of the incident team.\n          example: team name\n          type: string\n      required:\n      - name\n      type: object\n    IncidentTeamUpdateData:\n      description: Incident Team data for an update request.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentTeamUpdateAttributes'\n        id:\n          description: The incident team's ID.\n          example: 00000000-7ea3-0000-0001-000000000000\n          type: string\n        relationships:\n          $ref: '#/components/schemas/IncidentTeamRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentTeamType'\n      required:\n      - type\n      type: object\n    IncidentTeamUpdateRequest:\n      description: Update request with an incident team payload.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentTeamUpdateData'\n      required:\n      - data\n      type: object\n    IncidentTeamsResponse:\n      description: Response with a list of incident team payloads.\n      properties:\n        data:\n          description: An array of incident teams.\n          example:\n          - attributes:\n              name: team name\n            id: 00000000-7ea3-0000-0000-000000000000\n            type: teams\n          items:\n            $ref: '#/components/schemas/IncidentTeamResponseData'\n          type: array\n        included:\n          description: Included related resources which the user requested.\n          items:\n            $ref: '#/components/schemas/IncidentTeamIncludedItems'\n          readOnly: true\n          type: array\n        meta:\n          $ref: '#/components/schemas/IncidentResponseMeta'\n      required:\n      - data\n      type: object\n    IncidentTimelineCellCreateAttributes:\n      description: The timeline cell's attributes for a create request.\n      oneOf:\n      - $ref: '#/components/schemas/IncidentTimelineCellMarkdownCreateAttributes'\n      type: object\n    IncidentTimelineCellMarkdownContentType:\n      default: markdown\n      description: Type of the Markdown timeline cell.\n      enum:\n      - markdown\n      example: markdown\n      type: string\n      x-enum-varnames:\n      - MARKDOWN\n    IncidentTimelineCellMarkdownCreateAttributes:\n      description: Timeline cell data for Markdown timeline cells for a create request.\n      properties:\n        cell_type:\n          $ref: '#/components/schemas/IncidentTimelineCellMarkdownContentType'\n        content:\n          $ref: '#/components/schemas/IncidentTimelineCellMarkdownCreateAttributesContent'\n        important:\n          default: false\n          description: A flag indicating whether the timeline cell is important and\n            should be highlighted.\n          example: false\n          type: boolean\n      required:\n      - content\n      - cell_type\n      type: object\n    IncidentTimelineCellMarkdownCreateAttributesContent:\n      description: The Markdown timeline cell contents.\n      properties:\n        content:\n          description: The Markdown content of the cell.\n          example: An example timeline cell message.\n          nullable: false\n          type: string\n      type: object\n    IncidentType:\n      default: incidents\n      description: Incident resource type.\n      enum:\n      - incidents\n      example: incidents\n      type: string\n      x-enum-varnames:\n      - INCIDENTS\n    IncidentUpdateAttributes:\n      description: The incident's attributes for an update request.\n      properties:\n        customer_impact_end:\n          description: Timestamp when customers were no longer impacted by the incident.\n          format: date-time\n          nullable: true\n          type: string\n        customer_impact_scope:\n          description: A summary of the impact customers experienced during the incident.\n          example: Example customer impact scope\n          type: string\n        customer_impact_start:\n          description: Timestamp when customers began being impacted by the incident.\n          format: date-time\n          nullable: true\n          type: string\n        customer_impacted:\n          description: A flag indicating whether the incident caused customer impact.\n          example: false\n          type: boolean\n        detected:\n          description: Timestamp when the incident was detected.\n          format: date-time\n          nullable: true\n          type: string\n        fields:\n          additionalProperties:\n            $ref: '#/components/schemas/IncidentFieldAttributes'\n          description: A condensed view of the user-defined fields for which to update\n            selections.\n          example:\n            severity:\n              type: dropdown\n              value: SEV-5\n          type: object\n        notification_handles:\n          description: Notification handles that will be notified of the incident\n            during update.\n          items:\n            $ref: '#/components/schemas/IncidentNotificationHandle'\n          type: array\n        title:\n          description: The title of the incident, which summarizes what happened.\n          example: A test incident title\n          type: string\n      type: object\n    IncidentUpdateData:\n      description: Incident data for an update request.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/IncidentUpdateAttributes'\n        id:\n          description: The team's ID.\n          example: 00000000-0000-0000-4567-000000000000\n          type: string\n        relationships:\n          $ref: '#/components/schemas/IncidentUpdateRelationships'\n        type:\n          $ref: '#/components/schemas/IncidentType'\n      required:\n      - id\n      - type\n      type: object\n    IncidentUpdateRelationships:\n      description: The incident's relationships for an update request.\n      properties:\n        commander_user:\n          $ref: '#/components/schemas/NullableRelationshipToUser'\n        integrations:\n          $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadatas'\n        postmortem:\n          $ref: '#/components/schemas/RelationshipToIncidentPostmortem'\n      type: object\n    IncidentUpdateRequest:\n      description: Update request for an incident.\n      properties:\n        data:\n          $ref: '#/components/schemas/IncidentUpdateData'\n      required:\n      - data\n      type: object\n    IncidentsResponse:\n      description: Response with a list of incidents.\n      properties:\n        data:\n          description: An array of incidents.\n          example:\n          - attributes:\n              created: '2020-04-21T15:34:08.627205+00:00'\n              creation_idempotency_key: null\n              customer_impact_duration: 0\n              customer_impact_end: null\n              customer_impact_scope: null\n              customer_impact_start: null\n              customer_impacted: false\n              detected: '2020-04-14T00:00:00+00:00'\n              modified: '2020-09-17T14:16:58.696424+00:00'\n              public_id: 1\n              resolved: null\n              severity: SEV-1\n              time_to_detect: 0\n              time_to_internal_response: 0\n              time_to_repair: 0\n              time_to_resolve: 0\n              title: Example Incident\n            id: 00000000-aaaa-0000-0000-000000000000\n            relationships:\n              attachments:\n                data:\n                - id: 00000000-9999-0000-0000-000000000000\n                  type: incident_attachments\n                - id: 00000000-1234-0000-0000-000000000000\n                  type: incident_attachments\n              commander_user:\n                data:\n                  id: 00000000-0000-0000-cccc-000000000000\n                  type: users\n              created_by_user:\n                data:\n                  id: 00000000-0000-0000-cccc-000000000000\n                  type: users\n              integrations:\n                data:\n                - id: 00000000-0000-0000-4444-000000000000\n                  type: incident_integrations\n                - id: 00000000-0000-0000-5555-000000000000\n                  type: incident_integrations\n              last_modified_by_user:\n                data:\n                  id: 00000000-0000-0000-cccc-000000000000\n                  type: users\n            type: incidents\n          - attributes:\n              created: '2020-04-21T15:34:08.627205+00:00'\n              creation_idempotency_key: null\n              customer_impact_duration: 0\n              customer_impact_end: null\n              customer_impact_scope: null\n              customer_impact_start: null\n              customer_impacted: false\n              detected: '2020-04-14T00:00:00+00:00'\n              modified: '2020-09-17T14:16:58.696424+00:00'\n              public_id: 2\n              resolved: null\n              severity: SEV-5\n              time_to_detect: 0\n              time_to_internal_response: 0\n              time_to_repair: 0\n              time_to_resolve: 0\n              title: Example Incident 2\n            id: 00000000-1111-0000-0000-000000000000\n            relationships:\n              attachments:\n                data:\n                - id: 00000000-9999-0000-0000-000000000000\n                  type: incident_attachments\n              commander_user:\n                data:\n                  id: 00000000-aaaa-0000-0000-000000000000\n                  type: users\n              created_by_user:\n                data:\n                  id: 00000000-aaaa-0000-0000-000000000000\n                  type: users\n              integrations:\n                data:\n                - id: 00000000-0000-0000-0001-000000000000\n                  type: incident_integrations\n                - id: 00000000-0000-0000-0002-000000000000\n                  type: incident_integrations\n              last_modified_by_user:\n                data:\n                  id: 00000000-aaaa-0000-0000-000000000000\n                  type: users\n            type: incidents\n          items:\n            $ref: '#/components/schemas/IncidentResponseData'\n          type: array\n        included:\n          description: Included related resources that the user requested.\n          items:\n            $ref: '#/components/schemas/IncidentResponseIncludedItem'\n          readOnly: true\n          type: array\n        meta:\n          $ref: '#/components/schemas/IncidentResponseMeta'\n      required:\n      - data\n      type: object\n    IntakePayloadAccepted:\n      description: The payload accepted for intake.\n      properties:\n        errors:\n          description: A list of errors.\n          items:\n            description: An empty error list.\n            type: string\n          type: array\n      type: object\n    ListApplicationKeysResponse:\n      description: Response for a list of application keys.\n      properties:\n        data:\n          description: Array of application keys.\n          items:\n            $ref: '#/components/schemas/PartialApplicationKey'\n          type: array\n        included:\n          description: Array of objects related to the application key.\n          items:\n            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'\n          type: array\n      type: object\n    Log:\n      description: Object description of a log after being processed and stored by\n        Datadog.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/LogAttributes'\n        id:\n          description: Unique ID of the Log.\n          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\n          type: string\n        type:\n          $ref: '#/components/schemas/LogType'\n      type: object\n    LogAttributes:\n      description: JSON object containing all log attributes and their associated\n        values.\n      properties:\n        attributes:\n          additionalProperties: {}\n          description: JSON object of attributes from your log.\n          example:\n            customAttribute: 123\n            duration: 2345\n          type: object\n        host:\n          description: Name of the machine from where the logs are being sent.\n          example: i-0123\n          type: string\n        message:\n          description: 'The message [reserved attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)\n\n            of your log. By default, Datadog ingests the value of the message attribute\n            as the body of the log entry.\n\n            That value is then highlighted and displayed in the Logstream, where it\n            is indexed for full text search.'\n          example: Host connected to remote\n          type: string\n        service:\n          description: 'The name of the application or service generating the log\n            events.\n\n            It is used to switch from Logs to APM, so make sure you define the same\n\n            value when you use both products.'\n          example: agent\n          type: string\n        status:\n          description: Status of the message associated with your log.\n          example: INFO\n          type: string\n        tags:\n          description: Array of tags associated with your log.\n          example:\n          - team:A\n          items:\n            description: Tag associated with your log.\n            type: string\n          type: array\n        timestamp:\n          description: Timestamp of your log.\n          example: '2019-01-02T09:42:36.320Z'\n          format: date-time\n          type: string\n      type: object\n    LogType:\n      default: log\n      description: Type of the event.\n      enum:\n      - log\n      example: log\n      type: string\n      x-enum-varnames:\n      - LOG\n    LogsAggregateBucket:\n      description: A bucket values\n      properties:\n        by:\n          additionalProperties:\n            description: The values for each group by\n            type: string\n          description: The key, value pairs for each group by\n          example:\n            '@state': success\n            '@version': abc\n          type: object\n        computes:\n          additionalProperties:\n            $ref: '#/components/schemas/LogsAggregateBucketValue'\n          description: A map of the metric name -\u003e value for regular compute or list\n            of values for a timeseries\n          type: object\n      type: object\n    LogsAggregateBucketValue:\n      description: A bucket value, can be either a timeseries or a single value\n      oneOf:\n      - $ref: '#/components/schemas/LogsAggregateBucketValueSingleString'\n      - $ref: '#/components/schemas/LogsAggregateBucketValueSingleNumber'\n      - $ref: '#/components/schemas/LogsAggregateBucketValueTimeseries'\n    LogsAggregateBucketValueSingleNumber:\n      description: A single number value\n      format: double\n      type: number\n    LogsAggregateBucketValueSingleString:\n      description: A single string value\n      type: string\n    LogsAggregateBucketValueTimeseries:\n      description: A timeseries array\n      items:\n        $ref: '#/components/schemas/LogsAggregateBucketValueTimeseriesPoint'\n      type: array\n      x-generate-alias-as-model: true\n    LogsAggregateBucketValueTimeseriesPoint:\n      description: A timeseries point\n      properties:\n        time:\n          description: The time value for this point\n          example: '2020-06-08T11:55:00Z'\n          type: string\n        value:\n          description: The value for this point\n          example: 19\n          format: double\n          type: number\n      type: object\n    LogsAggregateRequest:\n      description: The object sent with the request to retrieve a list of logs from\n        your organization.\n      properties:\n        compute:\n          description: The list of metrics or timeseries to compute for the retrieved\n            buckets.\n          items:\n            $ref: '#/components/schemas/LogsCompute'\n          type: array\n        filter:\n          $ref: '#/components/schemas/LogsQueryFilter'\n        group_by:\n          description: The rules for the group by\n          items:\n            $ref: '#/components/schemas/LogsGroupBy'\n          type: array\n        options:\n          $ref: '#/components/schemas/LogsQueryOptions'\n        page:\n          $ref: '#/components/schemas/LogsAggregateRequestPage'\n      type: object\n    LogsAggregateRequestPage:\n      description: Paging settings\n      properties:\n        cursor:\n          description: The returned paging point to use to get the next results\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    LogsAggregateResponse:\n      description: The response object for the logs aggregate API endpoint\n      properties:\n        data:\n          $ref: '#/components/schemas/LogsAggregateResponseData'\n        meta:\n          $ref: '#/components/schemas/LogsResponseMetadata'\n      type: object\n    LogsAggregateResponseData:\n      description: The query results\n      properties:\n        buckets:\n          description: The list of matching buckets, one item per bucket\n          items:\n            $ref: '#/components/schemas/LogsAggregateBucket'\n          type: array\n      type: object\n    LogsAggregateResponseStatus:\n      description: The status of the response\n      enum:\n      - done\n      - timeout\n      example: done\n      type: string\n      x-enum-varnames:\n      - DONE\n      - TIMEOUT\n    LogsAggregateSort:\n      description: A sort rule\n      example:\n        aggregation: count\n        order: asc\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/LogsAggregationFunction'\n        metric:\n          description: The metric to sort by (only used for `type=measure`)\n          example: '@duration'\n          type: string\n        order:\n          $ref: '#/components/schemas/LogsSortOrder'\n        type:\n          $ref: '#/components/schemas/LogsAggregateSortType'\n      type: object\n    LogsAggregateSortType:\n      default: alphabetical\n      description: The type of sorting algorithm\n      enum:\n      - alphabetical\n      - measure\n      type: string\n      x-enum-varnames:\n      - ALPHABETICAL\n      - MEASURE\n    LogsAggregationFunction:\n      description: An aggregation function\n      enum:\n      - count\n      - cardinality\n      - pc75\n      - pc90\n      - pc95\n      - pc98\n      - pc99\n      - sum\n      - min\n      - max\n      - avg\n      - median\n      example: pc90\n      type: string\n      x-enum-varnames:\n      - COUNT\n      - CARDINALITY\n      - PERCENTILE_75\n      - PERCENTILE_90\n      - PERCENTILE_95\n      - PERCENTILE_98\n      - PERCENTILE_99\n      - SUM\n      - MIN\n      - MAX\n      - AVG\n      - MEDIAN\n    LogsArchive:\n      description: The logs archive.\n      properties:\n        data:\n          $ref: '#/components/schemas/LogsArchiveDefinition'\n      type: object\n    LogsArchiveAttributes:\n      description: The attributes associated with the archive.\n      properties:\n        destination:\n          $ref: '#/components/schemas/LogsArchiveDestination'\n        include_tags:\n          default: false\n          description: 'To store the tags in the archive, set the value \"true\".\n\n            If it is set to \"false\", the tags will be deleted when the logs are sent\n            to the archive.'\n          example: false\n          type: boolean\n        name:\n          description: The archive name.\n          example: Nginx Archive\n          type: string\n        query:\n          description: The archive query/filter. Logs matching this query are included\n            in the archive.\n          example: source:nginx\n          type: string\n        rehydration_max_scan_size_in_gb:\n          description: Maximum scan size for rehydration from this archive.\n          example: 100\n          format: int64\n          nullable: true\n          type: integer\n        rehydration_tags:\n          description: An array of tags to add to rehydrated logs from an archive.\n          example:\n          - team:intake\n          - team:app\n          items:\n            description: A given tag in the `\u003cKEY\u003e:\u003cVALUE\u003e` format.\n            type: string\n          type: array\n        state:\n          $ref: '#/components/schemas/LogsArchiveState'\n      required:\n      - name\n      - query\n      - destination\n      type: object\n    LogsArchiveCreateRequest:\n      description: The logs archive.\n      properties:\n        data:\n          $ref: '#/components/schemas/LogsArchiveCreateRequestDefinition'\n      type: object\n    LogsArchiveCreateRequestAttributes:\n      description: The attributes associated with the archive.\n      properties:\n        destination:\n          $ref: '#/components/schemas/LogsArchiveCreateRequestDestination'\n        include_tags:\n          default: false\n          description: 'To store the tags in the archive, set the value \"true\".\n\n            If it is set to \"false\", the tags will be deleted when the logs are sent\n            to the archive.'\n          example: false\n          type: boolean\n        name:\n          description: The archive name.\n          example: Nginx Archive\n          type: string\n        query:\n          description: The archive query/filter. Logs matching this query are included\n            in the archive.\n          example: source:nginx\n          type: string\n        rehydration_max_scan_size_in_gb:\n          description: Maximum scan size for rehydration from this archive.\n          example: 100\n          format: int64\n          nullable: true\n          type: integer\n        rehydration_tags:\n          description: An array of tags to add to rehydrated logs from an archive.\n          example:\n          - team:intake\n          - team:app\n          items:\n            description: A given tag in the `\u003cKEY\u003e:\u003cVALUE\u003e` format.\n            type: string\n          type: array\n      required:\n      - name\n      - query\n      - destination\n      type: object\n    LogsArchiveCreateRequestDefinition:\n      description: The definition of an archive.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/LogsArchiveCreateRequestAttributes'\n        type:\n          default: archives\n          description: The type of the resource. The value should always be archives.\n          example: archives\n          type: string\n      required:\n      - type\n      type: object\n    LogsArchiveCreateRequestDestination:\n      description: An archive's destination.\n      oneOf:\n      - $ref: '#/components/schemas/LogsArchiveDestinationAzure'\n      - $ref: '#/components/schemas/LogsArchiveDestinationGCS'\n      - $ref: '#/components/schemas/LogsArchiveDestinationS3'\n      required:\n      - type\n      - integration\n      type: object\n    LogsArchiveDefinition:\n      description: The definition of an archive.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/LogsArchiveAttributes'\n        id:\n          description: The archive ID.\n          example: a2zcMylnM4OCHpYusxIi3g\n          readOnly: true\n          type: string\n        type:\n          default: archives\n          description: The type of the resource. The value should always be archives.\n          example: archives\n          readOnly: true\n          type: string\n      required:\n      - type\n      type: object\n    LogsArchiveDestination:\n      description: An archive's destination.\n      nullable: true\n      oneOf:\n      - $ref: '#/components/schemas/LogsArchiveDestinationAzure'\n      - $ref: '#/components/schemas/LogsArchiveDestinationGCS'\n      - $ref: '#/components/schemas/LogsArchiveDestinationS3'\n      required:\n      - type\n      - integration\n      type: object\n    LogsArchiveDestinationAzure:\n      description: The Azure archive destination.\n      properties:\n        container:\n          description: The container where the archive will be stored.\n          example: container-name\n          type: string\n        integration:\n          $ref: '#/components/schemas/LogsArchiveIntegrationAzure'\n        path:\n          description: The archive path.\n          type: string\n        region:\n          description: The region where the archive will be stored.\n          type: string\n        storage_account:\n          description: The associated storage account.\n          example: account-name\n          type: string\n        type:\n          $ref: '#/components/schemas/LogsArchiveDestinationAzureType'\n      required:\n      - storage_account\n      - container\n      - integration\n      - type\n      type: object\n    LogsArchiveDestinationAzureType:\n      default: azure\n      description: Type of the Azure archive destination.\n      enum:\n      - azure\n      example: azure\n      type: string\n      x-enum-varnames:\n      - AZURE\n    LogsArchiveDestinationGCS:\n      description: The GCS archive destination.\n      properties:\n        bucket:\n          description: The bucket where the archive will be stored.\n          example: bucket-name\n          type: string\n        integration:\n          $ref: '#/components/schemas/LogsArchiveIntegrationGCS'\n        path:\n          description: The archive path.\n          type: string\n        type:\n          $ref: '#/components/schemas/LogsArchiveDestinationGCSType'\n      required:\n      - bucket\n      - integration\n      - type\n      type: object\n    LogsArchiveDestinationGCSType:\n      default: gcs\n      description: Type of the GCS archive destination.\n      enum:\n      - gcs\n      example: gcs\n      type: string\n      x-enum-varnames:\n      - GCS\n    LogsArchiveDestinationS3:\n      description: The S3 archive destination.\n      properties:\n        bucket:\n          description: The bucket where the archive will be stored.\n          example: bucket-name\n          type: string\n        integration:\n          $ref: '#/components/schemas/LogsArchiveIntegrationS3'\n        path:\n          description: The archive path.\n          type: string\n        type:\n          $ref: '#/components/schemas/LogsArchiveDestinationS3Type'\n      required:\n      - bucket\n      - integration\n      - type\n      type: object\n    LogsArchiveDestinationS3Type:\n      default: s3\n      description: Type of the S3 archive destination.\n      enum:\n      - s3\n      example: s3\n      type: string\n      x-enum-varnames:\n      - S3\n    LogsArchiveIntegrationAzure:\n      description: The Azure archive's integration destination.\n      properties:\n        client_id:\n          description: A client ID.\n          example: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\n          type: string\n        tenant_id:\n          description: A tenant ID.\n          example: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\n          type: string\n      required:\n      - tenant_id\n      - client_id\n      type: object\n    LogsArchiveIntegrationGCS:\n      description: The GCS archive's integration destination.\n      properties:\n        client_email:\n          description: A client email.\n          example: youremail@example.com\n          type: string\n        project_id:\n          description: A project ID.\n          example: project-id\n          type: string\n      required:\n      - project_id\n      - client_email\n      type: object\n    LogsArchiveIntegrationS3:\n      description: The S3 Archive's integration destination.\n      properties:\n        account_id:\n          description: The account ID for the integration.\n          example: '123456789012'\n          type: string\n        role_name:\n          description: The path of the integration.\n          example: role-name\n          type: string\n      required:\n      - role_name\n      - account_id\n      type: object\n    LogsArchiveOrder:\n      description: A ordered list of archive IDs.\n      properties:\n        data:\n          $ref: '#/components/schemas/LogsArchiveOrderDefinition'\n      type: object\n    LogsArchiveOrderAttributes:\n      description: The attributes associated with the archive order.\n      properties:\n        archive_ids:\n          description: 'An ordered array of `\u003cARCHIVE_ID\u003e` strings, the order of archive\n            IDs in the array\n\n            define the overall archives order for Datadog.'\n          example:\n          - a2zcMylnM4OCHpYusxIi1g\n          - a2zcMylnM4OCHpYusxIi2g\n          - a2zcMylnM4OCHpYusxIi3g\n          items:\n            description: A given archive ID.\n            type: string\n          type: array\n      required:\n      - archive_ids\n      type: object\n    LogsArchiveOrderDefinition:\n      description: The definition of an archive order.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/LogsArchiveOrderAttributes'\n        type:\n          $ref: '#/components/schemas/LogsArchiveOrderDefinitionType'\n      required:\n      - type\n      - attributes\n      type: object\n    LogsArchiveOrderDefinitionType:\n      default: archive_order\n      description: Type of the archive order definition.\n      enum:\n      - archive_order\n      example: archive_order\n      type: string\n      x-enum-varnames:\n      - ARCHIVE_ORDER\n    LogsArchiveState:\n      description: The state of the archive.\n      enum:\n      - UNKNOWN\n      - WORKING\n      - FAILING\n      - WORKING_AUTH_LEGACY\n      example: WORKING\n      type: string\n      x-enum-varnames:\n      - UNKNOWN\n      - WORKING\n      - FAILING\n      - WORKING_AUTH_LEGACY\n    LogsArchives:\n      description: The available archives.\n      properties:\n        data:\n          description: A list of archives.\n          items:\n            $ref: '#/components/schemas/LogsArchiveDefinition'\n          type: array\n      type: object\n    LogsCompute:\n      description: A compute rule to compute metrics or timeseries\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/LogsAggregationFunction'\n        interval:\n          description: 'The time buckets'' size (only used for type=timeseries)\n\n            Defaults to a resolution of 150 points'\n          example: 5m\n          type: string\n        metric:\n          description: The metric to use\n          example: '@duration'\n          type: string\n        type:\n          $ref: '#/components/schemas/LogsComputeType'\n      required:\n      - aggregation\n      type: object\n    LogsComputeType:\n      default: total\n      description: The type of compute\n      enum:\n      - timeseries\n      - total\n      type: string\n      x-enum-varnames:\n      - TIMESERIES\n      - TOTAL\n    LogsGroupBy:\n      description: A group by rule\n      properties:\n        facet:\n          description: The name of the facet to use (required)\n          example: host\n          type: string\n        histogram:\n          $ref: '#/components/schemas/LogsGroupByHistogram'\n        limit:\n          default: 10\n          description: The maximum buckets to return for this group by\n          format: int64\n          type: integer\n        missing:\n          $ref: '#/components/schemas/LogsGroupByMissing'\n        sort:\n          $ref: '#/components/schemas/LogsAggregateSort'\n        total:\n          $ref: '#/components/schemas/LogsGroupByTotal'\n      required:\n      - facet\n      type: object\n    LogsGroupByHistogram:\n      description: 'Used to perform a histogram computation (only for measure facets).\n\n        Note: At most 100 buckets are allowed, the number of buckets is (max - min)/interval.'\n      properties:\n        interval:\n          description: The bin size of the histogram buckets\n          example: 10\n          format: double\n          type: number\n        max:\n          description: 'The maximum value for the measure used in the histogram\n\n            (values greater than this one are filtered out)'\n          example: 100\n          format: double\n          type: number\n        min:\n          description: 'The minimum value for the measure used in the histogram\n\n            (values smaller than this one are filtered out)'\n          example: 50\n          format: double\n          type: number\n      required:\n      - interval\n      - min\n      - max\n      type: object\n    LogsGroupByMissing:\n      description: The value to use for logs that don't have the facet used to group\n        by\n      oneOf:\n      - $ref: '#/components/schemas/LogsGroupByMissingString'\n      - $ref: '#/components/schemas/LogsGroupByMissingNumber'\n    LogsGroupByMissingNumber:\n      description: The missing value to use if there is a number valued facet.\n      format: double\n      type: number\n    LogsGroupByMissingString:\n      description: The missing value to use if there is string valued facet.\n      type: string\n    LogsGroupByTotal:\n      default: false\n      description: A resulting object to put the given computes in over all the matching\n        records.\n      oneOf:\n      - $ref: '#/components/schemas/LogsGroupByTotalBoolean'\n      - $ref: '#/components/schemas/LogsGroupByTotalString'\n      - $ref: '#/components/schemas/LogsGroupByTotalNumber'\n    LogsGroupByTotalBoolean:\n      description: If set to true, creates an additional bucket labeled \"$facet_total\"\n      type: boolean\n    LogsGroupByTotalNumber:\n      description: A number to use as the key value for the total bucket\n      format: double\n      type: number\n    LogsGroupByTotalString:\n      description: A string to use as the key value for the total bucket\n      type: string\n    LogsListRequest:\n      description: The request for a logs list.\n      properties:\n        filter:\n          $ref: '#/components/schemas/LogsQueryFilter'\n        options:\n          $ref: '#/components/schemas/LogsQueryOptions'\n        page:\n          $ref: '#/components/schemas/LogsListRequestPage'\n        sort:\n          $ref: '#/components/schemas/LogsSort'\n      type: object\n    LogsListRequestPage:\n      description: Paging attributes for listing logs.\n      properties:\n        cursor:\n          description: List following results with a cursor provided in the previous\n            query.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n        limit:\n          default: 10\n          description: Maximum number of logs in the response.\n          example: 25\n          format: int32\n          maximum: 1000\n          type: integer\n      type: object\n    LogsListResponse:\n      description: Response object with all logs matching the request and pagination\n        information.\n      properties:\n        data:\n          description: Array of logs matching the request.\n          items:\n            $ref: '#/components/schemas/Log'\n          type: array\n        links:\n          $ref: '#/components/schemas/LogsListResponseLinks'\n        meta:\n          $ref: '#/components/schemas/LogsResponseMetadata'\n      type: object\n    LogsListResponseLinks:\n      description: Links attributes.\n      properties:\n        next:\n          description: 'Link for the next set of results. Note that the request can\n            also be made using the\n\n            POST endpoint.'\n          example: https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo\u0026page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    LogsMetricCompute:\n      description: The compute rule to compute the log-based metric.\n      properties:\n        aggregation_type:\n          $ref: '#/components/schemas/LogsMetricComputeAggregationType'\n        include_percentiles:\n          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'\n        path:\n          description: The path to the value the log-based metric will aggregate on\n            (only used if the aggregation type is a \"distribution\").\n          example: '@duration'\n          type: string\n      required:\n      - aggregation_type\n      type: object\n    LogsMetricComputeAggregationType:\n      description: The type of aggregation to use.\n      enum:\n      - count\n      - distribution\n      example: distribution\n      type: string\n      x-enum-varnames:\n      - COUNT\n      - DISTRIBUTION\n    LogsMetricComputeIncludePercentiles:\n      description: 'Toggle to include or exclude percentile aggregations for distribution\n        metrics.\n\n        Only present when the `aggregation_type` is `distribution`.'\n      example: true\n      type: boolean\n    LogsMetricCreateAttributes:\n      description: The object describing the Datadog log-based metric to create.\n      properties:\n        compute:\n          $ref: '#/components/schemas/LogsMetricCompute'\n        filter:\n          $ref: '#/components/schemas/LogsMetricFilter'\n        group_by:\n          description: The rules for the group by.\n          items:\n            $ref: '#/components/schemas/LogsMetricGroupBy'\n          type: array\n      required:\n      - compute\n      type: object\n    LogsMetricCreateData:\n      description: The new log-based metric properties.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/LogsMetricCreateAttributes'\n        id:\n          $ref: '#/components/schemas/LogsMetricID'\n        type:\n          $ref: '#/components/schemas/LogsMetricType'\n      required:\n      - id\n      - type\n      - attributes\n      type: object\n    LogsMetricCreateRequest:\n      description: The new log-based metric body.\n      properties:\n        data:\n          $ref: '#/components/schemas/LogsMetricCreateData'\n      required:\n      - data\n      type: object\n    LogsMetricFilter:\n      description: The log-based metric filter. Logs matching this filter will be\n        aggregated in this metric.\n      properties:\n        query:\n          default: '*'\n          description: The search query - following the log search syntax.\n          example: service:web* AND @http.status_code:[200 TO 299]\n          type: string\n      type: object\n    LogsMetricGroupBy:\n      description: A group by rule.\n      properties:\n        path:\n          description: The path to the value the log-based metric will be aggregated\n            over.\n          example: '@http.status_code'\n          type: string\n        tag_name:\n          description: Eventual name of the tag that gets created. By default, the\n            path attribute is used as the tag name.\n          example: status_code\n          type: string\n      required:\n      - path\n      type: object\n    LogsMetricID:\n      description: The name of the log-based metric.\n      example: logs.page.load.count\n      type: string\n    LogsMetricResponse:\n      description: The log-based metric object.\n      properties:\n        data:\n          $ref: '#/components/schemas/LogsMetricResponseData'\n      type: object\n    LogsMetricResponseAttributes:\n      description: The object describing a Datadog log-based metric.\n      properties:\n        compute:\n          $ref: '#/components/schemas/LogsMetricResponseCompute'\n        filter:\n          $ref: '#/components/schemas/LogsMetricResponseFilter'\n        group_by:\n          description: The rules for the group by.\n          items:\n            $ref: '#/components/schemas/LogsMetricResponseGroupBy'\n          type: array\n      type: object\n    LogsMetricResponseCompute:\n      description: The compute rule to compute the log-based metric.\n      properties:\n        aggregation_type:\n          $ref: '#/components/schemas/LogsMetricResponseComputeAggregationType'\n        include_percentiles:\n          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'\n        path:\n          description: The path to the value the log-based metric will aggregate on\n            (only used if the aggregation type is a \"distribution\").\n          example: '@duration'\n          type: string\n      type: object\n    LogsMetricResponseComputeAggregationType:\n      description: The type of aggregation to use.\n      enum:\n      - count\n      - distribution\n      example: distribution\n      type: string\n      x-enum-varnames:\n      - COUNT\n      - DISTRIBUTION\n    LogsMetricResponseData:\n      description: The log-based metric properties.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/LogsMetricResponseAttributes'\n        id:\n          $ref: '#/components/schemas/LogsMetricID'\n        type:\n          $ref: '#/components/schemas/LogsMetricType'\n      type: object\n    LogsMetricResponseFilter:\n      description: The log-based metric filter. Logs matching this filter will be\n        aggregated in this metric.\n      properties:\n        query:\n          description: The search query - following the log search syntax.\n          example: service:web* AND @http.status_code:[200 TO 299]\n          type: string\n      type: object\n    LogsMetricResponseGroupBy:\n      description: A group by rule.\n      properties:\n        path:\n          description: The path to the value the log-based metric will be aggregated\n            over.\n          example: '@http.status_code'\n          type: string\n        tag_name:\n          description: Eventual name of the tag that gets created. By default, the\n            path attribute is used as the tag name.\n          example: status_code\n          type: string\n      type: object\n    LogsMetricType:\n      default: logs_metrics\n      description: The type of the resource. The value should always be logs_metrics.\n      enum:\n      - logs_metrics\n      example: logs_metrics\n      type: string\n      x-enum-varnames:\n      - LOGS_METRICS\n    LogsMetricUpdateAttributes:\n      description: The log-based metric properties that will be updated.\n      properties:\n        compute:\n          $ref: '#/components/schemas/LogsMetricUpdateCompute'\n        filter:\n          $ref: '#/components/schemas/LogsMetricFilter'\n        group_by:\n          description: The rules for the group by.\n          items:\n            $ref: '#/components/schemas/LogsMetricGroupBy'\n          type: array\n      type: object\n    LogsMetricUpdateCompute:\n      description: The compute rule to compute the log-based metric.\n      properties:\n        include_percentiles:\n          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'\n      type: object\n    LogsMetricUpdateData:\n      description: The new log-based metric properties.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/LogsMetricUpdateAttributes'\n        type:\n          $ref: '#/components/schemas/LogsMetricType'\n      required:\n      - type\n      - attributes\n      type: object\n    LogsMetricUpdateRequest:\n      description: The new log-based metric body.\n      properties:\n        data:\n          $ref: '#/components/schemas/LogsMetricUpdateData'\n      required:\n      - data\n      type: object\n    LogsMetricsResponse:\n      description: All the available log-based metric objects.\n      properties:\n        data:\n          description: A list of log-based metric objects.\n          items:\n            $ref: '#/components/schemas/LogsMetricResponseData'\n          type: array\n      type: object\n    LogsQueryFilter:\n      description: The search and filter query settings\n      properties:\n        from:\n          default: now-15m\n          description: The minimum time for the requested logs, supports date math\n            and regular timestamps (milliseconds).\n          example: now-15m\n          type: string\n        indexes:\n          default:\n          - '*'\n          description: For customers with multiple indexes, the indexes to search.\n            Defaults to ['*'] which means all indexes.\n          example:\n          - main\n          - web\n          items:\n            description: The name of a log index.\n            type: string\n          type: array\n        query:\n          default: '*'\n          description: The search query - following the log search syntax.\n          example: service:web* AND @http.status_code:[200 TO 299]\n          type: string\n        storage_tier:\n          $ref: '#/components/schemas/LogsStorageTier'\n        to:\n          default: now\n          description: The maximum time for the requested logs, supports date math\n            and regular timestamps (milliseconds).\n          example: now\n          type: string\n      type: object\n    LogsQueryOptions:\n      description: 'Global query options that are used during the query.\n\n        Note: You should only supply timezone or time offset but not both otherwise\n        the query will fail.'\n      properties:\n        timeOffset:\n          description: The time offset (in seconds) to apply to the query.\n          format: int64\n          type: integer\n        timezone:\n          default: UTC\n          description: The timezone can be specified as GMT, UTC, an offset from UTC\n            (like UTC+1), or as a Timezone Database identifier (like America/New_York).\n          example: GMT\n          type: string\n      type: object\n    LogsResponseMetadata:\n      description: The metadata associated with a request\n      properties:\n        elapsed:\n          description: The time elapsed in milliseconds\n          example: 132\n          format: int64\n          type: integer\n        page:\n          $ref: '#/components/schemas/LogsResponseMetadataPage'\n        request_id:\n          description: The identifier of the request\n          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR\n          type: string\n        status:\n          $ref: '#/components/schemas/LogsAggregateResponseStatus'\n        warnings:\n          description: 'A list of warnings (non fatal errors) encountered, partial\n            results might be returned if\n\n            warnings are present in the response.'\n          items:\n            $ref: '#/components/schemas/LogsWarning'\n          type: array\n      type: object\n    LogsResponseMetadataPage:\n      description: Paging attributes.\n      properties:\n        after:\n          description: 'The cursor to use to get the next results, if any. To make\n            the next request, use the same.\n\n            parameters with the addition of the `page[cursor]`.'\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    LogsSort:\n      description: Sort parameters when querying logs.\n      enum:\n      - timestamp\n      - -timestamp\n      type: string\n      x-enum-varnames:\n      - TIMESTAMP_ASCENDING\n      - TIMESTAMP_DESCENDING\n    LogsSortOrder:\n      description: The order to use, ascending or descending\n      enum:\n      - asc\n      - desc\n      example: asc\n      type: string\n      x-enum-varnames:\n      - ASCENDING\n      - DESCENDING\n    LogsStorageTier:\n      default: indexes\n      description: Specifies storage type as indexes or online-archives\n      enum:\n      - indexes\n      - online-archives\n      example: indexes\n      type: string\n      x-enum-varnames:\n      - INDEXES\n      - ONLINE_ARCHIVES\n    LogsWarning:\n      description: A warning message indicating something that went wrong with the\n        query\n      properties:\n        code:\n          description: A unique code for this type of warning\n          example: unknown_index\n          type: string\n        detail:\n          description: A detailed explanation of this specific warning\n          example: 'indexes: foo, bar'\n          type: string\n        title:\n          description: A short human-readable summary of the warning\n          example: One or several indexes are missing or invalid, results hold data\n            from the other indexes\n          type: string\n      type: object\n    Metric:\n      description: Object for a single metric tag configuration.\n      example:\n        id: metric.foo.bar\n        type: metrics\n      properties:\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricType'\n      type: object\n    MetricActiveConfigurationType:\n      default: actively_queried_configurations\n      description: The metric actively queried configuration resource type.\n      enum:\n      - actively_queried_configurations\n      example: actively_queried_configurations\n      type: string\n      x-enum-varnames:\n      - ACTIVELY_QUERIED_CONFIGURATIONS\n    MetricAllTags:\n      description: Object for a single metric's indexed tags.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricAllTagsAttributes'\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricType'\n      type: object\n    MetricAllTagsAttributes:\n      description: Object containing the definition of a metric's tags.\n      properties:\n        tags:\n          description: List of indexed tag value pairs.\n          example:\n          - sport:golf\n          - sport:football\n          - animal:dog\n          items:\n            description: Tag key-value pairs.\n            type: string\n          type: array\n      type: object\n    MetricAllTagsResponse:\n      description: Response object that includes a single metric's indexed tags.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricAllTags'\n      readOnly: true\n      type: object\n    MetricBulkConfigureTagsType:\n      default: metric_bulk_configure_tags\n      description: The metric bulk configure tags resource.\n      enum:\n      - metric_bulk_configure_tags\n      example: metric_bulk_configure_tags\n      type: string\n      x-enum-varnames:\n      - BULK_MANAGE_TAGS\n    MetricBulkTagConfigCreate:\n      description: Request object to bulk configure tags for metrics matching the\n        given prefix.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricBulkTagConfigCreateAttributes'\n        id:\n          $ref: '#/components/schemas/MetricBulkTagConfigNamePrefix'\n        type:\n          $ref: '#/components/schemas/MetricBulkConfigureTagsType'\n      required:\n      - id\n      - type\n      type: object\n    MetricBulkTagConfigCreateAttributes:\n      description: Optional parameters for bulk creating metric tag configurations.\n      properties:\n        emails:\n          $ref: '#/components/schemas/MetricBulkTagConfigEmailList'\n        tags:\n          $ref: '#/components/schemas/MetricBulkTagConfigTagNameList'\n      type: object\n    MetricBulkTagConfigCreateRequest:\n      description: Wrapper object for a single bulk tag configuration request.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricBulkTagConfigCreate'\n      required:\n      - data\n      type: object\n    MetricBulkTagConfigDelete:\n      description: Request object to bulk delete all tag configurations for metrics\n        matching the given prefix.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricBulkTagConfigDeleteAttributes'\n        id:\n          $ref: '#/components/schemas/MetricBulkTagConfigNamePrefix'\n        type:\n          $ref: '#/components/schemas/MetricBulkConfigureTagsType'\n      required:\n      - id\n      - type\n      type: object\n    MetricBulkTagConfigDeleteAttributes:\n      description: Optional parameters for bulk deleting metric tag configurations.\n      properties:\n        emails:\n          $ref: '#/components/schemas/MetricBulkTagConfigEmailList'\n      type: object\n    MetricBulkTagConfigDeleteRequest:\n      description: Wrapper object for a single bulk tag deletion request.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricBulkTagConfigDelete'\n      required:\n      - data\n      type: object\n    MetricBulkTagConfigEmailList:\n      description: A list of account emails to notify when the configuration is applied.\n      example:\n      - sue@example.com\n      - bob@example.com\n      items:\n        description: An email address.\n        format: email\n        type: string\n      type: array\n    MetricBulkTagConfigNamePrefix:\n      description: A text prefix to match against metric names.\n      example: kafka.lag\n      type: string\n    MetricBulkTagConfigResponse:\n      description: Wrapper for a single bulk tag configuration status response.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricBulkTagConfigStatus'\n      type: object\n    MetricBulkTagConfigStatus:\n      description: 'The status of a request to bulk configure metric tags.\n\n        It contains the fields from the original request for reference.'\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricBulkTagConfigStatusAttributes'\n        id:\n          $ref: '#/components/schemas/MetricBulkTagConfigNamePrefix'\n        type:\n          $ref: '#/components/schemas/MetricBulkConfigureTagsType'\n      required:\n      - id\n      - type\n      type: object\n    MetricBulkTagConfigStatusAttributes:\n      description: Optional attributes for the status of a bulk tag configuration\n        request.\n      properties:\n        emails:\n          $ref: '#/components/schemas/MetricBulkTagConfigEmailList'\n        status:\n          description: The status of the request.\n          example: Accepted\n          type: string\n        tags:\n          $ref: '#/components/schemas/MetricBulkTagConfigTagNameList'\n      type: object\n    MetricBulkTagConfigTagNameList:\n      description: A list of tag names to apply to the configuration.\n      example:\n      - host\n      - pod_name\n      - is_shadow\n      items:\n        description: A metric tag name.\n        maxLength: 200\n        pattern: ^[A-Za-z][A-Za-z0-9\\.\\-\\_:\\/]*$\n        type: string\n      type: array\n    MetricContentEncoding:\n      default: deflate\n      description: HTTP header used to compress the media-type.\n      enum:\n      - deflate\n      - zstd1\n      - gzip\n      example: deflate\n      type: string\n      x-enum-varnames:\n      - DEFLATE\n      - ZSTD1\n      - GZIP\n    MetricCustomAggregation:\n      description: A time and space aggregation combination for use in query.\n      example:\n        space: sum\n        time: sum\n      properties:\n        space:\n          $ref: '#/components/schemas/MetricCustomSpaceAggregation'\n        time:\n          $ref: '#/components/schemas/MetricCustomTimeAggregation'\n      required:\n      - time\n      - space\n      type: object\n    MetricCustomAggregations:\n      description: 'A list of queryable aggregation combinations for a count, rate,\n        or gauge metric.\n\n        By default, count and rate metrics require the (time: sum, space: sum) aggregation\n        and\n\n        Gauge metrics require the (time: avg, space: avg) aggregation.\n\n        Additional time \u0026 space combinations are also available:\n\n\n        - time: avg, space: avg\n\n        - time: avg, space: max\n\n        - time: avg, space: min\n\n        - time: avg, space: sum\n\n        - time: count, space: sum\n\n        - time: max, space: max\n\n        - time: min, space: min\n\n        - time: sum, space: avg\n\n        - time: sum, space: sum\n\n\n        Can only be applied to metrics that have a `metric_type` of `count`, `rate`,\n        or `gauge`.'\n      example:\n      - space: sum\n        time: sum\n      - space: sum\n        time: count\n      items:\n        $ref: '#/components/schemas/MetricCustomAggregation'\n      type: array\n    MetricCustomSpaceAggregation:\n      description: A space aggregation for use in query.\n      enum:\n      - avg\n      - max\n      - min\n      - sum\n      example: sum\n      type: string\n      x-enum-varnames:\n      - AVG\n      - MAX\n      - MIN\n      - SUM\n    MetricCustomTimeAggregation:\n      description: A time aggregation for use in query.\n      enum:\n      - avg\n      - count\n      - max\n      - min\n      - sum\n      example: sum\n      type: string\n      x-enum-varnames:\n      - AVG\n      - COUNT\n      - MAX\n      - MIN\n      - SUM\n    MetricDistinctVolume:\n      description: Object for a single metric's distinct volume.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricDistinctVolumeAttributes'\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricDistinctVolumeType'\n      type: object\n    MetricDistinctVolumeAttributes:\n      description: Object containing the definition of a metric's distinct volume.\n      properties:\n        distinct_volume:\n          description: Distinct volume for the given metric.\n          example: 10\n          format: int64\n          type: integer\n      type: object\n    MetricDistinctVolumeType:\n      default: distinct_metric_volumes\n      description: The metric distinct volume type.\n      enum:\n      - distinct_metric_volumes\n      example: distinct_metric_volumes\n      type: string\n      x-enum-varnames:\n      - DISTINCT_METRIC_VOLUMES\n    MetricEstimate:\n      description: Object for a metric cardinality estimate.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricEstimateAttributes'\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricEstimateResourceType'\n      type: object\n    MetricEstimateAttributes:\n      description: Object containing the definition of a metric estimate attribute.\n      properties:\n        estimate_type:\n          $ref: '#/components/schemas/MetricEstimateType'\n        estimated_at:\n          description: Timestamp when the cardinality estimate was requested.\n          example: '2022-04-27T09:48:37.463835Z'\n          format: date-time\n          type: string\n        estimated_output_series:\n          description: Estimated cardinality of the metric based on the queried configuration.\n          example: 50\n          format: int64\n          type: integer\n      type: object\n    MetricEstimateResourceType:\n      default: metric_cardinality_estimate\n      description: The metric estimate resource type.\n      enum:\n      - metric_cardinality_estimate\n      example: metric_cardinality_estimate\n      type: string\n      x-enum-varnames:\n      - METRIC_CARDINALITY_ESTIMATE\n    MetricEstimateResponse:\n      description: Response object that includes metric cardinality estimates.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricEstimate'\n      type: object\n    MetricEstimateType:\n      default: count_or_gauge\n      description: Estimate type based on the queried configuration. By default, `count_or_gauge`\n        is returned. `distribution` is returned for distribution metrics without percentiles\n        enabled. Lastly, `percentile` is returned if `filter[pct]=true` is queried\n        with a distribution metric.\n      enum:\n      - count_or_gauge\n      - distribution\n      - percentile\n      example: distribution\n      type: string\n      x-enum-varnames:\n      - COUNT_OR_GAUGE\n      - DISTRIBUTION\n      - PERCENTILE\n    MetricIngestedIndexedVolume:\n      description: Object for a single metric's ingested and indexed volume.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricIngestedIndexedVolumeAttributes'\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricIngestedIndexedVolumeType'\n      type: object\n    MetricIngestedIndexedVolumeAttributes:\n      description: Object containing the definition of a metric's ingested and indexed\n        volume.\n      properties:\n        indexed_volume:\n          description: Indexed volume for the given metric.\n          example: 10\n          format: int64\n          type: integer\n        ingested_volume:\n          description: Ingested volume for the given metric.\n          example: 20\n          format: int64\n          type: integer\n      type: object\n    MetricIngestedIndexedVolumeType:\n      default: metric_volumes\n      description: The metric ingested and indexed volume type.\n      enum:\n      - metric_volumes\n      example: metric_volumes\n      type: string\n      x-enum-varnames:\n      - METRIC_VOLUMES\n    MetricIntakeType:\n      description: The type of metric. The available types are `0` (unspecified),\n        `1` (count), `2` (rate), and `3` (gauge).\n      enum:\n      - 0\n      - 1\n      - 2\n      - 3\n      format: int32\n      type: integer\n      x-enum-varnames:\n      - UNSPECIFIED\n      - COUNT\n      - RATE\n      - GAUGE\n    MetricMetadata:\n      description: Metadata for the metric.\n      properties:\n        origin:\n          $ref: '#/components/schemas/MetricOrigin'\n      type: object\n    MetricName:\n      description: The metric name for this resource.\n      example: test.metric.latency\n      type: string\n    MetricOrigin:\n      description: Metric origin information.\n      properties:\n        metric_type:\n          default: 0\n          description: The origin metric type code\n          format: int32\n          maximum: 1000\n          type: integer\n        product:\n          default: 0\n          description: The origin product code\n          format: int32\n          maximum: 1000\n          type: integer\n        service:\n          default: 0\n          description: The origin service code\n          format: int32\n          maximum: 1000\n          type: integer\n      type: object\n    MetricPayload:\n      description: The metrics' payload.\n      properties:\n        series:\n          description: A list of time series to submit to Datadog.\n          example:\n          - metric: system.load.1\n            points:\n            - timestamp: 1475317847\n              value: 0.7\n            resources:\n            - name: dummyhost\n              type: host\n          items:\n            $ref: '#/components/schemas/MetricSeries'\n          type: array\n      required:\n      - series\n      type: object\n    MetricPoint:\n      description: A point object is of the form `{POSIX_timestamp, numeric_value}`.\n      example:\n        timestamp: 1575317847\n        value: 0.5\n      properties:\n        timestamp:\n          description: 'The timestamp should be in seconds and current.\n\n            Current is defined as not more than 10 minutes in the future or more than\n            1 hour in the past.'\n          format: int64\n          type: integer\n        value:\n          description: The numeric value format should be a 64bit float gauge-type\n            value.\n          format: double\n          type: number\n      type: object\n    MetricResource:\n      description: Metric resource.\n      example:\n        name: dummyhost\n        type: host\n      properties:\n        name:\n          description: The name of the resource.\n          type: string\n        type:\n          description: The type of the resource.\n          type: string\n      type: object\n    MetricSeries:\n      description: 'A metric to submit to Datadog.\n\n        See [Datadog metrics](https://docs.datadoghq.com/developers/metrics/#custom-metrics-properties).'\n      properties:\n        interval:\n          description: If the type of the metric is rate or count, define the corresponding\n            interval.\n          example: 20\n          format: int64\n          type: integer\n        metadata:\n          $ref: '#/components/schemas/MetricMetadata'\n        metric:\n          description: The name of the timeseries.\n          example: system.load.1\n          type: string\n        points:\n          description: Points relating to a metric. All points must be objects with\n            timestamp and a scalar value (cannot be a string). Timestamps should be\n            in POSIX time in seconds, and cannot be more than ten minutes in the future\n            or more than one hour in the past.\n          items:\n            $ref: '#/components/schemas/MetricPoint'\n          type: array\n        resources:\n          description: A list of resources to associate with this metric.\n          items:\n            $ref: '#/components/schemas/MetricResource'\n          type: array\n        source_type_name:\n          description: The source type name.\n          example: datadog\n          type: string\n        tags:\n          description: A list of tags associated with the metric.\n          example:\n          - environment:test\n          items:\n            description: Individual tags.\n            type: string\n          type: array\n        type:\n          $ref: '#/components/schemas/MetricIntakeType'\n        unit:\n          description: The unit of point value.\n          example: second\n          type: string\n      required:\n      - metric\n      - points\n      type: object\n    MetricSuggestedAggregations:\n      description: List of aggregation combinations that have been actively queried.\n      example:\n      - space: sum\n        time: sum\n      - space: sum\n        time: count\n      items:\n        $ref: '#/components/schemas/MetricCustomAggregation'\n      type: array\n    MetricSuggestedTagsAndAggregations:\n      description: Object for a single metric's actively queried tags and aggregations.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricSuggestedTagsAttributes'\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricActiveConfigurationType'\n      type: object\n    MetricSuggestedTagsAndAggregationsResponse:\n      description: Response object that includes a single metric's actively queried\n        tags and aggregations.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricSuggestedTagsAndAggregations'\n      readOnly: true\n      type: object\n    MetricSuggestedTagsAttributes:\n      description: Object containing the definition of a metric's actively queried\n        tags and aggregations.\n      properties:\n        active_aggregations:\n          $ref: '#/components/schemas/MetricSuggestedAggregations'\n        active_tags:\n          description: List of tag keys that have been actively queried.\n          example:\n          - app\n          - datacenter\n          items:\n            description: Actively queried tag keys.\n            type: string\n          type: array\n      type: object\n    MetricTagConfiguration:\n      description: Object for a single metric tag configuration.\n      example:\n        attributes:\n          aggregations:\n          - space: avg\n            time: avg\n          created_at: '2020-03-25T09:48:37.463835Z'\n          metric_type: gauge\n          modified_at: '2020-04-25T09:48:37.463835Z'\n          tags:\n          - app\n          - datacenter\n        id: http.request.latency\n        type: manage_tags\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricTagConfigurationAttributes'\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricTagConfigurationType'\n      type: object\n    MetricTagConfigurationAttributes:\n      description: Object containing the definition of a metric tag configuration\n        attributes.\n      properties:\n        aggregations:\n          $ref: '#/components/schemas/MetricCustomAggregations'\n        created_at:\n          description: Timestamp when the tag configuration was created.\n          example: '2020-03-25T09:48:37.463835Z'\n          format: date-time\n          type: string\n        include_percentiles:\n          description: 'Toggle to include or exclude percentile aggregations for distribution\n            metrics.\n\n            Only present when the `metric_type` is `distribution`.'\n          example: true\n          type: boolean\n        metric_type:\n          $ref: '#/components/schemas/MetricTagConfigurationMetricTypes'\n        modified_at:\n          description: Timestamp when the tag configuration was last modified.\n          example: '2020-03-25T09:48:37.463835Z'\n          format: date-time\n          type: string\n        tags:\n          description: List of tag keys on which to group.\n          example:\n          - app\n          - datacenter\n          items:\n            description: Tag keys to group by.\n            type: string\n          type: array\n      type: object\n    MetricTagConfigurationCreateAttributes:\n      description: Object containing the definition of a metric tag configuration\n        to be created.\n      properties:\n        aggregations:\n          $ref: '#/components/schemas/MetricCustomAggregations'\n        include_percentiles:\n          description: 'Toggle to include/exclude percentiles for a distribution metric.\n\n            Defaults to false. Can only be applied to metrics that have a `metric_type`\n            of `distribution`.'\n          example: true\n          type: boolean\n        metric_type:\n          $ref: '#/components/schemas/MetricTagConfigurationMetricTypes'\n        tags:\n          default: []\n          description: A list of tag keys that will be queryable for your metric.\n          example:\n          - app\n          - datacenter\n          items:\n            description: Tag keys to group by.\n            type: string\n          type: array\n      required:\n      - tags\n      - metric_type\n      type: object\n    MetricTagConfigurationCreateData:\n      description: Object for a single metric to be configure tags on.\n      example:\n        attributes:\n          include_percentiles: false\n          metric_type: distribution\n          tags:\n          - app\n          - datacenter\n        id: http.endpoint.request\n        type: manage_tags\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricTagConfigurationCreateAttributes'\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricTagConfigurationType'\n      required:\n      - id\n      - type\n      type: object\n    MetricTagConfigurationCreateRequest:\n      description: Request object that includes the metric that you would like to\n        configure tags for.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricTagConfigurationCreateData'\n      required:\n      - data\n      type: object\n    MetricTagConfigurationMetricTypes:\n      default: gauge\n      description: The metric's type.\n      enum:\n      - gauge\n      - count\n      - rate\n      - distribution\n      example: count\n      type: string\n      x-enum-varnames:\n      - GAUGE\n      - COUNT\n      - RATE\n      - DISTRIBUTION\n    MetricTagConfigurationResponse:\n      description: Response object which includes a single metric's tag configuration.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricTagConfiguration'\n      readOnly: true\n      type: object\n    MetricTagConfigurationType:\n      default: manage_tags\n      description: The metric tag configuration resource type.\n      enum:\n      - manage_tags\n      example: manage_tags\n      type: string\n      x-enum-varnames:\n      - MANAGE_TAGS\n    MetricTagConfigurationUpdateAttributes:\n      description: Object containing the definition of a metric tag configuration\n        to be updated.\n      properties:\n        aggregations:\n          $ref: '#/components/schemas/MetricCustomAggregations'\n        include_percentiles:\n          description: 'Toggle to include/exclude percentiles for a distribution metric.\n\n            Defaults to false. Can only be applied to metrics that have a `metric_type`\n            of `distribution`.'\n          example: true\n          type: boolean\n        tags:\n          default: []\n          description: A list of tag keys that will be queryable for your metric.\n          example:\n          - app\n          - datacenter\n          items:\n            description: Tag keys to group by.\n            type: string\n          type: array\n      type: object\n    MetricTagConfigurationUpdateData:\n      description: Object for a single tag configuration to be edited.\n      example:\n        attributes:\n          group_by:\n          - app\n          - datacenter\n          include_percentiles: false\n        id: http.endpoint.request\n        type: manage_tags\n      properties:\n        attributes:\n          $ref: '#/components/schemas/MetricTagConfigurationUpdateAttributes'\n        id:\n          $ref: '#/components/schemas/MetricName'\n        type:\n          $ref: '#/components/schemas/MetricTagConfigurationType'\n      required:\n      - id\n      - type\n      type: object\n    MetricTagConfigurationUpdateRequest:\n      description: Request object that includes the metric that you would like to\n        edit the tag configuration on.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricTagConfigurationUpdateData'\n      required:\n      - data\n      type: object\n    MetricType:\n      default: metrics\n      description: The metric resource type.\n      enum:\n      - metrics\n      example: metrics\n      type: string\n      x-enum-varnames:\n      - METRICS\n    MetricVolumes:\n      description: Possible response objects for a metric's volume.\n      oneOf:\n      - $ref: '#/components/schemas/MetricDistinctVolume'\n      - $ref: '#/components/schemas/MetricIngestedIndexedVolume'\n      type: object\n    MetricVolumesResponse:\n      description: Response object which includes a single metric's volume.\n      properties:\n        data:\n          $ref: '#/components/schemas/MetricVolumes'\n      readOnly: true\n      type: object\n    MetricsAggregator:\n      default: avg\n      description: The type of aggregation that can be performed on metrics queries.\n      enum:\n      - avg\n      - min\n      - max\n      - sum\n      - last\n      example: avg\n      type: string\n      x-enum-varnames:\n      - AVG\n      - MIN\n      - MAX\n      - SUM\n      - LAST\n    MetricsAndMetricTagConfigurations:\n      description: Object for a metrics and metric tag configurations.\n      oneOf:\n      - $ref: '#/components/schemas/Metric'\n      - $ref: '#/components/schemas/MetricTagConfiguration'\n      type: object\n    MetricsAndMetricTagConfigurationsResponse:\n      description: Response object that includes metrics and metric tag configurations.\n      properties:\n        data:\n          description: Array of metrics and metric tag configurations.\n          items:\n            $ref: '#/components/schemas/MetricsAndMetricTagConfigurations'\n          type: array\n      readOnly: true\n      type: object\n    MetricsDataSource:\n      default: metrics\n      description: A data source that is powered by the Metrics backend.\n      enum:\n      - metrics\n      example: metrics\n      type: string\n      x-enum-varnames:\n      - METRICS\n    MetricsScalarQuery:\n      description: An individual scalar metrics query.\n      properties:\n        aggregator:\n          $ref: '#/components/schemas/MetricsAggregator'\n        data_source:\n          $ref: '#/components/schemas/MetricsDataSource'\n        name:\n          description: The variable name for use in formulas.\n          type: string\n        query:\n          description: A classic metrics query string.\n          example: avg:system.cpu.user{*}\n          type: string\n      required:\n      - data_source\n      - query\n      - aggregator\n      type: object\n    MetricsTimeseriesQuery:\n      description: An individual timeseries metrics query.\n      properties:\n        data_source:\n          $ref: '#/components/schemas/MetricsDataSource'\n        name:\n          description: The variable name for use in formulas.\n          type: string\n        query:\n          description: A classic metrics query string.\n          example: avg:system.cpu.user{*}\n          type: string\n      required:\n      - data_source\n      - query\n      type: object\n    MonitorType:\n      description: Attributes from the monitor that triggered the event.\n      nullable: true\n      properties:\n        created_at:\n          description: The POSIX timestamp of the monitor's creation in nanoseconds.\n          example: 1646318692000\n          format: int64\n          type: integer\n        group_status:\n          description: Monitor group status used when there is no `result_groups`.\n          format: int32\n          maximum: 2147483647\n          type: integer\n        groups:\n          description: Groups to which the monitor belongs.\n          items:\n            description: A group.\n            type: string\n          type: array\n        id:\n          description: The monitor ID.\n          format: int64\n          type: integer\n        message:\n          description: The monitor message.\n          type: string\n        modified:\n          description: The monitor's last-modified timestamp.\n          format: int64\n          type: integer\n        name:\n          description: The monitor name.\n          type: string\n        query:\n          description: The query that triggers the alert.\n          type: string\n        tags:\n          description: A list of tags attached to the monitor.\n          example:\n          - environment:test\n          items:\n            description: A tag.\n            type: string\n          type: array\n        templated_name:\n          description: The templated name of the monitor before resolving any template\n            variables.\n          type: string\n        type:\n          description: The monitor type.\n          type: string\n      type: object\n    NullableRelationshipToUser:\n      description: Relationship to user.\n      properties:\n        data:\n          $ref: '#/components/schemas/NullableRelationshipToUserData'\n      required:\n      - data\n      type: object\n    NullableRelationshipToUserData:\n      description: Relationship to user object.\n      nullable: true\n      properties:\n        id:\n          description: A unique identifier that represents the user.\n          example: 00000000-0000-0000-0000-000000000000\n          type: string\n        type:\n          $ref: '#/components/schemas/UsersType'\n      required:\n      - id\n      - type\n      type: object\n    OpsgenieServiceCreateAttributes:\n      description: The Opsgenie service attributes for a create request.\n      properties:\n        custom_url:\n          description: The custom URL for a custom region.\n          example: https://example.com\n          type: string\n        name:\n          description: The name for the Opsgenie service.\n          example: fake-opsgenie-service-name\n          type: string\n        opsgenie_api_key:\n          description: The Opsgenie API key for your Opsgenie service.\n          example: 00000000-0000-0000-0000-000000000000\n          type: string\n        region:\n          $ref: '#/components/schemas/OpsgenieServiceRegionType'\n      required:\n      - name\n      - opsgenie_api_key\n      - region\n      type: object\n    OpsgenieServiceCreateData:\n      description: Opsgenie service data for a create request.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/OpsgenieServiceCreateAttributes'\n        type:\n          $ref: '#/components/schemas/OpsgenieServiceType'\n      required:\n      - type\n      - attributes\n      type: object\n    OpsgenieServiceCreateRequest:\n      description: Create request for an Opsgenie service.\n      properties:\n        data:\n          $ref: '#/components/schemas/OpsgenieServiceCreateData'\n      required:\n      - data\n      type: object\n    OpsgenieServiceRegionType:\n      description: The region for the Opsgenie service.\n      enum:\n      - us\n      - eu\n      - custom\n      example: us\n      type: string\n      x-enum-varnames:\n      - US\n      - EU\n      - CUSTOM\n    OpsgenieServiceResponse:\n      description: Response of an Opsgenie service.\n      properties:\n        data:\n          $ref: '#/components/schemas/OpsgenieServiceResponseData'\n      required:\n      - data\n      type: object\n    OpsgenieServiceResponseAttributes:\n      description: The attributes from an Opsgenie service response.\n      properties:\n        custom_url:\n          description: The custom URL for a custom region.\n          example: null\n          nullable: true\n          type: string\n        name:\n          description: The name for the Opsgenie service.\n          example: fake-opsgenie-service-name\n          type: string\n        region:\n          $ref: '#/components/schemas/OpsgenieServiceRegionType'\n      type: object\n    OpsgenieServiceResponseData:\n      description: Opsgenie service data from a response.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/OpsgenieServiceResponseAttributes'\n        id:\n          description: The ID of the Opsgenie service.\n          example: 596da4af-0563-4097-90ff-07230c3f9db3\n          type: string\n        type:\n          $ref: '#/components/schemas/OpsgenieServiceType'\n      required:\n      - id\n      - type\n      - attributes\n      type: object\n    OpsgenieServiceType:\n      default: opsgenie-service\n      description: Opsgenie service resource type.\n      enum:\n      - opsgenie-service\n      example: opsgenie-service\n      type: string\n      x-enum-varnames:\n      - OPSGENIE_SERVICE\n    OpsgenieServiceUpdateAttributes:\n      description: The Opsgenie service attributes for an update request.\n      properties:\n        custom_url:\n          description: The custom URL for a custom region.\n          example: https://example.com\n          nullable: true\n          type: string\n        name:\n          description: The name for the Opsgenie service.\n          example: fake-opsgenie-service-name\n          type: string\n        opsgenie_api_key:\n          description: The Opsgenie API key for your Opsgenie service.\n          example: 00000000-0000-0000-0000-000000000000\n          type: string\n        region:\n          $ref: '#/components/schemas/OpsgenieServiceRegionType'\n      type: object\n    OpsgenieServiceUpdateData:\n      description: Opsgenie service for an update request.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/OpsgenieServiceUpdateAttributes'\n        id:\n          description: The ID of the Opsgenie service.\n          example: 596da4af-0563-4097-90ff-07230c3f9db3\n          type: string\n        type:\n          $ref: '#/components/schemas/OpsgenieServiceType'\n      required:\n      - id\n      - type\n      - attributes\n      type: object\n    OpsgenieServiceUpdateRequest:\n      description: Update request for an Opsgenie service.\n      properties:\n        data:\n          $ref: '#/components/schemas/OpsgenieServiceUpdateData'\n      required:\n      - data\n      type: object\n    OpsgenieServicesResponse:\n      description: Response with a list of Opsgenie services.\n      properties:\n        data:\n          description: An array of Opsgenie services.\n          example:\n          - attributes:\n              custom_url: null\n              name: fake-opsgenie-service-name\n              region: us\n            id: 596da4af-0563-4097-90ff-07230c3f9db3\n            type: opsgenie-service\n          - attributes:\n              custom_url: null\n              name: fake-opsgenie-service-name-2\n              region: eu\n            id: 0d2937f1-b561-44fa-914a-99910f848014\n            type: opsgenie-service\n          items:\n            $ref: '#/components/schemas/OpsgenieServiceResponseData'\n          type: array\n      required:\n      - data\n      type: object\n    Organization:\n      description: Organization object.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/OrganizationAttributes'\n        id:\n          description: ID of the organization.\n          type: string\n        type:\n          $ref: '#/components/schemas/OrganizationsType'\n      required:\n      - type\n      type: object\n    OrganizationAttributes:\n      description: Attributes of the organization.\n      properties:\n        created_at:\n          description: Creation time of the organization.\n          format: date-time\n          type: string\n        description:\n          description: Description of the organization.\n          type: string\n        disabled:\n          description: Whether or not the organization is disabled.\n          type: boolean\n        modified_at:\n          description: Time of last organization modification.\n          format: date-time\n          type: string\n        name:\n          description: Name of the organization.\n          type: string\n        public_id:\n          description: Public ID of the organization.\n          type: string\n        sharing:\n          description: Sharing type of the organization.\n          type: string\n        url:\n          description: URL of the site that this organization exists at.\n          type: string\n      type: object\n    OrganizationsType:\n      default: orgs\n      description: Organizations resource type.\n      enum:\n      - orgs\n      example: orgs\n      type: string\n      x-enum-varnames:\n      - ORGS\n    Pagination:\n      description: Pagination object.\n      properties:\n        total_count:\n          description: Total count.\n          format: int64\n          type: integer\n        total_filtered_count:\n          description: Total count of elements matched by the filter.\n          format: int64\n          type: integer\n      type: object\n    PartialAPIKey:\n      description: Partial Datadog API key.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/PartialAPIKeyAttributes'\n        id:\n          description: ID of the API key.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/APIKeyRelationships'\n        type:\n          $ref: '#/components/schemas/APIKeysType'\n      type: object\n    PartialAPIKeyAttributes:\n      description: Attributes of a partial API key.\n      properties:\n        created_at:\n          description: Creation date of the API key.\n          example: '2020-11-23T10:00:00.000Z'\n          readOnly: true\n          type: string\n        last4:\n          description: The last four characters of the API key.\n          example: abcd\n          maxLength: 4\n          minLength: 4\n          readOnly: true\n          type: string\n        modified_at:\n          description: Date the API key was last modified.\n          example: '2020-11-23T10:00:00.000Z'\n          readOnly: true\n          type: string\n        name:\n          description: Name of the API key.\n          example: API Key for submitting metrics\n          type: string\n      type: object\n    PartialApplicationKey:\n      description: Partial Datadog application key.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/PartialApplicationKeyAttributes'\n        id:\n          description: ID of the application key.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/ApplicationKeyRelationships'\n        type:\n          $ref: '#/components/schemas/ApplicationKeysType'\n      type: object\n    PartialApplicationKeyAttributes:\n      description: Attributes of a partial application key.\n      properties:\n        created_at:\n          description: Creation date of the application key.\n          example: '2020-11-23T10:00:00.000Z'\n          readOnly: true\n          type: string\n        last4:\n          description: The last four characters of the application key.\n          example: abcd\n          maxLength: 4\n          minLength: 4\n          readOnly: true\n          type: string\n        name:\n          description: Name of the application key.\n          example: Application Key for managing dashboards\n          type: string\n        scopes:\n          description: Array of scopes to grant the application key. This feature\n            is in private beta, please contact Datadog support to enable scopes for\n            your application keys.\n          example:\n          - dashboards_read\n          - dashboards_write\n          - dashboards_public_share\n          items:\n            description: Name of scope.\n            type: string\n          nullable: true\n          type: array\n      type: object\n    PartialApplicationKeyResponse:\n      description: Response for retrieving a partial application key.\n      properties:\n        data:\n          $ref: '#/components/schemas/PartialApplicationKey'\n        included:\n          description: Array of objects related to the application key.\n          items:\n            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'\n          type: array\n      type: object\n    Permission:\n      description: Permission object.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/PermissionAttributes'\n        id:\n          description: ID of the permission.\n          type: string\n        type:\n          $ref: '#/components/schemas/PermissionsType'\n      required:\n      - type\n      type: object\n    PermissionAttributes:\n      description: Attributes of a permission.\n      properties:\n        created:\n          description: Creation time of the permission.\n          format: date-time\n          type: string\n        description:\n          description: Description of the permission.\n          type: string\n        display_name:\n          description: Displayed name for the permission.\n          type: string\n        display_type:\n          description: Display type.\n          type: string\n        group_name:\n          description: Name of the permission group.\n          type: string\n        name:\n          description: Name of the permission.\n          type: string\n        restricted:\n          description: Whether or not the permission is restricted.\n          type: boolean\n      type: object\n    PermissionsResponse:\n      description: Payload with API-returned permissions.\n      properties:\n        data:\n          description: Array of permissions.\n          items:\n            $ref: '#/components/schemas/Permission'\n          type: array\n      type: object\n    PermissionsType:\n      default: permissions\n      description: Permissions resource type.\n      enum:\n      - permissions\n      example: permissions\n      type: string\n      x-enum-varnames:\n      - PERMISSIONS\n    ProcessSummariesMeta:\n      description: Response metadata object.\n      properties:\n        page:\n          $ref: '#/components/schemas/ProcessSummariesMetaPage'\n      type: object\n    ProcessSummariesMetaPage:\n      description: Paging attributes.\n      properties:\n        after:\n          description: 'The cursor used to get the next results, if any. To make the\n            next request, use the same\n\n            parameters with the addition of the `page[cursor]`.'\n          example: 911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd\n          type: string\n        size:\n          description: Number of results returned.\n          format: int32\n          maximum: 10000\n          minimum: 0\n          type: integer\n      type: object\n    ProcessSummariesResponse:\n      description: List of process summaries.\n      properties:\n        data:\n          description: Array of process summary objects.\n          items:\n            $ref: '#/components/schemas/ProcessSummary'\n          type: array\n        meta:\n          $ref: '#/components/schemas/ProcessSummariesMeta'\n      type: object\n    ProcessSummary:\n      description: Process summary object.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ProcessSummaryAttributes'\n        id:\n          description: Process ID.\n          type: string\n        type:\n          $ref: '#/components/schemas/ProcessSummaryType'\n      type: object\n    ProcessSummaryAttributes:\n      description: Attributes for a process summary.\n      properties:\n        cmdline:\n          description: Process command line.\n          type: string\n        host:\n          description: Host running the process.\n          type: string\n        pid:\n          description: Process ID.\n          format: int64\n          type: integer\n        ppid:\n          description: Parent process ID.\n          format: int64\n          type: integer\n        start:\n          description: Time the process was started.\n          type: string\n        tags:\n          description: List of tags associated with the process.\n          items:\n            description: A tag associated with the process.\n            type: string\n          type: array\n        timestamp:\n          description: Time the process was seen.\n          type: string\n        user:\n          description: Process owner.\n          type: string\n      type: object\n    ProcessSummaryType:\n      default: process\n      description: Type of process summary.\n      enum:\n      - process\n      example: process\n      type: string\n      x-enum-varnames:\n      - PROCESS\n    QueryFormula:\n      description: A formula for calculation based on one or more queries.\n      properties:\n        formula:\n          description: Formula string, referencing one or more queries with their\n            name property.\n          example: a+b\n          type: string\n        limit:\n          $ref: '#/components/schemas/FormulaLimit'\n      required:\n      - formula\n      type: object\n    QuerySortOrder:\n      default: desc\n      description: Direction of sort.\n      enum:\n      - asc\n      - desc\n      type: string\n      x-enum-varnames:\n      - ASC\n      - DESC\n    RUMAggregateBucketValue:\n      description: A bucket value, can be either a timeseries or a single value.\n      oneOf:\n      - $ref: '#/components/schemas/RUMAggregateBucketValueSingleString'\n      - $ref: '#/components/schemas/RUMAggregateBucketValueSingleNumber'\n      - $ref: '#/components/schemas/RUMAggregateBucketValueTimeseries'\n    RUMAggregateBucketValueSingleNumber:\n      description: A single number value.\n      format: double\n      type: number\n    RUMAggregateBucketValueSingleString:\n      description: A single string value.\n      type: string\n    RUMAggregateBucketValueTimeseries:\n      description: A timeseries array.\n      items:\n        $ref: '#/components/schemas/RUMAggregateBucketValueTimeseriesPoint'\n      type: array\n      x-generate-alias-as-model: true\n    RUMAggregateBucketValueTimeseriesPoint:\n      description: A timeseries point.\n      properties:\n        time:\n          description: The time value for this point.\n          example: '2020-06-08T11:55:00.123Z'\n          format: date-time\n          type: string\n        value:\n          description: The value for this point.\n          example: 19\n          format: double\n          type: number\n      type: object\n    RUMAggregateRequest:\n      description: The object sent with the request to retrieve aggregation buckets\n        of RUM events from your organization.\n      properties:\n        compute:\n          description: The list of metrics or timeseries to compute for the retrieved\n            buckets.\n          items:\n            $ref: '#/components/schemas/RUMCompute'\n          type: array\n        filter:\n          $ref: '#/components/schemas/RUMQueryFilter'\n        group_by:\n          description: The rules for the group by.\n          items:\n            $ref: '#/components/schemas/RUMGroupBy'\n          type: array\n        options:\n          $ref: '#/components/schemas/RUMQueryOptions'\n        page:\n          $ref: '#/components/schemas/RUMQueryPageOptions'\n      type: object\n    RUMAggregateSort:\n      description: A sort rule.\n      example:\n        aggregation: count\n        order: asc\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/RUMAggregationFunction'\n        metric:\n          description: The metric to sort by (only used for `type=measure`).\n          example: '@duration'\n          type: string\n        order:\n          $ref: '#/components/schemas/RUMSortOrder'\n        type:\n          $ref: '#/components/schemas/RUMAggregateSortType'\n      type: object\n    RUMAggregateSortType:\n      default: alphabetical\n      description: The type of sorting algorithm.\n      enum:\n      - alphabetical\n      - measure\n      type: string\n      x-enum-varnames:\n      - ALPHABETICAL\n      - MEASURE\n    RUMAggregationBucketsResponse:\n      description: The query results.\n      properties:\n        buckets:\n          description: The list of matching buckets, one item per bucket.\n          items:\n            $ref: '#/components/schemas/RUMBucketResponse'\n          type: array\n      type: object\n    RUMAggregationFunction:\n      description: An aggregation function.\n      enum:\n      - count\n      - cardinality\n      - pc75\n      - pc90\n      - pc95\n      - pc98\n      - pc99\n      - sum\n      - min\n      - max\n      - avg\n      - median\n      example: pc90\n      type: string\n      x-enum-varnames:\n      - COUNT\n      - CARDINALITY\n      - PERCENTILE_75\n      - PERCENTILE_90\n      - PERCENTILE_95\n      - PERCENTILE_98\n      - PERCENTILE_99\n      - SUM\n      - MIN\n      - MAX\n      - AVG\n      - MEDIAN\n    RUMAnalyticsAggregateResponse:\n      description: The response object for the RUM events aggregate API endpoint.\n      properties:\n        data:\n          $ref: '#/components/schemas/RUMAggregationBucketsResponse'\n        links:\n          $ref: '#/components/schemas/RUMResponseLinks'\n        meta:\n          $ref: '#/components/schemas/RUMResponseMetadata'\n      type: object\n    RUMApplication:\n      description: RUM application.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RUMApplicationAttributes'\n        id:\n          description: RUM application ID.\n          example: abcd1234-0000-0000-abcd-1234abcd5678\n          type: string\n        type:\n          $ref: '#/components/schemas/RUMApplicationType'\n      required:\n      - attributes\n      - id\n      - type\n      type: object\n    RUMApplicationAttributes:\n      description: RUM application attributes.\n      properties:\n        application_id:\n          description: ID of the RUM application.\n          example: abcd1234-0000-0000-abcd-1234abcd5678\n          type: string\n        client_token:\n          description: Client token of the RUM application.\n          example: abcd1234efgh5678ijkl90abcd1234efgh0\n          type: string\n        created_at:\n          description: Timestamp in ms of the creation date.\n          example: 1659479836169\n          format: int64\n          type: integer\n        created_by_handle:\n          description: Handle of the creator user.\n          example: john.doe\n          type: string\n        hash:\n          description: Hash of the RUM application. Optional.\n          type: string\n        is_active:\n          description: Indicates if the RUM application is active.\n          example: true\n          type: boolean\n        name:\n          description: Name of the RUM application.\n          example: my_rum_application\n          type: string\n        org_id:\n          description: Org ID of the RUM application.\n          example: 999\n          format: int32\n          maximum: 2147483647\n          type: integer\n        type:\n          description: Type of the RUM application. Supported values are `browser`,\n            `ios`, `android`, `react-native`, `flutter`.\n          example: browser\n          type: string\n        updated_at:\n          description: Timestamp in ms of the last update date.\n          example: 1659479836169\n          format: int64\n          type: integer\n        updated_by_handle:\n          description: Handle of the updater user.\n          example: jane.doe\n          type: string\n      required:\n      - application_id\n      - client_token\n      - created_at\n      - created_by_handle\n      - name\n      - org_id\n      - type\n      - updated_at\n      - updated_by_handle\n      type: object\n    RUMApplicationCreate:\n      description: RUM application creation.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RUMApplicationCreateAttributes'\n        type:\n          $ref: '#/components/schemas/RUMApplicationCreateType'\n      required:\n      - attributes\n      - type\n      type: object\n    RUMApplicationCreateAttributes:\n      description: RUM application creation attributes.\n      properties:\n        name:\n          description: Name of the RUM application.\n          example: my_new_rum_application\n          type: string\n        type:\n          description: Type of the RUM application. Supported values are `browser`,\n            `ios`, `android`, `react-native`, `flutter`.\n          example: browser\n          type: string\n      required:\n      - name\n      type: object\n    RUMApplicationCreateRequest:\n      description: RUM application creation request attributes.\n      properties:\n        data:\n          $ref: '#/components/schemas/RUMApplicationCreate'\n      required:\n      - data\n      type: object\n    RUMApplicationCreateType:\n      default: rum_application_create\n      description: RUM application creation type.\n      enum:\n      - rum_application_create\n      example: rum_application_create\n      type: string\n      x-enum-varnames:\n      - RUM_APPLICATION_CREATE\n    RUMApplicationList:\n      description: RUM application list.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RUMApplicationListAttributes'\n        type:\n          $ref: '#/components/schemas/RUMApplicationListType'\n      required:\n      - attributes\n      - type\n      type: object\n    RUMApplicationListAttributes:\n      description: RUM application list attributes.\n      properties:\n        application_id:\n          description: ID of the RUM application.\n          example: abcd1234-0000-0000-abcd-1234abcd5678\n          type: string\n        created_at:\n          description: Timestamp in ms of the creation date.\n          example: 1659479836169\n          format: int64\n          type: integer\n        created_by_handle:\n          description: Handle of the creator user.\n          example: john.doe\n          type: string\n        hash:\n          description: Hash of the RUM application. Optional.\n          type: string\n        is_active:\n          description: Indicates if the RUM application is active.\n          example: true\n          type: boolean\n        name:\n          description: Name of the RUM application.\n          example: my_rum_application\n          type: string\n        org_id:\n          description: Org ID of the RUM application.\n          example: 999\n          format: int32\n          maximum: 2147483647\n          type: integer\n        type:\n          description: Type of the RUM application. Supported values are `browser`,\n            `ios`, `android`, `react-native`, `flutter`.\n          example: browser\n          type: string\n        updated_at:\n          description: Timestamp in ms of the last update date.\n          example: 1659479836169\n          format: int64\n          type: integer\n        updated_by_handle:\n          description: Handle of the updater user.\n          example: jane.doe\n          type: string\n      required:\n      - application_id\n      - created_at\n      - created_by_handle\n      - name\n      - org_id\n      - type\n      - updated_at\n      - updated_by_handle\n      type: object\n    RUMApplicationListType:\n      default: rum_application\n      description: RUM application list type.\n      enum:\n      - rum_application\n      example: rum_application\n      type: string\n      x-enum-varnames:\n      - RUM_APPLICATION\n    RUMApplicationResponse:\n      description: RUM application response.\n      properties:\n        data:\n          $ref: '#/components/schemas/RUMApplication'\n      type: object\n    RUMApplicationType:\n      default: rum_application\n      description: RUM application response type.\n      enum:\n      - rum_application\n      example: rum_application\n      type: string\n      x-enum-varnames:\n      - RUM_APPLICATION\n    RUMApplicationUpdate:\n      description: RUM application update.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RUMApplicationUpdateAttributes'\n        id:\n          description: RUM application ID.\n          example: abcd1234-0000-0000-abcd-1234abcd5678\n          type: string\n        type:\n          $ref: '#/components/schemas/RUMApplicationUpdateType'\n      required:\n      - id\n      - type\n      type: object\n    RUMApplicationUpdateAttributes:\n      description: RUM application update attributes.\n      properties:\n        name:\n          description: Name of the RUM application.\n          example: updated_name_for_my_existing_rum_application\n          type: string\n        type:\n          description: Type of the RUM application. Supported values are `browser`,\n            `ios`, `android`, `react-native`, `flutter`.\n          example: browser\n          type: string\n      type: object\n    RUMApplicationUpdateRequest:\n      description: RUM application update request.\n      properties:\n        data:\n          $ref: '#/components/schemas/RUMApplicationUpdate'\n      required:\n      - data\n      type: object\n    RUMApplicationUpdateType:\n      default: rum_application_update\n      description: RUM application update type.\n      enum:\n      - rum_application_update\n      example: rum_application_update\n      type: string\n      x-enum-varnames:\n      - RUM_APPLICATION_UPDATE\n    RUMApplicationsResponse:\n      description: RUM applications response.\n      properties:\n        data:\n          description: RUM applications array response.\n          items:\n            $ref: '#/components/schemas/RUMApplicationList'\n          type: array\n      type: object\n    RUMBucketResponse:\n      description: Bucket values.\n      properties:\n        by:\n          additionalProperties:\n            description: The values for each group-by.\n            type: string\n          description: The key-value pairs for each group-by.\n          example:\n            '@session.type': user\n            '@type': view\n          type: object\n        computes:\n          additionalProperties:\n            $ref: '#/components/schemas/RUMAggregateBucketValue'\n          description: A map of the metric name to value for regular compute, or a\n            list of values for a timeseries.\n          type: object\n      type: object\n    RUMCompute:\n      description: A compute rule to compute metrics or timeseries.\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/RUMAggregationFunction'\n        interval:\n          description: 'The time buckets'' size (only used for type=timeseries)\n\n            Defaults to a resolution of 150 points.'\n          example: 5m\n          type: string\n        metric:\n          description: The metric to use.\n          example: '@duration'\n          type: string\n        type:\n          $ref: '#/components/schemas/RUMComputeType'\n      required:\n      - aggregation\n      type: object\n    RUMComputeType:\n      default: total\n      description: The type of compute.\n      enum:\n      - timeseries\n      - total\n      type: string\n      x-enum-varnames:\n      - TIMESERIES\n      - TOTAL\n    RUMEvent:\n      description: Object description of a RUM event after being processed and stored\n        by Datadog.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RUMEventAttributes'\n        id:\n          description: Unique ID of the event.\n          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\n          type: string\n        type:\n          $ref: '#/components/schemas/RUMEventType'\n      type: object\n    RUMEventAttributes:\n      description: JSON object containing all event attributes and their associated\n        values.\n      properties:\n        attributes:\n          additionalProperties: {}\n          description: JSON object of attributes from RUM events.\n          example:\n            customAttribute: 123\n            duration: 2345\n          type: object\n        service:\n          description: 'The name of the application or service generating RUM events.\n\n            It is used to switch from RUM to APM, so make sure you define the same\n\n            value when you use both products.'\n          example: web-app\n          type: string\n        tags:\n          description: Array of tags associated with your event.\n          example:\n          - team:A\n          items:\n            description: Tag associated with your event.\n            type: string\n          type: array\n        timestamp:\n          description: Timestamp of your event.\n          example: '2019-01-02T09:42:36.320Z'\n          format: date-time\n          type: string\n      type: object\n    RUMEventType:\n      default: rum\n      description: Type of the event.\n      enum:\n      - rum\n      example: rum\n      type: string\n      x-enum-varnames:\n      - RUM\n    RUMEventsResponse:\n      description: Response object with all events matching the request and pagination\n        information.\n      properties:\n        data:\n          description: Array of events matching the request.\n          items:\n            $ref: '#/components/schemas/RUMEvent'\n          type: array\n        links:\n          $ref: '#/components/schemas/RUMResponseLinks'\n        meta:\n          $ref: '#/components/schemas/RUMResponseMetadata'\n      type: object\n    RUMGroupBy:\n      description: A group-by rule.\n      properties:\n        facet:\n          description: The name of the facet to use (required).\n          example: '@view.time_spent'\n          type: string\n        histogram:\n          $ref: '#/components/schemas/RUMGroupByHistogram'\n        limit:\n          default: 10\n          description: The maximum buckets to return for this group-by.\n          format: int64\n          type: integer\n        missing:\n          $ref: '#/components/schemas/RUMGroupByMissing'\n        sort:\n          $ref: '#/components/schemas/RUMAggregateSort'\n        total:\n          $ref: '#/components/schemas/RUMGroupByTotal'\n      required:\n      - facet\n      type: object\n    RUMGroupByHistogram:\n      description: 'Used to perform a histogram computation (only for measure facets).\n\n        Note: At most 100 buckets are allowed, the number of buckets is (max - min)/interval.'\n      properties:\n        interval:\n          description: The bin size of the histogram buckets.\n          example: 10\n          format: double\n          type: number\n        max:\n          description: 'The maximum value for the measure used in the histogram\n\n            (values greater than this one are filtered out).'\n          example: 100\n          format: double\n          type: number\n        min:\n          description: 'The minimum value for the measure used in the histogram\n\n            (values smaller than this one are filtered out).'\n          example: 50\n          format: double\n          type: number\n      required:\n      - interval\n      - min\n      - max\n      type: object\n    RUMGroupByMissing:\n      description: The value to use for logs that don't have the facet used to group\n        by.\n      oneOf:\n      - $ref: '#/components/schemas/RUMGroupByMissingString'\n      - $ref: '#/components/schemas/RUMGroupByMissingNumber'\n    RUMGroupByMissingNumber:\n      description: The missing value to use if there is a number valued facet.\n      format: double\n      type: number\n    RUMGroupByMissingString:\n      description: The missing value to use if there is string valued facet.\n      type: string\n    RUMGroupByTotal:\n      default: false\n      description: A resulting object to put the given computes in over all the matching\n        records.\n      oneOf:\n      - $ref: '#/components/schemas/RUMGroupByTotalBoolean'\n      - $ref: '#/components/schemas/RUMGroupByTotalString'\n      - $ref: '#/components/schemas/RUMGroupByTotalNumber'\n    RUMGroupByTotalBoolean:\n      description: If set to true, creates an additional bucket labeled \"$facet_total\".\n      type: boolean\n    RUMGroupByTotalNumber:\n      description: A number to use as the key value for the total bucket.\n      format: double\n      type: number\n    RUMGroupByTotalString:\n      description: A string to use as the key value for the total bucket.\n      type: string\n    RUMQueryFilter:\n      description: The search and filter query settings.\n      properties:\n        from:\n          default: now-15m\n          description: The minimum time for the requested events; supports date (in\n            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format with full date,\n            hours, minutes, and the `Z` UTC indicator - seconds and fractional seconds\n            are optional), math, and regular timestamps (in milliseconds).\n          example: now-15m\n          type: string\n        query:\n          default: '*'\n          description: The search query following the RUM search syntax.\n          example: '@type:session AND @session.type:user'\n          type: string\n        to:\n          default: now\n          description: The maximum time for the requested events; supports date (in\n            [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format with full date,\n            hours, minutes, and the `Z` UTC indicator - seconds and fractional seconds\n            are optional), math, and regular timestamps (in milliseconds).\n          example: now\n          type: string\n      type: object\n    RUMQueryOptions:\n      description: 'Global query options that are used during the query.\n\n        Note: Only supply timezone or time offset, not both. Otherwise, the query\n        fails.'\n      properties:\n        time_offset:\n          description: The time offset (in seconds) to apply to the query.\n          format: int64\n          type: integer\n        timezone:\n          default: UTC\n          description: The timezone can be specified as GMT, UTC, an offset from UTC\n            (like UTC+1), or as a Timezone Database identifier (like America/New_York).\n          example: GMT\n          type: string\n      type: object\n    RUMQueryPageOptions:\n      description: Paging attributes for listing events.\n      properties:\n        cursor:\n          description: List following results with a cursor provided in the previous\n            query.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n        limit:\n          default: 10\n          description: Maximum number of events in the response.\n          example: 25\n          format: int32\n          maximum: 1000\n          type: integer\n      type: object\n    RUMResponseLinks:\n      description: Links attributes.\n      properties:\n        next:\n          description: 'Link for the next set of results. Note that the request can\n            also be made using the\n\n            POST endpoint.'\n          example: https://app.datadoghq.com/api/v2/rum/event?filter[query]=foo\u0026page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    RUMResponseMetadata:\n      description: The metadata associated with a request.\n      properties:\n        elapsed:\n          description: The time elapsed in milliseconds.\n          example: 132\n          format: int64\n          type: integer\n        page:\n          $ref: '#/components/schemas/RUMResponsePage'\n        request_id:\n          description: The identifier of the request.\n          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR\n          type: string\n        status:\n          $ref: '#/components/schemas/RUMResponseStatus'\n        warnings:\n          description: 'A list of warnings (non-fatal errors) encountered. Partial\n            results may return if\n\n            warnings are present in the response.'\n          items:\n            $ref: '#/components/schemas/RUMWarning'\n          type: array\n      type: object\n    RUMResponsePage:\n      description: Paging attributes.\n      properties:\n        after:\n          description: The cursor to use to get the next results, if any. To make\n            the next request, use the same parameters with the addition of `page[cursor]`.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    RUMResponseStatus:\n      description: The status of the response.\n      enum:\n      - done\n      - timeout\n      example: done\n      type: string\n      x-enum-varnames:\n      - DONE\n      - TIMEOUT\n    RUMSearchEventsRequest:\n      description: The request for a RUM events list.\n      properties:\n        filter:\n          $ref: '#/components/schemas/RUMQueryFilter'\n        options:\n          $ref: '#/components/schemas/RUMQueryOptions'\n        page:\n          $ref: '#/components/schemas/RUMQueryPageOptions'\n        sort:\n          $ref: '#/components/schemas/RUMSort'\n      type: object\n    RUMSort:\n      description: Sort parameters when querying events.\n      enum:\n      - timestamp\n      - -timestamp\n      type: string\n      x-enum-varnames:\n      - TIMESTAMP_ASCENDING\n      - TIMESTAMP_DESCENDING\n    RUMSortOrder:\n      description: The order to use, ascending or descending.\n      enum:\n      - asc\n      - desc\n      example: asc\n      type: string\n      x-enum-varnames:\n      - ASCENDING\n      - DESCENDING\n    RUMWarning:\n      description: A warning message indicating something that went wrong with the\n        query.\n      properties:\n        code:\n          description: A unique code for this type of warning.\n          example: unknown_index\n          type: string\n        detail:\n          description: A detailed explanation of this specific warning.\n          example: 'indexes: foo, bar'\n          type: string\n        title:\n          description: A short human-readable summary of the warning.\n          example: One or several indexes are missing or invalid, results hold data\n            from the other indexes\n          type: string\n      type: object\n    RelationshipToIncidentAttachment:\n      description: A relationship reference for attachments.\n      properties:\n        data:\n          description: An array of incident attachments.\n          items:\n            $ref: '#/components/schemas/RelationshipToIncidentAttachmentData'\n          type: array\n      required:\n      - data\n      type: object\n    RelationshipToIncidentAttachmentData:\n      description: The attachment relationship data.\n      properties:\n        id:\n          description: A unique identifier that represents the attachment.\n          example: 00000000-0000-abcd-1000-000000000000\n          type: string\n        type:\n          $ref: '#/components/schemas/IncidentAttachmentType'\n      required:\n      - id\n      - type\n      type: object\n    RelationshipToIncidentIntegrationMetadataData:\n      description: A relationship reference for an integration metadata object.\n      example:\n        id: 00000000-abcd-0002-0000-000000000000\n        type: incident_integrations\n      properties:\n        id:\n          description: A unique identifier that represents the integration metadata.\n          example: 00000000-abcd-0001-0000-000000000000\n          type: string\n        type:\n          $ref: '#/components/schemas/IncidentIntegrationMetadataType'\n      required:\n      - id\n      - type\n      type: object\n    RelationshipToIncidentIntegrationMetadatas:\n      description: A relationship reference for multiple integration metadata objects.\n      example:\n        data:\n        - id: 00000000-abcd-0005-0000-000000000000\n          type: incident_integrations\n        - id: 00000000-abcd-0006-0000-000000000000\n          type: incident_integrations\n      properties:\n        data:\n          description: The integration metadata relationship array\n          example:\n          - id: 00000000-abcd-0003-0000-000000000000\n            type: incident_integrations\n          - id: 00000000-abcd-0004-0000-000000000000\n            type: incident_integrations\n          items:\n            $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadataData'\n          type: array\n      required:\n      - data\n      type: object\n    RelationshipToIncidentPostmortem:\n      description: A relationship reference for postmortems.\n      example:\n        data:\n          id: 00000000-0000-abcd-3000-000000000000\n          type: incident_postmortems\n      properties:\n        data:\n          $ref: '#/components/schemas/RelationshipToIncidentPostmortemData'\n      required:\n      - data\n      type: object\n    RelationshipToIncidentPostmortemData:\n      description: The postmortem relationship data.\n      example:\n        id: 00000000-0000-abcd-2000-000000000000\n        type: incident_postmortems\n      properties:\n        id:\n          description: A unique identifier that represents the postmortem.\n          example: 00000000-0000-abcd-1000-000000000000\n          type: string\n        type:\n          $ref: '#/components/schemas/IncidentPostmortemType'\n      required:\n      - id\n      - type\n      type: object\n    RelationshipToOrganization:\n      description: Relationship to an organization.\n      properties:\n        data:\n          $ref: '#/components/schemas/RelationshipToOrganizationData'\n      required:\n      - data\n      type: object\n    RelationshipToOrganizationData:\n      description: Relationship to organization object.\n      properties:\n        id:\n          description: ID of the organization.\n          example: 00000000-0000-beef-0000-000000000000\n          type: string\n        type:\n          $ref: '#/components/schemas/OrganizationsType'\n      required:\n      - id\n      - type\n      type: object\n    RelationshipToOrganizations:\n      description: Relationship to organizations.\n      properties:\n        data:\n          description: Relationships to organization objects.\n          example: []\n          items:\n            $ref: '#/components/schemas/RelationshipToOrganizationData'\n          type: array\n      required:\n      - data\n      type: object\n    RelationshipToPermission:\n      description: Relationship to a permissions object.\n      properties:\n        data:\n          $ref: '#/components/schemas/RelationshipToPermissionData'\n      type: object\n    RelationshipToPermissionData:\n      description: Relationship to permission object.\n      properties:\n        id:\n          description: ID of the permission.\n          type: string\n        type:\n          $ref: '#/components/schemas/PermissionsType'\n      type: object\n    RelationshipToPermissions:\n      description: Relationship to multiple permissions objects.\n      properties:\n        data:\n          description: Relationships to permission objects.\n          items:\n            $ref: '#/components/schemas/RelationshipToPermissionData'\n          type: array\n      type: object\n    RelationshipToRole:\n      description: Relationship to role.\n      properties:\n        data:\n          $ref: '#/components/schemas/RelationshipToRoleData'\n      type: object\n    RelationshipToRoleData:\n      description: Relationship to role object.\n      properties:\n        id:\n          description: The unique identifier of the role.\n          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d\n          type: string\n        type:\n          $ref: '#/components/schemas/RolesType'\n      type: object\n    RelationshipToRoles:\n      description: Relationship to roles.\n      properties:\n        data:\n          description: An array containing type and the unique identifier of a role.\n          items:\n            $ref: '#/components/schemas/RelationshipToRoleData'\n          type: array\n      type: object\n    RelationshipToSAMLAssertionAttribute:\n      description: AuthN Mapping relationship to SAML Assertion Attribute.\n      properties:\n        data:\n          $ref: '#/components/schemas/RelationshipToSAMLAssertionAttributeData'\n      required:\n      - data\n      type: object\n    RelationshipToSAMLAssertionAttributeData:\n      description: Data of AuthN Mapping relationship to SAML Assertion Attribute.\n      properties:\n        id:\n          description: The ID of the SAML assertion attribute.\n          example: '0'\n          type: string\n        type:\n          $ref: '#/components/schemas/SAMLAssertionAttributesType'\n      required:\n      - id\n      - type\n      type: object\n    RelationshipToUser:\n      description: Relationship to user.\n      properties:\n        data:\n          $ref: '#/components/schemas/RelationshipToUserData'\n      required:\n      - data\n      type: object\n    RelationshipToUserData:\n      description: Relationship to user object.\n      properties:\n        id:\n          description: A unique identifier that represents the user.\n          example: 00000000-0000-0000-2345-000000000000\n          type: string\n        type:\n          $ref: '#/components/schemas/UsersType'\n      required:\n      - id\n      - type\n      type: object\n    RelationshipToUsers:\n      description: Relationship to users.\n      properties:\n        data:\n          description: Relationships to user objects.\n          example: []\n          items:\n            $ref: '#/components/schemas/RelationshipToUserData'\n          type: array\n      required:\n      - data\n      type: object\n    ResponseMetaAttributes:\n      description: Object describing meta attributes of response.\n      properties:\n        page:\n          $ref: '#/components/schemas/Pagination'\n      type: object\n    Role:\n      description: Role object returned by the API.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RoleAttributes'\n        id:\n          description: The unique identifier of the role.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/RoleResponseRelationships'\n        type:\n          $ref: '#/components/schemas/RolesType'\n      required:\n      - type\n      type: object\n    RoleAttributes:\n      description: Attributes of the role.\n      properties:\n        created_at:\n          description: Creation time of the role.\n          format: date-time\n          readOnly: true\n          type: string\n        modified_at:\n          description: Time of last role modification.\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          description: The name of the role. The name is neither unique nor a stable\n            identifier of the role.\n          type: string\n        user_count:\n          description: Number of users with that role.\n          format: int64\n          readOnly: true\n          type: integer\n      type: object\n    RoleClone:\n      description: Data for the clone role request.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RoleCloneAttributes'\n        type:\n          $ref: '#/components/schemas/RolesType'\n      required:\n      - type\n      - attributes\n      type: object\n    RoleCloneAttributes:\n      description: Attributes required to create a new role by cloning an existing\n        one.\n      properties:\n        name:\n          description: Name of the new role that is cloned.\n          example: cloned-role\n          type: string\n      required:\n      - name\n      type: object\n    RoleCloneRequest:\n      description: Request to create a role by cloning an existing role.\n      properties:\n        data:\n          $ref: '#/components/schemas/RoleClone'\n      required:\n      - data\n      type: object\n    RoleCreateAttributes:\n      description: Attributes of the created role.\n      properties:\n        created_at:\n          description: Creation time of the role.\n          format: date-time\n          readOnly: true\n          type: string\n        modified_at:\n          description: Time of last role modification.\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          description: Name of the role.\n          example: developers\n          type: string\n      required:\n      - name\n      type: object\n    RoleCreateData:\n      description: Data related to the creation of a role.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RoleCreateAttributes'\n        relationships:\n          $ref: '#/components/schemas/RoleRelationships'\n        type:\n          $ref: '#/components/schemas/RolesType'\n      required:\n      - attributes\n      type: object\n    RoleCreateRequest:\n      description: Create a role.\n      properties:\n        data:\n          $ref: '#/components/schemas/RoleCreateData'\n      required:\n      - data\n      type: object\n    RoleCreateResponse:\n      description: Response containing information about a created role.\n      properties:\n        data:\n          $ref: '#/components/schemas/RoleCreateResponseData'\n      type: object\n    RoleCreateResponseData:\n      description: Role object returned by the API.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RoleCreateAttributes'\n        id:\n          description: The unique identifier of the role.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/RoleResponseRelationships'\n        type:\n          $ref: '#/components/schemas/RolesType'\n      required:\n      - type\n      type: object\n    RoleRelationships:\n      description: Relationships of the role object.\n      properties:\n        permissions:\n          $ref: '#/components/schemas/RelationshipToPermissions'\n        users:\n          $ref: '#/components/schemas/RelationshipToUsers'\n      type: object\n    RoleResponse:\n      description: Response containing information about a single role.\n      properties:\n        data:\n          $ref: '#/components/schemas/Role'\n      type: object\n    RoleResponseRelationships:\n      description: Relationships of the role object returned by the API.\n      properties:\n        permissions:\n          $ref: '#/components/schemas/RelationshipToPermissions'\n      type: object\n    RoleUpdateAttributes:\n      description: Attributes of the role.\n      properties:\n        created_at:\n          description: Creation time of the role.\n          format: date-time\n          readOnly: true\n          type: string\n        modified_at:\n          description: Time of last role modification.\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          description: Name of the role.\n          type: string\n      type: object\n    RoleUpdateData:\n      description: Data related to the update of a role.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RoleUpdateAttributes'\n        id:\n          description: The unique identifier of the role.\n          example: 00000000-0000-1111-0000-000000000000\n          type: string\n        relationships:\n          $ref: '#/components/schemas/RoleRelationships'\n        type:\n          $ref: '#/components/schemas/RolesType'\n      required:\n      - attributes\n      - type\n      - id\n      type: object\n    RoleUpdateRequest:\n      description: Update a role.\n      properties:\n        data:\n          $ref: '#/components/schemas/RoleUpdateData'\n      required:\n      - data\n      type: object\n    RoleUpdateResponse:\n      description: Response containing information about an updated role.\n      properties:\n        data:\n          $ref: '#/components/schemas/RoleUpdateResponseData'\n      type: object\n    RoleUpdateResponseData:\n      description: Role object returned by the API.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/RoleUpdateAttributes'\n        id:\n          description: The unique identifier of the role.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/RoleResponseRelationships'\n        type:\n          $ref: '#/components/schemas/RolesType'\n      required:\n      - type\n      type: object\n    RolesResponse:\n      description: Response containing information about multiple roles.\n      properties:\n        data:\n          description: Array of returned roles.\n          items:\n            $ref: '#/components/schemas/Role'\n          type: array\n        meta:\n          $ref: '#/components/schemas/ResponseMetaAttributes'\n      type: object\n    RolesSort:\n      default: name\n      description: Sorting options for roles.\n      enum:\n      - name\n      - -name\n      - modified_at\n      - -modified_at\n      - user_count\n      - -user_count\n      type: string\n      x-enum-varnames:\n      - NAME_ASCENDING\n      - NAME_DESCENDING\n      - MODIFIED_AT_ASCENDING\n      - MODIFIED_AT_DESCENDING\n      - USER_COUNT_ASCENDING\n      - USER_COUNT_DESCENDING\n    RolesType:\n      default: roles\n      description: Roles type.\n      enum:\n      - roles\n      example: roles\n      type: string\n      x-enum-varnames:\n      - ROLES\n    SAMLAssertionAttribute:\n      description: SAML assertion attribute.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SAMLAssertionAttributeAttributes'\n        id:\n          description: The ID of the SAML assertion attribute.\n          example: '0'\n          type: string\n        type:\n          $ref: '#/components/schemas/SAMLAssertionAttributesType'\n      required:\n      - id\n      - type\n      type: object\n    SAMLAssertionAttributeAttributes:\n      description: Key/Value pair of attributes used in SAML assertion attributes.\n      properties:\n        attribute_key:\n          description: Key portion of a key/value pair of the attribute sent from\n            the Identity Provider.\n          example: member-of\n          type: string\n        attribute_value:\n          description: Value portion of a key/value pair of the attribute sent from\n            the Identity Provider.\n          example: Development\n          type: string\n      type: object\n    SAMLAssertionAttributesType:\n      default: saml_assertion_attributes\n      description: SAML assertion attributes resource type.\n      enum:\n      - saml_assertion_attributes\n      example: saml_assertion_attributes\n      type: string\n      x-enum-varnames:\n      - SAML_ASSERTION_ATTRIBUTES\n    ScalarColumn:\n      description: A single column in a scalar query response.\n      properties:\n        unit:\n          description: List of units.\n          items:\n            $ref: '#/components/schemas/Unit'\n          type: array\n        values:\n          description: Array of values for each group-by combination that results\n            from one formula or query.\n          items:\n            description: An individual value for a given column and group-by.\n            format: double\n            type: number\n          type: array\n      type: object\n    ScalarFormulaQueryRequest:\n      description: A wrapper request around one scalar query to be executed.\n      properties:\n        data:\n          $ref: '#/components/schemas/ScalarFormulaRequest'\n      required:\n      - data\n      type: object\n    ScalarFormulaQueryResponse:\n      description: A message containing one or more responses to scalar queries.\n      properties:\n        data:\n          $ref: '#/components/schemas/ScalarResponse'\n        errors:\n          description: An error generated when processing a request.\n          type: string\n      type: object\n    ScalarFormulaRequest:\n      description: A single scalar query to be executed.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ScalarFormulaRequestAttributes'\n        type:\n          $ref: '#/components/schemas/ScalarFormulaRequestType'\n      required:\n      - type\n      - attributes\n      type: object\n    ScalarFormulaRequestAttributes:\n      description: The object describing a scalar formula request.\n      properties:\n        formulas:\n          description: List of formulas to be calculated and returned as responses.\n          items:\n            $ref: '#/components/schemas/QueryFormula'\n          type: array\n        from:\n          description: Start date (inclusive) of the query in milliseconds since the\n            Unix epoch.\n          example: 1568899800000\n          format: int64\n          type: integer\n        queries:\n          $ref: '#/components/schemas/ScalarFormulaRequestQueries'\n        to:\n          description: End date (exclusive) of the query in milliseconds since the\n            Unix epoch.\n          example: 1568923200000\n          format: int64\n          type: integer\n      required:\n      - to\n      - from\n      - queries\n      type: object\n    ScalarFormulaRequestQueries:\n      description: List of queries to be run and used as inputs to the formulas.\n      items:\n        $ref: '#/components/schemas/ScalarQuery'\n      type: array\n    ScalarFormulaRequestType:\n      default: scalar_request\n      description: The type of the resource. The value should always be scalar_request.\n      enum:\n      - scalar_request\n      example: scalar_request\n      type: string\n      x-enum-varnames:\n      - SCALAR_REQUEST\n    ScalarFormulaResponseAtrributes:\n      description: The object describing a scalar response.\n      properties:\n        columns:\n          description: List of response columns, each corresponding to an individual\n            formula or query in the request and with values in parallel arrays matching\n            the series list.\n          items:\n            $ref: '#/components/schemas/ScalarColumn'\n          type: array\n        series:\n          $ref: '#/components/schemas/ScalarResponseSeriesList'\n      type: object\n    ScalarFormulaResponseType:\n      default: scalar_response\n      description: The type of the resource. The value should always be scalar_response.\n      enum:\n      - scalar_response\n      example: scalar_response\n      type: string\n      x-enum-varnames:\n      - SCALAR_RESPONSE\n    ScalarQuery:\n      description: An individual scalar query to one of the basic Datadog data sources.\n      oneOf:\n      - $ref: '#/components/schemas/MetricsScalarQuery'\n      - $ref: '#/components/schemas/EventsScalarQuery'\n      type: object\n    ScalarResponse:\n      description: A message containing the response to a scalar query.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ScalarFormulaResponseAtrributes'\n        type:\n          $ref: '#/components/schemas/ScalarFormulaResponseType'\n      type: object\n    ScalarResponseSeriesList:\n      description: List of group-by tags for the response. Parallel array to the values\n        in each scalar column.\n      items:\n        $ref: '#/components/schemas/GroupTags'\n      type: array\n    SecurityFilter:\n      description: The security filter's properties.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SecurityFilterAttributes'\n        id:\n          $ref: '#/components/schemas/SecurityFilterID'\n        type:\n          $ref: '#/components/schemas/SecurityFilterType'\n      type: object\n    SecurityFilterAttributes:\n      description: The object describing a security filter.\n      properties:\n        exclusion_filters:\n          description: The list of exclusion filters applied in this security filter.\n          items:\n            $ref: '#/components/schemas/SecurityFilterExclusionFilterResponse'\n          type: array\n        filtered_data_type:\n          $ref: '#/components/schemas/SecurityFilterFilteredDataType'\n        is_builtin:\n          description: Whether the security filter is the built-in filter.\n          example: false\n          type: boolean\n        is_enabled:\n          description: Whether the security filter is enabled.\n          example: false\n          type: boolean\n        name:\n          description: The security filter name.\n          example: Custom security filter\n          type: string\n        query:\n          description: The security filter query. Logs accepted by this query will\n            be accepted by this filter.\n          example: service:api\n          type: string\n        version:\n          description: The version of the security filter.\n          example: 1\n          format: int32\n          maximum: 2147483647\n          type: integer\n      type: object\n    SecurityFilterCreateAttributes:\n      description: Object containing the attributes of the security filter to be created.\n      properties:\n        exclusion_filters:\n          description: Exclusion filters to exclude some logs from the security filter.\n          example:\n          - name: Exclude staging\n            query: source:staging\n          items:\n            $ref: '#/components/schemas/SecurityFilterExclusionFilter'\n          type: array\n        filtered_data_type:\n          $ref: '#/components/schemas/SecurityFilterFilteredDataType'\n        is_enabled:\n          description: Whether the security filter is enabled.\n          example: true\n          type: boolean\n        name:\n          description: The name of the security filter.\n          example: Custom security filter\n          type: string\n        query:\n          description: The query of the security filter.\n          example: service:api\n          type: string\n      required:\n      - name\n      - query\n      - exclusion_filters\n      - filtered_data_type\n      - is_enabled\n      type: object\n    SecurityFilterCreateData:\n      description: Object for a single security filter.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SecurityFilterCreateAttributes'\n        type:\n          $ref: '#/components/schemas/SecurityFilterType'\n      required:\n      - type\n      - attributes\n      type: object\n    SecurityFilterCreateRequest:\n      description: Request object that includes the security filter that you would\n        like to create.\n      properties:\n        data:\n          $ref: '#/components/schemas/SecurityFilterCreateData'\n      required:\n      - data\n      type: object\n    SecurityFilterExclusionFilter:\n      description: Exclusion filter for the security filter.\n      example:\n        name: Exclude staging\n        query: source:staging\n      properties:\n        name:\n          description: Exclusion filter name.\n          example: Exclude staging\n          type: string\n        query:\n          description: Exclusion filter query. Logs that match this query are excluded\n            from the security filter.\n          example: source:staging\n          type: string\n      required:\n      - name\n      - query\n      type: object\n    SecurityFilterExclusionFilterResponse:\n      description: A single exclusion filter.\n      properties:\n        name:\n          description: The exclusion filter name.\n          example: Exclude staging\n          type: string\n        query:\n          description: The exclusion filter query.\n          example: source:staging\n          type: string\n      type: object\n    SecurityFilterFilteredDataType:\n      description: The filtered data type.\n      enum:\n      - logs\n      example: logs\n      type: string\n      x-enum-varnames:\n      - LOGS\n    SecurityFilterID:\n      description: The ID of the security filter.\n      example: 3dd-0uc-h1s\n      type: string\n    SecurityFilterMeta:\n      description: Optional metadata associated to the response.\n      properties:\n        warning:\n          description: A warning message.\n          example: All the security filters are disabled. As a result, no logs are\n            being analyzed.\n          type: string\n      type: object\n    SecurityFilterResponse:\n      description: Response object which includes a single security filter.\n      properties:\n        data:\n          $ref: '#/components/schemas/SecurityFilter'\n        meta:\n          $ref: '#/components/schemas/SecurityFilterMeta'\n      type: object\n    SecurityFilterType:\n      default: security_filters\n      description: The type of the resource. The value should always be `security_filters`.\n      enum:\n      - security_filters\n      example: security_filters\n      type: string\n      x-enum-varnames:\n      - SECURITY_FILTERS\n    SecurityFilterUpdateAttributes:\n      description: The security filters properties to be updated.\n      properties:\n        exclusion_filters:\n          description: Exclusion filters to exclude some logs from the security filter.\n          example: []\n          items:\n            $ref: '#/components/schemas/SecurityFilterExclusionFilter'\n          type: array\n        filtered_data_type:\n          $ref: '#/components/schemas/SecurityFilterFilteredDataType'\n        is_enabled:\n          description: Whether the security filter is enabled.\n          example: true\n          type: boolean\n        name:\n          description: The name of the security filter.\n          example: Custom security filter\n          type: string\n        query:\n          description: The query of the security filter.\n          example: service:api\n          type: string\n        version:\n          description: The version of the security filter to update.\n          example: 1\n          format: int32\n          maximum: 2147483647\n          type: integer\n      type: object\n    SecurityFilterUpdateData:\n      description: The new security filter properties.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SecurityFilterUpdateAttributes'\n        type:\n          $ref: '#/components/schemas/SecurityFilterType'\n      required:\n      - type\n      - attributes\n      type: object\n    SecurityFilterUpdateRequest:\n      description: The new security filter body.\n      properties:\n        data:\n          $ref: '#/components/schemas/SecurityFilterUpdateData'\n      required:\n      - data\n      type: object\n    SecurityFiltersResponse:\n      description: All the available security filters objects.\n      properties:\n        data:\n          description: A list of security filters objects.\n          items:\n            $ref: '#/components/schemas/SecurityFilter'\n          type: array\n        meta:\n          $ref: '#/components/schemas/SecurityFilterMeta'\n      type: object\n    SecurityMonitoringFilter:\n      description: The rule's suppression filter.\n      properties:\n        action:\n          $ref: '#/components/schemas/SecurityMonitoringFilterAction'\n        query:\n          description: Query for selecting logs to apply the filtering action.\n          type: string\n      type: object\n    SecurityMonitoringFilterAction:\n      description: The type of filtering action.\n      enum:\n      - require\n      - suppress\n      type: string\n      x-enum-varnames:\n      - REQUIRE\n      - SUPPRESS\n    SecurityMonitoringListRulesResponse:\n      description: List of rules.\n      properties:\n        data:\n          description: Array containing the list of rules.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringRuleResponse'\n          type: array\n        meta:\n          $ref: '#/components/schemas/ResponseMetaAttributes'\n      type: object\n    SecurityMonitoringRuleCase:\n      description: Case when signal is generated.\n      properties:\n        condition:\n          description: 'A rule case contains logical operations (`\u003e`,`\u003e=`, `\u0026\u0026`, `||`)\n            to determine if a signal should be generated\n\n            based on the event counts in the previously defined queries.'\n          type: string\n        name:\n          description: Name of the case.\n          type: string\n        notifications:\n          description: Notification targets for each rule case.\n          items:\n            description: Notification.\n            type: string\n          type: array\n        status:\n          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'\n      type: object\n    SecurityMonitoringRuleCaseCreate:\n      description: Case when signal is generated.\n      properties:\n        condition:\n          description: 'A rule case contains logical operations (`\u003e`,`\u003e=`, `\u0026\u0026`, `||`)\n            to determine if a signal should be generated\n\n            based on the event counts in the previously defined queries.'\n          type: string\n        name:\n          description: Name of the case.\n          type: string\n        notifications:\n          description: Notification targets for each rule case.\n          items:\n            description: Notification.\n            type: string\n          type: array\n        status:\n          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'\n      required:\n      - status\n      type: object\n    SecurityMonitoringRuleCreatePayload:\n      description: Create a new rule.\n      oneOf:\n      - $ref: '#/components/schemas/SecurityMonitoringStandardRuleCreatePayload'\n      - $ref: '#/components/schemas/SecurityMonitoringSignalRuleCreatePayload'\n      - $ref: '#/components/schemas/CloudConfigurationRuleCreatePayload'\n      type: object\n    SecurityMonitoringRuleDecreaseCriticalityBasedOnEnv:\n      description: 'If true, signals in non-production environments have a lower severity\n        than what is defined by the rule case, which can reduce signal noise.\n\n        The severity is decreased by one level: `CRITICAL` in production becomes `HIGH`\n        in non-production, `HIGH` becomes `MEDIUM` and so on. `INFO` remains `INFO`.\n\n        The decrement is applied when the environment tag of the signal starts with\n        `staging`, `test` or `dev`.'\n      example: false\n      type: boolean\n    SecurityMonitoringRuleDetectionMethod:\n      description: The detection method.\n      enum:\n      - threshold\n      - new_value\n      - anomaly_detection\n      - impossible_travel\n      - hardcoded\n      type: string\n      x-enum-varnames:\n      - THRESHOLD\n      - NEW_VALUE\n      - ANOMALY_DETECTION\n      - IMPOSSIBLE_TRAVEL\n      - HARDCODED\n    SecurityMonitoringRuleEvaluationWindow:\n      description: 'A time window is specified to match when at least one of the cases\n        matches true. This is a sliding window\n\n        and evaluates in real time.'\n      enum:\n      - 0\n      - 60\n      - 300\n      - 600\n      - 900\n      - 1800\n      - 3600\n      - 7200\n      format: int32\n      type: integer\n      x-enum-varnames:\n      - ZERO_MINUTES\n      - ONE_MINUTE\n      - FIVE_MINUTES\n      - TEN_MINUTES\n      - FIFTEEN_MINUTES\n      - THIRTY_MINUTES\n      - ONE_HOUR\n      - TWO_HOURS\n    SecurityMonitoringRuleHardcodedEvaluatorType:\n      description: Hardcoded evaluator type.\n      enum:\n      - log4shell\n      type: string\n      x-enum-varnames:\n      - LOG4SHELL\n    SecurityMonitoringRuleImpossibleTravelOptions:\n      description: Options on impossible travel rules.\n      properties:\n        baselineUserLocations:\n          $ref: '#/components/schemas/SecurityMonitoringRuleImpossibleTravelOptionsBaselineUserLocations'\n      type: object\n    SecurityMonitoringRuleImpossibleTravelOptionsBaselineUserLocations:\n      description: 'If true, signals are suppressed for the first 24 hours. In that\n        time, Datadog learns the user''s regular\n\n        access locations. This can be helpful to reduce noise and infer VPN usage\n        or credentialed API access.'\n      example: true\n      type: boolean\n    SecurityMonitoringRuleKeepAlive:\n      description: \"Once a signal is generated, the signal will remain \\u201Copen\\u201D\n        if a case is matched at least once within\\nthis keep alive window.\"\n      enum:\n      - 0\n      - 60\n      - 300\n      - 600\n      - 900\n      - 1800\n      - 3600\n      - 7200\n      - 10800\n      - 21600\n      format: int32\n      type: integer\n      x-enum-varnames:\n      - ZERO_MINUTES\n      - ONE_MINUTE\n      - FIVE_MINUTES\n      - TEN_MINUTES\n      - FIFTEEN_MINUTES\n      - THIRTY_MINUTES\n      - ONE_HOUR\n      - TWO_HOURS\n      - THREE_HOURS\n      - SIX_HOURS\n    SecurityMonitoringRuleMaxSignalDuration:\n      description: \"A signal will \\u201Cclose\\u201D regardless of the query being\n        matched once the time exceeds the maximum duration.\\nThis time is calculated\n        from the first seen timestamp.\"\n      enum:\n      - 0\n      - 60\n      - 300\n      - 600\n      - 900\n      - 1800\n      - 3600\n      - 7200\n      - 10800\n      - 21600\n      - 43200\n      - 86400\n      format: int32\n      type: integer\n      x-enum-varnames:\n      - ZERO_MINUTES\n      - ONE_MINUTE\n      - FIVE_MINUTES\n      - TEN_MINUTES\n      - FIFTEEN_MINUTES\n      - THIRTY_MINUTES\n      - ONE_HOUR\n      - TWO_HOURS\n      - THREE_HOURS\n      - SIX_HOURS\n      - TWELVE_HOURS\n      - ONE_DAY\n    SecurityMonitoringRuleNewValueOptions:\n      description: Options on new value rules.\n      properties:\n        forgetAfter:\n          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsForgetAfter'\n        learningDuration:\n          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningDuration'\n        learningMethod:\n          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningMethod'\n        learningThreshold:\n          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningThreshold'\n      type: object\n    SecurityMonitoringRuleNewValueOptionsForgetAfter:\n      description: The duration in days after which a learned value is forgotten.\n      enum:\n      - 1\n      - 2\n      - 7\n      - 14\n      - 21\n      - 28\n      format: int32\n      type: integer\n      x-enum-varnames:\n      - ONE_DAY\n      - TWO_DAYS\n      - ONE_WEEK\n      - TWO_WEEKS\n      - THREE_WEEKS\n      - FOUR_WEEKS\n    SecurityMonitoringRuleNewValueOptionsLearningDuration:\n      default: 0\n      description: 'The duration in days during which values are learned, and after\n        which signals will be generated for values that\n\n        weren''t learned. If set to 0, a signal will be generated for all new values\n        after the first value is learned.'\n      enum:\n      - 0\n      - 1\n      - 7\n      format: int32\n      type: integer\n      x-enum-varnames:\n      - ZERO_DAYS\n      - ONE_DAY\n      - SEVEN_DAYS\n    SecurityMonitoringRuleNewValueOptionsLearningMethod:\n      default: duration\n      description: The learning method used to determine when signals should be generated\n        for values that weren't learned.\n      enum:\n      - duration\n      - threshold\n      type: string\n      x-enum-varnames:\n      - DURATION\n      - THRESHOLD\n    SecurityMonitoringRuleNewValueOptionsLearningThreshold:\n      default: 0\n      description: A number of occurrences after which signals will be generated for\n        values that weren't learned.\n      enum:\n      - 0\n      - 1\n      format: int32\n      type: integer\n      x-enum-varnames:\n      - ZERO_OCCURRENCES\n      - ONE_OCCURRENCE\n    SecurityMonitoringRuleOptions:\n      description: Options on rules.\n      properties:\n        complianceRuleOptions:\n          $ref: '#/components/schemas/CloudConfigurationComplianceRuleOptions'\n        decreaseCriticalityBasedOnEnv:\n          $ref: '#/components/schemas/SecurityMonitoringRuleDecreaseCriticalityBasedOnEnv'\n        detectionMethod:\n          $ref: '#/components/schemas/SecurityMonitoringRuleDetectionMethod'\n        evaluationWindow:\n          $ref: '#/components/schemas/SecurityMonitoringRuleEvaluationWindow'\n        hardcodedEvaluatorType:\n          $ref: '#/components/schemas/SecurityMonitoringRuleHardcodedEvaluatorType'\n        impossibleTravelOptions:\n          $ref: '#/components/schemas/SecurityMonitoringRuleImpossibleTravelOptions'\n        keepAlive:\n          $ref: '#/components/schemas/SecurityMonitoringRuleKeepAlive'\n        maxSignalDuration:\n          $ref: '#/components/schemas/SecurityMonitoringRuleMaxSignalDuration'\n        newValueOptions:\n          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptions'\n      type: object\n    SecurityMonitoringRuleQuery:\n      description: Query for matching rule.\n      oneOf:\n      - $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'\n      - $ref: '#/components/schemas/SecurityMonitoringSignalRuleQuery'\n      type: object\n    SecurityMonitoringRuleQueryAggregation:\n      description: The aggregation type.\n      enum:\n      - count\n      - cardinality\n      - sum\n      - max\n      - new_value\n      - geo_data\n      - event_count\n      type: string\n      x-enum-varnames:\n      - COUNT\n      - CARDINALITY\n      - SUM\n      - MAX\n      - NEW_VALUE\n      - GEO_DATA\n      - EVENT_COUNT\n    SecurityMonitoringRuleResponse:\n      description: Create a new rule.\n      oneOf:\n      - $ref: '#/components/schemas/SecurityMonitoringStandardRuleResponse'\n      - $ref: '#/components/schemas/SecurityMonitoringSignalRuleResponse'\n      type: object\n    SecurityMonitoringRuleSeverity:\n      description: Severity of the Security Signal.\n      enum:\n      - info\n      - low\n      - medium\n      - high\n      - critical\n      example: critical\n      type: string\n      x-enum-varnames:\n      - INFO\n      - LOW\n      - MEDIUM\n      - HIGH\n      - CRITICAL\n    SecurityMonitoringRuleTypeCreate:\n      description: The rule type.\n      enum:\n      - log_detection\n      - workload_security\n      type: string\n      x-enum-varnames:\n      - LOG_DETECTION\n      - WORKLOAD_SECURITY\n    SecurityMonitoringRuleTypeRead:\n      description: The rule type.\n      enum:\n      - log_detection\n      - infrastructure_configuration\n      - workload_security\n      - cloud_configuration\n      type: string\n      x-enum-varnames:\n      - LOG_DETECTION\n      - INFRASTRUCTURE_CONFIGURATION\n      - WORKLOAD_SECURITY\n      - CLOUD_CONFIGURATION\n    SecurityMonitoringRuleUpdatePayload:\n      description: Update an existing rule.\n      properties:\n        cases:\n          description: Cases for generating signals.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringRuleCase'\n          type: array\n        complianceSignalOptions:\n          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'\n        filters:\n          description: Additional queries to filter matched events before they are\n            processed.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringFilter'\n          type: array\n        hasExtendedTitle:\n          description: Whether the notifications include the triggering group-by values\n            in their title.\n          example: true\n          type: boolean\n        isEnabled:\n          description: Whether the rule is enabled.\n          type: boolean\n        message:\n          description: Message for generated signals.\n          type: string\n        name:\n          description: Name of the rule.\n          type: string\n        options:\n          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'\n        queries:\n          description: Queries for selecting logs which are part of the rule.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringRuleQuery'\n          type: array\n        tags:\n          description: Tags for generated signals.\n          items:\n            description: Tag.\n            type: string\n          type: array\n        version:\n          description: The version of the rule being updated.\n          example: 1\n          format: int32\n          maximum: 2147483647\n          type: integer\n      type: object\n    SecurityMonitoringSignal:\n      description: Object description of a security signal.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SecurityMonitoringSignalAttributes'\n        id:\n          description: The unique ID of the security signal.\n          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\n          type: string\n        type:\n          $ref: '#/components/schemas/SecurityMonitoringSignalType'\n      type: object\n    SecurityMonitoringSignalArchiveComment:\n      description: Optional comment to display on archived signals.\n      type: string\n    SecurityMonitoringSignalArchiveReason:\n      description: Reason a signal is archived.\n      enum:\n      - none\n      - false_positive\n      - testing_or_maintenance\n      - other\n      type: string\n      x-enum-varnames:\n      - NONE\n      - FALSE_POSITIVE\n      - TESTING_OR_MAINTENANCE\n      - OTHER\n    SecurityMonitoringSignalAssigneeUpdateAttributes:\n      description: Attributes describing the new assignee of a security signal.\n      properties:\n        assignee:\n          $ref: '#/components/schemas/SecurityMonitoringTriageUser'\n        version:\n          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'\n      required:\n      - assignee\n      type: object\n    SecurityMonitoringSignalAssigneeUpdateData:\n      description: Data containing the patch for changing the assignee of a signal.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SecurityMonitoringSignalAssigneeUpdateAttributes'\n      required:\n      - attributes\n      type: object\n    SecurityMonitoringSignalAssigneeUpdateRequest:\n      description: Request body for changing the assignee of a given security monitoring\n        signal.\n      properties:\n        data:\n          $ref: '#/components/schemas/SecurityMonitoringSignalAssigneeUpdateData'\n      required:\n      - data\n      type: object\n    SecurityMonitoringSignalAttributes:\n      description: 'The object containing all signal attributes and their\n\n        associated values.'\n      properties:\n        attributes:\n          additionalProperties: {}\n          description: A JSON object of attributes in the security signal.\n          example:\n            workflow:\n              first_seen: '2020-06-23T14:46:01.000Z'\n              last_seen: '2020-06-23T14:46:49.000Z'\n              rule:\n                id: 0f5-e0c-805\n                name: 'Brute Force Attack Grouped By User '\n                version: 12\n          type: object\n        message:\n          description: The message in the security signal defined by the rule that\n            generated the signal.\n          example: Detect Account Take Over (ATO) through brute force attempts\n          type: string\n        tags:\n          description: An array of tags associated with the security signal.\n          example:\n          - security:attack\n          - technique:T1110-brute-force\n          items:\n            description: The tag associated with the security signal.\n            type: string\n          type: array\n        timestamp:\n          description: The timestamp of the security signal.\n          example: '2019-01-02T09:42:36.320Z'\n          format: date-time\n          type: string\n      type: object\n    SecurityMonitoringSignalIncidentIds:\n      description: Array of incidents that are associated with this signal.\n      items:\n        description: Public ID attribute of the incident that is associated with the\n          signal.\n        example: 2066\n        format: int64\n        type: integer\n      type: array\n    SecurityMonitoringSignalIncidentsUpdateAttributes:\n      description: Attributes describing the new list of related signals for a security\n        signal.\n      properties:\n        incident_ids:\n          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentIds'\n        version:\n          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'\n      required:\n      - incident_ids\n      type: object\n    SecurityMonitoringSignalIncidentsUpdateData:\n      description: Data containing the patch for changing the related incidents of\n        a signal.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentsUpdateAttributes'\n      required:\n      - attributes\n      type: object\n    SecurityMonitoringSignalIncidentsUpdateRequest:\n      description: Request body for changing the related incidents of a given security\n        monitoring signal.\n      properties:\n        data:\n          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentsUpdateData'\n      required:\n      - data\n      type: object\n    SecurityMonitoringSignalListRequest:\n      description: The request for a security signal list.\n      properties:\n        filter:\n          $ref: '#/components/schemas/SecurityMonitoringSignalListRequestFilter'\n        page:\n          $ref: '#/components/schemas/SecurityMonitoringSignalListRequestPage'\n        sort:\n          $ref: '#/components/schemas/SecurityMonitoringSignalsSort'\n      type: object\n    SecurityMonitoringSignalListRequestFilter:\n      description: Search filters for listing security signals.\n      properties:\n        from:\n          description: The minimum timestamp for requested security signals.\n          example: '2019-01-02T09:42:36.320Z'\n          format: date-time\n          type: string\n        query:\n          description: Search query for listing security signals.\n          example: security:attack status:high\n          type: string\n        to:\n          description: The maximum timestamp for requested security signals.\n          example: '2019-01-03T09:42:36.320Z'\n          format: date-time\n          type: string\n      type: object\n    SecurityMonitoringSignalListRequestPage:\n      description: The paging attributes for listing security signals.\n      properties:\n        cursor:\n          description: A list of results using the cursor provided in the previous\n            query.\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n        limit:\n          default: 10\n          description: The maximum number of security signals in the response.\n          example: 25\n          format: int32\n          maximum: 1000\n          type: integer\n      type: object\n    SecurityMonitoringSignalRuleCreatePayload:\n      description: Create a new signal correlation rule.\n      properties:\n        cases:\n          description: Cases for generating signals.\n          example: []\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'\n          type: array\n        filters:\n          description: Additional queries to filter matched events before they are\n            processed.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringFilter'\n          type: array\n        hasExtendedTitle:\n          description: Whether the notifications include the triggering group-by values\n            in their title.\n          example: true\n          type: boolean\n        isEnabled:\n          description: Whether the rule is enabled.\n          example: true\n          type: boolean\n        message:\n          description: Message for generated signals.\n          example: ''\n          type: string\n        name:\n          description: The name of the rule.\n          example: My security monitoring rule.\n          type: string\n        options:\n          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'\n        queries:\n          description: Queries for selecting signals which are part of the rule.\n          example: []\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringSignalRuleQuery'\n          type: array\n        tags:\n          description: Tags for generated signals.\n          example:\n          - env:prod\n          - team:security\n          items:\n            description: Tag.\n            type: string\n          type: array\n        type:\n          $ref: '#/components/schemas/SecurityMonitoringSignalRuleType'\n      required:\n      - name\n      - isEnabled\n      - queries\n      - options\n      - cases\n      - message\n      type: object\n    SecurityMonitoringSignalRuleQuery:\n      description: Query for matching rule on signals.\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'\n        correlatedByFields:\n          description: Fields to group by.\n          items:\n            description: Field.\n            type: string\n          type: array\n        correlatedQueryIndex:\n          description: Index of the rule query used to retrieve the correlated field.\n          format: int32\n          maximum: 9\n          type: integer\n        metrics:\n          description: Group of target fields to aggregate over.\n          items:\n            description: Field.\n            type: string\n          type: array\n        name:\n          description: Name of the query.\n          type: string\n        ruleId:\n          description: Rule ID to match on signals.\n          example: org-ru1-e1d\n          type: string\n      required:\n      - ruleId\n      type: object\n    SecurityMonitoringSignalRuleResponse:\n      description: Rule.\n      properties:\n        cases:\n          description: Cases for generating signals.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringRuleCase'\n          type: array\n        createdAt:\n          description: When the rule was created, timestamp in milliseconds.\n          format: int64\n          type: integer\n        creationAuthorId:\n          description: User ID of the user who created the rule.\n          format: int64\n          type: integer\n        filters:\n          description: Additional queries to filter matched events before they are\n            processed.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringFilter'\n          type: array\n        hasExtendedTitle:\n          description: Whether the notifications include the triggering group-by values\n            in their title.\n          type: boolean\n        id:\n          description: The ID of the rule.\n          type: string\n        isDefault:\n          description: Whether the rule is included by default.\n          type: boolean\n        isDeleted:\n          description: Whether the rule has been deleted.\n          type: boolean\n        isEnabled:\n          description: Whether the rule is enabled.\n          type: boolean\n        message:\n          description: Message for generated signals.\n          type: string\n        name:\n          description: The name of the rule.\n          type: string\n        options:\n          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'\n        queries:\n          description: Queries for selecting logs which are part of the rule.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringSignalRuleResponseQuery'\n          type: array\n        tags:\n          description: Tags for generated signals.\n          items:\n            description: Tag.\n            type: string\n          type: array\n        type:\n          $ref: '#/components/schemas/SecurityMonitoringSignalRuleType'\n        updateAuthorId:\n          description: User ID of the user who updated the rule.\n          format: int64\n          type: integer\n        version:\n          description: The version of the rule.\n          format: int64\n          type: integer\n    SecurityMonitoringSignalRuleResponseQuery:\n      description: Query for matching rule on signals.\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'\n        correlatedByFields:\n          description: Fields to group by.\n          items:\n            description: Field.\n            type: string\n          type: array\n        correlatedQueryIndex:\n          description: Index of the rule query used to retrieve the correlated field.\n          format: int32\n          maximum: 9\n          type: integer\n        defaultRuleId:\n          description: Default Rule ID to match on signals.\n          example: d3f-ru1-e1d\n          type: string\n        metrics:\n          description: Group of target fields to aggregate over.\n          items:\n            description: Field.\n            type: string\n          type: array\n        name:\n          description: Name of the query.\n          type: string\n        ruleId:\n          description: Rule ID to match on signals.\n          example: org-ru1-e1d\n          type: string\n      type: object\n    SecurityMonitoringSignalRuleType:\n      description: The rule type.\n      enum:\n      - signal_correlation\n      type: string\n      x-enum-varnames:\n      - SIGNAL_CORRELATION\n    SecurityMonitoringSignalState:\n      description: The new triage state of the signal.\n      enum:\n      - open\n      - archived\n      - under_review\n      example: open\n      type: string\n      x-enum-varnames:\n      - OPEN\n      - ARCHIVED\n      - UNDER_REVIEW\n    SecurityMonitoringSignalStateUpdateAttributes:\n      description: Attributes describing the change of state of a security signal.\n      properties:\n        archive_comment:\n          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveComment'\n        archive_reason:\n          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveReason'\n        state:\n          $ref: '#/components/schemas/SecurityMonitoringSignalState'\n        version:\n          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'\n      required:\n      - state\n      type: object\n    SecurityMonitoringSignalStateUpdateData:\n      description: Data containing the patch for changing the state of a signal.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateAttributes'\n      required:\n      - attributes\n      type: object\n    SecurityMonitoringSignalStateUpdateRequest:\n      description: Request body for changing the state of a given security monitoring\n        signal.\n      properties:\n        data:\n          $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateData'\n      required:\n      - data\n      type: object\n    SecurityMonitoringSignalTriageAttributes:\n      description: Attributes describing a triage state update operation over a security\n        signal.\n      properties:\n        archive_comment:\n          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveComment'\n        archive_comment_timestamp:\n          description: Timestamp of the last edit to the comment.\n          format: int64\n          minimum: 0\n          type: integer\n        archive_comment_user:\n          $ref: '#/components/schemas/SecurityMonitoringTriageUser'\n        archive_reason:\n          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveReason'\n        assignee:\n          $ref: '#/components/schemas/SecurityMonitoringTriageUser'\n        incident_ids:\n          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentIds'\n        state:\n          $ref: '#/components/schemas/SecurityMonitoringSignalState'\n        state_update_timestamp:\n          description: Timestamp of the last update to the signal state.\n          format: int64\n          minimum: 0\n          type: integer\n        state_update_user:\n          $ref: '#/components/schemas/SecurityMonitoringTriageUser'\n      required:\n      - assignee\n      - state\n      - incident_ids\n      type: object\n    SecurityMonitoringSignalTriageUpdateData:\n      description: Data containing the updated triage attributes of the signal.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SecurityMonitoringSignalTriageAttributes'\n      type: object\n    SecurityMonitoringSignalTriageUpdateResponse:\n      description: The response returned after all triage operations, containing the\n        updated signal triage data.\n      properties:\n        data:\n          $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateData'\n      required:\n      - data\n      type: object\n    SecurityMonitoringSignalType:\n      default: signal\n      description: The type of event.\n      enum:\n      - signal\n      example: signal\n      type: string\n      x-enum-varnames:\n      - SIGNAL\n    SecurityMonitoringSignalVersion:\n      description: Version of the updated signal. If server side version is higher,\n        update will be rejected.\n      format: int64\n      type: integer\n    SecurityMonitoringSignalsListResponse:\n      description: 'The response object with all security signals matching the request\n\n        and pagination information.'\n      properties:\n        data:\n          description: An array of security signals matching the request.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringSignal'\n          type: array\n        links:\n          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseLinks'\n        meta:\n          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseMeta'\n      type: object\n    SecurityMonitoringSignalsListResponseLinks:\n      description: Links attributes.\n      properties:\n        next:\n          description: 'The link for the next set of results. **Note**: The request\n            can also be made using the\n\n            POST endpoint.'\n          example: https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo\u0026page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    SecurityMonitoringSignalsListResponseMeta:\n      description: Meta attributes.\n      properties:\n        page:\n          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseMetaPage'\n      type: object\n    SecurityMonitoringSignalsListResponseMetaPage:\n      description: Paging attributes.\n      properties:\n        after:\n          description: 'The cursor used to get the next results, if any. To make the\n            next request, use the same\n\n            parameters with the addition of the `page[cursor]`.'\n          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n          type: string\n      type: object\n    SecurityMonitoringSignalsSort:\n      description: The sort parameters used for querying security signals.\n      enum:\n      - timestamp\n      - -timestamp\n      type: string\n      x-enum-varnames:\n      - TIMESTAMP_ASCENDING\n      - TIMESTAMP_DESCENDING\n    SecurityMonitoringStandardRuleCreatePayload:\n      description: Create a new rule.\n      properties:\n        cases:\n          description: Cases for generating signals.\n          example: []\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'\n          type: array\n        filters:\n          description: Additional queries to filter matched events before they are\n            processed.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringFilter'\n          type: array\n        hasExtendedTitle:\n          description: Whether the notifications include the triggering group-by values\n            in their title.\n          example: true\n          type: boolean\n        isEnabled:\n          description: Whether the rule is enabled.\n          example: true\n          type: boolean\n        message:\n          description: Message for generated signals.\n          example: ''\n          type: string\n        name:\n          description: The name of the rule.\n          example: My security monitoring rule.\n          type: string\n        options:\n          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'\n        queries:\n          description: Queries for selecting logs which are part of the rule.\n          example: []\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'\n          type: array\n        tags:\n          description: Tags for generated signals.\n          example:\n          - env:prod\n          - team:security\n          items:\n            description: Tag.\n            type: string\n          type: array\n        type:\n          $ref: '#/components/schemas/SecurityMonitoringRuleTypeCreate'\n      required:\n      - name\n      - isEnabled\n      - queries\n      - options\n      - cases\n      - message\n      type: object\n    SecurityMonitoringStandardRuleQuery:\n      description: Query for matching rule.\n      properties:\n        aggregation:\n          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'\n        distinctFields:\n          description: Field for which the cardinality is measured. Sent as an array.\n          items:\n            description: Field.\n            type: string\n          type: array\n        groupByFields:\n          description: Fields to group by.\n          items:\n            description: Field.\n            type: string\n          type: array\n        metric:\n          deprecated: true\n          description: '(Deprecated) The target field to aggregate over when using\n            the sum or max\n\n            aggregations. `metrics` field should be used instead.'\n          type: string\n        metrics:\n          description: Group of target fields to aggregate over when using the sum,\n            max, geo data, or new value aggregations. The sum, max, and geo data aggregations\n            only accept one value in this list, whereas the new value aggregation\n            accepts up to five values.\n          items:\n            description: Field.\n            type: string\n          type: array\n        name:\n          description: Name of the query.\n          type: string\n        query:\n          description: Query to run on logs.\n          example: a \u003e 3\n          type: string\n      required:\n      - query\n      type: object\n    SecurityMonitoringStandardRuleResponse:\n      description: Rule.\n      properties:\n        cases:\n          description: Cases for generating signals.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringRuleCase'\n          type: array\n        complianceSignalOptions:\n          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'\n        createdAt:\n          description: When the rule was created, timestamp in milliseconds.\n          format: int64\n          type: integer\n        creationAuthorId:\n          description: User ID of the user who created the rule.\n          format: int64\n          type: integer\n        filters:\n          description: Additional queries to filter matched events before they are\n            processed.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringFilter'\n          type: array\n        hasExtendedTitle:\n          description: Whether the notifications include the triggering group-by values\n            in their title.\n          type: boolean\n        id:\n          description: The ID of the rule.\n          type: string\n        isDefault:\n          description: Whether the rule is included by default.\n          type: boolean\n        isDeleted:\n          description: Whether the rule has been deleted.\n          type: boolean\n        isEnabled:\n          description: Whether the rule is enabled.\n          type: boolean\n        message:\n          description: Message for generated signals.\n          type: string\n        name:\n          description: The name of the rule.\n          type: string\n        options:\n          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'\n        queries:\n          description: Queries for selecting logs which are part of the rule.\n          items:\n            $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'\n          type: array\n        tags:\n          description: Tags for generated signals.\n          items:\n            description: Tag.\n            type: string\n          type: array\n        type:\n          $ref: '#/components/schemas/SecurityMonitoringRuleTypeRead'\n        updateAuthorId:\n          description: User ID of the user who updated the rule.\n          format: int64\n          type: integer\n        version:\n          description: The version of the rule.\n          format: int64\n          type: integer\n    SecurityMonitoringTriageUser:\n      description: Object representing a given user entity.\n      properties:\n        handle:\n          description: The handle for this user account.\n          type: string\n        id:\n          description: Numerical ID assigned by Datadog to this user account.\n          format: int64\n          type: integer\n        name:\n          description: The name for this user account.\n          type: string\n        uuid:\n          description: UUID assigned by Datadog to this user account.\n          example: 773b045d-ccf8-4808-bd3b-955ef6a8c940\n          type: string\n      required:\n      - uuid\n      type: object\n    SensitiveDataScannerConfigRequest:\n      description: Group reorder request.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerReorderConfig'\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      required:\n      - data\n      - meta\n      type: object\n    SensitiveDataScannerConfiguration:\n      description: A Sensitive Data Scanner configuration.\n      properties:\n        id:\n          description: ID of the configuration.\n          type: string\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerConfigurationType'\n      type: object\n    SensitiveDataScannerConfigurationData:\n      description: A Sensitive Data Scanner configuration data.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerConfiguration'\n      type: object\n    SensitiveDataScannerConfigurationRelationships:\n      description: Relationships of the configuration.\n      properties:\n        groups:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupList'\n      type: object\n    SensitiveDataScannerConfigurationType:\n      default: sensitive_data_scanner_configuration\n      description: Sensitive Data Scanner configuration type.\n      enum:\n      - sensitive_data_scanner_configuration\n      example: sensitive_data_scanner_configuration\n      type: string\n      x-enum-varnames:\n      - SENSITIVE_DATA_SCANNER_CONFIGURATIONS\n    SensitiveDataScannerCreateGroupResponse:\n      description: Create group response.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupResponse'\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      type: object\n    SensitiveDataScannerCreateRuleResponse:\n      description: Create rule response.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleResponse'\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      type: object\n    SensitiveDataScannerFilter:\n      description: Filter for the Scanning Group.\n      properties:\n        query:\n          description: Query to filter the events.\n          type: string\n      type: object\n    SensitiveDataScannerGetConfigIncludedArray:\n      description: Included objects from relationships.\n      items:\n        $ref: '#/components/schemas/SensitiveDataScannerGetConfigIncludedItem'\n      type: array\n    SensitiveDataScannerGetConfigIncludedItem:\n      description: An object related to the configuration.\n      oneOf:\n      - $ref: '#/components/schemas/SensitiveDataScannerRuleIncludedItem'\n      - $ref: '#/components/schemas/SensitiveDataScannerGroupIncludedItem'\n      type: object\n    SensitiveDataScannerGetConfigResponse:\n      description: Get all groups response.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerGetConfigResponseData'\n        included:\n          $ref: '#/components/schemas/SensitiveDataScannerGetConfigIncludedArray'\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMeta'\n      type: object\n    SensitiveDataScannerGetConfigResponseData:\n      description: Response data related to the scanning groups.\n      properties:\n        id:\n          description: ID of the configuration.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerConfigurationRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerConfigurationType'\n      type: object\n    SensitiveDataScannerGroup:\n      description: A scanning group.\n      properties:\n        id:\n          description: ID of the group.\n          type: string\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupType'\n      type: object\n    SensitiveDataScannerGroupAttributes:\n      description: Attributes of the Sensitive Data Scanner group.\n      properties:\n        description:\n          description: Description of the group.\n          type: string\n        filter:\n          $ref: '#/components/schemas/SensitiveDataScannerFilter'\n        is_enabled:\n          description: Whether or not the group is enabled.\n          type: boolean\n        name:\n          description: Name of the group.\n          type: string\n        product_list:\n          description: List of products the scanning group applies.\n          items:\n            $ref: '#/components/schemas/SensitiveDataScannerProduct'\n          type: array\n      type: object\n    SensitiveDataScannerGroupCreate:\n      description: Data related to the creation of a group.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupAttributes'\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupType'\n      required:\n      - type\n      - attributes\n      type: object\n    SensitiveDataScannerGroupCreateRequest:\n      description: Create group request.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupCreate'\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      type: object\n    SensitiveDataScannerGroupData:\n      description: A scanning group data.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerGroup'\n      type: object\n    SensitiveDataScannerGroupDeleteRequest:\n      description: Delete group request.\n      properties:\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      required:\n      - meta\n      type: object\n    SensitiveDataScannerGroupDeleteResponse:\n      description: Delete group response.\n      properties:\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      type: object\n    SensitiveDataScannerGroupIncludedItem:\n      description: A Scanning Group included item.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupAttributes'\n        id:\n          description: ID of the group.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupType'\n      type: object\n    SensitiveDataScannerGroupItem:\n      description: Data related to a Sensitive Data Scanner Group.\n      properties:\n        id:\n          description: ID of the group.\n          type: string\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupType'\n      type: object\n    SensitiveDataScannerGroupList:\n      description: List of groups, ordered.\n      properties:\n        data:\n          description: List of groups. The order is important.\n          items:\n            $ref: '#/components/schemas/SensitiveDataScannerGroupItem'\n          type: array\n      type: object\n    SensitiveDataScannerGroupRelationships:\n      description: Relationships of the group.\n      properties:\n        configuration:\n          $ref: '#/components/schemas/SensitiveDataScannerConfigurationData'\n        rules:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleData'\n      type: object\n    SensitiveDataScannerGroupResponse:\n      description: Response data related to the creation of a group.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupAttributes'\n        id:\n          description: ID of the group.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupType'\n      type: object\n    SensitiveDataScannerGroupType:\n      default: sensitive_data_scanner_group\n      description: Sensitive Data Scanner group type.\n      enum:\n      - sensitive_data_scanner_group\n      example: sensitive_data_scanner_group\n      type: string\n      x-enum-varnames:\n      - SENSITIVE_DATA_SCANNER_GROUP\n    SensitiveDataScannerGroupUpdate:\n      description: Data related to the update of a group.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupAttributes'\n        id:\n          description: ID of the group.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupType'\n      type: object\n    SensitiveDataScannerGroupUpdateRequest:\n      description: Update group request.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupUpdate'\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      required:\n      - data\n      - meta\n      type: object\n    SensitiveDataScannerGroupUpdateResponse:\n      description: Update group response.\n      properties:\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      type: object\n    SensitiveDataScannerMeta:\n      description: Meta response containing information about the API.\n      properties:\n        count_limit:\n          description: Maximum number of scanning rules allowed for the org.\n          format: int64\n          type: integer\n        group_count_limit:\n          description: Maximum number of scanning groups allowed for the org.\n          format: int64\n          type: integer\n        has_highlight_enabled:\n          description: Whether or not scanned events are highlighted in Logs or RUM\n            for the org.\n          type: boolean\n        is_pci_compliant:\n          description: Whether or not the org is compliant to the payment card industry\n            standard.\n          type: boolean\n        version:\n          description: Version of the API.\n          example: 0\n          format: int64\n          minimum: 0\n          type: integer\n      type: object\n    SensitiveDataScannerMetaVersionOnly:\n      description: Meta payload containing information about the API.\n      properties:\n        version:\n          description: Version of the API (optional).\n          example: 0\n          format: int64\n          minimum: 0\n          type: integer\n      type: object\n    SensitiveDataScannerProduct:\n      default: logs\n      description: Datadog product onto which Sensitive Data Scanner can be activated.\n      enum:\n      - logs\n      - rum\n      - events\n      - apm\n      type: string\n      x-enum-varnames:\n      - LOGS\n      - RUM\n      - EVENTS\n      - APM\n    SensitiveDataScannerReorderConfig:\n      description: Data related to the reordering of scanning groups.\n      properties:\n        id:\n          description: ID of the configuration.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerConfigurationRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerConfigurationType'\n      type: object\n    SensitiveDataScannerReorderGroupsResponse:\n      description: Group reorder response.\n      properties:\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMeta'\n      type: object\n    SensitiveDataScannerRule:\n      description: Rule item included in the group.\n      properties:\n        id:\n          description: ID of the rule.\n          type: string\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleType'\n      type: object\n    SensitiveDataScannerRuleAttributes:\n      description: Attributes of the Sensitive Data Scanner rule.\n      properties:\n        description:\n          description: Description of the rule.\n          type: string\n        excluded_attributes:\n          description: Attributes excluded from the scan.\n          example:\n          - username\n          items:\n            type: string\n          type: array\n        is_enabled:\n          description: Whether or not the rule is enabled.\n          type: boolean\n        name:\n          description: Name of the rule.\n          type: string\n        pattern:\n          description: Not included if there is a relationship to a standard pattern.\n          type: string\n        tags:\n          description: List of tags.\n          items:\n            type: string\n          type: array\n        text_replacement:\n          $ref: '#/components/schemas/SensitiveDataScannerTextReplacement'\n      type: object\n    SensitiveDataScannerRuleCreate:\n      description: Data related to the creation of a rule.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleAttributes'\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleType'\n      required:\n      - type\n      - attributes\n      - relationships\n      type: object\n    SensitiveDataScannerRuleCreateRequest:\n      description: Create rule request.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleCreate'\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      required:\n      - data\n      - meta\n      type: object\n    SensitiveDataScannerRuleData:\n      description: Rules included in the group.\n      properties:\n        data:\n          description: Rules included in the group. The order is important.\n          items:\n            $ref: '#/components/schemas/SensitiveDataScannerRule'\n          type: array\n      type: object\n    SensitiveDataScannerRuleDeleteRequest:\n      description: Delete rule request.\n      properties:\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      required:\n      - meta\n      type: object\n    SensitiveDataScannerRuleDeleteResponse:\n      description: Delete rule response.\n      properties:\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      type: object\n    SensitiveDataScannerRuleIncludedItem:\n      description: A Scanning Rule included item.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleAttributes'\n        id:\n          description: ID of the rule.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleType'\n      type: object\n    SensitiveDataScannerRuleRelationships:\n      description: Relationships of a scanning rule.\n      properties:\n        group:\n          $ref: '#/components/schemas/SensitiveDataScannerGroupData'\n        standard_pattern:\n          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternData'\n      type: object\n    SensitiveDataScannerRuleResponse:\n      description: Response data related to the creation of a rule.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleAttributes'\n        id:\n          description: ID of the rule.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleType'\n      type: object\n    SensitiveDataScannerRuleType:\n      default: sensitive_data_scanner_rule\n      description: Sensitive Data Scanner rule type.\n      enum:\n      - sensitive_data_scanner_rule\n      example: sensitive_data_scanner_rule\n      type: string\n      x-enum-varnames:\n      - SENSITIVE_DATA_SCANNER_RULE\n    SensitiveDataScannerRuleUpdate:\n      description: Data related to the update of a rule.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleAttributes'\n        id:\n          description: ID of the rule.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleRelationships'\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleType'\n      type: object\n    SensitiveDataScannerRuleUpdateRequest:\n      description: Update rule request.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerRuleUpdate'\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      required:\n      - data\n      - meta\n      type: object\n    SensitiveDataScannerRuleUpdateResponse:\n      description: Update rule response.\n      properties:\n        meta:\n          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'\n      type: object\n    SensitiveDataScannerStandardPattern:\n      description: Data containing the standard pattern id.\n      properties:\n        id:\n          description: ID of the standard pattern.\n          type: string\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternType'\n      type: object\n    SensitiveDataScannerStandardPatternAttributes:\n      description: Attributes of the Sensitive Data Scanner standard pattern.\n      properties:\n        name:\n          description: Name of the standard pattern.\n          type: string\n        pattern:\n          description: Regex to match.\n          type: string\n        tags:\n          description: List of tags.\n          items:\n            type: string\n          type: array\n      type: object\n    SensitiveDataScannerStandardPatternData:\n      description: A standard pattern.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerStandardPattern'\n      type: object\n    SensitiveDataScannerStandardPatternType:\n      default: sensitive_data_scanner_standard_pattern\n      description: Sensitive Data Scanner standard pattern type.\n      enum:\n      - sensitive_data_scanner_standard_pattern\n      example: sensitive_data_scanner_standard_pattern\n      type: string\n      x-enum-varnames:\n      - SENSITIVE_DATA_SCANNER_STANDARD_PATTERN\n    SensitiveDataScannerStandardPatternsResponse:\n      description: List Standard patterns response.\n      items:\n        $ref: '#/components/schemas/SensitiveDataScannerStandardPatternsResponseItem'\n      type: array\n    SensitiveDataScannerStandardPatternsResponseData:\n      description: List Standard patterns response data.\n      properties:\n        data:\n          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternsResponse'\n      type: object\n    SensitiveDataScannerStandardPatternsResponseItem:\n      description: Standard pattern item.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternAttributes'\n        id:\n          description: ID of the standard pattern.\n          type: string\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternType'\n      type: object\n    SensitiveDataScannerTextReplacement:\n      description: Object describing how the scanned event will be replaced.\n      properties:\n        number_of_chars:\n          description: 'Required if type == ''partial_replacement_from_beginning''\n\n            or ''partial_replacement_from_end''. It must be \u003e 0.'\n          format: int64\n          minimum: 0\n          type: integer\n        replacement_string:\n          description: Required if type == 'replacement_string'.\n          type: string\n        type:\n          $ref: '#/components/schemas/SensitiveDataScannerTextReplacementType'\n      type: object\n    SensitiveDataScannerTextReplacementType:\n      default: none\n      description: 'Type of the replacement text. None means no replacement.\n\n        hash means the data will be stubbed. replacement_string means that\n\n        one can chose a text to replace the data. partial_replacement_from_beginning\n\n        allows a user to partially replace the data from the beginning, and\n\n        partial_replacement_from_end on the other hand, allows to replace data from\n\n        the end.'\n      enum:\n      - none\n      - hash\n      - replacement_string\n      - partial_replacement_from_beginning\n      - partial_replacement_from_end\n      type: string\n      x-enum-varnames:\n      - NONE\n      - HASH\n      - REPLACEMENT_STRING\n      - PARTIAL_REPLACEMENT_FROM_BEGINNING\n      - PARTIAL_REPLACEMENT_FROM_END\n    ServiceAccountCreateAttributes:\n      description: Attributes of the created user.\n      properties:\n        email:\n          description: The email of the user.\n          example: jane.doe@example.com\n          type: string\n        name:\n          description: The name of the user.\n          type: string\n        service_account:\n          description: Whether the user is a service account. Must be true.\n          example: true\n          type: boolean\n        title:\n          description: The title of the user.\n          type: string\n      required:\n      - email\n      - service_account\n      type: object\n    ServiceAccountCreateData:\n      description: Object to create a service account User.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ServiceAccountCreateAttributes'\n        relationships:\n          $ref: '#/components/schemas/UserRelationships'\n        type:\n          $ref: '#/components/schemas/UsersType'\n      required:\n      - attributes\n      - type\n      type: object\n    ServiceAccountCreateRequest:\n      description: Create a service account.\n      properties:\n        data:\n          $ref: '#/components/schemas/ServiceAccountCreateData'\n      required:\n      - data\n      type: object\n    ServiceDefinitionCreateResponse:\n      description: Create service definitions response.\n      properties:\n        data:\n          description: Create service definitions response payload.\n          items:\n            $ref: '#/components/schemas/ServiceDefinitionData'\n          type: array\n      type: object\n    ServiceDefinitionData:\n      description: Service definition data.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/ServiceDefinitionDataAttributes'\n        type:\n          description: Service definition type.\n          type: string\n      type: object\n    ServiceDefinitionDataAttributes:\n      description: Service definition attributes.\n      properties:\n        meta:\n          $ref: '#/components/schemas/ServiceDefinitionMeta'\n        schema:\n          $ref: '#/components/schemas/ServiceDefinitionSchema'\n      type: object\n    ServiceDefinitionGetResponse:\n      description: Get service definition response.\n      properties:\n        data:\n          $ref: '#/components/schemas/ServiceDefinitionData'\n      type: object\n    ServiceDefinitionMeta:\n      description: Metadata about a service definition.\n      properties:\n        github-html-url:\n          description: GitHub HTML URL.\n          type: string\n        ingested-schema-version:\n          description: Ingestion schema version.\n          type: string\n        ingestion-source:\n          description: Ingestion source of the service definition.\n          type: string\n        last-modified-time:\n          description: Last modified time of the service definition.\n          type: string\n      type: object\n    ServiceDefinitionRaw:\n      description: Service Definition in raw JSON/YAML representation.\n      example: '---\n\n        schema-version: v2\n\n        dd-service: my-service\n\n        '\n      type: string\n    ServiceDefinitionSchema:\n      description: Service definition schema.\n      oneOf:\n      - $ref: '#/components/schemas/ServiceDefinitionV1'\n      - $ref: '#/components/schemas/ServiceDefinitionV2'\n      type: object\n    ServiceDefinitionV1:\n      deprecated: true\n      description: Deprecated - Service definition V1 for providing additional service\n        metadata and integrations.\n      properties:\n        contact:\n          $ref: '#/components/schemas/ServiceDefinitionV1Contact'\n        extensions:\n          additionalProperties: {}\n          description: Extensions to V1 schema.\n          example:\n            myorg/extension: extensionValue\n          type: object\n        external-resources:\n          description: A list of external links related to the services.\n          items:\n            $ref: '#/components/schemas/ServiceDefinitionV1Resource'\n          type: array\n        info:\n          $ref: '#/components/schemas/ServiceDefinitionV1Info'\n        integrations:\n          $ref: '#/components/schemas/ServiceDefinitionV1Integrations'\n        org:\n          $ref: '#/components/schemas/ServiceDefinitionV1Org'\n        schema-version:\n          $ref: '#/components/schemas/ServiceDefinitionV1Version'\n        tags:\n          description: A set of custom tags.\n          example:\n          - my:tag\n          - service:tag\n          items:\n            type: string\n          type: array\n      required:\n      - schema-version\n      - info\n      type: object\n    ServiceDefinitionV1Contact:\n      description: Contact information about the service.\n      properties:\n        email:\n          description: \"Service owner\\u2019s email.\"\n          example: contact@datadoghq.com\n          format: email\n          type: string\n        slack:\n          description: \"Service owner\\u2019s Slack channel.\"\n          example: https://yourcompany.slack.com/archives/channel123\n          type: string\n    ServiceDefinitionV1Info:\n      description: Basic information about a service.\n      properties:\n        dd-service:\n          description: Unique identifier of the service. Must be unique across all\n            services and is used to match with a service in Datadog.\n          example: myservice\n          type: string\n        description:\n          description: A short description of the service.\n          example: A shopping cart service\n          type: string\n        display-name:\n          description: A friendly name of the service.\n          example: My Service\n          type: string\n        service-tier:\n          description: Service tier.\n          example: Tier 1\n          type: string\n      required:\n      - dd-service\n      type: object\n    ServiceDefinitionV1Integrations:\n      description: Third party integrations that Datadog supports.\n      properties:\n        pagerduty:\n          $ref: '#/components/schemas/ServiceDefinitionV1Pagerduty'\n      type: object\n    ServiceDefinitionV1Org:\n      description: Org related information about the service.\n      properties:\n        application:\n          description: App feature this service supports.\n          example: E-Commerce\n          type: string\n        team:\n          description: Team that owns the service.\n          example: my-team\n          type: string\n      type: object\n    ServiceDefinitionV1Pagerduty:\n      description: PagerDuty service URL for the service.\n      example: https://my-org.pagerduty.com/service-directory/PMyService\n      type: string\n    ServiceDefinitionV1Resource:\n      description: Service's external links.\n      properties:\n        name:\n          description: Link name.\n          example: Runbook\n          type: string\n        type:\n          $ref: '#/components/schemas/ServiceDefinitionV1ResourceType'\n        url:\n          description: Link URL.\n          example: https://my-runbook\n          type: string\n      required:\n      - name\n      - type\n      - url\n      type: object\n    ServiceDefinitionV1ResourceType:\n      description: Link type.\n      enum:\n      - doc\n      - wiki\n      - runbook\n      - url\n      - repo\n      - dashboard\n      - oncall\n      - code\n      - link\n      example: runbook\n      type: string\n      x-enum-varnames:\n      - DOC\n      - WIKI\n      - RUNBOOK\n      - URL\n      - REPO\n      - DASHBOARD\n      - ONCALL\n      - CODE\n      - LINK\n    ServiceDefinitionV1Version:\n      default: v1\n      description: Schema version being used.\n      enum:\n      - v1\n      example: v1\n      type: string\n      x-enum-varnames:\n      - V1\n    ServiceDefinitionV2:\n      description: Service definition V2 for providing service metadata and integrations.\n      properties:\n        contacts:\n          description: A list of contacts related to the services.\n          items:\n            $ref: '#/components/schemas/ServiceDefinitionV2Contact'\n          type: array\n        dd-service:\n          description: Unique identifier of the service. Must be unique across all\n            services and is used to match with a service in Datadog.\n          example: my-service\n          type: string\n        dd-team:\n          description: Experimental feature. A Team handle that matches a Team in\n            the Datadog Teams product.\n          example: my-team\n          type: string\n        docs:\n          description: A list of documentation related to the services.\n          items:\n            $ref: '#/components/schemas/ServiceDefinitionV2Doc'\n          type: array\n        extensions:\n          additionalProperties: {}\n          description: Extensions to V2 schema.\n          example:\n            myorg/extension: extensionValue\n          type: object\n        integrations:\n          $ref: '#/components/schemas/ServiceDefinitionV2Integrations'\n        links:\n          description: A list of links related to the services.\n          items:\n            $ref: '#/components/schemas/ServiceDefinitionV2Link'\n          type: array\n        repos:\n          description: A list of code repositories related to the services.\n          items:\n            $ref: '#/components/schemas/ServiceDefinitionV2Repo'\n          type: array\n        schema-version:\n          $ref: '#/components/schemas/ServiceDefinitionV2Version'\n        tags:\n          description: A set of custom tags.\n          example:\n          - my:tag\n          - service:tag\n          items:\n            type: string\n          type: array\n        team:\n          description: Team that owns the service.\n          example: my-team\n          type: string\n      required:\n      - schema-version\n      - dd-service\n      type: object\n    ServiceDefinitionV2Contact:\n      description: Service owner's contacts information.\n      oneOf:\n      - $ref: '#/components/schemas/ServiceDefinitionV2Email'\n      - $ref: '#/components/schemas/ServiceDefinitionV2Slack'\n    ServiceDefinitionV2Doc:\n      description: Service documents.\n      properties:\n        name:\n          description: Document name.\n          example: Architecture\n          type: string\n        provider:\n          description: Document provider.\n          example: google drive\n          type: string\n        url:\n          description: Document URL.\n          example: https://gdrive/mydoc\n          type: string\n      required:\n      - name\n      - url\n      type: object\n    ServiceDefinitionV2Email:\n      description: Service owner's email.\n      properties:\n        contact:\n          description: Contact value.\n          example: contact@datadoghq.com\n          format: email\n          type: string\n        name:\n          description: Contact email.\n          example: Team Email\n          type: string\n        type:\n          $ref: '#/components/schemas/ServiceDefinitionV2EmailType'\n      required:\n      - type\n      - contact\n      type: object\n    ServiceDefinitionV2EmailType:\n      description: Contact type.\n      enum:\n      - email\n      example: email\n      type: string\n      x-enum-varnames:\n      - EMAIL\n    ServiceDefinitionV2Integrations:\n      description: Third party integrations that Datadog supports.\n      properties:\n        opsgenie:\n          $ref: '#/components/schemas/ServiceDefinitionV2Opsgenie'\n        pagerduty:\n          $ref: '#/components/schemas/ServiceDefinitionV2Pagerduty'\n      type: object\n    ServiceDefinitionV2Link:\n      description: Service's external links.\n      properties:\n        name:\n          description: Link name.\n          example: Runbook\n          type: string\n        type:\n          $ref: '#/components/schemas/ServiceDefinitionV2LinkType'\n        url:\n          description: Link URL.\n          example: https://my-runbook\n          type: string\n      required:\n      - name\n      - type\n      - url\n      type: object\n    ServiceDefinitionV2LinkType:\n      description: Link type.\n      enum:\n      - doc\n      - wiki\n      - runbook\n      - url\n      - repo\n      - dashboard\n      - oncall\n      - code\n      - link\n      example: runbook\n      type: string\n      x-enum-varnames:\n      - DOC\n      - WIKI\n      - RUNBOOK\n      - URL\n      - REPO\n      - DASHBOARD\n      - ONCALL\n      - CODE\n      - LINK\n    ServiceDefinitionV2Opsgenie:\n      description: Opsgenie integration for the service.\n      properties:\n        region:\n          $ref: '#/components/schemas/ServiceDefinitionV2OpsgenieRegion'\n        service-url:\n          description: Opsgenie service url.\n          example: https://my-org.opsgenie.com/service/123e4567-e89b-12d3-a456-426614174000\n          type: string\n      required:\n      - service-url\n      type: object\n    ServiceDefinitionV2OpsgenieRegion:\n      description: Opsgenie instance region.\n      enum:\n      - US\n      - EU\n      example: US\n      type: string\n      x-enum-varnames:\n      - US\n      - EU\n    ServiceDefinitionV2Pagerduty:\n      description: PagerDuty service URL for the service.\n      example: https://my-org.pagerduty.com/service-directory/PMyService\n      type: string\n    ServiceDefinitionV2Repo:\n      description: Service code repositories.\n      properties:\n        name:\n          description: Repository name.\n          example: Source Code\n          type: string\n        provider:\n          description: Repository provider.\n          example: GitHub\n          type: string\n        url:\n          description: Repository URL.\n          example: https://github.com/DataDog/schema\n          type: string\n      required:\n      - name\n      - url\n      type: object\n    ServiceDefinitionV2Slack:\n      description: Service owner's Slack channel.\n      properties:\n        contact:\n          description: Slack Channel.\n          example: https://yourcompany.slack.com/archives/channel123\n          type: string\n        name:\n          description: Contact Slack.\n          example: Team Slack\n          type: string\n        type:\n          $ref: '#/components/schemas/ServiceDefinitionV2SlackType'\n      required:\n      - type\n      - contact\n      type: object\n    ServiceDefinitionV2SlackType:\n      description: Contact type.\n      enum:\n      - slack\n      example: slack\n      type: string\n      x-enum-varnames:\n      - SLACK\n    ServiceDefinitionV2Version:\n      default: v2\n      description: Schema version being used.\n      enum:\n      - v2\n      example: v2\n      type: string\n      x-enum-varnames:\n      - V2\n    ServiceDefinitionsCreateRequest:\n      description: Create service definitions request.\n      oneOf:\n      - $ref: '#/components/schemas/ServiceDefinitionV2'\n      - $ref: '#/components/schemas/ServiceDefinitionRaw'\n    ServiceDefinitionsListResponse:\n      description: Create service definitions response.\n      properties:\n        data:\n          description: Data representing service definitions.\n          items:\n            $ref: '#/components/schemas/ServiceDefinitionData'\n          type: array\n      type: object\n    TagsEventAttribute:\n      description: Array of tags associated with your event.\n      example:\n      - team:A\n      items:\n        description: Tag associated with your event.\n        type: string\n      type: array\n    TimeseriesFormulaQueryRequest:\n      description: A request wrapper around a single timeseries query to be executed.\n      properties:\n        data:\n          $ref: '#/components/schemas/TimeseriesFormulaRequest'\n      required:\n      - data\n      type: object\n    TimeseriesFormulaQueryResponse:\n      description: A message containing one response to a timeseries query made with\n        timeseries formula query request.\n      properties:\n        data:\n          $ref: '#/components/schemas/TimeseriesResponse'\n        errors:\n          description: The error generated by the request.\n          type: string\n      type: object\n    TimeseriesFormulaRequest:\n      description: A single timeseries query to be executed.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/TimeseriesFormulaRequestAttributes'\n        type:\n          $ref: '#/components/schemas/TimeseriesFormulaRequestType'\n      required:\n      - type\n      - attributes\n      type: object\n    TimeseriesFormulaRequestAttributes:\n      description: The object describing a timeseries formula request.\n      properties:\n        formulas:\n          description: List of formulas to be calculated and returned as responses.\n          items:\n            $ref: '#/components/schemas/QueryFormula'\n          type: array\n        from:\n          description: Start date (inclusive) of the query in milliseconds since the\n            Unix epoch.\n          example: 1568899800000\n          format: int64\n          type: integer\n        interval:\n          description: 'A time interval in milliseconds.\n\n            May be overridden by a larger interval if the query would result in\n\n            too many points for the specified timeframe.\n\n            Defaults to a reasonable interval for the given timeframe.'\n          example: 5000\n          format: int64\n          type: integer\n        queries:\n          $ref: '#/components/schemas/TimeseriesFormulaRequestQueries'\n        to:\n          description: End date (exclusive) of the query in milliseconds since the\n            Unix epoch.\n          example: 1568923200000\n          format: int64\n          type: integer\n      required:\n      - to\n      - from\n      - queries\n      type: object\n    TimeseriesFormulaRequestQueries:\n      description: List of queries to be run and used as inputs to the formulas.\n      items:\n        $ref: '#/components/schemas/TimeseriesQuery'\n      type: array\n    TimeseriesFormulaRequestType:\n      default: timeseries_request\n      description: The type of the resource. The value should always be timeseries_request.\n      enum:\n      - timeseries_request\n      example: timeseries_request\n      type: string\n      x-enum-varnames:\n      - TIMESERIES_REQUEST\n    TimeseriesFormulaResponseType:\n      default: timeseries_response\n      description: The type of the resource. The value should always be timeseries_response.\n      enum:\n      - timeseries_response\n      example: timeseries_response\n      type: string\n      x-enum-varnames:\n      - TIMESERIES_RESPONSE\n    TimeseriesQuery:\n      description: An individual timeseries query to one of the basic Datadog data\n        sources.\n      oneOf:\n      - $ref: '#/components/schemas/MetricsTimeseriesQuery'\n      - $ref: '#/components/schemas/EventsTimeseriesQuery'\n      type: object\n    TimeseriesResponse:\n      description: A message containing the response to a timeseries query.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/TimeseriesResponseAttributes'\n        type:\n          $ref: '#/components/schemas/TimeseriesFormulaResponseType'\n      type: object\n    TimeseriesResponseAttributes:\n      description: The object describing a timeseries response.\n      properties:\n        series:\n          $ref: '#/components/schemas/TimeseriesResponseSeriesList'\n        times:\n          $ref: '#/components/schemas/TimeseriesResponseTimes'\n        values:\n          $ref: '#/components/schemas/TimeseriesResponseValuesList'\n      type: object\n    TimeseriesResponseSeries:\n      description: ''\n      properties:\n        group_tags:\n          $ref: '#/components/schemas/GroupTags'\n        query_index:\n          description: The index of the query in the \"formulas\" array (or \"queries\"\n            array if no \"formulas\" was specified).\n          example: 0\n          format: int32\n          maximum: 2147483647\n          type: integer\n        unit:\n          description: List of units.\n          items:\n            $ref: '#/components/schemas/Unit'\n          type: array\n      type: object\n    TimeseriesResponseSeriesList:\n      description: Array of response series. The index here corresponds to the index\n        in the `formulas` or `queries` array from the request.\n      items:\n        $ref: '#/components/schemas/TimeseriesResponseSeries'\n      type: array\n    TimeseriesResponseTimes:\n      description: Array of times, 1-1 match with individual values arrays.\n      items:\n        description: Start date (inclusive) of the query in seconds since the Unix\n          epoch.\n        example: 1568899800000\n        format: int64\n        type: integer\n      type: array\n    TimeseriesResponseValues:\n      description: Array of values for an individual formula or query.\n      items:\n        description: An individual value for a given time.\n        format: double\n        type: number\n      type: array\n    TimeseriesResponseValuesList:\n      description: Array of value-arrays. The index here corresponds to the index\n        in the `formulas` or `queries` array from the request.\n      items:\n        $ref: '#/components/schemas/TimeseriesResponseValues'\n      type: array\n    TimestampEventAttribute:\n      description: Timestamp of your event.\n      example: '2019-01-02T09:42:36.320Z'\n      format: date-time\n      type: string\n    Unit:\n      description: Object containing the metric unit family, scale factor, name, and\n        short name.\n      nullable: true\n      properties:\n        family:\n          description: Unit family, allows for conversion between units of the same\n            family, for scaling.\n          example: time\n          type: string\n        name:\n          description: Unit name\n          example: minute\n          type: string\n        plural:\n          description: Plural form of the unit name.\n          example: minutes\n          type: string\n        scale_factor:\n          description: Factor for scaling between units of the same family.\n          example: 60.0\n          format: double\n          type: number\n        short_name:\n          description: Abbreviation of the unit.\n          example: min\n          type: string\n      type: object\n    UsageApplicationSecurityMonitoringResponse:\n      description: Application Security Monitoring usage response.\n      properties:\n        data:\n          description: Response containing Application Security Monitoring usage.\n          items:\n            $ref: '#/components/schemas/UsageDataObject'\n          type: array\n      type: object\n    UsageAttributesObject:\n      description: Usage attributes data.\n      properties:\n        org_name:\n          description: The organization name.\n          type: string\n        product_family:\n          description: The product for which usage is being reported.\n          type: string\n        public_id:\n          description: The organization public ID.\n          type: string\n        timeseries:\n          description: List of usage data reported for each requested hour.\n          items:\n            $ref: '#/components/schemas/UsageTimeSeriesObject'\n          type: array\n        usage_type:\n          $ref: '#/components/schemas/HourlyUsageType'\n      type: object\n    UsageDataObject:\n      description: Usage data.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/UsageAttributesObject'\n        id:\n          description: Unique ID of the response.\n          type: string\n        type:\n          $ref: '#/components/schemas/UsageTimeSeriesType'\n      type: object\n    UsageLambdaTracedInvocationsResponse:\n      description: Lambda Traced Invocations usage response.\n      properties:\n        data:\n          description: Response containing Lambda Traced Invocations usage.\n          items:\n            $ref: '#/components/schemas/UsageDataObject'\n          type: array\n      type: object\n    UsageObservabilityPipelinesResponse:\n      description: Observability Pipelines usage response.\n      properties:\n        data:\n          description: Response containing Observability Pipelines usage.\n          items:\n            $ref: '#/components/schemas/UsageDataObject'\n          type: array\n      type: object\n    UsageTimeSeriesObject:\n      description: Usage timeseries data.\n      properties:\n        timestamp:\n          description: Datetime in ISO-8601 format, UTC. The hour for the usage.\n          format: date-time\n          type: string\n        value:\n          description: Contains the number measured for the given usage_type during\n            the hour.\n          format: int64\n          nullable: true\n          type: integer\n      type: object\n    UsageTimeSeriesType:\n      default: usage_timeseries\n      description: Type of usage data.\n      enum:\n      - usage_timeseries\n      example: usage_timeseries\n      type: string\n      x-enum-varnames:\n      - USAGE_TIMESERIES\n    User:\n      description: User object returned by the API.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/UserAttributes'\n        id:\n          description: ID of the user.\n          type: string\n        relationships:\n          $ref: '#/components/schemas/UserResponseRelationships'\n        type:\n          $ref: '#/components/schemas/UsersType'\n      type: object\n    UserAttributes:\n      description: Attributes of user object returned by the API.\n      properties:\n        created_at:\n          description: Creation time of the user.\n          format: date-time\n          type: string\n        disabled:\n          description: Whether the user is disabled.\n          type: boolean\n        email:\n          description: Email of the user.\n          type: string\n        handle:\n          description: Handle of the user.\n          type: string\n        icon:\n          description: URL of the user's icon.\n          type: string\n        modified_at:\n          description: Time that the user was last modified.\n          format: date-time\n          type: string\n        name:\n          description: Name of the user.\n          nullable: true\n          type: string\n        service_account:\n          description: Whether the user is a service account.\n          type: boolean\n        status:\n          description: Status of the user.\n          type: string\n        title:\n          description: Title of the user.\n          nullable: true\n          type: string\n        verified:\n          description: Whether the user is verified.\n          type: boolean\n      type: object\n    UserCreateAttributes:\n      description: Attributes of the created user.\n      properties:\n        email:\n          description: The email of the user.\n          example: jane.doe@example.com\n          type: string\n        name:\n          description: The name of the user.\n          type: string\n        title:\n          description: The title of the user.\n          type: string\n      required:\n      - email\n      type: object\n    UserCreateData:\n      description: Object to create a user.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/UserCreateAttributes'\n        relationships:\n          $ref: '#/components/schemas/UserRelationships'\n        type:\n          $ref: '#/components/schemas/UsersType'\n      required:\n      - attributes\n      - type\n      type: object\n    UserCreateRequest:\n      description: Create a user.\n      properties:\n        data:\n          $ref: '#/components/schemas/UserCreateData'\n      required:\n      - data\n      type: object\n    UserInvitationData:\n      description: Object to create a user invitation.\n      properties:\n        relationships:\n          $ref: '#/components/schemas/UserInvitationRelationships'\n        type:\n          $ref: '#/components/schemas/UserInvitationsType'\n      required:\n      - type\n      - relationships\n      type: object\n    UserInvitationDataAttributes:\n      description: Attributes of a user invitation.\n      properties:\n        created_at:\n          description: Creation time of the user invitation.\n          format: date-time\n          type: string\n        expires_at:\n          description: Time of invitation expiration.\n          format: date-time\n          type: string\n        invite_type:\n          description: Type of invitation.\n          type: string\n        uuid:\n          description: UUID of the user invitation.\n          type: string\n      type: object\n    UserInvitationRelationships:\n      description: Relationships data for user invitation.\n      properties:\n        user:\n          $ref: '#/components/schemas/RelationshipToUser'\n      required:\n      - user\n      type: object\n    UserInvitationResponse:\n      description: User invitation as returned by the API.\n      properties:\n        data:\n          $ref: '#/components/schemas/UserInvitationResponseData'\n      type: object\n    UserInvitationResponseData:\n      description: Object of a user invitation returned by the API.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/UserInvitationDataAttributes'\n        id:\n          description: ID of the user invitation.\n          type: string\n        type:\n          $ref: '#/components/schemas/UserInvitationsType'\n      type: object\n    UserInvitationsRequest:\n      description: Object to invite users to join the organization.\n      properties:\n        data:\n          description: List of user invitations.\n          example: []\n          items:\n            $ref: '#/components/schemas/UserInvitationData'\n          type: array\n      required:\n      - data\n      type: object\n    UserInvitationsResponse:\n      description: User invitations as returned by the API.\n      properties:\n        data:\n          description: Array of user invitations.\n          items:\n            $ref: '#/components/schemas/UserInvitationResponseData'\n          type: array\n      type: object\n    UserInvitationsType:\n      default: user_invitations\n      description: User invitations type.\n      enum:\n      - user_invitations\n      example: user_invitations\n      type: string\n      x-enum-varnames:\n      - USER_INVITATIONS\n    UserRelationships:\n      description: Relationships of the user object.\n      properties:\n        roles:\n          $ref: '#/components/schemas/RelationshipToRoles'\n      type: object\n    UserResponse:\n      description: Response containing information about a single user.\n      properties:\n        data:\n          $ref: '#/components/schemas/User'\n        included:\n          description: Array of objects related to the user.\n          items:\n            $ref: '#/components/schemas/UserResponseIncludedItem'\n          type: array\n      type: object\n    UserResponseIncludedItem:\n      description: An object related to a user.\n      oneOf:\n      - $ref: '#/components/schemas/Organization'\n      - $ref: '#/components/schemas/Permission'\n      - $ref: '#/components/schemas/Role'\n      type: object\n    UserResponseRelationships:\n      description: Relationships of the user object returned by the API.\n      properties:\n        org:\n          $ref: '#/components/schemas/RelationshipToOrganization'\n        other_orgs:\n          $ref: '#/components/schemas/RelationshipToOrganizations'\n        other_users:\n          $ref: '#/components/schemas/RelationshipToUsers'\n        roles:\n          $ref: '#/components/schemas/RelationshipToRoles'\n      type: object\n    UserUpdateAttributes:\n      description: Attributes of the edited user.\n      properties:\n        disabled:\n          description: If the user is enabled or disabled.\n          type: boolean\n        email:\n          description: The email of the user.\n          type: string\n        name:\n          description: The name of the user.\n          type: string\n      type: object\n    UserUpdateData:\n      description: Object to update a user.\n      properties:\n        attributes:\n          $ref: '#/components/schemas/UserUpdateAttributes'\n        id:\n          description: ID of the user.\n          example: 00000000-0000-feed-0000-000000000000\n          type: string\n        type:\n          $ref: '#/components/schemas/UsersType'\n      required:\n      - attributes\n      - type\n      - id\n      type: object\n    UserUpdateRequest:\n      description: Update a user.\n      properties:\n        data:\n          $ref: '#/components/schemas/UserUpdateData'\n      required:\n      - data\n      type: object\n    UsersResponse:\n      description: Response containing information about multiple users.\n      properties:\n        data:\n          description: Array of returned users.\n          items:\n            $ref: '#/components/schemas/User'\n          type: array\n        included:\n          description: Array of objects related to the users.\n          items:\n            $ref: '#/components/schemas/UserResponseIncludedItem'\n          type: array\n        meta:\n          $ref: '#/components/schemas/ResponseMetaAttributes'\n      readOnly: true\n      type: object\n    UsersType:\n      default: users\n      description: Users resource type.\n      enum:\n      - users\n      example: users\n      type: string\n      x-enum-varnames:\n      - USERS\n  securitySchemes:\n    AuthZ:\n      description: This API uses OAuth 2 with the implicit grant flow.\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth2/v1/authorize\n          scopes:\n            dashboards_read: View dashboards.\n            dashboards_write: Create and change dashboards.\n            events_read: Read Events data.\n            incident_read: View incidents in Datadog.\n            incident_settings_write: Configure Incidents settings.\n            incident_write: Create, view, and manage incidents in Datadog.\n            metrics_read: View custom metrics.\n            monitors_read: View monitors.\n            security_monitoring_filters_read: Read Security Filters.\n            security_monitoring_filters_write: Create, edit, and delete Security Filters.\n            security_monitoring_rules_read: Read Detection Rules.\n            security_monitoring_rules_write: Create and edit Detection Rules.\n            security_monitoring_signals_read: View Security Signals.\n            usage_read: View your organization's usage and usage attribution.\n            user_access_invite: Invite other users to your organization.\n            user_access_manage: Disable users, manage user roles, manage SAML-to-role\n              mappings, and configure logs restriction queries.\n            user_access_read: View users and their roles and settings.\n          tokenUrl: /oauth2/v1/token\n      type: oauth2\n    apiKeyAuth:\n      description: Your Datadog API Key.\n      in: header\n      name: DD-API-KEY\n      type: apiKey\n      x-env-name: DD_API_KEY\n    appKeyAuth:\n      description: Your Datadog APP Key.\n      in: header\n      name: DD-APPLICATION-KEY\n      type: apiKey\n      x-env-name: DD_APP_KEY\ninfo:\n  contact:\n    email: support@datadoghq.com\n    name: Datadog Support\n    url: https://www.datadoghq.com/support/\n  description: Collection of all Datadog Public endpoints.\n  title: Datadog API V2 Collection\n  version: '1.0'\nopenapi: 3.0.0\npaths:\n  /api/v2/api_keys:\n    get:\n      description: List all API keys available for your account.\n      operationId: ListAPIKeys\n      parameters:\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      - $ref: '#/components/parameters/APIKeysSortParameter'\n      - $ref: '#/components/parameters/APIKeyFilterParameter'\n      - $ref: '#/components/parameters/APIKeyFilterCreatedAtStartParameter'\n      - $ref: '#/components/parameters/APIKeyFilterCreatedAtEndParameter'\n      - $ref: '#/components/parameters/APIKeyFilterModifiedAtStartParameter'\n      - $ref: '#/components/parameters/APIKeyFilterModifiedAtEndParameter'\n      - $ref: '#/components/parameters/APIKeyIncludeParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKeysResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get all API keys\n      tags:\n      - Key Management\n    post:\n      description: Create an API key.\n      operationId: CreateAPIKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIKeyCreateRequest'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKeyResponse'\n          description: Created\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create an API key\n      tags:\n      - Key Management\n      x-codegen-request-body-name: body\n  /api/v2/api_keys/{api_key_id}:\n    delete:\n      description: Delete an API key.\n      operationId: DeleteAPIKey\n      parameters:\n      - $ref: '#/components/parameters/APIKeyId'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete an API key\n      tags:\n      - Key Management\n    get:\n      description: Get an API key.\n      operationId: GetAPIKey\n      parameters:\n      - $ref: '#/components/parameters/APIKeyId'\n      - $ref: '#/components/parameters/APIKeyIncludeParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKeyResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get API key\n      tags:\n      - Key Management\n    patch:\n      description: Update an API key.\n      operationId: UpdateAPIKey\n      parameters:\n      - $ref: '#/components/parameters/APIKeyId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIKeyUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKeyResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Edit an API key\n      tags:\n      - Key Management\n      x-codegen-request-body-name: body\n  /api/v2/application_keys:\n    get:\n      description: List all application keys available for your org\n      operationId: ListApplicationKeys\n      parameters:\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      - $ref: '#/components/parameters/ApplicationKeysSortParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListApplicationKeysResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get all application keys\n      tags:\n      - Key Management\n  /api/v2/application_keys/{app_key_id}:\n    delete:\n      description: Delete an application key\n      operationId: DeleteApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete an application key\n      tags:\n      - Key Management\n      x-codegen-request-body-name: body\n    get:\n      description: Get an application key for your org.\n      operationId: GetApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      - $ref: '#/components/parameters/ApplicationKeyIncludeParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationKeyResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get an application key\n      tags:\n      - Key Management\n    patch:\n      description: Edit an application key\n      operationId: UpdateApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationKeyResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Edit an application key\n      tags:\n      - Key Management\n      x-codegen-request-body-name: body\n  /api/v2/audit/events:\n    get:\n      description: 'List endpoint returns events that match a Audit Logs search query.\n\n        [Results are paginated][1].\n\n\n        Use this endpoint to see your latest Audit Logs events.\n\n\n        [1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination'\n      operationId: ListAuditLogs\n      parameters:\n      - description: Search query following Audit Logs syntax.\n        example: '@type:session @application_id:xxxx'\n        in: query\n        name: filter[query]\n        required: false\n        schema:\n          type: string\n      - description: Minimum timestamp for requested events.\n        example: '2019-01-02T09:42:36.320Z'\n        in: query\n        name: filter[from]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Maximum timestamp for requested events.\n        example: '2019-01-03T09:42:36.320Z'\n        in: query\n        name: filter[to]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Order of events in results.\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/AuditLogsSort'\n      - description: List following results with a cursor provided in the previous\n          query.\n        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n        in: query\n        name: page[cursor]\n        required: false\n        schema:\n          type: string\n      - description: Maximum number of events in the response.\n        example: 25\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 1000\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuditLogsEventsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get a list of Audit Logs events\n      tags:\n      - Audit\n      x-pagination:\n        cursorParam: page[cursor]\n        cursorPath: meta.page.after\n        limitParam: page[limit]\n        resultsPath: data\n  /api/v2/audit/events/search:\n    post:\n      description: 'List endpoint returns Audit Logs events that match an Audit search\n        query.\n\n        [Results are paginated][1].\n\n\n        Use this endpoint to build complex Audit Logs events filtering and search.\n\n\n        [1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination'\n      operationId: SearchAuditLogs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuditLogsSearchEventsRequest'\n        required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuditLogsEventsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Search Audit Logs events\n      tags:\n      - Audit\n      x-codegen-request-body-name: body\n      x-pagination:\n        cursorParam: body.page.cursor\n        cursorPath: meta.page.after\n        limitParam: body.page.limit\n        resultsPath: data\n  /api/v2/authn_mappings:\n    get:\n      description: List all AuthN Mappings in the org.\n      operationId: ListAuthNMappings\n      parameters:\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      - description: Sort AuthN Mappings depending on the given field.\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/AuthNMappingsSort'\n      - description: Filter all mappings by the given string.\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthNMappingsResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: List all AuthN Mappings\n      tags:\n      - AuthN Mappings\n      x-permission: OPEN()\n    post:\n      description: Create an AuthN Mapping.\n      operationId: CreateAuthNMapping\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthNMappingCreateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthNMappingResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Create an AuthN Mapping\n      tags:\n      - AuthN Mappings\n      x-codegen-request-body-name: body\n      x-permission: OR(USER_ACCESS_MANAGE)\n  /api/v2/authn_mappings/{authn_mapping_id}:\n    delete:\n      description: Delete an AuthN Mapping specified by AuthN Mapping UUID.\n      operationId: DeleteAuthNMapping\n      parameters:\n      - $ref: '#/components/parameters/AuthNMappingID'\n      responses:\n        '204':\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Delete an AuthN Mapping\n      tags:\n      - AuthN Mappings\n      x-permission: OR(USER_ACCESS_MANAGE)\n    get:\n      description: Get an AuthN Mapping specified by the AuthN Mapping UUID.\n      operationId: GetAuthNMapping\n      parameters:\n      - $ref: '#/components/parameters/AuthNMappingID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthNMappingResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get an AuthN Mapping by UUID\n      tags:\n      - AuthN Mappings\n      x-permission: OPEN()\n    patch:\n      description: Edit an AuthN Mapping.\n      operationId: UpdateAuthNMapping\n      parameters:\n      - $ref: '#/components/parameters/AuthNMappingID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthNMappingUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthNMappingResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Conflict\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Unprocessable Entity\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Edit an AuthN Mapping\n      tags:\n      - AuthN Mappings\n      x-codegen-request-body-name: body\n      x-permission: OR(USER_ACCESS_MANAGE)\n  /api/v2/ci/pipelines/analytics/aggregate:\n    post:\n      description: The API endpoint to aggregate CI Visibility pipeline events into\n        buckets of computed metrics and timeseries.\n      operationId: AggregateCIAppPipelineEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CIAppPipelinesAggregateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CIAppPipelinesAnalyticsAggregateResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Aggregate pipelines events\n      tags:\n      - CI Visibility Pipelines\n      x-codegen-request-body-name: body\n  /api/v2/ci/pipelines/events:\n    get:\n      description: 'List endpoint returns CI Visibility pipeline events that match\n        a log search query.\n\n        [Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\n\n        Use this endpoint to see your latest pipeline events.'\n      operationId: ListCIAppPipelineEvents\n      parameters:\n      - description: Search query following log syntax.\n        example: '@ci.provider.name:github @ci.pipeline.name:Pull Request Labeler'\n        in: query\n        name: filter[query]\n        required: false\n        schema:\n          type: string\n      - description: Minimum timestamp for requested events.\n        example: '2019-01-02T09:42:36.320Z'\n        in: query\n        name: filter[from]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Maximum timestamp for requested events.\n        example: '2019-01-03T09:42:36.320Z'\n        in: query\n        name: filter[to]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Order of events in results.\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/CIAppSort'\n      - description: List following results with a cursor provided in the previous\n          query.\n        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n        in: query\n        name: page[cursor]\n        required: false\n        schema:\n          type: string\n      - description: Maximum number of events in the response.\n        example: 25\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 1000\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CIAppPipelineEventsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get a list of pipelines events\n      tags:\n      - CI Visibility Pipelines\n      x-pagination:\n        cursorParam: page[cursor]\n        cursorPath: meta.page.after\n        limitParam: page[limit]\n        resultsPath: data\n  /api/v2/ci/pipelines/events/search:\n    post:\n      description: 'List endpoint returns CI Visibility pipeline events that match\n        a log search query.\n\n        [Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\n\n        Use this endpoint to build complex events filtering and search.'\n      operationId: SearchCIAppPipelineEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CIAppPipelineEventsRequest'\n        required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CIAppPipelineEventsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Search pipelines events\n      tags:\n      - CI Visibility Pipelines\n      x-codegen-request-body-name: body\n      x-pagination:\n        cursorParam: body.page.cursor\n        cursorPath: meta.page.after\n        limitParam: body.page.limit\n        resultsPath: data\n  /api/v2/ci/tests/analytics/aggregate:\n    post:\n      description: The API endpoint to aggregate CI Visibility test events into buckets\n        of computed metrics and timeseries.\n      operationId: AggregateCIAppTestEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CIAppTestsAggregateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CIAppTestsAnalyticsAggregateResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Aggregate tests events\n      tags:\n      - CI Visibility Tests\n      x-codegen-request-body-name: body\n  /api/v2/ci/tests/events:\n    get:\n      description: 'List endpoint returns CI Visibility test events that match a log\n        search query.\n\n        [Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\n\n        Use this endpoint to see your latest test events.'\n      operationId: ListCIAppTestEvents\n      parameters:\n      - description: Search query following log syntax.\n        example: '@test.name:test_foo @test.suite:github.com/DataDog/dd-go/model'\n        in: query\n        name: filter[query]\n        required: false\n        schema:\n          type: string\n      - description: Minimum timestamp for requested events.\n        example: '2019-01-02T09:42:36.320Z'\n        in: query\n        name: filter[from]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Maximum timestamp for requested events.\n        example: '2019-01-03T09:42:36.320Z'\n        in: query\n        name: filter[to]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Order of events in results.\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/CIAppSort'\n      - description: List following results with a cursor provided in the previous\n          query.\n        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n        in: query\n        name: page[cursor]\n        required: false\n        schema:\n          type: string\n      - description: Maximum number of events in the response.\n        example: 25\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 1000\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CIAppTestEventsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get a list of tests events\n      tags:\n      - CI Visibility Tests\n      x-pagination:\n        cursorParam: page[cursor]\n        cursorPath: meta.page.after\n        limitParam: page[limit]\n        resultsPath: data\n  /api/v2/ci/tests/events/search:\n    post:\n      description: 'List endpoint returns CI Visibility test events that match a log\n        search query.\n\n        [Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\n\n        Use this endpoint to build complex events filtering and search.'\n      operationId: SearchCIAppTestEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CIAppTestEventsRequest'\n        required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CIAppTestEventsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Search tests events\n      tags:\n      - CI Visibility Tests\n      x-codegen-request-body-name: body\n      x-pagination:\n        cursorParam: body.page.cursor\n        cursorPath: meta.page.after\n        limitParam: body.page.limit\n        resultsPath: data\n  /api/v2/current_user/application_keys:\n    get:\n      description: List all application keys available for current user\n      operationId: ListCurrentUserApplicationKeys\n      parameters:\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      - $ref: '#/components/parameters/ApplicationKeysSortParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListApplicationKeysResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get all application keys owned by current user\n      tags:\n      - Key Management\n    post:\n      description: Create an application key for current user\n      operationId: CreateCurrentUserApplicationKey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationKeyCreateRequest'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationKeyResponse'\n          description: Created\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create an application key for current user\n      tags:\n      - Key Management\n      x-codegen-request-body-name: body\n  /api/v2/current_user/application_keys/{app_key_id}:\n    delete:\n      description: Delete an application key owned by current user\n      operationId: DeleteCurrentUserApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete an application key owned by current user\n      tags:\n      - Key Management\n    get:\n      description: Get an application key owned by current user\n      operationId: GetCurrentUserApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationKeyResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get one application key owned by current user\n      tags:\n      - Key Management\n    patch:\n      description: Edit an application key owned by current user\n      operationId: UpdateCurrentUserApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationKeyResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Edit an application key owned by current user\n      tags:\n      - Key Management\n      x-codegen-request-body-name: body\n  /api/v2/dashboard/lists/manual/{dashboard_list_id}/dashboards:\n    delete:\n      description: Delete dashboards from an existing dashboard list.\n      operationId: DeleteDashboardListItems\n      parameters:\n      - description: ID of the dashboard list to delete items from.\n        in: path\n        name: dashboard_list_id\n        required: true\n        schema:\n          format: int64\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DashboardListDeleteItemsRequest'\n        description: Dashboards to delete from the dashboard list.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DashboardListDeleteItemsResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete items from a dashboard list\n      tags:\n      - Dashboard Lists\n      x-codegen-request-body-name: body\n    get:\n      description: \"Fetch the dashboard list\\u2019s dashboard definitions.\"\n      operationId: GetDashboardListItems\n      parameters:\n      - description: ID of the dashboard list to get items from.\n        in: path\n        name: dashboard_list_id\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DashboardListItems'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - dashboards_read\n      summary: Get items of a Dashboard List\n      tags:\n      - Dashboard Lists\n    post:\n      description: Add dashboards to an existing dashboard list.\n      operationId: CreateDashboardListItems\n      parameters:\n      - description: ID of the dashboard list to add items to.\n        in: path\n        name: dashboard_list_id\n        required: true\n        schema:\n          format: int64\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DashboardListAddItemsRequest'\n        description: Dashboards to add to the dashboard list.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DashboardListAddItemsResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Add Items to a Dashboard List\n      tags:\n      - Dashboard Lists\n      x-codegen-request-body-name: body\n    put:\n      description: Update dashboards of an existing dashboard list.\n      operationId: UpdateDashboardListItems\n      parameters:\n      - description: ID of the dashboard list to update items from.\n        in: path\n        name: dashboard_list_id\n        required: true\n        schema:\n          format: int64\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DashboardListUpdateItemsRequest'\n        description: New dashboards of the dashboard list.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DashboardListUpdateItemsResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update items of a dashboard list\n      tags:\n      - Dashboard Lists\n      x-codegen-request-body-name: body\n  /api/v2/events:\n    get:\n      description: 'List endpoint returns events that match an events search query.\n\n        [Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\n\n        Use this endpoint to see your latest events.'\n      operationId: ListEvents\n      parameters:\n      - description: Search query following events syntax.\n        in: query\n        name: filter[query]\n        required: false\n        schema:\n          type: string\n      - description: Minimum timestamp for requested events.\n        in: query\n        name: filter[from]\n        required: false\n        schema:\n          type: string\n      - description: Maximum timestamp for requested events.\n        in: query\n        name: filter[to]\n        required: false\n        schema:\n          type: string\n      - description: Order of events in results.\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/EventsSort'\n      - description: List following results with a cursor provided in the previous\n          query.\n        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n        in: query\n        name: page[cursor]\n        required: false\n        schema:\n          type: string\n      - description: Maximum number of events in the response.\n        example: 25\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 1000\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventsListResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - events_read\n      summary: Get a list of events\n      tags:\n      - Events\n      x-pagination:\n        cursorParam: page[cursor]\n        cursorPath: meta.page.after\n        limitParam: page[limit]\n        resultsPath: data\n      x-unstable: '**Note**: This endpoint is in private beta.\n\n        For access, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/events/search:\n    post:\n      description: 'List endpoint returns events that match an events search query.\n\n        [Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).\n\n\n        Use this endpoint to build complex events filtering and search.'\n      operationId: SearchEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventsListRequest'\n        required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventsListResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - events_read\n      summary: Search events\n      tags:\n      - Events\n      x-codegen-request-body-name: body\n      x-pagination:\n        cursorParam: body.page.cursor\n        cursorPath: meta.page.after\n        limitParam: body.page.limit\n        resultsPath: data\n      x-unstable: '**Note**: This endpoint is in private beta.\n\n        For access, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/incidents:\n    get:\n      description: Get all incidents for the user's organization.\n      operationId: ListIncidents\n      parameters:\n      - $ref: '#/components/parameters/IncidentIncludeQueryParameter'\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageOffset'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_read\n      summary: Get a list of incidents\n      tags:\n      - Incidents\n      x-pagination:\n        limitParam: page[size]\n        pageOffsetParam: page[offset]\n        resultsPath: data\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    post:\n      description: Create an incident.\n      operationId: CreateIncident\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncidentCreateRequest'\n        description: Incident payload.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentResponse'\n          description: CREATED\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_write\n      summary: Create an incident\n      tags:\n      - Incidents\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/incidents/{incident_id}:\n    delete:\n      description: Deletes an existing incident from the users organization.\n      operationId: DeleteIncident\n      parameters:\n      - $ref: '#/components/parameters/IncidentIDPathParameter'\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_write\n      summary: Delete an existing incident\n      tags:\n      - Incidents\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    get:\n      description: Get the details of an incident by `incident_id`.\n      operationId: GetIncident\n      parameters:\n      - $ref: '#/components/parameters/IncidentIDPathParameter'\n      - $ref: '#/components/parameters/IncidentIncludeQueryParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_read\n      summary: Get the details of an incident\n      tags:\n      - Incidents\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    patch:\n      description: Updates an incident. Provide only the attributes that should be\n        updated as this request is a partial update.\n      operationId: UpdateIncident\n      parameters:\n      - $ref: '#/components/parameters/IncidentIDPathParameter'\n      - $ref: '#/components/parameters/IncidentIncludeQueryParameter'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncidentUpdateRequest'\n        description: Incident Payload.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_write\n      summary: Update an existing incident\n      tags:\n      - Incidents\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/incidents/{incident_id}/attachments:\n    get:\n      description: Get all attachments for a given incident.\n      operationId: ListIncidentAttachments\n      parameters:\n      - $ref: '#/components/parameters/IncidentIDPathParameter'\n      - $ref: '#/components/parameters/IncidentAttachmentIncludeQueryParameter'\n      - $ref: '#/components/parameters/IncidentAttachmentFilterQueryParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentAttachmentsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_read\n      summary: Get a list of attachments\n      tags:\n      - Incidents\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    patch:\n      description: The bulk update endpoint for creating, updating, and deleting attachments\n        for a given incident.\n      operationId: UpdateIncidentAttachments\n      parameters:\n      - $ref: '#/components/parameters/IncidentIDPathParameter'\n      - $ref: '#/components/parameters/IncidentAttachmentIncludeQueryParameter'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncidentAttachmentUpdateRequest'\n        description: Incident Attachment Payload.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentAttachmentUpdateResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create, update, and delete incident attachments\n      tags:\n      - Incidents\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/integration/opsgenie/services:\n    get:\n      description: Get a list of all services from the Datadog Opsgenie integration.\n      operationId: ListOpsgenieServices\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpsgenieServicesResponse'\n          description: OK\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get all service objects\n      tags:\n      - Opsgenie Integration\n    post:\n      description: Create a new service object in the Opsgenie integration.\n      operationId: CreateOpsgenieService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OpsgenieServiceCreateRequest'\n        description: Opsgenie service payload\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpsgenieServiceResponse'\n          description: CREATED\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '409':\n          $ref: '#/components/responses/ConflictResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create a new service object\n      tags:\n      - Opsgenie Integration\n      x-codegen-request-body-name: body\n  /api/v2/integration/opsgenie/services/{integration_service_id}:\n    delete:\n      description: Delete a single service object in the Datadog Opsgenie integration.\n      operationId: DeleteOpsgenieService\n      parameters:\n      - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete a single service object\n      tags:\n      - Opsgenie Integration\n    get:\n      description: Get a single service from the Datadog Opsgenie integration.\n      operationId: GetOpsgenieService\n      parameters:\n      - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpsgenieServiceResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '409':\n          $ref: '#/components/responses/ConflictResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get a single service object\n      tags:\n      - Opsgenie Integration\n    patch:\n      description: Update a single service object in the Datadog Opsgenie integration.\n      operationId: UpdateOpsgenieService\n      parameters:\n      - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OpsgenieServiceUpdateRequest'\n        description: Opsgenie service payload.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpsgenieServiceResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '409':\n          $ref: '#/components/responses/ConflictResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update a single service object\n      tags:\n      - Opsgenie Integration\n      x-codegen-request-body-name: body\n  /api/v2/integrations/confluent-cloud/accounts:\n    get:\n      description: List Confluent accounts.\n      operationId: ListConfluentAccount\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfluentAccountsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: List Confluent accounts\n      tags:\n      - Confluent Cloud\n    post:\n      description: Create a Confluent account.\n      operationId: CreateConfluentAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfluentAccountCreateRequest'\n        description: Confluent payload\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfluentAccountResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Add Confluent account\n      tags:\n      - Confluent Cloud\n      x-codegen-request-body-name: body\n  /api/v2/integrations/confluent-cloud/accounts/{account_id}:\n    delete:\n      description: Delete a Confluent account with the provided account ID.\n      operationId: DeleteConfluentAccount\n      parameters:\n      - $ref: '#/components/parameters/ConfluentAccountID'\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete Confluent account\n      tags:\n      - Confluent Cloud\n    get:\n      description: Get the Confluent account with the provided account ID.\n      operationId: GetConfluentAccount\n      parameters:\n      - $ref: '#/components/parameters/ConfluentAccountID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfluentAccountResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get Confluent account\n      tags:\n      - Confluent Cloud\n    patch:\n      description: Update the Confluent account with the provided account ID.\n      operationId: UpdateConfluentAccount\n      parameters:\n      - $ref: '#/components/parameters/ConfluentAccountID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfluentAccountUpdateRequest'\n        description: Confluent payload\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfluentAccountResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update Confluent account\n      tags:\n      - Confluent Cloud\n      x-codegen-request-body-name: body\n  /api/v2/integrations/confluent-cloud/accounts/{account_id}/resources:\n    get:\n      description: Get a Confluent resource for the account associated with the provided\n        ID.\n      operationId: ListConfluentResource\n      parameters:\n      - $ref: '#/components/parameters/ConfluentAccountID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfluentResourcesResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: List Confluent Account resources\n      tags:\n      - Confluent Cloud\n    post:\n      description: Create a Confluent resource for the account associated with the\n        provided ID.\n      operationId: CreateConfluentResource\n      parameters:\n      - $ref: '#/components/parameters/ConfluentAccountID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfluentResourceRequest'\n        description: Confluent payload\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfluentResourceResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Add resource to Confluent account\n      tags:\n      - Confluent Cloud\n      x-codegen-request-body-name: body\n  /api/v2/integrations/confluent-cloud/accounts/{account_id}/resources/{resource_id}:\n    delete:\n      description: Delete a Confluent resource with the provided resource id for the\n        account associated with the provided account ID.\n      operationId: DeleteConfluentResource\n      parameters:\n      - $ref: '#/components/parameters/ConfluentAccountID'\n      - $ref: '#/components/parameters/ConfluentResourceID'\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete resource from Confluent account\n      tags:\n      - Confluent Cloud\n    get:\n      description: Get a Confluent resource with the provided resource id for the\n        account associated with the provided account ID.\n      operationId: GetConfluentResource\n      parameters:\n      - $ref: '#/components/parameters/ConfluentAccountID'\n      - $ref: '#/components/parameters/ConfluentResourceID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfluentResourceResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get resource from Confluent account\n      tags:\n      - Confluent Cloud\n    patch:\n      description: Update a Confluent resource with the provided resource id for the\n        account associated with the provided account ID.\n      operationId: UpdateConfluentResource\n      parameters:\n      - $ref: '#/components/parameters/ConfluentAccountID'\n      - $ref: '#/components/parameters/ConfluentResourceID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfluentResourceRequest'\n        description: Confluent payload\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfluentResourceResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update resource in Confluent account\n      tags:\n      - Confluent Cloud\n      x-codegen-request-body-name: body\n      x-permission:\n        operator: OR\n        permissions:\n        - STANDARD\n  /api/v2/logs:\n    post:\n      description: 'Send your logs to your Datadog platform over HTTP. Limits per\n        HTTP request are:\n\n\n        - Maximum content size per payload (uncompressed): 5MB\n\n        - Maximum size for a single log: 1MB\n\n        - Maximum array size if sending multiple logs in an array: 1000 entries\n\n\n        Any log exceeding 1MB is accepted and truncated by Datadog:\n\n        - For a single log request, the API truncates the log at 1MB and returns a\n        2xx.\n\n        - For a multi-logs request, the API processes all logs, truncates only logs\n        larger than 1MB, and returns a 2xx.\n\n\n        Datadog recommends sending your logs compressed.\n\n        Add the `Content-Encoding: gzip` header to the request when sending compressed\n        logs.\n\n\n        The status codes answered by the HTTP API are:\n\n        - 202: Accepted: the request has been accepted for processing\n\n        - 400: Bad request (likely an issue in the payload formatting)\n\n        - 401: Unauthorized (likely a missing API Key)\n\n        - 403: Permission issue (likely using an invalid API Key)\n\n        - 408: Request Timeout, request should be retried after some time\n\n        - 413: Payload too large (batch is above 5MB uncompressed)\n\n        - 429: Too Many Requests, request should be retried after some time\n\n        - 500: Internal Server Error, the server encountered an unexpected condition\n        that prevented it from fulfilling the request, request should be retried after\n        some time\n\n        - 503: Service Unavailable, the server is not ready to handle the request\n        probably because it is overloaded, request should be retried after some time'\n      operationId: SubmitLog\n      parameters:\n      - description: HTTP header used to compress the media-type.\n        in: header\n        name: Content-Encoding\n        required: false\n        schema:\n          $ref: '#/components/schemas/ContentEncoding'\n      - description: Log tags can be passed as query parameters with `text/plain`\n          content type.\n        example: env:prod,user:my-user\n        in: query\n        name: ddtags\n        required: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              multi-json-messages:\n                description: Pass multiple log objects at once.\n                summary: Multi JSON Messages\n                value:\n                - ddsource: nginx\n                  ddtags: env:staging,version:5.1\n                  hostname: i-012345678\n                  message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello\n                  service: payment\n                - ddsource: nginx\n                  ddtags: env:staging,version:5.1\n                  hostname: i-012345679\n                  message: 2019-11-19T14:37:58,995 INFO [process.name][20081] World\n                  service: payment\n              simple-json-message:\n                description: Log attributes can be passed as `key:value` pairs in\n                  valid JSON messages.\n                summary: Simple JSON Message\n                value:\n                  ddsource: nginx\n                  ddtags: env:staging,version:5.1\n                  hostname: i-012345678\n                  message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello\n                    World\n                  service: payment\n            schema:\n              $ref: '#/components/schemas/HTTPLog'\n          application/logplex-1:\n            examples:\n              multi-raw-message:\n                description: Submit log messages.\n                summary: Multi Logplex Messages\n                value: '2019-11-19T14:37:58,995 INFO [process.name][20081] Hello\n\n                  2019-11-19T14:37:58,995 INFO [process.name][20081] World'\n              simple-logplex-message:\n                description: Submit log string.\n                summary: Simple Logplex Message\n                value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World\n            schema:\n              type: string\n          text/plain:\n            examples:\n              multi-raw-message:\n                description: Submit log string.\n                summary: Multi Raw Messages\n                value: '2019-11-19T14:37:58,995 INFO [process.name][20081] Hello\n\n                  2019-11-19T14:37:58,995 INFO [process.name][20081] World\n\n                  '\n              simple-raw-message:\n                description: 'Submit log string. Log attributes can be passed as query\n                  parameters in the URL. This enables the addition of tags or the\n                  source by using the `ddtags` and `ddsource` parameters: `?host=my-hostname\u0026service=my-service\u0026ddsource=my-source\u0026ddtags=env:prod,user:my-user`.'\n                summary: Simple Raw Message\n                value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World\n            schema:\n              type: string\n        description: Log to send (JSON format).\n        required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                type: object\n          description: Request accepted for processing (always 202 empty JSON).\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPLogErrors'\n          description: Bad Request\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPLogErrors'\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPLogErrors'\n          description: Forbidden\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPLogErrors'\n          description: Request Timeout\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPLogErrors'\n          description: Payload Too Large\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPLogErrors'\n          description: Too Many Requests\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPLogErrors'\n          description: Internal Server Error\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPLogErrors'\n          description: Service Unavailable\n      security:\n      - apiKeyAuth: []\n      servers:\n      - url: https://{subdomain}.{site}\n        variables:\n          site:\n            default: datadoghq.com\n            description: The regional site for customers.\n            enum:\n            - datadoghq.com\n            - us3.datadoghq.com\n            - us5.datadoghq.com\n            - datadoghq.eu\n            - ddog-gov.com\n          subdomain:\n            default: http-intake.logs\n            description: The subdomain where the API is deployed.\n      - url: '{protocol}://{name}'\n        variables:\n          name:\n            default: http-intake.logs.datadoghq.com\n            description: Full site DNS name.\n          protocol:\n            default: https\n            description: The protocol for accessing the API.\n      - url: https://{subdomain}.{site}\n        variables:\n          site:\n            default: datadoghq.com\n            description: Any Datadog deployment.\n          subdomain:\n            default: http-intake.logs\n            description: The subdomain where the API is deployed.\n      summary: Send logs\n      tags:\n      - Logs\n      x-codegen-request-body-name: body\n  /api/v2/logs/analytics/aggregate:\n    post:\n      description: The API endpoint to aggregate events into buckets and compute metrics\n        and timeseries.\n      operationId: AggregateLogs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogsAggregateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsAggregateResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Aggregate events\n      tags:\n      - Logs\n      x-codegen-request-body-name: body\n  /api/v2/logs/config/archive-order:\n    get:\n      description: 'Get the current order of your archives.\n\n        This endpoint takes no JSON arguments.'\n      operationId: GetLogsArchiveOrder\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsArchiveOrder'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get archive order\n      tags:\n      - Logs Archives\n    put:\n      description: 'Update the order of your archives. Since logs are processed sequentially,\n        reordering an archive may change\n\n        the structure and content of the data processed by other archives.\n\n\n        **Note**: Using the `PUT` method updates your archive''s order by replacing\n        the current order\n\n        with the new one.'\n      operationId: UpdateLogsArchiveOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogsArchiveOrder'\n        description: An object containing the new ordered list of archive IDs.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsArchiveOrder'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Unprocessable Entity\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update archive order\n      tags:\n      - Logs Archives\n      x-codegen-request-body-name: body\n  /api/v2/logs/config/archives:\n    get:\n      description: Get the list of configured logs archives with their definitions.\n      operationId: ListLogsArchives\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsArchives'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get all archives\n      tags:\n      - Logs Archives\n    post:\n      description: Create an archive in your organization.\n      operationId: CreateLogsArchive\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogsArchiveCreateRequest'\n        description: The definition of the new archive.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsArchive'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create an archive\n      tags:\n      - Logs Archives\n      x-codegen-request-body-name: body\n  /api/v2/logs/config/archives/{archive_id}:\n    delete:\n      description: Delete a given archive from your organization.\n      operationId: DeleteLogsArchive\n      parameters:\n      - $ref: '#/components/parameters/ArchiveID'\n      responses:\n        '204':\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete an archive\n      tags:\n      - Logs Archives\n    get:\n      description: Get a specific archive from your organization.\n      operationId: GetLogsArchive\n      parameters:\n      - $ref: '#/components/parameters/ArchiveID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsArchive'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get an archive\n      tags:\n      - Logs Archives\n    put:\n      description: 'Update a given archive configuration.\n\n\n        **Note**: Using this method updates your archive configuration by **replacing**\n\n        your current configuration with the new one sent to your Datadog organization.'\n      operationId: UpdateLogsArchive\n      parameters:\n      - $ref: '#/components/parameters/ArchiveID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogsArchiveCreateRequest'\n        description: New definition of the archive.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsArchive'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update an archive\n      tags:\n      - Logs Archives\n      x-codegen-request-body-name: body\n  /api/v2/logs/config/archives/{archive_id}/readers:\n    delete:\n      description: Removes a role from an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))\n      operationId: RemoveRoleFromArchive\n      parameters:\n      - $ref: '#/components/parameters/ArchiveID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationshipToRole'\n        required: true\n      responses:\n        '204':\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Revoke role from an archive\n      tags:\n      - Logs Archives\n      x-codegen-request-body-name: body\n    get:\n      description: Returns all read roles a given archive is restricted to.\n      operationId: ListArchiveReadRoles\n      parameters:\n      - $ref: '#/components/parameters/ArchiveID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RolesResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: List read roles for an archive\n      tags:\n      - Logs Archives\n      x-codegen-request-body-name: body\n    post:\n      description: Adds a read role to an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))\n      operationId: AddReadRoleToArchive\n      parameters:\n      - $ref: '#/components/parameters/ArchiveID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationshipToRole'\n        required: true\n      responses:\n        '204':\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Grant role to an archive\n      tags:\n      - Logs Archives\n      x-codegen-request-body-name: body\n  /api/v2/logs/config/metrics:\n    get:\n      description: Get the list of configured log-based metrics with their definitions.\n      operationId: ListLogsMetrics\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsMetricsResponse'\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get all log-based metrics\n      tags:\n      - Logs Metrics\n    post:\n      description: 'Create a metric based on your ingested logs in your organization.\n\n        Returns the log-based metric object from the request body when the request\n        is successful.'\n      operationId: CreateLogsMetric\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogsMetricCreateRequest'\n        description: The definition of the new log-based metric.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsMetricResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '409':\n          $ref: '#/components/responses/ConflictResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create a log-based metric\n      tags:\n      - Logs Metrics\n      x-codegen-request-body-name: body\n  /api/v2/logs/config/metrics/{metric_id}:\n    delete:\n      description: Delete a specific log-based metric from your organization.\n      operationId: DeleteLogsMetric\n      parameters:\n      - $ref: '#/components/parameters/MetricID'\n      responses:\n        '200':\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete a log-based metric\n      tags:\n      - Logs Metrics\n    get:\n      description: Get a specific log-based metric from your organization.\n      operationId: GetLogsMetric\n      parameters:\n      - $ref: '#/components/parameters/MetricID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsMetricResponse'\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get a log-based metric\n      tags:\n      - Logs Metrics\n    patch:\n      description: 'Update a specific log-based metric from your organization.\n\n        Returns the log-based metric object from the request body when the request\n        is successful.'\n      operationId: UpdateLogsMetric\n      parameters:\n      - $ref: '#/components/parameters/MetricID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogsMetricUpdateRequest'\n        description: New definition of the log-based metric.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsMetricResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update a log-based metric\n      tags:\n      - Logs Metrics\n      x-codegen-request-body-name: body\n  /api/v2/logs/events:\n    get:\n      description: 'List endpoint returns logs that match a log search query.\n\n        [Results are paginated][1].\n\n\n        Use this endpoint to see your latest logs.\n\n\n        **If you are considering archiving logs for your organization,\n\n        consider use of the Datadog archive capabilities instead of the log list API.\n\n        See [Datadog Logs Archive documentation][2].**\n\n\n        [1]: /logs/guide/collect-multiple-logs-with-pagination\n\n        [2]: https://docs.datadoghq.com/logs/archives'\n      operationId: ListLogsGet\n      parameters:\n      - description: Search query following logs syntax.\n        example: '@datacenter:us @role:db'\n        in: query\n        name: filter[query]\n        required: false\n        schema:\n          type: string\n      - description: 'For customers with multiple indexes, the indexes to search\n\n          Defaults to ''*'' which means all indexes'\n        example: main\n        in: query\n        name: filter[index]\n        required: false\n        schema:\n          type: string\n      - description: Minimum timestamp for requested logs.\n        example: '2019-01-02T09:42:36.320Z'\n        in: query\n        name: filter[from]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Maximum timestamp for requested logs.\n        example: '2019-01-03T09:42:36.320Z'\n        in: query\n        name: filter[to]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Specifies the storage type to be used\n        example: indexes\n        in: query\n        name: filter[storage_tier]\n        required: false\n        schema:\n          $ref: '#/components/schemas/LogsStorageTier'\n      - description: Order of logs in results.\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/LogsSort'\n      - description: List following results with a cursor provided in the previous\n          query.\n        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n        in: query\n        name: page[cursor]\n        required: false\n        schema:\n          type: string\n      - description: Maximum number of logs in the response.\n        example: 25\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 1000\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsListResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get a list of logs\n      tags:\n      - Logs\n      x-pagination:\n        cursorParam: page[cursor]\n        cursorPath: meta.page.after\n        limitParam: page[limit]\n        resultsPath: data\n  /api/v2/logs/events/search:\n    post:\n      description: 'List endpoint returns logs that match a log search query.\n\n        [Results are paginated][1].\n\n\n        Use this endpoint to build complex logs filtering and search.\n\n\n        **If you are considering archiving logs for your organization,\n\n        consider use of the Datadog archive capabilities instead of the log list API.\n\n        See [Datadog Logs Archive documentation][2].**\n\n\n        [1]: /logs/guide/collect-multiple-logs-with-pagination\n\n        [2]: https://docs.datadoghq.com/logs/archives'\n      operationId: ListLogs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogsListRequest'\n        required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogsListResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Search logs\n      tags:\n      - Logs\n      x-codegen-request-body-name: body\n      x-pagination:\n        cursorParam: body.page.cursor\n        cursorPath: meta.page.after\n        limitParam: body.page.limit\n        resultsPath: data\n  /api/v2/metrics:\n    get:\n      description: \"Returns all metrics that can be configured in the Metrics Summary\n        page or with Metrics without Limits\\u2122 (matching additional filters if\n        specified).\"\n      operationId: ListTagConfigurations\n      parameters:\n      - description: Filter custom metrics that have configured tags.\n        example: true\n        in: query\n        name: filter[configured]\n        required: false\n        schema:\n          type: boolean\n      - description: Filter tag configurations by configured tags.\n        example: app\n        in: query\n        name: filter[tags_configured]\n        required: false\n        schema:\n          description: Tag keys to filter by.\n          type: string\n      - description: Filter metrics by metric type.\n        in: query\n        name: filter[metric_type]\n        required: false\n        schema:\n          $ref: '#/components/schemas/MetricTagConfigurationMetricTypes'\n      - description: 'Filter distributions with additional percentile\n\n          aggregations enabled or disabled.'\n        example: true\n        in: query\n        name: filter[include_percentiles]\n        required: false\n        schema:\n          type: boolean\n      - description: 'Filter custom metrics that have or have not been queried in\n          the specified window[seconds].\n\n          If no window is provided or the window is less than 2 hours, a default of\n          2 hours will be applied.'\n        example: true\n        in: query\n        name: filter[queried]\n        required: false\n        schema:\n          type: boolean\n      - description: 'Filter metrics that have been submitted with the given tags.\n          Supports boolean and wildcard expressions.\n\n          Can only be combined with the filter[queried] filter.'\n        example: env IN (staging,test) AND service:web\n        in: query\n        name: filter[tags]\n        required: false\n        schema:\n          type: string\n      - description: 'The number of seconds of look back (from now) to apply to a\n          filter[tag] or filter[queried] query.\n\n          Defaults value is 3600 (1 hour), maximum value is 1,209,600 (2 weeks).'\n        example: 3600\n        in: query\n        name: window[seconds]\n        required: false\n        schema:\n          format: int64\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsAndMetricTagConfigurationsResponse'\n          description: Success\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - metrics_read\n      summary: Get a list of metrics\n      tags:\n      - Metrics\n  /api/v2/metrics/config/bulk-tags:\n    delete:\n      description: 'Delete all custom lists of queryable tag keys for a set of existing\n        count, gauge, rate, and distribution metrics.\n\n        Metrics are selected by passing a metric name prefix.\n\n        Results can be sent to a set of account email addresses, just like the same\n        operation in the Datadog web app.\n\n        Can only be used with application keys of users with the `Manage Tags for\n        Metrics` permission.'\n      operationId: DeleteBulkTagsMetricsConfiguration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetricBulkTagConfigDeleteRequest'\n        required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricBulkTagConfigResponse'\n          description: Accepted\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      summary: Configure tags for multiple metrics\n      tags:\n      - Metrics\n      x-codegen-request-body-name: body\n    post:\n      description: 'Create and define a list of queryable tag keys for a set of existing\n        count, gauge, rate, and distribution metrics.\n\n        Metrics are selected by passing a metric name prefix. Use the Delete method\n        of this API path to remove tag configurations.\n\n        Results can be sent to a set of account email addresses, just like the same\n        operation in the Datadog web app.\n\n        If multiple calls include the same metric, the last configuration applied\n        (not by submit order) is used, do not\n\n        expect deterministic ordering of concurrent calls.\n\n        Can only be used with application keys of users with the `Manage Tags for\n        Metrics` permission.'\n      operationId: CreateBulkTagsMetricsConfiguration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetricBulkTagConfigCreateRequest'\n        required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricBulkTagConfigResponse'\n          description: Accepted\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      summary: Configure tags for multiple metrics\n      tags:\n      - Metrics\n      x-codegen-request-body-name: body\n  /api/v2/metrics/{metric_name}/active-configurations:\n    get:\n      description: List tags and aggregations that are actively queried on dashboards\n        and monitors for a given metric name.\n      operationId: ListActiveMetricConfigurations\n      parameters:\n      - $ref: '#/components/parameters/MetricName'\n      - description: 'The number of seconds of look back (from now).\n\n          Default value is 604,800 (1 week), minimum value is 7200 (2 hours), maximum\n          value is 2,630,000 (1 month).'\n        example: 7200\n        in: query\n        name: window[seconds]\n        required: false\n        schema:\n          format: int64\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricSuggestedTagsAndAggregationsResponse'\n          description: Success\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - metrics_read\n      summary: List active tags and aggregations\n      tags:\n      - Metrics\n  /api/v2/metrics/{metric_name}/all-tags:\n    get:\n      description: View indexed tag key-value pairs for a given metric name.\n      operationId: ListTagsByMetricName\n      parameters:\n      - $ref: '#/components/parameters/MetricName'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricAllTagsResponse'\n          description: Success\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: List tags by metric name\n      tags:\n      - Metrics\n  /api/v2/metrics/{metric_name}/estimate:\n    get:\n      description: Returns the estimated cardinality for a metric with a given tag,\n        percentile and number of aggregations configuration using Metrics without\n        Limits\u0026trade;.\n      operationId: EstimateMetricsOutputSeries\n      parameters:\n      - $ref: '#/components/parameters/MetricName'\n      - description: Filtered tag keys that the metric is configured to query with.\n        example: app,host\n        in: query\n        name: filter[groups]\n        required: false\n        schema:\n          type: string\n      - description: The number of hours of look back (from now) to estimate cardinality\n          with.\n        example: 49\n        in: query\n        name: filter[hours_ago]\n        required: false\n        schema:\n          format: int32\n          maximum: 2147483647\n          type: integer\n      - description: The number of aggregations that a `count`, `rate`, or `gauge`\n          metric is configured to use. Max number of aggregation combos is 9.\n        example: 1\n        in: query\n        name: filter[num_aggregations]\n        required: false\n        schema:\n          format: int32\n          maximum: 9\n          type: integer\n      - description: A boolean, for distribution metrics only, to estimate cardinality\n          if the metric includes additional percentile aggregators.\n        example: true\n        in: query\n        name: filter[pct]\n        required: false\n        schema:\n          type: boolean\n      - description: A window, in hours, from the look back to estimate cardinality\n          with.\n        example: 6\n        in: query\n        name: filter[timespan_h]\n        required: false\n        schema:\n          format: int32\n          maximum: 2147483647\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricEstimateResponse'\n          description: Success\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: API error response.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: API error response.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: API error response.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Tag Configuration Cardinality Estimator\n      tags:\n      - Metrics\n      x-dd-ownership:\n        notification_configuration:\n          manual_escalation_policy: '[Points Aggregation] Primary'\n          prod_high_urgency: '@pagerduty-Points-Aggregation @slack-points-aggr-ops'\n          prod_low_urgency: '@slack-points-aggr-ops'\n          slack_support_channel: '#points-aggregation'\n          staging_high_urgency: '@slack-points-aggr-stg-ops'\n          staging_low_urgency: '@slack-points-aggr-stg-ops'\n        team: points-aggregation\n        team_escalation: '[Points Aggregation] Primary'\n      x-permission:\n        operator: OPEN\n        permissions: []\n  /api/v2/metrics/{metric_name}/tags:\n    delete:\n      description: 'Deletes a metric''s tag configuration. Can only be used with application\n\n        keys from users with the `Manage Tags for Metrics` permission.'\n      operationId: DeleteTagConfiguration\n      parameters:\n      - $ref: '#/components/parameters/MetricName'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      summary: Delete a tag configuration\n      tags:\n      - Metrics\n    get:\n      description: Returns the tag configuration for the given metric name.\n      operationId: ListTagConfigurationByName\n      parameters:\n      - $ref: '#/components/parameters/MetricName'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricTagConfigurationResponse'\n          description: Success\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - metrics_read\n      summary: List tag configuration by name\n      tags:\n      - Metrics\n    patch:\n      description: 'Update the tag configuration of a metric or percentile aggregations\n        of a distribution metric or custom aggregations\n\n        of a count, rate, or gauge metric.\n\n        Can only be used with application keys from users with the `Manage Tags for\n        Metrics` permission.'\n      operationId: UpdateTagConfiguration\n      parameters:\n      - $ref: '#/components/parameters/MetricName'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetricTagConfigurationUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricTagConfigurationResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Unprocessable Entity\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      summary: Update a tag configuration\n      tags:\n      - Metrics\n      x-codegen-request-body-name: body\n    post:\n      description: 'Create and define a list of queryable tag keys for an existing\n        count/gauge/rate/distribution metric.\n\n        Optionally, include percentile aggregations on any distribution metric or\n        configure custom aggregations\n\n        on any count, rate, or gauge metric.\n\n        Can only be used with application keys of users with the `Manage Tags for\n        Metrics` permission.'\n      operationId: CreateTagConfiguration\n      parameters:\n      - $ref: '#/components/parameters/MetricName'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetricTagConfigurationCreateRequest'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricTagConfigurationResponse'\n          description: Created\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Conflict\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      summary: Create a tag configuration\n      tags:\n      - Metrics\n      x-codegen-request-body-name: body\n  /api/v2/metrics/{metric_name}/volumes:\n    get:\n      description: 'View distinct metrics volumes for the given metric name.\n\n\n        Custom metrics generated in-app from other products will return `null` for\n        ingested volumes.'\n      operationId: ListVolumesByMetricName\n      parameters:\n      - $ref: '#/components/parameters/MetricName'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricVolumesResponse'\n          description: Success\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too Many Requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: List distinct metric volumes by metric name\n      tags:\n      - Metrics\n  /api/v2/permissions:\n    get:\n      description: Returns a list of all permissions, including name, description,\n        and ID.\n      operationId: ListPermissions\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionsResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: List permissions\n      tags:\n      - Roles\n  /api/v2/processes:\n    get:\n      description: Get all processes for your organization.\n      operationId: ListProcesses\n      parameters:\n      - description: String to search processes by.\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n      - description: Comma-separated list of tags to filter processes by.\n        example: account:prod,user:admin\n        in: query\n        name: tags\n        required: false\n        schema:\n          type: string\n      - description: 'Unix timestamp (number of seconds since epoch) of the start\n          of the query window.\n\n          If not provided, the start of the query window will be 15 minutes before\n          the `to` timestamp. If neither\n\n          `from` nor `to` are provided, the query window will be `[now - 15m, now]`.'\n        in: query\n        name: from\n        required: false\n        schema:\n          format: int64\n          type: integer\n      - description: 'Unix timestamp (number of seconds since epoch) of the end of\n          the query window.\n\n          If not provided, the end of the query window will be 15 minutes after the\n          `from` timestamp. If neither\n\n          `from` nor `to` are provided, the query window will be `[now - 15m, now]`.'\n        in: query\n        name: to\n        required: false\n        schema:\n          format: int64\n          type: integer\n      - description: Maximum number of results returned.\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 1000\n          format: int32\n          maximum: 10000\n          minimum: 1\n          type: integer\n      - description: 'String to query the next page of results.\n\n          This key is provided with each valid response from the API in `meta.page.after`.'\n        in: query\n        name: page[cursor]\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessSummariesResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get all processes\n      tags:\n      - Processes\n      x-pagination:\n        cursorParam: page[cursor]\n        cursorPath: meta.page.after\n        limitParam: page[limit]\n        resultsPath: data\n  /api/v2/query/scalar:\n    post:\n      description: 'The internal endpoint to query scalar/table data for multiple\n        data sources and\n\n        process the data using formulas and functions.'\n      operationId: QueryScalarData\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScalarFormulaQueryRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScalarFormulaQueryResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Scalar cross product query\n      tags:\n      - Metrics\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is GA for the metrics data source. Logs\n        is in beta.\n\n        We are gradually onboarding support for more sources. If you have any feedback,\n\n        contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/query/timeseries:\n    post:\n      description: 'The internal endpoint to query timeseries data for multiple data\n        sources and\n\n        process the data by applying formulas and functions.'\n      operationId: QueryTimeseriesData\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimeseriesFormulaQueryRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeseriesFormulaQueryResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Timeseries cross product query\n      tags:\n      - Metrics\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is GA for the metrics data source. Logs\n        is in beta.\n\n        We are gradually onboarding support for more sources. If you have any feedback,\n\n        contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/roles:\n    get:\n      description: Returns all roles, including their names and their unique identifiers.\n      operationId: ListRoles\n      parameters:\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      - description: 'Sort roles depending on the given field. Sort order is **ascending**\n          by default.\n\n          Sort order is **descending** if the field is prefixed by a negative sign,\n          for example:\n\n          `sort=-name`.'\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/RolesSort'\n      - description: Filter all roles by the given string.\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RolesResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: List roles\n      tags:\n      - Roles\n    post:\n      description: Create a new role for your organization.\n      operationId: CreateRole\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleCreateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleCreateResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Create role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n  /api/v2/roles/{role_id}:\n    delete:\n      description: Disables a role.\n      operationId: DeleteRole\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      responses:\n        '204':\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Delete role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n    get:\n      description: \"Get a role in the organization specified by the role\\u2019s `role_id`.\"\n      operationId: GetRole\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get a role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n    patch:\n      description: Edit a role. Can only be used with application keys belonging to\n        administrators.\n      operationId: UpdateRole\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleUpdateResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Unprocessable Entity\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Update a role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n  /api/v2/roles/{role_id}/clone:\n    post:\n      description: Clone an existing role\n      operationId: CloneRole\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleCloneRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Conflict\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Create a new role by cloning an existing role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n      x-permission: OR(USER_ACCESS_MANAGE)\n  /api/v2/roles/{role_id}/permissions:\n    delete:\n      description: Removes a permission from a role.\n      operationId: RemovePermissionFromRole\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationshipToPermission'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionsResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Revoke permission\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n    get:\n      description: Returns a list of all permissions for a single role.\n      operationId: ListRolePermissions\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionsResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: List permissions for a role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n    post:\n      description: Adds a permission to a role.\n      operationId: AddPermissionToRole\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationshipToPermission'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionsResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Grant permission to a role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n  /api/v2/roles/{role_id}/users:\n    delete:\n      description: Removes a user from a role.\n      operationId: RemoveUserFromRole\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationshipToUser'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Remove a user from a role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n    get:\n      description: Gets all users of a role.\n      operationId: ListRoleUsers\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      - description: 'User attribute to order results by. Sort order is **ascending**\n          by default.\n\n          Sort order is **descending** if the field is prefixed by a negative sign,\n\n          for example `sort=-name`. Options: `name`, `email`, `status`.'\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: name\n          type: string\n      - description: Filter all users by the given string. Defaults to no filtering.\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get all users of a role\n      tags:\n      - Roles\n    post:\n      description: Adds a user to a role.\n      operationId: AddUserToRole\n      parameters:\n      - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RelationshipToUser'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Add a user to a role\n      tags:\n      - Roles\n      x-codegen-request-body-name: body\n  /api/v2/rum/analytics/aggregate:\n    post:\n      description: The API endpoint to aggregate RUM events into buckets of computed\n        metrics and timeseries.\n      operationId: AggregateRUMEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RUMAggregateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RUMAnalyticsAggregateResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Aggregate RUM events\n      tags:\n      - RUM\n      x-codegen-request-body-name: body\n  /api/v2/rum/applications:\n    get:\n      description: List all the RUM applications in your organization.\n      operationId: GetRUMApplications\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RUMApplicationsResponse'\n          description: OK\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: List all the RUM applications\n      tags:\n      - RUM\n    post:\n      description: Create a new RUM application in your organization.\n      operationId: CreateRUMApplication\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RUMApplicationCreateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RUMApplicationResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create a new RUM application\n      tags:\n      - RUM\n      x-codegen-request-body-name: body\n  /api/v2/rum/applications/{id}:\n    delete:\n      description: Delete an existing RUM application in your organization.\n      operationId: DeleteRUMApplication\n      parameters:\n      - description: RUM application ID.\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete a RUM application\n      tags:\n      - RUM\n    get:\n      description: Get the RUM application with given ID in your organization.\n      operationId: GetRUMApplication\n      parameters:\n      - description: RUM application ID.\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RUMApplicationResponse'\n          description: OK\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get a RUM application\n      tags:\n      - RUM\n    patch:\n      description: Update the RUM application with given ID in your organization.\n      operationId: UpdateRUMApplication\n      parameters:\n      - description: RUM application ID.\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RUMApplicationUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RUMApplicationResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Unprocessable Entity.\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update a RUM application\n      tags:\n      - RUM\n      x-codegen-request-body-name: body\n  /api/v2/rum/events:\n    get:\n      description: 'List endpoint returns events that match a RUM search query.\n\n        [Results are paginated][1].\n\n\n        Use this endpoint to see your latest RUM events.\n\n\n        [1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination'\n      operationId: ListRUMEvents\n      parameters:\n      - description: Search query following RUM syntax.\n        example: '@type:session @application_id:xxxx'\n        in: query\n        name: filter[query]\n        required: false\n        schema:\n          type: string\n      - description: Minimum timestamp for requested events.\n        example: '2019-01-02T09:42:36.320Z'\n        in: query\n        name: filter[from]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Maximum timestamp for requested events.\n        example: '2019-01-03T09:42:36.320Z'\n        in: query\n        name: filter[to]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: Order of events in results.\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/RUMSort'\n      - description: List following results with a cursor provided in the previous\n          query.\n        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n        in: query\n        name: page[cursor]\n        required: false\n        schema:\n          type: string\n      - description: Maximum number of events in the response.\n        example: 25\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 1000\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RUMEventsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get a list of RUM events\n      tags:\n      - RUM\n      x-pagination:\n        cursorParam: page[cursor]\n        cursorPath: meta.page.after\n        limitParam: page[limit]\n        resultsPath: data\n  /api/v2/rum/events/search:\n    post:\n      description: 'List endpoint returns RUM events that match a RUM search query.\n\n        [Results are paginated][1].\n\n\n        Use this endpoint to build complex RUM events filtering and search.\n\n\n        [1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination'\n      operationId: SearchRUMEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RUMSearchEventsRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RUMEventsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Search RUM events\n      tags:\n      - RUM\n      x-codegen-request-body-name: body\n      x-pagination:\n        cursorParam: body.page.cursor\n        cursorPath: meta.page.after\n        limitParam: body.page.limit\n        resultsPath: data\n  /api/v2/saml_configurations/idp_metadata:\n    post:\n      description: 'Endpoint for uploading IdP metadata for SAML setup.\n\n\n        Use this endpoint to upload or replace IdP metadata for SAML login configuration.'\n      operationId: UploadIdPMetadata\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/IdPMetadataFormData'\n        required: true\n      responses:\n        '200':\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Upload IdP metadata\n      tags:\n      - Organizations\n      x-codegen-request-body-name: body\n  /api/v2/security/cloud_workload/policy/download:\n    get:\n      description: 'The download endpoint generates a Cloud Workload Security policy\n        file from your currently active\n\n        Cloud Workload Security rules, and downloads them as a .policy file. This\n        file can then be deployed to\n\n        your Agents to update the policy running in your environment.'\n      operationId: DownloadCloudWorkloadPolicyFile\n      responses:\n        '200':\n          content:\n            application/yaml:\n              schema:\n                format: binary\n                type: string\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get the latest Cloud Workload Security policy\n      tags:\n      - Cloud Workload Security\n  /api/v2/security_monitoring/cloud_workload_security/agent_rules:\n    get:\n      description: Get the list of Agent rules.\n      operationId: ListCloudWorkloadSecurityAgentRules\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRulesListResponse'\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get all Cloud Workload Security Agent rules\n      tags:\n      - Cloud Workload Security\n    post:\n      description: Create a new Agent rule with the given parameters.\n      operationId: CreateCloudWorkloadSecurityAgentRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateRequest'\n        description: The definition of the new Agent rule.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '409':\n          $ref: '#/components/responses/ConflictResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create a Cloud Workload Security Agent rule\n      tags:\n      - Cloud Workload Security\n      x-codegen-request-body-name: body\n  /api/v2/security_monitoring/cloud_workload_security/agent_rules/{agent_rule_id}:\n    delete:\n      description: Delete a specific Agent rule.\n      operationId: DeleteCloudWorkloadSecurityAgentRule\n      parameters:\n      - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete a Cloud Workload Security Agent rule\n      tags:\n      - Cloud Workload Security\n    get:\n      description: Get the details of a specific Agent rule.\n      operationId: GetCloudWorkloadSecurityAgentRule\n      parameters:\n      - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get a Cloud Workload Security Agent rule\n      tags:\n      - Cloud Workload Security\n    patch:\n      description: 'Update a specific Agent rule.\n\n        Returns the Agent rule object when the request is successful.'\n      operationId: UpdateCloudWorkloadSecurityAgentRule\n      parameters:\n      - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateRequest'\n        description: New definition of the Agent rule.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '409':\n          $ref: '#/components/responses/ConcurrentModificationResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update a Cloud Workload Security Agent rule\n      tags:\n      - Cloud Workload Security\n      x-codegen-request-body-name: body\n  /api/v2/security_monitoring/configuration/security_filters:\n    get:\n      description: Get the list of configured security filters with their definitions.\n      operationId: ListSecurityFilters\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityFiltersResponse'\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_filters_read\n      summary: Get all security filters\n      tags:\n      - Security Monitoring\n    post:\n      description: 'Create a security filter.\n\n\n        See the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)\n\n        for more examples.'\n      operationId: CreateSecurityFilter\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityFilterCreateRequest'\n        description: The definition of the new security filter.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityFilterResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '409':\n          $ref: '#/components/responses/ConflictResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_filters_write\n      summary: Create a security filter\n      tags:\n      - Security Monitoring\n      x-codegen-request-body-name: body\n  /api/v2/security_monitoring/configuration/security_filters/{security_filter_id}:\n    delete:\n      description: Delete a specific security filter.\n      operationId: DeleteSecurityFilter\n      parameters:\n      - $ref: '#/components/parameters/SecurityFilterID'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_filters_write\n      summary: Delete a security filter\n      tags:\n      - Security Monitoring\n    get:\n      description: 'Get the details of a specific security filter.\n\n\n        See the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)\n\n        for more examples.'\n      operationId: GetSecurityFilter\n      parameters:\n      - $ref: '#/components/parameters/SecurityFilterID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityFilterResponse'\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_filters_read\n      summary: Get a security filter\n      tags:\n      - Security Monitoring\n    patch:\n      description: 'Update a specific security filter.\n\n        Returns the security filter object when the request is successful.'\n      operationId: UpdateSecurityFilter\n      parameters:\n      - $ref: '#/components/parameters/SecurityFilterID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityFilterUpdateRequest'\n        description: New definition of the security filter.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityFilterResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '409':\n          $ref: '#/components/responses/ConcurrentModificationResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_filters_write\n      summary: Update a security filter\n      tags:\n      - Security Monitoring\n      x-codegen-request-body-name: body\n  /api/v2/security_monitoring/rules:\n    get:\n      description: List rules.\n      operationId: ListSecurityMonitoringRules\n      parameters:\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringListRulesResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_rules_read\n      summary: List rules\n      tags:\n      - Security Monitoring\n    post:\n      description: Create a detection rule.\n      operationId: CreateSecurityMonitoringRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityMonitoringRuleCreatePayload'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_rules_write\n      summary: Create a detection rule\n      tags:\n      - Security Monitoring\n      x-codegen-request-body-name: body\n  /api/v2/security_monitoring/rules/{rule_id}:\n    delete:\n      description: Delete an existing rule. Default rules cannot be deleted.\n      operationId: DeleteSecurityMonitoringRule\n      parameters:\n      - $ref: '#/components/parameters/SecurityMonitoringRuleID'\n      responses:\n        '204':\n          description: OK\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_rules_write\n      summary: Delete an existing rule\n      tags:\n      - Security Monitoring\n    get:\n      description: Get a rule's details.\n      operationId: GetSecurityMonitoringRule\n      parameters:\n      - $ref: '#/components/parameters/SecurityMonitoringRuleID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'\n          description: OK\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_rules_read\n      summary: Get a rule's details\n      tags:\n      - Security Monitoring\n    put:\n      description: 'Update an existing rule. When updating `cases`, `queries` or `options`,\n        the whole field\n\n        must be included. For example, when modifying a query all queries must be\n        included.\n\n        Default rules can only be updated to be enabled and to change notifications.'\n      operationId: UpdateSecurityMonitoringRule\n      parameters:\n      - $ref: '#/components/parameters/SecurityMonitoringRuleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityMonitoringRuleUpdatePayload'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/ConcurrentModificationResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_rules_write\n      summary: Update an existing rule\n      tags:\n      - Security Monitoring\n      x-codegen-request-body-name: body\n  /api/v2/security_monitoring/signals:\n    get:\n      description: 'The list endpoint returns security signals that match a search\n        query.\n\n        Both this endpoint and the POST endpoint can be used interchangeably when\n        listing\n\n        security signals.'\n      operationId: ListSecurityMonitoringSignals\n      parameters:\n      - description: The search query for security signals.\n        example: security:attack status:high\n        in: query\n        name: filter[query]\n        required: false\n        schema:\n          type: string\n      - description: The minimum timestamp for requested security signals.\n        example: '2019-01-02T09:42:36.320Z'\n        in: query\n        name: filter[from]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: The maximum timestamp for requested security signals.\n        example: '2019-01-03T09:42:36.320Z'\n        in: query\n        name: filter[to]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: The order of the security signals in results.\n        in: query\n        name: sort\n        required: false\n        schema:\n          $ref: '#/components/schemas/SecurityMonitoringSignalsSort'\n      - description: A list of results using the cursor provided in the previous query.\n        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\n        in: query\n        name: page[cursor]\n        required: false\n        schema:\n          type: string\n      - description: The maximum number of security signals in the response.\n        example: 25\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 1000\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_signals_read\n      summary: Get a quick list of security signals\n      tags:\n      - Security Monitoring\n      x-pagination:\n        cursorParam: page[cursor]\n        cursorPath: meta.page.after\n        limitParam: page[limit]\n        resultsPath: data\n  /api/v2/security_monitoring/signals/search:\n    post:\n      description: 'Returns security signals that match a search query.\n\n        Both this endpoint and the GET endpoint can be used interchangeably for listing\n\n        security signals.'\n      operationId: SearchSecurityMonitoringSignals\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityMonitoringSignalListRequest'\n        required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/NotAuthorizedResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_signals_read\n      summary: Get a list of security signals\n      tags:\n      - Security Monitoring\n      x-codegen-request-body-name: body\n      x-pagination:\n        cursorParam: body.page.cursor\n        cursorPath: meta.page.after\n        limitParam: body.page.limit\n        resultsPath: data\n  /api/v2/security_monitoring/signals/{signal_id}:\n    get:\n      description: Get a signal's details.\n      operationId: GetSecurityMonitoringSignal\n      parameters:\n      - $ref: '#/components/parameters/SignalID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringSignal'\n          description: OK\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - security_monitoring_signals_read\n      summary: Get a signal's details\n      tags:\n      - Security Monitoring\n  /api/v2/security_monitoring/signals/{signal_id}/assignee:\n    patch:\n      description: Modify the triage assignee of a security signal.\n      operationId: EditSecurityMonitoringSignalAssignee\n      parameters:\n      - $ref: '#/components/parameters/SignalID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityMonitoringSignalAssigneeUpdateRequest'\n        description: Attributes describing the signal update.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Modify the triage assignee of a security signal\n      tags:\n      - Security Monitoring\n      x-codegen-request-body-name: body\n  /api/v2/security_monitoring/signals/{signal_id}/incidents:\n    patch:\n      description: Change the related incidents for a security signal.\n      operationId: EditSecurityMonitoringSignalIncidents\n      parameters:\n      - $ref: '#/components/parameters/SignalID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityMonitoringSignalIncidentsUpdateRequest'\n        description: Attributes describing the signal update.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Change the related incidents of a security signal\n      tags:\n      - Security Monitoring\n      x-codegen-request-body-name: body\n  /api/v2/security_monitoring/signals/{signal_id}/state:\n    patch:\n      description: Change the triage state of a security signal.\n      operationId: EditSecurityMonitoringSignalState\n      parameters:\n      - $ref: '#/components/parameters/SignalID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateRequest'\n        description: Attributes describing the signal update.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Change the triage state of a security signal\n      tags:\n      - Security Monitoring\n      x-codegen-request-body-name: body\n  /api/v2/sensitive-data-scanner/config:\n    get:\n      description: List all the Scanning groups in your organization.\n      operationId: ListScanningGroups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerGetConfigResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: List Scanning Groups\n      tags:\n      - Sensitive Data Scanner\n    patch:\n      description: Reorder the list of groups.\n      operationId: ReorderScanningGroups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SensitiveDataScannerConfigRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerReorderGroupsResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Reorder Groups\n      tags:\n      - Sensitive Data Scanner\n      x-codegen-request-body-name: body\n  /api/v2/sensitive-data-scanner/config/groups:\n    post:\n      description: 'Create a scanning group.\n\n        The request MAY include a configuration relationship.\n\n        A rules relationship can be omitted entirely, but if it is included it MUST\n        be\n\n        null or an empty array (rules cannot be created at the same time).\n\n        The new group will be ordered last within the configuration.'\n      operationId: CreateScanningGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SensitiveDataScannerGroupCreateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerCreateGroupResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create Scanning Group\n      tags:\n      - Sensitive Data Scanner\n      x-codegen-request-body-name: body\n  /api/v2/sensitive-data-scanner/config/groups/{group_id}:\n    delete:\n      description: Delete a given group.\n      operationId: DeleteScanningGroup\n      parameters:\n      - $ref: '#/components/parameters/SensitiveDataScannerGroupID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SensitiveDataScannerGroupDeleteRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerGroupDeleteResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete Scanning Group\n      tags:\n      - Sensitive Data Scanner\n      x-codegen-request-body-name: body\n    patch:\n      description: 'Update a group, including the order of the rules.\n\n        Rules within the group are reordered by including a rules relationship. If\n        the rules\n\n        relationship is present, its data section MUST contain linkages for all of\n        the rules\n\n        currently in the group, and MUST NOT contain any others.'\n      operationId: UpdateScanningGroup\n      parameters:\n      - $ref: '#/components/parameters/SensitiveDataScannerGroupID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SensitiveDataScannerGroupUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerGroupUpdateResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update Scanning Group\n      tags:\n      - Sensitive Data Scanner\n      x-codegen-request-body-name: body\n  /api/v2/sensitive-data-scanner/config/rules:\n    post:\n      description: 'Create a scanning rule in a sensitive data scanner group, ordered\n        last.\n\n        The posted rule MUST include a group relationship.\n\n        It MUST include either a standard_pattern relationship or a regex attribute,\n        but not both.\n\n        If included_attributes is empty or missing, we will scan all attributes except\n\n        excluded_attributes. If both are missing, we will scan the whole event.'\n      operationId: CreateScanningRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SensitiveDataScannerRuleCreateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerCreateRuleResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create Scanning Rule\n      tags:\n      - Sensitive Data Scanner\n      x-codegen-request-body-name: body\n  /api/v2/sensitive-data-scanner/config/rules/{rule_id}:\n    delete:\n      description: Delete a given rule.\n      operationId: DeleteScanningRule\n      parameters:\n      - $ref: '#/components/parameters/SensitiveDataScannerRuleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SensitiveDataScannerRuleDeleteRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerRuleDeleteResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete Scanning Rule\n      tags:\n      - Sensitive Data Scanner\n      x-codegen-request-body-name: body\n    patch:\n      description: 'Update a scanning rule.\n\n        The request body MUST NOT include a standard_pattern relationship, as that\n        relationship\n\n        is non-editable. Trying to edit the regex attribute of a rule with a standard_pattern\n\n        relationship will also result in an error.'\n      operationId: UpdateScanningRule\n      parameters:\n      - $ref: '#/components/parameters/SensitiveDataScannerRuleID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SensitiveDataScannerRuleUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerRuleUpdateResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Update Scanning Rule\n      tags:\n      - Sensitive Data Scanner\n      x-codegen-request-body-name: body\n  /api/v2/sensitive-data-scanner/config/standard-patterns:\n    get:\n      description: Returns all standard patterns.\n      operationId: ListStandardPatterns\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SensitiveDataScannerStandardPatternsResponseData'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication Error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: List standard patterns\n      tags:\n      - Sensitive Data Scanner\n  /api/v2/series:\n    post:\n      description: \"The metrics end-point allows you to post time-series data that\n        can be graphed on Datadog\\u2019s dashboards.\\nThe maximum payload size is\n        500 kilobytes (512000 bytes). Compressed payloads must have a decompressed\n        size of less than 5 megabytes (5242880 bytes).\\n\\nIf you\\u2019re submitting\n        metrics directly to the Datadog API without using DogStatsD, expect:\\n\\n-\n        64 bits for the timestamp\\n- 64 bits for the value\\n- 20 bytes for the metric\n        names\\n- 50 bytes for the timeseries\\n- The full payload is approximately\n        100 bytes.\\n\\nHost name is one of the resources in the Resources field.\"\n      operationId: SubmitMetrics\n      parameters:\n      - description: HTTP header used to compress the media-type.\n        in: header\n        name: Content-Encoding\n        required: false\n        schema:\n          $ref: '#/components/schemas/MetricContentEncoding'\n      requestBody:\n        content:\n          application/json:\n            examples:\n              dynamic-points:\n                description: \"Post time-series data that can be graphed on Datadog\\u2019s\n                  dashboards.\"\n                externalValue: examples/metrics/dynamic-points.json.sh\n                summary: Dynamic Points\n                x-variables:\n                  NOW: $(date +%s)\n            schema:\n              $ref: '#/components/schemas/MetricPayload'\n        required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntakePayloadAccepted'\n          description: Payload accepted\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Request timeout\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Payload too large\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n      summary: Submit metrics\n      tags:\n      - Metrics\n      x-codegen-request-body-name: body\n  /api/v2/service_accounts:\n    post:\n      description: Create a service account for your organization.\n      operationId: CreateServiceAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceAccountCreateRequest'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create a service account\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n  /api/v2/service_accounts/{service_account_id}/application_keys:\n    get:\n      description: List all application keys available for this service account.\n      operationId: ListServiceAccountApplicationKeys\n      parameters:\n      - $ref: '#/components/parameters/ServiceAccountID'\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      - $ref: '#/components/parameters/ApplicationKeysSortParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'\n      - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListApplicationKeysResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: List application keys for this service account\n      tags:\n      - Service Accounts\n    post:\n      description: Create an application key for this service account.\n      operationId: CreateServiceAccountApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ServiceAccountID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationKeyCreateRequest'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationKeyResponse'\n          description: Created\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create an application key for this service account\n      tags:\n      - Service Accounts\n      x-codegen-request-body-name: body\n  /api/v2/service_accounts/{service_account_id}/application_keys/{app_key_id}:\n    delete:\n      description: Delete an application key owned by this service account.\n      operationId: DeleteServiceAccountApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ServiceAccountID'\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete an application key for this service account\n      tags:\n      - Service Accounts\n    get:\n      description: Get an application key owned by this service account.\n      operationId: GetServiceAccountApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ServiceAccountID'\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PartialApplicationKeyResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get one application key for this service account\n      tags:\n      - Service Accounts\n    patch:\n      description: Edit an application key owned by this service account.\n      operationId: UpdateServiceAccountApplicationKey\n      parameters:\n      - $ref: '#/components/parameters/ServiceAccountID'\n      - $ref: '#/components/parameters/ApplicationKeyID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PartialApplicationKeyResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not Found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Edit an application key for this service account\n      tags:\n      - Service Accounts\n      x-codegen-request-body-name: body\n  /api/v2/services:\n    get:\n      description: Get all incident services uploaded for the requesting user's organization.\n        If the `include[users]` query parameter is provided, the included attribute\n        will contain the users related to these incident services.\n      operationId: ListIncidentServices\n      parameters:\n      - $ref: '#/components/parameters/IncidentServiceIncludeQueryParameter'\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageOffset'\n      - $ref: '#/components/parameters/IncidentServiceSearchQueryParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentServicesResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_read\n      summary: Get a list of all incident services\n      tags:\n      - Incident Services\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    post:\n      description: Creates a new incident service.\n      operationId: CreateIncidentService\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncidentServiceCreateRequest'\n        description: Incident Service Payload.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentServiceResponse'\n          description: CREATED\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_settings_write\n      summary: Create a new incident service\n      tags:\n      - Incident Services\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/services/definitions:\n    get:\n      description: Get a list of all service definitions from the Datadog Service\n        Catalog.\n      operationId: ListServiceDefinitions\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceDefinitionsListResponse'\n          description: OK\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get all service definitions\n      tags:\n      - Service Definition\n    post:\n      description: Create or update service definition in the Datadog Service Catalog.\n      operationId: CreateOrUpdateServiceDefinitions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceDefinitionsCreateRequest'\n        description: Service Definition YAML/JSON.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceDefinitionCreateResponse'\n          description: CREATED\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '409':\n          $ref: '#/components/responses/ConflictResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Create or update service definition\n      tags:\n      - Service Definition\n      x-codegen-request-body-name: body\n  /api/v2/services/definitions/{service_name}:\n    delete:\n      description: Delete a single service definition in the Datadog Service Catalog.\n      operationId: DeleteServiceDefinition\n      parameters:\n      - $ref: '#/components/parameters/ServiceName'\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Delete a single service definition\n      tags:\n      - Service Definition\n    get:\n      description: Get a single service definition from the Datadog Service Catalog.\n      operationId: GetServiceDefinition\n      parameters:\n      - $ref: '#/components/parameters/ServiceName'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceDefinitionGetResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '409':\n          $ref: '#/components/responses/ConflictResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      summary: Get a single service definition\n      tags:\n      - Service Definition\n  /api/v2/services/{service_id}:\n    delete:\n      description: Deletes an existing incident service.\n      operationId: DeleteIncidentService\n      parameters:\n      - $ref: '#/components/parameters/IncidentServiceIDPathParameter'\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_settings_write\n      summary: Delete an existing incident service\n      tags:\n      - Incident Services\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    get:\n      description: 'Get details of an incident service. If the `include[users]` query\n        parameter is provided,\n\n        the included attribute will contain the users related to these incident services.'\n      operationId: GetIncidentService\n      parameters:\n      - $ref: '#/components/parameters/IncidentServiceIDPathParameter'\n      - $ref: '#/components/parameters/IncidentServiceIncludeQueryParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentServiceResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_read\n      summary: Get details of an incident service\n      tags:\n      - Incident Services\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    patch:\n      description: Updates an existing incident service. Only provide the attributes\n        which should be updated as this request is a partial update.\n      operationId: UpdateIncidentService\n      parameters:\n      - $ref: '#/components/parameters/IncidentServiceIDPathParameter'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncidentServiceUpdateRequest'\n        description: Incident Service Payload.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentServiceResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_settings_write\n      summary: Update an existing incident service\n      tags:\n      - Incident Services\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/teams:\n    get:\n      description: Get all incident teams for the requesting user's organization.\n        If the `include[users]` query parameter is provided, the included attribute\n        will contain the users related to these incident teams.\n      operationId: ListIncidentTeams\n      parameters:\n      - $ref: '#/components/parameters/IncidentTeamIncludeQueryParameter'\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageOffset'\n      - $ref: '#/components/parameters/IncidentTeamSearchQueryParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentTeamsResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_read\n      summary: Get a list of all incident teams\n      tags:\n      - Incident Teams\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    post:\n      description: Creates a new incident team.\n      operationId: CreateIncidentTeam\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncidentTeamCreateRequest'\n        description: Incident Team Payload.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentTeamResponse'\n          description: CREATED\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_settings_write\n      summary: Create a new incident team\n      tags:\n      - Incident Teams\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/teams/{team_id}:\n    delete:\n      description: Deletes an existing incident team.\n      operationId: DeleteIncidentTeam\n      parameters:\n      - $ref: '#/components/parameters/IncidentTeamIDPathParameter'\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_settings_write\n      summary: Delete an existing incident team\n      tags:\n      - Incident Teams\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    get:\n      description: 'Get details of an incident team. If the `include[users]` query\n        parameter is provided,\n\n        the included attribute will contain the users related to these incident teams.'\n      operationId: GetIncidentTeam\n      parameters:\n      - $ref: '#/components/parameters/IncidentTeamIDPathParameter'\n      - $ref: '#/components/parameters/IncidentTeamIncludeQueryParameter'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentTeamResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_read\n      summary: Get details of an incident team\n      tags:\n      - Incident Teams\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n    patch:\n      description: Updates an existing incident team. Only provide the attributes\n        which should be updated as this request is a partial update.\n      operationId: UpdateIncidentTeam\n      parameters:\n      - $ref: '#/components/parameters/IncidentTeamIDPathParameter'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncidentTeamUpdateRequest'\n        description: Incident Team Payload.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IncidentTeamResponse'\n          description: OK\n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - incident_settings_write\n      summary: Update an existing incident team\n      tags:\n      - Incident Teams\n      x-codegen-request-body-name: body\n      x-unstable: '**Note**: This endpoint is in public beta.\n\n        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'\n  /api/v2/usage/application_security:\n    get:\n      description: 'Get hourly usage for application security .\n\n        **Note:** hourly usage data for all products is now available in the [Get\n        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)'\n      operationId: GetUsageApplicationSecurityMonitoring\n      parameters:\n      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`\n          for usage beginning at this hour.'\n        in: query\n        name: start_hr\n        required: true\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`\n          for usage ending\n\n          **before** this hour.'\n        in: query\n        name: end_hr\n        required: false\n        schema:\n          format: date-time\n          type: string\n      responses:\n        '200':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/UsageApplicationSecurityMonitoringResponse'\n          description: OK\n        '400':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden - User is not authorized\n        '429':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too many requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - usage_read\n      summary: Get hourly usage for application security\n      tags:\n      - Usage Metering\n  /api/v2/usage/cost_by_org:\n    get:\n      deprecated: true\n      description: 'Get cost across multi-org account.\n\n        Cost by org data for a given month becomes available no later than the 16th\n        of the following month.\n\n        **Note:** This endpoint has been deprecated. Please use the new endpoint\n\n        [`/historical_cost`](https://docs.datadoghq.com/api/latest/usage-metering/#get-historical-cost-across-your-account)\n\n        instead.'\n      operationId: GetCostByOrg\n      parameters:\n      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`\n          for cost beginning this month.'\n        in: query\n        name: start_month\n        required: true\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`\n          for cost ending this month.'\n        in: query\n        name: end_month\n        required: false\n        schema:\n          format: date-time\n          type: string\n      responses:\n        '200':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/CostByOrgResponse'\n          description: OK\n        '400':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden - User is not authorized\n        '429':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too many requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - usage_read\n      summary: Get cost across multi-org account\n      tags:\n      - Usage Metering\n  /api/v2/usage/estimated_cost:\n    get:\n      description: 'Get estimated cost across multi-org and single root-org accounts.\n\n        Estimated cost data is only available for the current month and previous month\n\n        and is delayed by up to 72 hours from when it was incurred.\n\n        To access historical costs prior to this, use the `/historical_cost` endpoint.'\n      operationId: GetEstimatedCostByOrg\n      parameters:\n      - description: String to specify whether cost is broken down at a parent-org\n          level or at the sub-org level. Available views are `summary` and `sub-org`.\n          Defaults to `summary`.\n        in: query\n        name: view\n        required: false\n        schema:\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`\n          for cost beginning this month. Either start_month or start_date should be\n          specified, but not both. (start_month cannot go beyond two months in the\n          past)'\n        in: query\n        name: start_month\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`\n          for cost ending this month.'\n        in: query\n        name: end_month\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]`\n          for cost beginning this day. Either start_month or start_date should be\n          specified, but not both. (start_date cannot go beyond two months in the\n          past)'\n        in: query\n        name: start_date\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]`\n          for cost ending this day.'\n        in: query\n        name: end_date\n        required: false\n        schema:\n          format: date-time\n          type: string\n      responses:\n        '200':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/CostByOrgResponse'\n          description: OK\n        '400':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden - User is not authorized\n        '429':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too many requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - usage_read\n      summary: Get estimated cost across your account\n      tags:\n      - Usage Metering\n  /api/v2/usage/historical_cost:\n    get:\n      description: 'Get historical cost across multi-org and single root-org accounts.\n\n        Cost data for a given month becomes available no later than the 16th of the\n        following month.'\n      operationId: GetHistoricalCostByOrg\n      parameters:\n      - description: String to specify whether cost is broken down at a parent-org\n          level or at the sub-org level. Available views are `summary` and `sub-org`.  Defaults\n          to `summary`.\n        in: query\n        name: view\n        required: false\n        schema:\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`\n          for cost beginning this month.'\n        in: query\n        name: start_month\n        required: true\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`\n          for cost ending this month.'\n        in: query\n        name: end_month\n        required: false\n        schema:\n          format: date-time\n          type: string\n      responses:\n        '200':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/CostByOrgResponse'\n          description: OK\n        '400':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden - User is not authorized\n        '429':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too many requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - usage_read\n      summary: Get historical cost across your account\n      tags:\n      - Usage Metering\n  /api/v2/usage/hourly_usage:\n    get:\n      description: Get hourly usage by product family.\n      operationId: GetHourlyUsage\n      parameters:\n      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]\n          for usage beginning at this hour.'\n        in: query\n        name: filter[timestamp][start]\n        required: true\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]\n          for usage ending **before** this hour.'\n        in: query\n        name: filter[timestamp][end]\n        required: false\n        schema:\n          format: date-time\n          type: string\n      - description: 'Comma separated list of product families to retrieve. Available\n          families are `all`, `analyzed_logs`,\n\n          `application_security`, `audit_logs`, `serverless`, `ci_app`, `cspm`, `custom_events`,\n          `cws`, `dbm`, `fargate`,\n\n          `infra_hosts`, `incident_management`, `indexed_logs`, `indexed_spans`, `ingested_spans`,\n          `iot`,\n\n          `lambda_traced_invocations`, `logs`, `network_flows`, `network_hosts`, `observability_pipelines`,\n\n          `online_archive`, `profiling`, `rum`, `rum_browser_sessions`, `rum_mobile_sessions`,\n          `sds`, `snmp`,\n\n          `synthetics_api`, `synthetics_browser`, `synthetics_parallel_testing`, and\n          `timeseries`.'\n        in: query\n        name: filter[product_families]\n        required: true\n        schema:\n          type: string\n      - description: Include child org usage in the response. Defaults to false.\n        in: query\n        name: filter[include_descendants]\n        required: false\n        schema:\n          default: false\n          type: boolean\n      - description: 'Comma separated list of product family versions to use in the\n          format `product_family:version`. For example,\n\n          `infra_hosts:1.0.0`. If this parameter is not used, the API will use the\n          latest version of each requested\n\n          product family. Currently all families have one version `1.0.0`.'\n        in: query\n        name: filter[versions]\n        required: false\n        schema:\n          type: string\n      - description: Maximum number of results to return (between 1 and 500) - defaults\n          to 500 if limit not specified.\n        in: query\n        name: page[limit]\n        required: false\n        schema:\n          default: 500\n          format: int32\n          maximum: 500\n          minimum: 1\n          type: integer\n      - description: List following results with a next_record_id provided in the\n          previous query.\n        in: query\n        name: page[next_record_id]\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/HourlyUsageResponse'\n          description: OK\n        '400':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden - User is not authorized\n        '429':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too many requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - usage_read\n      summary: Get hourly usage by product family\n      tags:\n      - Usage Metering\n  /api/v2/usage/lambda_traced_invocations:\n    get:\n      description: 'Get hourly usage for lambda traced invocations.\n\n        **Note:** hourly usage data for all products is now available in the [Get\n        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)'\n      operationId: GetUsageLambdaTracedInvocations\n      parameters:\n      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`\n          for usage beginning at this hour.'\n        in: query\n        name: start_hr\n        required: true\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`\n          for usage ending\n\n          **before** this hour.'\n        in: query\n        name: end_hr\n        required: false\n        schema:\n          format: date-time\n          type: string\n      responses:\n        '200':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/UsageLambdaTracedInvocationsResponse'\n          description: OK\n        '400':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden - User is not authorized\n        '429':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too many requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - usage_read\n      summary: Get hourly usage for lambda traced invocations\n      tags:\n      - Usage Metering\n  /api/v2/usage/observability_pipelines:\n    get:\n      description: 'Get hourly usage for observability pipelines.\n\n        **Note:** hourly usage data for all products is now available in the [Get\n        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)'\n      operationId: GetUsageObservabilityPipelines\n      parameters:\n      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`\n          for usage beginning at this hour.'\n        in: query\n        name: start_hr\n        required: true\n        schema:\n          format: date-time\n          type: string\n      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`\n          for usage ending\n\n          **before** this hour.'\n        in: query\n        name: end_hr\n        required: false\n        schema:\n          format: date-time\n          type: string\n      responses:\n        '200':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/UsageObservabilityPipelinesResponse'\n          description: OK\n        '400':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Forbidden - User is not authorized\n        '429':\n          content:\n            application/json;datetime-format=rfc3339:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Too many requests\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - usage_read\n      summary: Get hourly usage for observability pipelines\n      tags:\n      - Usage Metering\n  /api/v2/user_invitations:\n    post:\n      description: Sends emails to one or more users inviting them to join the organization.\n      operationId: SendInvitations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserInvitationsRequest'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserInvitationsResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_invite\n      summary: Send invitation emails\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n  /api/v2/user_invitations/{user_invitation_uuid}:\n    get:\n      description: Returns a single user invitation by its UUID.\n      operationId: GetInvitation\n      parameters:\n      - description: The UUID of the user invitation.\n        in: path\n        name: user_invitation_uuid\n        required: true\n        schema:\n          example: 00000000-0000-0000-3456-000000000000\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserInvitationResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_invite\n      summary: Get a user invitation\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n  /api/v2/users:\n    get:\n      description: 'Get the list of all users in the organization. This list includes\n\n        all users even if they are deactivated or unverified.'\n      operationId: ListUsers\n      parameters:\n      - $ref: '#/components/parameters/PageSize'\n      - $ref: '#/components/parameters/PageNumber'\n      - description: 'User attribute to order results by. Sort order is ascending\n          by default.\n\n          Sort order is descending if the field\n\n          is prefixed by a negative sign, for example `sort=-name`. Options: `name`,\n\n          `modified_at`, `user_count`.'\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: name\n          example: name\n          type: string\n      - description: 'Direction of sort. Options: `asc`, `desc`.'\n        in: query\n        name: sort_dir\n        required: false\n        schema:\n          $ref: '#/components/schemas/QuerySortOrder'\n      - description: Filter all users by the given string. Defaults to no filtering.\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n      - description: 'Filter on status attribute.\n\n          Comma separated list, with possible values `Active`, `Pending`, and `Disabled`.\n\n          Defaults to no filtering.'\n        in: query\n        name: filter[status]\n        required: false\n        schema:\n          example: Active\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_read\n      summary: List all users\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n    post:\n      description: Create a user for your organization.\n      operationId: CreateUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCreateRequest'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_invite\n      summary: Create a user\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n  /api/v2/users/{user_id}:\n    delete:\n      description: 'Disable a user. Can only be used with an application key belonging\n\n        to an administrator user.'\n      operationId: DisableUser\n      parameters:\n      - $ref: '#/components/parameters/UserID'\n      responses:\n        '204':\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Disable a user\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n    get:\n      description: \"Get a user in the organization specified by the user\\u2019s `user_id`.\"\n      operationId: GetUser\n      parameters:\n      - $ref: '#/components/parameters/UserID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: OK for get user\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_read\n      summary: Get user details\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n    patch:\n      description: 'Edit a user. Can only be used with an application key belonging\n\n        to an administrator user.'\n      operationId: UpdateUser\n      parameters:\n      - $ref: '#/components/parameters/UserID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserUpdateRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Bad Request\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Unprocessable Entity\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_manage\n      summary: Update a user\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n  /api/v2/users/{user_id}/orgs:\n    get:\n      description: 'Get a user organization. Returns the user information and all\n        organizations\n\n        joined by this user.'\n      operationId: ListUserOrganizations\n      parameters:\n      - $ref: '#/components/parameters/UserID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ: []\n      summary: Get a user organization\n      tags:\n      - Users\n      x-codegen-request-body-name: body\n  /api/v2/users/{user_id}/permissions:\n    get:\n      description: \"Get a user permission set. Returns a list of the user\\u2019s permissions\\ngranted\n        by the associated user's roles.\"\n      operationId: ListUserPermissions\n      parameters:\n      - $ref: '#/components/parameters/UserID'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionsResponse'\n          description: OK\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Authentication error\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIErrorResponse'\n          description: Not found\n        '429':\n          $ref: '#/components/responses/TooManyRequestsResponse'\n      security:\n      - apiKeyAuth: []\n        appKeyAuth: []\n      - AuthZ:\n        - user_access_read\n      summary: Get a user permissions\n      tags:\n      - Users\n      x-codegen-request-body-name: body\nsecurity:\n- apiKeyAuth: []\n  appKeyAuth: []\nservers:\n- url: https://{subdomain}.{site}\n  variables:\n    site:\n      default: datadoghq.com\n      description: The regional site for Datadog customers.\n      enum:\n      - datadoghq.com\n      - us3.datadoghq.com\n      - us5.datadoghq.com\n      - datadoghq.eu\n      - ddog-gov.com\n    subdomain:\n      default: api\n      description: The subdomain where the API is deployed.\n- url: '{protocol}://{name}'\n  variables:\n    name:\n      default: api.datadoghq.com\n      description: Full site DNS name.\n    protocol:\n      default: https\n      description: The protocol for accessing the API.\n- url: https://{subdomain}.{site}\n  variables:\n    site:\n      default: datadoghq.com\n      description: Any Datadog deployment.\n    subdomain:\n      default: api\n      description: The subdomain where the API is deployed.\ntags:\n- description: Search your Audit Logs events over HTTP.\n  name: Audit\n- description: '[AuthN Mappings API](https://docs.datadoghq.com/account_management/authn_mapping/?tab=example)\n\n    is used to automatically map group of users to roles in Datadog using attributes\n\n    sent from Identity Providers.'\n  name: AuthN Mappings\n- description: Search or aggregate your CI Visibility pipeline events over HTTP.\n  name: CI Visibility Pipelines\n- description: Search or aggregate your CI Visibility test events over HTTP.\n  name: CI Visibility Tests\n- description: Workload activity security rules for generating events using the Datadog\n    security Agent.\n  name: Cloud Workload Security\n- description: Configure your Datadog Confluent Cloud integration directly through\n    the Datadog API.\n  name: Confluent Cloud\n- description: 'Interact with your dashboard lists through the API to\n\n    organize, find, and share all of your dashboards with your team and\n\n    organization.'\n  name: Dashboard Lists\n- description: 'The events service allows you to programmatically post events to the\n    event stream\n\n    and fetch events from the event stream. Events are limited to 4000 characters.\n\n    If an event is sent out with a message containing more than 4000 characters, only\n    the\n\n    first 4000 characters are displayed.'\n  name: Events\n- description: Create, update, delete, and retrieve services which can be associated\n    with incidents.\n  name: Incident Services\n- description: Create, update, delete and retrieve teams which can be associated with\n    incidents.\n  name: Incident Teams\n- description: Manage incident response.\n  name: Incidents\n- description: 'Manage your Datadog API and application keys. You need an API key\n    and\n\n    an application key for a user with the required permissions to interact\n\n    with these endpoints. The full list of API and application keys can be\n\n    seen on your [Datadog API page](https://app.datadoghq.com/account/settings#api).'\n  externalDocs:\n    description: Find out more at\n    url: https://docs.datadoghq.com/account_management/api-app-keys/\n  name: Key Management\n- description: Search your logs and send them to your Datadog platform over HTTP.\n  name: Logs\n- description: 'Archives forward all the logs ingested to a cloud storage system.\n\n\n    See the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)\n\n    for a list of the archives currently configured in web UI.'\n  externalDocs:\n    description: Find out more at\n    url: https://docs.datadoghq.com/logs/archives/\n  name: Logs Archives\n- description: Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics)\n    for your organization.\n  externalDocs:\n    description: Find out more at\n    url: https://docs.datadoghq.com/logs/logs_to_metrics/\n  name: Logs Metrics\n- description: \"The metrics endpoint allows you to:\\n\\n- Post metrics data so it can\n    be graphed on Datadog\\u2019s dashboards\\n- Query metrics from any time period\n    (timeseries and scalar)\\n- Modify tag configurations for metrics\\n- View tags\n    and volumes for metrics\\n\\n**Note**: A graph can only contain a set number of\n    points\\nand as the timeframe over which a metric is viewed increases,\\naggregation\n    between points occurs to stay below that set number.\\n\\nThe Post, Patch, and Delete\n    `manage_tags` API methods can only be performed by\\na user who has the `Manage\n    Tags for Metrics` permission.\"\n  name: Metrics\n- description: 'Configure your [Datadog Opsgenie integration](https://docs.datadoghq.com/integrations/opsgenie/)\n\n    directly through the Datadog API.'\n  externalDocs:\n    url: https://docs.datadoghq.com/api/latest/opsgenie-integration\n  name: Opsgenie Integration\n- description: Create, edit, and manage your organizations. Read more about [multi-org\n    accounts](https://docs.datadoghq.com/account_management/multi_organization).\n  externalDocs:\n    description: Find out more at\n    url: https://docs.datadoghq.com/account_management/multi_organization\n  name: Organizations\n- description: The processes API allows you to query processes data for your organization.\n  name: Processes\n- description: Search or aggregate your RUM events over HTTP.\n  name: RUM\n- description: 'The Roles API is used to create and manage Datadog roles, what\n\n    [global permissions](https://docs.datadoghq.com/account_management/rbac/)\n\n    they grant, and which users belong to them.\n\n\n    Permissions related to specific account assets can be granted to roles\n\n    in the Datadog application without using this API. For example, granting\n\n    read access on a specific log index to a role can be done in Datadog from the\n\n    [Pipelines page](https://app.datadoghq.com/logs/pipelines).'\n  name: Roles\n- description: 'Detection rules for generating signals and listing of generated\n\n    signals.'\n  name: Security Monitoring\n- description: Create, update, delete, and retrieve sensitive data scanner groups\n    and rules.\n  name: Sensitive Data Scanner\n- description: Create, edit, and disable service accounts.\n  name: Service Accounts\n- description: API to create, update, retrieve and delete service definitions.\n  externalDocs:\n    url: https://docs.datadoghq.com/tracing/service_catalog/\n  name: Service Definition\n- description: 'The usage metering API allows you to get hourly, daily, and\n\n    monthly usage across multiple facets of Datadog.\n\n    This API is available to all Pro and Enterprise customers.\n\n    Usage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).\n\n\n    **Note**: Usage data is delayed by up to 72 hours from when it was incurred.\n\n    It is retained for 15 months.\n\n\n    You can retrieve up to 24 hours of hourly usage data for multiple organizations,\n\n    and up to two months of hourly usage data for a single organization in one request.'\n  externalDocs:\n    description: Find out more at\n    url: https://docs.datadoghq.com/account_management/billing/usage_details/\n  name: Usage Metering\n- description: Create, edit, and disable users.\n  externalDocs:\n    url: https://docs.datadoghq.com/account_management/users\n  name: Users\nx-group-parameters: true\n",
			"canonicalURL": "/github.com/DataDog/datadog-api-client-ruby@5348d501abb4643c03e318e8095445dbf0575b17/-/blob/.generator/schemas/v2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/DataDog/datadog-api-client-ruby/blob/5348d501abb4643c03e318e8095445dbf0575b17/.generator/schemas/v2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"RUMAggregateRequest\": resolve \"#/components/schemas/RUMAggregateRequest\": property \"group_by\": items: $ref: resolve \"#/components/schemas/RUMGroupBy\": property \"total\": $ref: resolve \"#/components/schemas/RUMGroupByTotal\": at .generator/schemas/v2/openapi.yaml:7772:16: parse default: unexpected type: \"\""
}