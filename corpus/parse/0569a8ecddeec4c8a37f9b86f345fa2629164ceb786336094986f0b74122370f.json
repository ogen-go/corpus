{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HPI-Information-Systems/snowman"
		},
		"file": {
			"name": "api_specification.yaml",
			"size": 0,
			"path": "docs/api_specification.yaml",
			"byteSize": 34968,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e\n    _This document describes the REST API of the snowman data matching benchmark\n    tool._\n    Comparing data matching algorithms is still an unsolved topic in both industry and research.\n    With snowman, developers and researchers will be able to compare the performance of different data matching\n    solutions or improve new algorithms.\n  version: 3.0.0\n  title: Snowman API\n  contact:\n    email: snowman@groups.sap.com\n    url: https://github.com/HPI-Information-Systems/snowman\n  license:\n    name: LICENSE (MIT)\n    url: https://github.com/HPI-Information-Systems/snowman/blob/main/LICENSE\n\nservers:\n  - url: \"{protocol}://{server}/api/v1\"\n    variables:\n      protocol:\n        default: http\n        enum: [http, https]\n      server:\n        default: localhost:8123\n\ntags:\n  - name: Algorithm\n    description: Operations about algorithms\n  - name: Datasets\n    description: Operations about datasets\n  - name: Experiments\n    description: Operations about experiments\n  - name: Similarity Thresholds\n    description: Operations about similarity thresholds of experiments\n  - name: Benchmark\n    description: Operations about comparing multiple experiments\n\npaths:\n  #### ALGORITHM ####\n  /algorithms:\n    get:\n      tags:\n        - Algorithm\n      summary: Get all algorithms\n      operationId: getAlgorithms\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Algorithm\"\n\n    post:\n      tags:\n        - Algorithm\n      summary: Creates a new algorithm\n      operationId: addAlgorithm\n      x-codegen-request-body-name: algorithm\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AlgorithmValues\"\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AlgorithmId\"\n        400:\n          description: Bad Request\n\n  /algorithms/{algorithmId}:\n    parameters:\n      - name: algorithmId\n        in: path\n        required: true\n        schema:\n          $ref: \"#/components/schemas/AlgorithmId\"\n\n    get:\n      tags:\n        - Algorithm\n      summary: Gets an algorithm by id\n      operationId: getAlgorithm\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Algorithm\"\n        404:\n          description: Not Found\n    put:\n      tags:\n        - Algorithm\n      summary: Updates or creates an algorithm\n      operationId: setAlgorithm\n      x-codegen-request-body-name: algorithm\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AlgorithmValues\"\n        required: true\n      responses:\n        204:\n          description: No Content\n        400:\n          description: Bad Request\n\n    delete:\n      tags:\n        - Algorithm\n      summary: Deletes an algorithm by id\n      operationId: deleteAlgorithm\n      responses:\n        204:\n          description: No Content\n\n    #### DATASET ####\n  /datasets:\n    get:\n      tags:\n        - Datasets\n      summary: Returns all Datasets\n      operationId: getDatasets\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Dataset\"\n\n    post:\n      tags:\n        - Datasets\n      summary: Creates a new dataset with metainformation\n      operationId: addDataset\n      x-codegen-request-body-name: dataset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DatasetValues\"\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatasetId\"\n        400:\n          description: Bad Request\n\n  /datasets/{datasetId}:\n    parameters:\n      - name: datasetId\n        in: path\n        required: true\n        schema:\n          $ref: \"#/components/schemas/DatasetId\"\n\n    get:\n      tags:\n        - Datasets\n      summary: Gets dataset by id\n      operationId: getDataset\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dataset\"\n        404:\n          description: Not Found\n\n    put:\n      tags:\n        - Datasets\n      summary: Updates or creates a dataset\n      operationId: setDataset\n      x-codegen-request-body-name: dataset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DatasetValues\"\n        required: true\n      responses:\n        204:\n          description: No Content\n        400:\n          description: Bad Request\n\n    delete:\n      tags:\n        - Datasets\n      summary: Deletes a whole dataset by id\n      operationId: deleteDataset\n      responses:\n        204:\n          description: No Content\n\n  /datasets/{datasetId}/file:\n    parameters:\n      - name: datasetId\n        in: path\n        required: true\n        schema:\n          $ref: \"#/components/schemas/DatasetId\"\n\n    get:\n      tags:\n        - Datasets\n      parameters:\n        - name: startAt\n          in: query\n          schema:\n            type: integer\n            default: 0\n          required: false\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            default: -1\n          description: -1 returns all remaining records\n          required: false\n        - in: query\n          name: sortBy\n          schema:\n            type: string\n            example: first_name\n          description: startAt and limit can be used without specifying sortBy (guarantees same order of records even if not specified)\n          required: false\n        - in: query\n          name: format\n          schema:\n            $ref: \"#/components/schemas/FileResponseFormat\"\n          required: false\n      summary: Gets a dataset file by id\n      description: Always returns one row with column names followed by the requested amount of rows. To only return the column names, pass startAt=0 and limit=0.\n      operationId: getDatasetFile\n      responses:\n        200:\n          $ref: \"#/components/responses/FileResponse\"\n        404:\n          description: Not Found\n\n    put:\n      tags:\n        - Datasets\n      summary: Updates or creates a dataset file\n      operationId: setDatasetFile\n      parameters:\n        - name: idColumn\n          in: query\n          description: The name of the alphanumeric id column in the uploaded dataset.\n          schema:\n            type: string\n            example: id\n          required: true\n        - name: quote\n          in: query\n          schema:\n            type: string\n            example: '\"'\n          required: true\n        - name: escape\n          in: query\n          schema:\n            type: string\n            example: \"'\"\n          required: true\n        - name: separator\n          in: query\n          schema:\n            type: string\n            example: \",\"\n          required: true\n      x-codegen-request-body-name: file\n      requestBody:\n        content:\n          text/csv:\n            schema:\n              $ref: \"#/components/schemas/CSVFile\"\n        required: true\n      responses:\n        204:\n          description: No Content\n        400:\n          description: Bad Request\n\n    delete:\n      tags:\n        - Datasets\n      summary: Deletes a dataset file (but not the dataset)\n      operationId: deleteDatasetFile\n      responses:\n        204:\n          description: No Content\n\n  #### EXPERIMENT ####\n  /experiments:\n    get:\n      tags:\n        - Experiments\n      summary: Get all experiments\n      operationId: getExperiments\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Experiment\"\n\n    post:\n      tags:\n        - Experiments\n      summary: Creates a new Experiment\n      operationId: addExperiment\n      x-codegen-request-body-name: experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExperimentValues\"\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExperimentId\"\n        400:\n          description: Bad Request\n\n  /experiments/{experimentId}:\n    parameters:\n      - name: experimentId\n        in: path\n        required: true\n        schema:\n          $ref: \"#/components/schemas/ExperimentId\"\n\n    get:\n      tags:\n        - Experiments\n      summary: Gets experiment by id\n      operationId: getExperiment\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Experiment\"\n        404:\n          description: Not Found\n\n    put:\n      tags:\n        - Experiments\n      summary: Updates or creates an Experiment\n      operationId: setExperiment\n      x-codegen-request-body-name: experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExperimentValues\"\n        required: true\n      responses:\n        204:\n          description: No Content\n        400:\n          description: Bad Request\n\n    delete:\n      tags:\n        - Experiments\n      summary: Deletes an experiment (including experiment file)\n      operationId: deleteExperiment\n      responses:\n        204:\n          description: No Content\n\n  /experiments/{experimentId}/file:\n    parameters:\n      - name: experimentId\n        in: path\n        required: true\n        schema:\n          $ref: \"#/components/schemas/ExperimentId\"\n      - name: similarityThresholdFunction\n        in: query\n        required: false\n        description: only use in combination with similarityThreshold\n        schema:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n      - name: similarityThreshold\n        in: query\n        required: false\n        description: only use in combination with similarityThresholdFunction\n        schema:\n          type: number\n    get:\n      tags:\n        - Experiments\n      summary: Get an experiment file\n      operationId: getExperimentFile\n      parameters:\n        - name: startAt\n          in: query\n          schema:\n            type: integer\n            default: 0\n          required: false\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            default: -1\n          description: -1 returns all remaining records\n          required: false\n        - in: query\n          name: sortBy\n          schema:\n            type: string\n            example: first_name\n          description: startAt and limit can be used without specifying sortBy (guarantees same order of records even if not specified)\n          required: false\n        - in: query\n          name: format\n          schema:\n            $ref: \"#/components/schemas/FileResponseFormat\"\n          required: false\n      responses:\n        200:\n          $ref: \"#/components/responses/FileResponse\"\n        404:\n          description: Not Found\n\n    put:\n      tags:\n        - Experiments\n      summary: Creates an experiment file (cannot overwrite existing)\n      operationId: setExperimentFile\n      parameters:\n        - in: query\n          name: format\n          description: \"Documentation on the formats can be found here: https://hpi-information-systems.github.io/snowman/basic_usage/experiments/#import-formats\"\n          schema:\n            type: string\n            enum:\n              - magellan\n              - clusterER\n              - pilot\n              - sigmod2021\n              - BHANA\n              - BPIES\n          required: true\n      x-codegen-request-body-name: file\n      requestBody:\n        content:\n          text/csv:\n            schema:\n              $ref: \"#/components/schemas/CSVFile\"\n        required: true\n      responses:\n        204:\n          description: No Content\n        400:\n          description: Bad Request\n\n  #### SIMILARITY THRESHOLDS ####\n  /similarity-threshold-functions:\n    get:\n      tags:\n        - Similarity Thresholds\n      summary: Get all similarity threshold functions\n      operationId: getSimilarityThresholdFunctions\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SimilarityThresholdFunction\"\n        404:\n          description: Not Found\n\n    post:\n      tags:\n        - Similarity Thresholds\n      summary: Creates a new similarity threshold function\n      operationId: addSimilarityThresholdFunction\n      x-codegen-request-body-name: similarityThresholdFunction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SimilarityThresholdFunctionValues\"\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n        400:\n          description: Bad Request\n\n  /similarity-threshold-functions/{functionId}:\n    parameters:\n      - name: functionId\n        in: path\n        required: true\n        schema:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n\n    get:\n      tags:\n        - Similarity Thresholds\n      summary: Get a similarity threshold function\n      operationId: getSimilarityThresholdFunction\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimilarityThresholdFunction\"\n        404:\n          description: Not Found\n\n    put:\n      tags:\n        - Similarity Thresholds\n      summary: Updates or creates a similarity threshold function\n      operationId: setSimilarityThresholdFunction\n      x-codegen-request-body-name: similarityThresholdFunction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SimilarityThresholdFunctionValues\"\n        required: true\n      responses:\n        204:\n          description: No Content\n        400:\n          description: Bad Request\n\n    delete:\n      tags:\n        - Similarity Thresholds\n      summary: Deletes a similarity threshold function\n      operationId: deleteSimilarityThresholdFunction\n      responses:\n        204:\n          description: No Content\n\n  #### BENCHMARK ####\n  /benchmark/metrics:\n    get:\n      tags:\n        - Benchmark\n      operationId: getBinaryMetrics\n      parameters:\n        - name: groundTruthExperimentId\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ExperimentId\"\n        - name: groundTruthSimilarityThresholdFunction\n          in: query\n          required: false\n          description: only use in combination with groundTruthSimilarityThreshold\n          schema:\n            $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n        - name: groundTruthSimilarityThreshold\n          in: query\n          required: false\n          description: only use in combination with groundTruthSimilarityThresholdFunction\n          schema:\n            type: number\n        - name: predictedExperimentId\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ExperimentId\"\n        - name: predictedSimilarityThresholdFunction\n          in: query\n          required: false\n          description: only use in combination with predictedSimilarityThreshold\n          schema:\n            $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n        - name: predictedSimilarityThreshold\n          in: query\n          required: false\n          description: only use in combination with predictedSimilarityThresholdFunction\n          schema:\n            type: number\n      summary: Compares two experiments and returns binary metrics\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Metric\"\n        404:\n          description: Not Found\n\n  /benchmark/experiment-intersection/records:\n    post:\n      tags:\n        - Benchmark\n      summary:\n        intersects multiple experiments and returns the resulting records. This\n        can be used to calculate the confusion-matrix.\n      operationId: calculateExperimentIntersectionRecords\n      parameters:\n        - name: startAt\n          in: query\n          schema:\n            type: integer\n            default: 0\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            default: -1\n          description: -1 returns all remaining records\n        - in: query\n          name: format\n          schema:\n            $ref: \"#/components/schemas/FileResponseFormat\"\n          required: false\n      x-codegen-request-body-name: intersection\n      requestBody:\n        $ref: \"#/components/requestBodies/ExperimentIntersection\"\n      responses:\n        200:\n          $ref: \"#/components/responses/FileResponse\"\n        404:\n          description: Not Found\n\n  /benchmark/experiment-intersection/count:\n    post:\n      tags:\n        - Benchmark\n      summary:\n        Intersects multiple experiments and returns the count of pairs and the count of rows.\n        This can be used to calculate the confusion-matrix.\n      operationId: calculateExperimentIntersectionCount\n      x-codegen-request-body-name: intersection\n      requestBody:\n        $ref: \"#/components/requestBodies/ExperimentIntersection\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExperimentIntersectionCount\"\n        404:\n          description: Not Found\n\n  /benchmark/experiment-intersection/counts:\n    post:\n      tags:\n        - Benchmark\n      description: Returns the pair and row counts of all possible intersections of the given experiments.\n      operationId: calculateExperimentIntersectionCounts\n      x-codegen-request-body-name: experiments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/ExperimentConfigItem\"\n              type: array\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ExperimentIntersectionCount\"\n                type: array\n        404:\n          description: Not Found\n  /benchmark/diagram:\n    post:\n      tags:\n        - Benchmark\n      description: returns diagram data based on two metrics and multiple experiments\n      operationId: calculateDiagramData\n      parameters:\n        - name: xAxis\n          in: query\n          schema:\n            anyOf:\n              - $ref: \"#/components/schemas/softKPIsAlgorithmEnum\"\n              - $ref: \"#/components/schemas/MetricsEnum\"\n              - $ref: \"#/components/schemas/softKPIsExperimentEnum\"\n          required: true\n          description: metric to be visualised on the x-axis of the diagram\n        - name: yAxis\n          in: query\n          schema:\n            anyOf:\n              - $ref: \"#/components/schemas/softKPIsAlgorithmEnum\"\n              - $ref: \"#/components/schemas/MetricsEnum\"\n              - $ref: \"#/components/schemas/softKPIsExperimentEnum\"\n          description: metric to be visualised on the y-axis of the diagram\n          required: true\n      x-codegen-request-body-name: diagram\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                multipleExperiments:\n                  $ref: \"#/components/schemas/DiagramExperiments\"\n                similarityThresholds:\n                  $ref: \"#/components/schemas/ExperimentSimilarityConfig\"\n              type: object\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiagramResponse\"\n\n        403:\n          description: Forbidden\n        404:\n          description: Experiments or metrics not found\n\ncomponents:\n  requestBodies:\n    #### EXPERIMENT ####\n    ExperimentIntersection:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ExperimentIntersection\"\n      required: true\n  responses:\n    FileResponse:\n      description: OK\n      content:\n        text/csv:\n          schema:\n            type: string\n            format: binary\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/JSONFileResponse\"\n  schemas:\n    #### ALGORITHM ####\n    AlgorithmId:\n      type: integer\n      example: 1\n\n    AlgorithmValues:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          minLength: 1\n          example: Magellan\n        description:\n          type: string\n          example: This is an open source python library\n        softKPIs:\n          properties:\n            integrationEffort:\n              properties:\n                installationEffort:\n                  $ref: \"#/components/schemas/EffortParts\"\n                deploymentType:\n                  items:\n                    type: string\n                    example: \"cloud\"\n                  type: array\n                solutionType:\n                  items:\n                    type: string\n                    example: \"rulebased\"\n                  type: array\n                useCase:\n                  items:\n                    type: string\n                    example: \"merging\"\n                  type: array\n                generalCosts:\n                  type: number\n              type: object\n            configurationEffort:\n              properties:\n                matchingSolution:\n                  $ref: \"#/components/schemas/EffortParts\"\n                domain:\n                  $ref: \"#/components/schemas/EffortParts\"\n                interfaces:\n                  items:\n                    type: string\n                    example: \"GUI\"\n                  type: array\n                supportedOSs:\n                  items:\n                    type: string\n                    example: \"Windows\"\n                  type: array\n              type: object\n          type: object\n    Algorithm:\n      allOf:\n        - type: object\n          required:\n            - id\n          properties:\n            id:\n              $ref: \"#/components/schemas/AlgorithmId\"\n            matchingSolutionEffort:\n              items:\n                $ref: \"#/components/schemas/Metric\"\n              type: array\n            domainEffort:\n              items:\n                $ref: \"#/components/schemas/Metric\"\n            installationEffort:\n              items:\n                $ref: \"#/components/schemas/Metric\"\n              type: array\n        - $ref: \"#/components/schemas/AlgorithmValues\"\n\n    #### DATASET ####\n    DatasetId:\n      type: integer\n      example: 1\n\n    DatasetValues:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          minLength: 1\n          example: Dataset1\n        description:\n          type: string\n          example: This is a dataset file about Restaurants.\n        numberOfRecords:\n          type: integer\n          example: 500\n        tags:\n          type: array\n          items:\n            type: string\n            example: restaurants\n\n    Dataset:\n      allOf:\n        - type: object\n          required:\n            - id\n          properties:\n            id:\n              $ref: \"#/components/schemas/DatasetId\"\n            numberOfUploadedRecords:\n              type: integer\n              example: 2005\n        - $ref: \"#/components/schemas/DatasetValues\"\n      #### EXPERIMENT ####\n    ExperimentId:\n      type: integer\n      example: 1\n\n    ExperimentValues:\n      type: object\n      required:\n        - name\n        - datasetId\n        - algorithmId\n      properties:\n        name:\n          type: string\n          minLength: 1\n          example: Experiment1\n        description:\n          type: string\n          example: This is an experiment using a fancy algorithm\n        datasetId:\n          $ref: \"#/components/schemas/DatasetId\"\n        algorithmId:\n          $ref: \"#/components/schemas/AlgorithmId\"\n        softKPIs:\n          type: object\n          properties:\n            effort:\n              $ref: \"#/components/schemas/EffortParts\"\n            runtime:\n              type: number\n    Experiment:\n      allOf:\n        - type: object\n          required:\n            - id\n          properties:\n            id:\n              $ref: \"#/components/schemas/ExperimentId\"\n            numberOfUploadedRecords:\n              type: integer\n              example: 2005\n            effort:\n              items:\n                $ref: \"#/components/schemas/Metric\"\n              type: array\n        - $ref: \"#/components/schemas/ExperimentValues\"\n\n    #### SIMILARITY THRESHOLDS ####\n    SimilarityThresholdFunctionId:\n      type: integer\n\n    SimilarityThreshold:\n      type: string\n\n    SimilarityThresholdFunctionConstant:\n      type: number\n\n    SimilarityThresholdFunctionOperator:\n      type: object\n      properties:\n        left:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionDefinition\"\n        right:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionDefinition\"\n        operator:\n          type: string\n          enum: [ADD, SUBTRACT, MULTIPLY, DIVIDE, POWER, POW, ATAN2, LOG, MOD]\n      required:\n        - left\n        - right\n        - operator\n\n    SimilarityThresholdFunctionUnaryOperator:\n      type: object\n      properties:\n        func:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionDefinition\"\n        operator:\n          type: string\n          enum:\n            - ACOS\n            - ACOSH\n            - ASIN\n            - ASINH\n            - ATAN\n            - ATANH\n            - CEIL\n            - CEILING\n            - COS\n            - COSH\n            - DEGREES\n            - EXP\n            - FLOOR\n            - LN\n            - LOG\n            - LOG10\n            - LOG2\n            - RADIANS\n            - SIN\n            - SINH\n            - SQRT\n            - TAN\n            - TANH\n            - TRUNC\n      required:\n        - func\n        - operator\n\n    SimilarityThresholdFunctionDefinition:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [SimilarityThreshold, Operator, Constant, UnaryOperator]\n        similarityThreshold:\n          $ref: \"#/components/schemas/SimilarityThreshold\"\n        operator:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionOperator\"\n        constant:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionConstant\"\n        unaryOperator:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionUnaryOperator\"\n      required:\n        - type\n\n    SimilarityThresholdFunctionValues:\n      allOf:\n        - properties:\n            name:\n              type: string\n            experimentId:\n              $ref: \"#/components/schemas/ExperimentId\"\n            definition:\n              $ref: \"#/components/schemas/SimilarityThresholdFunctionDefinition\"\n          required:\n            - name\n            - experimentId\n            - definition\n\n    SimilarityThresholdFunction:\n      allOf:\n        - properties:\n            id:\n              $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n          required:\n            - id\n          type: object\n        - $ref: \"#/components/schemas/SimilarityThresholdFunctionValues\"\n\n    #### BENCHMARK ####\n    Metric:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"precision\"\n        id:\n          type: string\n        formula:\n          type: string\n          example: \"\\\\frac{truePositives}{truePositives + falsePositives}\"\n        info:\n          type: string\n          example: The meaningfulness of the f1 score is debated in the research community.\n        infoLink:\n          type: string\n          example: https://link.springer.com/article/10.1007/s11222-017-9746-6\n        value:\n          type: number\n          example: 0.75\n        range:\n          type: array\n          items:\n            type: number\n          minItems: 2\n          maxItems: 2\n          example: [0, 1]\n      required:\n        - name\n        - formula\n        - value\n\n    ExperimentConfigItem:\n      type: object\n      properties:\n        experimentId:\n          $ref: \"#/components/schemas/ExperimentId\"\n        similarity:\n          type: object\n          properties:\n            func:\n              $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n            threshold:\n              type: number\n          required:\n            - func\n            - threshold\n      required:\n        - experimentId\n\n    ExperimentIntersectionItem:\n      allOf:\n        - $ref: \"#/components/schemas/ExperimentConfigItem\"\n        - type: object\n          properties:\n            predictedCondition:\n              type: boolean\n          required:\n            - predictedCondition\n    ExperimentIntersection:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ExperimentIntersectionItem\"\n\n    ExperimentIntersectionCount:\n      type: object\n      properties:\n        numberRows:\n          type: integer\n          example: 5\n        numberPairs:\n          type: integer\n          example: 10\n        experiments:\n          $ref: \"#/components/schemas/ExperimentIntersection\"\n      required:\n        - numberRows\n        - numberPairs\n        - experiments\n    EffortParts:\n      properties:\n        expertise:\n          type: number\n        hrAmount:\n          type: number\n      type: object\n    ExperimentSimilarityConfig:\n      properties:\n        experimentId:\n          $ref: \"#/components/schemas/ExperimentId\"\n        groundTruthId:\n          $ref: \"#/components/schemas/ExperimentId\"\n        steps:\n          type: integer\n        func:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n      required:\n        - func\n        - experimentId\n        - groundTruthId\n        - steps\n    DiagramExperimentItem:\n      properties:\n        experiment:\n          $ref: \"#/components/schemas/ExperimentConfigItem\"\n        groundTruth:\n          $ref: \"#/components/schemas/ExperimentConfigItem\"\n      required:\n        - experiment\n      type: object\n    DiagramExperiments:\n      items:\n        $ref: \"#/components/schemas/DiagramExperimentItem\"\n      type: array\n    DiagramCoordinates:\n      properties:\n        x:\n          type: number\n        y:\n          type: number\n        funcId:\n          $ref: \"#/components/schemas/SimilarityThresholdFunctionId\"\n        experimentId:\n          $ref: \"#/components/schemas/ExperimentId\"\n        threshold:\n          type: number\n      required:\n        - \"x\"\n        - \"y\"\n    softKPIsAlgorithmEnum:\n      type: string\n      enum:\n        - domainExpertise\n        - domainHrAmount\n        - domainManhattanDistanceBasedEffort\n        - domainHrAmountWeightedEffort\n        - domainMultiplyEffort\n        - domainExpertiseWeightedEffort\n        - matchingSolutionExpertise\n        - matchingSolutionHrAmount\n        - matchingSolutionManhattanDistanceBasedEffort\n        - matchingSolutionHrAmountWeightedEffort\n        - matchingSolutionMultiplyEffort\n        - matchingSolutionExpertiseWeightedEffort\n        - generalCosts\n        - installationExpertise\n        - installationHrAmount\n        - installationManhattanDistanceBasedEffort\n        - installationHrAmountWeightedEffort\n        - installationMultiplyEffort\n        - installationExpertiseWeightedEffort\n    softKPIsExperimentEnum:\n      type: string\n      enum:\n        - expertise\n        - hrAmount\n        - manhattanDistanceBasedEffort\n        - hrAmountWeightedEffort\n        - multiplyEffort\n        - expertiseWeightedEffort\n        - runtime\n    MetricsEnum:\n      type: string\n      enum:\n        - similarity\n        - falseDiscoveryRate\n        - falseNegativeRate\n        - falseOmissionRate\n        - falsePositiveRate\n        - negativePredictiveValue\n        - precision\n        - prevalenceThreshold\n        - recall\n        - specificity\n        - threatScore\n        - accuracy\n        - balancedAccuracy\n        - bookmakerInformedness\n        - fStarScore\n        - f1Score\n        - fowlkesMallowsIndex\n        - markedness\n        - matthewsCorrelationCoefficient\n\n    DiagramResponse:\n      properties:\n        coordinates:\n          items:\n            $ref: \"#/components/schemas/DiagramCoordinates\"\n          type: array\n        definitionRange:\n          type: array\n          items:\n            type: number\n          minItems: 2\n          maxItems: 2\n          example: [0, 1]\n        valueRange:\n          type: array\n          items:\n            type: number\n          minItems: 2\n          maxItems: 2\n          example: [0, 1]\n      required:\n        - coordinates\n\n    #### GENERAL ####\n    CSVFile:\n      type: string\n      format: binary\n\n    FileResponseFormat:\n      type: string\n      enum: [json, csv]\n      default: json\n\n    JSONFileResponse:\n      type: object\n      properties:\n        header:\n          type: array\n          items:\n            type: string\n          example: [\"id\", \"testColumn1\", \"testColumn2\"]\n        data:\n          type: array\n          example:\n            [\n              [\"1\", \"test value 1\", \"test value 2\"],\n              [\"2\", \"test value 1\", \"test value 2\"],\n              [],\n              [\"3\", \"other\", \"group\"],\n            ]\n          items:\n            type: array\n            example: [\"1\", \"test value 1\", \"test value 2\"]\n            items:\n              type: string\n      required:\n        - header\n        - data\n",
			"canonicalURL": "/github.com/HPI-Information-Systems/snowman@4795d2cd48357384d28c1dcecb2e032e2e8d38cf/-/blob/docs/api_specification.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/HPI-Information-Systems/snowman/blob/4795d2cd48357384d28c1dcecb2e032e2e8d38cf/docs/api_specification.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/benchmark/diagram\": at 1:12016: post: operation \"calculateDiagramData\": at 1:12024: parameters: parse parameter \"xAxis\": at 1:12159: invalid schema:style:explode combination: (\"\":\"form\":true)"
}