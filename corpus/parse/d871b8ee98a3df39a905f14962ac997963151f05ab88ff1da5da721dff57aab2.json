{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NLCR/SeznamDNNT"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "openapi/src/main/resources/cz/inovatika/sdnnt/openapi/api.yaml",
			"byteSize": 8281,
			"content": "openapi: 3.0.2\ninfo:\n  title: SDNNT API\n  description: |\n\n    API přístupné pouze pro uživatele s vygenerovaným platným API-KEY.\n\n    Umožňuje následující:\n      - Nahlížet a vyhledávat v katalogu\n      - Zobrazit a filtrovat všechny uživatelské návrhy\n      - Podávat hromadné požadavky a návrhy na zařazení resp. vyřazení díla ze seznamu.\n\n  version: 1.0.0\n\nexternalDocs:\n  description: Externí dokumentace k projektu\n  url: 'https://sdnnt.nkp.cz'\n\nservers:\n  - url: ../api/v1.0\ntags:\n  - name: Požadavky\n    description: Endpoint, který řeší kompletně správu požadavků\n  - name: Katalog\n    description: Endpoint pro hledání v katalogu\n\npaths:\n\n  /catalog:\n    get:\n      tags:\n        - Katalog\n      summary: Nahlížení do katalogu\n      description: |\n        Umožňuje vyhledávat a prohlížet data v katalogu. Předdefinované filtry\n          - Licence - licence díla (**DNNTT**, **DNNTO**)\n          - Stavy - Stav díla (**A**, **PA**, **V**, **N**, **X**)\n\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: state\n          schema:\n            type: string\n            enum: [\"A\",\"PA\",\"V\",\"N\", \"X\"]\n          required: false\n        - in: query\n          name: license\n          schema:\n            type: string\n            enum: [\"dnntt\",\"dnnto\"]\n          required: false\n\n        - in: query\n          name: fmt\n          schema:\n            type: string\n            enum: [\"BK\",\"SE\"]\n          required: false\n\n\n        - in: query\n          name: rows\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 20\n          required: false\n        - in: query\n          name: page\n          schema:\n            type: integer\n            default: 0\n          required: false\n\n\n\n      responses:\n        '200':\n          description: Záznamy z katalogu\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/catalog/CatalogResponse.yaml'\n      security:\n        - api_key: []\n\n\n\n  /request:\n    get:\n      tags:\n        - Požadavky\n      summary: Návrhy a požadavky\n      description: Vrací všechny návrhy a požadavky pro konkrétního uživatele, umožňuje filtrovat dle stavu\n      operationId: requestGet\n      parameters:\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum: [\"open\", \"waiting\", \"waiting_for_automatic_process\", \"processed\"]\n          required: false\n        - in: query\n          name: itemstatus\n          schema:\n            type: string\n            enum: [\"approved\",\"rejected\"]\n          required: false\n\n        - in: query\n          name: navrh\n          schema:\n            type: string\n            enum: [\"NZN\",\"VN\", \"VNL\",\"VNZ\"]\n          required: false\n\n\n      responses:\n        '200':\n          description: Všechny uložené žádosti\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/requests/ArrayOfSavedRequest.yaml'\n      security:\n        - api_key: []\n\n\n  /request/batch/nzn:\n    put:\n      tags:\n        - Požadavky\n      summary: Hromadný návrh k zařazení do seznamu\n      description: |\n        Řeší návrh k zařazení na seznam.\n          - Může obsahovat jednu nebo více dávek a v každé dávce musí být minimálně obsaženo jedno dílo.\n          - Dílo je identifikováno identifikátorem ze souborného katalogu.\n          - Dílo musí být ve stavu **N**\n      operationId: requestBatchNzn\n      requestBody:\n        description: Hromadný návrh (jeden nebo více, identifikátor musí existovat v souborném katalogu, dokument u sebe musí mít přítomné pole stavů marc_911a)\n        content:\n          application/json:\n            schema:\n              #$ref: '#/components/schemas/BatchRequest'\n              $ref: './schemas/requests/BatchRequest.yaml'\n        required: true\n\n      responses:\n        '200':\n          description: Žádost vytvořena a ve stavu waiting. V poli  **saved** jsou uloženy dávky, které se podařilo uložit. V poli  **notsaved** jsou dávky, které se nepodařilo uložit.\n          content:\n            application/json:\n              schema:\n                #$ref: '#/components/schemas/BatchResponse'\n                $ref: './schemas/requests/BatchResponse.yaml'\n        '400':\n          description: Špatný dotaz (syntaxe atd..)\n\n      security:\n        - api_key: []\n\n  /request/batch/vn:\n    put:\n      tags:\n        - Požadavky\n      summary: Výzva k vyřazení ze seznamu\n      description: |\n        Řeší hromadnou výzvu k vyřazení ze seznamu.\n          - Může obsahovat jednu nebo více dávek a v každé dávce musí být minimálně obsaženo jedno dílo.\n          - Dílo je identifikováno identifikátorem ze souborného katalogu.\n          - Dílo musí být ve stavu **A** případně **PA**\n      operationId: requestBatchVN\n      requestBody:\n        description: Hromadná výzva (jedna nebo více, identifikátor musí existovat v souborném katalogu, dokument u sebe musí mít přítomné pole stavů marc_911a)\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/requests/BatchRequest.yaml'\n        required: true\n\n      responses:\n        '200':\n          description: Žádost vytvořena a ve stavu waiting\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/requests/BatchResponse.yaml'\n        '400':\n          description: Špatný dotaz (syntaxe atd..)\n\n      security:\n        - api_key: []\n\n\n  /request/batch/vnl:\n    put:\n      tags:\n        - Požadavky\n      summary: Výzva k omezení na terminál / VNL\n      description: |\n        Řeší hromadnou hromadný požadavek .\n          - Může obsahovat jednu nebo více dávek a v každé dávce musí být minimálně obsaženo jedno dílo.\n          - Dílo je identifikováno identifikátorem ze souborného katalogu.\n          - Dílo musí být ve stavu **A** případně **PA**\n\n      operationId: requestBatchVnl\n      requestBody:\n        description: Hromadná výzva(jedna nebo více, identifikátor musí existovat v souborném katalogu, dokument u sebe musí mít přítomné pole stavů marc_911a)\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/requests/BatchRequest.yaml'\n        required: true\n\n      responses:\n        '200':\n          description: Žádost vytvořena a ve stavu waiting\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/requests/BatchResponse.yaml'\n        '400':\n          description: Špatný dotaz (syntaxe atd..)\n\n      security:\n        - api_key: []\n\n  /request/batch/vnz:\n    put:\n      tags:\n        - Požadavky\n      summary: Výzva k omezení na terminál / VNZ\n      description: |\n        Řeší hromadnou hromadný požadavek o vyřazení z návrhu ze seznamu.\n          - Může obsahovat jednu nebo více dávek a v každé dávce musí být minimálně obsaženo jedno dílo.\n          - Dílo je identifikováno identifikátorem ze souborného katalogu.\n          - Dílo musí být ve stavu **A** případně **PA**\n\n      operationId: requestBatchVnz\n      requestBody:\n        description: Hromadná výzva(jedna nebo více, identifikátor musí existovat v souborném katalogu, dokument u sebe musí mít přítomné pole stavů marc_911a)\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/requests/BatchRequest.yaml'\n        required: true\n\n      responses:\n        '200':\n          description: Žádost vytvořena a ve stavu waiting\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/requests/BatchResponse.yaml'\n        '400':\n          description: Špatný dotaz (syntaxe atd..)\n\n      security:\n        - api_key: []\n\ncomponents:\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: X-API-KEY\n      in: header\n      description: Přihlášení pomocí API klíče. Musí být přiděleno administrátorem.\n",
			"canonicalURL": "/github.com/NLCR/SeznamDNNT@318faeb08493d7dc651536ebc8f66a28ed010e07/-/blob/openapi/src/main/resources/cz/inovatika/sdnnt/openapi/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NLCR/SeznamDNNT/blob/318faeb08493d7dc651536ebc8f66a28ed010e07/openapi/src/main/resources/cz/inovatika/sdnnt/openapi/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/catalog\": get: responses: 200: content: application/json: schema: parse schema: at 1:1504: external \"./schemas/catalog/CatalogResponse.yaml\": get: file: local file reference is not allowed"
}