{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GMLC-TDC/HELICS"
		},
		"file": {
			"name": "queries.yaml",
			"size": 0,
			"path": "docs/swagger/reference/queries.yaml",
			"byteSize": 19645,
			"content": "openapi: 3.0.0\ninfo:\n  title: queries\n  version: \"3.2\"\n  contact:\n    name: Philip Top\n    url: helics.org\n    email: helicsteam@helics.org\n  license:\n    name: BSD-3\n    url: \"https://github.com/GMLC-TDC/HELICS/blob/main/LICENSE\"\n  description: |-\n    Summary of the query paths used in HELICS\n    Note: Individual Federates may also define additional queries\n    See https://docs.helics.org/en/latest/user-guide/advanced_topics/queries.html\n    For additional Information\nservers:\n  - url: \"http://localhost:3000\"\npaths:\n  \"/{broker_id}/{target_id}/version\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/version_query.yaml\n              examples: {}\n        \"404\":\n          description: query or target not found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/error_response.yaml\n      operationId: get-version\n      description: run the version query on the specified broker/target\n  \"/{broker_id}/{target_id}/version_all\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/version_all_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-version_all\n      description: data structure with the version string of all contained objects\n  \"/{broker_id}/{target_id}/name\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/version_all_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-name\n      description: the identifier of the object\n  \"/{broker_id}/{target_id}/exists\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/version_all_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-exists\n      description: true if the object exists\n  \"/{broker_id}/{target_id}/is_init\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/version_all_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-is_init\n      description: boolean if the result is initialized\n  \"/{broker_id}/{target_id}/state\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/version_all_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-state\n      description: current state of the object\n  \"/{broker_id}/{target_id}/global_state\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/global_state_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-global_state\n      description: The state of all the components from the components\n  \"/{broker_id}/{target_id}/publications\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Publication.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-publications\n      description: current publications defined on an object\n  \"/{broker_id}/{target_id}/subscriptions\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/inputs_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-subscriptions\n      description: current subscriptions of a federate\n  \"/{broker_id}/{target_id}/inputs\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/inputs_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-inputs\n      description: current inputs defined by an object\n  \"/{broker_id}/{target_id}/endpoints\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/endpoints_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-endpoints\n      description: current endpoints defined by an object\n  \"/{broker_id}/{target_id}/translators\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/version_all_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-translators\n      description: current translators defined by an object\n  \"/{broker_id}/{target_id}/filters\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Filter.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-filters\n      description: current filters of the object\n  \"/{broker_id}/{target_id}/dependencies\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/dependencies_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-dependencies\n      description: structure containing dependency information\n  \"/{broker_id}/{target_id}/dependents\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/dependents_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-dependents\n      description: list of dependent objects\n  \"/{broker_id}/{target_id}/current_time\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/current_time_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-current_Time\n      description: if a time is computed locally that time sequence is returned\n  \"/{broker_id}/{target_id}/endpoint_filters\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/endpoints_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-endpoint_filters\n      description: data structure containing the filters on endpoints for the core\n  \"/{broker_id}/{target_id}/dependency_graph\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/dependencies_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-dependency_graph\n      description: a representation of the dependencies in the core and its federates\n  \"/{broker_id}/{target_id}/data_flow_graph\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/data_flow_graph_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-data_flow_graph\n      description: a representation of the data connections from all interfaces in an object\n  \"/{broker_id}/{target_id}/queries\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/queries_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-queries\n      description: list of dependent objects\n  \"/{broker_id}/{target_id}/tags\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/tag.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-tags\n      description: a JSON structure with the tags and values\n  \"/{broker_id}/{target_id}/logs\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/logs_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-logs\n      description: any log messages stored in the log buffer\n  \"/{broker_id}/{target_id}/tag/{tag_id}\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: tag_id\n        in: path\n        required: true\n        description: the specific name of a tag\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/version_all_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-tag-tag_id\n      description: the value associated with a specific tag\n  \"/{broker_id}/{target_id}/federate_map\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/federate_map_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-federate_map\n      description: a Hierarchical map of the federates contained in a core\n  \"/{broker_id}/{target_id}/global_time_debugging\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/global_time_debugging_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-global_time_debugging\n      description: return detailed time debugging state\n  \"/{broker_id}/{target_id}/global_flush\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/global_flush_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-global_flush\n      description: a query that just flushes the current system and returns the id’s\n  \"/{broker_id}/{target_id}/dependson\":\n    parameters:\n      - schema:\n          type: string\n        name: broker_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: target_id\n        in: path\n        required: true\n    get:\n      summary: Get User Info by User ID\n      tags: []\n      responses:\n        \"200\":\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: ../models/dependson_query.yaml\n              examples: {}\n        \"404\":\n          description: target not found\n      operationId: get-dependson\n      description: list of the objects this core depends\ncomponents:\n  schemas: {}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /{broker_id}/{target_id}/publications: get: operation \"get-publications\": responses: 200: content: application/json: schema: parse schema: resolve \"../models/Publication.yaml\": find schema: external base \"../models/Publication.yaml\" is not supported"
}