{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mainflux/mainflux"
		},
		"file": {
			"name": "twins.yml",
			"size": 0,
			"path": "api/openapi/twins.yml",
			"byteSize": 10447,
			"content": "openapi: 3.0.1\ninfo:\n  title: Mainflux twins service\n  description: HTTP API for managing digital twins and their states.\n  version: '1.0.0'\n\npaths:\n  /twins:\n    post:\n      summary: Adds new twin\n      description: |\n        Adds new twin to the list of twins owned by user identified using\n        the provided access token.\n      tags:\n        - twins\n      requestBody:\n        $ref: \"#/components/requestBodies/TwinReq\"\n      responses:\n        '201':\n          $ref: \"#/components/responses/TwinCreateRes\"\n        '400':\n          description: Failed due to malformed JSON.\n        '401':\n          description: Missing or invalid access token provided.\n        '415':\n          description: Missing or invalid content type.\n        '500':\n          $ref: '#/components/responses/ServiceError'\n\n    get:\n      summary: Retrieves twins\n      description: |\n        Retrieves a list of twins. Due to performance concerns, data\n        is retrieved in subsets.\n      tags:\n        - twins\n      parameters:\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Name'\n        - $ref: '#/components/parameters/Metadata'\n      responses:\n        '200':\n          $ref: '#/components/responses/TwinsPageRes'\n        '400':\n          description: Failed due to malformed query parameters.\n        '401':\n          description: Missing or invalid access token provided.\n        '500':\n          $ref: '#/components/responses/ServiceError'\n\n  /twins/{twinID}:\n    get:\n      summary: Retrieves twin info\n      tags:\n        - twins\n      parameters:\n        - $ref: '#/components/parameters/TwinID'\n      responses:\n        '200':\n          $ref: '#/components/responses/TwinRes'\n        '400':\n          description: Failed due to malformed twin's ID.\n        '401':\n          description: Missing or invalid access token provided.\n        '404':\n          description: Twin does not exist.\n        '500':\n          $ref: '#/components/responses/ServiceError'\n    put:\n      summary: Updates twin info\n      description: |\n        Update is performed by replacing the current resource data with values\n        provided in a request payload. Note that the twin's ID cannot be changed.\n      tags:\n        - twins\n      parameters:\n        - $ref: '#/components/parameters/TwinID'\n      requestBody:\n        $ref: '#/components/requestBodies/TwinReq'\n      responses:\n        '200':\n          description: Twin updated.\n        '400':\n          description: Failed due to malformed twin's ID or malformed JSON.\n        '401':\n          description: Missing or invalid access token provided.\n        '404':\n          description: Twin does not exist.\n        '415':\n          description: Missing or invalid content type.\n        '500':\n          $ref: '#/components/responses/ServiceError'\n    delete:\n      summary: Removes a twin\n      description: Removes a twin.\n      tags:\n        - twins\n      parameters:\n        - $ref: '#/components/parameters/TwinID'\n      responses:\n        '204':\n          description: Twin removed.\n        '400':\n          description: Failed due to malformed twin's ID.\n        '401':\n          description: Missing or invalid access token provided\n        '404':\n          description: Twin does not exist.\n        '500':\n          $ref: '#/components/responses/ServiceError'\n\n  /states/{twinID}:\n    get:\n      summary: Retrieves states of twin with id twinID\n      description: |\n        Retrieves a list of states. Due to performance concerns, data\n        is retrieved in subsets.\n      tags:\n        - states\n      parameters:\n        - $ref: '#/components/parameters/TwinID'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/Offset'\n      responses:\n        '200':\n          $ref: '#/components/responses/StatesPageRes'\n        '400':\n          description: Failed due to malformed query parameters.\n        '401':\n          description: Missing or invalid access token provided.\n        '404':\n          description: Twin does not exist.\n        '500':\n          $ref: '#/components/responses/ServiceError'\n  /health:\n    get:\n      summary: Retrieves service health check info.\n      tags:\n        - health\n      responses:\n        '200':\n          $ref: \"#/components/responses/HealthRes\"\n        '500':\n          $ref: \"#/components/responses/ServiceError\"\n\ncomponents:\n  parameters:\n    Limit:\n      name: limit\n      description: Size of the subset to retrieve.\n      in: query\n      schema:\n        type: integer\n        default: 10\n        maximum: 100\n        minimum: 1\n      required: false\n    Offset:\n      name: offset\n      description: Number of items to skip during retrieval.\n      in: query\n      schema:\n        type: integer\n        default: 0\n        minimum: 0\n      required: false\n    Name:\n      name: name\n      description: Twin name\n      in: query\n      schema:\n        type: string\n      required: false\n    Metadata:\n      name: metadata\n      description: |\n        Metadata filter. Filtering is performed matching the parameter with\n        metadata on top level. Parameter is json.\n      in: query\n      schema:\n        type: string\n        minimum: 0\n      required: false\n    TwinID:\n      name: twinID\n      description: Unique twin identifier.\n      in: path\n      schema:\n        type: string\n        format: uuid\n        minimum: 1\n      required: true\n\n  schemas:\n    Attribute:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the attribute.\n        channel:\n          type: string\n          description: Mainflux channel used by attribute.\n        subtopic:\n          type: string\n          description: Subtopic used by attribute.\n        persist_state:\n          type: boolean\n          description: Trigger state creation based on the attribute.\n    Definition:\n      type: object\n      properties:\n        delta:\n          type: number\n          description: Minimal time delay before new state creation.\n        attributes:\n          type: array\n          minItems: 0\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/Attribute'\n    TwinReqObj:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Free-form twin name.\n        metadata:\n          type: object\n          description: Arbitrary, object-encoded twin's data.\n        definition:\n          $ref: '#/components/schemas/Definition'\n    TwinResObj:\n      type: object\n      properties:\n        owner:\n          type: string\n          description: Email address of Mainflux user that owns twin.\n        id:\n          type: string\n          format: uuid\n          description: Unique twin identifier generated by the service.\n        name:\n          type: string\n          description: Free-form twin name.\n        revision:\n          type: number\n          description: Oridnal revision number of twin.\n        created:\n          type: string\n          format: date\n          description: Twin creation date and time.\n        updated:\n          type: string\n          format: date\n          description: Twin update date and time.\n        definitions:\n          type: array\n          minItems: 0\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/Definition'\n        metadata:\n          type: object\n          description: Arbitrary, object-encoded twin's data.\n    TwinsPage:\n      type: object\n      properties:\n        twins:\n          type: array\n          minItems: 0\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/TwinResObj'\n        total:\n          type: integer\n          description: Total number of items.\n        offset:\n          type: integer\n          description: Number of items to skip during retrieval.\n        limit:\n          type: integer\n          description: Maximum number of items to return in one page.\n      required:\n        - twins\n    State:\n      type: object\n      properties:\n        twin_id:\n          type: string\n          format: uuid\n          description: ID of twin state belongs to.\n        id:\n          type: number\n          description: State position in a time row of states.\n        created:\n          type: string\n          format: date\n          description: State creation date.\n        payload:\n          type: object\n          description: Object-encoded states's payload.\n    StatesPage:\n      type: object\n      properties:\n        twins:\n          type: array\n          minItems: 0\n          uniqueItems: true\n          items:\n            $ref: '#/components/schemas/State'\n        total:\n          type: integer\n          description: Total number of items.\n        offset:\n          type: integer\n          description: Number of items to skip during retrieval.\n        limit:\n          type: integer\n          description: Maximum number of items to return in one page.\n      required:\n        - twins\n\n  requestBodies:\n    TwinReq:\n      description: JSON-formatted document describing the twin to create or update.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TwinReqObj'\n      required: true\n\n  responses:\n    TwinCreateRes:\n      description: Created twin's relative URL (i.e. /twins/{twinID}).\n      headers:\n        Location:\n          content:\n            text/plain:\n              schema:\n                type: string\n    TwinRes:\n      description: Data retrieved.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TwinResObj'\n    TwinsPageRes:\n      description: Data retrieved.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TwinsPage'\n    StatesPageRes:\n      description: Data retrieved.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StatesPage'\n    ServiceError:\n      description: Unexpected server-side error occurred.\n    HealthRes:\n      description: Service Health Check.\n      content:\n        application/json:\n          schema:\n            $ref: \"./schemas/HealthInfo.yml\"\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      description: |\n        * Users access: \"Authorization: Bearer \u003cuser_token\u003e\"\n\nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/mainflux/mainflux@8a4cc12cd3a8afe597e7651a2efc29d3cf7be823/-/blob/api/openapi/twins.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mainflux/mainflux/blob/8a4cc12cd3a8afe597e7651a2efc29d3cf7be823/api/openapi/twins.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"HealthRes\": content: application/json: schema: parse schema: at 1:1139: external \"./schemas/HealthInfo.yml\": get: file: local file reference is not allowed"
}