{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sys-001/telegram-bot-api-versions"
		},
		"file": {
			"name": "v182.yaml",
			"size": 0,
			"path": "files/openapi/yaml/v182.yaml",
			"byteSize": 107251,
			"content": "openapi: 3.0.0\ninfo:\n    title: 'Telegram Bot API'\n    description: 'Auto-generated OpenAPI schema by TGScraper.'\n    version: 1.8.2\nservers:\n    -\n        url: 'https://api.telegram.org/bot{token}'\n        variables:\n            token:\n                default: '1234:AAbbcc'\n                description: \"Bot's unique authentication token, given by @BotFather.\"\nexternalDocs:\n    description: 'Official Telegram Bot API documentation.'\n    url: 'https://core.telegram.org/bots/api'\ncomponents:\n    responses:\n        BadRequest:\n            description: 'Bad request, you have provided malformed data.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        Unauthorized:\n            description: 'The authorization token is invalid or it has been revoked.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        Forbidden:\n            description: 'This action is forbidden.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        NotFound:\n            description: 'The specified resource was not found.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        Conflict:\n            description: 'There is a conflict with another instance using webhook or polling.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        TooManyRequests:\n            description: \"You're doing too many requests, retry after a while.\"\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        ServerError:\n            description: 'The bot API is experiencing some issues, try again later.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        UnknownError:\n            description: 'An unknown error occurred.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n    schemas:\n        Response:\n            type: object\n            description: 'Represents the default response object.'\n            required:\n                - ok\n            properties:\n                ok:\n                    type: boolean\n        Success:\n            description: 'Request was successful, the result is returned.'\n            allOf:\n                -\n                    $ref: '#/components/schemas/Response'\n                -\n                    type: object\n                    required:\n                        - result\n                    properties:\n                        result:\n                            type: object\n        Error:\n            description: 'Request was unsuccessful, so an error occurred.'\n            allOf:\n                -\n                    $ref: '#/components/schemas/Response'\n                -\n                    type: object\n                    required:\n                        - error_code\n                        - description\n                    properties:\n                        error_code:\n                            type: integer\n                        description:\n                            type: string\n                        parameters:\n                            $ref: '#/components/schemas/ResponseParameters'\n        Update:\n            description: 'This object represents an incoming update.Only one of the optional parameters can be present in any given update.'\n            required:\n                - Field\n                - update_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                update_id:\n                    type: integer\n                message:\n                    $ref: '#/components/schemas/Message'\n                inline_query:\n                    $ref: '#/components/schemas/InlineQuery'\n                chosen_inline_result:\n                    $ref: '#/components/schemas/ChosenInlineResult'\n            type: object\n        User:\n            description: 'This object represents a Telegram user or bot.'\n            required:\n                - Field\n                - id\n                - first_name\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: integer\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n                username:\n                    type: string\n            type: object\n        Chat:\n            description: 'This object represents a chat.'\n            required:\n                - Field\n                - id\n                - type\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: integer\n                type:\n                    type: string\n                title:\n                    type: string\n                username:\n                    type: string\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n            type: object\n        Message:\n            description: 'This object represents a message.'\n            required:\n                - Field\n                - message_id\n                - date\n                - chat\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                message_id:\n                    type: integer\n                from:\n                    $ref: '#/components/schemas/User'\n                date:\n                    type: integer\n                chat:\n                    $ref: '#/components/schemas/Chat'\n                forward_from:\n                    $ref: '#/components/schemas/User'\n                forward_date:\n                    type: integer\n                reply_to_message:\n                    $ref: '#/components/schemas/Message'\n                text:\n                    type: string\n                audio:\n                    $ref: '#/components/schemas/Audio'\n                document:\n                    $ref: '#/components/schemas/Document'\n                photo:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PhotoSize'\n                sticker:\n                    $ref: '#/components/schemas/Sticker'\n                video:\n                    $ref: '#/components/schemas/Video'\n                voice:\n                    $ref: '#/components/schemas/Voice'\n                caption:\n                    type: string\n                contact:\n                    $ref: '#/components/schemas/Contact'\n                location:\n                    $ref: '#/components/schemas/Location'\n                new_chat_participant:\n                    $ref: '#/components/schemas/User'\n                left_chat_participant:\n                    $ref: '#/components/schemas/User'\n                new_chat_title:\n                    type: string\n                new_chat_photo:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PhotoSize'\n                delete_chat_photo:\n                    type: boolean\n                    default: true\n                group_chat_created:\n                    type: boolean\n                    default: true\n                supergroup_chat_created:\n                    type: boolean\n                    default: true\n                channel_chat_created:\n                    type: boolean\n                    default: true\n                migrate_to_chat_id:\n                    type: integer\n                migrate_from_chat_id:\n                    type: integer\n            type: object\n        PhotoSize:\n            description: 'This object represents one size of a photo or a file / sticker thumbnail.'\n            required:\n                - Field\n                - file_id\n                - width\n                - height\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                file_size:\n                    type: integer\n            type: object\n        Audio:\n            description: 'This object represents an audio file to be treated as music by the Telegram clients.'\n            required:\n                - Field\n                - file_id\n                - duration\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                duration:\n                    type: integer\n                performer:\n                    type: string\n                title:\n                    type: string\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n            type: object\n        Document:\n            description: 'This object represents a general file (as opposed to photos, voice messages and audio files).'\n            required:\n                - Field\n                - file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n                file_name:\n                    type: string\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n            type: object\n        Sticker:\n            description: 'This object represents a sticker.'\n            required:\n                - Field\n                - file_id\n                - width\n                - height\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n                file_size:\n                    type: integer\n            type: object\n        Video:\n            description: 'This object represents a video file.'\n            required:\n                - Field\n                - file_id\n                - width\n                - height\n                - duration\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                duration:\n                    type: integer\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n            type: object\n        Voice:\n            description: 'This object represents a voice note.'\n            required:\n                - Field\n                - file_id\n                - duration\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                duration:\n                    type: integer\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n            type: object\n        Contact:\n            description: 'This object represents a phone contact.'\n            required:\n                - Field\n                - phone_number\n                - first_name\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                phone_number:\n                    type: string\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n                user_id:\n                    type: integer\n            type: object\n        Location:\n            description: 'This object represents a point on the map.'\n            required:\n                - Field\n                - longitude\n                - latitude\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                longitude:\n                    type: number\n                latitude:\n                    type: number\n            type: object\n        UserProfilePhotos:\n            description: \"This object represent a user's profile pictures.\"\n            required:\n                - Field\n                - total_count\n                - photos\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                total_count:\n                    type: integer\n                photos:\n                    type: array\n                    items:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/PhotoSize'\n            type: object\n        File:\n            description: 'This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot\u003ctoken\u003e/\u003cfile_path\u003e. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile.'\n            required:\n                - Field\n                - file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                file_size:\n                    type: integer\n                file_path:\n                    type: string\n            type: object\n        ReplyKeyboardMarkup:\n            description: 'This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).'\n            required:\n                - Field\n                - keyboard\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                keyboard:\n                    type: array\n                    items:\n                        type: array\n                        items:\n                            type: string\n                resize_keyboard:\n                    type: boolean\n                one_time_keyboard:\n                    type: boolean\n                selective:\n                    type: boolean\n            type: object\n        ReplyKeyboardHide:\n            description: 'Upon receiving a message with this object, Telegram clients will hide the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).'\n            required:\n                - Field\n                - hide_keyboard\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                hide_keyboard:\n                    type: boolean\n                    default: true\n                selective:\n                    type: boolean\n            type: object\n        ForceReply:\n            description: \"Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot‘s message and tapped ’Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode.\"\n            required:\n                - Field\n                - force_reply\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                force_reply:\n                    type: boolean\n                    default: true\n                selective:\n                    type: boolean\n            type: object\n        InputFile:\n            description: 'This object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.'\n            type: object\n        InlineQuery:\n            description: 'This object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.'\n            required:\n                - Field\n                - id\n                - from\n                - query\n                - offset\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: string\n                from:\n                    $ref: '#/components/schemas/User'\n                query:\n                    type: string\n                offset:\n                    type: string\n            type: object\n        InlineQueryResult:\n            description: 'This object represents one result of an inline query. Telegram clients currently support results of the following 5 types:'\n            anyOf:\n                -\n                    $ref: '#/components/schemas/InlineQueryResultArticle'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultPhoto'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultGif'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultMpeg4Gif'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultVideo'\n        InlineQueryResultArticle:\n            description: 'Represents a link to an article or web page.'\n            required:\n                - Field\n                - type\n                - id\n                - title\n                - message_text\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: article\n                id:\n                    type: string\n                title:\n                    type: string\n                message_text:\n                    type: string\n                parse_mode:\n                    type: string\n                disable_web_page_preview:\n                    type: boolean\n                url:\n                    type: string\n                hide_url:\n                    type: boolean\n                description:\n                    type: string\n                thumb_url:\n                    type: string\n                thumb_width:\n                    type: integer\n                thumb_height:\n                    type: integer\n            type: object\n        InlineQueryResultPhoto:\n            description: 'Represents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can provide message_text to send it instead of photo.'\n            required:\n                - Field\n                - type\n                - id\n                - photo_url\n                - thumb_url\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: photo\n                id:\n                    type: string\n                photo_url:\n                    type: string\n                photo_width:\n                    type: integer\n                photo_height:\n                    type: integer\n                thumb_url:\n                    type: string\n                title:\n                    type: string\n                description:\n                    type: string\n                caption:\n                    type: string\n                message_text:\n                    type: string\n                parse_mode:\n                    type: string\n                disable_web_page_preview:\n                    type: boolean\n            type: object\n        InlineQueryResultGif:\n            description: 'Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can provide message_text to send it instead of the animation.'\n            required:\n                - Field\n                - type\n                - id\n                - gif_url\n                - thumb_url\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: gif\n                id:\n                    type: string\n                gif_url:\n                    type: string\n                gif_width:\n                    type: integer\n                gif_height:\n                    type: integer\n                thumb_url:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                message_text:\n                    type: string\n                parse_mode:\n                    type: string\n                disable_web_page_preview:\n                    type: boolean\n            type: object\n        InlineQueryResultMpeg4Gif:\n            description: 'Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can provide message_text to send it instead of the animation.'\n            required:\n                - Field\n                - type\n                - id\n                - mpeg4_url\n                - thumb_url\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: mpeg4_gif\n                id:\n                    type: string\n                mpeg4_url:\n                    type: string\n                mpeg4_width:\n                    type: integer\n                mpeg4_height:\n                    type: integer\n                thumb_url:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                message_text:\n                    type: string\n                parse_mode:\n                    type: string\n                disable_web_page_preview:\n                    type: boolean\n            type: object\n        InlineQueryResultVideo:\n            description: 'Represents link to a page containing an embedded video player or a video file.'\n            required:\n                - Field\n                - type\n                - id\n                - video_url\n                - mime_type\n                - message_text\n                - thumb_url\n                - title\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: video\n                id:\n                    type: string\n                video_url:\n                    type: string\n                mime_type:\n                    type: string\n                message_text:\n                    type: string\n                parse_mode:\n                    type: string\n                disable_web_page_preview:\n                    type: boolean\n                video_width:\n                    type: integer\n                video_height:\n                    type: integer\n                video_duration:\n                    type: integer\n                thumb_url:\n                    type: string\n                title:\n                    type: string\n                description:\n                    type: string\n            type: object\n        ChosenInlineResult:\n            description: 'This object represents a result of an inline query that was chosen by the user and sent to their chat partner.'\n            required:\n                - Field\n                - result_id\n                - from\n                - query\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                result_id:\n                    type: string\n                from:\n                    $ref: '#/components/schemas/User'\n                query:\n                    type: string\n            type: object\npaths:\n    /getUpdates:\n        description: 'Use this method to receive incoming updates using long polling (wiki). An Array of Update objects is returned.'\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                                timeout:\n                                    type: integer\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                                timeout:\n                                    type: integer\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                                timeout:\n                                    type: integer\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: array\n                                                items:\n                                                    $ref: '#/components/schemas/Update'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setWebhook:\n        description: \"Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts.\\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. https://www.example.com/\u003ctoken\u003e. Since nobody else knows your bot‘s token, you can be pretty sure it’s us.\"\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                url:\n                                    type: string\n                                certificate:\n                                    $ref: '#/components/schemas/InputFile'\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                url:\n                                    type: string\n                                certificate:\n                                    $ref: '#/components/schemas/InputFile'\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                url:\n                                    type: string\n                                certificate:\n                                    $ref: '#/components/schemas/InputFile'\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result: {  }\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getMe:\n        description: \"A simple method for testing your bot's auth token. Requires no parameters. Returns basic information about the bot in form of a User object.\"\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                    multipart/form-data:\n                        schema:\n                            type: object\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/User'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendMessage:\n        description: 'Use this method to send text messages. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - text\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - text\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - text\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /forwardMessage:\n        description: 'Use this method to forward messages of any kind. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                from_chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - from_chat_id\n                                - message_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                from_chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - from_chat_id\n                                - message_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                from_chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - from_chat_id\n                                - message_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendPhoto:\n        description: 'Use this method to send photos. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - photo\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - photo\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - photo\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendAudio:\n        description: \"Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format. On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\\nFor backward compatibility, when the fields title and performer are both empty and the mime-type of the file to be sent is not audio/mpeg, the file will be sent as a playable voice message. For this to work, the audio must be in an .ogg file encoded with OPUS. This behavior will be phased out in the future. For sending voice messages, use the sendVoice method instead.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                audio:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                performer:\n                                    type: string\n                                title:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - audio\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                audio:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                performer:\n                                    type: string\n                                title:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - audio\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                audio:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                performer:\n                                    type: string\n                                title:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - audio\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendDocument:\n        description: 'Use this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                document:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - document\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                document:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - document\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                document:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - document\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendSticker:\n        description: 'Use this method to send .webp stickers. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - sticker\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - sticker\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - sticker\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendVideo:\n        description: 'Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                caption:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                caption:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                caption:\n                                    type: string\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendVoice:\n        description: 'Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                voice:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - voice\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                voice:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - voice\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                voice:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - voice\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendLocation:\n        description: 'Use this method to send point on the map. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardHide'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendChatAction:\n        description: \"Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status).\\nWe only recommend using this method when a response from the bot will take a noticeable amount of time to arrive.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                action:\n                                    type: string\n                            required:\n                                - chat_id\n                                - action\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                action:\n                                    type: string\n                            required:\n                                - chat_id\n                                - action\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                action:\n                                    type: string\n                            required:\n                                - chat_id\n                                - action\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result: {  }\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getUserProfilePhotos:\n        description: 'Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                            required:\n                                - user_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                            required:\n                                - user_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                            required:\n                                - user_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/UserProfilePhotos'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getFile:\n        description: 'Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a File object is returned. The file can then be downloaded via the link https://api.telegram.org/file/bot\u003ctoken\u003e/\u003cfile_path\u003e, where \u003cfile_path\u003e is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile again.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                file_id:\n                                    type: string\n                            required:\n                                - file_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                file_id:\n                                    type: string\n                            required:\n                                - file_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                file_id:\n                                    type: string\n                            required:\n                                - file_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/File'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /answerInlineQuery:\n        description: 'Use this method to send answers to an inline query. On success, True is returned.No more than 50 results per query are allowed.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                inline_query_id:\n                                    type: string\n                                results:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/InlineQueryResult'\n                                cache_time:\n                                    type: integer\n                                    default: 300\n                                is_personal:\n                                    type: boolean\n                                next_offset:\n                                    type: string\n                            required:\n                                - inline_query_id\n                                - results\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                inline_query_id:\n                                    type: string\n                                results:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/InlineQueryResult'\n                                cache_time:\n                                    type: integer\n                                    default: 300\n                                is_personal:\n                                    type: boolean\n                                next_offset:\n                                    type: string\n                            required:\n                                - inline_query_id\n                                - results\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                inline_query_id:\n                                    type: string\n                                results:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/InlineQueryResult'\n                                cache_time:\n                                    type: integer\n                                    default: 300\n                                is_personal:\n                                    type: boolean\n                                next_offset:\n                                    type: string\n                            required:\n                                - inline_query_id\n                                - results\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n",
			"canonicalURL": "/github.com/sys-001/telegram-bot-api-versions@bbe4ec9d1349cb36ce5b48f2ae56e08e1128abb1/-/blob/files/openapi/yaml/v182.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sys-001/telegram-bot-api-versions/blob/bbe4ec9d1349cb36ce5b48f2ae56e08e1128abb1/files/openapi/yaml/v182.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"User\": resolve \"#/components/schemas/User\": property \"Field\": at files/openapi/yaml/v182.yaml:129:27: $ref: resolve \"#/components/schemas/Type\": resolve: can't find value for \"components/schemas/Type\""
}