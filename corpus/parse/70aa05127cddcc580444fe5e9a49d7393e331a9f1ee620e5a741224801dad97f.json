{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zchee/spinctl"
		},
		"file": {
			"name": "gate-1.12.1.yaml",
			"size": 0,
			"path": "api/openapi-spec/gate-1.12.1.yaml",
			"byteSize": 143931,
			"content": "openapi: 3.0.0\ninfo:\n  title: Spinnaker API\n  contact:\n    {}\n  version: \"\"\ntags:\n  - name: task-controller\n    description: Task Controller\n  - name: amazon-infrastructure-controller\n    description: Amazon Infrastructure Controller\n  - name: v-2-canary-controller\n    description: V 2 Canary Controller\n  - name: project-controller\n    description: Project Controller\n  - name: auth-controller\n    description: Auth Controller\n  - name: search-controller\n    description: Search Controller\n  - name: v-2-canary-config-controller\n    description: V 2 Canary Config Controller\n  - name: v-2-pipeline-templates-controller\n    description: V 2 Pipeline Templates Controller\n  - name: pipeline-controller\n    description: Pipeline Controller\n  - name: load-balancer-controller\n    description: Load Balancer Controller\n  - name: credentials-controller\n    description: Credentials Controller\n  - name: pipeline-templates-controller\n    description: Pipeline Templates Controller\n  - name: security-group-controller\n    description: Security Group Controller\n  - name: image-controller\n    description: Image Controller\n  - name: pubsub-subscription-controller\n    description: Pubsub Subscription Controller\n  - name: ecs-server-group-events-controller\n    description: Ecs Server Group Events Controller\n  - name: version-controller\n    description: Version Controller\n  - name: application-controller\n    description: Application Controller\n  - name: instance-controller\n    description: Instance Controller\n  - name: audit-events-mvc-endpoint\n    description: Audit Events Mvc Endpoint\n  - name: pipeline-config-controller\n    description: Pipeline Config Controller\n  - name: server-group-controller\n    description: Server Group Controller\n  - name: network-controller\n    description: Network Controller\n  - name: snapshot-controller\n    description: Snapshot Controller\n  - name: webhook-controller\n    description: Webhook Controller\n  - name: subnet-controller\n    description: Subnet Controller\n  - name: artifact-controller\n    description: Artifact Controller\n  - name: executions-controller\n    description: Executions Controller\n  - name: server-group-manager-controller\n    description: Server Group Manager Controller\n  - name: build-controller\n    description: Build Controller\n  - name: bake-controller\n    description: Bake Controller\n  - name: cluster-controller\n    description: Cluster Controller\n  - name: firewall-controller\n    description: Firewall Controller\n  - name: job-controller\n    description: Job Controller\npaths:\n  /applications:\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve a list of applications\n      operationId: getAllApplicationsUsingGET\n      parameters:\n        - name: account\n          in: query\n          description: filters results to only include applications deployed in the\n            specified account\n          required: false\n          schema:\n            type: string\n        - name: owner\n          in: query\n          description: filteres results to only include applications owned by the specified\n            email\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{applicationName}/jobs\":\n    get:\n      tags:\n        - job-controller\n      summary: Get jobs\n      operationId: getJobsUsingGET\n      parameters:\n        - name: applicationName\n          in: path\n          description: applicationName\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: expand\n          required: false\n          schema:\n            type: string\n            default: \"false\"\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{applicationName}/jobs/{account}/{region}/{name}\":\n    get:\n      tags:\n        - job-controller\n      summary: Get job\n      operationId: getJobUsingGET\n      parameters:\n        - name: applicationName\n          in: path\n          description: applicationName\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: name\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: expand\n          required: false\n          schema:\n            type: string\n            default: \"false\"\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{applicationName}/serverGroups\":\n    get:\n      tags:\n        - server-group-controller\n      summary: Retrieve a list of server groups for a given application\n      operationId: getServerGroupsForApplicationUsingGET\n      parameters:\n        - name: applicationName\n          in: path\n          description: applicationName\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: expand\n          required: false\n          schema:\n            type: string\n            default: \"false\"\n        - name: cloudProvider\n          in: query\n          description: cloudProvider\n          required: false\n          schema:\n            type: string\n        - name: clusters\n          in: query\n          description: clusters\n          required: false\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{applicationName}/serverGroups/{account}/{region}/{serverGroupName}\":\n    get:\n      tags:\n        - server-group-controller\n      summary: Retrieve a server group's details\n      operationId: getServerGroupDetailsUsingGET\n      parameters:\n        - name: applicationName\n          in: path\n          description: applicationName\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: serverGroupName\n          in: path\n          description: serverGroupName\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n        - name: includeDetails\n          in: query\n          description: includeDetails\n          required: false\n          schema:\n            type: string\n            default: \"true\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}\":\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve an application's details\n      operationId: getApplicationUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: expand\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/clusters\":\n    get:\n      tags:\n        - cluster-controller\n      summary: Retrieve a list of cluster names for an application, grouped by account\n      operationId: getClustersUsingGET_2\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/clusters/{account}\":\n    get:\n      tags:\n        - cluster-controller\n      summary: Retrieve a list of clusters for an account\n      operationId: getClustersUsingGET_1\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/clusters/{account}/{clusterName}\":\n    get:\n      tags:\n        - cluster-controller\n      summary: Retrieve a cluster's details\n      operationId: getClustersUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: clusterName\n          in: path\n          description: clusterName\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/clusters/{account}/{clusterName}/serverGroups\":\n    get:\n      tags:\n        - cluster-controller\n      summary: Retrieve a list of server groups for a cluster\n      operationId: getServerGroupsUsingGET_1\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: clusterName\n          in: path\n          description: clusterName\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}\":\n    get:\n      tags:\n        - cluster-controller\n      summary: Retrieve a server group's details\n      operationId: getServerGroupsUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: clusterName\n          in: path\n          description: clusterName\n          required: true\n          schema:\n            type: string\n        - name: serverGroupName\n          in: path\n          description: serverGroupName\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}/scalingActivities\":\n    get:\n      tags:\n        - cluster-controller\n      summary: Retrieve a list of scaling activities for a server group\n      operationId: getScalingActivitiesUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: clusterName\n          in: path\n          description: clusterName\n          required: true\n          schema:\n            type: string\n        - name: serverGroupName\n          in: path\n          description: serverGroupName\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: region\n          in: query\n          description: region\n          required: false\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/clusters/{account}/{clusterName}/{cloudProvider}/{scope}/serverGroups/target/{target}\":\n    get:\n      tags:\n        - cluster-controller\n      summary: Retrieve a server group that matches a target coordinate (e.g., newest,\n        ancestor) relative to a cluster\n      description: \"`scope` is either a zone or a region\"\n      operationId: getTargetServerGroupUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: clusterName\n          in: path\n          description: clusterName\n          required: true\n          schema:\n            type: string\n        - name: cloudProvider\n          in: path\n          description: cloudProvider\n          required: true\n          schema:\n            type: string\n        - name: scope\n          in: path\n          description: scope\n          required: true\n          schema:\n            type: string\n        - name: target\n          in: path\n          description: target\n          required: true\n          schema:\n            type: string\n        - name: onlyEnabled\n          in: query\n          description: onlyEnabled\n          required: false\n          schema:\n            type: boolean\n        - name: validateOldest\n          in: query\n          description: validateOldest\n          required: false\n          schema:\n            type: boolean\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/clusters/{account}/{clusterName}/{type}/loadBalancers\":\n    get:\n      tags:\n        - cluster-controller\n      summary: Retrieve a cluster's loadbalancers\n      operationId: getClusterLoadBalancersUsingGET\n      parameters:\n        - name: applicationName\n          in: path\n          description: applicationName\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: clusterName\n          in: path\n          description: clusterName\n          required: true\n          schema:\n            type: string\n        - name: type\n          in: path\n          description: type\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/executions/search\":\n    get:\n      tags:\n        - executions-controller\n      summary: Search for pipeline executions using a combination of criteria. The\n        returned list is sorted by buildTime (trigger time) in reverse order so\n        that newer executions are first in the list.\n      operationId: searchForPipelineExecutionsByTriggerUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: Only includes executions that are part of this application. If this\n            value is \"*\", results will include executions of all applications.\n          required: true\n          schema:\n            type: string\n        - name: triggerTypes\n          in: query\n          description: Only includes executions that were triggered by a trigger with a\n            type that is equal to a type provided in this field. The list of\n            trigger types should be a comma-delimited string. If this value is\n            missing, results will includes executions of all trigger types.\n          required: false\n          schema:\n            type: string\n        - name: pipelineName\n          in: query\n          description: Only includes executions that with this pipeline name.\n          required: false\n          schema:\n            type: string\n        - name: eventId\n          in: query\n          description: Only includes executions that were triggered by a trigger with this\n            eventId.\n          required: false\n          schema:\n            type: string\n        - name: trigger\n          in: query\n          description: \u003e-\n            Only includes executions that were triggered by a trigger that\n            matches the subset of fields provided by this value. This value\n            should be a base64-encoded string of a JSON representation of a\n            trigger object. The comparison succeeds if the execution trigger\n            contains all the fields of the input trigger, the fields are of the\n            same type, and each value of the field \"matches\". The term \"matches\"\n            is specific for each field's type:\n\n            - For Strings: A String value in the execution's trigger matches the input trigger's String value if the former equals the latter (case-insensitive) OR if the former matches the latter as a regular expression.\n\n            - For Maps: A Map value in the execution's trigger matches the input trigger's Map value if the former contains all keys of the latter and their values match.\n\n            - For Collections: A Collection value in the execution's trigger matches the input trigger's Collection value if the former has a unique element that matches each element of the latter.\n\n            - Every other value is compared using the Java \"equals\" method (Groovy \"==\" operator)\n          required: false\n          schema:\n            type: string\n        - name: triggerTimeStartBoundary\n          in: query\n          description: Only includes executions that were built at or after the given time,\n            represented as a Unix timestamp in ms (UTC). This value must be \u003e= 0\n            and \u003c= the value of [triggerTimeEndBoundary], if provided. If this\n            value is missing, it is defaulted to 0.\n          required: false\n          schema:\n            type: integer\n            format: int64\n            default: 0\n        - name: triggerTimeEndBoundary\n          in: query\n          description: Only includes executions that were built at or before the given\n            time, represented as a Unix timestamp in ms (UTC). This value must\n            be \u003c= 9223372036854775807 (Long.MAX_VALUE) and \u003e= the value of\n            [triggerTimeStartBoundary], if provided. If this value is missing,\n            it is defaulted to 9223372036854775807.\n          required: false\n          schema:\n            type: integer\n            format: int64\n            default: 9223372036854776000\n        - name: statuses\n          in: query\n          description: \"Only includes executions with a status that is equal to a status\n            provided in this field. The list of statuses should be given as a\n            comma-delimited string. If this value is missing, includes\n            executions of all statuses. Allowed statuses are: NOT_STARTED,\n            RUNNING, PAUSED, SUSPENDED, SUCCEEDED, FAILED_CONTINUE, TERMINAL,\n            CANCELED, REDIRECT, STOPPED, SKIPPED, BUFFERED.\"\n          required: false\n          schema:\n            type: string\n        - name: startIndex\n          in: query\n          description: Sets the first item of the resulting list for pagination. The list\n            is 0-indexed. This value must be \u003e= 0. If this value is missing, it\n            is defaulted to 0.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: size\n          in: query\n          description: Sets the size of the resulting list for pagination. This value must\n            be \u003e 0. If this value is missing, it is defaulted to 10.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 10\n        - name: reverse\n          in: query\n          description: Reverses the resulting list before it is paginated. If this value is\n            missing, it is defaulted to false.\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: expand\n          in: query\n          description: Expands each execution object in the resulting list. If this value\n            is missing, it is defaulted to false.\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/history\":\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve a list of an application's configuration revision history\n      operationId: getApplicationHistoryUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/loadBalancers\":\n    get:\n      tags:\n        - load-balancer-controller\n      summary: Retrieve a list of load balancers for a given application\n      operationId: getApplicationLoadBalancersUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/pipelineConfigs\":\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve a list of an application's pipeline configurations\n      operationId: getPipelineConfigsForApplicationUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/pipelineConfigs/{pipelineName}\":\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve a pipeline configuration\n      operationId: getPipelineConfigUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: pipelineName\n          in: path\n          description: pipelineName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    post:\n      tags:\n        - application-controller\n      summary: Invoke pipeline config\n      operationId: invokePipelineConfigUsingPOST\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: pipelineName\n          in: path\n          description: pipelineName\n          required: true\n          schema:\n            type: string\n        - name: user\n          in: query\n          description: user\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/invokePipelineConfigUsingPOSTTrigger\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/HttpEntity\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      deprecated: true\n  \"/applications/{application}/pipelines\":\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve a list of an application's pipeline executions\n      operationId: getPipelinesUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: statuses\n          in: query\n          description: statuses\n          required: false\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: expand\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/pipelines/{id}/cancel\":\n    put:\n      tags:\n        - application-controller\n      summary: Cancel pipeline\n      operationId: cancelPipelineUsingPUT\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: reason\n          in: query\n          description: reason\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      deprecated: true\n  \"/applications/{application}/serverGroupManagers\":\n    get:\n      tags:\n        - server-group-manager-controller\n      summary: Retrieve a list of server group managers for an application\n      operationId: getServerGroupManagersForApplicationUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/serverGroups/{account}/{serverGroupName}/events\":\n    get:\n      tags:\n        - ecs-server-group-events-controller\n      summary: Retrieves a list of events for a server group\n      operationId: getEventsUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: serverGroupName\n          in: path\n          description: serverGroupName\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: query\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/snapshots/{account}\":\n    get:\n      tags:\n        - snapshot-controller\n      summary: Get current snapshot\n      operationId: getCurrentSnapshotUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/snapshots/{account}/history\":\n    get:\n      tags:\n        - snapshot-controller\n      summary: Get snapshot history\n      operationId: getSnapshotHistoryUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/strategyConfigs\":\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve a list of an application's pipeline strategy configurations\n      operationId: getStrategyConfigsForApplicationUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/strategyConfigs/{strategyName}\":\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve a pipeline strategy configuration\n      operationId: getStrategyConfigUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: strategyName\n          in: path\n          description: strategyName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/applications/{application}/tasks\":\n    get:\n      tags:\n        - application-controller\n      summary: Retrieve a list of an application's tasks\n      operationId: getTasksUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: limit\n          in: query\n          description: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: statuses\n          in: query\n          description: statuses\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    post:\n      tags:\n        - application-controller\n      summary: Create task\n      operationId: taskUsingPOST\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/taskUsingPOSTMap\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      deprecated: true\n  \"/applications/{application}/tasks/{id}\":\n    get:\n      tags:\n        - application-controller\n      summary: Get task\n      operationId: getTaskUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      deprecated: true\n  \"/applications/{application}/tasks/{id}/cancel\":\n    put:\n      tags:\n        - application-controller\n      summary: Cancel task\n      operationId: cancelTaskUsingPUT\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      deprecated: true\n  \"/applications/{application}/tasks/{id}/details/{taskDetailsId}\":\n    get:\n      tags:\n        - application-controller\n      summary: Get task details\n      operationId: getTaskDetailsUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: taskDetailsId\n          in: path\n          description: taskDetailsId\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      deprecated: true\n  \"/artifacts/account/{accountName}/versions\":\n    get:\n      tags:\n        - artifact-controller\n      summary: Retrieve the list of artifact versions by account and artifact names\n      operationId: artifactVersionsUsingGET\n      parameters:\n        - name: accountName\n          in: path\n          description: accountName\n          required: true\n          schema:\n            type: string\n        - name: type\n          in: query\n          description: type\n          required: true\n          schema:\n            type: string\n        - name: artifactName\n          in: query\n          description: artifactName\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /artifacts/credentials:\n    get:\n      tags:\n        - artifact-controller\n      summary: Retrieve the list of artifact accounts configured in Clouddriver.\n      operationId: allUsingGET\n      parameters:\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /auditevents:\n    get:\n      tags:\n        - audit-events-mvc-endpoint\n      summary: findByPrincipalAndAfterAndType\n      operationId: findByPrincipalAndAfterAndTypeUsingGET\n      parameters:\n        - name: principal\n          in: query\n          description: principal\n          required: false\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: after\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: type\n          in: query\n          description: type\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.spring-boot.actuator.v1+json:\n              schema:\n                type: object\n            application/json:\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /auditevents.json:\n    get:\n      tags:\n        - audit-events-mvc-endpoint\n      summary: findByPrincipalAndAfterAndType\n      operationId: findByPrincipalAndAfterAndTypeUsingGET_1\n      parameters:\n        - name: principal\n          in: query\n          description: principal\n          required: false\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: after\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: type\n          in: query\n          description: type\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/vnd.spring-boot.actuator.v1+json:\n              schema:\n                type: object\n            application/json:\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /auth/loggedOut:\n    get:\n      tags:\n        - auth-controller\n      summary: Get logged out message\n      operationId: loggedOutUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /auth/redirect:\n    get:\n      tags:\n        - auth-controller\n      summary: Redirect to Deck\n      operationId: redirectUsingGET\n      parameters:\n        - name: to\n          in: query\n          description: to\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /auth/roles/sync:\n    post:\n      tags:\n        - auth-controller\n      summary: Sync user roles\n      operationId: syncUsingPOST\n      responses:\n        \"200\":\n          description: OK\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /auth/user:\n    get:\n      tags:\n        - auth-controller\n      summary: Get user\n      operationId: userUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /auth/user/serviceAccounts:\n    get:\n      tags:\n        - auth-controller\n      summary: Get service accounts\n      operationId: getServiceAccountsUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/bakery/logs/{region}/{statusId}\":\n    get:\n      tags:\n        - bake-controller\n      summary: Retrieve the logs for a given bake\n      operationId: lookupLogsUsingGET\n      parameters:\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: statusId\n          in: path\n          description: statusId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /bakery/options:\n    get:\n      tags:\n        - bake-controller\n      summary: Retrieve a list of available bakery base images, grouped by cloud\n        provider\n      operationId: bakeOptionsUsingGET_1\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/bakery/options/{cloudProvider}\":\n    get:\n      tags:\n        - bake-controller\n      summary: Retrieve a list of available bakery base images for a given cloud\n        provider\n      operationId: bakeOptionsUsingGET\n      parameters:\n        - name: cloudProvider\n          in: path\n          description: cloudProvider\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /credentials:\n    get:\n      tags:\n        - credentials-controller\n      summary: Retrieve a list of accounts\n      operationId: getAccountsUsingGET\n      parameters:\n        - name: roles\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: allowedAccounts\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: email\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: username\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: firstName\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: lastName\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: expand\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Account\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/credentials/{account}\":\n    get:\n      tags:\n        - credentials-controller\n      summary: Retrieve an account's details\n      operationId: getAccountUsingGET\n      parameters:\n        - name: roles\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: allowedAccounts\n          in: query\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: email\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: username\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: firstName\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: lastName\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/AccountDetails\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /executions:\n    get:\n      tags:\n        - executions-controller\n      summary: Retrieves an ad-hoc collection of executions based on a number of\n        user-supplied parameters. Either executionIds or pipelineConfigIds must\n        be supplied in order to return any results. If both are supplied, an\n        exception will be thrown.\n      operationId: getLatestExecutionsByConfigIdsUsingGET\n      parameters:\n        - name: pipelineConfigIds\n          in: query\n          description: A comma-separated list of pipeline configuration IDs to retrieve\n            recent executions for. Either this OR pipelineConfigIds must be\n            supplied, but not both.\n          required: false\n          schema:\n            type: string\n        - name: executionIds\n          in: query\n          description: A comma-separated list of executions to retrieve. Either this OR\n            pipelineConfigIds must be supplied, but not both.\n          required: false\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: The number of executions to return per pipeline configuration.\n            Ignored if executionIds parameter is supplied. If this value is\n            missing, it is defaulted to 1.\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: statuses\n          in: query\n          description: A comma-separated list of execution statuses to filter by. Ignored\n            if executionIds parameter is supplied. If this value is missing, it\n            is defaulted to all statuses.\n          required: false\n          schema:\n            type: string\n        - name: expand\n          in: query\n          description: Expands each execution object in the resulting list. If this value\n            is missing, it is defaulted to true.\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /firewalls:\n    get:\n      tags:\n        - firewall-controller\n      summary: Retrieve a list of firewalls, grouped by account, cloud provider, and\n        region\n      operationId: allUsingGET_1\n      parameters:\n        - name: id\n          in: query\n          description: id\n          required: false\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/firewalls/{account}\":\n    get:\n      tags:\n        - firewall-controller\n      summary: Retrieve a list of firewalls for a given account, grouped by region\n      operationId: allByAccountUsingGET\n      parameters:\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: region\n          in: query\n          description: region\n          required: false\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/firewalls/{account}/{region}/{name}\":\n    get:\n      tags:\n        - firewall-controller\n      summary: Retrieve a firewall's details\n      operationId: getSecurityGroupUsingGET\n      parameters:\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: name\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: vpcId\n          in: query\n          description: vpcId\n          required: false\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /images/find:\n    get:\n      tags:\n        - image-controller\n      summary: Retrieve a list of images, filtered by cloud provider, region, and\n        account\n      description: The query parameter `q` filters the list of images by image name\n      operationId: findImagesUsingGET\n      parameters:\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: q\n          in: query\n          description: q\n          required: false\n          schema:\n            type: string\n        - name: region\n          in: query\n          description: region\n          required: false\n          schema:\n            type: string\n        - name: account\n          in: query\n          description: account\n          required: false\n          schema:\n            type: string\n        - name: count\n          in: query\n          description: count\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /images/tags:\n    get:\n      tags:\n        - image-controller\n      summary: Find tags\n      operationId: findTagsUsingGET\n      parameters:\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: account\n          in: query\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: repository\n          in: query\n          description: repository\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/images/{account}/{region}/{imageId}\":\n    get:\n      tags:\n        - image-controller\n      summary: Get image details\n      operationId: getImageDetailsUsingGET\n      parameters:\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: imageId\n          in: path\n          description: imageId\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /instanceTypes:\n    get:\n      tags:\n        - amazon-infrastructure-controller\n      summary: Get instance types\n      operationId: instanceTypesUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/instances/{account}/{region}/{instanceId}\":\n    get:\n      tags:\n        - instance-controller\n      summary: Retrieve an instance's details\n      operationId: getInstanceDetailsUsingGET\n      parameters:\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: instanceId\n          in: path\n          description: instanceId\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/instances/{account}/{region}/{instanceId}/console\":\n    get:\n      tags:\n        - instance-controller\n      summary: Retrieve an instance's console output\n      operationId: getConsoleOutputUsingGET\n      parameters:\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: instanceId\n          in: path\n          description: instanceId\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /loadBalancers:\n    get:\n      tags:\n        - load-balancer-controller\n      summary: Retrieve a list of load balancers for a given cloud provider\n      operationId: getAllUsingGET\n      parameters:\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/loadBalancers/{account}/{region}/{name}\":\n    get:\n      tags:\n        - load-balancer-controller\n      summary: Retrieve a load balancer's details as a single element list for a given\n        account, region, cloud provider and load balancer name\n      operationId: getLoadBalancerDetailsUsingGET\n      parameters:\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: name\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/loadBalancers/{name}\":\n    get:\n      tags:\n        - load-balancer-controller\n      summary: Retrieve a load balancer for a given cloud provider\n      operationId: getLoadBalancerUsingGET\n      parameters:\n        - name: name\n          in: path\n          description: name\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /networks:\n    get:\n      tags:\n        - network-controller\n      summary: Retrieve a list of networks, grouped by cloud provider\n      operationId: allUsingGET_2\n      parameters:\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/networks/{cloudProvider}\":\n    get:\n      tags:\n        - network-controller\n      summary: Retrieve a list of networks for a given cloud provider\n      operationId: allByCloudProviderUsingGET\n      parameters:\n        - name: cloudProvider\n          in: path\n          description: cloudProvider\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /pipelineConfigs:\n    get:\n      tags:\n        - pipeline-config-controller\n      summary: Get all pipeline configs.\n      operationId: getAllPipelineConfigsUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelineConfigs/{pipelineConfigId}/convertToTemplate\":\n    get:\n      tags:\n        - pipeline-config-controller\n      summary: Convert a pipeline config to a pipeline template.\n      operationId: convertPipelineConfigToPipelineTemplateUsingGET\n      parameters:\n        - name: pipelineConfigId\n          in: path\n          description: pipelineConfigId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: string\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelineConfigs/{pipelineConfigId}/history\":\n    get:\n      tags:\n        - pipeline-config-controller\n      summary: Get pipeline config history.\n      operationId: getPipelineConfigHistoryUsingGET\n      parameters:\n        - name: pipelineConfigId\n          in: path\n          description: pipelineConfigId\n          required: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 20\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /pipelineTemplates:\n    get:\n      tags:\n        - pipeline-templates-controller\n      summary: List pipeline templates.\n      operationId: listUsingGET\n      parameters:\n        - name: scopes\n          in: query\n          description: scopes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    post:\n      tags:\n        - pipeline-templates-controller\n      summary: Create a pipeline template.\n      operationId: createUsingPOST\n      requestBody:\n        $ref: \"#/components/requestBodies/createUsingPOSTPipelinetemplate\"\n      responses:\n        \"201\":\n          description: Created\n        \"202\":\n          description: Accepted\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /pipelineTemplates/resolve:\n    get:\n      tags:\n        - pipeline-templates-controller\n      summary: Resolve a pipeline template.\n      operationId: resolveTemplatesUsingGET\n      parameters:\n        - name: source\n          in: query\n          description: source\n          required: true\n          schema:\n            type: string\n        - name: executionId\n          in: query\n          description: executionId\n          required: false\n          schema:\n            type: string\n        - name: pipelineConfigId\n          in: query\n          description: pipelineConfigId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelineTemplates/{id}\":\n    get:\n      tags:\n        - pipeline-templates-controller\n      summary: Get a pipeline template.\n      operationId: getUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    post:\n      tags:\n        - pipeline-templates-controller\n      summary: Update a pipeline template.\n      operationId: updateUsingPOST\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: skipPlanDependents\n          in: query\n          description: skipPlanDependents\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        $ref: \"#/components/requestBodies/createUsingPOSTPipelinetemplate\"\n      responses:\n        \"201\":\n          description: Created\n        \"202\":\n          description: Accepted\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    delete:\n      tags:\n        - pipeline-templates-controller\n      summary: Delete a pipeline template.\n      operationId: deleteUsingDELETE\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: application\n          in: query\n          description: application\n          required: false\n          schema:\n            type: string\n      responses:\n        \"202\":\n          description: Accepted\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n  \"/pipelineTemplates/{id}/dependents\":\n    get:\n      tags:\n        - pipeline-templates-controller\n      summary: List all pipelines that implement a pipeline template\n      operationId: listPipelineTemplateDependentsUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: recursive\n          in: query\n          description: recursive\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /pipelines:\n    post:\n      tags:\n        - pipeline-controller\n      summary: Save a pipeline definition\n      operationId: savePipelineUsingPOST\n      requestBody:\n        $ref: \"#/components/requestBodies/savePipelineUsingPOSTPipeline\"\n      responses:\n        \"200\":\n          description: OK\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /pipelines/move:\n    post:\n      tags:\n        - pipeline-controller\n      summary: Rename a pipeline definition\n      operationId: renamePipelineUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: renameCommand\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /pipelines/start:\n    post:\n      tags:\n        - pipeline-controller\n      summary: Initiate a pipeline execution\n      operationId: startUsingPOST\n      requestBody:\n        $ref: \"#/components/requestBodies/taskUsingPOSTMap\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ResponseEntity\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelines/v2/{application}/{pipelineNameOrId}\":\n    post:\n      tags:\n        - pipeline-controller\n      summary: Trigger a pipeline execution\n      operationId: invokePipelineConfigViaEchoUsingPOST\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: pipelineNameOrId\n          in: path\n          description: pipelineNameOrId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/invokePipelineConfigUsingPOSTTrigger\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/HttpEntity\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelines/{application}/{pipelineNameOrId}\":\n    post:\n      tags:\n        - pipeline-controller\n      summary: Trigger a pipeline execution\n      operationId: invokePipelineConfigUsingPOST_1\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: pipelineNameOrId\n          in: path\n          description: pipelineNameOrId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/invokePipelineConfigUsingPOSTTrigger\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/HttpEntity\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelines/{application}/{pipelineName}\":\n    delete:\n      tags:\n        - pipeline-controller\n      summary: Delete a pipeline definition\n      operationId: deletePipelineUsingDELETE\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: pipelineName\n          in: path\n          description: pipelineName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n  \"/pipelines/{id}\":\n    get:\n      tags:\n        - pipeline-controller\n      summary: Retrieve a pipeline execution\n      operationId: getPipelineUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    put:\n      tags:\n        - pipeline-controller\n      summary: Update a pipeline definition\n      operationId: updatePipelineUsingPUT\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/savePipelineUsingPOSTPipeline\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    delete:\n      tags:\n        - pipeline-controller\n      summary: Delete a pipeline execution\n      operationId: deletePipelineUsingDELETE_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n  \"/pipelines/{id}/cancel\":\n    put:\n      tags:\n        - pipeline-controller\n      summary: Cancel a pipeline execution\n      operationId: cancelPipelineUsingPUT_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: reason\n          in: query\n          description: reason\n          required: false\n          schema:\n            type: string\n        - name: force\n          in: query\n          description: force\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelines/{id}/evaluateExpression\":\n    get:\n      tags:\n        - pipeline-controller\n      summary: Evaluate a pipeline expression using the provided execution as context\n      operationId: evaluateExpressionForExecutionUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: expression\n          in: query\n          description: expression\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    head:\n      tags:\n        - pipeline-controller\n      summary: Evaluate a pipeline expression using the provided execution as context\n      operationId: evaluateExpressionForExecutionUsingHEAD\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: expression\n          in: query\n          description: expression\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n    post:\n      tags:\n        - pipeline-controller\n      summary: Evaluate a pipeline expression using the provided execution as context\n      operationId: evaluateExpressionForExecutionViaPOSTUsingPOST_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: pipelineExpression\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    put:\n      tags:\n        - pipeline-controller\n      summary: Evaluate a pipeline expression using the provided execution as context\n      operationId: evaluateExpressionForExecutionUsingPUT\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: expression\n          in: query\n          description: expression\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    delete:\n      tags:\n        - pipeline-controller\n      summary: Evaluate a pipeline expression using the provided execution as context\n      operationId: evaluateExpressionForExecutionUsingDELETE\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: expression\n          in: query\n          description: expression\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n    options:\n      tags:\n        - pipeline-controller\n      summary: Evaluate a pipeline expression using the provided execution as context\n      operationId: evaluateExpressionForExecutionUsingOPTIONS\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: expression\n          in: query\n          description: expression\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n    patch:\n      tags:\n        - pipeline-controller\n      summary: Evaluate a pipeline expression using the provided execution as context\n      operationId: evaluateExpressionForExecutionUsingPATCH\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: expression\n          in: query\n          description: expression\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n  \"/pipelines/{id}/logs\":\n    get:\n      tags:\n        - pipeline-controller\n      summary: Retrieve pipeline execution logs\n      operationId: getPipelineLogsUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelines/{id}/pause\":\n    put:\n      tags:\n        - pipeline-controller\n      summary: Pause a pipeline execution\n      operationId: pausePipelineUsingPUT\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelines/{id}/resume\":\n    put:\n      tags:\n        - pipeline-controller\n      summary: Resume a pipeline execution\n      operationId: resumePipelineUsingPUT\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/pipelines/{id}/stages/{stageId}\":\n    patch:\n      tags:\n        - pipeline-controller\n      summary: Update a stage execution\n      operationId: updateStageUsingPATCH\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: stageId\n          in: path\n          description: stageId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/updateStageUsingPATCHContext\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n  \"/pipelines/{id}/stages/{stageId}/restart\":\n    put:\n      tags:\n        - pipeline-controller\n      summary: Restart a stage execution\n      operationId: restartStageUsingPUT\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: stageId\n          in: path\n          description: stageId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/updateStageUsingPATCHContext\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /projects:\n    get:\n      tags:\n        - project-controller\n      summary: Get all projects\n      operationId: allUsingGET_3\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/projects/{id}\":\n    get:\n      tags:\n        - project-controller\n      summary: Get a project\n      operationId: getUsingGET_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/projects/{id}/clusters\":\n    get:\n      tags:\n        - project-controller\n      summary: Get a project's clusters\n      operationId: getClustersUsingGET_3\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/projects/{id}/pipelines\":\n    get:\n      tags:\n        - project-controller\n      summary: Get all pipelines for project\n      operationId: allPipelinesForProjectUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 5\n        - name: statuses\n          in: query\n          description: statuses\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /pubsub/subscriptions:\n    get:\n      tags:\n        - pubsub-subscription-controller\n      summary: Retrieve the list of pub/sub subscriptions configured in Echo.\n      operationId: allUsingGET_4\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Map_string_string_\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /search:\n    get:\n      tags:\n        - search-controller\n      summary: Search infrastructure\n      operationId: searchUsingGET\n      parameters:\n        - name: q\n          in: query\n          description: q\n          required: false\n          schema:\n            type: string\n        - name: type\n          in: query\n          description: type\n          required: true\n          schema:\n            type: string\n        - name: platform\n          in: query\n          description: platform\n          required: false\n          schema:\n            type: string\n        - name: pageSize\n          in: query\n          description: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 10000\n        - name: page\n          in: query\n          description: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - name: allowShortQuery\n          in: query\n          description: allowShortQuery\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /securityGroups:\n    get:\n      tags:\n        - security-group-controller\n      summary: Retrieve a list of security groups, grouped by account, cloud provider,\n        and region\n      operationId: allUsingGET_5\n      parameters:\n        - name: id\n          in: query\n          description: id\n          required: false\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/securityGroups/{account}\":\n    get:\n      tags:\n        - security-group-controller\n      summary: Retrieve a list of security groups for a given account, grouped by region\n      operationId: allByAccountUsingGET_1\n      parameters:\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: region\n          in: query\n          description: region\n          required: false\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/securityGroups/{account}/{region}/{name}\":\n    get:\n      tags:\n        - security-group-controller\n      summary: Retrieve a security group's details\n      operationId: getSecurityGroupUsingGET_1\n      parameters:\n        - name: account\n          in: path\n          description: account\n          required: true\n          schema:\n            type: string\n        - name: region\n          in: path\n          description: region\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: name\n          required: true\n          schema:\n            type: string\n        - name: provider\n          in: query\n          description: provider\n          required: false\n          schema:\n            type: string\n            default: aws\n        - name: vpcId\n          in: query\n          description: vpcId\n          required: false\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /subnets:\n    get:\n      tags:\n        - amazon-infrastructure-controller\n      summary: Get subnets\n      operationId: subnetsUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/subnets/{cloudProvider}\":\n    get:\n      tags:\n        - subnet-controller\n      summary: Retrieve a list of subnets for a given cloud provider\n      operationId: allByCloudProviderUsingGET_1\n      parameters:\n        - name: cloudProvider\n          in: path\n          description: cloudProvider\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /tasks:\n    post:\n      tags:\n        - task-controller\n      summary: Create task\n      operationId: taskUsingPOST_1\n      requestBody:\n        $ref: \"#/components/requestBodies/taskUsingPOSTMap\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /tasks/cancel:\n    put:\n      tags:\n        - task-controller\n      summary: Cancel tasks\n      operationId: cancelTasksUsingPUT\n      parameters:\n        - name: ids\n          in: query\n          description: ids\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/tasks/{id}\":\n    get:\n      tags:\n        - task-controller\n      summary: Get task\n      operationId: getTaskUsingGET_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    delete:\n      tags:\n        - task-controller\n      summary: Delete task\n      operationId: deleteTaskUsingDELETE\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n  \"/tasks/{id}/cancel\":\n    put:\n      tags:\n        - task-controller\n      summary: Cancel task\n      operationId: cancelTaskUsingPUT_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/tasks/{id}/details/{taskDetailsId}\":\n    get:\n      tags:\n        - task-controller\n      summary: Get task details\n      operationId: getTaskDetailsUsingGET_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: taskDetailsId\n          in: path\n          description: taskDetailsId\n          required: true\n          schema:\n            type: string\n        - name: X-RateLimit-App\n          in: header\n          description: X-RateLimit-App\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /v2/builds:\n    get:\n      tags:\n        - build-controller\n      summary: Get build masters\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getBuildMastersUsingGET\n      parameters:\n        - name: type\n          in: query\n          description: type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/builds/{buildMaster}/build/{number}/**\":\n    get:\n      tags:\n        - build-controller\n      summary: Get build for build master\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getBuildUsingGET\n      parameters:\n        - name: buildMaster\n          in: path\n          description: buildMaster\n          required: true\n          schema:\n            type: string\n        - name: number\n          in: path\n          description: number\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/builds/{buildMaster}/builds/**\":\n    get:\n      tags:\n        - build-controller\n      summary: Get builds for build master\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getBuildsUsingGET\n      parameters:\n        - name: buildMaster\n          in: path\n          description: buildMaster\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/builds/{buildMaster}/jobs\":\n    get:\n      tags:\n        - build-controller\n      summary: Get jobs for build master\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getJobsForBuildMasterUsingGET\n      parameters:\n        - name: buildMaster\n          in: path\n          description: buildMaster\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/builds/{buildMaster}/jobs/**\":\n    get:\n      tags:\n        - build-controller\n      summary: Get job config\n      description: Deprecated, use the v3 endpoint instead\n      operationId: getJobConfigUsingGET\n      parameters:\n        - name: buildMaster\n          in: path\n          description: buildMaster\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/canaries/canary/{canaryConfigId}\":\n    post:\n      tags:\n        - v-2-canary-controller\n      summary: Start a canary execution\n      operationId: initiateCanaryUsingPOST\n      parameters:\n        - name: canaryConfigId\n          in: path\n          description: canaryConfigId\n          required: true\n          schema:\n            type: string\n        - name: application\n          in: query\n          description: application\n          required: false\n          schema:\n            type: string\n        - name: parentPipelineExecutionId\n          in: query\n          description: parentPipelineExecutionId\n          required: false\n          schema:\n            type: string\n        - name: metricsAccountName\n          in: query\n          description: metricsAccountName\n          required: false\n          schema:\n            type: string\n        - name: storageAccountName\n          in: query\n          description: storageAccountName\n          required: false\n          schema:\n            type: string\n        - name: configurationAccountName\n          in: query\n          description: configurationAccountName\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: executionRequest\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/canaries/canary/{canaryConfigId}/{canaryExecutionId}\":\n    get:\n      tags:\n        - v-2-canary-controller\n      summary: Retrieve a canary result\n      operationId: getCanaryResultUsingGET\n      parameters:\n        - name: canaryConfigId\n          in: path\n          description: canaryConfigId\n          required: true\n          schema:\n            type: string\n        - name: canaryExecutionId\n          in: path\n          description: canaryExecutionId\n          required: true\n          schema:\n            type: string\n        - name: storageAccountName\n          in: query\n          description: storageAccountName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /v2/canaries/credentials:\n    get:\n      tags:\n        - v-2-canary-controller\n      summary: Retrieve a list of configured Kayenta accounts\n      operationId: listCredentialsUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /v2/canaries/judges:\n    get:\n      tags:\n        - v-2-canary-controller\n      summary: Retrieve a list of all configured canary judges\n      operationId: listJudgesUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /v2/canaries/metadata/metricsService:\n    get:\n      tags:\n        - v-2-canary-controller\n      summary: Retrieve a list of descriptors for use in populating the canary config ui\n      operationId: listMetricsServiceMetadataUsingGET\n      parameters:\n        - name: filter\n          in: query\n          description: filter\n          required: false\n          schema:\n            type: string\n        - name: metricsAccountName\n          in: query\n          description: metricsAccountName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/canaries/metricSetPairList/{metricSetPairListId}\":\n    get:\n      tags:\n        - v-2-canary-controller\n      summary: Retrieve a metric set pair list\n      operationId: getMetricSetPairListUsingGET\n      parameters:\n        - name: metricSetPairListId\n          in: path\n          description: metricSetPairListId\n          required: true\n          schema:\n            type: string\n        - name: storageAccountName\n          in: query\n          description: storageAccountName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/canaries/{application}/executions\":\n    get:\n      tags:\n        - v-2-canary-controller\n      summary: Retrieve a list of an application's canary results\n      operationId: getCanaryResultsByApplicationUsingGET\n      parameters:\n        - name: application\n          in: path\n          description: application\n          required: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: limit\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: statuses\n          in: query\n          description: \"Comma-separated list of statuses, e.g.: RUNNING, SUCCEEDED,\n            TERMINAL\"\n          required: false\n          schema:\n            type: string\n        - name: storageAccountName\n          in: query\n          description: storageAccountName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /v2/canaryConfig:\n    get:\n      tags:\n        - v-2-canary-config-controller\n      summary: Retrieve a list of canary configurations\n      operationId: getCanaryConfigsUsingGET\n      parameters:\n        - name: application\n          in: query\n          description: application\n          required: false\n          schema:\n            type: string\n        - name: configurationAccountName\n          in: query\n          description: configurationAccountName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    post:\n      tags:\n        - v-2-canary-config-controller\n      summary: Create a canary configuration\n      operationId: createCanaryConfigUsingPOST\n      parameters:\n        - name: configurationAccountName\n          in: query\n          description: configurationAccountName\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/createCanaryConfigUsingPOSTConfig\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/canaryConfig/{id}\":\n    get:\n      tags:\n        - v-2-canary-config-controller\n      summary: Retrieve a canary configuration by id\n      operationId: getCanaryConfigUsingGET\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: configurationAccountName\n          in: query\n          description: configurationAccountName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    put:\n      tags:\n        - v-2-canary-config-controller\n      summary: Update a canary configuration\n      operationId: updateCanaryConfigUsingPUT\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: configurationAccountName\n          in: query\n          description: configurationAccountName\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/createCanaryConfigUsingPOSTConfig\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    delete:\n      tags:\n        - v-2-canary-config-controller\n      summary: Delete a canary configuration\n      operationId: deleteCanaryConfigUsingDELETE\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: configurationAccountName\n          in: query\n          description: configurationAccountName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n  /v2/pipelineTemplates:\n    get:\n      tags:\n        - v-2-pipeline-templates-controller\n      summary: List pipeline templates.\n      operationId: listUsingGET_1\n      parameters:\n        - name: scopes\n          in: query\n          description: scopes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    post:\n      tags:\n        - v-2-pipeline-templates-controller\n      summary: Create a pipeline template.\n      operationId: createUsingPOST_1\n      requestBody:\n        $ref: \"#/components/requestBodies/createUsingPOSTPipelinetemplate\"\n      responses:\n        \"201\":\n          description: Created\n        \"202\":\n          description: Accepted\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /v2/pipelineTemplates/plan:\n    post:\n      tags:\n        - v-2-pipeline-templates-controller\n      summary: Plan a pipeline template configuration.\n      operationId: planUsingPOST\n      requestBody:\n        $ref: \"#/components/requestBodies/savePipelineUsingPOSTPipeline\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v2/pipelineTemplates/{id}\":\n    get:\n      tags:\n        - v-2-pipeline-templates-controller\n      summary: Get a pipeline template.\n      operationId: getUsingGET_2\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    post:\n      tags:\n        - v-2-pipeline-templates-controller\n      summary: Update a pipeline template.\n      operationId: updateUsingPOST_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: skipPlanDependents\n          in: query\n          description: skipPlanDependents\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        $ref: \"#/components/requestBodies/createUsingPOSTPipelinetemplate\"\n      responses:\n        \"201\":\n          description: Created\n        \"202\":\n          description: Accepted\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n    delete:\n      tags:\n        - v-2-pipeline-templates-controller\n      summary: Delete a pipeline template.\n      operationId: deleteUsingDELETE_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n        - name: application\n          in: query\n          description: application\n          required: false\n          schema:\n            type: string\n      responses:\n        \"202\":\n          description: Accepted\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n  \"/v2/pipelineTemplates/{id}/dependents\":\n    get:\n      tags:\n        - v-2-pipeline-templates-controller\n      summary: List all pipelines that implement a pipeline template\n      operationId: listPipelineTemplateDependentsUsingGET_1\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /v3/builds:\n    get:\n      tags:\n        - build-controller\n      summary: Get build masters\n      operationId: v3GetBuildMastersUsingGET\n      parameters:\n        - name: type\n          in: query\n          description: type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v3/builds/{buildMaster}/build/{number}\":\n    get:\n      tags:\n        - build-controller\n      summary: Get build for build master\n      operationId: v3GetBuildUsingGET\n      parameters:\n        - name: buildMaster\n          in: path\n          description: buildMaster\n          required: true\n          schema:\n            type: string\n        - name: number\n          in: path\n          description: number\n          required: true\n          schema:\n            type: string\n        - name: job\n          in: query\n          description: job\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v3/builds/{buildMaster}/builds\":\n    get:\n      tags:\n        - build-controller\n      summary: Get builds for build master\n      operationId: v3GetBuildsUsingGET\n      parameters:\n        - name: buildMaster\n          in: path\n          description: buildMaster\n          required: true\n          schema:\n            type: string\n        - name: job\n          in: query\n          description: job\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v3/builds/{buildMaster}/job\":\n    get:\n      tags:\n        - build-controller\n      summary: Get job config\n      operationId: v3GetJobConfigUsingGET\n      parameters:\n        - name: buildMaster\n          in: path\n          description: buildMaster\n          required: true\n          schema:\n            type: string\n        - name: job\n          in: query\n          description: job\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/v3/builds/{buildMaster}/jobs\":\n    get:\n      tags:\n        - build-controller\n      summary: Get jobs for build master\n      operationId: v3GetJobsForBuildMasterUsingGET\n      parameters:\n        - name: buildMaster\n          in: path\n          description: buildMaster\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /version:\n    get:\n      tags:\n        - version-controller\n      summary: Fetch Gate's current version\n      operationId: getVersionUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Version\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  /vpcs:\n    get:\n      tags:\n        - amazon-infrastructure-controller\n      summary: Get VPCs\n      operationId: vpcsUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      deprecated: true\n  /webhooks/preconfigured:\n    get:\n      tags:\n        - webhook-controller\n      summary: Retrieve a list of preconfigured webhooks in Orca\n      operationId: preconfiguredWebhooksUsingGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: array\n                items:\n                  type: object\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n  \"/webhooks/{type}/{source}\":\n    post:\n      tags:\n        - webhook-controller\n      summary: Endpoint for posting webhooks to Spinnaker's webhook service\n      operationId: webhooksUsingPOST\n      parameters:\n        - name: type\n          in: path\n          description: type\n          required: true\n          schema:\n            type: string\n        - name: source\n          in: path\n          description: source\n          required: true\n          schema:\n            type: string\n        - name: X-Hub-Signature\n          in: header\n          description: X-Hub-Signature\n          required: false\n          schema:\n            type: string\n        - name: X-Event-Key\n          in: header\n          description: X-Event-Key\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: event\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                type: object\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\nservers:\n  - url: //localhost:8084/\ncomponents:\n  requestBodies:\n    createUsingPOSTPipelinetemplate:\n      content:\n        application/json:\n          schema:\n            type: object\n      description: pipelineTemplate\n      required: true\n    updateStageUsingPATCHContext:\n      content:\n        application/json:\n          schema:\n            type: object\n      description: context\n      required: true\n    invokePipelineConfigUsingPOSTTrigger:\n      content:\n        application/json:\n          schema:\n            type: object\n      description: trigger\n    createCanaryConfigUsingPOSTConfig:\n      content:\n        application/json:\n          schema:\n            type: object\n      description: config\n      required: true\n    taskUsingPOSTMap:\n      content:\n        application/json:\n          schema:\n            type: object\n      description: map\n      required: true\n    savePipelineUsingPOSTPipeline:\n      content:\n        application/json:\n          schema:\n            type: object\n      description: pipeline\n      required: true\n  schemas:\n    Account:\n      type: object\n      properties:\n        accountId:\n          type: string\n        name:\n          type: string\n        permissions:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        providerVersion:\n          type: string\n        requiredGroupMembership:\n          type: array\n          items:\n            type: string\n        skin:\n          type: string\n        type:\n          type: string\n    AccountDetails:\n      type: object\n      properties:\n        accountId:\n          type: string\n        accountType:\n          type: string\n        challengeDestructiveActions:\n          type: boolean\n        cloudProvider:\n          type: string\n        environment:\n          type: string\n        name:\n          type: string\n        permissions:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        primaryAccount:\n          type: boolean\n        providerVersion:\n          type: string\n        requiredGroupMembership:\n          type: array\n          items:\n            type: string\n        skin:\n          type: string\n        type:\n          type: string\n    GrantedAuthority:\n      type: object\n      properties:\n        authority:\n          type: string\n    HttpEntity:\n      type: object\n      properties:\n        body:\n          type: object\n    PipelineTemplateDependent:\n      type: object\n      properties:\n        application:\n          type: string\n        pipelineConfigId:\n          type: string\n        pipelineName:\n          type: string\n    ResponseEntity:\n      type: object\n      properties:\n        body:\n          type: object\n        statusCode:\n          type: string\n          enum:\n            - \"100\"\n            - \"101\"\n            - \"102\"\n            - \"103\"\n            - \"200\"\n            - \"201\"\n            - \"202\"\n            - \"203\"\n            - \"204\"\n            - \"205\"\n            - \"206\"\n            - \"207\"\n            - \"208\"\n            - \"226\"\n            - \"300\"\n            - \"301\"\n            - \"302\"\n            - \"303\"\n            - \"304\"\n            - \"305\"\n            - \"307\"\n            - \"308\"\n            - \"400\"\n            - \"401\"\n            - \"402\"\n            - \"403\"\n            - \"404\"\n            - \"405\"\n            - \"406\"\n            - \"407\"\n            - \"408\"\n            - \"409\"\n            - \"410\"\n            - \"411\"\n            - \"412\"\n            - \"413\"\n            - \"414\"\n            - \"415\"\n            - \"416\"\n            - \"417\"\n            - \"418\"\n            - \"419\"\n            - \"420\"\n            - \"421\"\n            - \"422\"\n            - \"423\"\n            - \"424\"\n            - \"426\"\n            - \"428\"\n            - \"429\"\n            - \"431\"\n            - \"451\"\n            - \"500\"\n            - \"501\"\n            - \"502\"\n            - \"503\"\n            - \"504\"\n            - \"505\"\n            - \"506\"\n            - \"507\"\n            - \"508\"\n            - \"509\"\n            - \"510\"\n            - \"511\"\n        statusCodeValue:\n          type: integer\n          format: int32\n    User:\n      type: object\n      properties:\n        accountNonExpired:\n          type: boolean\n        accountNonLocked:\n          type: boolean\n        allowedAccounts:\n          type: array\n          items:\n            type: string\n        authorities:\n          type: array\n          items:\n            $ref: \"#/components/schemas/GrantedAuthority\"\n        credentialsNonExpired:\n          type: boolean\n        email:\n          type: string\n        enabled:\n          type: boolean\n        firstName:\n          type: string\n        lastName:\n          type: string\n        roles:\n          type: array\n          items:\n            type: string\n        username:\n          type: string\n    Version:\n      type: object\n      properties:\n        version:\n          type: string\n    HashMap_string_object_:\n      type: object\n      additionalProperties:\n        type: object\n    Map_string_string_:\n      type: object\n      additionalProperties:\n        type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /applications/{application}/executions/search: get: operation \"searchForPipelineExecutionsByTriggerUsingGET\": parameters: parse parameter \"triggerTimeEndBoundary\": schema: parse default: 9223372036854776000 overflows"
}