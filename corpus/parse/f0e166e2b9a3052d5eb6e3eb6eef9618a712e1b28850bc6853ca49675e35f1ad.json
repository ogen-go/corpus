{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-route53resolver-2018-04-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-route53resolver-2018-04-01-swagger.yaml",
			"byteSize": 80804,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2018-04-01\n  x-release: v4\n  title: Amazon Route 53 Resolver\n  description: \"\u003cp\u003eHere's how you set up to query an Amazon Route 53 private hosted zone\n    from your network:\u003c/p\u003e \u003col\u003e \u003cli\u003e \u003cp\u003eConnect your network to a VPC using AWS\n    Direct Connect or a VPN.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eRun the following AWS CLI command\n    to create a Resolver endpoint:\u003c/p\u003e \u003cp\u003e \u003ccode\u003ecreate-resolver-endpoint --name\n    [endpoint_name] --direction INBOUND --creator-request-id [unique_string]\n    --security-group-ids [security_group_with_inbound_rules] --ip-addresses\n    SubnetId=[subnet_id] SubnetId=[subnet_id_in_different_AZ]\u003c/code\u003e \u003c/p\u003e\n    \u003cp\u003eNote the resolver endpoint ID that appears in the response. You'll use it\n    in step 3.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eGet the IP addresses for the Resolver\n    endpoints:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eget-resolver-endpoint --resolver-endpoint-id\n    [resolver_endpoint_id]\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIn your network\n    configuration, define the IP addresses that you got in step 3 as DNS\n    servers.\u003c/p\u003e \u003cp\u003eYou can now query instance names in your VPCs and the names\n    of records in your private hosted zone.\u003c/p\u003e \u003c/li\u003e \u003c/ol\u003e \u003cp\u003eYou can also\n    perform the following operations using the AWS CLI:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\n    \u003ccode\u003elist-resolver-endpoints\u003c/code\u003e: List all endpoints. The syntax\n    includes options for pagination and filtering.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ccode\u003eupdate-resolver-endpoints\u003c/code\u003e: Add IP addresses to an endpoint or\n    remove IP addresses from an endpoint. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eTo delete an\n    endpoint, use the following AWS CLI command:\u003c/p\u003e \u003cp\u003e\n    \u003ccode\u003edelete-resolver-endpoint --resolver-endpoint-id\n    [resolver_endpoint_id]\u003c/code\u003e \u003c/p\u003e\"\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: route53resolver\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53resolver-2018-04-01.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/route53resolver/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=Route53Resolver.AssociateResolverEndpointIpAddress:\n    post:\n      operationId: AssociateResolverEndpointIpAddress\n      description: \u003cp\u003eAdds IP addresses to an inbound or an outbound resolver endpoint. If\n        you want to adding more than one IP address, submit one\n        \u003ccode\u003eAssociateResolverEndpointIpAddress\u003c/code\u003e request for each IP\n        address.\u003c/p\u003e \u003cp\u003eTo remove an IP address from an endpoint, see\n        \u003ca\u003eDisassociateResolverEndpointIpAddress\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssociateResolverEndpointIpAddressRespo\\\n                  nse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"483\":\n          description: ResourceExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceExistsException\"\n        \"484\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.AssociateResolverEndpointIpAddress\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssociateResolverEndpointIpAddressRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.AssociateResolverRule:\n    post:\n      operationId: AssociateResolverRule\n      description: \"Associates a resolver rule with a VPC. When you associate a rule with a\n        VPC, Resolver forwards all DNS queries for the domain name that is\n        specified in the rule and that originate in the VPC. The queries are\n        forwarded to the IP addresses for the DNS resolvers that are specified\n        in the rule. For more information about rules, see\n        \u003ca\u003eCreateResolverRule\u003c/a\u003e. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssociateResolverRuleResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: ResourceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceUnavailableException\"\n        \"484\":\n          description: ResourceExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceExistsException\"\n        \"485\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.AssociateResolverRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssociateResolverRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.CreateResolverEndpoint:\n    post:\n      operationId: CreateResolverEndpoint\n      description: \u003cp\u003eCreates a resolver endpoint. There are two types of resolver\n        endpoints, inbound and outbound:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAn \u003ci\u003einbound resolver\n        endpoint\u003c/i\u003e forwards DNS queries to the DNS service for a VPC from your\n        network or another VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAn \u003ci\u003eoutbound resolver\n        endpoint\u003c/i\u003e forwards DNS queries from the DNS service for a VPC to your\n        network or another VPC.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateResolverEndpointResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"483\":\n          description: ResourceExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceExistsException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.CreateResolverEndpoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateResolverEndpointRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.CreateResolverRule:\n    post:\n      operationId: CreateResolverRule\n      description: For DNS queries that originate in your VPCs, specifies which resolver\n        endpoint the queries pass through, one domain name that you want to\n        forward to your network, and the IP addresses of the DNS resolvers in\n        your network.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateResolverRuleResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"484\":\n          description: ResourceExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceExistsException\"\n        \"485\":\n          description: ResourceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceUnavailableException\"\n        \"486\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"487\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.CreateResolverRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateResolverRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.DeleteResolverEndpoint:\n    post:\n      operationId: DeleteResolverEndpoint\n      description: \"\u003cp\u003eDeletes a resolver endpoint. The effect of deleting a resolver\n        endpoint depends on whether it's an inbound or an outbound resolver\n        endpoint:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eInbound\u003c/b\u003e: DNS queries from your\n        network or another VPC are no longer routed to the DNS service for the\n        specified VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eOutbound\u003c/b\u003e: DNS queries from a\n        VPC are no longer routed to your network or to another VPC.\u003c/p\u003e \u003c/li\u003e\n        \u003c/ul\u003e\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteResolverEndpointResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"483\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.DeleteResolverEndpoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteResolverEndpointRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.DeleteResolverRule:\n    post:\n      operationId: DeleteResolverRule\n      description: Deletes a resolver rule. Before you can delete a resolver rule, you must\n        disassociate it from all the VPCs that you associated the resolver rule\n        with. For more infomation, see \u003ca\u003eDisassociateResolverRule\u003c/a\u003e.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteResolverRuleResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"483\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.DeleteResolverRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteResolverRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.DisassociateResolverEndpointIpAddress:\n    post:\n      operationId: DisassociateResolverEndpointIpAddress\n      description: \u003cp\u003eRemoves IP addresses from an inbound or an outbound resolver\n        endpoint. If you want to remove more than one IP address, submit one\n        \u003ccode\u003eDisassociateResolverEndpointIpAddress\u003c/code\u003e request for each IP\n        address.\u003c/p\u003e \u003cp\u003eTo add an IP address to an endpoint, see\n        \u003ca\u003eAssociateResolverEndpointIpAddress\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisassociateResolverEndpointIpAddressRe\\\n                  sponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"483\":\n          description: ResourceExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceExistsException\"\n        \"484\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.DisassociateResolverEndpointIpAddress\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DisassociateResolverEndpointIpAddressRequ\\\n                est\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.DisassociateResolverRule:\n    post:\n      operationId: DisassociateResolverRule\n      description: \u003cp\u003eRemoves the association between a specified resolver rule and a\n        specified VPC.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf you disassociate a resolver rule\n        from a VPC, Resolver stops forwarding DNS queries for the domain name\n        that you specified in the resolver rule. \u003c/p\u003e \u003c/important\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisassociateResolverRuleResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.DisassociateResolverRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DisassociateResolverRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.GetResolverEndpoint:\n    post:\n      operationId: GetResolverEndpoint\n      description: Gets information about a specified resolver endpoint, such as whether\n        it's an inbound or an outbound resolver endpoint, and the current status\n        of the endpoint.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetResolverEndpointResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.GetResolverEndpoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetResolverEndpointRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.GetResolverRule:\n    post:\n      operationId: GetResolverRule\n      description: Gets information about a specified resolver rule, such as the domain\n        name that the rule forwards DNS queries for and the ID of the outbound\n        resolver endpoint that the rule is associated with.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetResolverRuleResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.GetResolverRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetResolverRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.GetResolverRuleAssociation:\n    post:\n      operationId: GetResolverRuleAssociation\n      description: \"Gets information about an association between a specified resolver rule\n        and a VPC. You associate a resolver rule and a VPC using\n        \u003ca\u003eAssociateResolverRule\u003c/a\u003e. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetResolverRuleAssociationResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.GetResolverRuleAssociation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetResolverRuleAssociationRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.GetResolverRulePolicy:\n    post:\n      operationId: GetResolverRulePolicy\n      description: \"Gets information about a resolver rule policy. A resolver rule policy\n        specifies the Resolver operations and resources that you want to allow\n        another AWS account to be able to use. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetResolverRulePolicyResponse\"\n        \"480\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"481\":\n          description: UnknownResourceException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnknownResourceException\"\n        \"482\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.GetResolverRulePolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetResolverRulePolicyRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.ListResolverEndpointIpAddresses:\n    post:\n      operationId: ListResolverEndpointIpAddresses\n      description: Gets the IP addresses for a specified resolver endpoint.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListResolverEndpointIpAddressesResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"483\":\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidNextTokenException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.ListResolverEndpointIpAddresses\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListResolverEndpointIpAddressesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.ListResolverEndpoints:\n    post:\n      operationId: ListResolverEndpoints\n      description: Lists all the resolver endpoints that were created using the current AWS\n        account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListResolverEndpointsResponse\"\n        \"480\":\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidNextTokenException\"\n        \"481\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.ListResolverEndpoints\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListResolverEndpointsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.ListResolverRuleAssociations:\n    post:\n      operationId: ListResolverRuleAssociations\n      description: Lists the associations that were created between resolver rules and VPCs\n        using the current AWS account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListResolverRuleAssociationsResponse\"\n        \"480\":\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidNextTokenException\"\n        \"481\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.ListResolverRuleAssociations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListResolverRuleAssociationsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.ListResolverRules:\n    post:\n      operationId: ListResolverRules\n      description: Lists the resolver rules that were created using the current AWS account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListResolverRulesResponse\"\n        \"480\":\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidNextTokenException\"\n        \"481\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.ListResolverRules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListResolverRulesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: Lists the tags that you associated with the specified resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidNextTokenException\"\n        \"483\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"484\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.ListTagsForResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTagsForResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.PutResolverRulePolicy:\n    post:\n      operationId: PutResolverRulePolicy\n      description: Specifies the Resolver operations and resources that you want to allow\n        another AWS account to be able to use.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutResolverRulePolicyResponse\"\n        \"480\":\n          description: InvalidPolicyDocument\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPolicyDocument\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: UnknownResourceException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnknownResourceException\"\n        \"483\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.PutResolverRulePolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutResolverRulePolicyRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.TagResource:\n    post:\n      operationId: TagResource\n      description: Adds one or more tags to a specified resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceResponse\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"483\":\n          description: InvalidTagException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTagException\"\n        \"484\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.TagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TagResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.UntagResource:\n    post:\n      operationId: UntagResource\n      description: Removes one or more tags from a specified resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UntagResourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.UntagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UntagResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.UpdateResolverEndpoint:\n    post:\n      operationId: UpdateResolverEndpoint\n      description: \"Updates the name of an inbound or an outbound resolver endpoint. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateResolverEndpointResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"483\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.UpdateResolverEndpoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateResolverEndpointRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Route53Resolver.UpdateResolverRule:\n    post:\n      operationId: UpdateResolverRule\n      description: Updates settings for a specified resolver rule.\n        \u003ccode\u003eResolverRuleId\u003c/code\u003e is required, and all other parameters are\n        optional. If you don't specify a parameter, it retains its current\n        value.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateResolverRuleResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: ResourceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceUnavailableException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Route53Resolver.UpdateResolverRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateResolverRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://route53resolver.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Route53Resolver multi-region endpoint\n  - url: https://route53resolver.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Route53Resolver multi-region endpoint\n  - url: http://route53resolver.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Route53Resolver endpoint for China (Beijing) and China (Ningxia)\n  - url: https://route53resolver.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Route53Resolver endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AssociateResolverEndpointIpAddressResponse:\n      type: object\n      properties:\n        ResolverEndpoint:\n          $ref: \"#/components/schemas/ResolverEndpoint\"\n    AssociateResolverEndpointIpAddressRequest:\n      type: object\n      required:\n        - ResolverEndpointId\n        - IpAddress\n      properties:\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n        IpAddress:\n          $ref: \"#/components/schemas/IpAddressUpdate\"\n    ResourceNotFoundException: {}\n    InvalidParameterException: {}\n    InvalidRequestException: {}\n    ResourceExistsException: {}\n    InternalServiceErrorException: {}\n    LimitExceededException: {}\n    ThrottlingException: {}\n    AssociateResolverRuleResponse:\n      type: object\n      properties:\n        ResolverRuleAssociation:\n          $ref: \"#/components/schemas/ResolverRuleAssociation\"\n    AssociateResolverRuleRequest:\n      type: object\n      required:\n        - ResolverRuleId\n        - VPCId\n      properties:\n        ResolverRuleId:\n          $ref: \"#/components/schemas/ResourceId\"\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        VPCId:\n          $ref: \"#/components/schemas/ResourceId\"\n    ResourceUnavailableException: {}\n    CreateResolverEndpointResponse:\n      type: object\n      properties:\n        ResolverEndpoint:\n          $ref: \"#/components/schemas/ResolverEndpoint\"\n    CreateResolverEndpointRequest:\n      type: object\n      required:\n        - CreatorRequestId\n        - SecurityGroupIds\n        - Direction\n        - IpAddresses\n      properties:\n        CreatorRequestId:\n          $ref: \"#/components/schemas/CreatorRequestId\"\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        SecurityGroupIds:\n          $ref: \"#/components/schemas/SecurityGroupIds\"\n        Direction:\n          $ref: \"#/components/schemas/ResolverEndpointDirection\"\n        IpAddresses:\n          $ref: \"#/components/schemas/IpAddressesRequest\"\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n    CreateResolverRuleResponse:\n      type: object\n      properties:\n        ResolverRule:\n          $ref: \"#/components/schemas/ResolverRule\"\n    CreateResolverRuleRequest:\n      type: object\n      required:\n        - CreatorRequestId\n        - RuleType\n        - DomainName\n      properties:\n        CreatorRequestId:\n          $ref: \"#/components/schemas/CreatorRequestId\"\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        RuleType:\n          $ref: \"#/components/schemas/RuleTypeOption\"\n        DomainName:\n          $ref: \"#/components/schemas/DomainName\"\n        TargetIps:\n          $ref: \"#/components/schemas/TargetList\"\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n    DeleteResolverEndpointResponse:\n      type: object\n      properties:\n        ResolverEndpoint:\n          $ref: \"#/components/schemas/ResolverEndpoint\"\n    DeleteResolverEndpointRequest:\n      type: object\n      required:\n        - ResolverEndpointId\n      properties:\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n    DeleteResolverRuleResponse:\n      type: object\n      properties:\n        ResolverRule:\n          $ref: \"#/components/schemas/ResolverRule\"\n    DeleteResolverRuleRequest:\n      type: object\n      required:\n        - ResolverRuleId\n      properties:\n        ResolverRuleId:\n          $ref: \"#/components/schemas/ResourceId\"\n    ResourceInUseException: {}\n    DisassociateResolverEndpointIpAddressResponse:\n      type: object\n      properties:\n        ResolverEndpoint:\n          $ref: \"#/components/schemas/ResolverEndpoint\"\n    DisassociateResolverEndpointIpAddressRequest:\n      type: object\n      required:\n        - ResolverEndpointId\n        - IpAddress\n      properties:\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n        IpAddress:\n          $ref: \"#/components/schemas/IpAddressUpdate\"\n    DisassociateResolverRuleResponse:\n      type: object\n      properties:\n        ResolverRuleAssociation:\n          $ref: \"#/components/schemas/ResolverRuleAssociation\"\n    DisassociateResolverRuleRequest:\n      type: object\n      required:\n        - VPCId\n        - ResolverRuleId\n      properties:\n        VPCId:\n          $ref: \"#/components/schemas/ResourceId\"\n        ResolverRuleId:\n          $ref: \"#/components/schemas/ResourceId\"\n    GetResolverEndpointResponse:\n      type: object\n      properties:\n        ResolverEndpoint:\n          $ref: \"#/components/schemas/ResolverEndpoint\"\n    GetResolverEndpointRequest:\n      type: object\n      required:\n        - ResolverEndpointId\n      properties:\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n    GetResolverRuleResponse:\n      type: object\n      properties:\n        ResolverRule:\n          $ref: \"#/components/schemas/ResolverRule\"\n    GetResolverRuleRequest:\n      type: object\n      required:\n        - ResolverRuleId\n      properties:\n        ResolverRuleId:\n          $ref: \"#/components/schemas/ResourceId\"\n    GetResolverRuleAssociationResponse:\n      type: object\n      properties:\n        ResolverRuleAssociation:\n          $ref: \"#/components/schemas/ResolverRuleAssociation\"\n    GetResolverRuleAssociationRequest:\n      type: object\n      required:\n        - ResolverRuleAssociationId\n      properties:\n        ResolverRuleAssociationId:\n          $ref: \"#/components/schemas/ResourceId\"\n    GetResolverRulePolicyResponse:\n      type: object\n      properties:\n        ResolverRulePolicy:\n          $ref: \"#/components/schemas/ResolverRulePolicy\"\n    GetResolverRulePolicyRequest:\n      type: object\n      required:\n        - Arn\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/Arn\"\n    UnknownResourceException: {}\n    ListResolverEndpointIpAddressesResponse:\n      type: object\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        IpAddresses:\n          $ref: \"#/components/schemas/IpAddressesResponse\"\n    ListResolverEndpointIpAddressesRequest:\n      type: object\n      required:\n        - ResolverEndpointId\n      properties:\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    InvalidNextTokenException: {}\n    ListResolverEndpointsResponse:\n      type: object\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        ResolverEndpoints:\n          $ref: \"#/components/schemas/ResolverEndpoints\"\n    ListResolverEndpointsRequest:\n      type: object\n      properties:\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Filters:\n          $ref: \"#/components/schemas/Filters\"\n    ListResolverRuleAssociationsResponse:\n      type: object\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        ResolverRuleAssociations:\n          $ref: \"#/components/schemas/ResolverRuleAssociations\"\n    ListResolverRuleAssociationsRequest:\n      type: object\n      properties:\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Filters:\n          $ref: \"#/components/schemas/Filters\"\n    ListResolverRulesResponse:\n      type: object\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        ResolverRules:\n          $ref: \"#/components/schemas/ResolverRules\"\n    ListResolverRulesRequest:\n      type: object\n      properties:\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Filters:\n          $ref: \"#/components/schemas/Filters\"\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListTagsForResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      properties:\n        ResourceArn:\n          $ref: \"#/components/schemas/Arn\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    PutResolverRulePolicyResponse:\n      type: object\n      properties:\n        ReturnValue:\n          $ref: \"#/components/schemas/Boolean\"\n      description: The response to a \u003ccode\u003ePutResolverRulePolicy\u003c/code\u003e request.\n    PutResolverRulePolicyRequest:\n      type: object\n      required:\n        - Arn\n        - ResolverRulePolicy\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/Arn\"\n        ResolverRulePolicy:\n          $ref: \"#/components/schemas/ResolverRulePolicy\"\n    InvalidPolicyDocument: {}\n    TagResourceResponse:\n      type: object\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - Tags\n      properties:\n        ResourceArn:\n          $ref: \"#/components/schemas/Arn\"\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n    InvalidTagException: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - TagKeys\n      properties:\n        ResourceArn:\n          $ref: \"#/components/schemas/Arn\"\n        TagKeys:\n          $ref: \"#/components/schemas/TagKeyList\"\n    UpdateResolverEndpointResponse:\n      type: object\n      properties:\n        ResolverEndpoint:\n          $ref: \"#/components/schemas/ResolverEndpoint\"\n    UpdateResolverEndpointRequest:\n      type: object\n      required:\n        - ResolverEndpointId\n      properties:\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n        Name:\n          $ref: \"#/components/schemas/Name\"\n    UpdateResolverRuleResponse:\n      type: object\n      properties:\n        ResolverRule:\n          $ref: \"#/components/schemas/ResolverRule\"\n    UpdateResolverRuleRequest:\n      type: object\n      required:\n        - ResolverRuleId\n        - Config\n      properties:\n        ResolverRuleId:\n          $ref: \"#/components/schemas/ResourceId\"\n        Config:\n          $ref: \"#/components/schemas/ResolverRuleConfig\"\n    AccountId:\n      type: string\n      minLength: 12\n      maxLength: 32\n    Arn:\n      type: string\n      minLength: 1\n      maxLength: 255\n    ResourceId:\n      type: string\n      minLength: 1\n      maxLength: 64\n    IpAddressUpdate:\n      type: object\n      properties:\n        IpId:\n          $ref: \"#/components/schemas/ResourceId\"\n        SubnetId:\n          $ref: \"#/components/schemas/SubnetId\"\n        Ip:\n          $ref: \"#/components/schemas/Ip\"\n      description: In an \u003ca\u003eUpdateResolverEndpoint\u003c/a\u003e request, information about an IP\n        address to update.\n    ResolverEndpoint:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/ResourceId\"\n        CreatorRequestId:\n          $ref: \"#/components/schemas/CreatorRequestId\"\n        Arn:\n          $ref: \"#/components/schemas/Arn\"\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        SecurityGroupIds:\n          $ref: \"#/components/schemas/SecurityGroupIds\"\n        Direction:\n          $ref: \"#/components/schemas/ResolverEndpointDirection\"\n        IpAddressCount:\n          $ref: \"#/components/schemas/IpAddressCount\"\n        HostVPCId:\n          $ref: \"#/components/schemas/ResourceId\"\n        Status:\n          $ref: \"#/components/schemas/ResolverEndpointStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        CreationTime:\n          $ref: \"#/components/schemas/Rfc3339TimeString\"\n        ModificationTime:\n          $ref: \"#/components/schemas/Rfc3339TimeString\"\n      description: In the response to a \u003ca\u003eCreateResolverEndpoint\u003c/a\u003e,\n        \u003ca\u003eDeleteResolverEndpoint\u003c/a\u003e, \u003ca\u003eGetResolverEndpoint\u003c/a\u003e,\n        \u003ca\u003eListResolverEndpoints\u003c/a\u003e, or \u003ca\u003eUpdateResolverEndpoint\u003c/a\u003e request,\n        a complex type that contains settings for an existing inbound or\n        outbound resolver endpoint.\n    Name:\n      type: string\n      pattern: (?!^[0-9]+$)([a-zA-Z0-9-_' ']+)\n      maxLength: 64\n    ResolverRuleAssociation:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/ResourceId\"\n        ResolverRuleId:\n          $ref: \"#/components/schemas/ResourceId\"\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        VPCId:\n          $ref: \"#/components/schemas/ResourceId\"\n        Status:\n          $ref: \"#/components/schemas/ResolverRuleAssociationStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n      description: In the response to an \u003ca\u003eAssociateResolverRule\u003c/a\u003e,\n        \u003ca\u003eDisassociateResolverRule\u003c/a\u003e, or \u003ca\u003eListResolverRuleAssociations\u003c/a\u003e\n        request, information about an association between a resolver rule and a\n        VPC.\n    Boolean:\n      type: boolean\n    CreatorRequestId:\n      type: string\n      minLength: 1\n      maxLength: 255\n    SecurityGroupIds:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ResourceId\"\n    ResolverEndpointDirection:\n      type: string\n      enum:\n        - INBOUND\n        - OUTBOUND\n    IpAddressesRequest:\n      type: array\n      items:\n        $ref: \"#/components/schemas/IpAddressRequest\"\n      minItems: 1\n      maxItems: 10\n    TagList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tag\"\n    RuleTypeOption:\n      type: string\n      enum:\n        - FORWARD\n        - SYSTEM\n        - RECURSIVE\n    DomainName:\n      type: string\n      minLength: 1\n      maxLength: 256\n    TargetList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TargetAddress\"\n      minItems: 1\n    ResolverRule:\n      type: object\n      properties:\n        Id:\n          $ref: \"#/components/schemas/ResourceId\"\n        CreatorRequestId:\n          $ref: \"#/components/schemas/CreatorRequestId\"\n        Arn:\n          $ref: \"#/components/schemas/Arn\"\n        DomainName:\n          $ref: \"#/components/schemas/DomainName\"\n        Status:\n          $ref: \"#/components/schemas/ResolverRuleStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        RuleType:\n          $ref: \"#/components/schemas/RuleTypeOption\"\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        TargetIps:\n          $ref: \"#/components/schemas/TargetList\"\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n        OwnerId:\n          $ref: \"#/components/schemas/AccountId\"\n        ShareStatus:\n          $ref: \"#/components/schemas/ShareStatus\"\n      description: For queries that originate in your VPC, detailed information about a\n        resolver rule, which specifies how to route DNS queries out of the VPC.\n        The \u003ccode\u003eResolverRule\u003c/code\u003e parameter appears in the response to a\n        \u003ca\u003eCreateResolverRule\u003c/a\u003e, \u003ca\u003eDeleteResolverRule\u003c/a\u003e,\n        \u003ca\u003eGetResolverRule\u003c/a\u003e, \u003ca\u003eListResolverRules\u003c/a\u003e, or\n        \u003ca\u003eUpdateResolverRule\u003c/a\u003e request.\n    FilterName:\n      type: string\n      minLength: 1\n      maxLength: 64\n    FilterValues:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FilterValue\"\n    Filter:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/FilterName\"\n        Values:\n          $ref: \"#/components/schemas/FilterValues\"\n      description: For \u003ccode\u003eList\u003c/code\u003e operations, an optional specification to return a\n        subset of objects, such as resolver endpoints or resolver rules.\n    FilterValue:\n      type: string\n      minLength: 1\n      maxLength: 64\n    Filters:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Filter\"\n    ResolverRulePolicy:\n      type: string\n      maxLength: 5000\n    Ip:\n      type: string\n      minLength: 7\n      maxLength: 36\n    IpAddressCount:\n      type: integer\n    SubnetId:\n      type: string\n      minLength: 1\n      maxLength: 32\n    IpAddressRequest:\n      type: object\n      required:\n        - SubnetId\n      properties:\n        SubnetId:\n          $ref: \"#/components/schemas/SubnetId\"\n        Ip:\n          $ref: \"#/components/schemas/Ip\"\n      description: In an \u003ca\u003eCreateResolverEndpoint\u003c/a\u003e request, a subnet and IP address\n        that you want to use for DNS queries.\n    IpAddressStatus:\n      type: string\n      enum:\n        - CREATING\n        - FAILED_CREATION\n        - ATTACHING\n        - ATTACHED\n        - REMAP_DETACHING\n        - REMAP_ATTACHING\n        - DETACHING\n        - FAILED_RESOURCE_GONE\n        - DELETING\n        - DELETE_FAILED_FAS_EXPIRED\n    StatusMessage:\n      type: string\n      maxLength: 255\n    Rfc3339TimeString:\n      type: string\n      minLength: 20\n      maxLength: 40\n    IpAddressResponse:\n      type: object\n      properties:\n        IpId:\n          $ref: \"#/components/schemas/ResourceId\"\n        SubnetId:\n          $ref: \"#/components/schemas/SubnetId\"\n        Ip:\n          $ref: \"#/components/schemas/Ip\"\n        Status:\n          $ref: \"#/components/schemas/IpAddressStatus\"\n        StatusMessage:\n          $ref: \"#/components/schemas/StatusMessage\"\n        CreationTime:\n          $ref: \"#/components/schemas/Rfc3339TimeString\"\n        ModificationTime:\n          $ref: \"#/components/schemas/Rfc3339TimeString\"\n      description: In the response to a \u003ca\u003eGetResolverEndpoint\u003c/a\u003e request, information\n        about the IP addresses that the resolver endpoint uses for DNS queries.\n    IpAddressesResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/IpAddressResponse\"\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 100\n    NextToken:\n      type: string\n    ResolverEndpoints:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ResolverEndpoint\"\n    ResolverRuleAssociations:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ResolverRuleAssociation\"\n    ResolverRules:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ResolverRule\"\n    Port:\n      type: integer\n      minimum: 0\n      maximum: 65535\n    ResolverEndpointStatus:\n      type: string\n      enum:\n        - CREATING\n        - OPERATIONAL\n        - UPDATING\n        - AUTO_RECOVERING\n        - ACTION_NEEDED\n        - DELETING\n    ResolverRuleStatus:\n      type: string\n      enum:\n        - COMPLETE\n        - DELETING\n        - UPDATING\n        - FAILED\n    ShareStatus:\n      type: string\n      enum:\n        - NOT_SHARED\n        - SHARED_WITH_ME\n        - SHARED_BY_ME\n    ResolverRuleAssociationStatus:\n      type: string\n      enum:\n        - CREATING\n        - COMPLETE\n        - DELETING\n        - FAILED\n        - OVERRIDDEN\n    ResolverRuleConfig:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        TargetIps:\n          $ref: \"#/components/schemas/TargetList\"\n        ResolverEndpointId:\n          $ref: \"#/components/schemas/ResourceId\"\n      description: In an \u003ca\u003eUpdateResolverRule\u003c/a\u003e request, information about the changes\n        that you want to make.\n    TagKey:\n      type: string\n    TagValue:\n      type: string\n    Tag:\n      type: object\n      properties:\n        Key:\n          $ref: \"#/components/schemas/TagKey\"\n        Value:\n          $ref: \"#/components/schemas/TagValue\"\n      description: One tag that you want to add to the specified resource. A tag consists\n        of a \u003ccode\u003eKey\u003c/code\u003e (a name for the tag) and a \u003ccode\u003eValue\u003c/code\u003e.\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n    TargetAddress:\n      type: object\n      required:\n        - Ip\n      properties:\n        Ip:\n          $ref: \"#/components/schemas/Ip\"\n        Port:\n          $ref: \"#/components/schemas/Port\"\n      description: In a \u003ca\u003eCreateResolverRule\u003c/a\u003e request, an array of the IPs that you\n        want to forward DNS queries to.\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /#X-Amz-Target=Route53Resolver.CreateResolverEndpoint: post: operation \"CreateResolverEndpoint\": parse path \"/#X-Amz-Target=Route53Resolver.CreateResolverEndpoint\": path MUST NOT contain a fragment"
}