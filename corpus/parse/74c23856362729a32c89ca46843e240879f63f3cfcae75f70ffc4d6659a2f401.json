{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "ijenko.net-3.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/ijenko.net-3.0.0-swagger.yaml",
			"byteSize": 102288,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: contact@ijenko.com\n    name: IJENKO\n    url: http://developers.ijenko.com/\n  title: IoEÂ² IoT API - to create end-user applications\n  version: 3.0.0\n  x-apisguru-categories:\n    - iot\n  x-logo:\n    backgroundColor: \"#383D41\"\n    url: https://pbs.twimg.com/profile_images/1706275304/_0_logo_carr__fd_gris_400x400.png\n  x-origin:\n    - format: swagger\n      url: http://developers.ijenko.com/swagger.json\n      version: \"2.0\"\n  x-providerName: ijenko.net\nsecurity:\n  - Token_in_query: []\n  - Token_in_Access-Token_header: []\ntags:\n  - name: Entry points\n  - name: Authentication\n  - name: Account\n  - name: User\n  - name: Place\n  - name: Device\n  - name: Functionality\n  - name: Action\n  - name: Program\n  - name: Notification\n  - name: Electricity\npaths:\n  /account/change-password:\n    post:\n      description: |\n        Set a new password for the account.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Account.changePassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthChangePassword\"\n        description: Old and new password\n        required: true\n      responses:\n        \"204\":\n          description: Change successful.\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Change the password\n      tags:\n        - Account\n  /account/places:\n    get:\n      description: |\n        List the *Places* of the account.\n\n        **Note:** requires full access to the *Account*.\n      operationId: Account.places\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlaceItem\"\n                type: array\n                uniqueItems: true\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n      summary: List Places of the Account\n      tags:\n        - Account\n    parameters: []\n    post:\n      description: \u003e\n        Create a new *Place*.\n\n\n        A *Device* (`class`: `MINT`, `address`: `0`) is automatically created and attached to the new *Place*.\n\n\n        **Note:** requires full access to the *Account*.\n      operationId: Account.newPlace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PlaceNew\"\n      responses:\n        \"201\":\n          description: \"*Place* successfully created.\"\n          headers:\n            Location:\n              description: Path of the Place created (`/places/{id}`)\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlaceCreated\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Create a Place\n      tags:\n        - Account\n  /account/tokens:\n    get:\n      description: |\n        List the active *Tokens* on the account.\n\n        **Note:** requires full access to the *Account*.\n      operationId: Account.tokens\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserTokenItem\"\n                type: array\n                uniqueItems: true\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List active Tokens of the Account\n      tags:\n        - Account\n    parameters: []\n  \"/account/tokens/{tokenId}\":\n    delete:\n      description: |\n        Revoke the given *Token*.\n\n        **Note:** requires full access to the *Account*.\n      operationId: Account.revokeToken\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/DeleteOK\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Revoke a Token\n      tags:\n        - Account\n    parameters:\n      - $ref: \"#/components/parameters/tokenId\"\n  /account/users:\n    get:\n      description: Get the list of *Users* of this *Account*.\n      operationId: Account.users\n      parameters:\n        - $ref: \"#/components/parameters/embedMetadata\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UserItem\"\n                type: array\n                uniqueItems: true\n      summary: List Users of the Account\n      tags:\n        - Account\n    parameters: []\n    post:\n      description: |\n        Add a *User*.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Account.newUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserNew\"\n        required: true\n      responses:\n        \"201\":\n          description: \"*User* successfully created.\"\n          headers:\n            Location:\n              description: Path of the User created\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserCreated\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: New User\n      tags:\n        - Account\n  \"/account/users/{userId}\":\n    delete:\n      description: |\n        Delete a *User* from this *Account*, and revoke all his/her *Tokens*.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Account.deleteUser\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/DeleteOK\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Delete a User\n      tags:\n        - Account\n    get:\n      description: Get information about a *User* in the same *Account*.\n      operationId: Account.getUser\n      responses:\n        \"200\":\n          description: |\n            *User* information.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Information about a User\n      tags:\n        - Account\n    parameters:\n      - $ref: \"#/components/parameters/userId\"\n    patch:\n      description: |\n        Modify a *User*.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Account.patchUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserPatch\"\n        required: true\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/PatchOK\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify a User\n      tags:\n        - Account\n  \"/account/users/{userId}/metadata\":\n    get:\n      description: Get the metadata.\n      operationId: User.getMetadata\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List metadata\n      tags:\n        - Account\n    parameters:\n      - $ref: \"#/components/parameters/userId\"\n    patch:\n      description: \u003e\n        Modify the metadata.\n\n        Keys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n      operationId: User.patchMetadata\n      requestBody:\n        $ref: \"#/components/requestBodies/MetadataPatch\"\n      responses:\n        \"200\":\n          description: Successful. The new metadata is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessUser\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify metadata\n      tags:\n        - Account\n  /auth/login:\n    post:\n      description: |\n        Get an access+refresh tokens pair from login and password information.\n\n        The *access token* obtained with this request can then be used in\n        an `Access-Token` HTTP header or in a `token` URL query parameter\n        in requests that require authentication.\n\n        The *refresh token* can be used with `/auth/refresh` when the *access\n        token* expires to retrieve a new *access token*. The lifetime of the\n        refresh token is the maximum lifetime of this authentication request.\n\n        The default lifetime of the *refresh token* is defined by the `appId`\n        used. The `ttl` input parameter allows to request a *refresh token*\n        with a shorter lifetime.\n\n        To implement *logout*, use `/auth/revoke`.\n      operationId: AuthAccountLogin\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthLogin\"\n        description: Login information.\n        required: true\n      responses:\n        \"200\":\n          description: Login successful. The access token is given to use the API. The\n            refresh token must be stored in a safe place.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthTokens\"\n        \"401\":\n          description: Authentication failure.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefaultError\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      security: []\n      summary: Get a token using login+password\n      tags:\n        - Authentication\n        - Entry points\n  /auth/refresh:\n    post:\n      description: |\n        Get a new *access token* using a valid *refresh token*.\n\n        This is a **replacement** of the *access token*: if an existing *access\n        token* was still not expired, it is invalidated.\n      operationId: AuthRefreshToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthRefresh\"\n        description: Refresh token information.\n        required: true\n      responses:\n        \"200\":\n          description: Refresh successful. A new access token is given to use the API.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthTokens\"\n        \"401\":\n          description: Authentication failure.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefaultError\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      security: []\n      summary: Refresh a token\n      tags:\n        - Authentication\n  /auth/reset-password:\n    post:\n      description: \u003e\n        Trigger the request of a new password.\n\n\n        The account administrator will receive an e-mail with an URL pointing to a form\n\n        to allow him/her to enter a new password.\n\n        The old password is still functional until a new one is submitted.\n\n\n        Either the login or e-mail of the account must be given.\n      operationId: AuthResetPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthResetPassword\"\n        description: Account identification information\n        required: true\n      responses:\n        \"204\":\n          description: As this request is not authenticated, response is always successful\n            to not reveal (in)existence of accounts.\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      security: []\n      summary: Ask for a new password\n      tags:\n        - Authentication\n  /auth/revoke:\n    post:\n      description: \u003e\n        Invalidate the authentication used for the request. The access token and\n        the refresh token will be invalid after this request.\n\n        This request is typically called to implement logout.\n      operationId: AuthRevokeToken\n      responses:\n        \"204\":\n          description: Revocation successful. The token used for the request is now invalid.\n        \"401\":\n          description: Authentication failure.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefaultError\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Revoke a token\n      tags:\n        - Authentication\n  \"/devices/{deviceId}\":\n    get:\n      description: Get information about a *Device*.\n      operationId: Devices.get\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Information about a Device\n      tags:\n        - Device\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n    patch:\n      description: |\n        Modify information about a *Device*: its name.\n      operationId: Devices.patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DevicePatch\"\n        required: true\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/PatchOK\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessDevice\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Update a Device\n      tags:\n        - Device\n  \"/devices/{deviceId}/functionalities\":\n    post:\n      description: \u003e\n        Add a *Functionality* to the device.\n\n\n        Required parameters are :\n\n        - functionality class\n\n        - endpoint\n\n\n        Each device class has its own restrictions on which Functionality classes can be added and on which endpoints.\n\n        Only a few devices allow to add Functionalities.\n\n\n        |Device class|Functionality class|Endpoints|\n\n        |------------|-------------------|---------|\n\n        |MINT        |CurrentPeriod      |1,2,3    |\n\n        |MINT        |ElectricityRates   |1,2,3    |\n\n        |MINT        |GenericRate        |1,2,3    |\n\n\n        **Note**: requires full access to the *Account*.\n      operationId: Device.addFunctionality\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FunctionalityNew\"\n        required: true\n      responses:\n        \"201\":\n          description: \"*Functionality* successfully created.\"\n          headers:\n            Location:\n              description: Path of the Functionality created\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FunctionalityCreated\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessDevice\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Add dynamically a functionality\n      tags:\n        - Device\n        - Functionality\n  \"/devices/{deviceId}/metadata\":\n    get:\n      description: Get the metadata.\n      operationId: Device.getMetadata\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List metadata\n      tags:\n        - Device\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n    patch:\n      description: \u003e\n        Modify the metadata.\n\n        Keys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n      operationId: Device.patchMetadata\n      requestBody:\n        $ref: \"#/components/requestBodies/MetadataPatch\"\n      responses:\n        \"200\":\n          description: Successful. The new metadata is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessDevice\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify metadata\n      tags:\n        - Device\n  \"/devices/{deviceId}/run/{action}\":\n    post:\n      description: \u003e\n        Run an *Action* on zero, one or multiple Functionalities selected with\n        tags.\n      operationId: Device.run\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/action\"\n        - $ref: \"#/components/parameters/functionalitiesSelector.Req\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ActionArgs\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ActionMultiResultOK\"\n        \"450\":\n          $ref: \"#/components/responses/ErrorGatewayUnreachable\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Run actions\n      tags:\n        - Action\n  \"/devices/{deviceId}/tags\":\n    get:\n      description: Get the tags of a *Device*.\n      operationId: Device.getTags\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tags\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List tags\n      tags:\n        - Device\n    parameters:\n      - $ref: \"#/components/parameters/deviceId\"\n    patch:\n      description: Modify the tags of a *Device*.\n      operationId: Device.patchTags\n      requestBody:\n        $ref: \"#/components/requestBodies/TagsPatch\"\n      responses:\n        \"200\":\n          description: Successful. The new list of tags is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tags\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessDevice\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify tags\n      tags:\n        - Device\n  \"/functionalities/{functionalityId}\":\n    get:\n      description: Get the *Functionality*.\n      operationId: Functionalities.get\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Functionality\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Information about a Functionality\n      tags:\n        - Functionality\n    parameters:\n      - $ref: \"#/components/parameters/functionalityId\"\n    patch:\n      description: |\n        Modify information about a *Functionality*: its name.\n      operationId: Functionality.patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FunctionalityPatch\"\n        required: true\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/PatchOK\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessFunctionality\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify a Functionality\n      tags:\n        - Functionality\n  \"/functionalities/{functionalityId}/attributes\":\n    get:\n      description: \u003e\n        Get the values of multiple *Attributes* and their history.\n\n\n        If the `names` parameter is not given, all the attributes of the *Functionality*\n\n        are returned. As the list may be huge, this must be avoided.\n\n\n        If the `to` parameter is set, `from` must also be set.\n\n\n        If `from` is not set, only the last value is returned.\n\n\n        The `surround` parameter allows to ask also for one value beyond each interval boundaries.\n\n\n        The request may fail if too many values are asked.\n      operationId: Functionality.values\n      parameters:\n        - $ref: \"#/components/parameters/attributesNames\"\n        - $ref: \"#/components/parameters/from.Opt\"\n        - $ref: \"#/components/parameters/to\"\n        - description: If true, return also one value before from and one value after to\n          in: query\n          name: surround\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AttributesValues\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Get history of multiple attributes\n      tags:\n        - Functionality\n    parameters:\n      - $ref: \"#/components/parameters/functionalityId\"\n  \"/functionalities/{functionalityId}/attributes/{attributeName}\":\n    get:\n      description: Get the *Attribute* value and the last time when it changed.\n      operationId: Functionality.value\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeValue\"\n        \"204\":\n          description: No value has yet been set on this attribute.\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Get an Attribute value\n      tags:\n        - Functionality\n    parameters:\n      - $ref: \"#/components/parameters/functionalityId\"\n      - $ref: \"#/components/parameters/attributeName\"\n    put:\n      description: Modify the value of the *Attribute*.\n      operationId: Functionality.set\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnyJSON\"\n        description: New value for the *Attribute*.\n        required: true\n      responses:\n        \"204\":\n          description: Successful.\n        \"405\":\n          $ref: \"#/components/responses/ErrorWriteAttribute\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify an Attribute value\n      tags:\n        - Functionality\n  \"/functionalities/{functionalityId}/metadata\":\n    get:\n      description: Get the metadata.\n      operationId: Functionality.getMetadata\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List metadata\n      tags:\n        - Functionality\n    parameters:\n      - $ref: \"#/components/parameters/functionalityId\"\n    patch:\n      description: \u003e\n        Modify the metadata.\n\n        Keys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n      operationId: Functionality.patchMetadata\n      requestBody:\n        $ref: \"#/components/requestBodies/MetadataPatch\"\n      responses:\n        \"200\":\n          description: Successful. The new metadata is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessFunctionality\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify metadata\n      tags:\n        - Functionality\n  \"/functionalities/{functionalityId}/run/{action}\":\n    post:\n      description: |\n        Run an action on the Functionality.\n      operationId: Functionality.run\n      parameters:\n        - $ref: \"#/components/parameters/functionalityId\"\n        - $ref: \"#/components/parameters/action\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ActionArgs\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActionResult\"\n        \"450\":\n          $ref: \"#/components/responses/ErrorGatewayUnreachable\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Run an action\n      tags:\n        - Action\n  \"/functionalities/{functionalityId}/tags\":\n    get:\n      description: Get the tags of a *Functionality*.\n      operationId: Functionality.getTags\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tags\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List tags\n      tags:\n        - Functionality\n    parameters:\n      - $ref: \"#/components/parameters/functionalityId\"\n    patch:\n      description: Modify the tags of a *Functionality*.\n      operationId: Functionality.patchTags\n      requestBody:\n        $ref: \"#/components/requestBodies/TagsPatch\"\n      responses:\n        \"200\":\n          description: Successful. The new list of tags is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tags\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessFunctionality\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify tags\n      tags:\n        - Functionality\n  /me:\n    get:\n      description: \u003e\n        Get information on the authenticated *User* who does the request.\n\n\n        The *login* property is returned only if the *User* is the administrator of\n\n        the *Account*.\n      operationId: Me.get\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserMe\"\n      summary: Information about the User\n      tags:\n        - Entry points\n    patch:\n      description: |\n        Update *User* information (locale).\n      operationId: Me.patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserMePatch\"\n        description: Updated user info.\n        required: true\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/PatchOK\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Update User information\n      tags:\n        - Entry points\n  \"/notifications/{notificationId}\":\n    delete:\n      description: |\n        Delete a *Notification*.\n      operationId: Notification.delete\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/DeleteOK\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessNotification\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Delete a Notification\n      tags:\n        - Notification\n    get:\n      description: |\n        Get information about a *Notification*.\n      operationId: Notifications.get\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessNotification\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Information about a Notification\n      tags:\n        - Notification\n    parameters:\n      - $ref: \"#/components/parameters/notificationId\"\n    patch:\n      description: |\n        Modify a *Notification*.\n      operationId: Notification.patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationPatch\"\n        required: true\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/PatchOK\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessNotification\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify a Notification\n      tags:\n        - Notification\n  \"/notifications/{notificationId}/metadata\":\n    get:\n      description: Get the metadata of the *Notification*.\n      operationId: Notification.getMetadata\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List metadata\n      tags:\n        - Notification\n    parameters:\n      - $ref: \"#/components/parameters/notificationId\"\n    patch:\n      description: \u003e\n        Modify the metadata of a *Notification*.\n\n        Keys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n      operationId: Notification.patchMetadata\n      requestBody:\n        $ref: \"#/components/requestBodies/MetadataPatch\"\n      responses:\n        \"200\":\n          description: Successful. The new metadata is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessNotification\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify metadata of a Notification\n      tags:\n        - Notification\n  /places:\n    get:\n      description: List the *Places* to which the *Token* has access.\n      operationId: Me.places\n      parameters:\n        - $ref: \"#/components/parameters/embedMetadata\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlaceItem\"\n                type: array\n                uniqueItems: true\n      summary: List accessible Places\n      tags:\n        - Entry points\n  \"/places/{placeId}\":\n    get:\n      description: Get information about a *Place*.\n      operationId: Places.get\n      responses:\n        \"200\":\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Place\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorAccessPlace\"\n      summary: Information about a Place\n      tags:\n        - Place\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n    patch:\n      description: |\n        Change information about a *Place*.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Place.patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PlacePatch\"\n        required: true\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/PatchOK\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessAccount\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Update a Place\n      tags:\n        - Place\n  \"/places/{placeId}/buses\":\n    get:\n      description: \u003e-\n        Get the list of *Buses* available on the gateway of this *Place*.\n\n        If `withPairing` is `true`, return only buses that allow device pairing (see `/places/{placeId}/buses/{busId}/pairing`).\n      operationId: Place.buses\n      parameters:\n        - description: Filter out buses that have no pairing window\n          in: query\n          name: withPairing\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BusItem\"\n                type: array\n                uniqueItems: true\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessBus\"\n      summary: List Buses\n      tags:\n        - Place\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n  \"/places/{placeId}/buses/{busId}/pairing\":\n    get:\n      description: |\n        Get the state of the pairing window of the *Bus*.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Place.pairing\n      responses:\n        \"200\":\n          description: State information.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BusPairing\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessBus\"\n      summary: State of the pairing window\n      tags:\n        - Place\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n      - $ref: \"#/components/parameters/busId\"\n    put:\n      description: |\n        Open/Close the pairing window.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Place.openPairing\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BusPairing\"\n        required: true\n      responses:\n        \"200\":\n          description: State information.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BusPairing\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessBus\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Open/Close the pairing window\n      tags:\n        - Place\n  \"/places/{placeId}/devices\":\n    get:\n      description: Get the list of *Devices* available in this *Place*.\n      operationId: Place.devices\n      parameters:\n        - $ref: \"#/components/parameters/devicesSelector.Opt\"\n        - $ref: \"#/components/parameters/embedMetadata\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DeviceItem\"\n                type: array\n                uniqueItems: true\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List of Devices\n      tags:\n        - Device\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n  \"/places/{placeId}/electricity/autonomy\":\n    get:\n      description: |\n        Compute the autonomy rate of the *Place* on a time period.\n\n        `autonomy = 1 - (elec_drawn / elec_total_usage)`\n      operationId: Place.Electricity.autonomy\n      parameters:\n        - $ref: \"#/components/parameters/when.Req\"\n        - $ref: \"#/components/parameters/span.Req\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ElectricityAutonomy\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Get autonomy rate of the place\n      tags:\n        - Electricity\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n  \"/places/{placeId}/electricity/flows\":\n    get:\n      description: |\n        Get the mapping of virtual electricity flows to functionalities.\n\n        Some rules are applied to expand the virtual flows using the concrete\n        flows available.\n\n        The `factor` tells how each energy value coming from a functionality\n        must be added with values from other functionality to compute the\n        energy of the virtual flow. Factors are usually `1` or `-1`.\n\n        The `code` property gives the result which may be partial:\n        - If all flows are available, `200000` is returned.\n        - If no flows are available (indicating that the place has no\n          electricity functionality or that no functionality has been attached\n          to a flow), the `code` is `200001`. The `missing` property contains\n          all the requested flows.\n        - If some flows are missing, the `code` is `200002` and the `missing`\n          property lists them.\n      operationId: Place.Electricity.getFlows\n      parameters:\n        - description: Names of the flows requested\n          in: query\n          name: flows\n          required: true\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              enum:\n                - battery_charge\n                - battery_discharge\n                - battery_grid\n                - elec_total_gen\n                - elec_total_usage\n                - elec_feed_in\n                - elec_drawn\n                - elec_local\n                - elec_from_household\n                - elec_to_pv\n                - elec_usage\n              type: string\n      responses:\n        \"200\":\n          description: Place is available. `code` gives the functional result.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ElectricityFlows\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Get electricity virtual flows\n      tags:\n        - Electricity\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n  \"/places/{placeId}/electricity/flows/setup\":\n    get:\n      description: |\n        Get the mapping of functionalities to electricity flows.\n\n        A functionality is attached to *at most* one flow.\n      operationId: Place.Electricity.getFlowsSetup\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ElectricityFlowsSetup\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Get electricity flows setup\n      tags:\n        - Electricity\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n  \"/places/{placeId}/electricity/self-consumption\":\n    get:\n      description: |\n        Compute the self-consumption rate of the *Place* on a time period.\n\n        `selfConsumption = 1 - (elec_feed_in / elec_total_usage)`\n      operationId: Place.Electricity.selfConsumption\n      parameters:\n        - $ref: \"#/components/parameters/when.Req\"\n        - $ref: \"#/components/parameters/span.Req\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ElectricitySelfConsumption\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Get self-consumption rate of the place\n      tags:\n        - Electricity\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n  \"/places/{placeId}/functionalities\":\n    get:\n      description: Get the list of *Functionalities* available in this *Place*.\n      operationId: Place.functionalities\n      parameters:\n        - $ref: \"#/components/parameters/embedMetadata\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/FunctionalityItem\"\n                type: array\n                uniqueItems: true\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List Functionalities\n      tags:\n        - Functionality\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n      - $ref: \"#/components/parameters/devicesSelector.Opt\"\n      - $ref: \"#/components/parameters/functionalitiesSelector.Opt\"\n  \"/places/{placeId}/metadata\":\n    get:\n      description: Get the metadata.\n      operationId: Place.getMetadata\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List metadata\n      tags:\n        - Place\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n    patch:\n      description: \u003e\n        Modify the metadata.\n\n        Keys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n      operationId: Place.patchMetadata\n      requestBody:\n        $ref: \"#/components/requestBodies/MetadataPatch\"\n      responses:\n        \"200\":\n          description: Successful. The new metadata is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessPlace\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify metadata\n      tags:\n        - Place\n  \"/places/{placeId}/notifications\":\n    get:\n      description: Get the list of *Notifications* available in this *Place*.\n      operationId: Place.notifications\n      parameters:\n        - $ref: \"#/components/parameters/embedMetadata\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/NotificationItem\"\n                type: array\n                uniqueItems: true\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List Notifications\n      tags:\n        - Notification\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n    post:\n      description: Create a new *Notification*.\n      operationId: Place.newNotification\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationNew\"\n        required: true\n      responses:\n        \"201\":\n          description: \"*Notification* successfully created.\"\n          headers:\n            Location:\n              description: Path of the Notification created (`/notifications/{id}`)\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationCreated\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessPlace\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Create a Notification\n      tags:\n        - Notification\n  \"/places/{placeId}/programs\":\n    get:\n      description: Get the list of *Programs* available in this *Place*.\n      operationId: Place.programs\n      parameters:\n        - $ref: \"#/components/parameters/embedMetadata\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProgramItem\"\n                type: array\n                uniqueItems: true\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List Programs\n      tags:\n        - Program\n    parameters:\n      - $ref: \"#/components/parameters/placeId\"\n    post:\n      description: |\n        Create a new *Program*.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Place.newProgram\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProgramNew\"\n        required: true\n      responses:\n        \"201\":\n          description: \"*Program* successfully created.\"\n          headers:\n            Location:\n              description: Path of the Program created (`/programs/{id}`)\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProgramCreated\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessPlace\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Create a Program\n      tags:\n        - Program\n  \"/places/{placeId}/run/{action}\":\n    post:\n      description: \u003e\n        Run an *Action* on zero, one or multiple *Functionalities* selected with\n        tags.\n\n\n        *Device* and *Functionality* selection are combined with Â« AND Â».\n\n\n        If no functionality is matched by the device/functionality selection, an empty array is returned.\n      operationId: Place.run\n      parameters:\n        - $ref: \"#/components/parameters/placeId\"\n        - $ref: \"#/components/parameters/action\"\n        - $ref: \"#/components/parameters/devicesSelector.Req\"\n        - $ref: \"#/components/parameters/functionalitiesSelector.Req\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ActionArgs\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ActionMultiResultOK\"\n        \"450\":\n          $ref: \"#/components/responses/ErrorGatewayUnreachable\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Run actions\n      tags:\n        - Action\n  \"/programs/{programId}\":\n    delete:\n      description: |\n        Delete a *Program*.\n\n        **Note**: requires full access to the *Account*.\n      operationId: Program.delete\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/DeleteOK\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessProgram\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Delete a Program\n      tags:\n        - Program\n    get:\n      description: |\n        Get information about a *Program*.\n      operationId: Programs.get\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Program\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessProgram\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Information about a Program\n      tags:\n        - Program\n    parameters:\n      - $ref: \"#/components/parameters/programId\"\n    patch:\n      description: |\n        Modify a *Program*:\n        - name\n        - status (enabled/disabled)\n        - code\n\n        **Note**: requires full access to the *Account*.\n      operationId: Program.patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProgramPatch\"\n        required: true\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/PatchOK\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessProgram\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify a Program\n      tags:\n        - Program\n  \"/programs/{programId}/log\":\n    get:\n      description: Get the execution history list of this *Program*.\n      operationId: Program.log\n      parameters:\n        - $ref: \"#/components/parameters/from.Req\"\n        - $ref: \"#/components/parameters/to\"\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProgramLog\"\n                type: array\n                uniqueItems: true\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessProgram\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: History of executions of a Program\n      tags:\n        - Program\n    parameters:\n      - $ref: \"#/components/parameters/programId\"\n  \"/programs/{programId}/metadata\":\n    get:\n      description: Get the metadata of the *Program*.\n      operationId: Program.getMetadata\n      responses:\n        \"200\":\n          description: Successful.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: List metadata\n      tags:\n        - Program\n    parameters:\n      - $ref: \"#/components/parameters/programId\"\n    patch:\n      description: \u003e\n        Modify the metadata of a *Program*.\n\n        Keys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n      operationId: Program.patchMetadata\n      requestBody:\n        $ref: \"#/components/requestBodies/MetadataPatch\"\n      responses:\n        \"200\":\n          description: Successful. The new metadata is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n        \"304\":\n          $ref: \"#/components/responses/PatchNotModified\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessProgram\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Modify metadata of a Program\n      tags:\n        - Program\n  \"/programs/{programId}/run\":\n    parameters:\n      - $ref: \"#/components/parameters/programId\"\n    post:\n      description: |-\n        Launch the *Program*.\n        The result will be available later in the run history.\n      operationId: Program.run\n      responses:\n        \"204\":\n          description: \"*Program* successfully launched.\"\n        \"403\":\n          $ref: \"#/components/responses/ErrorAccessProgram\"\n        default:\n          $ref: \"#/components/responses/DefaultError\"\n      summary: Run the Program\n      tags:\n        - Program\nservers:\n  - url: https://ioe2api.ijenko.net\ncomponents:\n  parameters:\n    accountId:\n      description: Unique identifier of an *Account*.\n      in: path\n      name: accountId\n      required: true\n      schema:\n        type: string\n    action:\n      description: Identifier of an *Action* inside a *Functionality*.\n      in: path\n      name: action\n      required: true\n      schema:\n        type: string\n    attributeName:\n      description: Identifier of an *Attribute* inside a *Functionality*.\n      in: path\n      name: attributeName\n      required: true\n      schema:\n        type: string\n    attributesNames:\n      description: One or multiple *Attribute* names separated by commas\n      in: query\n      name: names\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n    busId:\n      description: Unique identifier of a *Bus*.\n      in: path\n      name: busId\n      required: true\n      schema:\n        type: string\n    deviceId:\n      description: Unique identifier of a *Device*.\n      in: path\n      name: deviceId\n      required: true\n      schema:\n        type: string\n    devicesSelector.Opt:\n      description: Devices selector. Device tags or device classes or device ids or '*' for\n        any. Multiple values are separated by '|' and interpreted as Â« OR Â».\n      in: query\n      name: devices\n      required: false\n      schema:\n        type: string\n        pattern: ^(?:\\\\*|(?:[A-Z][A-Z0-9]{3}|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22})(?:\\\\|(?:[A-Z][A-Z0-9]{3}|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22}))*)$\n    devicesSelector.Req:\n      description: Devices selector. Device tags or device classes or device ids or '*' for\n        any. Multiple values are separated by '|' and interpreted as Â« OR Â».\n      in: query\n      name: devices\n      required: true\n      schema:\n        type: string\n        pattern: ^(?:\\\\*|(?:[A-Z][A-Z0-9]{3}|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22})(?:\\\\|(?:[A-Z][A-Z0-9]{3}|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22}))*)$\n    embedMetadata:\n      description: \u003e\n        Request to include the given keys of metadata in the response. If a key\n        doesn't exist on the resource it is ignored.\n\n        **Note:** This only applies to the top level resources.\n      in: query\n      name: embed-metadata\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n    from.Opt:\n      description: Beginning of the time interval.\n      in: query\n      name: from\n      required: false\n      schema:\n        type: string\n        format: date-time\n    from.Req:\n      description: Beginning of the time interval.\n      in: query\n      name: from\n      required: true\n      schema:\n        type: string\n        format: date-time\n    functionalitiesSelector.Opt:\n      description: \u003e\n        Functionality selector: Functionality tags or functionality class\n        (optionally, '@' followed by a endpoint in decimal) or '*' for all.\n        Multiple values are separated by '|' and are interpreted as Â« OR Â».\n      in: query\n      name: functionalities\n      required: false\n      schema:\n        type: string\n        pattern: ^(?:\\\\*|(?:[A-Z][A-Za-z0-9]+(?:@(?:0|1[0-9]{,2}|[3-9][0-9]?|2(?:[0-4][0-9]?|5[0-5]?|[6-9])?))?|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22})(?:\\\\|(?:[A-Z][A-Za-z0-9]+(?:@(?:0|1[0-9]{,2}|[3-9][0-9]?|2(?:[0-4][0-9]?|5[0-5]?|[6-9])?))?|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22}))*)$\n    functionalitiesSelector.Req:\n      description: \u003e\n        Functionality selector: Functionality tags or functionality class\n        (optionally, '@' followed by a endpoint in decimal) or '*' for all.\n        Multiple values are separated by '|' and are interpreted as Â« OR Â».\n      in: query\n      name: functionalities\n      required: true\n      schema:\n        type: string\n        pattern: ^(?:\\\\*|(?:[A-Z][A-Za-z0-9]+(?:@(?:0|1[0-9]{,2}|[3-9][0-9]?|2(?:[0-4][0-9]?|5[0-5]?|[6-9])?))?|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22})(?:\\\\|(?:[A-Z][A-Za-z0-9]+(?:@(?:0|1[0-9]{,2}|[3-9][0-9]?|2(?:[0-4][0-9]?|5[0-5]?|[6-9])?))?|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22}))*)$\n    functionalityId:\n      description: Unique identifier of a *Functionality*.\n      in: path\n      name: functionalityId\n      required: true\n      schema:\n        type: string\n    notificationId:\n      description: Unique identifier of a *Notification*.\n      in: path\n      name: notificationId\n      required: true\n      schema:\n        type: string\n    placeId:\n      description: Unique identifier of a *Place*.\n      in: path\n      name: placeId\n      required: true\n      schema:\n        type: string\n    programId:\n      description: Unique identifier of a *Program*.\n      in: path\n      name: programId\n      required: true\n      schema:\n        type: string\n    span.Req:\n      description: \"Timespan: H (hour), D (day), Wmo (week starting on Monday), Wsu (week\n        starting on Sunday), M (month), Y (year)\"\n      in: query\n      name: span\n      required: true\n      schema:\n        type: string\n        enum:\n          - H\n          - D\n          - Wmo\n          - Wsu\n          - M\n          - Y\n    to:\n      description: |\n        End of the interval. Default: now.\n      in: query\n      name: to\n      required: false\n      schema:\n        type: string\n        format: date-time\n    tokenId:\n      description: Identifier of the token\n      in: path\n      name: tokenId\n      required: true\n      schema:\n        type: string\n    userId:\n      description: Unique identifier of a *User*.\n      in: path\n      name: userId\n      required: true\n      schema:\n        type: string\n    when.Req:\n      description: A time part of the time span.\n      in: query\n      name: when\n      required: true\n      schema:\n        type: string\n        format: date-time\n  responses:\n    ActionMultiResultOK:\n      description: Successful.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ActionMultiResult\"\n    DefaultError:\n      description: Other error.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DefaultError\"\n    DeleteOK:\n      description: Resource successfully deleted.\n    ErrorAccessAccount:\n      description: |\n        The authentication token doesn't allow to modify the *Account*.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorEntity\"\n    ErrorAccessBus:\n      description: \u003e\n        *Bus* doesn't exist or the requester doesn't have appropriate access to\n        the *Place*.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorSubEntity\"\n    ErrorAccessDevice:\n      description: \u003e\n        *Device* doesn't exist or the requester doesn't have appropriate access\n        to the *Place*.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorEntity\"\n    ErrorAccessFunctionality:\n      description: \u003e\n        *Functionality* doesn't exist or the requester doesn't have appropriate\n        access to the *Place*.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorEntity\"\n    ErrorAccessNotification:\n      description: \u003e\n        *Notification* doesn't exist or the requester doesn't have appropriate\n        access to the *Place*.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorEntity\"\n    ErrorAccessPlace:\n      description: |\n        *Place* doesn't exist or the requester doesn't have access.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorEntity\"\n    ErrorAccessProgram:\n      description: \u003e\n        *Program* doesn't exist or the requester doesn't have appropriate access\n        to the *Place*.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorEntity\"\n    ErrorAccessUser:\n      description: \u003e\n        *User* doesn't exist in this *Account* or the requester doesn't have\n        access to a *Place* on which this *User* has access.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorEntity\"\n    ErrorGatewayUnreachable:\n      description: The gateway of the Place is not reachable.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorGatewayUnreachable\"\n    ErrorWriteAttribute:\n      description: |\n        *Attribute* is not writable.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorSubEntity\"\n    PatchNotModified:\n      description: Successful, but nothing changed.\n    PatchOK:\n      description: Modification successful.\n  requestBodies:\n    ActionArgs:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ActionArgs\"\n      required: true\n    MetadataPatch:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/MetadataPatch\"\n      description: |\n        Modifications to apply to the metadata of the resource.\n      required: true\n    TagsPatch:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TagsPatch\"\n      description: |\n        Modifications to apply to the tags list of the resource.\n      required: true\n  securitySchemes:\n    Token_in_Access-Token_header:\n      description: Token in Access-Token header\n      in: header\n      name: Access-Token\n      type: apiKey\n    Token_in_query:\n      description: Token in query\n      in: query\n      name: token\n      type: apiKey\n  schemas:\n    AccountId:\n      description: Unique identifier of the *Account*\n      example: t1hqYcQITCFX-AObjs_t4Q\n      maxLength: 22\n      minLength: 22\n      pattern: ^[A-Za-z0-9-_]{22}$\n      readOnly: true\n      type: string\n    AccountLogin:\n      minLength: 1\n      type: string\n    ActionArgs:\n      example:\n        - true\n        - 1\n        - hello\n      items:\n        $ref: \"#/components/schemas/AnyJSON\"\n      type: array\n    ActionMultiResult:\n      items:\n        $ref: \"#/components/schemas/ActionResult\"\n      type: array\n    ActionName:\n      minLength: 1\n      readOnly: true\n      type: string\n    ActionResult:\n      example:\n        functionality: RnVuY3Rpb25hbGl0eTAwMA\n        result: []\n        status: 200\n      properties:\n        functionality:\n          $ref: \"#/components/schemas/FunctionalityId\"\n        result:\n          items:\n            $ref: \"#/components/schemas/AnyJSON\"\n          type: array\n        status:\n          description: Return code (HTTP status code)\n          example: 200\n          maximum: 599\n          minimum: 200\n          type: integer\n      required:\n        - status\n      type: object\n      x-links:\n        - href: /functionalities/{functionality}\n          rel: functionality\n    AnyJSON:\n      description: null/boolean/integer/number/string/object/array\n      x-type: any\n    AppId:\n      minLength: 1\n      type: string\n    AttributeName:\n      minLength: 1\n      readOnly: true\n      type: string\n    AttributeValue:\n      example:\n        value: 0\n        when: 2014-02-17T12:31:00Z\n      properties:\n        value:\n          $ref: \"#/components/schemas/AnyJSON\"\n        when:\n          format: date-time\n          type: string\n      required:\n        - when\n        - value\n      type: object\n    AttributesValues:\n      additionalProperties:\n        items:\n          $ref: \"#/components/schemas/AttributeValue\"\n        type: array\n      description: Keys are attribute ids\n      example:\n        Counter:\n          - value: 0\n            when: 2014-02-17T12:31:00Z\n        Schedule:\n          - value:\n              - DTSTAMP: 20120101T000000Z\n                DTSTART:\n                  \"\": 20120101T063000\n                  TZID: Europe/Paris\n                RRULE:\n                  FREQ: DAILY\n                SUMMARY: \"2\"\n                UID: HP-06h30@si.ijenko.net\n              - DTSTAMP: 20120101T000000Z\n                DTSTART:\n                  \"\": 20120101T223000\n                  TZID: Europe/Paris\n                RRULE:\n                  FREQ: DAILY\n                SUMMARY: \"3\"\n                UID: HC-22h30@si.ijenko.net\n            when: 2014-02-17T00:00:00Z\n      type: object\n    AuthChangePassword:\n      properties:\n        newPassword:\n          $ref: \"#/components/schemas/Password\"\n        oldPassword:\n          $ref: \"#/components/schemas/Password\"\n      required:\n        - oldPassword\n        - newPassword\n      type: object\n    AuthLogin:\n      properties:\n        appId:\n          $ref: \"#/components/schemas/AppId\"\n        login:\n          minLength: 1\n          type: string\n        password:\n          $ref: \"#/components/schemas/Password\"\n        ttl:\n          description: Desired maximum life-time in seconds for the refresh token\n          example: 1800\n          minimum: 0\n          type: integer\n      required:\n        - login\n        - password\n        - appId\n      type: object\n    AuthRefresh:\n      properties:\n        appId:\n          $ref: \"#/components/schemas/AppId\"\n        refreshToken:\n          minLength: 1\n          type: string\n      required:\n        - refreshToken\n        - appId\n      type: object\n    AuthResetPassword:\n      properties:\n        appId:\n          $ref: \"#/components/schemas/AppId\"\n        email:\n          $ref: \"#/components/schemas/UserEmail\"\n        login:\n          minLength: 1\n          type: string\n      required:\n        - appId\n      type: object\n    AuthTokens:\n      properties:\n        accessToken:\n          minLength: 1\n          type: string\n        accessTokenExpires:\n          format: date-time\n          type: string\n        refreshToken:\n          minLength: 1\n          type: string\n        refreshTokenExpires:\n          format: date-time\n          type: string\n      required:\n        - accessToken\n        - refreshToken\n        - accessTokenExpires\n        - refreshTokenExpires\n      type: object\n    BusId:\n      minLength: 3\n      type: string\n    BusItem:\n      properties:\n        functionality:\n          $ref: \"#/components/schemas/FunctionalityId\"\n        id:\n          $ref: \"#/components/schemas/BusId\"\n        protocol:\n          $ref: \"#/components/schemas/BusProtocol\"\n      readOnly: true\n      required:\n        - id\n        - functionality\n        - protocol\n      type: object\n    BusPairing:\n      properties:\n        duration:\n          description: Duration of the pairing window.\n          type: integer\n        enabled:\n          type: boolean\n      required:\n        - enabled\n      type: object\n    BusProtocol:\n      minLength: 1\n      type: string\n    CountryCode:\n      description: Country code (ISO 3166-1 alpha-2)\n      example: FR\n      maxLength: 2\n      minLength: 2\n      pattern: ^[A-Z][A-Z]$\n      type: string\n    DefaultError:\n      description: Any error.\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n      required:\n        - code\n        - message\n      type: object\n    Device:\n      properties:\n        address:\n          $ref: \"#/components/schemas/DeviceAddress\"\n        attributes:\n          additionalProperties:\n            additionalProperties:\n              $ref: \"#/components/schemas/AnyJSON\"\n            description: Each key is an attribute name\n            type: object\n          description: Each key is \u003cFunctionalityClass\u003e@\u003cEndpoint\u003e\n          type: object\n        class:\n          $ref: \"#/components/schemas/DeviceClass\"\n        functionalities:\n          items:\n            $ref: \"#/components/schemas/FunctionalityItem\"\n          readOnly: true\n          type: array\n          uniqueItems: true\n        isOnline:\n          readOnly: true\n          type: boolean\n        manufacturer:\n          readOnly: true\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        model:\n          readOnly: true\n          type: string\n        name:\n          description: Name of the device. User defined.\n          minLength: 2\n          type: string\n        place:\n          $ref: \"#/components/schemas/PlaceId\"\n        protocol:\n          $ref: \"#/components/schemas/BusProtocol\"\n        tags:\n          items:\n            $ref: \"#/components/schemas/DeviceTag\"\n          type: array\n          uniqueItems: true\n      required:\n        - place\n        - class\n        - address\n        - isOnline\n        - functionalities\n        - tags\n      type: object\n      x-links:\n        - href: /places/{place}\n          rel: place\n    DeviceAddress:\n      minLength: 1\n      pattern: ^[A-Z0-9]{1,32}$\n      type: string\n    DeviceClass:\n      maxLength: 4\n      minLength: 4\n      pattern: ^[A-Z][A-Z0-9]{3}$\n      type: string\n    DeviceId:\n      description: Unique identifier of the *Device*\n      example: RGV2aWNlMDAwMDAwMDAwMA\n      maxLength: 22\n      minLength: 22\n      pattern: ^[A-Za-z0-9-_]{22}$\n      readOnly: true\n      type: string\n    DeviceItem:\n      properties:\n        address:\n          $ref: \"#/components/schemas/DeviceAddress\"\n        class:\n          $ref: \"#/components/schemas/DeviceClass\"\n        id:\n          $ref: \"#/components/schemas/DeviceId\"\n        isOnline:\n          type: boolean\n        metadata:\n          $ref: \"#/components/schemas/MetadataSelected\"\n        name:\n          description: Name of the *Device* as defined by the user. Can be used for user\n            interfaces.\n          minLength: 2\n          type: string\n        place:\n          $ref: \"#/components/schemas/PlaceId\"\n        tags:\n          items:\n            $ref: \"#/components/schemas/DeviceTag\"\n          type: array\n          uniqueItems: true\n      readOnly: true\n      required:\n        - id\n        - place\n        - class\n        - address\n        - isOnline\n        - tags\n      type: object\n      x-links:\n        - href: /devices/{id}\n          rel: full\n        - href: /places/{place}\n          rel: place\n    DevicePatch:\n      properties:\n        name:\n          description: Name of the *Device* as defined by the user. Can be used for user\n            interfaces.\n          minLength: 2\n          type: string\n      type: object\n    DeviceTag:\n      maxLength: 21\n      minLength: 1\n      pattern: ^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$\n      type: string\n    ElectricityAutonomy:\n      example:\n        autonomy: 0.4\n        code: 200000\n        from: 2016-03-02T09:00:00Z\n        to: 2016-03-02T10:00:00Z\n      properties:\n        autonomy:\n          description: Average electricity autonomy in % (value in range [0, 1], rounded)\n          example: 0.4\n          maximum: 1\n          minimum: 0\n          type: number\n        code:\n          $ref: \"#/components/schemas/ElectricityStatusCode\"\n        from:\n          format: date-time\n          type: string\n        message:\n          description: Message for cases where computation is not possible (codes 200001,\n            200002)\n          minLength: 1\n          type: string\n        to:\n          format: date-time\n          type: string\n      required:\n        - code\n      type: object\n    ElectricityFlow:\n      items:\n        $ref: \"#/components/schemas/ElectricityFunctionality\"\n      type: array\n      uniqueItems: true\n    ElectricityFlowFormula:\n      items:\n        $ref: \"#/components/schemas/ElectricityFlowFunctionality\"\n      type: array\n      uniqueItems: true\n    ElectricityFlowFunctionality:\n      example:\n        class: ElecMetering\n        factor: 1\n        flow: elec_total_gen\n        id: RnVuY3Rpb25hbGl0eTAwMA\n      properties:\n        class:\n          $ref: \"#/components/schemas/FunctionalityClass\"\n        factor:\n          type: integer\n        flow:\n          $ref: \"#/components/schemas/ElectricityFlowName\"\n        id:\n          $ref: \"#/components/schemas/FunctionalityId\"\n      required:\n        - id\n        - class\n        - flow\n        - factor\n      type: object\n      x-links:\n        - href: /functionalities/{id}\n          rel: full\n    ElectricityFlowName:\n      description: Name of an electricity flow\n      enum:\n        - battery_charge\n        - battery_discharge\n        - battery_grid\n        - elec_total_gen\n        - elec_total_usage\n        - elec_feed_in\n        - elec_drawn\n        - elec_local\n        - elec_from_household\n        - elec_to_pv\n        - elec_usage\n      minLength: 1\n      type: string\n    ElectricityFlows:\n      example:\n        code: 200000\n        flows:\n          elec_local:\n            - class: ElecMetering\n              factor: 1\n              id: SF4_y4SoTCpYXgGODJplJQ\n          elec_total_usage:\n            - class: ElecMetering\n              factor: 1\n              flow: elec_total_gen\n              id: SF4_y4SoTCpYXgGODJplJQ\n            - class: ElecSmartMetering\n              factor: 1\n              flow: elec_drawn\n              id: lvxvQ9SqXCpYSqHOJI7tIA\n            - class: ElecSmartMetering\n              factor: -1\n              flow: elec_feed_in\n              id: d1xvwdWKWCpYH6GPjovnLg\n      properties:\n        code:\n          $ref: \"#/components/schemas/ElectricityStatusCode\"\n        flows:\n          $ref: \"#/components/schemas/ElectricityVirtualFlows\"\n        message:\n          $ref: \"#/components/schemas/ElectricityStatusMessage\"\n        missing:\n          $ref: \"#/components/schemas/ElectricityMissingFlows\"\n      required:\n        - code\n      type: object\n    ElectricityFlowsSetup:\n      example:\n        elec_drawn:\n          - class: ElecSmartMetering\n            id: lvxvQ9SqXCpYSqHOJI7tIA\n        elec_feed_in:\n          - class: ElecSmartMetering\n            id: d1xvwdWKWCpYH6GPjovnLg\n        elec_total_gen:\n          - class: ElecMetering\n            id: SF4_y4SoTCpYXgGODJplJQ\n      properties:\n        battery_charge:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        battery_discharge:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        battery_grid:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        elec_drawn:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        elec_feed_in:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        elec_from_household:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        elec_local:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        elec_to_pv:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        elec_total_gen:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        elec_total_usage:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n        elec_usage:\n          $ref: \"#/components/schemas/ElectricityFlow\"\n      type: object\n    ElectricityFunctionality:\n      example:\n        class: ElecMetering\n        id: RnVuY3Rpb25hbGl0eTAwMA\n      properties:\n        class:\n          $ref: \"#/components/schemas/FunctionalityClass\"\n        id:\n          $ref: \"#/components/schemas/FunctionalityId\"\n      required:\n        - id\n        - class\n      type: object\n      x-links:\n        - href: /functionalities/{id}\n          rel: full\n    ElectricityMissingFlows:\n      description: List of missing flows (not available either directly or indirectly)\n      properties:\n        battery_charge:\n          enum:\n            - true\n          type: boolean\n        battery_discharge:\n          enum:\n            - true\n          type: boolean\n        battery_grid:\n          enum:\n            - true\n          type: boolean\n        elec_drawn:\n          enum:\n            - true\n          type: boolean\n        elec_feed_in:\n          enum:\n            - true\n          type: boolean\n        elec_from_household:\n          enum:\n            - true\n          type: boolean\n        elec_local:\n          enum:\n            - true\n          type: boolean\n        elec_to_pv:\n          enum:\n            - true\n          type: boolean\n        elec_total_gen:\n          enum:\n            - true\n          type: boolean\n        elec_total_usage:\n          enum:\n            - true\n          type: boolean\n        elec_usage:\n          enum:\n            - true\n          type: boolean\n      type: object\n    ElectricitySelfConsumption:\n      example:\n        code: 200000\n        from: 2016-03-02T10:00:00Z\n        selfConsumption: 1\n        to: 2016-03-02T11:00:00Z\n      properties:\n        code:\n          $ref: \"#/components/schemas/ElectricityStatusCode\"\n        from:\n          format: date-time\n          type: string\n        message:\n          description: Message for cases where computation is not possible (codes 200001,\n            200002)\n          minLength: 1\n          type: string\n        selfConsumption:\n          description: Average self-consumption rate in % (value in range [0, 1], rounded)\n          example: 0.555555\n          maximum: 1\n          minimum: 0\n          type: number\n        to:\n          format: date-time\n          type: string\n      required:\n        - code\n      type: object\n    ElectricityStatusCode:\n      description: Status code. 200000 means OK. Other codes indicate full or partial\n        failure.\n      enum:\n        - 200000\n        - 200001\n        - 200002\n      example: 200000\n      type: integer\n    ElectricityStatusMessage:\n      description: Message for cases where computation is not possible (codes 200001,\n        200002)\n      minLength: 1\n      type: string\n    ElectricityVirtualFlows:\n      properties:\n        battery_charge:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        battery_discharge:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        battery_grid:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        elec_drawn:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        elec_feed_in:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        elec_from_household:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        elec_local:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        elec_to_pv:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        elec_total_gen:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        elec_total_usage:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n        elec_usage:\n          $ref: \"#/components/schemas/ElectricityFlowFormula\"\n      type: object\n    ErrorEntity:\n      description: An error related to access to an entity (400, 403, 404, 410)\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n        resource:\n          $ref: \"#/components/schemas/ResourceRef\"\n      required:\n        - code\n        - message\n        - resource\n      type: object\n    ErrorGatewayUnreachable:\n      description: The gateway of the Place is not reachable.\n      properties:\n        code:\n          enum:\n            - \"450\"\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\n      type: object\n    ErrorSubEntity:\n      description: An error related to access to an sub-entity (400, 403, 404, 410)\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n        resource:\n          properties:\n            entity:\n              enum:\n                - Action\n                - Attribute\n                - Bus\n              type: string\n            href:\n              minLength: 1\n              type: string\n            id:\n              minLength: 1\n              type: string\n            parent:\n              description: Container resource.\n              properties:\n                entity:\n                  enum:\n                    - Place\n                    - Functionality\n                  type: string\n                id:\n                  minLength: 1\n                  type: string\n              required:\n                - entity\n                - id\n              type: object\n          required:\n            - id\n            - entity\n            - href\n          type: object\n      required:\n        - code\n        - message\n        - resource\n      type: object\n    Functionality:\n      properties:\n        actions:\n          items:\n            $ref: \"#/components/schemas/ActionName\"\n          readOnly: true\n          type: array\n          uniqueItems: true\n        attributes:\n          items:\n            $ref: \"#/components/schemas/AttributeName\"\n          readOnly: true\n          type: array\n          uniqueItems: true\n        class:\n          $ref: \"#/components/schemas/FunctionalityClass\"\n        device:\n          $ref: \"#/components/schemas/DeviceId\"\n        endpoint:\n          $ref: \"#/components/schemas/FunctionalityEndpoint\"\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          $ref: \"#/components/schemas/FunctionalityName\"\n        tags:\n          items:\n            $ref: \"#/components/schemas/FunctionalityTag\"\n          type: array\n          uniqueItems: true\n      required:\n        - class\n        - endpoint\n        - device\n        - attributes\n        - tags\n      type: object\n      x-links:\n        - href: /devices/{id}\n          rel: device\n    FunctionalityClass:\n      minLength: 2\n      pattern: ^[A-Z][A-Za-z0-9]+$\n      readOnly: true\n      type: string\n    FunctionalityCreated:\n      description: A resource has been created. The `resource` property gives its reference.\n      example:\n        code: 201\n        message: Functionality created\n        resource:\n          entity: Functionality\n          href: /functionalities/RnVuY3Rpb25hbGl0eTAwMA\n          id: RnVuY3Rpb25hbGl0eTAwMA\n      properties:\n        code:\n          enum:\n            - 201\n          example: 201\n          type: integer\n        message:\n          enum:\n            - Functionality created\n          type: string\n        resource:\n          $ref: \"#/components/schemas/FunctionalityResource\"\n      required:\n        - code\n        - message\n        - resource\n      type: object\n    FunctionalityEndpoint:\n      maximum: 255\n      minimum: 0\n      readOnly: true\n      type: integer\n    FunctionalityId:\n      description: Unique identifier of the *Functionality*\n      example: RnVuY3Rpb25hbGl0eTAwMA\n      maxLength: 22\n      minLength: 22\n      pattern: ^[A-Za-z0-9-_]{22}$\n      readOnly: true\n      type: string\n    FunctionalityItem:\n      properties:\n        class:\n          $ref: \"#/components/schemas/FunctionalityClass\"\n        device:\n          $ref: \"#/components/schemas/DeviceId\"\n        endpoint:\n          $ref: \"#/components/schemas/FunctionalityEndpoint\"\n        id:\n          $ref: \"#/components/schemas/FunctionalityId\"\n        metadata:\n          $ref: \"#/components/schemas/MetadataSelected\"\n        name:\n          $ref: \"#/components/schemas/FunctionalityName\"\n        tags:\n          items:\n            $ref: \"#/components/schemas/FunctionalityTag\"\n          type: array\n          uniqueItems: true\n      readOnly: true\n      required:\n        - id\n        - device\n        - class\n        - endpoint\n      type: object\n      x-links:\n        - href: /functionalities/{id}\n          rel: full\n        - href: /devices/{device}\n          rel: device\n    FunctionalityName:\n      description: Free functionality name\n      type: string\n    FunctionalityNew:\n      properties:\n        class:\n          $ref: \"#/components/schemas/FunctionalityClass\"\n        endpoint:\n          $ref: \"#/components/schemas/FunctionalityEndpoint\"\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          $ref: \"#/components/schemas/FunctionalityName\"\n        tags:\n          items:\n            $ref: \"#/components/schemas/FunctionalityTag\"\n          type: array\n          uniqueItems: true\n      required:\n        - class\n        - endpoint\n      type: object\n    FunctionalityPatch:\n      properties:\n        name:\n          $ref: \"#/components/schemas/FunctionalityName\"\n      type: object\n    FunctionalityResource:\n      example:\n        entity: Functionality\n        href: /functionalities/RnVuY3Rpb25hbGl0eTAwMA\n        id: RnVuY3Rpb25hbGl0eTAwMA\n      properties:\n        entity:\n          enum:\n            - Functionality\n          type: string\n        href:\n          minLength: 1\n          type: string\n        id:\n          $ref: \"#/components/schemas/FunctionalityId\"\n      required:\n        - id\n        - entity\n        - href\n      type: object\n    FunctionalityTag:\n      maxLength: 21\n      minLength: 1\n      pattern: ^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$\n      type: string\n    Locale:\n      description: \u003e\n        Locale identifier (language, region). See\n        https://tools.ietf.org/html/rfc5646 and\n        https://www.iana.org/assignments/lang-subtags-templates/lang-subtags-templates.xhtml\n        .\n      example: fr-FR\n      minLength: 2\n      pattern: ^[a-z]{2}[A-Za-z0-9-]*$\n      type: string\n    Metadata:\n      additionalProperties:\n        $ref: \"#/components/schemas/AnyJSON\"\n      description: Keys are limited to the same format as tags (up to 21 characters,\n        [a-z0-9], starting with [a-z]). Values can be any JSON value.\n      type: object\n    MetadataKey:\n      maxLength: 21\n      minLength: 1\n      pattern: ^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$\n      type: string\n    MetadataPatch:\n      properties:\n        add:\n          additionalProperties:\n            $ref: \"#/components/schemas/AnyJSON\"\n          description: list of pairs key/value to add/replace\n          type: object\n        remove:\n          description: list of keys to remove\n          items:\n            $ref: \"#/components/schemas/MetadataKey\"\n          type: array\n          uniqueItems: true\n      type: object\n    MetadataSelected:\n      additionalProperties:\n        $ref: \"#/components/schemas/AnyJSON\"\n      description: Subset of metadata attached to the resource selected using the\n        'embed-metadata' parameter\n      type: object\n    Notification:\n      properties:\n        data:\n          type: object\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          minLength: 1\n          type: string\n        place:\n          $ref: \"#/components/schemas/PlaceId\"\n        routing:\n          format: uri\n          type: string\n      required:\n        - name\n        - place\n      type: object\n      x-links:\n        - href: /places/{place}\n          rel: place\n    NotificationCreated:\n      description: A resource has been created. The `resource` property gives its reference.\n      example:\n        code: 201\n        message: Notification created\n        resource:\n          entity: Notification\n          href: /notifications/InovwcCIGM5X7KvKrJ7vJw\n          id: InovwcCIGM5X7KvKrJ7vJw\n      properties:\n        code:\n          enum:\n            - 201\n          example: 201\n          type: integer\n        message:\n          enum:\n            - Notification created\n          type: string\n        resource:\n          $ref: \"#/components/schemas/NotificationResource\"\n      required:\n        - code\n        - message\n        - resource\n      type: object\n    NotificationId:\n      description: Unique identifier of the *Notification*\n      example: InovwcCIGM5X7KvKrJ7vJw\n      maxLength: 22\n      minLength: 22\n      pattern: ^[A-Za-z0-9-_]{22}$\n      readOnly: true\n      type: string\n    NotificationItem:\n      description: Notification\n      properties:\n        id:\n          $ref: \"#/components/schemas/NotificationId\"\n        metadata:\n          $ref: \"#/components/schemas/MetadataSelected\"\n        name:\n          type: string\n      readOnly: true\n      required:\n        - id\n        - name\n      type: object\n      x-links:\n        - href: /notifications/{id}\n          rel: full\n    NotificationNew:\n      properties:\n        data:\n          type: object\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          minLength: 1\n          type: string\n        routing:\n          format: uri\n          type: string\n      required:\n        - name\n      type: object\n    NotificationPatch:\n      properties:\n        data:\n          type: object\n        name:\n          minLength: 1\n          type: string\n        routing:\n          format: uri\n          type: string\n      type: object\n    NotificationResource:\n      example:\n        entity: Notification\n        href: /notifications/InovwcCIGM5X7KvKrJ7vJw\n        id: InovwcCIGM5X7KvKrJ7vJw\n      properties:\n        entity:\n          enum:\n            - Notification\n          type: string\n        href:\n          minLength: 1\n          type: string\n        id:\n          $ref: \"#/components/schemas/NotificationId\"\n      required:\n        - id\n        - entity\n        - href\n      type: object\n    Password:\n      format: password\n      minLength: 5\n      type: string\n    PhoneNumber:\n      description: Phone number of the *User* in international format, for SMS\n        notifications.\n      example: \"+33177494646\"\n      minLength: 6\n      pattern: ^\\+[0-9]{5,}$\n      type: string\n    Place:\n      properties:\n        account:\n          $ref: \"#/components/schemas/AccountId\"\n        country:\n          $ref: \"#/components/schemas/CountryCode\"\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          example: â Home\n          minLength: 1\n          type: string\n        timeZone:\n          $ref: \"#/components/schemas/TimeZone\"\n        zipCode:\n          $ref: \"#/components/schemas/ZipCode\"\n      required:\n        - name\n        - zipCode\n        - country\n        - timeZone\n      type: object\n    PlaceCreated:\n      description: A resource has been created. The `resource` property gives its reference.\n      example:\n        code: 201\n        message: Place created\n        resource:\n          entity: Place\n          href: /places/3HA6YcSCTSFX6SPPrI9PxQ\n          id: 3HA6YcSCTSFX6SPPrI9PxQ\n      properties:\n        code:\n          enum:\n            - 201\n          example: 201\n          type: integer\n        message:\n          enum:\n            - Place created\n          type: string\n        resource:\n          $ref: \"#/components/schemas/PlaceResource\"\n      required:\n        - code\n        - message\n        - resource\n      type: object\n    PlaceId:\n      description: Unique identifier of the *Place*\n      example: 3HA6YcSCTSFX6SPPrI9PxQ\n      maxLength: 22\n      minLength: 22\n      pattern: ^[A-Za-z0-9-_]{22}$\n      readOnly: true\n      type: string\n    PlaceItem:\n      properties:\n        id:\n          $ref: \"#/components/schemas/PlaceId\"\n        name:\n          type: string\n      readOnly: true\n      required:\n        - id\n        - name\n      type: object\n      x-links:\n        - href: /places/{id}\n          rel: full\n    PlaceNew:\n      properties:\n        country:\n          $ref: \"#/components/schemas/CountryCode\"\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          example: â Home\n          minLength: 1\n          type: string\n        timeZone:\n          $ref: \"#/components/schemas/TimeZone\"\n        zipCode:\n          $ref: \"#/components/schemas/ZipCode\"\n      required:\n        - name\n        - zipCode\n        - country\n        - timeZone\n      type: object\n    PlacePatch:\n      properties:\n        country:\n          $ref: \"#/components/schemas/CountryCode\"\n        name:\n          example: â Home\n          minLength: 1\n          type: string\n        timeZone:\n          $ref: \"#/components/schemas/TimeZone\"\n        zipCode:\n          $ref: \"#/components/schemas/ZipCode\"\n      type: object\n    PlaceResource:\n      example:\n        entity: Place\n        href: /places/3HA6YcSCTSFX6SPPrI9PxQ\n        id: 3HA6YcSCTSFX6SPPrI9PxQ\n      properties:\n        entity:\n          enum:\n            - Place\n          type: string\n        href:\n          minLength: 1\n          type: string\n        id:\n          $ref: \"#/components/schemas/PlaceId\"\n      required:\n        - id\n        - entity\n        - href\n      type: object\n    Program:\n      properties:\n        code:\n          $ref: \"#/components/schemas/AnyJSON\"\n        enabled:\n          type: boolean\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          minLength: 1\n          type: string\n        place:\n          $ref: \"#/components/schemas/PlaceId\"\n      required:\n        - name\n        - enabled\n        - code\n      type: object\n      x-links:\n        - href: /places/{place}\n          rel: place\n    ProgramCreated:\n      description: A resource has been created. The `resource` property gives its reference.\n      example:\n        code: 201\n        message: Program created\n        resource:\n          entity: Program\n          href: /programs/3_J_6ZWICc5X_KverorNvw\n          id: 3_J_6ZWICc5X_KverorNvw\n      properties:\n        code:\n          enum:\n            - 201\n          example: 201\n          type: integer\n        message:\n          enum:\n            - Program created\n          type: string\n        resource:\n          $ref: \"#/components/schemas/ProgramResource\"\n      required:\n        - code\n        - message\n        - resource\n      type: object\n    ProgramId:\n      description: Unique identifier of the *Program*\n      example: 3_J_6ZWICc5X_KverorNvw\n      maxLength: 22\n      minLength: 22\n      pattern: ^[A-Za-z0-9-_]{22}$\n      readOnly: true\n      type: string\n    ProgramItem:\n      properties:\n        enabled:\n          type: boolean\n        id:\n          $ref: \"#/components/schemas/ProgramId\"\n        metadata:\n          $ref: \"#/components/schemas/MetadataSelected\"\n        name:\n          type: string\n      readOnly: true\n      required:\n        - id\n        - name\n        - enabled\n      type: object\n      x-links:\n        - href: /programs/{id}\n          rel: full\n    ProgramLog:\n      properties:\n        actions:\n          items:\n            $ref: \"#/components/schemas/ActionResult\"\n          type: array\n        errors:\n          items:\n            type: string\n          type: array\n        notifications:\n          items:\n            $ref: \"#/components/schemas/NotificationId\"\n          type: array\n          uniqueItems: true\n        when:\n          format: date-time\n          type: string\n      required:\n        - when\n      type: object\n    ProgramNew:\n      example:\n        code: []\n        enabled: false\n        name: NOOP\n      properties:\n        code:\n          $ref: \"#/components/schemas/AnyJSON\"\n        enabled:\n          default: true\n          type: boolean\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          minLength: 1\n          type: string\n      required:\n        - name\n        - code\n      type: object\n    ProgramPatch:\n      properties:\n        code:\n          $ref: \"#/components/schemas/AnyJSON\"\n        enabled:\n          type: boolean\n        name:\n          minLength: 1\n          type: string\n      type: object\n    ProgramResource:\n      example:\n        entity: Program\n        href: /programs/3_J_6ZWICc5X_KverorNvw\n        id: 3_J_6ZWICc5X_KverorNvw\n      properties:\n        entity:\n          enum:\n            - Program\n          type: string\n        href:\n          minLength: 1\n          type: string\n        id:\n          $ref: \"#/components/schemas/ProgramId\"\n      required:\n        - id\n        - entity\n        - href\n      type: object\n    ResourceRef:\n      properties:\n        entity:\n          enum:\n            - Device\n            - Functionality\n            - Notification\n            - Place\n            - Program\n            - User\n            - Account\n            - AccountsBase\n          type: string\n        href:\n          minLength: 1\n          type: string\n        id:\n          minLength: 1\n          type: string\n      required:\n        - id\n        - entity\n        - href\n      type: object\n    Tag:\n      maxLength: 21\n      minLength: 1\n      pattern: ^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$\n      type: string\n    Tags:\n      items:\n        $ref: \"#/components/schemas/Tag\"\n      type: array\n      uniqueItems: true\n    TagsPatch:\n      properties:\n        add:\n          description: list of tags to add\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n          uniqueItems: true\n        remove:\n          description: list of tags to remove\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n          uniqueItems: true\n      type: object\n    TimeZone:\n      description: A time zone name from the Time Zone Database at\n        https://www.iana.org/time-zones\n      example: Europe/Paris\n      minLength: 2\n      pattern: ^[A-Z][A-Za-z0-9-_+]+(?:/[A-Z][A-Za-z0-9-_+]+)*$\n      type: string\n    TokenId:\n      example: dfSDdRcsd\n      minLength: 1\n      type: string\n    User:\n      properties:\n        account:\n          $ref: \"#/components/schemas/AccountId\"\n        canLogin:\n          default: false\n          description: true if the user owning the account (can get tokens with /auth/login)\n          example: false\n          readOnly: true\n          type: boolean\n        email:\n          $ref: \"#/components/schemas/UserEmail\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          minLength: 1\n          type: string\n        phoneNumber:\n          $ref: \"#/components/schemas/PhoneNumber\"\n      required:\n        - email\n        - name\n        - locale\n        - canLogin\n      type: object\n    UserCreated:\n      description: A resource has been created. The `resource` property gives its reference.\n      example:\n        code: 201\n        message: User created\n        resource:\n          entity: User\n          href: /users/RGV2aWNlMDAwMDAwMDAwMZ\n          id: RGV2aWNlMDAwMDAwMDAwMZ\n      properties:\n        code:\n          enum:\n            - 201\n          example: 201\n          type: integer\n        message:\n          enum:\n            - User created\n          type: string\n        resource:\n          $ref: \"#/components/schemas/UserResource\"\n      required:\n        - code\n        - message\n        - resource\n      type: object\n    UserEmail:\n      format: email\n      minLength: 6\n      type: string\n    UserId:\n      description: Unique identifier of the *User*\n      example: RGV2aWNlMDAwMDAwMDAwMZ\n      maxLength: 22\n      minLength: 22\n      pattern: ^[A-Za-z0-9-_]{22}$\n      readOnly: true\n      type: string\n    UserItem:\n      properties:\n        canLogin:\n          default: false\n          description: true if the user owning the account (can get tokens with /auth/login)\n          example: false\n          readOnly: true\n          type: boolean\n        email:\n          $ref: \"#/components/schemas/UserEmail\"\n        id:\n          $ref: \"#/components/schemas/UserId\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        metadata:\n          $ref: \"#/components/schemas/MetadataSelected\"\n        name:\n          minLength: 1\n          type: string\n        phoneNumber:\n          $ref: \"#/components/schemas/PhoneNumber\"\n      required:\n        - email\n        - name\n        - locale\n        - id\n      type: object\n      x-links:\n        - href: /users/{id}\n          rel: full\n    UserMe:\n      properties:\n        email:\n          $ref: \"#/components/schemas/UserEmail\"\n        id:\n          $ref: \"#/components/schemas/UserId\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        login:\n          $ref: \"#/components/schemas/AccountLogin\"\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          minLength: 1\n          type: string\n        phoneNumber:\n          $ref: \"#/components/schemas/PhoneNumber\"\n      required:\n        - email\n        - name\n        - locale\n        - id\n      type: object\n      x-links:\n        - href: /account/users/{id}\n          rel: full\n    UserMePatch:\n      properties:\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n      type: object\n    UserNew:\n      properties:\n        email:\n          $ref: \"#/components/schemas/UserEmail\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        metadata:\n          $ref: \"#/components/schemas/Metadata\"\n        name:\n          minLength: 1\n          type: string\n        phoneNumber:\n          $ref: \"#/components/schemas/PhoneNumber\"\n      required:\n        - email\n        - name\n        - locale\n      type: object\n    UserPatch:\n      properties:\n        email:\n          $ref: \"#/components/schemas/UserEmail\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        name:\n          minLength: 1\n          type: string\n        phoneNumber:\n          $ref: \"#/components/schemas/PhoneNumber\"\n      type: object\n    UserResource:\n      example:\n        entity: User\n        href: /users/RGV2aWNlMDAwMDAwMDAwMZ\n        id: RGV2aWNlMDAwMDAwMDAwMZ\n      properties:\n        entity:\n          enum:\n            - User\n          type: string\n        href:\n          minLength: 1\n          type: string\n        id:\n          $ref: \"#/components/schemas/UserId\"\n      required:\n        - id\n        - entity\n        - href\n      type: object\n    UserTokenItem:\n      description: Token for User API access\n      properties:\n        appName:\n          description: Application name\n          example: Home Eopath\n          type: string\n        id:\n          $ref: \"#/components/schemas/TokenId\"\n        lastUse:\n          description: Time of last use of the token to access the API. Updated at most\n            every 15 minutes. If absent, the token has never been used.\n          format: date-time\n          type: string\n        places:\n          description: List of Places to which the User has access. If absent, it means any\n            Place of the account are allowed.\n          items:\n            $ref: \"#/components/schemas/PlaceItem\"\n          type: array\n          uniqueItems: true\n        refreshTokenExpires:\n          description: If absent, infinite validity.\n          format: date-time\n          type: string\n        self:\n          description: True if this token is the one used for this API request\n          type: boolean\n        user:\n          $ref: \"#/components/schemas/UserItem\"\n      required:\n        - id\n        - appName\n        - user\n      type: object\n    ZipCode:\n      description: Postal code\n      maxLength: 10\n      minLength: 0\n      pattern: ^(?:[A-Z0-9](?:[A-Z0-9][- ]?)*[A-Z0-9])?$\n      type: string\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/ijenko.net-3.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/ijenko.net-3.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"span.Req\": schema: at 1:4461: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}