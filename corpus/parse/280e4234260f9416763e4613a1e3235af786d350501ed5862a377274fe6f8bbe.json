{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse/kapua"
		},
		"file": {
			"name": "dataMessage-scopeId.yaml",
			"size": 0,
			"path": "rest-api/resources/src/main/resources/openapi/dataMessage/dataMessage-scopeId.yaml",
			"byteSize": 4944,
			"content": "openapi: 3.0.2\n\ninfo:\n  title: Eclipse Kapua REST API - Data Message\n  version: '1.0'\n  contact:\n    name: Eclipse Kapua Dev Team\n    url: https://eclipse.org/kapua\n    email: kapua-dev@eclipse.org\n  license:\n    name: Eclipse Public License 2.0\n    url: https://www.eclipse.org/legal/epl-2.0\n\npaths:\n  /{scopeId}/data/messages:\n    get:\n      tags:\n        - Data Message\n      summary: Query the Data Messages\n      operationId: dataMessageQuery\n      parameters:\n        - $ref: '../openapi.yaml#/components/parameters/scopeId'\n        - description: The ClientID to use as a filter for messages\n          name: clientId\n          in: query\n          schema:\n            type: string\n        - description: The Channel to use as a filter for messages\n          name: channel\n          in: query\n          schema:\n            type: string\n        - description: Restrict the search only to this channel ignoring its children. Only meaningful if channel is set\n          name: strictChannel\n          in: query\n          schema:\n            type: boolean\n        - description: The start date to filter the results. Must come before endDate parameter\n          name: startDate\n          in: query\n          schema:\n            type: string\n            format: 'date-time'\n        - description: The end date to filter the results. Must come after startDate parameter\n          name: endDate\n          in: query\n          schema:\n            type: string\n            format: 'date-time'\n        - description: The metric name to filter results. If filled, `metricType`, `metricMinValue` and `metricMaxValue` are also required\n          name: metricName\n          in: query\n          schema:\n            type: string\n        - description: The metric type to filter results\n          name: metricType\n          in: query\n          schema:\n            type: string\n        - description: The minimum metric value to filter results\n          name: metricMin\n          in: query\n          schema:\n            type: string\n        - description: The maximum metric value to filter results\n          name: metricMax\n          in: query\n          schema:\n            type: string\n        - description: The sort direction. Can be ascending or descending (default).\n          name: sortDir\n          in: query\n          schema:\n            type: string\n            enum:\n              - ASC\n              - DESC\n            default: DESC\n        - $ref: '../openapi.yaml#/components/parameters/limit'\n        - $ref: '../openapi.yaml#/components/parameters/offset'\n      responses:\n        200:\n          description: The result of the query\n          content:\n            application/json:\n              schema:\n                $ref: './dataMessage.yaml#/components/schemas/dataMessageListResult'\n        401:\n          $ref: '../openapi.yaml#/components/responses/unauthenticated'\n        403:\n          $ref: '../openapi.yaml#/components/responses/subjectUnauthorized'\n        500:\n          $ref: '../openapi.yaml#/components/responses/kapuaError'\n    post:\n      tags:\n        - Data Message\n      summary: Store a new Message\n      operationId: dataMessageStore\n      parameters:\n        - $ref: '../openapi.yaml#/components/parameters/scopeId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: './dataMessage.yaml#/components/schemas/dataMessage'\n            example:\n              type: jsonDatastoreMessage\n              capturedOn: '2019-09-12T09:25:05.096Z'\n              channel:\n                type: kapuaDataChannel\n                semanticParts:\n                  - heater\n                  - data\n              clientId: Client-Id-1\n              deviceId: WyczTs_GuDM\n              payload:\n                metrics:\n                  - valueType: string\n                    value: 5.0\n                    name: temperatureExternal\n                  - valueType: string\n                    value: 20.0\n                    name: temperatureInternal\n                  - valueType: string\n                    value: 30.0\n                    name: temperatureExhaust\n                  - valueType: string\n                    value: 0\n                    name: errorCode\n              receivedOn: '2019-09-12T09:25:05.102Z'\n              sentOn: '2019-09-12T09:25:05.096Z'\n              datastoreId: bb07d7fc-dc62-492f-b8da-7e28df69e112\n              timestamp: '2019-09-12T09:25:05.096Z'\n      responses:\n        200:\n          description: The ID of the new DataMessage\n          content:\n            application/json:\n              schema:\n                $ref: './dataMessage.yaml#/components/schemas/dataMessageInsertResponse'\n        401:\n          $ref: '../openapi.yaml#/components/responses/unauthenticated'\n        403:\n          $ref: '../openapi.yaml#/components/responses/subjectUnauthorized'\n        500:\n          $ref: '../openapi.yaml#/components/responses/kapuaError'\n",
			"canonicalURL": "/github.com/eclipse/kapua@f07cd53ecb271c305963937965745e7f9a903c7d/-/blob/rest-api/resources/src/main/resources/openapi/dataMessage/dataMessage-scopeId.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eclipse/kapua/blob/f07cd53ecb271c305963937965745e7f9a903c7d/rest-api/resources/src/main/resources/openapi/dataMessage/dataMessage-scopeId.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/{scopeId}/data/messages\": at 1:333: get: operation \"dataMessageQuery\": at 1:340: parameters: parse parameter \"\": at 1:388: resolve \"../openapi.yaml#/components/parameters/scopeId\" reference: external \"../openapi.yaml\": get: file: local file reference is not allowed"
}