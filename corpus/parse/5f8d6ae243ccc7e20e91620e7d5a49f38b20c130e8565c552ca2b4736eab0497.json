{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/technocreatives/openapi-eller"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "magicseaweed/api.yaml",
			"byteSize": 8553,
			"content": "openapi: 3.0.0\ninfo:\n  title: MagicSeaWeed\n  version: v1\nservers:\n  - url: https://magicseaweed.com/api/\n    description: API\nsecurity:\n  - apiKey: []\npaths:\n  /{apikey}/forecast/:\n    parameters:\n      - name: apikey\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      parameters:\n        - name: spot_id\n          in: query\n          schema:\n            type: integer\n          required: true\n        - name: user\n          in: query\n          required: true\n          schema:\n            type: string\n      operationId: getForecastData\n      summary: Get Forecast Data\n      responses:\n        200:\n          description: Forecast data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ForecastResponse\"\n  /{apikey}/tide/:\n    parameters:\n      - name: apikey\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      parameters:\n        - name: spot_id\n          in: query\n          schema:\n            type: integer\n          required: true\n        - name: user\n          in: query\n          required: true\n          schema:\n            type: string\n      operationId: getTideData\n      summary: Get Tide Data\n      responses:\n        200:\n          description: Tide data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TideResponse\"\n  /{apikey}/spot/:\n    parameters:\n      - name: apikey\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      parameters:\n        - name: lat\n          in: query\n          schema:\n            type: number\n          required: true\n        - name: lon\n          in: query\n          schema:\n            type: number\n          required: true\n        - name: distance\n          in: query\n          schema:\n            type: number\n          required: true\n        - name: offset\n          in: query\n          schema:\n            type: integer\n        - name: limit\n          in: query\n          schema:\n            type: integer\n        - name: user\n          in: query\n          required: true\n          schema:\n            type: string\n      operationId: getSpotsData\n      summary: Get Spots Data\n      responses:\n        200:\n          description: Spots data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SpotsResponse\"\ncomponents:\n  schemas:\n    TideResponse:\n      type: array\n      items: \n        $ref: \"#/components/schemas/TideRecord\"\n    TideRecord:\n      type: object\n      properties:\n        timestamp:\n          type: integer\n        tide:\n          type: array\n          items:\n            type: object\n            properties:\n              shift:\n                type: number\n              state:\n                type: string\n              unixtime:\n                type: integer\n              timestamp:\n                type: integer\n              timezoneOffset:\n                type: integer\n        unit:\n          type: string\n        sunriseTwillight:\n          type: integer\n        sunrise:\n          type: integer\n        sunsetTwillight:\n          type: integer\n        images:\n          type: object\n          properties:\n            full:\n              type: string\n        port:\n          type: object\n          properties:\n            name:\n              type: string\n            lat:\n              type: number\n            lon:\n              type: number\n            distance:\n              type: number\n            unit:\n              type: string\n    ForecastResponse:\n      type: array\n      items: \n        $ref: \"#/components/schemas/ForecastRecord\"\n    ForecastRecord:\n      type: object\n      properties:\n        timestamp:\n          type: number\n          format: integer\n        localTimestamp:\n          type: number\n          format: integer\n        issueTimestamp:\n          type: number\n          format: integer\n        gfsIssueTimestamp:\n          type: number\n          format: integer\n        fadedRating:\n          type: number\n          format: integer\n        solidRating:\n          type: number\n          format: integer\n        en_threeHourTimeText:\n          type: string\n        threeHourTimeText:\n          type: string\n        timezoneAbbr:\n          type: string\n        swell:\n          type: object\n          properties:\n            height:\n              type: number\n            absHeight:\n              type: number\n            absMinBreakingHeight:\n              type: number\n            absMaxBreakingHeight:\n              type: number\n            incomingSwellCount:\n              type: number\n              format: integer\n            direction:\n              type: number\n            trueDirection:\n              type: number\n            compassDirection:\n              type: string\n            period:\n              type: number\n              format: integer\n            probability:\n              type: number\n            unit:\n              type: string\n            minBreakingHeight:\n              type: number\n            maxBreakingHeight:\n              type: number\n            components:\n              type: object\n              properties:\n                combined:\n                  type: object\n                  properties:\n                    height:\n                      type: number\n                    absHeight:\n                      type: number\n                    period:\n                      type: number\n                      format: integer\n                    windSeaFraction:\n                      type: number\n                    power:\n                      type: number\n                    direction:\n                      type: number\n                    trueDirection:\n                      type: number\n                    directionalSpread:\n                      type: number\n                    compassDirection:\n                      type: string\n                    isOffshore:\n                      type: boolean\n                primary:\n                  type: object\n                  properties:\n                    height:\n                      type: number\n                    absHeight:\n                      type: number\n                    period:\n                      type: number\n                      format: integer\n                    windSeaFraction:\n                      type: number\n                    power:\n                      type: number\n                    direction:\n                      type: number\n                    trueDirection:\n                      type: number\n                    directionalSpread:\n                      type: number\n                    compassDirection:\n                      type: string\n                    isOffshore:\n                      type: boolean\n                    absBreakingHeight:\n                      type: number\n        wind:\n          type: object\n          properties:\n            speed:\n              type: number\n            direction:\n              type: number\n            trueDirection:\n              type: number\n            compassDirection:\n              type: string\n            chill:\n              type: number\n            gusts:\n              type: number\n            unit:\n              type: string\n            rating:\n              type: number\n            stringDirection:\n              type: string\n        condition:\n          type: object\n          properties:\n            pressure:\n              type: number\n            temperature:\n              type: number\n            sst:\n              type: number\n            weather:\n              type: string\n            weatherText:\n              type: string\n            unitPressure:\n              type: string\n            unit:\n              type: string\n    SpotsResponse:\n      type: array\n      items:  \n        $ref: '#/components/schemas/SpotRecord'\n    SpotRecord:\n      type: object\n      properties:\n        _id:\n          type: integer\n        _path:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        lat:\n          type: number\n        lon:\n          type: number\n        surfAreaId:\n          type: number\n          format: integer\n        optimumSwellAngle:\n          type: number\n          format: integer\n        optimumWindAngle:\n          type: number\n          format: integer\n        isBigWave: \n          type: boolean\n        mapImageUrl:\n          type: string  ",
			"canonicalURL": "/github.com/technocreatives/openapi-eller@d694e8454ff7118fea3a0c3c269040fdd9604eb3/-/blob/magicseaweed/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/technocreatives/openapi-eller/blob/d694e8454ff7118fea3a0c3c269040fdd9604eb3/magicseaweed/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/{apikey}/forecast/\": get: operation \"getForecastData\": security: at 1:5538: unknown security schema \"apiKey\""
}