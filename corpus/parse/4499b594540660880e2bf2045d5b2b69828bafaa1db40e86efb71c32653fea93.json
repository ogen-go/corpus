{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/product-microgateway"
		},
		"file": {
			"name": "mock_endpoint_openAPI.yaml",
			"size": 0,
			"path": "integration/test-integration/src/test/resources/openAPIs/mock_endpoint_openAPI.yaml",
			"byteSize": 3611,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: mockApiTest\n  license:\n    name: MIT\nservers:\n  - url: /\nx-wso2-basePath: /mockApiTest/1.0.0\npaths:\n  /testMockApiWithHeader:\n    get:\n      summary: Tests Choreo Connect mock API implementation\n      operationId: testImpl\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Data\"\n      x-mediation-script: |\n        {\n           \"in\": \"header\",\n           \"name\": \"mockApiValue\",\n           \"responses\": [\n               {\n                   \"value\": \"success\",\n                   \"headers\": [\n                       {\n                           \"name\": \"x-wso2-header1\",\n                           \"value\": \"Sample header value\"\n                       }\n                   ],\n                   \"code\": 200,\n                   \"content\":[\n                      {\n                          \"contentType\":\"application/json\",\n                          \"body\":\"{\\\"name\\\" : \\\"choreo connect\\\"}\"\n                      },\n                      {\n                          \"contentType\":\"application/xml\",\n                          \"body\":\"\u003cname\u003echoreo connect\u003c/name\u003e\"\n                      }\n                  ]\n               }\n           ]\n        }\n      security:\n        - APIKeyAuth: [ ]\n  /testMockWithQueryParam:\n    get:\n      summary: Tests Choreo Connect mock API implementation with query parameters\n      operationId: testImpl2\n      x-mediation-script: |\n        {\n           \"in\": \"query\",\n           \"name\": \"mockApiQueryVal\",\n           \"responses\": [\n               {\n                   \"value\": \"success\",\n                   \"headers\": [\n                       {\n                           \"name\": \"x-wso2-q-header\",\n                           \"value\": \"Header value for query param\"\n                       }\n                   ],\n                   \"code\": 500,\n                   \"content\":[\n                       {\n                           \"contentType\":\"application/json\",\n                           \"body\":\"{\\\"name\\\" : \\\"choreo connect\\\"}\"\n                       },\n                       {\n                           \"contentType\":\"application/xml\",\n                           \"body\":\"\u003cname\u003echoreo connect\u003c/name\u003e\"\n                       }\n                   ]\n               }\n           ]\n        }\n      security:\n        - APIKeyAuth: [ ]\n  /testMockDefault:\n    get:\n      summary: Tests Choreo Connect mock default API implementation\n      operationId: testImpl3\n      x-mediation-script: |\n        {\n           \"in\": \"default\",\n           \"responses\": [\n               {\n                   \"headers\": [\n                       {\n                           \"name\": \"x-wso2-default-header\",\n                           \"value\": \"Default header value\"\n                       }\n                   ],\n                   \"code\": 200,\n                   \"content\":[\n                       {\n                           \"contentType\":\"application/json\",\n                           \"body\":\"{\\\"name\\\" : \\\"choreo connect\\\"}\"\n                       }\n                   ]\n               }\n           ]\n        }\n      security:\n        - APIKeyAuth: []\ncomponents:\n  securitySchemes:\n    APIKeyAuth:\n      type: apiKey\n      name: x-api-key\n      in: header\n  schemas:\n    Data:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /testMockDefault: get: operation \"testImpl3\": responses: no responses"
}