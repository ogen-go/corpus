{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/palomapiot/early"
		},
		"file": {
			"name": "openapi-schema.yml",
			"path": "app/openapi-schema.yml",
			"content": "\"\"\"\n    Copyright 2020-2021 Paloma Piot Pérez-Abadín\n\t\n\tThis file is part of early.\n    early is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    early is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n    You should have received a copy of the GNU General Public License\n    along with early.  If not, see \u003chttps://www.gnu.org/licenses/\u003e.\n\"\"\"\n\nopenapi: 3.0.2\ninfo:\n  title: ''\n  version: ''\npaths:\n      \n  /api/profiles/:\n    get:\n      operationId: listProfiles\n      description: Get all profiles, allowing filtering.\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: validated_data__age\n        required: false\n        in: query\n        description: The age groups of the profiles.\n        schema:\n          type: string\n      - name: validated_data__gender\n        required: false\n        in: query\n        description: The genders of the profiles.\n        schema:\n          type: string\n      - name: validated_data__location\n        required: false\n        in: query\n        description: The locations of the profiles.\n        schema:\n          type: string\n      - name: validated_data__personality\n        required: false\n        in: query\n        description: The personalities of the profiles.\n        schema:\n          type: string\n      - name: validated_data__depressed\n        required: false\n        in: query\n        description: The depression value of the profiles.\n        schema:\n          type: string\n      - name: is_valid\n        required: false\n        in: query\n        description: The validation status of the profiles. True, if the profile has been validated, false otherwise.\n        schema:\n          type: string\n      - name: processed\n        required: false\n        in: query\n        description: The process status of the profiles. True, if the profile has been processed, false otherwise.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Profile'\n          description: ''\n      tags:\n      - profile\n    post:\n      operationId: createProfile\n      description: Add a new profile.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Profile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Profile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Profile'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Profile'\n          description: ''\n      tags:\n      - profile\n  /api/profiles/{id}/:\n    get:\n      operationId: retrieveProfile\n      description: Get one profile.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this profile.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Profile'\n          description: ''\n      tags:\n      - profile\n    put:\n      operationId: updateProfile\n      description: Edit profile.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this profile.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Profile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Profile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Profile'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Profile'\n          description: ''\n      tags:\n      - profile\n  /api/profiles/{id}/reasons/:\n    get:\n      operationId: reasonsProfile\n      description: Returns a list of all the reasons that the given profile has.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this profile.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Profile'\n          description: ''\n      tags:\n      - profile\n      \n  /api/globaldata/{id}/:\n    get:\n      operationId: retrieveGlobalData\n      description: Get global data to know the state of the Reddit task \"load Reddit data\". The main global data has id 1.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this global data.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalData'\n          description: ''\n      tags:\n      - reddit_task\n    put:\n      operationId: updateGlobalData\n      description: Update global data to inform that the Reddit task has started or finished.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this global data.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GlobalData'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GlobalData'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GlobalData'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalData'\n          description: ''\n      tags:\n      - reddit_task\n  \n  /api/corpus/:\n    get:\n      operationId: listCorpus\n      description: Get all corpus. A corpus is a \"category\" that a profile belong to.\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Corpus'\n          description: ''\n      tags:\n      - corpus\n    post:\n      operationId: createCorpus\n      description: Add a corpus.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Corpus'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Corpus'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Corpus'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Corpus'\n          description: ''\n      tags:\n      - corpus\n      \n  /api/export/:\n    get:\n      operationId: export\n      description: Get validated demographic data and profiles.\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Export'\n          description: ''\n      tags:\n      - export\n  /api/comments/:\n    get:\n      operationId: listProfileComments\n      description: Get profiles with its comments.\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommentsCorpus'\n          description: ''\n      tags:\n      - export\n  /api/labeleddata/:\n    get:\n      operationId: exportLabeledData\n      description: Get profiles, its comments and its demographic data.\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LabeledData'\n          description: ''\n      tags:\n      - export\n      \n  /api/login:\n    post:\n      operationId: createlogin\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - login\n      \n  /api/users/:\n    get:\n      operationId: listUsers\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/User'\n          description: ''\n      tags:\n      - user\n    post:\n      operationId: createUser\n      description: API endpoint that allows users to be viewed or edited.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n      tags:\n      - user\n  /api/users/{id}/:\n    get:\n      operationId: retrieveUser\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n      tags:\n      - user\n    put:\n      operationId: updateUser\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n      tags:\n      - user\n    patch:\n      operationId: partialUpdateUser\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n      tags:\n      - user\n    delete:\n      operationId: destroyUser\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n      tags:\n      - user\n  /api/groups/:\n    get:\n      operationId: listGroups\n      description: API endpoint that allows groups to be viewed or edited.\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Group'\n          description: ''\n      tags:\n      - groups\n    post:\n      operationId: createGroup\n      description: API endpoint that allows groups to be viewed or edited.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Group'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Group'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: ''\n      tags:\n      - groups\n  /api/groups/{id}/:\n    get:\n      operationId: retrieveGroup\n      description: API endpoint that allows groups to be viewed or edited.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this group.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: ''\n      tags:\n      - groups\n    put:\n      operationId: updateGroup\n      description: API endpoint that allows groups to be viewed or edited.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this group.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Group'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Group'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: ''\n      tags:\n      - groups\n    patch:\n      operationId: partialUpdateGroup\n      description: API endpoint that allows groups to be viewed or edited.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this group.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Group'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Group'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: ''\n      tags:\n      - groups\n    delete:\n      operationId: destroyGroup\n      description: API endpoint that allows groups to be viewed or edited.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this group.\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n      tags:\n      - groups\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        url:\n          type: string\n          readOnly: true\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+\\z\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        groups:\n          type: array\n          items:\n            type: integer\n          description: The groups this user belongs to. A user will get all permissions\n            granted to each of their groups.\n      required:\n      - username\n    Group:\n      type: object\n      properties:\n        url:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          maxLength: 150\n      required:\n      - name\n    Profile:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        experiment_id:\n          type: string\n          readOnly: true\n        reddit_username:\n          type: string\n          readOnly: true\n        corpus:\n          type: integer\n          nullable: true\n        is_valid:\n          type: boolean\n          readOnly: true\n        validated_by:\n          type: object\n          properties:\n            username:\n              type: string\n              description: Required. 150 characters or fewer. Letters, digits and\n                @/./+/-/_ only.\n              pattern: ^[\\w.@+-]+\\z\n              maxLength: 150\n          required:\n          - username\n          nullable: true\n        system_data:\n          allOf:\n            - $ref: '#/components/schemas/ProfileData'\n            - nullable: true\n        validated_data:\n          allOf:\n            - $ref: '#/components/schemas/ProfileData'\n            - nullable: true\n        data:\n          type: string\n          readOnly: true\n        reasons:\n          type: array\n          items:\n            type: object\n            properties:\n              reason:\n                type: string\n                nullable: true\n                maxLength: 1000\n              profile_data_type:\n                enum:\n                - Age\n                - Gender\n                - Location\n                - Personality\n                - Depression\n                type: string\n            required:\n            - profile_data_type\n          nullable: true\n        processed:\n          type: boolean\n    Export:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        experiment_id:\n          type: string\n          maxLength: 50\n        validated_data:\n          $ref: '#/components/schemas/ProfileData'\n      required:\n      - experiment_id\n      - validated_data\n    GlobalData:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        load_in_progress:\n          type: boolean\n        task_id:\n          type: string\n          nullable: true\n          maxLength: 100\n    Corpus:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        corpus_name:\n          type: string\n          maxLength: 1000\n      required:\n      - corpus_name\n    CommentsCorpus:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        corpus:\n          type: integer\n          nullable: true\n        comments:\n          type: array\n          items:\n            type: object\n            properties:\n              date:\n                type: string\n                format: date-time\n              text:\n                type: string\n            required:\n            - date\n            - text\n    LabeledData:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        experiment_id:\n          type: string\n          maxLength: 50\n        corpus:\n          type: integer\n          nullable: true\n        validated_data:\n          $ref: '#/components/schemas/ProfileData'\n        comments:\n          type: array\n          items:\n            type: object\n            properties:\n              date:\n                type: string\n                format: date-time\n              text:\n                type: string\n            required:\n            - date\n            - text\n      required:\n      - experiment_id\n      - validated_data\n    LocationEnum:\n      type: string\n      nullable: true\n      enum:\n        - AF\n        - AX\n        - AL\n        - DZ\n        - AS\n        - AD\n        - AO\n        - AI\n        - AQ\n        - AG\n        - AR\n        - AM\n        - AW\n        - AU\n        - AT\n        - AZ\n        - BS\n        - BH\n        - BD\n        - BB\n        - BY\n        - BE\n        - BZ\n        - BJ\n        - BM\n        - BT\n        - BO\n        - BQ\n        - BA\n        - BW\n        - BV\n        - BR\n        - IO\n        - BN\n        - BG\n        - BF\n        - BI\n        - CV\n        - KH\n        - CM\n        - CA\n        - KY\n        - CF\n        - TD\n        - CL\n        - CN\n        - CX\n        - CC\n        - CO\n        - KM\n        - CG\n        - CD\n        - CK\n        - CR\n        - CI\n        - HR\n        - CU\n        - CW\n        - CY\n        - CZ\n        - DK\n        - DJ\n        - DM\n        - DO\n        - EC\n        - EG\n        - SV\n        - GQ\n        - ER\n        - EE\n        - SZ\n        - ET\n        - FK\n        - FO\n        - FJ\n        - FI\n        - FR\n        - GF\n        - PF\n        - TF\n        - GA\n        - GM\n        - GE\n        - DE\n        - GH\n        - GI\n        - GR\n        - GL\n        - GD\n        - GP\n        - GU\n        - GT\n        - GG\n        - GN\n        - GW\n        - GY\n        - HT\n        - HM\n        - VA\n        - HN\n        - HK\n        - HU\n        - IS\n        - IN\n        - ID\n        - IR\n        - IQ\n        - IE\n        - IM\n        - IL\n        - IT\n        - JM\n        - JP\n        - JE\n        - JO\n        - KZ\n        - KE\n        - KI\n        - KW\n        - KG\n        - LA\n        - LV\n        - LB\n        - LS\n        - LR\n        - LY\n        - LI\n        - LT\n        - LU\n        - MO\n        - MG\n        - MW\n        - MY\n        - MV\n        - ML\n        - MT\n        - MH\n        - MQ\n        - MR\n        - MU\n        - YT\n        - MX\n        - FM\n        - MD\n        - MC\n        - MN\n        - ME\n        - MS\n        - MA\n        - MZ\n        - MM\n        - NA\n        - NR\n        - NP\n        - NL\n        - NC\n        - NZ\n        - NI\n        - NE\n        - NG\n        - NU\n        - NF\n        - KP\n        - MK\n        - MP\n        - 'NO'\n        - OM\n        - PK\n        - PW\n        - PS\n        - PA\n        - PG\n        - PY\n        - PE\n        - PH\n        - PN\n        - PL\n        - PT\n        - PR\n        - QA\n        - RE\n        - RO\n        - RU\n        - RW\n        - BL\n        - SH\n        - KN\n        - LC\n        - MF\n        - PM\n        - VC\n        - WS\n        - SM\n        - ST\n        - SA\n        - SN\n        - RS\n        - SC\n        - SL\n        - SG\n        - SX\n        - SK\n        - SI\n        - SB\n        - SO\n        - ZA\n        - GS\n        - KR\n        - SS\n        - ES\n        - LK\n        - SD\n        - SR\n        - SJ\n        - SE\n        - CH\n        - SY\n        - TW\n        - TJ\n        - TZ\n        - TH\n        - TL\n        - TG\n        - TK\n        - TO\n        - TT\n        - TN\n        - TR\n        - TM\n        - TC\n        - TV\n        - UG\n        - UA\n        - AE\n        - GB\n        - UM\n        - US\n        - UY\n        - UZ\n        - VU\n        - VE\n        - VN\n        - VG\n        - VI\n        - WF\n        - EH\n        - YE\n        - ZM\n        - ZW\n    ProfileData:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        age:\n          enum:\n          - 12-20\n          - 20-30\n          - 30-65\n          - Over65\n          - Unknown\n          type: string\n        gender:\n          enum:\n          - Male\n          - Female\n          - Unknown\n          type: string\n        location:\n          $ref: '#/components/schemas/LocationEnum'\n        personality:\n          enum:\n          - Extraversion\n          - Agreeableness\n          - Conscientiousness\n          - Neuroticism\n          - Openness\n          - Unknown\n          type: string\n        depressed:\n          type: boolean\n          nullable: true\n"
		}
	},
	"Error": "json: cannot unmarshal string into Go value of type ogen.Spec"
}