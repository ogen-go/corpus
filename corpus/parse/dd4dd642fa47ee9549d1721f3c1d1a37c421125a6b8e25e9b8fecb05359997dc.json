{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/go-kratos/examples"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "transaction/gorm/openapi.yaml",
			"byteSize": 4043,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/google/gnostic/tree/master/apps/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: BlogService\n    version: 0.0.1\npaths:\n    /v1/article/:\n        get:\n            operationId: BlogService_ListArticle\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListArticleReply'\n        post:\n            operationId: BlogService_CreateArticle\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateArticleRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/CreateArticleReply'\n    /v1/article/{id}:\n        get:\n            operationId: BlogService_GetArticle\n            parameters:\n                - name: id\n                  in: query\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetArticleReply'\n        put:\n            operationId: BlogService_UpdateArticle\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/UpdateArticleRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UpdateArticleReply'\n        delete:\n            operationId: BlogService_DeleteArticle\n            parameters:\n                - name: id\n                  in: query\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/DeleteArticleReply'\ncomponents:\n    schemas:\n        Article:\n            properties:\n                id:\n                    type: integer\n                    format: int64\n                title:\n                    type: string\n                content:\n                    type: string\n                like:\n                    type: integer\n                    format: int64\n        CreateArticleReply:\n            properties:\n                Article:\n                    $ref: '#/components/schemas/Article'\n        CreateArticleRequest:\n            properties:\n                title:\n                    type: string\n                content:\n                    type: string\n        DeleteArticleReply:\n            properties: {}\n        GetArticleReply:\n            properties:\n                Article:\n                    $ref: '#/components/schemas/Article'\n        ListArticleReply:\n            properties:\n                results:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Article'\n        UpdateArticleReply:\n            properties:\n                Article:\n                    $ref: '#/components/schemas/Article'\n        UpdateArticleRequest:\n            properties:\n                id:\n                    type: integer\n                    format: int64\n                title:\n                    type: string\n                content:\n                    type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v1/article/{id}: get: operation \"BlogService_GetArticle\": parse path: path parameter not specified: \"id\""
}