{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "internal/kafka/internal/api/private/api/openapi.yaml",
			"byteSize": 21440,
			"content": "openapi: 3.0.0\ninfo:\n  description: Kafka Service Fleet Manager APIs that are used by internal services\n    e.g kas-fleetshard operators.\n  title: Kafka Service Fleet Manager\n  version: 1.4.0\nservers:\n- description: Main (production) server\n  url: https://api.openshift.com\n- description: Staging server\n  url: https://api.stage.openshift.com\n- description: localhost\n  url: http://localhost:8000\n- description: current domain\n  url: /\ntags:\n- name: Agent Clusters\npaths:\n  /api/kafkas_mgmt/v1/agent-clusters/{id}/status:\n    put:\n      operationId: updateAgentClusterStatus\n      parameters:\n      - description: The ID of record\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'\n        description: Cluster status update data\n        required: true\n      responses:\n        \"200\":\n          description: Cluster status is updated\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Update the status of an agent cluster\n      tags:\n      - Agent Clusters\n  /api/kafkas_mgmt/v1/agent-clusters/{id}/kafkas/status:\n    put:\n      operationId: updateKafkaClusterStatus\n      parameters:\n      - description: The ID of record\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataPlaneKafkaStatusUpdateRequest'\n        description: Kafka clusters status update data\n        required: true\n      responses:\n        \"200\":\n          description: Status is updated for Kafka clusters\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Update the status of Kafka clusters on an agent cluster\n      tags:\n      - Agent Clusters\n  /api/kafkas_mgmt/v1/agent-clusters/{id}/kafkas:\n    get:\n      operationId: getKafkas\n      parameters:\n      - description: The ID of record\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagedKafkaList'\n          description: The list of the ManagedKafkas for the specified agent cluster\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Get the list of ManagedaKafkas for the specified agent cluster\n      tags:\n      - Agent Clusters\n  /api/kafkas_mgmt/v1/agent-clusters/{id}:\n    get:\n      operationId: getKafkaAgent\n      parameters:\n      - description: The ID of record\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataplaneClusterAgentConfig'\n          description: The ManagedKafkaAgent CR Spec\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400InvalidIdExample\":\n                  $ref: '#/components/examples/400InvalidIdExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: id value is not valid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is not valid.\n      security:\n      - Bearer: []\n      summary: Get the spec of the ManagedKafkaAgent CR spec\n      tags:\n      - Agent Clusters\ncomponents:\n  examples:\n    ManagedKafkaExample:\n      value:\n        kind: ManagedKafka\n        metadata:\n          name: example-kafka\n          namespace: example-kafka-1rfpsqbvq1em2u9u0z54ymjcwac\n          annotations:\n            bf2.org/id: 1rfpsqbvq1em2u9u0z54ymjcwac\n            bf2.org/placementId: \"\"\n        spec:\n          capacity:\n            ingressEgressThroughputPerSec: 4Mi\n            totalMaxConnections: 500\n            maxDataRetentionSize: 100Gi\n            maxPartitions: 100\n            maxDataRetentionPeriod: P14D\n            maxConnectionAttemptsPerSec: 100\n          oauth:\n            clientId: kafka-1rfpsqbvq1em2u9u0z54ymjcwac\n            clientSecret: example-client-secret\n            tokenEndpointUri: https://example-token-endpoint-uri.com/token\n            jwksEndpointUri: https://example-jwks-endpoint-uri.com/certs\n            validIssuerEndpointUri: https://issuer-endpoint-uri.com\n            userNameClaim: clientId\n            fallbackUserNameClaim: preferred_username\n            tlsTrustedCertificate: \"\"\n            customClaimCheck: \"\"\n            maximumSessionLifetime: 1898\n          endpoint:\n            bootstrapServerHost: example-kafka--rfpsqbvq-em-u-u-z--ymjcwac.kafka.devshift.org\n            tls:\n              cert: \"\"\n              key: \"\"\n          versions:\n            kafka: 2.7.0\n            strimzi: 0.21.2\n            kafkaIbp: \"2.7\"\n          deleted: false\n    DataPlaneKafkaStatusRequestExample:\n      value:\n        conditions:\n        - type: Ready\n          reason: KafkaInstanceReady\n          message: installing\n          status: \"False\"\n          lastTransitionTime: 2018-01-01T00:00:00Z\n        capacity:\n          ingressEgressThroughputPerSec: 4Mi\n          totalMaxConnections: 500\n          maxDataRetentionSize: 100Gi\n          maxPartitions: 100\n          maxDataRetentionPeriod: P14D\n          maxConnectionAttemptsPerSec: 100\n        versions:\n          kafka: 2.4.1\n          strimzi: 0.21.2\n          kafkaIbp: \"2.4\"\n    \"400InvalidIdExample\":\n      value:\n        id: \"21\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/21\n        code: KAFKAS-MGMT-21\n        reason: Bad request\n        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv\n    \"404Example\":\n      value:\n        id: \"7\"\n        kind: Error\n        href: /api/kafkas_mgmt/v1/errors/7\n        code: KAFKAS-MGMT-7\n        reason: The requested resource doesn't exist\n  schemas:\n    ListReference:\n      properties:\n        kind:\n          type: string\n      required:\n      - items\n      - kind\n      type: object\n    PrivateObjectReference:\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n      type: object\n    ManagedKafkaCapacity:\n      properties:\n        ingressEgressThroughputPerSec:\n          type: string\n        totalMaxConnections:\n          format: int\n          type: integer\n        maxDataRetentionSize:\n          type: string\n        maxPartitions:\n          format: int\n          type: integer\n        maxDataRetentionPeriod:\n          type: string\n        maxConnectionAttemptsPerSec:\n          format: int\n          type: integer\n      type: object\n    ManagedKafkaVersions:\n      properties:\n        kafka:\n          type: string\n        kafkaIbp:\n          type: string\n        strimzi:\n          type: string\n      type: object\n    ManagedKafka:\n      allOf:\n      - $ref: '#/components/schemas/PrivateObjectReference'\n      - $ref: '#/components/schemas/ManagedKafka_allOf'\n    ManagedKafkaList:\n      allOf:\n      - $ref: '#/components/schemas/ListReference'\n      - $ref: '#/components/schemas/ManagedKafkaList_allOf'\n      description: A list of ManagedKafka\n    DatePlaneClusterUpdateStatusRequestNodeInfo:\n      example:\n        ceiling: 1\n        current: 5\n        currentWorkLoadMinimum: 2\n        floor: 5\n      nullable: true\n      properties:\n        ceiling:\n          nullable: true\n          type: integer\n        floor:\n          nullable: true\n          type: integer\n        current:\n          nullable: true\n          type: integer\n        currentWorkLoadMinimum:\n          nullable: true\n          type: integer\n      type: object\n    DatePlaneClusterUpdateStatusRequestResizeInfo:\n      example:\n        nodeDelta: 7\n        delta:\n          partitions: 3\n          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec\n          connections: 9\n          dataRetentionSize: dataRetentionSize\n      nullable: true\n      properties:\n        nodeDelta:\n          nullable: true\n          type: integer\n        delta:\n          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestResizeInfo_delta'\n      type: object\n    DataPlaneClusterUpdateStatusRequest:\n      description: Schema for the request to update a data plane cluster's status\n      example:\n        total:\n          partitions: 6\n          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec\n          connections: 0\n          dataRetentionSize: dataRetentionSize\n        strimzi:\n        - ready: true\n          kafkaIbpVersions:\n          - kafkaIbpVersions\n          - kafkaIbpVersions\n          kafkaVersions:\n          - kafkaVersions\n          - kafkaVersions\n          version: version\n        - ready: true\n          kafkaIbpVersions:\n          - kafkaIbpVersions\n          - kafkaIbpVersions\n          kafkaVersions:\n          - kafkaVersions\n          - kafkaVersions\n          version: version\n        resizeInfo:\n          nodeDelta: 7\n          delta:\n            partitions: 3\n            ingressEgressThroughputPerSec: ingressEgressThroughputPerSec\n            connections: 9\n            dataRetentionSize: dataRetentionSize\n        nodeInfo:\n          ceiling: 1\n          current: 5\n          currentWorkLoadMinimum: 2\n          floor: 5\n        conditions:\n        - reason: reason\n          type: type\n          message: message\n          status: status\n        - reason: reason\n          type: type\n          message: message\n          status: status\n        remaining:\n          partitions: 6\n          ingressEgressThroughputPerSec: ingressEgressThroughputPerSec\n          connections: 0\n          dataRetentionSize: dataRetentionSize\n      properties:\n        conditions:\n          description: The cluster data plane conditions\n          items:\n            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'\n          type: array\n        total:\n          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_total'\n        remaining:\n          $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_total'\n        nodeInfo:\n          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestNodeInfo'\n        resizeInfo:\n          $ref: '#/components/schemas/DatePlaneClusterUpdateStatusRequestResizeInfo'\n        strimzi:\n          items:\n            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_strimzi'\n          type: array\n      type: object\n    DataPlaneKafkaStatus:\n      description: Schema of the status object for a Kafka cluster\n      example:\n        $ref: '#/components/examples/DataPlaneKafkaStatusRequestExample'\n      properties:\n        conditions:\n          description: The status conditions of a Kafka cluster\n          items:\n            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'\n          type: array\n        capacity:\n          $ref: '#/components/schemas/DataPlaneKafkaStatus_capacity'\n        versions:\n          $ref: '#/components/schemas/DataPlaneKafkaStatus_versions'\n        routes:\n          description: Routes created for a Kafka cluster\n          items:\n            $ref: '#/components/schemas/DataPlaneKafkaStatus_routes'\n          nullable: true\n          type: array\n      type: object\n    DataPlaneKafkaStatusUpdateRequest:\n      additionalProperties:\n        $ref: '#/components/schemas/DataPlaneKafkaStatus'\n      description: Schema for the request to update the statuses of Kafka clusters\n        from data plane\n      type: object\n    DataplaneClusterAgentConfig:\n      description: Configuration for the data plane cluster agent\n      example:\n        spec:\n          observability:\n            channel: channel\n            tag: tag\n            accessToken: accessToken\n            repository: repository\n      properties:\n        spec:\n          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec'\n      type: object\n    WatchEvent:\n      properties:\n        type:\n          type: string\n        error:\n          $ref: '#/components/schemas/Error'\n        object:\n          nullable: true\n          type: object\n      required:\n      - type\n      type: object\n    Error:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Error_allOf'\n    ObjectReference:\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n        href:\n          type: string\n      type: object\n    ManagedKafka_allOf_metadata_annotations:\n      properties:\n        bf2.org/id:\n          type: string\n        bf2.org/placementId:\n          type: string\n      required:\n      - bf2.org/id\n      - bf2.org/placementId\n    ManagedKafka_allOf_metadata:\n      properties:\n        name:\n          type: string\n        namespace:\n          type: string\n        annotations:\n          $ref: '#/components/schemas/ManagedKafka_allOf_metadata_annotations'\n    ManagedKafka_allOf_spec_serviceAccounts:\n      properties:\n        name:\n          type: string\n        principal:\n          type: string\n        password:\n          type: string\n      required:\n      - name\n      - password\n      - principal\n    ManagedKafka_allOf_spec_oauth:\n      properties:\n        clientId:\n          type: string\n        clientSecret:\n          type: string\n        tokenEndpointURI:\n          type: string\n        jwksEndpointURI:\n          type: string\n        validIssuerEndpointURI:\n          type: string\n        userNameClaim:\n          type: string\n        fallbackUserNameClaim:\n          type: string\n        tlsTrustedCertificate:\n          nullable: true\n          type: string\n        customClaimCheck:\n          type: string\n        maximumSessionLifetime:\n          type: long\n      required:\n      - maximumSessionLifetime\n    ManagedKafka_allOf_spec_endpoint_tls:\n      nullable: true\n      properties:\n        cert:\n          type: string\n        key:\n          type: string\n    ManagedKafka_allOf_spec_endpoint:\n      properties:\n        bootstrapServerHost:\n          type: string\n        tls:\n          $ref: '#/components/schemas/ManagedKafka_allOf_spec_endpoint_tls'\n    ManagedKafka_allOf_spec:\n      properties:\n        serviceAccounts:\n          items:\n            $ref: '#/components/schemas/ManagedKafka_allOf_spec_serviceAccounts'\n          type: array\n        capacity:\n          $ref: '#/components/schemas/ManagedKafkaCapacity'\n        oauth:\n          $ref: '#/components/schemas/ManagedKafka_allOf_spec_oauth'\n        owners:\n          items:\n            type: string\n          type: array\n        endpoint:\n          $ref: '#/components/schemas/ManagedKafka_allOf_spec_endpoint'\n        versions:\n          $ref: '#/components/schemas/ManagedKafkaVersions'\n        deleted:\n          type: boolean\n      required:\n      - deleted\n    ManagedKafka_allOf:\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ManagedKafka_allOf_metadata'\n        spec:\n          $ref: '#/components/schemas/ManagedKafka_allOf_spec'\n    ManagedKafkaList_allOf:\n      example: '{\"kind\":\"ManagedKafkaList\",\"items\":{\"$ref\":\"#/components/examples/ManagedKafkaExample\"}}'\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/ManagedKafka'\n          type: array\n    DatePlaneClusterUpdateStatusRequestResizeInfo_delta:\n      example:\n        partitions: 3\n        ingressEgressThroughputPerSec: ingressEgressThroughputPerSec\n        connections: 9\n        dataRetentionSize: dataRetentionSize\n      nullable: true\n      properties:\n        ingressEgressThroughputPerSec:\n          nullable: true\n          type: string\n        connections:\n          nullable: true\n          type: integer\n        dataRetentionSize:\n          nullable: true\n          type: string\n        partitions:\n          nullable: true\n          type: integer\n    DataPlaneClusterUpdateStatusRequest_conditions:\n      example:\n        reason: reason\n        type: type\n        message: message\n        status: status\n      properties:\n        type:\n          type: string\n        reason:\n          type: string\n        message:\n          type: string\n        status:\n          type: string\n    DataPlaneClusterUpdateStatusRequest_total:\n      example:\n        partitions: 6\n        ingressEgressThroughputPerSec: ingressEgressThroughputPerSec\n        connections: 0\n        dataRetentionSize: dataRetentionSize\n      properties:\n        ingressEgressThroughputPerSec:\n          nullable: true\n          type: string\n        connections:\n          nullable: true\n          type: integer\n        dataRetentionSize:\n          nullable: true\n          type: string\n        partitions:\n          nullable: true\n          type: integer\n    DataPlaneClusterUpdateStatusRequest_strimzi:\n      example:\n        ready: true\n        kafkaIbpVersions:\n        - kafkaIbpVersions\n        - kafkaIbpVersions\n        kafkaVersions:\n        - kafkaVersions\n        - kafkaVersions\n        version: version\n      properties:\n        ready:\n          type: boolean\n        version:\n          type: string\n        kafkaVersions:\n          items:\n            type: string\n          type: array\n        kafkaIbpVersions:\n          items:\n            type: string\n          type: array\n      required:\n      - ready\n      - version\n    DataPlaneKafkaStatus_capacity:\n      description: Capacity information of the data plane cluster\n      properties:\n        ingressEgressThroughputPerSec:\n          nullable: true\n          type: string\n        totalMaxConnections:\n          nullable: true\n          type: integer\n        maxDataRetentionSize:\n          nullable: true\n          type: string\n        maxPartitions:\n          nullable: true\n          type: integer\n        maxDataRetentionPeriod:\n          nullable: true\n          type: string\n        maxConnectionAttemptsPerSec:\n          nullable: true\n          type: integer\n    DataPlaneKafkaStatus_versions:\n      description: Version information related to a Kafka cluster\n      properties:\n        kafka:\n          type: string\n        strimzi:\n          type: string\n        kafkaIbp:\n          type: string\n    DataPlaneKafkaStatus_routes:\n      properties:\n        name:\n          type: string\n        prefix:\n          type: string\n        router:\n          type: string\n    DataplaneClusterAgentConfig_spec_observability:\n      description: Observability configurations\n      example:\n        channel: channel\n        tag: tag\n        accessToken: accessToken\n        repository: repository\n      properties:\n        accessToken:\n          nullable: true\n          type: string\n        channel:\n          type: string\n        repository:\n          type: string\n        tag:\n          type: string\n    DataplaneClusterAgentConfig_spec:\n      description: Data plane cluster agent spec\n      example:\n        observability:\n          channel: channel\n          tag: tag\n          accessToken: accessToken\n          repository: repository\n      properties:\n        observability:\n          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec_observability'\n    Error_allOf:\n      properties:\n        code:\n          type: string\n        reason:\n          type: string\n        operation_id:\n          type: string\n  securitySchemes:\n    Bearer:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ManagedKafka_allOf_spec_oauth\": parse schema: property \"maximumSessionLifetime\": parse schema: unexpected schema type: \"long\""
}