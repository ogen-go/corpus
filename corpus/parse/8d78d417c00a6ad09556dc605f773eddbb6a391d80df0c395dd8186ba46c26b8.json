{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/stream-services"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/stream-legal-entity/openapi.yaml",
			"byteSize": 110743,
			"content": "openapi: 3.0.1\ninfo:\n  title: Ingest Legal Entity API\n  description: Ingestion Saga for Legal Entities and their products\n  version: 2.3.0\n  x-logo:\n    url: \"http://www.backbase.com/wp-content/uploads/2017/04/backbase-logo-png.png\"\n    backgroundColor: \"#FFFFFF\"\n    altText: \"Backbase logo\"\nservers:\n  - url: http://legal-entity-http.proto.backbasecloud.com/\n    description: The server\npaths:\n  ###############################################\n  ## Legal Entity\n  ###############################################\n  /legal-entity:\n    post:\n      tags:\n        - legal-entity\n      summary: Create Legal Entity\n      description: Create a new Legal Entity and their supporting objects from Legal Entity\n      operationId: createLegalEntity\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/LegalEntity'\n            examples:\n              rootLegalEntityHierarchyExample:\n                $ref: '#/components/examples/RootLegalEntityHierarchyExample'\n              rootLegalEntityForMambu:\n                $ref: '#/components/examples/RootLegalEntityForMambu'\n              rootLegalEntityHierarchyWithArrangements:\n                $ref: '#/components/examples/RootLegalEntityHierarchyWithArrangements'\n              legalEntitiesForMockBack:\n                $ref: '#/components/examples/LegalEntitiesForMockBack'\n      responses:\n        200:\n          description: The created legal entity and all their objects with internal ids\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalEntity'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /service-agreement:\n    put:\n      tags:\n        - service-agreement\n      summary: Update Service Agreement\n      description: Update a service agreement\n      operationId: updateServiceAgreement\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdatedServiceAgreement'\n            examples:\n              updateCustomServiceAgreement:\n                $ref: '#/components/examples/CustomServiceAgreement'\n      responses:\n        200:\n          description: Service Agreement successfully updated\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UpdatedServiceAgreement'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /async/legal-entity:\n    post:\n      tags:\n        - legal-entity\n      summary: Process Legal Entity\n      description: Asynchronously create new Legal Entties and their supporting objects from Legal Entity\n      operationId: processLegalEntitiesAsync\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/LegalEntity'\n            examples:\n              rootLegalEntityHierarchyExample:\n                $ref: '#/components/examples/RootLegalEntityHierarchyExample'\n              rootLegalEntityForMambu:\n                $ref: '#/components/examples/RootLegalEntityForMambu'\n              rootLegalEntityHierarchyWithArrangements:\n                $ref: '#/components/examples/RootLegalEntityHierarchyWithArrangements'\n              legalEntitiesForMockBack:\n                $ref: '#/components/examples/LegalEntitiesForMockBack'\n      responses:\n        202:\n          description: The created legal entity and all their objects with internal ids\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LegalEntityResponse'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /async/service-agreement:\n    put:\n      tags:\n        - service-agreement\n      summary: Process Service Agreement\n      description: Asynchronously update a service agreement\n      operationId: updateServiceAgreementAsync\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdatedServiceAgreement'\n            examples:\n              updateCustomServiceAgreement:\n                $ref: '#/components/examples/CustomServiceAgreement'\n      responses:\n        200:\n          description: Service Agreement successfully updated\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UpdatedServiceAgreementResponse'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /async/legal-entity/{unitOfWorkId}:\n    get:\n      tags:\n        - legal-entity\n      summary: Process Legal Entity\n      description: Asynchronously create new Legal Entties and their supporting objects from Legal Entity\n      operationId: getUnitOfWork\n      parameters:\n        - name: unitOfWorkId\n          in: path\n          description: ID of Work Unit\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The created legal entity and all their objects with internal ids\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LegalEntityResponse'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /async/service-agreement/{unitOfWorkId}:\n    get:\n      tags:\n        - service-agreement\n      summary: Process Service Agreement\n      description: Asynchronously update a Service Agreement and their supporting objects\n      operationId: getUpdateServiceAgreementUnitOfWork\n      parameters:\n        - name: unitOfWorkId\n          in: path\n          description: ID of Work Unit\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The Service Agreement update job status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdatedServiceAgreementResponse'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\ncomponents:\n  schemas:\n    ###############################################\n    ## Products\n    ###############################################\n    ProductGroup:\n      type: object\n      description: \"Products assigned to service agreement\"\n      allOf:\n        - $ref: '#/components/schemas/BaseProductGroup'\n      properties:\n        serviceAgreement:\n          $ref: '#/components/schemas/ServiceAgreement'\n        assignedPermissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/AssignedPermission'\n\n    BatchProductGroup:\n      type: object\n      description: \"Product groups assigned to the users within same legal entity\"\n      properties:\n        serviceAgreement:\n          $ref: '#/components/schemas/ServiceAgreement'\n        productGroups:\n          type: array\n          items:\n            $ref: '#/components/schemas/BaseProductGroup'\n\n    BaseProductGroup:\n      type: object\n      description: \"Product groups assigned to the users within same legal entity\"\n      properties:\n        internalId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        productGroupType:\n          type: string\n          default: ARRANGEMENTS\n          enum:\n            - ARRANGEMENTS\n            - JOURNEYS\n        name:\n          maxLength: 128\n          minLength: 1\n          pattern: ^\\S(.*(\\S))?$\n          type: string\n          description: Product group name\n        description:\n          maxLength: 255\n          minLength: 1\n          pattern: ^\\S(.*(\\S))?$\n          type: string\n          description: Product group description\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobProfileUser'\n        currentAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CurrentAccount'\n        savingAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/SavingsAccount'\n        debitCards:\n          type: array\n          items:\n            $ref: '#/components/schemas/DebitCard'\n        creditCards:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreditCard'\n        loans:\n          type: array\n          items:\n            $ref: '#/components/schemas/Loan'\n        termDeposits:\n          type: array\n          items:\n            $ref: '#/components/schemas/TermDeposit'\n        investmentAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvestmentAccount'\n        customProducts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Product'\n        customDataGroupItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomDataGroupItem'\n\n    BaseProduct:\n      title: Base Product\n      description: |\n        The Base product holds all common properties between different product types\n      type: object\n      properties:\n        internalId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        externalId:\n          minLength: 1\n          maxLength: 50\n          type: string\n          description: A unique identifier for the product coming from the core banking system.\n        productTypeExternalId:\n          title: External ID of the Product Type as setup in Product Summary\n          maxLength: 64\n          minLength: 1\n          pattern: ^[^\\r\\n]{1,64}$\n          type: string\n        legalEntities:\n          type: array\n          items:\n            $ref: '#/components/schemas/LegalEntityReference'\n        name:\n          type: string\n          maxLength: 50\n          description: The name that can be assigned by the bank to label a product.\n        externalTransferAllowed:\n          type: boolean\n          description: Defines if transfer to another party is allowed.\n        crossCurrencyAllowed:\n          type: boolean\n          description: Defines if cross currency transfer is allowed\n        bankAlias:\n          maxLength: 50\n          type: string\n          description: The name that can be assigned by the bank to label the product.\n        sourceId:\n          maxLength: 11\n          type: string\n          description: Indicate if the account is regular or external\n        accountOpeningDate:\n          type: string\n          description: The date of activation of the account in the bank's system.\n          format: 'date-time'\n        lastUpdateDate:\n          type: string\n          format: 'date-time'\n          description: Last date of balance (or other) parameter update for the particular product\n        externalParentId:\n          maxLength: 50\n          type: string\n          description: Indicate if the account has parent child relationship with another account\n        state:\n          type: object\n          properties:\n            externalStateId:\n              maxLength: 50\n              type: string\n              description: An external unique identifier for the product state object.\n            state:\n              maxLength: 50\n              type: string\n              description: Name that describes the specific product state.\n        currency:\n          $ref: '#/components/schemas/CurrencyCode'\n        usersPreferences:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserPreferences'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    CurrentAccount:\n      properties:\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        availableBalance:\n          $ref: '#/components/schemas/AvailableBalance'\n        creditLimit:\n          $ref: '#/components/schemas/CreditLimit'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        BIC:\n          $ref: '#/components/schemas/BIC'\n        bankBranchCode:\n          $ref: '#/components/schemas/BankBranchCode'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        creditLimitUsage:\n          $ref: '#/components/schemas/CreditLimitUsage'\n        creditLimitInterestRate:\n          $ref: '#/components/schemas/CreditLimitInterestRate'\n        creditLimitExpiryDate:\n          $ref: '#/components/schemas/CreditLimitExpiryDate'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        debitCardsItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/DebitCardItem'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        minimumRequiredBalance:\n          $ref: '#/components/schemas/MinimumRequiredBalance'\n        accountHolderAddressLine1:\n          $ref: '#/components/schemas/AccountHolderAddressLine1'\n        accountHolderAddressLine2:\n          $ref: '#/components/schemas/AccountHolderAddressLine2'\n        accountHolderStreetName:\n          $ref: '#/components/schemas/AccountHolderStreetName'\n        town:\n          $ref: '#/components/schemas/Town'\n        postCode:\n          $ref: '#/components/schemas/PostCode'\n        countrySubDivision:\n          $ref: '#/components/schemas/CountrySubDivision'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        accountHolderCountry:\n          $ref: '#/components/schemas/AccountHolderCountry'\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n    SavingsAccount:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        availableBalance:\n          $ref: '#/components/schemas/AvailableBalance'\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        BIC:\n          $ref: '#/components/schemas/BIC'\n        bankBranchCode:\n          $ref: '#/components/schemas/BankBranchCode'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        minimumRequiredBalance:\n          $ref: '#/components/schemas/MinimumRequiredBalance'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        termUnit:\n          $ref: '#/components/schemas/TermUnit'\n        termNumber:\n          $ref: '#/components/schemas/TermNumber'\n        maturityDate:\n          $ref: '#/components/schemas/MaturityDate'\n        maturityAmount:\n          $ref: '#/components/schemas/MaturityAmount'\n        autoRenewalIndicator:\n          $ref: '#/components/schemas/AutoRenewalIndicator'\n        interestPaymentFrequencyUnit:\n          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'\n        interestPaymentFrequencyNumber:\n          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        interestSettlementAccount:\n          $ref: '#/components/schemas/InterestSettlementAccount'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        accountHolderAddressLine1:\n          $ref: '#/components/schemas/AccountHolderAddressLine1'\n        accountHolderAddressLine2:\n          $ref: '#/components/schemas/AccountHolderAddressLine2'\n        accountHolderStreetName:\n          $ref: '#/components/schemas/AccountHolderStreetName'\n        town:\n          $ref: '#/components/schemas/Town'\n        postCode:\n          $ref: '#/components/schemas/PostCode'\n        countrySubDivision:\n          $ref: '#/components/schemas/CountrySubDivision'\n        accountHolderCountry:\n          $ref: '#/components/schemas/AccountHolderCountry'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n    DebitCard:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        number:\n          maxLength: 36\n          type: string\n          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        cardNumber:\n          $ref: '#/components/schemas/CardNumber'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        debitCardsItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/DebitCardItem'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        validThru:\n          $ref: '#/components/schemas/ValidThru'\n    CreditCard:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        availableBalance:\n          $ref: '#/components/schemas/AvailableBalance'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n        creditLimit:\n          $ref: '#/components/schemas/CreditLimit'\n        number:\n          maxLength: 36\n          type: string\n          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        cardNumber:\n          $ref: '#/components/schemas/CardNumber'\n        creditCardAccountNumber:\n          $ref: '#/components/schemas/CreditCardAccountNumber'\n        validThru:\n          $ref: '#/components/schemas/ValidThru'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        applicableInterestRate:\n          $ref: '#/components/schemas/ApplicableInterestRate'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        remainingCredit:\n          $ref: '#/components/schemas/RemainingCredit'\n        outstandingPayment:\n          $ref: '#/components/schemas/OutstandingPayment'\n        minimumPayment:\n          $ref: '#/components/schemas/MinimumPayment'\n        minimumPaymentDueDate:\n          $ref: '#/components/schemas/MinimumPaymentDueDate'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        creditLimitUsage:\n          $ref: '#/components/schemas/CreditLimitUsage'\n        creditLimitInterestRate:\n          $ref: '#/components/schemas/CreditLimitInterestRate'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        bankBranchCode:\n          $ref: '#/components/schemas/BankBranchCode'\n    Loan:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        availableBalance:\n          $ref: '#/components/schemas/AvailableBalance'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        productNumber:\n          $ref: '#/components/schemas/ProductNumber'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        termUnit:\n          $ref: '#/components/schemas/TermUnit'\n        termNumber:\n          $ref: '#/components/schemas/TermNumber'\n        outstandingPrincipalAmount:\n          $ref: '#/components/schemas/OutstandingPrincipalAmount'\n        outstandingPayment:\n          $ref: '#/components/schemas/OutstandingPayment'\n        monthlyInstalmentAmount:\n          $ref: '#/components/schemas/MonthlyInstalmentAmount'\n        amountInArrear:\n          $ref: '#/components/schemas/AmountInArrear'\n        interestSettlementAccount:\n          $ref: '#/components/schemas/InterestSettlementAccount'\n        minimumPayment:\n          $ref: '#/components/schemas/MinimumPayment'\n        minimumPaymentDueDate:\n          $ref: '#/components/schemas/MinimumPaymentDueDate'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        maturityDate:\n          $ref: '#/components/schemas/MaturityDate'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        creditLimit:\n          $ref: '#/components/schemas/CreditLimit'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n        bankBranchCode:\n          $ref: '#/components/schemas/BankBranchCode'\n    TermDeposit:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        productNumber:\n          $ref: '#/components/schemas/ProductNumber'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        termUnit:\n          $ref: '#/components/schemas/TermUnit'\n        termNumber:\n          $ref: '#/components/schemas/TermNumber'\n        maturityDate:\n          $ref: '#/components/schemas/MaturityDate'\n        maturityAmount:\n          $ref: '#/components/schemas/MaturityAmount'\n        autoRenewalIndicator:\n          $ref: '#/components/schemas/AutoRenewalIndicator'\n        interestPaymentFrequencyUnit:\n          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'\n        interestPaymentFrequencyNumber:\n          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'\n        interestSettlementAccount:\n          $ref: '#/components/schemas/InterestSettlementAccount'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        outstandingPrincipalAmount:\n          $ref: '#/components/schemas/OutstandingPrincipalAmount'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        minimumRequiredBalance:\n          $ref: '#/components/schemas/MinimumRequiredBalance'\n    InvestmentAccount:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        currentInvestment:\n          $ref: '#/components/schemas/CurrentInvestment'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        productNumber:\n          $ref: '#/components/schemas/ProductNumber'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n    Product:\n      allOf:\n        - $ref: '#/components/schemas/BaseProduct'\n      properties:\n        ### Current Account Fields\n        bookedBalance:\n          $ref: '#/components/schemas/BookedBalance'\n        availableBalance:\n          $ref: '#/components/schemas/AvailableBalance'\n        creditLimit:\n          $ref: '#/components/schemas/CreditLimit'\n        IBAN:\n          $ref: '#/components/schemas/IBAN'\n        BBAN:\n          $ref: '#/components/schemas/BBAN'\n        urgentTransferAllowed:\n          $ref: '#/components/schemas/UrgentTransfer'\n        BIC:\n          $ref: '#/components/schemas/BIC'\n        bankBranchCode:\n          $ref: '#/components/schemas/BankBranchCode'\n        accountInterestRate:\n          $ref: '#/components/schemas/AccountInterestRate'\n        valueDateBalance:\n          $ref: '#/components/schemas/ValueDateBalance'\n        creditLimitUsage:\n          $ref: '#/components/schemas/CreditLimitUsage'\n        creditLimitInterestRate:\n          $ref: '#/components/schemas/CreditLimitInterestRate'\n        creditLimitExpiryDate:\n          $ref: '#/components/schemas/CreditLimitExpiryDate'\n        accruedInterest:\n          $ref: '#/components/schemas/AccruedInterest'\n        debitCardsItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/DebitCardItem'\n        accountHolderName:\n          $ref: '#/components/schemas/AccountHolderName'\n        startDate:\n          $ref: '#/components/schemas/StartDate'\n        minimumRequiredBalance:\n          $ref: '#/components/schemas/MinimumRequiredBalance'\n        accountHolderAddressLine1:\n          $ref: '#/components/schemas/AccountHolderAddressLine1'\n        accountHolderAddressLine2:\n          $ref: '#/components/schemas/AccountHolderAddressLine2'\n        accountHolderStreetName:\n          $ref: '#/components/schemas/AccountHolderStreetName'\n        town:\n          $ref: '#/components/schemas/Town'\n        postCode:\n          $ref: '#/components/schemas/PostCode'\n        countrySubDivision:\n          $ref: '#/components/schemas/CountrySubDivision'\n        creditAccount:\n          $ref: '#/components/schemas/CreditAccount'\n        debitAccount:\n          $ref: '#/components/schemas/DebitAccount'\n        accountHolderCountry:\n          $ref: '#/components/schemas/AccountHolderCountry'\n        # Saving Accounts Fields\n        termUnit:\n          $ref: '#/components/schemas/TermUnit'\n        termNumber:\n          $ref: '#/components/schemas/TermNumber'\n        maturityDate:\n          $ref: '#/components/schemas/MaturityDate'\n        maturityAmount:\n          $ref: '#/components/schemas/MaturityAmount'\n        autoRenewalIndicator:\n          $ref: '#/components/schemas/AutoRenewalIndicator'\n        interestPaymentFrequencyUnit:\n          $ref: '#/components/schemas/InterestPaymentFrequencyUnit'\n        interestPaymentFrequencyNumber:\n          $ref: '#/components/schemas/InterestPaymentFrequencyNumber'\n        principalAmount:\n          $ref: '#/components/schemas/PrincipalAmount'\n        interestSettlementAccount:\n          $ref: '#/components/schemas/InterestSettlementAccount'\n        # Debit Cards\n        number:\n          maxLength: 36\n          type: string\n          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk.\n        cardNumber:\n          $ref: '#/components/schemas/CardNumber'\n        validThru:\n          $ref: '#/components/schemas/ValidThru'\n\n        # Credit Cards Fields\n        creditCardAccountNumber:\n          $ref: '#/components/schemas/CreditCardAccountNumber'\n        applicableInterestRate:\n          $ref: '#/components/schemas/ApplicableInterestRate'\n        remainingCredit:\n          $ref: '#/components/schemas/RemainingCredit'\n        outstandingPayment:\n          $ref: '#/components/schemas/OutstandingPayment'\n        minimumPayment:\n          $ref: '#/components/schemas/MinimumPayment'\n        minimumPaymentDueDate:\n          $ref: '#/components/schemas/MinimumPaymentDueDate'\n\n        # Loans\n        productNumber:\n          $ref: '#/components/schemas/ProductNumber'\n        outstandingPrincipalAmount:\n          $ref: '#/components/schemas/OutstandingPrincipalAmount'\n        monthlyInstalmentAmount:\n          $ref: '#/components/schemas/MonthlyInstalmentAmount'\n        amountInArrear:\n          $ref: '#/components/schemas/AmountInArrear'\n    DebitCardItem:\n      type: object\n      properties:\n        number:\n          maxLength: 36\n          type: string\n          description: First 6 and/or last 4 digits of a Payment card. All other digits will/to be masked. Be aware that using card number differently is potential PCI risk\n        expiryDate:\n          maxLength: 32\n          type: string\n          description: Expiration date of a credit card, after which is no longer valid\n        cardId:\n          maxLength: 32\n          type: string\n          description: External ID of the card\n        cardholderName:\n          maxLength: 64\n          type: string\n          description: First Name and Last Name of card holder.\n        cardType:\n          maxLength: 32\n          type: string\n          description: Card type to change card image based on it, ex. Maestro Gold\n        cardStatus:\n          maxLength: 32\n          type: string\n          description: Status of the card ex. Active, Expired etc\n\n\n    LegalEntityReference:\n      title: Legal Entity Reference\n      properties:\n        internalId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        externalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n      required:\n        - internalId\n        - externalId\n    LegalEntity:\n      title: Legal Entity\n      description: |\n        A Legal Entity is any personal or non-personal entity that is involved in a transaction or an product with the bank. Both the bank and its customers are legal entities\n\n        A Legal Entity:\n        * Has one or more users that act on its behalf.\n        * Owns one or more products.\n        * A legal entity hierarchy is a collection of parent-child relationships. For example, within the same deployment, this allows you to:\n        * Set up a holding structure for a corporate customer of the bank.\n        * Set up a structure within the bank to support country and regional offices.\n      type: object\n      properties:\n        name:\n          type: string\n        activateSingleServiceAgreement:\n          type: boolean\n        internalId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        externalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        legalEntityType:\n          $ref: '#/components/schemas/LegalEntityType'\n        realmName:\n          type: string\n          description: Realm to which the Legal Entity should be mapped.\n        parentExternalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        parentInternalId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        subsidiaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/LegalEntity'\n        productGroups:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProductGroup\"\n        limit:\n          $ref: '#/components/schemas/Limit'\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobProfileUser'\n        referenceJobRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReferenceJobRole'\n        administrators:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n        masterServiceAgreement:\n          $ref: '#/components/schemas/ServiceAgreement'\n        customServiceAgreement:\n          $ref: '#/components/schemas/ServiceAgreement'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n      required:\n        - name\n        - external\n        - legalEntityType\n        - administrators\n        - jobProfile\n    JobProfileUser:\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n        legalEntityReference:\n          $ref: '#/components/schemas/LegalEntityReference'\n        referenceJobRoleNames:\n          type: array\n          items:\n            type: string\n        businessFunctionGroups:\n          type: array\n          description: Business Function Groups\n          items:\n            $ref: '#/components/schemas/BusinessFunctionGroup'\n        approvalStatus:\n          $ref: '#/components/schemas/ApprovalStatus'\n      required:\n        - user\n    LegalEntityType:\n      type: string\n      title: Legal Entity Type\n      description: Type of the legal entity. Bank or Customer.\n      enum:\n        - CUSTOMER\n        - BANK\n\n    IdentityUserLinkStrategy:\n      type: string\n      title: Strategy to link user in Identity.\n      description: Identity User Creation Strategy to Create Users in Identity or Import Users from Identity.\n      default: IDENTITY_AGNOSTIC\n      enum:\n        - IMPORT_FROM_IDENTIY\n        - CREATE_IN_IDENTITY\n        - IDENTITY_AGNOSTIC\n\n    User:\n      title: User\n      description: |\n        User that accessses the system on behalf of the Legal Entity\n        A User is a person who interacts with the bank and who uses Backbase applications on behalf of the legal entity they are representing.\n      type: object\n      properties:\n        internalId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        externalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        legalEntityId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        emailAddress:\n          $ref: '#/components/schemas/EmailAddress'\n        mobileNumber:\n          $ref: '#/components/schemas/PhoneNumber'\n        fullName:\n          type: string\n        limit:\n          $ref: '#/components/schemas/Limit'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n        attributes:\n          type: object\n          description: Custom attributes to be added to the user.\n          additionalProperties:\n            type: string\n        identityLinkStrategy:\n          $ref: '#/components/schemas/IdentityUserLinkStrategy'\n        userProfile:\n          $ref: '#/components/schemas/UserProfile'\n        locked:\n          type: boolean\n          description: Identity status. If true identity will be locked.\n        additionalRealmRoles:\n          type: array\n          items:\n            type: String\n      required:\n        - externalId\n        - fullName\n    EmailAddress:\n      title: \"The email addresses the user can be reached by.\"\n      required:\n        - address\n        - key\n        - type\n      type: object\n      properties:\n        key:\n          maxLength: 70\n          minLength: 1\n          type: string\n          description: Unique key identifying the email address.\n        type:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: Key identifying the type of electronic address, e.g. work or personal.\n        primary:\n          type: boolean\n          description: Flag denoting whether this is the main electronic address.\n        address:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: Address.\n    PhoneNumber:\n      required:\n        - key\n        - number\n        - type\n      type: object\n      properties:\n        key:\n          maxLength: 70\n          minLength: 1\n          type: string\n          description: Unique key identifying the phone address.\n        type:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: Key identifying the type of phone number, e.g. mobile or land line.\n        primary:\n          type: boolean\n          description: Flag denoting whether this is the main phone number.\n        number:\n          maxLength: 30\n          minLength: 1\n          type: string\n          description: Phone number.\n    PostalAddress:\n      required:\n        - key\n        - type\n      type: object\n      properties:\n        key:\n          maxLength: 70\n          minLength: 1\n          type: string\n          description: Unique key identifying the postal address.\n        type:\n          maxLength: 36\n          minLength: 1\n          type: string\n          description: Key identifying the type of postal address, e.g. residential, business, po-box, mail-to, delivery-to.\n        primary:\n          type: boolean\n          description: Flag denoting whether this is the main postal address.\n        department:\n          maxLength: 70\n          type: string\n          description: Department.\n        subDepartment:\n          maxLength: 70\n          type: string\n          description: Sub Department.\n        addressLine:\n          maxLength: 70\n          type: string\n          description: Address Line.\n        buildingNumber:\n          maxLength: 255\n          type: string\n          description: Building number.\n        streetName:\n          maxLength: 255\n          type: string\n          description: Street.\n        townName:\n          maxLength: 35\n          type: string\n          description: Town.\n        postalCode:\n          maxLength: 16\n          type: string\n          description: Postcode.\n        countrySubDivision:\n          maxLength: 35\n          type: string\n          description: Country sub-division.\n        country:\n          maxLength: 3\n          type: string\n          description: Country code - ISO 3166.\n    Limit:\n      title: Limit\n      type: object\n      properties:\n        transactional:\n          $ref: '#/components/schemas/TransactionalLimit'\n        daily:\n          $ref: '#/components/schemas/DailyLimit'\n        weekly:\n          $ref: '#/components/schemas/WeeklyLimit'\n        monthly:\n          $ref: '#/components/schemas/MonthlyLimit'\n        quarterly:\n          $ref: '#/components/schemas/QuarterlyLimit'\n        yearly:\n          $ref: '#/components/schemas/YearlyLimit'\n    UserProfile:\n      title: UserProfile\n      description: |\n        User Data for User Profile Manager. Additional to Data included in User Model\n      type: object\n      properties:\n        userId:\n          type: string\n        externalId:\n          type: string\n        userName:\n          type: string\n        name:\n          $ref: '#/components/schemas/Name'\n        displayName:\n          type: string\n        nickName:\n          type: string\n        profileUrl:\n          type: string\n        personalInformation:\n          $ref: '#/components/schemas/PersonalInformation'\n        identificationDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/IdentificationDetails'\n        title:\n          type: string\n        userType:\n          type: string\n        preferredLanguage:\n          type: string\n        locale:\n          type: string\n        timezone:\n          type: string\n        active:\n          type: boolean\n        additionalEmails:\n          type: array\n          items:\n            $ref: '#/components/schemas/Multivalued'\n        additionalPhoneNumbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Multivalued'\n        ims:\n          type: array\n          items:\n            $ref: '#/components/schemas/Multivalued'\n        photos:\n          type: array\n          items:\n            $ref: '#/components/schemas/Multivalued'\n        x509Certificates:\n          type: array\n          items:\n            $ref: '#/components/schemas/Multivalued'\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n        extended:\n          type: object\n      required:\n        - userId\n        - externalId\n        - userName\n    Name:\n      title: Name\n      type: object\n      properties:\n        formatted:\n          type: string\n        familyName:\n          type: string\n        givenName:\n          type: string\n        middleName:\n          type: string\n        honorificPrefix:\n          type: string\n        honorificSuffix:\n          type: string\n    PersonalInformation:\n      title: PersonalInformation\n      type: object\n      properties:\n        gender:\n          type: string\n        dateOfBirth:\n          type: string\n        countryOfBirth:\n          type: string\n        countryOfResidence:\n          type: string\n        nationalities:\n          type: array\n          items:\n            type: string\n        maritalStatus:\n          type: string\n        educationLevel:\n          type: string\n        employer:\n          type: string\n        employmentStatus:\n          type: string\n    IdentificationDetails:\n      title: IdentificationDetails\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n        issueDate:\n          type: string\n          format: date\n        expiryDate:\n          type: string\n          format: date\n        issueCountryCode:\n          type: string\n    Multivalued:\n      title: Multivalued\n      type: object\n      properties:\n        value:\n          type: string\n        display:\n          type: string\n        type:\n          type: string\n        primary:\n          type: boolean\n    Address:\n      title: Address\n      type: object\n      properties:\n        formatted:\n          type: string\n        streetAddress:\n          type: string\n        locality:\n          type: string\n        region:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n        type:\n          type: string\n        primary:\n          type: boolean\n\n    ServiceAgreement:\n      title:  Service Agreement\n      description: |\n        The formal vehicle that allows users of one entity to access products of that or other entities\n        A Service agreement is:\n        - A contract that includes one or more legal entities. A legal entity that is participating in a service agreement can allow a subset of its users to act through that service agreement and/or allow a subset of its products to be accessed through the service agreement. Within each service agreement, permissions to perform specific tasks are granted to users, including access to products shared by one or more legal entities (participating in that service agreement). As such, a service agreement is a way to give third party users specific access to your products.\n        - A special kind of service agreement is called the master service agreement. This service agreement has one legal entity participant and once configured, the participant cannot be changed. Important to know is that once the user is granted with administrative permissions (e.g. manage account groups), he or she has the power to execute the task in any service agreement lower in the hierarchy. For example, if the user of the bank is assigned with manage account groups permission in the master service agreement of the bank, the user can manage account groups in any service agreement lower in the hierarchy.\n        - A service agreement may be restricted in time, by setting a time bound. Permissions granted to users in the time-restricted service agreement, are active and may be consumed, only while the time bound is valid.\n      properties:\n        internalId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        externalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        name:\n          maxLength: 128\n          minLength: 1\n          pattern: ^\\S(.*(\\S))?$\n          type: string\n          description: The service agreement name\n        description:\n          maxLength: 255\n          minLength: 1\n          pattern: ^(\\S|\\n)((.|\\n)*(\\S|\\n))?$\n          type: string\n          description: Description\n        participants:\n          type: array\n          description: Participants of the service agreement\n          items:\n            $ref: '#/components/schemas/LegalEntityParticipant'\n        validFromDate:\n          type: string\n          format: date\n          description: Start date of the service agreement.\n        validFromTime:\n          type: string\n          description: Start time of the service agreement.\n        validUntilDate:\n          type: string\n          format: date\n          description: End date of the service agreement.\n        validUntilTime:\n          type: string\n          description: End time of the service agreement.\n        status:\n          $ref: '#/components/schemas/LegalEntityStatus'\n        isMaster:\n          type: boolean\n          description: Master flag\n        regularUserAps:\n          $ref: '#/components/schemas/ApsIdentifiers'\n        adminUserAps:\n          $ref: '#/components/schemas/ApsIdentifiers'\n        jobRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobRole'\n        creatorLegalEntity:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    ApsIdentifiers:\n      type: object\n      properties:\n        nameIdentifiers:\n          type: array\n          items:\n            type: string\n        idIdentifiers:\n          type: array\n          items:\n            type: number\n    LegalEntityParticipant:\n      required:\n        - externalId\n        - sharingAccounts\n        - sharingUsers\n      type: object\n      properties:\n        externalId:\n          $ref: '#/components/schemas/ExternalIdentifier'\n        sharingUsers:\n          type: boolean\n          description: Boolean value if the Participant is sharing users\n        sharingAccounts:\n          type: boolean\n          description: Boolean value if the participant is sharing accounts\n        admins:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExternalIdentifier'\n        users:\n          type: array\n          description: User external ids\n          items:\n            $ref: '#/components/schemas/ExternalIdentifier'\n        action:\n          type: string\n          description: the action to perform for this participant. Required for participant update flow\n          enum:\n            - \"ADD\"\n            - \"REMOVE\"\n    LegalEntityStatus:\n      type: string\n      description: Status of the entity\n      enum:\n        - ENABLED\n        - DISABLED\n    ###############################################\n    ## Reusable Fields\n    ###############################################\n    InternalIdentifier:\n      title: Interal Identifier\n      type: string\n      description: Internal Read Only Identifier\n      readOnly: true\n    ExternalIdentifier:\n      title: External Identifier\n      maxLength: 64\n      minLength: 1\n      pattern: ^[^\\r\\n]{1,64}$\n      type: string\n      description: External legal entity identifier.\n    UrgentTransfer:\n      type: boolean\n      description: Defines if urgent transfer is allowed.\n    ValidThru:\n      type: string\n      format: date-time\n      description: Expiration date of a credit card, after which is no longer valid.\n    ValueDateBalance:\n      type: number\n      description: The balance of the account on a specific date that needs to be used for the calculation of interest. NB! If no date is specified (like for the book date balance) the current date can be assumed.\n    ProductNumber:\n      maxLength: 36\n      type: string\n      description: The number identifying the contract.\n    BBAN:\n      maxLength: 50\n      type: string\n      description: Specifying the BBAN of the account.\n    BIC:\n      maxLength: 11\n      type: string\n      description: Bank Identifier Code - international bank code that identifies particular banks worldwide\n    CardNumber:\n      type: number\n    CreditCardAccountNumber:\n      maxLength: 32\n      type: string\n      description: The number of the account the credit card transactions settle on (so actually the reference to the settlement account of the card)?\n    CreditLimitExpiryDate:\n      type: string\n      format: date-time\n      description: The date after which overdraft will no longer be available to the account (renewed automatically or cancelled).\n    CreditLimitInterestRate:\n      type: number\n      description: Overdraft Interest is an interest applied to the account for any time throughout the month when the account is overdrawn.\n    CreditLimitUsage:\n      type: number\n      description: Monetary amount of the used overdraft.\n    CrossCurrency:\n      type: boolean\n      description: Defines if cross currency transfer is allowed\n    AccountHolderAddressLine1:\n      maxLength: 70\n      type: string\n      description: Address of the Payer/Payee - Alternate address line for the account.\n    AccountHolderAddressLine2:\n      maxLength: 70\n      type: string\n      description: Address of the Payer/Payee - Alternate address line for the account.\n    AccountHolderCountry:\n      pattern: ^[A-Z]{2}$\n      type: string\n      description: Country of the account holder\n    AccountHolderName:\n      maxLength: 256\n      type: string\n      description: Name of the Payer/Payee i.e. Owner of the Account\n    AccountHolderStreetName:\n      maxLength: 70\n      type: string\n      description: Street name of the Payer/Payee - Alternate street name for the account.\n    AccountInterestRate:\n      type: number\n      description: The annualized cost of credit or debt-capital computed as the percentage ratio of interest to the principal.\n    AccountOpeningDate:\n      type: string\n      format: date-time\n    AccruedInterest:\n      description: The interest that is earned (credit interest) or due (debit interest) but not settled yet.\n      type: number\n    AmountInArrear:\n      type: number\n      format: double\n      description: The part of a debt that is overdue after missing one or more required payments. The amount of the arrears is the amount accrued from the date on which the first missed payment was due.\n    ApplicableInterestRate:\n      type: number\n      description: The interest rate or rates which would be used for a particular product.\n    AutoRenewalIndicator:\n      type: boolean\n      description: Indicates whether or not an product is to be continued after maturity automatically. Usually the product is renewed using the same principal and term unless renegotiation has taken place prior to expiration.\n    RemainingCredit:\n      type: number\n      description: Amount of money the user is available to use from the Credit limit of the account\n    OutstandingPayment:\n      type: number\n      description: Outstanding payment refers to the outstanding [unpaid] balance, i.e., the current amount due.\n    OutstandingPrincipalAmount:\n      type: number\n      format: double\n      description: This IS the value date balance of the product.\n    MaturityAmount:\n      type: number\n      format: double\n      description: Amount payable at the end of a holding period of a product (maturity date). For deposit all of the interest is usualy paid at maturity date (IF the term is shorter then one year).\n    MaturityDate:\n      type: string\n      format: date-time\n      description: End term of a holding period.\n    MinimumPayment:\n      type: number\n      format: double\n      description: The minimum payment set a percentage of balance, or a fixed cash amount.\n    MinimumPaymentDueDate:\n      type: string\n      format: date-time\n      description: Minimum Payment Due Date shown on your monthly statement to remain in good standing.\n    MinimumRequiredBalance:\n      type: number\n      format: double\n      description: Minimum amount that a customer must have in an account in order to receive some sort of service, such as keeping the account open or receive interest.\n    MonthlyInstalmentAmount:\n      type: number\n      format: double\n      description: A fixed payment amount paid by a borrower to the bank at a specified date each calendar month.\n    TermNumber:\n      type: number\n      description: The number of times interest rate is paid on the settlement account.\n    TermUnit:\n      type: string\n      description: The period of time and/or the interest rate arranged between Bank and customer.\n      enum:\n        - \"Daily\"\n        - \"Weekly\"\n        - \"Monthly\"\n        - \"Quarterly\"\n        - \"Yearly\"\n    Town:\n      maxLength: 35\n      type: string\n      description: Town of the Payer/Payee - Alternate town for the account.\n    InterestSettlementAccount:\n      maxLength: 32\n      type: string\n      description: Account that provides quick access to accumulated cash to facilitate daily settlements with other businesses.\n    CreditAccount:\n      type: boolean\n      description: Indicator whether or not the product can be used in payment orders as credit account.\n    DebitAccount:\n      type: boolean\n      description: Indicator whether or not the product can be used in payment orders as debit account.\n    IBAN:\n      maxLength: 34\n      pattern: ^(AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW).*\n      type: string\n      description: Specifying the IBAN of the account.\n    BankBranchCode:\n      maxLength: 20\n      type: string\n      description: (This is to accomodate additional country specific fields like Sort Code in UK)\n    StartDate:\n      type: string\n      format: 'date-time'\n    PostCode:\n      maxLength: 16\n      type: string\n      description: Post Code of the Payer/Payee\n    CountrySubDivision:\n      maxLength: 35\n      type: string\n      description: Country SubDivision of the Payer/Payee\n    InterestPaymentFrequencyNumber:\n      type: number\n      description: Number of times per year when the accumulated interest is settled to the account on a regular basis. The frequency could be yearly, half-yearly, quarterly, monthly, weekly, daily (or not at all, until maturity)\n    InterestPaymentFrequencyUnit:\n      type: string\n      description: The period of time and/or the interest rate arranged between Bank and customer.\n      enum:\n        - \"Daily\"\n        - \"Weekly\"\n        - \"Monthly\"\n        - \"Quarterly\"\n        - \"Yearly\"\n    CurrencyCode:\n      pattern: ^[A-Z]{3}$\n      type: string\n      description: The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount\n    BookedBalance:\n      type: object\n      description: \"Booked Balance\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    AvailableBalance:\n      type: object\n      description: \"Available Balance\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    CreditLimit:\n      type: object\n      description: \"Credit Limit\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    PrincipalAmount:\n      type: object\n      description: \"The amount that was (originally) contracted for the respective product. This is mainly used in the context of loans and deposits.\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    CurrentInvestment:\n      type: object\n      description: The total current value of all the securities kept in the account.\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    TransactionalLimit:\n      type: object\n      description: \"Transactional Limit\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    DailyLimit:\n      type: object\n      description: \"Daily Limit\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    WeeklyLimit:\n      type: object\n      description: \"Weekly Limit\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    MonthlyLimit:\n      type: object\n      description: \"Monthly Limit\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    QuarterlyLimit:\n      type: object\n      description: \"Quarterly Limit\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n    YearlyLimit:\n      type: object\n      description: \"Yearly Limit\"\n      properties:\n        amount:\n          type: number\n          format: double\n        currencyCode:\n          $ref: '#/components/schemas/CurrencyCode'\n\n    ProductState:\n      type: object\n      properties:\n        externalStateId:\n          maxLength: 50\n          type: string\n          description: An external unique identifier for the product state object.\n        state:\n          maxLength: 50\n          type: string\n          description: Name that describes the specific product state.\n\n    ApprovalStatus:\n      type: string\n      description: Presentation approval status\n      enum:\n        - APPROVED\n        - PENDING\n        - REJECTED\n      x-java-type: com.backbase.presentation.accessgroup.rest.spec.v2.accessgroups.ApprovalStatus\n      x-java-enum-names:\n        - APPROVED\n        - PENDING\n        - REJECTED\n\n\n    BusinessFunctionGroup:\n      required:\n        - name\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/InternalIdentifier'\n        legalEntityId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        serviceAgreementId:\n          $ref: '#/components/schemas/InternalIdentifier'\n        name:\n          maxLength: 128\n          minLength: 1\n          pattern: ^\\S(.*(\\S))?$\n          type: string\n          description: Function group name\n        description:\n          maxLength: 255\n          minLength: 1\n          pattern: ^(\\S|\\n)((.|\\n)*(\\S|\\n))?$\n          type: string\n          description: Function group description\n        type:\n          type: string\n          enum:\n            - DEFAULT\n            - SYSTEM\n            - TEMPLATE\n          description: Type of function group\n          default: DEFAULT\n        dataGroupsAllowed:\n          type: boolean\n          description: Wether this function group can be applied to data groups\n        functions:\n          type: array\n          items:\n            $ref: '#/components/schemas/BusinessFunction'\n    BusinessFunction:\n      required:\n        - name\n        - functionCode\n        - functionId\n        - privileges\n        - resourceCode\n        - resourceName\n      type: object\n      properties:\n        name:\n          maxLength: 32\n          description: |-\n            Name of the business function and unique In the system\n            \u003cproject_prefix\u003e \u003cdescriptive name\u003e\n          minLength: 1\n          type: string\n          example: \"bankA PISP\"\n        functionId:\n          description: |-\n            Unique ID in the system\n            Guidelines: \u003cproject_prefix\u003e.\u003c1xxx\u003e\n          maxLength: 36\n          minLength: 1\n          type: string\n          example: \"bankA.1000\"\n        functionCode:\n          maxLength: 32\n          minLength: 1\n          type: string\n          description: |-\n            Unique code used for internationalization on front-end (Widget)\n            Guidelines: same as function name in lower case, use dots instead of spaces\n            On front-end you can map this code with the descriptive name of the business function. For example, Make payments from the business’s bank accounts using third party websites or software.\n          example: bankA.pisp\n        resourceName:\n          description: |-\n            Logical Grouping of Business Functions (not real usage at the moment, might be helpful in future)\n            Guidelines: \u003cproject_prefix\u003e \u003cif the BF is part of some logical grouping or use the same name as the BF\u003e\n          maxLength: 32\n          minLength: 1\n          type: string\n          example: bankA psd2\n        resourceCode:\n          description: |-\n            Unique code used for internationalization on front-end (Widget) if required (for now we are not using this at all)\n            Guidelines: same as resource_name in lower case, use dots instead of spaces\n          maxLength: 32\n          minLength: 1\n          type: string\n          example: bankA.psd2\n        privileges:\n          type: array\n          items:\n            $ref: '#/components/schemas/Privilege'\n    Privilege:\n      required:\n        - privilege\n      type: object\n      properties:\n        privilege:\n          maxLength: 16\n          minLength: 1\n          type: string\n        supportsLimit:\n          type: boolean\n        limit:\n          $ref: '#/components/schemas/Limit'\n    AssignedPermission:\n      type: object\n      properties:\n        permittedObjectInternalIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/InternalIdentifier'\n        permittedObjectExternalIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExternalIdentifier'\n        approvalStatus:\n          $ref: '#/components/schemas/ApprovalStatus'\n        resourceName:\n          type: string\n        functionName:\n          type: string\n        privileges:\n          $ref: '#/components/schemas/Privilege'\n        permittedObjects:\n          type: object\n          additionalProperties: true\n    UserPreferences:\n      description: 'Users defined preferences for a specific arrangement.'\n      required:\n        - userExternalId\n      type: object\n      properties:\n        userExternalId:\n          maxLength: 50\n          type: string\n          description: The unique User identifier related to these user preferences\n        alias:\n          maxLength: 50\n          type: string\n          description: The name that can be assigned by the user to label the arrangement\n        visible:\n          type: boolean\n          description: User indicator whether to show or hide the arrangement on the\n            front end\n        favorite:\n          type: boolean\n          description: Indication whether an arrangement can be favorable for a user\n        additions:\n          type: object\n          additionalProperties:\n            type: string\n    ###############################################\n    ## Additional Data Group Items\n    ###############################################\n\n    CustomDataGroupItem:\n      type: object\n      properties:\n        externalId:\n          type: string\n          description: \"Data Group Item Internal Id\"\n        internalId:\n          type: string\n          description: \"Data Group Item External Id\"\n\n    ###############################################\n    ## Async Legal Entity\n    ###############################################\n    LegalEntityResponse:\n      type: object\n      description: \"Unit of Work processing the Legal Entities.\"\n      properties:\n        id:\n          type: string\n        state:\n          type: string\n          enum:\n            - NEW\n            - ACCEPTED\n            - IN_PROGRESS\n            - FAILED\n            - FAILED_RETRIES_EXHAUSTED\n            - COMPLETED\n            - COMPLETED_AFTER_RETRIES\n            - ROLLBACK_IN_PROGRESS\n            - ROLLBACK_COMPLETED\n            - ROLLBACK_FAILED\n        locked:\n          type: boolean\n        registeredAt:\n          type: string\n          format: date-time\n        lockedAt:\n          type: string\n          format: date-time\n        nextAttemptAt:\n          type: string\n          format: date-time\n        finishedAt:\n          type: string\n          format: date-time\n        retries:\n          type: integer\n        tasks:\n          type: array\n          description: Tasks belonging to the Unit Of Work. A Unit of Work is complete when all tasks are completed.\n          items:\n            description: Unit Of Work Task\n            type: object\n            properties:\n              legalEntityExtenralId:\n                type: string\n              state:\n                type: string\n                enum:\n                  - ACCEPTED\n                  - IN_PROGRESS\n                  - FAILED\n                  - COMPLETED\n              registeredAt:\n                type: string\n                format: date-time\n              finishedAt:\n                type: string\n                format: date-time\n              history:\n                type: array\n                description: Task Execution History\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                      format: date-time\n                    entity:\n                      description: Entity Type Updated in DBS. (Such as Arrangement, User, Data Access Group etc)\n                      type: string\n                    internalid:\n                      description: DBS Internal ID\n                      type: string\n                    externalId:\n                      type: string\n                      description: Customer External ID\n                    state:\n                      description: Resulted Entity Action\n                      type: string\n                      enum:\n                        - CREATED\n                        - UDPATED\n                        - DELETED\n                        - REJECTED\n                        - FAILED\n                    message:\n                      description: Message describing operation performed on task\n                      type: string\n      readOnly: true\n\n    UpdatedServiceAgreementResponse:\n      type: object\n      description: \"Response on Update Service Agreement\"\n      properties:\n        id:\n          type: string\n        state:\n          type: string\n          enum:\n            - NEW\n            - ACCEPTED\n            - IN_PROGRESS\n            - FAILED\n            - FAILED_RETRIES_EXHAUSTED\n            - COMPLETED\n            - COMPLETED_AFTER_RETRIES\n            - ROLLBACK_IN_PROGRESS\n            - ROLLBACK_COMPLETED\n            - ROLLBACK_FAILED\n        locked:\n          type: boolean\n        registeredAt:\n          type: string\n          format: date-time\n        lockedAt:\n          type: string\n          format: date-time\n        nextAttemptAt:\n          type: string\n          format: date-time\n        finishedAt:\n          type: string\n          format: date-time\n        retries:\n          type: integer\n        tasks:\n          type: array\n          description: Tasks belonging to the Unit Of Work. A Unit of Work is complete when all tasks are completed.\n          items:\n            description: Unit Of Work Task\n            type: object\n            properties:\n              externalId:\n                type: string\n                description: service agreement external id\n              state:\n                type: string\n                enum:\n                  - ACCEPTED\n                  - IN_PROGRESS\n                  - FAILED\n                  - COMPLETED\n              registeredAt:\n                type: string\n                format: date-time\n              finishedAt:\n                type: string\n                format: date-time\n              history:\n                type: array\n                description: Task Execution History\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                      format: date-time\n                    entity:\n                      description: Entity Type Updated in DBS. (Such as Arrangement, User, Data Access Group etc)\n                      type: string\n                    internalId:\n                      description: DBS Internal ID\n                      type: string\n                    externalId:\n                      type: string\n                      description: Customer External ID\n                    state:\n                      description: Resulted Entity Action\n                      type: string\n                      enum:\n                        - CREATED\n                        - UDPATED\n                        - DELETED\n                        - REJECTED\n                        - FAILED\n                    message:\n                      description: Message describing operation performed on task\n                      type: string\n\n    ###############################################\n    ## Generic Schemas\n    ###############################################\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            type: object\n            properties:\n              message:\n                type: string\n                description: Default Message. Any further information.\n              key:\n                type: string\n                description: '{capability-name}.api.{api-key-name}. For generated\n                  validation errors this is the path in the document the error resolves\n                  to. e.g. object name + ''.'' + field'\n              context:\n                type: object\n                description: Context can be anything used to construct localised messages.\n                x-java-type: java.util.Map\u003cString,String\u003e\n            description: A validation error\n    JobRole:\n      title: \"Job Role\"\n      properties:\n        id:\n          $ref: '#/components/schemas/InternalIdentifier'\n        name:\n          maxLength: 128\n          minLength: 1\n          pattern: ^\\S(.*(\\S))?$\n          type: string\n          description: Job role name\n        description:\n          maxLength: 255\n          minLength: 1\n          pattern: ^(\\S|\\n)((.|\\n)*(\\S|\\n))?$\n          type: string\n          description: Job role description\n        functionGroups:\n          type: array\n          items:\n            $ref: '#/components/schemas/BusinessFunctionGroup'\n        validFromDate:\n          type: string\n          description: Start date of the function group. (date-only from RFC3339 - yyyy-MM-dd)\n        validFromTime:\n          type: string\n          description: Start time of the function group. (time-only from RFC3339 - HH:mm:ss)\n        validUntilDate:\n          type: string\n          description: End date of the function group. (date-only from RFC3339 - yyyy-MM-dd)\n        validUntilTime:\n          type: string\n          description: End time of the function group. (time-only from RFC3339 - HH:mm:ss)\n        apsId:\n          type: number\n          description: Assignable Permission Set Id\n        apsName:\n          type: string\n          description: Assignable Permission Set name\n          maxLength: 128\n      required:\n        - name\n        - description\n    ReferenceJobRole:\n      title: \"Reference Job Role\"\n      allOf:\n        - $ref: '#/components/schemas/JobRole'\n    UpdatedServiceAgreement:\n      title: \"Updated Service Agreement\"\n      allOf:\n        - $ref: '#/components/schemas/ServiceAgreement'\n      properties:\n        productGroups:\n          type: array\n          items:\n            $ref: '#/components/schemas/BaseProductGroup'\n        saUsers:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceAgreementUserAction'\n        saAdmins:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceAgreementUserAction'\n    ServiceAgreementUserAction:\n      title: \"Service Agreement user update action\"\n      properties:\n        userProfile:\n          $ref: '#/components/schemas/JobProfileUser'\n          description: User and job roles to associate under service agreement\n        action:\n          type: string\n          description: add or remove user from service agreement\n          enum:\n            - \"ADD\"\n            - \"REMOVE\"\n\n  examples:\n    RootLegalEntityHierarchyExample:\n      description: \"Example Request for setting up Root Legal Entity Structure as described on Backbase Community\"\n      value:\n        name: \"Bank\"\n        externalId: \"bank\"\n        legalEntityType: \"BANK\"\n        subsidiaries:\n          - name: \"John\"\n            externalId: \"john\"\n            legalEntityType: \"CUSTOMER\"\n            administrators:\n              - externalId: \"john\"\n                fullName: \"John\"\n          - name: \"Sara\"\n            externalId: \"sara\"\n            legalEntityType: \"CUSTOMER\"\n            administrators:\n              - externalId: \"sara\"\n                fullName: \"Sara\"\n          - name: \"Backbase\"\n            externalId: \"backbase\"\n            legalEntityType: \"CUSTOMER\"\n            subsidiaries:\n              - name: \"Cardiff\"\n                externalId: \"cardiff\"\n                legalEntityType: \"CUSTOMER\"\n            administrators:\n              - externalId: \"backbaseAdmin\"\n                fullName: \"Backbase Admin\"\n          - name: \"ASP\"\n            externalId: \"asp\"\n            legalEntityType: \"CUSTOMER\"\n            administrators:\n              - externalId: \"ASPAdmin\"\n                fullName: \"ASP Admin\"\n        administrators:\n          - externalId: \"admin\"\n            fullName: \"Administrator\"\n    RootLegalEntityForMambu:\n      description: \"Root Legal Entity Setup for Mambu Integration\"\n      value:\n        name: \"Backbase Root Bank\"\n        externalId: \"bank\"\n        legalEntityType: \"BANK\"\n        administrators:\n          - externalId: \"admin\"\n            fullName: \"Administrator\"\n            users:\n              - externalId: \"admin\"\n                fullName: \"admin\"\n                businessFunctionGroups:\n                  - name: \"Entitlements\"\n                    functions:\n                      - functionId: \"1019\"\n                        functionCode: \"manage.data.groups\"\n                        resourceName: \"Entitlements\"\n                        resourceCode: \"entitlements\"\n                        privileges:\n                          - privilege: \"view\"\n                          - privilege: \"create\"\n                          - privilege: \"edit\"\n                          - privilege: \"delete\"\n                      - functionId: \"1020\"\n                        functionCode: \"manage.function.groups\"\n                        resourceName: \"Entitlements\"\n                        resourceCode: \"entitlements\"\n                        privileges:\n                          - privilege: \"view\"\n                          - privilege: \"create\"\n                          - privilege: \"edit\"\n                          - privilege: \"delete\"\n                  - name: \"Legal Entity\"\n                    functions:\n                      - functionId: \"1011\"\n                        functionCode: \"manage.legalentities\"\n                        resourceName: \"Legal Entity\"\n                        resourceCode: \"legalentity\"\n                        privileges:\n                          - privilege: \"create\"\n                          - privilege: \"edit\"\n                          - privilege: \"delete\"\n                          - privilege: \"view\"\n                  - name: \"Service Agreement\"\n                    functions:\n                      - functionId: \"1007\"\n                        functionCode: \"assign.users\"\n                        resourceName: \"Service Agreement\"\n                        resourceCode: \"service.agreement\"\n                        privileges:\n                          - privilege: \"view\"\n                          - privilege: \"create\"\n                          - privilege: \"edit\"\n                      - functionId: \"1028\"\n                        functionCode: \"manage.service.agreements\"\n                        resourceName: \"Service Agreement\"\n                        resourceCode: \"service.agreement\"\n                        privileges:\n                          - privilege: \"view\"\n                          - privilege: \"create\"\n                          - privilege: \"edit\"\n                          - privilege: \"delete\"\n                      - functionId: \"1009\"\n                        functionCode: \"assign.permissions\"\n                        resourceName: \"Service Agreement\"\n                        resourceCode: \"service.agreement\"\n                        privileges:\n                          - privilege: \"view\"\n                          - privilege: \"create\"\n                          - privilege: \"edit\"\n                  - name: \"User\"\n                    functions:\n                      - functionId: \"1010\"\n                        functionCode: \"manage.users\"\n                        resourceName: \"User\"\n                        resourceCode: \"user\"\n                        privileges:\n                          - privilege: \"view\"\n        subsidiaries:\n          - name: \"Mambu\"\n            externalId: \"mambu-bank\"\n            legalEntityType: \"CUSTOMER\"\n            administrators:\n              - externalId: \"mambu-admin\"\n                fullName: \"Mambu Admin\"\n            users:\n              - externalId: \"mambu-admin\"\n                fullName: \"Mambu Admin\"\n                referenceJobRoles:\n                  - \"admin\"\n    RootLegalEntityHierarchyWithArrangements:\n      description: \"Example setup with arrangements\"\n      value:\n        name: \"Bank\"\n        externalId: \"bank\"\n        legalEntityType: \"BANK\"\n        subsidiaries:\n          - name: \"John\"\n            externalId: \"john\"\n            legalEntityType: \"CUSTOMER\"\n            productGroups:\n              - productGroupType: \"ARRANGEMENTS\"\n                users:\n                  - user:\n                      externalId: \"john\"\n                      fullName: \"John\"\n                    referenceJobRoles:\n                      - \"full-access-sepa\"\n                currentAccounts:\n                  - iban: \"NL40INGB1876219181\"\n                    bookedBalance:\n                      amount: 5245070.50\n                      currencyCode: \"EUR\"\n                    availableBalance:\n                      amount: 504096.90\n                      currencyCode: \"EUR\"\n                    creditLimit:\n                      amount: 732884.60\n                      currencyCode: \"EUR\"\n                    IBAN: \"NL40INGB1876219181\"\n                    urgentTransferAllowed: true\n                    bankBranchCode: \"ING_AMSTERDAM\"\n                    accruedInterest: 3\n                    startDate: \"2016-02-10T15:49:55.457+01:00\"\n                    externalId: \"current-account\"\n                    productTypeExternalId: \"current-account\"\n                    name: \"My Current Account \"\n                    externalTransferAllowed: true\n                    crossCurrencyAllowed: true\n                    bankAlias: \"Johns Current Account\"\n                    accountOpeningDate: \"2016-02-10T15:49:55.459+01:00\"\n                    currency: \"EUR\"\n                    usersPreferences:\n                      - userExternalId: john\n                        alias: My Bank Account\n                        visible: true\n                        favorite: false\n                savingAccounts:\n                  - iban: \"NL42INGB4416709382\"\n                    bookedBalance:\n                      amount: 8930709.60\n                      currencyCode: \"EUR\"\n                    accruedInterest: 3\n                    IBAN: \"NL42INGB4416709382\"\n                    urgentTransferAllowed: true\n                    bankBranchCode: \"ING_AMSTERDAM\"\n                    startDate: \"2016-02-10T15:49:55.465+01:00\"\n                    externalId: \"savings-account\"\n                    productTypeExternalId: \"savings-account\"\n                    name: \"My Savings Account \"\n                    externalTransferAllowed: true\n                    crossCurrencyAllowed: true\n                    bankAlias: \"Johns savings Account\"\n                    accountOpeningDate: \"2016-02-10T15:49:55.465+01:00\"\n                    currency: \"EUR\"\n            users:\n              - user:\n                  externalId: \"john\"\n                  fullName: \"John\"\n                referenceJobRoles:\n                  - \"full-access-sepa\"\n            administrators:\n              - externalId: \"john\"\n                fullName: \"John\"\n        administrators:\n          - externalId: \"admin\"\n            fullName: \"Administrator\"\n    LegalEntitiesForMockBack:\n      description: \"10 Random Legal Entities\"\n      value:\n        - name: \"Shanell Kiehn\"\n          externalId: \"shanell.kiehn\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"shanell.kiehn\"\n                    fullName: \"Shanell Kiehn\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"GR957435632JKK4ZCPG58KKMGBE\"\n                  externalId: \"GWIMF64\"\n                  productTypeExternalId: \"standard-account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2019-02-24T14:14:11.328+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.328+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 4308.91\n                    currencyCode: \"EUR\"\n                  IBAN: \"GR957435632JKK4ZCPG58KKMGBE\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"743\"\n                  accountInterestRate: 0.05496599201099878\n                  valueDateBalance: 4308.91\n                  creditLimitInterestRate: 0.12436203743926504\n                  creditLimitExpiryDate: \"2021-06-08T14:14:11.337+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - number: \"4929392503720576\"\n                      expiryDate: \"2020-11-07T14:14:11.339+01:00\"\n                      cardId: \"^ONR37\"\n                      cardholderName: \"Shanell Kiehn\"\n                      cardType: \"VISA\"\n                  accountHolderName: \"Shanell Kiehn\"\n                  startDate: \"2019-02-24T14:14:11.328+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"7422 Cristin Roads\"\n                  accountHolderAddressLine2: \"Apt. 373\"\n                  accountHolderStreetName: \"Manuel Mountain\"\n                  town: \"Port Johannaview\"\n                  postCode: \"34252-9346\"\n                  countrySubDivision: \"GR\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Ecuador\"\n          users:\n            - user:\n                externalId: \"shanell.kiehn\"\n                fullName: \"Shanell Kiehn\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"shanell.kiehn\"\n              fullName: \"Shanell Kiehn\"\n        - name: \"Kenna Botsford\"\n          externalId: \"kenna.botsford\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"kenna.botsford\"\n                    fullName: \"Kenna Botsford\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"BH98HWAMPDFFF3TT1UI3DC\"\n                  externalId: \"KCSXL88\"\n                  productTypeExternalId: \"deluxe-account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2019-04-29T14:14:11.396+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.396+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 4151.51\n                    currencyCode: \"EUR\"\n                  IBAN: \"BH98HWAMPDFFF3TT1UI3DC\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"HWAM\"\n                  accountInterestRate: 0.017777512507900908\n                  valueDateBalance: 4151.51\n                  creditLimitInterestRate: 0.1365514940386054\n                  creditLimitExpiryDate: \"2020-12-19T14:14:11.396+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - number: \"2224152121462829\"\n                      expiryDate: \"2020-07-07T14:14:11.397+01:00\"\n                      cardId: \"^NQW05\"\n                      cardholderName: \"Kenna Botsford\"\n                      cardType: \"MASTERCARD\"\n                  accountHolderName: \"Kenna Botsford\"\n                  startDate: \"2019-04-29T14:14:11.396+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"16404 Renner Islands\"\n                  accountHolderAddressLine2: \"Suite 791\"\n                  accountHolderStreetName: \"Kelsie Parkway\"\n                  town: \"South Scarlett\"\n                  postCode: \"47152\"\n                  countrySubDivision: \"BH\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Guernsey\"\n          users:\n            - user:\n                externalId: \"kenna.botsford\"\n                fullName: \"Kenna Botsford\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"kenna.botsford\"\n              fullName: \"Kenna Botsford\"\n        - name: \"Zelda Thompson\"\n          externalId: \"zelda.thompson\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"zelda.thompson\"\n                    fullName: \"Zelda Thompson\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"PK69686H5908387312580094\"\n                  externalId: \"CBLDI34\"\n                  productTypeExternalId: \"deluxe-account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2018-11-27T14:14:11.439+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.439+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 587.61\n                    currencyCode: \"EUR\"\n                  IBAN: \"PK69686H5908387312580094\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"686H\"\n                  accountInterestRate: 0.013757821618242894\n                  valueDateBalance: 587.61\n                  creditLimitInterestRate: 0.11157122362407977\n                  creditLimitExpiryDate: \"2021-01-22T14:14:11.439+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - expiryDate: \"2020-11-22T14:14:11.440+01:00\"\n                      cardId: \"^ZAU39\"\n                      cardholderName: \"Zelda Thompson\"\n                      cardType: \"MAESTRO\"\n                  accountHolderName: \"Zelda Thompson\"\n                  startDate: \"2018-11-27T14:14:11.439+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"99699 Herschel Rapid\"\n                  accountHolderAddressLine2: \"Suite 083\"\n                  accountHolderStreetName: \"Tynisha Crossroad\"\n                  town: \"Pierrestad\"\n                  postCode: \"68163-0212\"\n                  countrySubDivision: \"PK\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Sierra Leone\"\n          users:\n            - user:\n                externalId: \"zelda.thompson\"\n                fullName: \"Zelda Thompson\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"zelda.thompson\"\n              fullName: \"Zelda Thompson\"\n        - name: \"Vella Wilderman\"\n          externalId: \"vella.wilderman\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"vella.wilderman\"\n                    fullName: \"Vella Wilderman\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"CZ5061840609411178802888\"\n                  externalId: \"VLTWA73\"\n                  productTypeExternalId: \"standard-account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2019-02-20T14:14:11.483+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.483+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 327.56\n                    currencyCode: \"EUR\"\n                  IBAN: \"CZ5061840609411178802888\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"6184\"\n                  accountInterestRate: 0.0315735855158175\n                  valueDateBalance: 327.56\n                  creditLimitInterestRate: 0.1566414483161877\n                  creditLimitExpiryDate: \"2020-10-19T14:14:11.483+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - expiryDate: \"2020-10-19T14:14:11.484+01:00\"\n                      cardId: \"^CQM75\"\n                      cardholderName: \"Vella Wilderman\"\n                      cardType: \"MAESTRO\"\n                  accountHolderName: \"Vella Wilderman\"\n                  startDate: \"2019-02-20T14:14:11.483+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"9708 Scarlett Circle\"\n                  accountHolderAddressLine2: \"Apt. 610\"\n                  accountHolderStreetName: \"Bosco Roads\"\n                  town: \"East Elenore\"\n                  postCode: \"76225-0566\"\n                  countrySubDivision: \"CZ\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Syrian Arab Republic\"\n          users:\n            - user:\n                externalId: \"vella.wilderman\"\n                fullName: \"Vella Wilderman\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"vella.wilderman\"\n              fullName: \"Vella Wilderman\"\n        - name: \"Homer Watsica\"\n          externalId: \"homer.watsica\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"homer.watsica\"\n                    fullName: \"Homer Watsica\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"RO74JNRQAD88H2QMMAZL8H3M\"\n                  externalId: \"UOAGV81\"\n                  productTypeExternalId: \"8a85878f707c6d9a01708b3f30df60ac\"\n                  name: \"USD Deposit Account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2019-02-07T14:14:11.529+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.529+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 3028.40\n                    currencyCode: \"EUR\"\n                  IBAN: \"RO74JNRQAD88H2QMMAZL8H3M\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"JNRQ\"\n                  accountInterestRate: 0.011516100808664363\n                  valueDateBalance: 3028.40\n                  creditLimitInterestRate: 0.12507619729504982\n                  creditLimitExpiryDate: \"2021-07-09T14:14:11.529+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - number: \"2222647076361704\"\n                      expiryDate: \"2020-10-27T14:14:11.530+01:00\"\n                      cardId: \"^KSN92\"\n                      cardholderName: \"Homer Watsica\"\n                      cardType: \"MASTERCARD\"\n                  accountHolderName: \"Homer Watsica\"\n                  startDate: \"2019-02-07T14:14:11.529+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"5128 Salvatore Spring\"\n                  accountHolderAddressLine2: \"Suite 972\"\n                  accountHolderStreetName: \"Jody Viaduct\"\n                  town: \"Nicolasburgh\"\n                  postCode: \"16661\"\n                  countrySubDivision: \"RO\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Cayman Islands\"\n          users:\n            - user:\n                externalId: \"homer.watsica\"\n                fullName: \"Homer Watsica\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"homer.watsica\"\n              fullName: \"Homer Watsica\"\n        - name: \"Nidia Breitenberg\"\n          externalId: \"nidia.breitenberg\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"nidia.breitenberg\"\n                    fullName: \"Nidia Breitenberg\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"QA48QOTMRL8PVJUEH5SRKRBOJQ51T\"\n                  externalId: \"YWAVG22\"\n                  productTypeExternalId: \"8a8587e86fe769dc016febae7ff926e1\"\n                  name: \"Current Account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2018-12-04T14:14:11.576+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.576+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 363.40\n                    currencyCode: \"EUR\"\n                  IBAN: \"QA48QOTMRL8PVJUEH5SRKRBOJQ51T\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"QOTM\"\n                  accountInterestRate: 0.010457531089592234\n                  valueDateBalance: 363.40\n                  creditLimitInterestRate: 0.10751141341245168\n                  creditLimitExpiryDate: \"2021-03-07T14:14:11.576+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - number: \"4024007148254682\"\n                      expiryDate: \"2020-10-29T14:14:11.577+01:00\"\n                      cardId: \"^ZHU40\"\n                      cardholderName: \"Nidia Breitenberg\"\n                      cardType: \"VISA\"\n                  accountHolderName: \"Nidia Breitenberg\"\n                  startDate: \"2018-12-04T14:14:11.576+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"3915 Gutkowski Viaduct\"\n                  accountHolderAddressLine2: \"Suite 150\"\n                  accountHolderStreetName: \"Michal Meadows\"\n                  town: \"East Israelmouth\"\n                  postCode: \"80504\"\n                  countrySubDivision: \"QA\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Isle of Man\"\n          users:\n            - user:\n                externalId: \"nidia.breitenberg\"\n                fullName: \"Nidia Breitenberg\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"nidia.breitenberg\"\n              fullName: \"Nidia Breitenberg\"\n        - name: \"Ferdinand Reinger\"\n          externalId: \"ferdinand.reinger\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"ferdinand.reinger\"\n                    fullName: \"Ferdinand Reinger\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"AT358933130029393196\"\n                  externalId: \"LASDS24\"\n                  productTypeExternalId: \"standard-account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2019-03-18T14:14:11.62+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.62+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 593.69\n                    currencyCode: \"EUR\"\n                  IBAN: \"AT358933130029393196\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"89331\"\n                  accountInterestRate: 0.0127220220640926\n                  valueDateBalance: 593.69\n                  creditLimitInterestRate: 0.12072777693028541\n                  creditLimitExpiryDate: \"2021-01-19T14:14:11.62+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - expiryDate: \"2020-10-15T14:14:11.621+01:00\"\n                      cardId: \"^BDR84\"\n                      cardholderName: \"Ferdinand Reinger\"\n                      cardType: \"MAESTRO\"\n                  accountHolderName: \"Ferdinand Reinger\"\n                  startDate: \"2019-03-18T14:14:11.62+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"56289 Kenneth Wells\"\n                  accountHolderAddressLine2: \"Suite 412\"\n                  accountHolderStreetName: \"Beier Villages\"\n                  town: \"Rheaville\"\n                  postCode: \"40012-0060\"\n                  countrySubDivision: \"AT\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Timor-Leste\"\n          users:\n            - user:\n                externalId: \"ferdinand.reinger\"\n                fullName: \"Ferdinand Reinger\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"ferdinand.reinger\"\n              fullName: \"Ferdinand Reinger\"\n        - name: \"Lashaun Feil\"\n          externalId: \"lashaun.feil\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"lashaun.feil\"\n                    fullName: \"Lashaun Feil\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"DK0243345319922575\"\n                  externalId: \"JLAYR35\"\n                  productTypeExternalId: \"8a8587e86fe769dc016febae7ff926e1\"\n                  name: \"Current Account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2019-04-11T14:14:11.664+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.664+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 3966.24\n                    currencyCode: \"EUR\"\n                  IBAN: \"DK0243345319922575\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"4334\"\n                  accountInterestRate: 0.05814652103576375\n                  valueDateBalance: 3966.24\n                  creditLimitInterestRate: 0.15044870259279622\n                  creditLimitExpiryDate: \"2021-03-03T14:14:11.664+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - expiryDate: \"2020-12-03T14:14:11.664+01:00\"\n                      cardId: \"^LIY08\"\n                      cardholderName: \"Lashaun Feil\"\n                      cardType: \"MAESTRO\"\n                  accountHolderName: \"Lashaun Feil\"\n                  startDate: \"2019-04-11T14:14:11.664+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"19230 Ledner Manor\"\n                  accountHolderAddressLine2: \"Apt. 350\"\n                  accountHolderStreetName: \"Schulist Walks\"\n                  town: \"Lemkeshire\"\n                  postCode: \"49463\"\n                  countrySubDivision: \"DK\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Cuba\"\n          users:\n            - user:\n                externalId: \"lashaun.feil\"\n                fullName: \"Lashaun Feil\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"lashaun.feil\"\n              fullName: \"Lashaun Feil\"\n        - name: \"Chi Kessler\"\n          externalId: \"chi.kessler\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"chi.kessler\"\n                    fullName: \"Chi Kessler\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"CR5886314494093857922\"\n                  externalId: \"ENAJV26\"\n                  productTypeExternalId: \"8a85878c6a01f12d016a0246708b31a4\"\n                  name: \"Overdraft Product\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2018-12-08T14:14:11.697+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.697+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 4774.10\n                    currencyCode: \"EUR\"\n                  IBAN: \"CR5886314494093857922\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"863\"\n                  accountInterestRate: 0.040927174170449825\n                  valueDateBalance: 4774.10\n                  creditLimitInterestRate: 0.155185911358849\n                  creditLimitExpiryDate: \"2021-05-07T14:14:11.697+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - number: \"4485589438852566\"\n                      expiryDate: \"2020-06-21T14:14:11.698+01:00\"\n                      cardId: \"^PJZ06\"\n                      cardholderName: \"Chi Kessler\"\n                      cardType: \"VISA\"\n                  accountHolderName: \"Chi Kessler\"\n                  startDate: \"2018-12-08T14:14:11.697+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"5467 Zane Club\"\n                  accountHolderAddressLine2: \"Suite 187\"\n                  accountHolderStreetName: \"Kilback Pine\"\n                  town: \"West Arden\"\n                  postCode: \"20010\"\n                  countrySubDivision: \"CR\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Aruba\"\n          users:\n            - user:\n                externalId: \"chi.kessler\"\n                fullName: \"Chi Kessler\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"chi.kessler\"\n              fullName: \"Chi Kessler\"\n        - name: \"Sam Carroll\"\n          externalId: \"sam.carroll\"\n          legalEntityType: \"CUSTOMER\"\n          parentExternalId: \"bank\"\n          productGroups:\n            - productGroupType: \"ARRANGEMENTS\"\n              name: \"Generated Product Group\"\n              users:\n                - user:\n                    externalId: \"sam.carroll\"\n                    fullName: \"Sam Carroll\"\n                  referenceJobRoles:\n                    - \"full-access-sepa\"\n              currentAccounts:\n                - iban: \"KZ74641JWP4KE3PK3Q4E\"\n                  externalId: \"NICWX71\"\n                  productTypeExternalId: \"8a8587e86fe769dc016febae7ff926e1\"\n                  name: \"Current Account\"\n                  externalTransferAllowed: true\n                  crossCurrencyAllowed: true\n                  sourceId: \"stream-product-generator\"\n                  accountOpeningDate: \"2018-12-03T14:14:11.724+01:00\"\n                  lastUpdateDate: \"2020-03-08T14:14:11.724+01:00\"\n                  currency: \"EUR\"\n                  availableBalance:\n                    amount: 2623.82\n                    currencyCode: \"EUR\"\n                  IBAN: \"KZ74641JWP4KE3PK3Q4E\"\n                  urgentTransferAllowed: true\n                  bankBranchCode: \"641\"\n                  accountInterestRate: 0.06885950836213794\n                  valueDateBalance: 2623.82\n                  creditLimitInterestRate: 0.11073714997829028\n                  creditLimitExpiryDate: \"2021-04-14T14:14:11.724+01:00\"\n                  accruedInterest: 0\n                  debitCardsItems:\n                    - number: \"2223012280716731\"\n                      expiryDate: \"2020-07-27T14:14:11.724+01:00\"\n                      cardId: \"^QDH18\"\n                      cardholderName: \"Sam Carroll\"\n                      cardType: \"MASTERCARD\"\n                  accountHolderName: \"Sam Carroll\"\n                  startDate: \"2018-12-03T14:14:11.724+01:00\"\n                  minimumRequiredBalance: 0\n                  accountHolderAddressLine1: \"165 Gutkowski Field\"\n                  accountHolderAddressLine2: \"Suite 356\"\n                  accountHolderStreetName: \"Trudie Streets\"\n                  town: \"Marksburgh\"\n                  postCode: \"53617\"\n                  countrySubDivision: \"KZ\"\n                  creditAccount: false\n                  debitAccount: true\n                  accountHolderCountry: \"Cuba\"\n          users:\n            - user:\n                externalId: \"sam.carroll\"\n                fullName: \"Sam Carroll\"\n              referenceJobRoles:\n                - \"full-access-sepa\"\n          administrators:\n            - externalId: \"sam.carroll\"\n              fullName: \"Sam Carroll\"\n    CustomServiceAgreement:\n      description: \"Custom Service Agreement\"\n      value:\n        internalId: \"serviceAgreement1\"\n        externalId: \"serviceAgreementEx1\"\n        name: \"service_agreement_1\"\n        description: \"service agreement 1\"\n        participants:\n          - externalId: \"participant1\"\n            sharingUsers: true\n            sharingAccounts: true\n            action: \"ADD\"\n        validFromDate: \"2021-03-10\"\n        validFromTime: \"01:00:00\"\n        validUntilDate: \"2024-03-10\"\n        validUntilTime: \"01:00:00\"\n        status: \"ENABLED\"\n        productGroups:\n          - productGroupType: \"ARRANGEMENTS\"\n            name: \"shared-data-group-with-123456789\"\n            currentAccounts:\n              - externalId: \"48900955\"\n              - externalId: \"50088189\"\n        saUsers:\n          - userProfile:\n              user:\n                externalId: \"user1\"\n              referenceJobRoleNames:\n                - \"jobRole1\"\n            actions: \"ADD\"\n          - userProfile:\n              user:\n                externalId: \"user2\"\n            actions: \"REMOVE\"\n        saAdmin:\n          - userProfile:\n              user:\n                externalId: \"admin1\"\n              referenceJobRoleNames:\n                - \"adminRole1\"\n            actions: \"ADD\""
		}
	},
	"Error": "parse: parse spec: paths: /async/legal-entity: post: operation \"processLegalEntitiesAsync\": requestBody: content: \"application/json\": parse schema: parse schema: item: parse schema: resolve \"#/components/schemas/LegalEntity\": parse schema: property \"administrators\": parse schema: item: parse schema: resolve \"#/components/schemas/User\": parse schema: property \"additionalRealmRoles\": parse schema: item: parse schema: unexpected schema type: \"String\""
}