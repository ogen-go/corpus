{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcsaorg/DCSA-OpenAPI"
		},
		"file": {
			"name": "ovs_domain_v1.2.0.yaml",
			"size": 0,
			"path": "domain/ovs/ovs_domain_v1.2.0.yaml",
			"byteSize": 17748,
			"content": "# OpenAPI version identifier - required for OpenAPI 3.0 domains\nopenapi: 3.0.3\n\n#######################\n# Optional info section\n#######################\ninfo:\n  title: DCSA - Operational Vessel Schedules (OVS) Components\n  description: |\n    Common components for DCSA APIs. This domain is used by\n    - Just in Time Portcalls API ([JIT](https://app.swaggerhub.com/apis/dcsaorg/DCSA_JIT))\n\n    For a history of changes in this domain - please check [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/domain/ovs#v120). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.\n  version: 1.2.0\n\ncomponents:\n  schemas:\n    timestamp:\n      description: |\n        A digital record of the time of occurrence of an Operations event\n      type: object\n      allOf:\n        - type: object\n          properties:\n            publisher:\n              # Refer to new Party object where CodeListName is included\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.4#/components/schemas/partyNoID'\n        - type: object\n          properties:\n            publisherRole:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.2#/components/schemas/publisherRole'\n                - example: CA\n        - type: object\n          properties:\n            vesselIMONumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/vesselIMONumber'\n                # extended to deprecate the field and modify the description\n                - description: |\n                    The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd's register code, which does not change during the lifetime of the vessel\n                    \n                    \u003cb\u003eNB:\u003c/b\u003e vesselIMONumber is deprecated at the top level - vesselIMONumber needs to also be provided inside the vessel object.\n                - deprecated: true\n        - type: object\n          properties:\n            vessel:\n              allOf:\n                - $ref: '#/components/schemas/vessel'\n        - type: object\n          properties:\n            carrierServiceCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/carrierServiceCode'\n        - type: object\n          properties:\n            importVoyageNumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/importVoyageNumber'\n                # extends to deprecate the field and modify the description\n                - description: |\n                    The identifier of an import voyage. The vessel operator-specific identifier of the import Voyage.\n                    \n                    **NB:** the importVoyageNumber is deprecated. Use `carrierImportVoyageNumber`.\n                - deprecated: true\n        - type: object\n          properties:\n            exportVoyageNumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/exportVoyageNumber'\n                # extends to deprecate the field and modify the description\n                - description: |\n                    The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage.\n                  \n                    **NB:** the exportVoyageNumber is deprecated use `carrierExportVoyageNumber`.\n                - deprecated: true\n        - type: object\n          properties:\n            carrierImportVoyageNumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/carrierImportVoyageNumber'\n        - type: object\n          properties:\n            carrierExportVoyageNumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/carrierExportVoyageNumber'\n        - type: object\n          properties:\n            portVisitReference:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/portVisitReference'\n        - type: object\n          properties:\n            transportCallSequenceNumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/transportCallSequenceNumber'\n        - type: object\n          properties:\n            vesselPosition:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.2#/components/schemas/geoLocation'\n                - example:\n                    locationName: 'Port of Amsterdam'\n                    latitude: '52.4120'\n                    longitude: '4.8079'                \n        - type: object\n          properties:\n            UNLocationCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/UNLocationCode'\n                # extends to modify the description\n                - description: |\n                    The **UN Location Code** specifying where the Facility is located.\n                - example: NLAMS\n        - type: object\n          properties:\n            facilitySMDGCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/facilityCode'\n        # facilitySMDGCode repeated in order to \"modify\" the description of facilitySMDGCode to also include the word \"SMDG\"...\n        - type: object\n          properties:\n            facilitySMDGCode:\n              allOf:\n                - description: |\n                    The SMDG code used for identifying the specific facility. This code does not include the UN Location Code.\n                    \n                    \u003cb\u003eNB:\u003c/b\u003e facilitySMDGCode is deprecated - facilityCode together with facilityCodeListProvider in the eventLocation object should be used instead.\n                - deprecated: true\n        - type: object\n          properties:\n            facilityTypeCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/facilityTypeCodeOPR'\n                - description: |\n                    A specialized version of the facilityCode to be used in Operations events. The code to identify the specific type of facility.\n\n                    - PBPL (Pilot boarding place)\n                    - BRTH (Berth)\n                    - ANCH (Anchorage)\n                    \n                    More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/facilitytypes.csv).\n                    \n                    **NB:** This is a conditional field and is connected to `portCallServiceTypeCode`. Please check the IFS for allowed combinations.\n        - type: object\n          properties:\n            eventLocation:\n              anyOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.2#/components/schemas/unLocationLocation'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.2#/components/schemas/facilitySMDGLocation'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.2#/components/schemas/geoLocation'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.2#/components/schemas/addressLocation'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.2#/components/schemas/facilityLocation'\n        # Extended version of location in order to modify description and example\n        - type: object\n          properties:\n            eventLocation:\n              description: |\n                General purpose object to capture the location in the `timestamp`. The location can be specified in **any** of the following ways: `UN Location Code`, `FacilitySMDG` or `Geo Location`. In addition to the above `Address` and `Facility` should only be used when the terminal/location cannot be expressed using a **SMDG** code but needs an **Address** or **BIC** code\n              example:\n                locationName: \"Amsterdam Container Terminal\"\n                UNLocationCode: \"NLAMS\"\n                facilityCode: \"ACT\"\n                facilityCodeListProvider: \"SMDG\"\n        - type: object\n          properties:\n            milesToDestinationPort:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.2#/components/schemas/milesToDestinationPort'\n                - example: 0\n        - type: object\n          properties:\n            eventClassifierCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.2#/components/schemas/eventClassifierCode'\n                - description: |\n                    Code for the event classifier.\n\n                    - PLN (Planned)\n                    - ACT (Actual)\n                    - REQ (Requested)\n                    - EST (Estimated)\n                    \n                    More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/eventclassifiercodes.csv).\n                    \n                    **NB:** This is a conditional field and must match timestamps defined in the IFS\n                - enum:\n                  - PLN\n                  - ACT\n                  - REQ\n                  - EST\n                - example: ACT\n        - type: object\n          properties:\n            operationsEventTypeCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.2#/components/schemas/operationsEventTypeCode'\n                - description: |\n                    The code to identify the type of event that is related to the operation\n                    - STRT (Started)\n                    - CMPL (Completed)\n                    - ARRI (Arrived)\n                    - DEPA (Departed)\n                    - OMIT (Omitted)\n                    - CANC (Cancelled)\n                    \n                    More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/operationseventtypecodes.csv).\n                    \n                    **NB:** This is a conditional field and has to be aligned with other fields such as `portCallServiceTypeCode`. One such example is if `portCallServiceTypeCode` is **not** null then `operationsEventTypeCode` **should** be either: STRT (Started), COMP (Completed) or CANC (Cancelled). If `portCallServiceTypeCode` **is** null then `operationsEventTypeCode` is one of: ARRI (Arrived), DEPA (Departed) or OMIT (Omitted). Please check the IFS for allowed combinations.\n        - type: object\n          properties:\n            modeOfTransport:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/modeOfTransport'\n                - description: |\n                    **NB:** this field is marked deprecated since the standard is only defined for `VESSEL` and therefore redundant.\n                    \n                    JIT 1.0 and JIT 1.1 timestamps have used this field to differentiate timestamps. Since JIT 1.2 this is no longer needed except for 1 pair of JIT 1.1 timestamps that JIT 1.2 still needs for the sake of backward compatability. These timestamps have the portCallServiceTypeCode set to SAFE.\n                - deprecated: true\n        - type: object\n          properties:\n            portCallPhaseTypeCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.2#/components/schemas/portCallPhaseTypeCode'\n                - description: |\n                    The general direction of the vessel for which information applies\n                    - INBD (Inbound)\n                    - ALGS (Alongside)\n                    - SHIF (Shifting)\n                    - OUTB (Outbound)\n            \n                    More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/portcallphasetypecodes.csv).\n                    \n                    **NB:** This is a conditional field and must match timestamps according to the IFS. Please be aware that JIT 1.0 does not know about this field. Server implementations are expected to map this to a valid timestamp. If `portCallServiceTypeCode` is `PILO` (Pilotage) and `portCallPhaseTypeCode` is Null then `portCallPhaseTypeCode` can be set to `INBD` (Inbound).\n        - type: object\n          properties:\n            portCallServiceTypeCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.2#/components/schemas/portCallServiceTypeCode'\n                - description: |\n                    The type of the service provided in the port call\n                    - PILO (Pilotage)\n                    - MOOR (Mooring)\n                    - CRGO (Cargo operations)\n                    - TOWG (Towage)\n                    - BUNK (Bunkering)\n                    - LASH (Lashing)\n                    - SAFE (Safety)\n                    - FAST (All Fast)\n                    - GWAY (Gangway down and secure)\n                    - ANCO (Anchorage operations)\n                    - SLUG (Sludge)\n                    - SHPW (Shore Power)\n                    - LCRO (Loading cargo operations)\n                    - DCRO (Discharge cargo operations)\n                    - VRDY (Vessel ready)\n                    \n                    More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/portcallservicetypecodes.csv).\n\n                    **NB:** This is a conditional field and must match timestamps defined in the IFS\n        - type: object\n          properties:\n            eventDateTime:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.2#/components/schemas/eventDateTime'\n        - type: object\n          properties:\n            carrierVoyageNumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/carrierVoyageNumber'\n                - deprecated: true\n                - description: |\n                    The vessel operator-specific identifier of the Voyage.\n                    \n                    **Deprecated:** Use `carrierExportVoyageNumber` and/or `carrierImportVoyageNumber` instead\n        - type: object\n          properties:\n            delayReasonCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/delayReasonCode'\n                - example: 'STR'\n        - type: object\n          properties:\n            remark:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/2.0.2#/components/schemas/remark'\n      required:\n        - publisher\n        - publisherRole\n        - vesselIMONumber\n        - UNLocationCode\n        - eventClassifierCode\n        - operationsEventTypeCode\n        - eventDateTime\n        - carrierVoyageNumber\n        - carrierServiceCode\n\n    vessel:\n      description: |\n        A floating, sea going structure (mother vessels and feeder vessels) with either an internal or external mode of propulsion designed for the transport of cargo and/or passengers. Ocean vessels are uniquely identified by an IMO number consisting of 7 digits.\n      type: object\n      allOf:\n        - type: object\n          properties:\n            vesselIMONumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/vesselIMONumber'\n        - type: object\n          properties:\n            name:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/vesselName'\n        - type: object\n          properties:\n            lengthOverall:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/vesselLOA'\n        - type: object\n          properties:\n            width:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/vesselWidth'\n        - type: object\n          properties:\n            callSign:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/vesselCallSign'\n        - type: object\n          properties:\n            type:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/vesselType'\n        - type: object\n          properties:\n            draft:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/vesselDraft'\n        - type: object\n          properties:\n            dimensionUnit:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/dimensionUnit'\n      required:\n        - vesselIMONumber\n",
			"canonicalURL": "/github.com/dcsaorg/DCSA-OpenAPI@82e5887ff4c6fafd9ce8f7e2ce114f45b6559a66/-/blob/domain/ovs/ovs_domain_v1.2.0.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dcsaorg/DCSA-OpenAPI/blob/82e5887ff4c6fafd9ce8f7e2ce114f45b6559a66/domain/ovs/ovs_domain_v1.2.0.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"timestamp\": resolve \"#/components/schemas/timestamp\": allOf: property \"publisher\": allOf: at domain/ovs/ovs_domain_v1.2.0.yaml:28:25: $ref: resolve \"https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.4#/components/schemas/partyNoID\": get \"https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.4\": https: do: Get \"https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.4\": host \"api.swaggerhub.com\" is not allowed"
}