{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onap/multicloud-k8s"
		},
		"file": {
			"name": "emco_apis.yaml",
			"size": 0,
			"path": "docs/emco_apis.yaml",
			"byteSize": 136260,
			"content": "\nopenapi: 3.0.2\ninfo:\n  version: '2.0.0'\n\n  title: EMCO\n\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  x-logo:\n    url: 'https://redocly.github.io/openapi-template/logo.png'\n\n  description: |\n    EMCO - Edge Multi Cluster Orchestrator\n    # Introduction\n    Application Orchestration - For applications and services delivered across multiple administrative infrastructures\n\nexternalDocs:\n  description: Wiki for the API's.\n  url: 'https://wiki.onap.org/display/DW/V2+API+Specification'\n\ntags:\n  - name: v2\n    description: |\n     V2 API's\n\npaths:\n  ############################ Project API'S #################################################\n  /projects:\n    post:\n      tags:\n        - Projects\n      summary: Project\n      description: Add a new `project`\n      operationId: addProject\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Metadata'\n        description: Project data\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Projects\n      summary: Get all projects\n\n      description: |\n        Get all `projects`\n\n      operationId: getAllProjects\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Project found\n          content: {}\n\n  /projects/{project-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Projects\n      summary: Get project by project name\n\n      description: |\n        Get `project`\n\n      operationId: getProjectByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Project not found\n          content: {}\n    put:\n      tags:\n        - Projects\n      summary: Update project\n      description: Update `project`\n      operationId: updateProject\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Project not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Update project object\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Projects\n      summary: Delete project by project name\n\n      description: |\n        Delete `project`\n\n      operationId: deleteProjectByName\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Project not found\n          content: {}\n\n  ############################ Application API'S #################################################\n  /projects/{project-name}/composite-apps:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n    post:\n      tags:\n        - Composite Application\n      summary: Add Composite Application\n      description: Add a new `composite application`\n      operationId: addCompositeApplication\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompositeAppVersion'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompositeAppVersion'\n        description: Composite application definition\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Application\n      summary: Get all Composite Applications\n\n      description: |\n        Get all `composite applications`\n\n      operationId: getAllCompositeApplications\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/CompositeAppVersionArray'\n        '404':\n          description: No Composite App found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Application\n      summary: Get Composite Application\n\n      description: |\n        Get `composite application`\n\n      operationId: getCompositeApplicationByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/CompositeAppVersion'\n        '404':\n          description: Composite Application not found\n          content: {}\n    put:\n      tags:\n        - Composite Application\n      summary: Update a Composite Application\n      description: Update a `Composite Application`\n      operationId: updateCompositeApplication\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/CompositeAppVersion'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Composite Application not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompositeAppVersion'\n        description: Composite application definition\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Composite Application\n      summary: Delete Composite Application\n\n      description: |\n        Delete `Composite Application`\n\n      operationId: deleteCompositeAppByName\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Composite Application not found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/apps:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n    post:\n      tags:\n        - Composite Application\n      summary: Add app to Composite Application\n      description: Add a new  `app to composite application`\n      operationId: addAppToCompositeApplication\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '405':\n          description: Invalid Input\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/AppData'\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Application\n      summary: Get all apps in Composite Application\n\n      description: |\n        Get all `apps in composite application`\n\n      operationId: getAllAppsInCompositeApplication\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Apps found in Composite Application\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/apps/{app-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/appName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Application\n      summary: Get Application\n\n      description: |\n        Get `application`\n\n      operationId: getAppCompositeApplication\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n            application/octet-stream: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/File'\n            multipart/form-data: # Media type\n              schema:            # Request payload\n                $ref: '#/components/schemas/AppData'\n\n        '404':\n          description: Application not found\n          content: {}\n    put:\n      tags:\n        - Composite Application\n      summary: Update app in Composite Application\n      description: Update app in `Composite Application`\n      operationId: updateAppToCompositeApplication\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Application not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/AppData'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Composite Application\n      summary: Delete Application\n\n      description: |\n        Delete `application`\n\n      operationId: deleteAppToCompositeApplication\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Application not found\n          content: {}\n\n############################ PROFILE API'S #################################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n    post:\n      tags:\n        - Composite Profile\n      summary: Add Composite Profile\n      description: Add a new `composite profile`\n      operationId: addCompositeProfile\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Composite Profile definition\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Get all Composite Profiles\n\n      description: |\n        Get all `profiles in a composite application`\n\n      operationId: getAllProfilesInCompositeApplication\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No composite profile found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/compositeProfileName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Get Composite Profile\n\n      description: |\n        Get `composite profile`\n\n      operationId: getCompositeProfileByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Composite Profile not found\n          content: {}\n    put:\n      tags:\n        - Composite Profile\n      summary: Update Composite Profile\n      description: Update `Composite Profile`\n      operationId: updateCompositeProfile\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Composite Profile not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Composite Profile definition\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Composite Profile\n      summary: Delete Composite Profile\n\n      description: |\n        Delete `Composite Profile`\n\n      operationId: deleteCompositeProfileByName\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Composite Profile not found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/compositeProfileName'\n    post:\n      tags:\n        - Composite Profile\n      summary: Add app profile to Composite Profile\n      description: Add a `profile for application`\n      operationId: addProfileToCompositeProfile\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpec'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/ProfileAppData'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Get all app profiles in Composite Profiles\n\n      description: |\n        Get all `app profiles in a composite Profile`\n\n      operationId: getAllProfilesInCompositeProfile\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpecArray'\n        '404':\n          description: No profile found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles/{profile-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/compositeProfileName'\n      - $ref: '#/components/parameters/profileName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Get profile from Composite Profile\n\n      description: |\n        Get `profile from composite profile`\n\n      operationId: getProfile\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpec'\n            application/octet-stream: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/File'\n            multipart/form-data: # Media type\n              schema:            # Request payload\n                $ref: '#/components/schemas/ProfileAppData'\n\n        '404':\n          description: Profile not found\n          content: {}\n    put:\n      tags:\n        - Composite Profile\n      summary: Update Composite Profile for an app\n      description: Update `Profile`\n      operationId: updateProfile\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpec'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Profile not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/ProfileAppData'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Composite Profile\n      summary: Delete Profile\n\n      description: |\n        Delete `profile in Composite Profile`\n\n      operationId: deleteProfile\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Profile not found\n          content: {}\n\n  # Qurey for Profile - Get profile for app-name\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/composite-profiles/{composite-profile-name}/profiles/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/compositeProfileName'\n      - in: query\n        name: app-name\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Composite Profile\n      summary: Query profile for an application\n\n      description: |\n        Query `profile for an application`\n\n      operationId: queryProfileForApp\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProfileAppSpec'\n            application/octet-stream: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/File'\n            multipart/form-data: # Media type\n              schema:            # Request payload\n                $ref: '#/components/schemas/ProfileAppData'\n        '404':\n          description: Profile for application not found\n          content: {}\n\n\n\n############################ Deployment Intent Group API'S #################################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n    post:\n      tags:\n        - Deployment Intent Group\n      summary: Add Deployment Intent Group\n      description: Add a new `deployment intent group`\n      operationId: addDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupIntent'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeploymentGroupIntent'\n        description: Deployment Intent Group definition\n        required: true\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Get all Deployment Intent Group\n\n      description: |\n        Get all `Deployment Intent Group`\n\n      operationId: getAllDeploymentIntentGroup\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupIntentArray'\n        '404':\n          description: No Deployment Intent Group found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Get Deployment Intent Group\n\n      description: |\n        Get `Deployment Intent Group`\n\n      operationId: getDeploymentIntentGroupByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupIntent'\n        '404':\n          description: Deployment Intent Group not found\n          content: {}\n    put:\n      tags:\n        - Deployment Intent Group\n      summary: Update Deployment Intent Group\n      description: Update `Deployment Intent Group`\n      operationId: updateDeploymentIntentGroup\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentGroupIntent'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Deployment Intent Group not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeploymentGroupIntent'\n        description: Deployment Intent Group definition\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Delete Deployment Intent Group\n\n      description: |\n        Delete `Deployment Intent Group`\n\n      operationId: deleteDeploymentIntentGroupByName\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Deployment Intent Group not found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Intent Group\n      summary: Add Intent\n      description: Add `deployment Intent`\n      operationId: addIntentToDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentIntent'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/DeploymentIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Get all intents in Deployment Intent Group\n\n      description: |\n        Get all `intents in deployment intent group`\n\n      operationId: getAllIntentsInDeploymentIntentGroup\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentIntentArray'\n        '404':\n          description: No Deployment Intent Group found\n          content: {}\n\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents/{intent-name}:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/intentName'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Get intent for an application\n\n      description: |\n        Get `Deployment Intent`\n\n      operationId: getIntentForDeploymentIntentGroup\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentIntent'\n\n        '404':\n          description: Deployment Intent not found\n          content: {}\n    put:\n      tags:\n        - Deployment Intent Group\n      summary: Update intent\n      description: Update `deployment intent`\n      operationId: updateIntentToDeploymentIntentGroup\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentIntent'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Intent not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n         application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/DeploymentIntent'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Delete intent\n\n      description: |\n        Delete `intent`\n\n      operationId: deleteIntentFromDeploymentIntentGroup\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Deployment intent not found\n          content: {}\n   #Query\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - in: query\n        name: intent\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Deployment Intent Group\n      summary: Query intent\n\n      description: |\n        Query `Deployment Intent`\n\n      operationId: queryIntentForDeploymentIntentGroup\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/DeploymentIntent'\n        '404':\n          description: Deployment Intent not found\n          content: {}\n\n############################ GENERIC PLACEMENT INTENT API'S #################################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Generic Placement Intent\n      summary: Add Generic Placement Intent\n      description: Add a new `generic placement intent`\n      operationId: addGenericPlacementIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Generic Placement Intent definition\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Get all Generic Placement Intents\n\n      description: |\n        Get all `Generic Placement Intents`\n\n      operationId: getAllGenericPlacementIntents\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementIntentArray'\n        '404':\n          description: No Generic Placement Intent found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents/{generic-placement-intent-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genericPlacementIntentName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Get Generic Placement Intent\n\n      description: |\n        Get `generic placement intent`\n\n      operationId: getGenericPlacementIntentByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Generic Placement Intent not found\n          content: {}\n    put:\n      tags:\n        - Generic Placement Intent\n      summary: Update Generic Placement Intent\n      description: Update `Generic Placement Intent`\n      operationId: updateGenericPlacementIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Generic Placement Intent not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Generic Placement Intent definition\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Delete Generic Placement Intent\n\n      description: |\n        Delete `Generic Placement Intent`\n\n      operationId: deleteGenericPlacementIntentByName\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Generic Placement Intent not found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents/{generic-placement-intent-name}/app-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genericPlacementIntentName'\n    post:\n      tags:\n        - Generic Placement Intent\n      summary: Add intent for an application\n      description: Add a `intent for application`\n      operationId: addIntentToGenericPlacementIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntent'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/GenericPlacementAppIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Get all Intents in Generic Placement\n\n      description: |\n        Get all ` Intents in Generic Placement Intent`\n\n      operationId: getAllIntentsInGenericPlacementIntents\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntentArray'\n        '404':\n          description: No Generic Placement Intent found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents/{generic-placement-intent-name}/app-intents/{intent-name}:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genericPlacementIntentName'\n      - $ref: '#/components/parameters/intentName'\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Get intent\n\n      description: |\n        Get `generic placement intent`\n\n      operationId: getIntentfromGenericPlacementIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntent'\n\n        '404':\n          description: Intent  not found\n          content: {}\n    put:\n      tags:\n        - Generic Placement Intent\n      summary: Update intent for an application\n      description: Update `generic placement intent for application`\n      operationId: updateIntentToGenericPlacementIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntent'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Generic placement intent not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n         application/json: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/GenericPlacementAppIntent'\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Delete intent\n\n      description: |\n        Delete `generic placement intent`\n\n      operationId: deleteIntentFromGenericPlacementIntent\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Intent not found\n          content: {}\n\n  # Qurey for Intent - Get intent for app-name\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/generic-placement-intents/{generic-placement-intent-name}/app-intents/:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/genericPlacementIntentName'\n      - in: query\n        name: app-name\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n\n    get: # documentation for GET operation for this path\n      tags:\n        - Generic Placement Intent\n      summary: Query intent for an application\n\n      description: |\n        Query `generic placement intent for application`\n\n      operationId: queryIntentfromGenericPlacementIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/GenericPlacementAppIntent'\n        '404':\n          description: Generic Placement Intent for application not found\n          content: {}\n\n\n####################Lifecycle Management#######################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/approve:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Approve a Deployment\n      description: Approve a  Deployment\n      operationId: approveDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n          content: {}\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/instantiate:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Instantiate a Deployment\n      description: Instantiate a  Deployment\n      operationId: instantiateDeploymentIntentGroup\n      responses:\n        '201':\n          description: Success\n          content: {}\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/terminate:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Deployment Lifecycle\n      summary: Terminate a Deployment\n      description: Terminate a  Deployment\n      operationId: terminateDeploymentIntentGroup\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/status:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - in: query\n        name: type\n        description: source of status information\n        schema:\n          type: string\n          enum: [rsync, cluster]\n          default: rsync\n      - in: query\n        name: output\n        description: output format\n        schema:\n          type: string\n          enum: [summary, all, detail]\n          default: all\n      - in: query\n        name: instance\n        description: instance identifier\n        schema:\n          type: string\n          maxLength: 32\n      - in: query\n        name: app\n        description: app name\n        schema:\n          type: string\n          maxLength: 64\n      - in: query\n        name: cluster\n        description: cluster-provider+cluster\n        schema:\n          type: string\n          maxLength: 128\n      - in: query\n        name: resource\n        description: resource name\n        schema:\n          type: string\n          maxLength: 64\n    get:\n      tags:\n        - Deployment Lifecycle\n      summary: Status of Deployment\n      description: Status of  Deployment\n      operationId: statusDeploymentIntentGroup\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '404':\n          description: No Status found\n          content: {}\n\n############################ Controller Registration API'S #################################################\n  /controllers:\n    post:\n      tags:\n        - Controller Registration\n      summary: Controller Registration\n      description: Add a new `controller`\n      operationId: addController\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Controller'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Controller'\n        description: Controller Info\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Controller Registration\n          summary: Get all controllers\n\n          description: |\n            Get all `controllers`\n\n          operationId: getControllers\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/ControllerArray'\n            '404':\n              description: No controllers found\n              content: {}\n\n  /controllers/{controller-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n    - $ref: '#/components/parameters/controllerName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Controller Registration\n      summary: Get controller by name\n\n      description: |\n        Get `controller`\n\n      operationId: getController\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Controller'\n        '404':\n          description: Controller not found\n          content: {}\n    put:\n      tags:\n        - Controller Registration\n      summary: Update controller\n      description: Update `controller`\n      operationId: updateController\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Controller'\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Controller not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Controller'\n        description: Update controllers object\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Controller Registration\n      summary: Delete controller\n\n      description: |\n        Delete `controller`\n\n      operationId: deleteController\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Controller not found\n          content: {}\n\n############################ Cluster Provider API'S #################################################\n  /cluster-providers:\n    post:\n      tags:\n        - Cluster Providers\n      summary: Cluster Providers\n      description: Add a new `cluster provider`\n      operationId: addClusterProvider\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/Metadata'\n        description: Cluster Providers Info\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Cluster Providers\n          summary: Get all cluster providers\n\n          description: |\n            Get all `cluster providers`\n\n          operationId: getAllClusterProviders\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/Metadata'\n            '404':\n              description: No cluster provider found\n              content: {}\n\n  /cluster-providers/{cluster-providers-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n    - $ref: '#/components/parameters/clusterProviderName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Cluster Providers\n      summary: Get cluster provider by name\n\n      description: |\n        Get `cluster provider`\n\n      operationId: getClusterProviderByName\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Cluster Provider not found\n          content: {}\n    put:\n      tags:\n        - Cluster Providers\n      summary: Update cluster provider\n      description: Update `cluster providers`\n      operationId: updateClusterProviders\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Cluster Provider not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        description: Update cluster provider object\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Cluster Providers\n      summary: Delete cluster provider by name\n\n      description: |\n        Delete `cluster provider`\n\n      operationId: deleteClusterProviderByName\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Cluster Provider not found\n          content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters:\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n    post:\n      tags:\n        - Clusters\n      summary: Add Cluster\n      description: Add a new `cluster`\n      operationId: addClusterToClusterProvider\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/AppData'\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Get all clusters for cluster provider\n\n      description: |\n        Get all `clusters for cluster provider`\n\n      operationId: getAllClusterForClusterProvider\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No clusters found in cluster provider\n          content: {}\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Get Cluster\n\n      description: |\n        Get `cluster`\n\n      operationId: getClusterForClusterProvider\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n            application/octet-stream: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/File'\n            multipart/form-data: # Media type\n              schema:            # Request payload\n                $ref: '#/components/schemas/AppData'\n\n        '404':\n          description: Cluster not found\n          content: {}\n    put:\n      tags:\n        - Clusters\n      summary: Update Cluster\n      description: Update `cluster`\n      operationId: updateClusterToClusterProvider\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Cluster not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          multipart/form-data: # Media type\n            schema:            # Request payload\n              $ref: '#/components/schemas/AppData'\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Clusters\n      summary: Delete cluster\n\n      description: |\n        Delete `cluster`\n\n      operationId: deleteClusterFromClusterProvider\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Cluster not found\n          content: {}\n\n############################ Cluster Labels API'S #################################################\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/labels:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Clusters\n      summary: Add label to Cluster\n      description: Add a new label to `cluster`\n      operationId: addLabelToCluster\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        description: Cluster Label\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Clusters\n          summary: Get all Labels\n\n          description: |\n            Get all `labels`\n\n          operationId: getAllLabelsForCluster\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/ClusterLabel'\n            '404':\n              description: No labels found\n              content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/labels/{cluster-label-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterLabelName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Get label\n\n      description: |\n        Get `cluster label`\n\n      operationId: getLabelForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        '404':\n          description: label not found\n          content: {}\n    put:\n      tags:\n        - Clusters\n      summary: Update label\n      description: Update label for `cluster`\n      operationId: updateLabelForCluster\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Label not found\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterLabel'\n        description: Cluster Label\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Clusters\n      summary: Delete cluster label\n\n      description: |\n        Delete `label`\n\n      operationId: deleteLabelForCluster\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Label not found\n          content: {}\n\n# Qurey for label - Get clusters for label\n  /cluster-providers/{cluster-providers-name}/clusters/:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - in: query\n        name: label\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Get clusters for label\n\n      description: |\n        Get `clusters for label`\n      operationId: getClustersForLabel\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: label not found\n          content: {}\n\n############################ Cluster Key Value API'S #################################################\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/kv-pairs:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Clusters\n      summary: Add kv pair to Cluster\n      description: Add kv pair to `cluster`\n      operationId: addKvpairToCluster\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterKv'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterKv'\n        description: Cluster KV Pair\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Clusters\n          summary: Get all KV Pairs\n\n          description: |\n            Get all `KV Pairs`\n\n          operationId: getAllKvpairForCluster\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/ClusterKv'\n            '404':\n              description: No labels found\n              content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/kv-pairs/{kv-pair-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterKvpairName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Get KV Pair\n\n      description: |\n        Get `KV pair` for cluster\n\n      operationId: getKvpairForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterKv'\n        '404':\n          description: KV pair not found\n          content: {}\n    put:\n      tags:\n        - Clusters\n      summary: Update KV Pair\n      description: Update KV Pair for `cluster`\n      operationId: updateKvPairForCluster\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ClusterKv'\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: KV Pair not found\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterKv'\n        description: Cluster Label\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Clusters\n      summary: Delete cluster KV pair\n\n      description: |\n        Delete `KV pair`\n\n      operationId: deleteKvpairForCluster\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: KV pair not found\n          content: {}\n\n  #Query Key Value\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/kv-pairs/{kv-pair-name}/:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterKvpairName'\n      - in: query\n        name: key\n        schema:\n          type: string\n          maxLength: 128\n        required: true\n    get: # documentation for GET operation for this path\n      tags:\n        - Clusters\n      summary: Query KV Pair\n\n      description: |\n        Query `KV pair` for cluster\n\n      operationId: queryKvpairForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Kv'\n        '404':\n          description: KV pair not found\n          content: {}\n\n############################ Cluster Virtual Networks API'S #################################################\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/networks:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Add virtual network in cluster\n      description: Add a `virtual network in cluster`\n      operationId: addVirtualNetworkToCluster\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/VirtualNetwork'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/VirtualNetwork'\n        description: Add virtual network\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Networks\n          summary: Get all cluster virtual networks\n\n          description: |\n            Get all `virtual networks for a cluster`\n\n          operationId: getAllVirtualNetworksForCluster\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/VirtualNetwork'\n            '404':\n              description: No virtual networks found\n              content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/networks/{network-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterNetworkName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Networks\n      summary: Get virtual network\n\n      description: |\n        Get `virtual network`\n\n      operationId: getVirtualNetworkForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/VirtualNetwork'\n        '404':\n          description: Network not found\n          content: {}\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Networks\n      summary: Delete virtual network\n\n      description: |\n        Delete `virtual network`\n\n      operationId: deleteVirtualNetworkForCluster\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Network not found\n          content: {}\n\n############################ Cluster Provider  Networks API'S #################################################\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/provider-networks:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Add provider network in cluster\n      description: Add a `provider network in cluster`\n      operationId: addProviderNetworkToCluster\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProviderNetwork'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ProviderNetwork'\n        description: Add provider network\n        required: true\n    get: # documentation for GET operation for this path\n          tags:\n            - Networks\n          summary: Get all cluster provider networks\n\n          description: |\n            Get all `provider networks for a cluster`\n\n          operationId: getAllProviderNetworksForCluster\n          responses: # list of responses\n            '200':\n              description: Success\n              content:\n                application/json: # operation response mime type\n                  schema:\n                    $ref: '#/components/schemas/ProviderNetwork'\n            '404':\n              description: No provider networks found\n              content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/provider-networks/{network-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - $ref: '#/components/parameters/clusterNetworkName'\n    get: # documentation for GET operation for this path\n      tags:\n        - Networks\n      summary: Get Provider Network\n\n      description: |\n        Get `provider network`\n\n      operationId: getProviderNetworkForCluster\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/ProviderNetwork'\n        '404':\n          description: Provider network not found\n          content: {}\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Networks\n      summary: Delete Provider Network\n\n      description: |\n        Delete `Provider Network`\n\n      operationId: deleteProviderNetworkForCluster\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Name not found\n          content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/apply:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Apply configuration for the cluster\n      description: Apply configuration for the cluster to create networks\n      operationId: applyNetworksForCluster\n      responses:\n        '201':\n          description: Success\n          content: {}\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content: {}\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/terminate:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n    post:\n      tags:\n        - Networks\n      summary: Apply configuration for the cluster\n      description: Apply configuration for the cluster to create networks\n      operationId: terminateNetworksForCluster\n      responses:\n        '201':\n          description: Success\n          content: {}\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content: {}\n\n\n  /cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/status:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/clusterProviderName'\n      - $ref: '#/components/parameters/clusterName'\n      - in: query\n        name: type\n        description: source of status information\n        schema:\n          type: string\n          enum: [rsync, cluster]\n          default: rsync\n      - in: query\n        name: output\n        description: output format\n        schema:\n          type: string\n          enum: [summary, all, detail]\n          default: all\n      - in: query\n        name: instance\n        description: instance identifier\n        schema:\n          type: string\n          maxLength: 32\n      - in: query\n        name: app\n        description: app name\n        schema:\n          type: string\n          maxLength: 64\n      - in: query\n        name: cluster\n        description: cluster-provider+cluster\n        schema:\n          type: string\n          maxLength: 128\n      - in: query\n        name: resource\n        description: resource name\n        schema:\n          type: string\n          maxLength: 64\n    get:\n      tags:\n        - Networks\n      summary: Query status of cluster network intents\n      description: Query status of cluster network intents\n      operationId: statusNetworksForCluster\n      responses:\n        '200':\n          description: Success\n          content: {}\n        '404':\n          description: No Status found\n          content: {}\n\n\n######################## Network Controller Intent API's##########################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n    post:\n      tags:\n        - Network Controller Intent\n      summary: Network Controller Intent API's\n      description: Add a new `network controller intent`\n      operationId: addNetworkControllerIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get all Network Controller Intent\n\n      description: |\n        Get all `network controller intent`\n\n      operationId: getAllNetworkControllerIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/MetadataArray'\n        '404':\n          description: No Network Controller Intent found\n          content: {}\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get Network Controller Intent\n\n      description: |\n        Get `network controller intent`\n\n      operationId: getNetworkControllerIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '404':\n          description: Network Controller Intent not found\n          content: {}\n    put:\n      tags:\n        - Network Controller Intent\n      summary: Update Network Controller Intent\n      description: Update `Network Controller Intent`\n      operationId: updateNetworkControllerIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Network Controller Intent not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json: # operation response mime type\n            schema:\n              $ref: '#/components/schemas/Metadata'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Delete Network Controller Intent\n\n      description: |\n        Delete `Network Controller Intent`\n\n      operationId: deleteNetworkControllerIntent\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Network Controller Intent not found\n          content: {}\n################## Workload Intents##################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/workload-intents:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n    post:\n      tags:\n        - Network Controller Intent\n      summary: Network Controller Workload Intent API's\n      description: Add a new `network controller workload intent`\n      operationId: addNetworkControllerWorkloadIntent\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpec'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpec'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get Network Controller Workload Intent\n\n      description: |\n        Get all `network controller workload intent`\n\n      operationId: getAllNetworkControllerWorkloadIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpecArray'\n        '404':\n          description: No Network Controller Workload Intent found\n          content: {}\n\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/netControlWorkloadIntent'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get Network Controller Workload Intent\n\n      description: |\n        Get `network controller workload intent`\n\n      operationId: getNetworkControllerWorkloadIntent\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpec'\n        '404':\n          description: Network Controller Workload Intent not found\n          content: {}\n    put:\n      tags:\n        - Network Controller Intent\n      summary: Update Network Controller Workload Intent\n      description: Update `Network Controller Workload Intent`\n      operationId: updateNetworkControllerWorkloadIntent\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadSpec'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Network Controller Workload Intent not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json: # operation response mime type\n            schema:\n              $ref: '#/components/schemas/NetworkWorkloadSpec'\n        required: true\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Delete Network Controller Workload Intent\n\n      description: |\n        Delete `Network Controller Workload Intent`\n\n      operationId: deleteNetworkControllerWorkloadIntent\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Network Controller Workload Intent not found\n          content: {}\n\n################## Workload Intents Interfaces ##################################\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}/interfaces:\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/netControlWorkloadIntent'\n    post:\n      tags:\n        - Network Controller Intent\n      summary: Network Controller Workload Interface API's\n      description: Add a new `network controller workload interface`\n      operationId: addNetworkControllerWorkloadInterface\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterface'\n        '405':\n          description: Invalid Input\n          content: {}\n      requestBody:\n        content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterface'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get all Network Controller Workload Interface\n\n      description: |\n        Get all `network controller workload interface`\n\n      operationId: getAllNetworkControllerWorkloadInterface\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterfaceArray'\n        '404':\n          description: No Network Controller Workload Interface found\n          content: {}\n  /projects/{project-name}/composite-apps/{composite-app-name}/{composite-app-version}/deployment-intent-groups/{deployment-intent-group-name}/network-controller-intent/{net-control-intent}/workload-intents/{workload-intent-name}/interfaces/{interface-name}:\n    # parameters list that are used with each operation for this path\n    parameters:\n      - $ref: '#/components/parameters/projectName'\n      - $ref: '#/components/parameters/compositeAppName'\n      - $ref: '#/components/parameters/compositeAppVersion'\n      - $ref: '#/components/parameters/deploymentIntentGroupName'\n      - $ref: '#/components/parameters/netControlIntent'\n      - $ref: '#/components/parameters/netControlWorkloadIntent'\n      - $ref: '#/components/parameters/netControlWorkloadInterface'\n    get: # documentation for GET operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Get Network Controller Workload Interface\n\n      description: |\n        Get `network controller workload interface`\n\n      operationId: getNetworkControllerWorkloadInterface\n      responses: # list of responses\n        '200':\n          description: Success\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterface'\n        '404':\n          description: Network Controller Workload Interface not found\n          content: {}\n    put:\n      tags:\n        - Network Controller Intent\n      summary: Update Network Controller Workload Interface\n      description: Update `Network Controller Workload Interface`\n      operationId: updateNetworkControllerWorkloadInterface\n      responses:\n        '200':\n          content:\n            application/json: # operation response mime type\n              schema:\n                $ref: '#/components/schemas/NetworkWorkloadInterface'\n          description: Success\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Network Controller Workload Interface not found\n          content: {}\n      # request body documentation\n      requestBody:\n        content:\n          application/json: # operation response mime type\n            schema:\n              $ref: '#/components/schemas/NetworkWorkloadInterface'\n        required: true\n\n    delete: # documentation for DELETE operation for this path\n      tags:\n        - Network Controller Intent\n      summary: Delete Network Controller Workload Interface\n\n      description: |\n        Delete `Network Controller Workload Interface`\n\n      operationId: deleteNetworkControllerWorkloadInterface\n      responses: # list of responses\n        '204':\n          description: Deleted\n          content: {}\n        '400':\n          description: Invalid data\n          content: {}\n        '404':\n          description: Network Controller Workload Interface not found\n          content: {}\n\n############################ Logical Cloud API's #################################################\n  /projects/{project-name}/logical-clouds:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    post:\n      tags:\n        - Logical Clouds\n      summary: Add a new Logical Cloud\n      description: Add a new Logical Cloud\n      operationId: addLogicalCloud\n      responses:\n        '201':\n          description: Logical Clouds successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogicalCloud'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '404':\n          description: The specified project doesn't exist\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error creating or returning Logical Cloud\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/LogicalCloud'\n        description: Logical Cloud info\n        required: true\n    get:\n      tags:\n        - Logical Clouds\n      summary: Get all Logical Clouds\n      description: Get all Logical Clouds\n      operationId: getAllLogicalCloud\n      responses:\n        '200':\n          description: List of Logical Clouds successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogicalCloudArray'\n        '500':\n          description: Internal error while looking up Logical Clouds or encoding response\n          content: {}\n\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    get:\n      tags:\n        - Logical Clouds\n      summary: Get Logical Cloud\n      description: Get Logical Cloud\n      operationId: getLogicalCloudByName\n      responses:\n        '200':\n          description: Logical Cloud successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogicalCloud'\n        '404':\n          description: Logical Cloud not found\n          content: {}\n        '500':\n          description: Internal error while looking up Logical Cloud or encoding response\n          content: {}\n    put:\n      tags:\n        - Logical Clouds\n      summary: Update Logical Cloud\n      description: Update Logical Cloud\n      operationId: updateLogicalClouds\n      responses:\n        '200':\n          description: Logical Cloud successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogicalCloud'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '404':\n          description: Logical Cloud not found\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error while updating up Logical Cloud or encoding response\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogicalCloud'\n        description: Update Logical Cloud object\n        required: true\n    delete:\n      tags:\n        - Logical Clouds\n      summary: Delete Logical Cloud\n      description: Delete `Logical Cloud`\n      operationId: deleteLogicalCloudByName\n      responses:\n        '204':\n          description: Logical Cloud deleted\n          content: {}\n        '404':\n          description: Logical Cloud not found\n          content: {}\n        '409':\n          description: Logical Cloud is applied or being terminated\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/apply:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Clouds\n      summary: Apply Logical Cloud configuration\n      description: Apply Logical Cloud configuration\n      operationId: applyLogicalCloud\n      responses:\n        '200':\n          description: Logical Cloud applied over clusters\n          content: {}\n        '400':\n          description: Logical Cloud lacks the necessary resources\n          content: {}\n        '404':\n          description: Logical Cloud does not exist\n          content: {}\n        '409':\n          description: Logical Cloud has already been applied or is being terminated\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content: {}\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/terminate:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Clouds\n      summary: Terminate Logical Cloud deployment\n      description: Terminate Logical Cloud deployment\n      operationId: terminateLogicalCloud\n      responses:\n        '200':\n          description: Logical Cloud removed from clusters\n          content: {}\n        '404':\n          description: Logical Cloud does not exist\n          content: {}\n        '409':\n          description: Logical Cloud has not been applied or is already terminating\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content: {}\n\n############################ Logical Cloud Cluster Reference API's ###############################\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-references:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Add Cluster Reference to Logical Cloud\n      description: Add Cluster Reference to Logical Cloud\n      operationId: addClusterReference\n      responses:\n        '201':\n          description: Cluster Reference successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterReference'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterReference'\n    get:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Get all Cluster References for Logical Cloud\n      description: Get all Cluster References for Logical Cloud\n      operationId: getAllClusters\n      responses:\n        '200':\n          description: Cluster References successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterReferenceArray'\n        '500':\n          description: Internal error\n          content: {}\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-references/{cluster-reference}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/clusterReference'\n    get:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Get Cluster Reference\n      description: Get Cluster Reference\n      operationId: getClusterReference\n      responses:\n        '200':\n          description: Cluster Reference successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterReference'\n\n        '404':\n          description: Cluster Reference not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n    put:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Update Cluster Reference\n      description: Update Cluster Reference\n      operationId: updateClusterReference\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterReference'\n          description: Cluster Reference successfully updated\n        '400':\n          description: Invalid data or missing name\n          content: {}\n        '404':\n          description: Cluster Reference not found\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterReference'\n        required: true\n    delete:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Delete Cluster Reference\n      description: Delete Cluster Reference\n      operationId: deleteClusterReference\n      responses:\n        '204':\n          description: Deleted\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-references/{cluster-reference}/kubeconfig:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/clusterReference'\n    get:\n      tags:\n        - Logical Cloud Cluster References\n      summary: Get kubeconfig of Cluster Reference\n      description: Get kubeconfig of Cluster Reference\n      operationId: getClusterReferenceKubeconfig\n      responses:\n        '200':\n          description: Cluster Reference successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterReference'\n        '202':\n          description: User certificate hasn't been issued yet\n          content: {}\n        '400':\n          description: Logical Cloud hasn't been applied\n          content: {}\n        '404':\n          description: Cluster Reference not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n############################ Logical Cloud User Permission API's #################################\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/user-permissions:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Add User Permission to Logical Cloud\n      description: Add User Permission to Logical Cloud\n      operationId: addUserPermission\n      responses:\n        '201':\n          description: User Permission successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPermission'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/UserPermission'\n    get:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Get all User Permissions for Logical Cloud\n      description: Get all User Permissions for Logical Cloud\n      operationId: getAllUserPermissions\n      responses:\n        '200':\n          description: User Permissions successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPermissionArray'\n        '500':\n          description: Internal error\n          content: {}\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/user-permissions/{user-permission}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/userPermission'\n    get:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Get User Permission\n      description: Get User Permission\n      operationId: getUserPermission\n      responses:\n        '200':\n          description: User Permission successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPermission'\n\n        '404':\n          description: User Permission not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n    put:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Update User Permission\n      description: Update User Permission\n      operationId: updateUserPermission\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPermission'\n          description: User Permission successfully updated\n        '400':\n          description: Invalid data or missing name\n          content: {}\n        '404':\n          description: User Permission not found\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/UserPermission'\n        required: true\n    delete:\n      tags:\n        - Logical Cloud User Permissions\n      summary: Delete User Permission\n      description: Delete User Permission\n      operationId: deleteUserPermission\n      responses:\n        '204':\n          description: Deleted\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n############################ Logical Cloud Cluster Quota API's ###################################\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-quotas:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Add Cluster Quota to Logical Cloud\n      description: Add Cluster Quota to Logical Cloud\n      operationId: addClusterQuota\n      responses:\n        '201':\n          description: Cluster Quota successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuota'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterQuota'\n    get:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Get allCluster Quotas for Logical Cloud\n      description: Get all Cluster Quotas for Logical Cloud\n      operationId: getAllClusterQuotas\n      responses:\n        '200':\n          description: Cluster Quotas successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuotaArray'\n        '500':\n          description: Internal error\n          content: {}\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/cluster-quotas/{cluster-quota}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/clusterQuota'\n    get:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Get Cluster Quota\n      description: Get Cluster Quota\n      operationId: getClusterQuota\n      responses:\n        '200':\n          description: Cluster Quota successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuota'\n\n        '404':\n          description: Cluster Quota not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n    put:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Update Cluster Quota\n      description: Update Cluster Quota\n      operationId: updateClusterQuota\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuota'\n          description: Cluster Quota successfully updated\n        '400':\n          description: Invalid data or missing name\n          content: {}\n        '404':\n          description: Cluster Quota not found\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/ClusterQuota'\n        required: true\n    delete:\n      tags:\n        - Logical Cloud Cluster Quotas\n      summary: Delete Cluster Quota\n      description: Delete Cluster Quota\n      operationId: deleteClusterQuota\n      responses:\n        '204':\n          description: Deleted\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n############################ Logical Cloud KV Pair API's #########################################\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/kv-pairs:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    post:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Add KV Pair to Logical Cloud\n      description: Add KV Pair to Logical Cloud\n      operationId: addKVPair\n      responses:\n        '201':\n          description: KV Pair successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n        '400':\n          description: Empty body or missing name\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/KVPair'\n    get:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Get all KV Pairs for Logical Cloud\n      description: Get all KV Pairs for Logical Cloud\n      operationId: getAllKVPairs\n      responses:\n        '200':\n          description: KV Pairs successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KVPairArray'\n        '500':\n          description: Internal error\n          content: {}\n  /projects/{project-name}/logical-clouds/{logical-cloud-name}/kv-pairs/{kv-pair}:\n    parameters:\n    - $ref: '#/components/parameters/projectName'\n    - $ref: '#/components/parameters/logicalCloudName'\n    - $ref: '#/components/parameters/kvPair'\n    get:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Get KV Pair\n      description: Get KV Pair\n      operationId: getKVPair\n      responses:\n        '200':\n          description: KV Pair successfully returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n\n        '404':\n          description: KV Pair not found\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n    put:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Update KV Pair\n      description: Update KV Pair\n      operationId: updateKVPair\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n          description: KV Pair successfully updated\n        '400':\n          description: Invalid data or missing name\n          content: {}\n        '404':\n          description: KV Pair not found\n          content: {}\n        '422':\n          description: Invalid input\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/KVPair'\n        required: true\n    delete:\n      tags:\n        - Logical Cloud KV Pairs\n      summary: Delete KV Pair\n      description: Delete KV Pair\n      operationId: deleteKVPair\n      responses:\n        '204':\n          description: Deleted\n          content: {}\n        '500':\n          description: Internal error\n          content: {}\n\n#########################SCHEMAS####################################################\n# An object to hold reusable parts that can be used across the definition\ncomponents:\n  schemas:\n    MetadataBase:\n      type: object\n      properties:\n        name:\n          description: Name of the resource\n          type: string\n          maxLength: 128\n          example: \"ResName\"\n        description:\n          description: Description for the resource\n          type: string\n          maxLength: 1024\n          example: \"Resource description\"\n        userData1:\n          description: User relevant data for the resource\n          type: string\n          maxLength: 512\n          example: \"Some data\"\n        userData2:\n          description: User relevant data for the resource\n          type: string\n          maxLength: 512\n          example: \"Some more data\"\n    Metadata:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n    MetadataArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/Metadata'\n    VersionSpec:\n      type: object\n      properties:\n        version:\n          description: Composite Application Version\n          type: string\n          maxLength: 128\n          example: \"v1\"\n    CompositeAppVersion:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/VersionSpec'\n    CompositeAppVersionArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/CompositeAppVersion'\n    File:\n      type: string\n      format: binary\n      maxLength: 1073741824\n    AppData:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        file: # Part 2 (Helm chart in tar.gz format)\n          $ref: '#/components/schemas/File'\n    ProfileAppSpec:\n      type: object\n      properties:\n        spec:\n          type: object\n          description: AppProfileSpec contains the Spec for AppProfiles\n          properties:\n            metadata:\n              $ref: '#/components/schemas/MetadataBase'\n            app-name:\n              type: string\n              description: Application Name\n              maxLength: 128\n              example: \"Application1\"\n              required:\n              - app-name\n    ProfileAppSpecArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProfileAppSpec'\n    ProfileAppData:\n      type: object\n      properties:\n        file: # Part 2 (Helm chart in tar.gz format)\n          $ref: '#/components/schemas/File'\n        metadata:\n            $ref: '#/components/schemas/ProfileAppSpec'\n    GenericPlacementIntent:\n      type: object\n      properties:\n        spec:\n          type: object\n          description: Spec\n          properties:\n            logical-cloud:\n              type: string\n              description: Logical Cloud to use for this intent\n              maxLength: 128\n              example: \"cloud1\"\n              required:\n              - logical-cloud\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n    GenericPlacementIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/GenericPlacementIntent'\n    GenericPlacementAppIntentSpec:\n      type: object\n      description: ''\n      properties:\n        app-name:\n          type: string\n          maxLength: 128\n          example: \"appl\"\n        allOf:\n          items:\n            description: AllOf ProviderName, ClusterName, ClusterLabelName and AnyOfArray\n            properties:\n              anyOf:\n                items:\n                  description: AnyOf consists of Array of ProviderName & ClusterLabelNames\n                  properties:\n                    cluster-label-name:\n                      type: string\n                      maxLength: 128\n                      example: \"east\"\n                    cluster-name:\n                      type: string\n                      maxLength: 128\n                      example: \"cluster1\"\n                    provider-name:\n                      type: string\n                      maxLength: 128\n                      example: \"provider1\"\n                  type: object\n                type: array\n              cluster-label-name:\n                type: string\n                maxLength: 128\n                example: \"west\"\n              cluster-name:\n                type: string\n                maxLength: 128\n                example: \"cluster2\"\n              provider-name:\n                type: string\n                maxLength: 128\n                example: \"provider2\"\n            type: object\n          type: array\n        anyOf:\n          items:\n            description: AnyOf consists of Array of ProviderName & ClusterLabelNames\n            properties:\n              cluster-label-name:\n                type: string\n                maxLength: 128\n                example: \"east\"\n              cluster-name:\n                type: string\n                maxLength: 128\n                example: \"cluster1\"\n              provider-name:\n                type: string\n                maxLength: 128\n                example: \"provider1\"\n            type: object\n          type: array\n    GenericPlacementAppIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/GenericPlacementAppIntentSpec'\n    GenericPlacementAppIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/GenericPlacementAppIntent'\n    DeploymentIntentSpec:\n      type: object\n      description: DepSpecData has profile, version, OverrideValuesObj\n      properties:\n        override-values:\n          items:\n            description: OverrideValues has appName and ValuesObj\n            properties:\n              app-name:\n                type: string\n              values:\n                additionalProperties:\n                  type: string\n                  maxLength: 128\n                type: object\n            required:\n            - app-name\n            - values\n            type: object\n          type: array\n        profile:\n          type: string\n          maxLength: 128\n        version:\n          type: string\n          maxLength: 128\n        logical-cloud:\n          type: string\n          description: Logical Cloud to use for this intent\n          maxLength: 128\n          example: \"cloud1\"\n      required:\n      - profile\n      - version\n      - logical-cloud\n    DeploymentGroupIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          $ref: '#/components/schemas/DeploymentIntentSpec'\n    DeploymentGroupIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentGroupIntent'\n    DeploymentIntent:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          description: IntentSpecData has Intent\n          properties:\n            intent:\n              additionalProperties:\n                type: string\n                maxLength: 128\n              example:\n                generic-placement-intent: gpi-name\n              type: object\n          required:\n          - intent\n    DeploymentIntentArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeploymentIntent'\n    Controller:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            host:\n              type: string\n              description: Controller reachibility information\n              maxLength: 128\n              example: \"10.7.100.4\"\n            port:\n              type: string\n              description: Port for controller\n              maxLength: 128\n              example: \"9029\"\n            type:\n              type: string\n              description: Type of controller (placement, action are 2 types supported)\n              maxLength: 48\n              example: \"placement\"\n            priority:\n              type: string\n              description: Priority of controller to be called\n              maxLength: 128\n              example: \"4\"\n          required:\n            - host\n            - port\n            - type\n            - priority\n    ControllerArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/Controller'\n    ClusterLabel:\n      type: object\n      properties:\n        label-name:\n          type: string\n          description: Logical Cloud to use for this intent\n          maxLength: 128\n          example: \"cluster-label-1\"\n    ClusterKv:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          properties:\n            kv:\n              items:\n                additionalProperties:\n                  type: string\n                  maxLength: 128\n                type: object\n              type: array\n          required:\n          - kv\n          type: object\n      required:\n      - metadata\n      - spec\n    Kv:\n      type: object\n      properties:\n        value:\n          type: string\n          maxLength: 128\n\n    VirtualNetwork:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          properties:\n            cniType:\n              type: string\n              maxLength: 128\n            ipv4Subnets:\n              items:\n                properties:\n                  excludeIps:\n                    type: string\n                    maxLength: 1024\n                  gateway:\n                    type: string\n                    maxLength: 128\n                  name:\n                    type: string\n                    maxLength: 128\n                  subnet:\n                    type: string\n                    maxLength: 128\n                required:\n                - excludeIps\n                - gateway\n                - name\n                - subnet\n                type: object\n              type: array\n    VirtualNetworkArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/VirtualNetwork'\n    ProviderNetwork:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          properties:\n            cniType:\n              type: string\n              maxLength: 128\n            ipv4Subnets:\n              items:\n                properties:\n                  excludeIps:\n                    type: string\n                    maxLength: 128\n                  gateway:\n                    type: string\n                    maxLength: 128\n                  name:\n                    type: string\n                    maxLength: 128\n                  subnet:\n                    type: string\n                    maxLength: 128\n                required:\n                - excludeIps\n                - gateway\n                - name\n                - subnet\n                type: object\n              type: array\n            providerNetType:\n              type: string\n              maxLength: 128\n            vlan:\n              properties:\n                logicalInterfaceName:\n                  type: string\n                  maxLength: 128\n                nodeLabelList:\n                  items:\n                    type: string\n                    maxLength: 128\n                  type: array\n                providerInterfaceName:\n                  type: string\n                  maxLength: 128\n                vlanID:\n                  type: string\n                  maxLength: 128\n                vlanNodeSelector:\n                  type: string\n                  maxLength: 128\n              required:\n              - logicalInterfaceName\n              - nodeLabelList\n              - providerInterfaceName\n              - vlanID\n              - vlanNodeSelector\n              type: object\n          required:\n          - cniType\n          - ipv4Subnets\n          - providerNetType\n          - vlan\n          type: object\n    ProviderNetworkArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProviderNetwork'\n    RouteBasedChain:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          properties:\n            chainType:\n              type: string\n              maxLength: 128\n            routingSpec:\n              properties:\n                leftNetwork:\n                  items:\n                    properties:\n                      gatewayIp:\n                        type: string\n                        maxLength: 128\n                      networkName:\n                        type: string\n                        maxLength: 128\n                      subnet:\n                        type: string\n                        maxLength: 128\n                    required:\n                    - gatewayIp\n                    - networkName\n                    - subnet\n                    type: object\n                  type: array\n                namespace:\n                  type: string\n                  maxLength: 128\n                networkChain:\n                  type: string\n                  maxLength: 128\n                rightNetwork:\n                  items:\n                    properties:\n                      gatewayIp:\n                        type: string\n                        maxLength: 128\n                      networkName:\n                        type: string\n                        maxLength: 128\n                      subnet:\n                        type: string\n                        maxLength: 128\n                    required:\n                    - gatewayIp\n                    - networkName\n                    - subnet\n                    type: object\n                  type: array\n              required:\n              - leftNetwork\n              - namespace\n              - networkChain\n              - rightNetwork\n              type: object\n          required:\n          - chainType\n          - routingSpec\n          type: object\n    NetworkWorkloadSpec:\n      type: object\n      properties:\n        spec:\n          type: object\n          description: Newtwork Workload Intent\n          properties:\n            metadata:\n              $ref: '#/components/schemas/MetadataBase'\n            spec:\n              type: object\n              properties:\n                application-name:\n                  type: string\n                  description: Application Name\n                  maxLength: 128\n                  example: \"Application1\"\n                workload-resource:\n                  type: string\n                  description: Name of the workload\n                  maxLength: 254\n                  example: \"firewall\"\n                type:\n                  type: string\n                  description: Type of the workload\n                  maxLength: 128\n                  example: \"deployment\"\n    NetworkWorkloadSpecArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/NetworkWorkloadSpec'\n    NetworkWorkloadInterface:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            interface:\n              type: string\n              description: interface Name\n              maxLength: 128\n              example: \"eth0\"\n            name:\n              type: string\n              description: Name of the network\n              maxLength: 128\n              example: \"provider-1\"\n            defaultGateway:\n              type: \"string\"\n              description: Is this interface default gateway\n              maxLength: 128\n              example: \"false\"\n            ipAddress:\n              type: string\n              description: Name of the network\n              maxLength: 128\n              example: \"0.0.0.0\"\n            macAddress:\n              type: string\n              description: Name of the network\n              maxLength: 128\n              example: \"x.x.x.x\"\n          required:\n            - interface\n            - name\n    NetworkWorkloadInterfaceArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/NetworkWorkloadInterface'\n    LogicalCloud:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            namespace:\n              type: string\n              description: namespace name\n              maxLength: 128\n              example: \"ns1\"\n            user:\n              properties:\n                user-name:\n                  type: string\n                  description: user name for auth\n                  maxLength: 20\n                type:\n                  type: string\n                  description: authentication type\n                  maxLength: 128\n                  example: \"certificate\"\n                user-permissions:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      permission-name:\n                        type: string\n                        description: name of permission\n                        maxLength: 128\n                      apiGroups:\n                        type: array\n                        items:\n                          type: string\n                          description: API group expression\n                      resources:\n                        type: array\n                        description: K8s resource list\n                        items:\n                          type: string\n                          description: K8s resource\n                      verbs:\n                        type: array\n                        description: K8s verb list\n                        items:\n                          type: string\n                          description: K8s verb\n    ClusterReference:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            cluster-provider:\n              type: string\n              description: cluster provider name\n              maxLength: 128\n              example: \"cp-1\"\n            cluster-name:\n              type: string\n              description: cluster name\n              maxLength: 128\n              example: \"c1\"\n            loadbalancer-ip:\n              type: string\n              description: IP address of load balancer\n              maxLength: 16\n              example: \"0.0.0.0\"\n    UserPermission:\n      type: object\n      properties:\n        permission-name:\n          type: string\n          description: name of permission\n          maxLength: 128\n        apiGroups:\n          type: array\n          items:\n            type: string\n            description: API group expression\n        resources:\n          type: array\n          description: K8s resource list\n          items:\n            type: string\n            description: K8s resource\n        verbs:\n          type: array\n          description: K8s verb list\n          items:\n            type: string\n            description: K8s verb\n    ClusterQuota:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            limits.cpu:\n              type: string\n            limits.memory:\n              type: string\n            requests.cpu:\n              type: string\n            requests.memory:\n              type: string\n            requests.storage:\n              type: string\n            requests.ephemeral-storage:\n              type: string\n            limits.ephemeral-storage:\n              type: string\n            persistentvolumeclaims:\n              type: string\n            pods:\n              type: string\n            configmaps:\n              type: string\n            replicationcontrollers:\n              type: string\n            resourcequotas:\n              type: string\n            services:\n              type: string\n            services.loadbalancers:\n              type: string\n            services.nodeports:\n              type: string\n            secrets:\n              type: string\n            count/replicationcontrollers:\n              type: string\n            count/deployments.apps:\n              type: string\n            count/replicasets.apps:\n              type: string\n            count/statefulsets.apps:\n              type: string\n            count/jobs.batch:\n              type: string\n            count/cronjobs.batch:\n              type: string\n            count/deployments.extensions:\n              type: string\n    KVPair:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MetadataBase'\n        spec:\n          type: object\n          properties:\n            kv:\n              type: array\n              description: list of key-value pairs\n              items:\n                type: object\n                properties:\n                  key:\n                    type: string\n                  value:\n                    type: string\n    LogicalCloudArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/LogicalCloud'\n    ClusterReferenceArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ClusterReference'\n    UserPermissionArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/UserPermission'\n    ClusterQuotaArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/ClusterQuota'\n    KVPairArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/KVPair'\n\n  parameters:\n    projectName:\n      name: project-name\n      in: path\n      description: Name of the project\n      required: true\n      schema:\n        type: string\n    compositeAppName:\n      name: composite-app-name\n      in: path\n      description: Name of the Composite Application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    compositeAppVersion:\n      name: composite-app-version\n      in: path\n      description: Version of the Composite Application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    appName:\n      name: app-name\n      in: path\n      description: Name of the Application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    compositeProfileName:\n      name: composite-profile-name\n      in: path\n      description: Name of the Composite Profile\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    profileName:\n      name: profile-name\n      in: path\n      description: Name of the Profile\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    genericPlacementIntentName:\n      name: generic-placement-intent-name\n      in: path\n      description: Name of Generic Placement Intent\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    intentName:\n      name: intent-name\n      in: path\n      description: Name of Generic Placement Intent for application\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    deploymentIntentGroupName:\n      name: deployment-intent-group-name\n      in: path\n      description: Name of Deployment Intent Group\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterProviderName:\n      name: cluster-providers-name\n      in: path\n      description: Name of the cluster provider\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterName:\n      name: cluster-name\n      in: path\n      description: Name of the cluster\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterLabelName:\n      name: cluster-label-name\n      in: path\n      description: Name of the cluster\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterKvpairName:\n      name: kv-pair-name\n      in: path\n      description: Name of the cluster\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterNetworkName:\n      name: network-name\n      in: path\n      description: Name of the network\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    netControlIntent:\n      name: net-control-intent\n      in: path\n      description: Name of the network\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    netControlWorkloadIntent:\n      name: workload-intent-name\n      in: path\n      description: Name of the network\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    netControlWorkloadInterface:\n      name: interface-name\n      in: path\n      description: Name of the network\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    controllerName:\n      name: controller-name\n      in: path\n      description: Controller name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    logicalCloudName:\n      name: logical-cloud-name\n      in: path\n      description: Logical Cloud name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterReference:\n      name: cluster-reference\n      in: path\n      description: Cluster Reference name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    userPermission:\n      name: user-permission\n      in: path\n      description: User Permission name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    clusterQuota:\n      name: cluster-quota\n      in: path\n      description: Cluster Quota name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n    kvPair:\n      name: kv-pair\n      in: path\n      description: KV Pair name\n      required: true\n      schema:\n        type: string\n        maxLength: 128\n",
			"canonicalURL": "/github.com/onap/multicloud-k8s@f263cfca564f38fe117913a9cafa5391b8a1efd7/-/blob/docs/emco_apis.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/onap/multicloud-k8s/blob/f263cfca564f38fe117913a9cafa5391b8a1efd7/docs/emco_apis.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/cluster-providers/{cluster-providers-name}/clusters/{cluster-name}/apply\": at 1:23733: post: operation \"applyNetworksForCluster\": at 1:23858: requestBody: at 1:23984: content must have at least one entry"
}