{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oas-tools/oas-generator"
		},
		"file": {
			"name": "slack.yaml",
			"size": 0,
			"path": "specs/slack.yaml",
			"byteSize": 503818,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://slack.com/api'\ninfo:\n  description: \u003e-\n    One way to interact with the Slack platform is its HTTP RPC-based Web API, a\n    collection of methods requiring OAuth 2.0-based user, bot, or workspace\n    tokens blessed with related OAuth scopes.\n  title: Slack\n  version: 1.0.5\n  x-apisguru-categories:\n    - collaboration\n    - messaging\n  x-logo:\n    url: 'http://static.tumblr.com/wvuzcz9/LlKncfhmp/slack_logo_240.png'\n  x-origin:\n    - format: swagger\n      url: \u003e-\n        https://raw.githubusercontent.com/slackapi/slack-api-specs/master/web-api/slack_web_openapi_v2.json\n      version: '2.0'\n  x-providerName: slack.com\nexternalDocs:\n  description: Learn more about the Slack Web API\n  url: 'https://api.slack.com/web'\npaths:\n  /api.test:\n    get:\n      description: Checks API calling code.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/api.test'\n      operationId: api_test\n      parameters:\n        - description: example property to return\n          in: query\n          name: foo\n          schema:\n            type: string\n        - description: Error response to return\n          in: query\n          name: error\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  type: object\n                description: Schema for successful response api.test method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: api.test success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Artificial error response\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  type: object\n                description: Schema for error response api.test method\n                properties:\n                  error:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: api.test error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    args:\n                      error: my_error\n                    error: my_error\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - api\n  /apps.permissions.info:\n    get:\n      description: Returns list of permissions this app has on a team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/apps.permissions.info'\n      operationId: apps_permissions_info\n      parameters:\n        - description: 'Authentication token. Requires scope: `none`'\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response when used with a user token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    info:\n                      app_home:\n                        resources:\n                          ids:\n                            - D0C0NU1Q8\n                            - D0BH95DLH\n                        scopes:\n                          - 'chat:write'\n                          - 'im:history'\n                          - 'im:read'\n                      channel:\n                        resources:\n                          excluded_ids: []\n                          ids:\n                            - C061FA5PB\n                          wildcard: false\n                        scopes:\n                          - 'channels:read'\n                      group:\n                        resources:\n                          ids: []\n                        scopes: []\n                      im:\n                        resources:\n                          ids: []\n                        scopes: []\n                      mpim:\n                        resources:\n                          ids: []\n                        scopes: []\n                      team:\n                        resources:\n                          ids: []\n                        scopes: []\n                    ok: true\n        default:\n          description: Standard failure response when used with an invalid token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps.permissions\n        - apps\n  /apps.permissions.request:\n    get:\n      description: Allows an app to request additional scopes\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/apps.permissions.request'\n      operationId: apps_permissions_request\n      parameters:\n        - description: A comma separated list of scopes to request for\n          in: query\n          name: scopes\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `none`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Token used to trigger the permissions API\n          in: query\n          name: trigger_id\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response when used with a user token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Standard failure response when trigger_id is invalid\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_trigger_id\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps.permissions\n        - apps\n  /auth.revoke:\n    get:\n      description: Revokes a token.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/auth.revoke'\n      operationId: auth_revoke\n      parameters:\n        - description: \u003e-\n            Setting this parameter to `1` triggers a _testing mode_ where the\n            specified token will not actually be revoked.\n          in: query\n          name: test\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `none`'\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    revoked: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - auth\n  /auth.test:\n    get:\n      description: Checks authentication \u0026 identity.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/auth.test'\n      operationId: auth_test\n      parameters:\n        - description: 'Authentication token. Requires scope: `none`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response when used with a user token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response auth.test method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  team:\n                    type: string\n                  team_id:\n                    $ref: '#/components/schemas/defs_team'\n                  url:\n                    type: string\n                  user:\n                    type: string\n                  user_id:\n                    $ref: '#/components/schemas/defs_user_id'\n                required:\n                  - ok\n                  - url\n                  - team\n                  - user\n                  - team_id\n                  - user_id\n                title: auth.test success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    team: Subarachnoid Workspace\n                    team_id: T12345678\n                    url: 'https://subarachnoid.slack.com/'\n                    user: grace\n                    user_id: W12345678\n        default:\n          description: Standard failure response when used with an invalid token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response auth.test method\n                properties:\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - token_revoked\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: auth.test error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - auth\n  /bots.info:\n    get:\n      description: Gets information about a bot user.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/bots.info'\n      operationId: bots_info\n      parameters:\n        - description: 'Authentication token. Requires scope: `users:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Bot user to get info on\n          in: query\n          name: bot\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'When successful, returns bot info by bot ID.'\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    bot:\n                      app_id: A061BLERW\n                      deleted: false\n                      icons:\n                        image_36: 'https://...'\n                        image_48: 'https://...'\n                        image_72: 'https://...'\n                      id: B061F7JQ1\n                      name: commandeer\n                      updated: 1449272004\n                    ok: true\n        default:\n          description: 'When no bot can be found, it returns an error.'\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: bot_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users:read'\n      tags:\n        - bots\n  /channels.archive:\n    post:\n      description: Archives a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.archive'\n      operationId: channels_archive\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from channels.archive method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: channels.archive success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response channels.archive method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - already_archived\n                      - cant_archive_general\n                      - restricted_action\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: channels.archive error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Channel to archive\n                  type: string\n  /channels.create:\n    post:\n      description: Creates a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.create'\n      operationId: channels_create\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response resulting in a new channel\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response channels.create method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_channel'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: channels.create error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1502833204\n                      creator: U061F7AUR\n                      id: C0DEL09A5\n                      is_archived: false\n                      is_channel: true\n                      is_general: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_private: false\n                      is_shared: false\n                      last_read: 0000000000.000000\n                      members:\n                        - U061F7AUR\n                      name: endeavor\n                      name_normalized: endeavor\n                      previous_names: []\n                      purpose:\n                        creator: ''\n                        last_set: 0\n                        value: ''\n                      topic:\n                        creator: ''\n                        last_set: 0\n                        value: ''\n                      unread_count: 0\n                      unread_count_display: 0\n                    ok: true\n        default:\n          description: Example error response when an invalid name is provided\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response channels.create method\n                properties:\n                  error:\n                    enum:\n                      - name_taken\n                      - restricted_action\n                      - no_channel\n                      - invalid_name_required\n                      - invalid_name_punctuation\n                      - invalid_name_maxlength\n                      - invalid_name_specials\n                      - invalid_name\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: channels.create error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    detail: \u003e-\n                      Value passed for `name` contained unallowed special\n                      characters.\n                    error: invalid_name_specials\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                validate:\n                  description: \u003e-\n                    Whether to return errors on invalid channel name instead of\n                    modifying it to meet the specified criteria.\n                  type: boolean\n                name:\n                  description: Name of channel to create\n                  type: string\n  /channels.history:\n    get:\n      description: Fetches history of messages and events from a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.history'\n      operationId: channels_history\n      parameters:\n        - description: 'Number of messages to return, between 1 and 1000.'\n          in: query\n          name: count\n          schema:\n            type: integer\n        - description: Include `unread_count_display` in the output?\n          in: query\n          name: unreads\n          schema:\n            type: boolean\n        - description: Include messages with latest or oldest timestamp in results.\n          in: query\n          name: inclusive\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `channels:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Start of time range of messages to include in results.\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Channel to fetch history for.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: End of time range of messages to include in results.\n          in: query\n          name: latest\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Typical success response containing the channel's history\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response channels.history method\n                properties:\n                  has_more:\n                    type: boolean\n                  messages:\n                    items:\n                      $ref: '#/components/schemas/objs_message'\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - messages\n                  - has_more\n                title: channels.history success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    has_more: false\n                    latest: '1358547726.000003'\n                    messages:\n                      - text: Hello\n                        ts: '1358546515.000008'\n                        type: message\n                        user: U2147483896\n                      - is_starred: true\n                        reactions:\n                          - count: 3\n                            name: space_invader\n                            users:\n                              - U1\n                              - U2\n                              - U3\n                          - count: 5\n                            name: sweet_potato\n                            users:\n                              - U1\n                              - U2\n                              - U3\n                              - U4\n                              - U5\n                        text: World\n                        ts: '1358546515.000007'\n                        type: message\n                        user: U2147483896\n                      - ts: '1358546515.000007'\n                        type: something_else\n                      - attachments:\n                          - fallback: This is an attachment fallback\n                            id: 1\n                            text: Don't get too attached\n                        bot_id: B19LU7CSY\n                        subtype: bot_message\n                        text: Containment unit is 98% full\n                        ts: '1503435956.000247'\n                        type: message\n                        username: ecto1138\n                    ok: true\n        default:\n          description: Error response when the specified channel cannot be found\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response channels.history method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - invalid_ts_latest\n                      - invalid_ts_oldest\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: channels.history error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:history'\n      tags:\n        - channels\n  /channels.info:\n    get:\n      description: Gets information about a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.info'\n      operationId: channels_info\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            Set this to `true` to receive the locale for this channel. Defaults\n            to `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n        - description: Channel to get info on\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response channels.info method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_channel'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: channels.info success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1466025154\n                      creator: U0G9QF9C6\n                      id: C1H9RESGL\n                      is_archived: false\n                      is_channel: true\n                      is_general: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_private: false\n                      is_shared: false\n                      last_read: '1503435939.000101'\n                      latest:\n                        attachments:\n                          - fallback: This is an attachment fallback\n                            id: 1\n                            text: Don't get too attached\n                        bot_id: B19LU7CSY\n                        subtype: bot_message\n                        text: Containment unit is 98% full\n                        ts: '1503435956.000247'\n                        type: message\n                        username: ecto1138\n                      members:\n                        - U0G9QF9C6\n                        - U1QNSQB9U\n                      name: busting\n                      name_normalized: busting\n                      previous_names:\n                        - dusting\n                      purpose:\n                        creator: U0G9QF9C6\n                        last_set: 1503435128\n                        value: Discuss busting ghosts\n                      topic:\n                        creator: U0G9QF9C6\n                        last_set: 1503435128\n                        value: Spiritual containment strategies\n                      unread_count: 1\n                      unread_count_display: 1\n                    ok: true\n        default:\n          description: Error response when the specified channel cannot be found\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response channels.info method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: channels.info error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:read'\n      tags:\n        - channels\n  /channels.invite:\n    post:\n      description: Invites a user to a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.invite'\n      operationId: channels_invite\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response channels.invite method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_channel'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: channels.invite error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1466025154\n                      creator: U0G9QF9C6\n                      id: C1H9RESGL\n                      is_archived: false\n                      is_channel: true\n                      is_general: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_private: false\n                      is_shared: false\n                      last_read: '1503435963.000307'\n                      latest:\n                        subtype: channel_leave\n                        text: \u003c@U1QNSQB9U|protobot\u003e has left the channel\n                        ts: '1503435963.000307'\n                        type: message\n                        user: U1QNSQB9U\n                      members:\n                        - U0G9QF9C6\n                        - U1QNSQB9U\n                      name: busting\n                      name_normalized: busting\n                      previous_names: []\n                      purpose:\n                        creator: U0G9QF9C6\n                        last_set: 1503435128\n                        value: My Purpose\n                      topic:\n                        creator: U0G9QF9C6\n                        last_set: 1503435128\n                        value: My Topic\n                      unread_count: 0\n                      unread_count_display: 0\n                    ok: true\n        default:\n          description: A somewhat typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response channels.invite method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - user_not_found\n                      - cant_invite_self\n                      - not_in_channel\n                      - already_in_channel\n                      - is_archived\n                      - cant_invite\n                      - too_many_users\n                      - ura_max_channels\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: channels.invite error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: cant_invite\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                user:\n                  description: User to invite to channel.\n                  type: string\n                channel:\n                  description: Channel to invite user to.\n                  type: string\n  /channels.join:\n    post:\n      description: 'Joins a channel, creating it if needed.'\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.join'\n      operationId: channels_join\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    already_in_channel: true\n                    channel:\n                      created: 1466025154\n                      creator: U0G9QF9C6\n                      id: C1H9RESGL\n                      is_archived: false\n                      is_channel: true\n                      is_general: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_private: false\n                      is_shared: false\n                      members:\n                        - U0G9QF9C6\n                        - U1QNSQB9U\n                      name: busting\n                      name_normalized: busting\n                      previous_names: []\n                      purpose:\n                        creator: U0G9QF9C6\n                        last_set: 1503435128\n                        value: My Purpose\n                      topic:\n                        creator: U0G9QF9C6\n                        last_set: 1503435128\n                        value: My Topic\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                validate:\n                  description: \u003e-\n                    Whether to return errors on invalid channel name instead of\n                    modifying it to meet the specified criteria.\n                  type: boolean\n                name:\n                  description: Name of channel to join\n                  type: string\n  /channels.kick:\n    post:\n      description: Removes a user from a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.kick'\n      operationId: channels_kick\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: not_in_channel\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                user:\n                  description: User to remove from channel.\n                  type: string\n                channel:\n                  description: Channel to remove user from.\n                  type: string\n  /channels.leave:\n    post:\n      description: Leaves a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.leave'\n      operationId: channels_leave\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Channel to leave\n                  type: string\n  /channels.list:\n    get:\n      description: Lists all channels in a Slack team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.list'\n      operationId: channels_list\n      parameters:\n        - description: Exclude the `members` collection from each `channel`\n          in: query\n          name: exclude_members\n          schema:\n            type: boolean\n        - description: \u003e-\n            Paginate through collections of data by setting the `cursor`\n            parameter to a `next_cursor` attribute returned by a previous\n            request's `response_metadata`. Default value fetches the first\n            \"page\" of the collection. See [pagination](/docs/pagination) for\n            more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `channels:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of items to return. Fewer than the requested\n            number of items may be returned, even if the end of the users list\n            hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Exclude archived channels from the list\n          in: query\n          name: exclude_archived\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Typical cursored success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response channels.list method\n                properties:\n                  channels:\n                    items:\n                      $ref: '#/components/schemas/objs_channel'\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channels\n                title: channels.list success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channels:\n                      - created: 1449709280\n                        creator: U0G9QF9C6\n                        id: C0G9QF9GW\n                        is_archived: false\n                        is_channel: true\n                        is_general: false\n                        is_member: true\n                        is_mpim: false\n                        is_org_shared: false\n                        is_private: false\n                        is_shared: false\n                        members:\n                          - U0G9QF9C6\n                          - U0G9WFXNZ\n                        name: random\n                        name_normalized: random\n                        num_members: 2\n                        previous_names: []\n                        purpose:\n                          creator: ''\n                          last_set: 0\n                          value: \u003e-\n                            A place for non-work-related flimflam, faffing,\n                            hodge-podge or jibber-jabber you'd prefer to keep\n                            out of more focused work-related channels.\n                        topic:\n                          creator: U0G9QF9C6\n                          last_set: 1449709352\n                          value: Other stuff\n                      - created: 1449709280\n                        creator: U0G9QF9C6\n                        id: C0G9QKBBL\n                        is_archived: false\n                        is_channel: true\n                        is_general: true\n                        is_member: true\n                        is_mpim: false\n                        is_org_shared: false\n                        is_private: false\n                        is_shared: false\n                        members:\n                          - U0G9QF9C6\n                          - U0G9WFXNZ\n                        name: general\n                        name_normalized: general\n                        num_members: 2\n                        previous_names: []\n                        purpose:\n                          creator: U0G9QF9C6\n                          last_set: 1449709334\n                          value: To talk about anything!\n                        topic:\n                          creator: U0G9QF9C6\n                          last_set: 1449709364\n                          value: Talk about anything!\n                    ok: true\n                    response_metadata:\n                      next_cursor: dGVhbTpDMUg5UkVTR0w=\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response channels.list method\n                properties:\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: channels.list error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:read'\n      tags:\n        - channels\n  /channels.mark:\n    post:\n      description: Sets the read cursor in a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.mark'\n      operationId: channels_mark\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response channels.mark method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: channels.mark success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response channels.mark method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - invalid_timestamp\n                      - not_in_channel\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: channels.mark error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ts:\n                  description: Timestamp of the most recently seen message.\n                  type: number\n                channel:\n                  description: Channel to set reading cursor in.\n                  type: string\n  /channels.rename:\n    post:\n      description: Renames a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.rename'\n      operationId: channels_rename\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1477445146\n                      creator: U2U85N1RZ\n                      id: C2U875RJN\n                      is_archived: false\n                      is_channel: true\n                      is_general: false\n                      is_member: false\n                      is_mpim: false\n                      is_org_shared: false\n                      is_private: false\n                      is_shared: false\n                      members: []\n                      name: humans-and-bots\n                      name_normalized: humans-and-bots\n                      previous_names:\n                        - humans\n                      purpose:\n                        creator: U2U85N1RZ\n                        last_set: 1509475801\n                        value: \u003e-\n                          the purpose of this channel is to bring people and\n                          robots together in harmony\n                      topic:\n                        creator: U2U85N1RZ\n                        last_set: 1509475775\n                        value: here be robots\n                      unlinked: 0\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                validate:\n                  description: \u003e-\n                    Whether to return errors on invalid channel name instead of\n                    modifying it to meet the specified criteria.\n                  type: boolean\n                name:\n                  description: New name for channel.\n                  type: string\n                channel:\n                  description: Channel to rename\n                  type: string\n  /channels.replies:\n    get:\n      description: Retrieve a thread of messages posted to a channel\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.replies'\n      operationId: channels_replies\n      parameters:\n        - description: Unique identifier of a thread's parent message\n          in: query\n          name: thread_ts\n          schema:\n            type: number\n        - description: 'Authentication token. Requires scope: `channels:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Channel to fetch thread from\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    has_more: false\n                    messages:\n                      - last_read: '1509484885.000082'\n                        replies:\n                          - ts: '1509484424.000601'\n                            user: U2U85N1RZ\n                          - ts: '1509484885.000082'\n                            user: U2U85N1RZ\n                        reply_count: 2\n                        subscribed: true\n                        text: This is a channel message\n                        thread_ts: '1485913694.000025'\n                        ts: '1485913694.000025'\n                        type: message\n                        unread_count: 0\n                        user: U2X9P5FEL\n                      - parent_user_id: U2X9P5FEL\n                        text: This is a thread reply\n                        thread_ts: '1485913694.000025'\n                        ts: '1509484424.000601'\n                        type: message\n                        user: U2U85N1RZ\n                      - parent_user_id: U2X9P5FEL\n                        text: This is another thread reply\n                        thread_ts: '1485913694.000025'\n                        ts: '1509484885.000082'\n                        type: message\n                        user: U2U85N1RZ\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: thread_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:history'\n      tags:\n        - channels\n  /channels.setPurpose:\n    post:\n      description: Sets the purpose for a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.setPurpose'\n      operationId: channels_setPurpose\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    purpose: My special purpose\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                purpose:\n                  description: The new purpose\n                  type: string\n                channel:\n                  description: Channel to set the purpose of\n                  type: string\n  /channels.setTopic:\n    post:\n      description: Sets the topic for a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.setTopic'\n      operationId: channels_setTopic\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    topic: To picture topicality\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                topic:\n                  description: The new topic\n                  type: string\n                channel:\n                  description: Channel to set the topic of\n                  type: string\n  /channels.unarchive:\n    post:\n      description: Unarchives a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/channels.unarchive'\n      operationId: channels_unarchive\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - channels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Channel to unarchive\n                  type: string\n  /chat.delete:\n    post:\n      description: Deletes a message.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/chat.delete'\n      operationId: chat_delete\n      parameters:\n        - description: 'Authentication token. Requires scope: `chat:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response of chat.delete method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/defs_channel'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  ts:\n                    $ref: '#/components/schemas/defs_ts'\n                required:\n                  - ok\n                  - channel\n                  - ts\n                title: chat.delete success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel: C024BE91L\n                    ok: true\n                    ts: '1401383885.000061'\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema: {}\n              examples:\n                response:\n                  value:\n                    error: message_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'chat:write:user'\n            - 'chat:write:bot'\n      tags:\n        - chat\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                as_user:\n                  description: \u003e-\n                    Pass true to delete the message as the authed user with\n                    `chat:write:user` scope. [Bot users](/bot-users) in this\n                    context are considered authed users. If unused or false, the\n                    message will be deleted with `chat:write:bot` scope.\n                  type: boolean\n                ts:\n                  description: Timestamp of the message to be deleted.\n                  type: number\n                channel:\n                  description: Channel containing the message to be deleted.\n                  type: string\n  /chat.getPermalink:\n    get:\n      description: Retrieve a permalink URL for a specific extant message\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/chat.getPermalink'\n      operationId: chat_getPermalink\n      parameters:\n        - description: 'Authentication token. Requires scope: `none`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: 'A message''s `ts` value, uniquely identifying it within a channel'\n          in: query\n          name: message_ts\n          schema:\n            type: number\n        - description: The ID of the conversation or channel containing the message\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response chat.getPermalink\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/defs_channel'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  permalink:\n                    type: string\n                required:\n                  - ok\n                  - channel\n                  - permalink\n                title: chat.getPermalink success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel: C1H9RESGA\n                    ok: true\n                    permalink: \u003e-\n                      https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008\n        default:\n          description: Error response when channel cannot be found\n          content:\n            application/json:\n              schema: {}\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - chat\n  /chat.meMessage:\n    post:\n      description: Share a me message into a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/chat.meMessage'\n      operationId: chat_meMessage\n      parameters:\n        - description: 'Authentication token. Requires scope: `chat:write:user`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    channel: C024BE7LR\n                    ok: true\n                    ts: '1417671948.000006'\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'chat:write:user'\n      tags:\n        - chat\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                text:\n                  description: Text of the message to send.\n                  type: string\n                channel:\n                  description: \u003e-\n                    Channel to send message to. Can be a public channel, private\n                    group or IM channel. Can be an encoded ID, or a name.\n                  type: string\n  /chat.postEphemeral:\n    post:\n      description: Sends an ephemeral message to a user in a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/chat.postEphemeral'\n      operationId: chat_postEphemeral\n      parameters:\n        - description: 'Authentication token. Requires scope: `chat:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response of chat.postEphemeral method\n                properties:\n                  message_ts:\n                    $ref: '#/components/schemas/defs_ts'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - message_ts\n                title: chat.postEphemeral success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    message_ts: '1502210682.580145'\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema: {}\n              examples:\n                response:\n                  value:\n                    error: user_not_in_channel\n                    ok: false\n      security:\n        - slackAuth:\n            - 'chat:write:user'\n            - 'chat:write:bot'\n      tags:\n        - chat\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                attachments:\n                  description: \u003e-\n                    A JSON-based array of structured attachments, presented as a\n                    URL-encoded string.\n                  type: string\n                text:\n                  description: \u003e-\n                    Text of the message to send. See below for an explanation of\n                    [formatting](#formatting). This field is usually required,\n                    unless you're providing only `attachments` instead.\n                  type: string\n                link_names:\n                  description: Find and link channel names and usernames.\n                  type: boolean\n                parse:\n                  description: \u003e-\n                    Change how messages are treated. Defaults to `none`. See\n                    [below](#formatting).\n                  type: string\n                user:\n                  description: \u003e-\n                    `id` of the user who will receive the ephemeral message. The\n                    user should be in the channel specified by the `channel`\n                    argument.\n                  type: string\n                as_user:\n                  description: \u003e-\n                    Pass true to post the message as the authed bot. Defaults to\n                    false.\n                  type: boolean\n                channel:\n                  description: \u003e-\n                    Channel, private group, or IM channel to send message to.\n                    Can be an encoded ID, or a name.\n                  type: string\n  /chat.postMessage:\n    post:\n      description: Sends a message to a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/chat.postMessage'\n      operationId: chat_postMessage\n      parameters:\n        - description: 'Authentication token. Requires scope: `chat:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response of chat.postMessage method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/defs_channel'\n                  message:\n                    $ref: '#/components/schemas/objs_message'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  ts:\n                    $ref: '#/components/schemas/defs_ts'\n                required:\n                  - ok\n                  - channel\n                  - ts\n                  - message\n                title: chat.postMessage success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel: C1H9RESGL\n                    message:\n                      attachments:\n                        - fallback: This is an attachment's fallback\n                          id: 1\n                          text: This is an attachment\n                      bot_id: B19LU7CSY\n                      subtype: bot_message\n                      text: Here's a message for you\n                      ts: '1503435956.000247'\n                      type: message\n                      username: ecto1\n                    ok: true\n                    ts: '1503435956.000247'\n        default:\n          description: Typical error response if too many attachments are included\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response chat.postMessage method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - not_in_channel\n                      - is_archived\n                      - msg_too_long\n                      - no_text\n                      - too_many_attachments\n                      - rate_limited\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: chat.postMessage error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: too_many_attachments\n                    ok: false\n      security:\n        - slackAuth:\n            - 'chat:write:user'\n            - 'chat:write:bot'\n      tags:\n        - chat\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                username:\n                  description: \u003e-\n                    Set your bot's user name. Must be used in conjunction with\n                    `as_user` set to false, otherwise ignored. See\n                    [authorship](#authorship) below.\n                  type: string\n                thread_ts:\n                  description: \u003e-\n                    Provide another message's `ts` value to make this message a\n                    reply. Avoid using a reply's `ts` value; use its parent\n                    instead.\n                  type: number\n                attachments:\n                  description: \u003e-\n                    A JSON-based array of structured attachments, presented as a\n                    URL-encoded string.\n                  type: string\n                unfurl_links:\n                  description: \u003e-\n                    Pass true to enable unfurling of primarily text-based\n                    content.\n                  type: boolean\n                text:\n                  description: \u003e-\n                    Text of the message to send. See below for an explanation of\n                    [formatting](#formatting). This field is usually required,\n                    unless you're providing only `attachments` instead.\n                  type: string\n                unfurl_media:\n                  description: Pass false to disable unfurling of media content.\n                  type: boolean\n                parse:\n                  description: \u003e-\n                    Change how messages are treated. Defaults to `none`. See\n                    [below](#formatting).\n                  type: string\n                as_user:\n                  description: \u003e-\n                    Pass true to post the message as the authed user, instead of\n                    as a bot. Defaults to false. See [authorship](#authorship)\n                    below.\n                  type: boolean\n                mrkdwn:\n                  description: \u003e-\n                    Disable Slack markup parsing by setting to `false`. Enabled\n                    by default.\n                  type: boolean\n                icon_emoji:\n                  description: \u003e-\n                    Emoji to use as the icon for this message. Overrides\n                    `icon_url`. Must be used in conjunction with `as_user` set\n                    to `false`, otherwise ignored. See [authorship](#authorship)\n                    below.\n                  type: string\n                link_names:\n                  description: Find and link channel names and usernames.\n                  type: boolean\n                icon_url:\n                  description: \u003e-\n                    URL to an image to use as the icon for this message. Must be\n                    used in conjunction with `as_user` set to false, otherwise\n                    ignored. See [authorship](#authorship) below.\n                  type: string\n                channel:\n                  description: \u003e-\n                    Channel, private group, or IM channel to send message to.\n                    Can be an encoded ID, or a name. See [below](#channels) for\n                    more details.\n                  type: string\n                reply_broadcast:\n                  description: \u003e-\n                    Used in conjunction with `thread_ts` and indicates whether\n                    reply should be made visible to everyone in the channel or\n                    conversation. Defaults to `false`.\n                  type: boolean\n  /chat.unfurl:\n    post:\n      description: Provide custom unfurl behavior for user-posted URLs\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/chat.unfurl'\n      operationId: chat_unfurl\n      parameters:\n        - description: 'Authentication token. Requires scope: `links:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Typical, minimal success response'\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response of chat.unfurl method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: chat.unfurl success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema: {}\n              examples:\n                response:\n                  value:\n                    error: cannot_unfurl_url\n                    ok: false\n      security:\n        - slackAuth:\n            - 'links:write'\n      tags:\n        - chat\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                user_auth_message:\n                  description: \u003e-\n                    Provide a simply-formatted string to send as an ephemeral\n                    message to the user as invitation to authenticate further\n                    and enable full unfurling behavior\n                  type: string\n                user_auth_required:\n                  description: \u003e-\n                    Set to `true` or `1` to indicate the user must install your\n                    Slack app to trigger unfurls for this domain\n                  type: boolean\n                unfurls:\n                  description: \u003e-\n                    URL-encoded JSON map with keys set to URLs featured in the\n                    the message, pointing to their unfurl message attachments.\n                  type: string\n                ts:\n                  description: Timestamp of the message to add unfurl behavior to.\n                  type: string\n                user_auth_url:\n                  description: \u003e-\n                    Send users to this custom URL where they will complete\n                    authentication in your app to fully trigger unfurling. Value\n                    should be properly URL-encoded.\n                  type: string\n                channel:\n                  description: Channel ID of the message\n                  type: string\n  /chat.update:\n    post:\n      description: Updates a message.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/chat.update'\n      operationId: chat_update\n      parameters:\n        - description: 'Authentication token. Requires scope: `chat:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response of chat.update method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/defs_channel'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  text:\n                    title: Updated message text\n                    type: string\n                  ts:\n                    $ref: '#/components/schemas/defs_ts'\n                required:\n                  - ok\n                  - channel\n                  - ts\n                  - text\n                title: chat.update success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel: C024BE91L\n                    ok: true\n                    text: Updated text you carefully authored\n                    ts: '1401383885.000061'\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response chat.update method\n                properties:\n                  error:\n                    enum:\n                      - message_not_found\n                      - cant_update_message\n                      - channel_not_found\n                      - edit_window_closed\n                      - msg_too_long\n                      - too_many_attachments\n                      - rate_limited\n                      - no_text\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - request_timeout\n                      - invalid_json\n                      - json_not_object\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: chat.update error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: cant_update_message\n                    ok: false\n      security:\n        - slackAuth:\n            - 'chat:write:user'\n            - 'chat:write:bot'\n      tags:\n        - chat\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                attachments:\n                  description: \u003e-\n                    A JSON-based array of structured attachments, presented as a\n                    URL-encoded string. This field is required when not\n                    presenting `text`.\n                  type: string\n                text:\n                  description: \u003e-\n                    New text for the message, using the [default formatting\n                    rules](/docs/formatting). It's not required when presenting\n                    `attachments`.\n                  type: string\n                ts:\n                  description: Timestamp of the message to be updated.\n                  type: number\n                parse:\n                  description: \u003e-\n                    Change how messages are treated. Defaults to `client`,\n                    unlike `chat.postMessage`. See [below](#formatting).\n                  type: string\n                as_user:\n                  description: \u003e-\n                    Pass true to update the message as the authed user. [Bot\n                    users](/bot-users) in this context are considered authed\n                    users.\n                  type: boolean\n                link_names:\n                  description: \u003e-\n                    Find and link channel names and usernames. Defaults to\n                    `none`. This parameter should be used in conjunction with\n                    `parse`. To set `link_names` to `1`, specify a `parse` mode\n                    of `full`.\n                  type: boolean\n                channel:\n                  description: Channel containing the message to be updated.\n                  type: string\n  /conversations.archive:\n    post:\n      description: Archives a conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.archive'\n      operationId: conversations_archive\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response conversations.archive method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: conversations.archive success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.archive method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - not_supported\n                      - channel_not_found\n                      - already_archived\n                      - cant_archive_general\n                      - restricted_action\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.archive error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: ID of conversation to archive\n                  type: string\n  /conversations.close:\n    post:\n      description: Closes a direct message or multi-person direct message.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.close'\n      operationId: conversations_close\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response conversations.close method\n                properties:\n                  already_closed:\n                    type: boolean\n                  no_op:\n                    type: boolean\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: conversations.close success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.close method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - channel_not_found\n                      - user_does_not_own_channel\n                      - missing_scope\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.close error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Conversation to close.\n                  type: string\n  /conversations.create:\n    post:\n      description: Initiates a public or private channel-based conversation\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.create'\n      operationId: conversations_create\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            If successful, the command returns a rather stark [conversation\n            object](/types/conversation)\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response conversations.create method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_conversation'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: conversations.create success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1504554479\n                      creator: U0123456\n                      id: C0EAQDV4Z\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: false\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_shared: false\n                      last_read: 0000000000.000000\n                      name: endeavor\n                      name_normalized: endeavor\n                      pending_shared: []\n                      previous_names: []\n                      priority: 0\n                      purpose:\n                        creator: ''\n                        last_set: 0\n                        value: ''\n                      topic:\n                        creator: ''\n                        last_set: 0\n                        value: ''\n                      unlinked: 0\n                      unread_count: 0\n                      unread_count_display: 0\n                    ok: true\n        default:\n          description: Typical error response when name already in use\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.create method\n                properties:\n                  detail:\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - name_taken\n                      - restricted_action\n                      - no_channel\n                      - invalid_name_required\n                      - invalid_name_punctuation\n                      - invalid_name_maxlength\n                      - invalid_name_specials\n                      - invalid_name\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.create error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: name_taken\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Name of the public or private channel to create\n                  type: string\n                is_private:\n                  description: Create a private channel instead of a public one\n                  type: boolean\n  /conversations.history:\n    get:\n      description: Fetches a conversation's history of messages and events.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.history'\n      operationId: conversations_history\n      parameters:\n        - description: \u003e-\n            Include messages with latest or oldest timestamp in results only\n            when either timestamp is specified.\n          in: query\n          name: inclusive\n          schema:\n            type: boolean\n        - description: \u003e-\n            Paginate through collections of data by setting the `cursor`\n            parameter to a `next_cursor` attribute returned by a previous\n            request's `response_metadata`. Default value fetches the first\n            \"page\" of the collection. See [pagination](/docs/pagination) for\n            more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `conversations:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of items to return. Fewer than the requested\n            number of items may be returned, even if the end of the users list\n            hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Start of time range of messages to include in results.\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Conversation ID to fetch history for.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: End of time range of messages to include in results.\n          in: query\n          name: latest\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Typical success response containing a channel's messages\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from conversations.history\n                  method\n                properties:\n                  has_more:\n                    type: boolean\n                  messages:\n                    items:\n                      $ref: '#/components/schemas/objs_message'\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  pin_count:\n                    type: integer\n                required:\n                  - ok\n                  - messages\n                  - has_more\n                  - pin_count\n                title: conversations.history success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    has_more: true\n                    messages:\n                      - text: \u003e-\n                          I find you punny and would like to smell your nose\n                          letter\n                        ts: '1512085950.000216'\n                        type: message\n                        user: U012AB3CDE\n                      - text: 'What, you want to smell my shoes better?'\n                        ts: '1512104434.000490'\n                        type: message\n                        user: U061F7AUR\n                    ok: true\n                    pin_count: 0\n                    response_metadata:\n                      next_cursor: bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.history method\n                properties:\n                  error:\n                    enum:\n                      - missing_scope\n                      - channel_not_found\n                      - invalid_ts_latest\n                      - invalid_ts_oldest\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.history error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:history'\n            - 'groups:history'\n            - 'im:history'\n            - 'mpim:history'\n      tags:\n        - conversations\n  /conversations.info:\n    get:\n      description: Retrieve information about a conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.info'\n      operationId: conversations_info\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Conversation ID to learn more about\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: \u003e-\n            Set this to `true` to receive the locale for this conversation.\n            Defaults to `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: \u003e-\n            Typical success response for a public channel. (Also, a response\n            from a private channel and a multi-party IM is very similar to this\n            example.)\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response conversations.info\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_conversation'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: conversations.info success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1449252889\n                      creator: W012A3BCD\n                      id: C012AB3CD\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: true\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_read_only: false\n                      is_shared: false\n                      last_read: '1502126650.228446'\n                      locale: en-US\n                      name: general\n                      name_normalized: general\n                      num_members: 23\n                      pending_shared: []\n                      previous_names:\n                        - specifics\n                        - abstractions\n                        - etc\n                      purpose:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: This part of the workspace is for fun. Make fun here.\n                      topic:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: For public discussion of generalities\n                      unlinked: 0\n                    ok: true\n        default:\n          description: Typical error response when a channel cannot be found\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.info method\n                properties:\n                  error:\n                    enum:\n                      - missing_scope\n                      - channel_not_found\n                      - team_added_to_org\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.info error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:read'\n            - 'groups:read'\n            - 'im:read'\n            - 'mpim:read'\n      tags:\n        - conversations\n  /conversations.invite:\n    post:\n      description: Invites users to a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.invite'\n      operationId: conversations_invite\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response when an invitation is extended\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from conversations.invite\n                  method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_conversation'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: conversations.invite error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1449252889\n                      creator: W012A3BCD\n                      id: C012AB3CD\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: true\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_read_only: false\n                      is_shared: false\n                      last_read: '1502126650.228446'\n                      locale: en-US\n                      name: general\n                      name_normalized: general\n                      num_members: 23\n                      pending_shared: []\n                      previous_names:\n                        - specifics\n                        - abstractions\n                        - etc\n                      purpose:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: This part of the workspace is for fun. Make fun here.\n                      topic:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: For public discussion of generalities\n                      unlinked: 0\n                    ok: true\n        default:\n          description: \u003e-\n            Typical error response when an invite is attempted on a conversation\n            type that does not support it\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.invite method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - user_not_found\n                      - cant_invite_self\n                      - not_in_channel\n                      - already_in_channel\n                      - is_archived\n                      - cant_invite\n                      - too_many_users\n                      - ura_max_channels\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  errors:\n                    items:\n                      additionalProperties: true\n                      properties:\n                        error:\n                          enum:\n                            - method_not_supported_for_channel_type\n                            - missing_scope\n                            - channel_not_found\n                            - user_not_found\n                            - cant_invite_self\n                            - not_in_channel\n                            - already_in_channel\n                            - is_archived\n                            - cant_invite\n                            - too_many_users\n                            - ura_max_channels\n                            - not_authed\n                            - invalid_auth\n                            - account_inactive\n                            - user_is_bot\n                            - user_is_restricted\n                            - user_is_ultra_restricted\n                            - invalid_arg_name\n                            - invalid_array_arg\n                            - invalid_charset\n                            - invalid_form_data\n                            - invalid_post_type\n                            - missing_post_type\n                            - invalid_json\n                            - json_not_object\n                            - request_timeout\n                            - upgrade_required\n                            - team_added_to_org\n                            - missing_charset\n                            - superfluous_charset\n                          type: string\n                        ok:\n                          $ref: '#/components/schemas/defs_ok_false'\n                        user:\n                          $ref: '#/components/schemas/defs_user_id'\n                      required:\n                        - ok\n                        - error\n                      type: object\n                    minItems: 1\n                    title: errors is returned when an error associates an user\n                    type: array\n                    uniqueItems: true\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                title: conversations.invite error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: method_not_supported_for_channel_type\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                users:\n                  description: \u003e-\n                    A comma separated list of user IDs. Up to 30 users may be\n                    listed.\n                  type: string\n                channel:\n                  description: \u003e-\n                    The ID of the public or private channel to invite user(s)\n                    to.\n                  type: string\n  /conversations.join:\n    post:\n      description: Joins an existing conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.join'\n      operationId: conversations_join\n      parameters:\n        - description: 'Authentication token. Requires scope: `channels:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from conversations.join method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_conversation'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  response_metadata:\n                    properties:\n                      warnings:\n                        items:\n                          type: string\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                    title: Response metadata\n                    type: object\n                  warning:\n                    type: string\n                required:\n                  - ok\n                  - channel\n                title: conversations.join success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1449252889\n                      creator: U061F7AUR\n                      id: C061EG9SL\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: true\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_shared: false\n                      name: general\n                      name_normalized: general\n                      pending_shared: []\n                      previous_names: []\n                      purpose:\n                        creator: ''\n                        last_set: 0\n                        value: For widget discussion\n                      topic:\n                        creator: ''\n                        last_set: 0\n                        value: Which widget do you worry about?\n                      unlinked: 0\n                    ok: true\n                    response_metadata:\n                      warnings:\n                        - already_in_channel\n                    warning: already_in_channel\n        default:\n          description: \u003e-\n            Typical error response if the conversation is archived and cannot be\n            joined\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.join method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - is_archived\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.join error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: is_archived\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: ID of conversation to join\n                  type: string\n  /conversations.kick:\n    post:\n      description: Removes a user from a conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.kick'\n      operationId: conversations_kick\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response conversations.kick method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: conversations.kick success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: \u003e-\n            Typical error response when you attempt to kick yourself from a\n            channel\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response conversations.kick method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - user_not_found\n                      - cant_kick_self\n                      - not_in_channel\n                      - cant_kick_from_general\n                      - restricted_action\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.kick error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: cant_kick_self\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                user:\n                  description: User ID to be removed.\n                  type: string\n                channel:\n                  description: ID of conversation to remove user from.\n                  type: string\n  /conversations.leave:\n    post:\n      description: Leaves a conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.leave'\n      operationId: conversations_leave\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from conversations.leave method\n                properties:\n                  not_in_channel:\n                    enum:\n                      - true\n                    type: boolean\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: conversations.leave success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: \u003e-\n            Typical error response when attempting to leave a workspace's\n            \"general\" channel\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.leave method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - last_member\n                      - missing_scope\n                      - channel_not_found\n                      - is_archived\n                      - cant_leave_general\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.leave error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: cant_leave_general\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Conversation to leave\n                  type: string\n  /conversations.list:\n    get:\n      description: Lists all channels in a Slack team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.list'\n      operationId: conversations_list\n      parameters:\n        - description: \u003e-\n            Paginate through collections of data by setting the `cursor`\n            parameter to a `next_cursor` attribute returned by a previous\n            request's `response_metadata`. Default value fetches the first\n            \"page\" of the collection. See [pagination](/docs/pagination) for\n            more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `conversations:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of items to return. Fewer than the requested\n            number of items may be returned, even if the end of the list hasn't\n            been reached. Must be an integer no larger than 1000.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set to `true` to exclude archived channels from the list\n          in: query\n          name: exclude_archived\n          schema:\n            type: boolean\n        - description: \u003e-\n            Mix and match channel types by providing a comma-separated list of\n            any combination of `public_channel`, `private_channel`, `mpim`, `im`\n          in: query\n          name: types\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response with only public channels\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from conversations.list method\n                properties:\n                  channels:\n                    items:\n                      $ref: '#/components/schemas/objs_conversation'\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  response_metadata:\n                    additionalProperties: true\n                    properties:\n                      next_cursor:\n                        type: string\n                    required:\n                      - next_cursor\n                    type: object\n                required:\n                  - ok\n                  - channels\n                title: conversations.list success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channels:\n                      - created: 1449252889\n                        creator: U012A3CDE\n                        id: C012AB3CD\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: true\n                        is_group: false\n                        is_im: false\n                        is_member: true\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: general\n                        name_normalized: general\n                        num_members: 4\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: ''\n                          last_set: 0\n                          value: \u003e-\n                            This channel is for team-wide communication and\n                            announcements. All team members are in this channel.\n                        topic:\n                          creator: ''\n                          last_set: 0\n                          value: Company-wide announcements and work-based matters\n                        unlinked: 0\n                      - created: 1449252889\n                        creator: U061F7AUR\n                        id: C061EG9T2\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: false\n                        is_group: false\n                        is_im: false\n                        is_member: true\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: random\n                        name_normalized: random\n                        num_members: 4\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: ''\n                          last_set: 0\n                          value: \u003e-\n                            A place for non-work-related flimflam, faffing,\n                            hodge-podge or jibber-jabber you'd prefer to keep\n                            out of more focused work-related channels.\n                        topic:\n                          creator: ''\n                          last_set: 0\n                          value: Non-work banter and water cooler conversation\n                        unlinked: 0\n                    ok: true\n                    response_metadata:\n                      next_cursor: dGVhbTpDMDYxRkE1UEI=\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.list method\n                properties:\n                  error:\n                    enum:\n                      - missing_scope\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.list error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:read'\n            - 'groups:read'\n            - 'im:read'\n            - 'mpim:read'\n      tags:\n        - conversations\n  /conversations.members:\n    get:\n      description: Retrieve members of a conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.members'\n      operationId: conversations_members\n      parameters:\n        - description: \u003e-\n            Paginate through collections of data by setting the `cursor`\n            parameter to a `next_cursor` attribute returned by a previous\n            request's `response_metadata`. Default value fetches the first\n            \"page\" of the collection. See [pagination](/docs/pagination) for\n            more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `conversations:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of items to return. Fewer than the requested\n            number of items may be returned, even if the end of the users list\n            hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: ID of the conversation to retrieve members for\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical paginated success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response conversations.members method\n                properties:\n                  members:\n                    items:\n                      $ref: '#/components/schemas/defs_user_id'\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  response_metadata:\n                    additionalProperties: true\n                    properties:\n                      next_cursor:\n                        type: string\n                    required:\n                      - next_cursor\n                    type: object\n                required:\n                  - ok\n                  - members\n                  - response_metadata\n                title: conversations.members success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    members:\n                      - U023BECGF\n                      - U061F7AUR\n                      - W012A3CDE\n                    ok: true\n                    response_metadata:\n                      next_cursor: e3VzZXJfaWQ6IFcxMjM0NTY3fQ==\n        default:\n          description: Typical error response when an invalid cursor is provided\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response conversations.members method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - invalid_limit\n                      - invalid_cursor\n                      - fetch_members_failed\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: conversations.members error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_cursor\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:read'\n            - 'groups:read'\n            - 'im:read'\n            - 'mpim:read'\n      tags:\n        - conversations\n  /conversations.open:\n    post:\n      description: Opens or resumes a direct message or multi-person direct message.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.open'\n      operationId: conversations_open\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from conversations.open method\n                  when opening channels, ims, mpims\n                properties:\n                  already_open:\n                    type: boolean\n                  channel:\n                    $ref: '#/components/schemas/objs_conversation'\n                  no_op:\n                    type: boolean\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: conversations.open success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      id: D069C7QFK\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.open method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - user_not_found\n                      - user_not_visible\n                      - user_disabled\n                      - users_list_not_supplied\n                      - not_enough_users\n                      - too_many_users\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - channel_not_found\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: conversations.open error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                return_im:\n                  description: \u003e-\n                    Boolean, indicates you want the full IM channel definition\n                    in the response.\n                  type: boolean\n                users:\n                  description: \u003e-\n                    Comma separated lists of users. If only one user is\n                    included, this creates a 1:1 DM.  The ordering of the users\n                    is preserved whenever a multi-person direct message is\n                    returned. Supply a `channel` when not supplying `users`.\n                  type: string\n                channel:\n                  description: \u003e-\n                    Resume a conversation by supplying an `im` or `mpim`'s ID.\n                    Or provide the `users` field instead.\n                  type: string\n  /conversations.rename:\n    post:\n      description: Renames a conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.rename'\n      operationId: conversations_rename\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from conversations.rename\n                  method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_conversation'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: conversations.rename success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1449252889\n                      creator: W012A3BCD\n                      id: C012AB3CD\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: true\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_read_only: false\n                      is_shared: false\n                      last_read: '1502126650.228446'\n                      locale: en-US\n                      name: general\n                      name_normalized: general\n                      num_members: 23\n                      pending_shared: []\n                      previous_names:\n                        - specifics\n                        - abstractions\n                        - etc\n                      purpose:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: This part of the workspace is for fun. Make fun here.\n                      topic:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: For public discussion of generalities\n                      unlinked: 0\n                    ok: true\n        default:\n          description: \u003e-\n            Typical error response when the calling user is not a member of the\n            conversation\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.rename method\n                properties:\n                  error:\n                    enum:\n                      - user_is_restricted\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - not_in_channel\n                      - not_authorized\n                      - invalid_name\n                      - name_taken\n                      - invalid_name_required\n                      - invalid_name_punctuation\n                      - invalid_name_maxlength\n                      - invalid_name_specials\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.rename error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: not_in_channel\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: New name for conversation.\n                  type: string\n                channel:\n                  description: ID of conversation to rename\n                  type: string\n  /conversations.replies:\n    get:\n      description: Retrieve a thread of messages posted to a conversation\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.replies'\n      operationId: conversations_replies\n      parameters:\n        - description: \u003e-\n            Include messages with latest or oldest timestamp in results only\n            when either timestamp is specified.\n          in: query\n          name: inclusive\n          schema:\n            type: boolean\n        - description: Unique identifier of a thread's parent message.\n          in: query\n          name: ts\n          schema:\n            type: number\n        - description: \u003e-\n            Paginate through collections of data by setting the `cursor`\n            parameter to a `next_cursor` attribute returned by a previous\n            request's `response_metadata`. Default value fetches the first\n            \"page\" of the collection. See [pagination](/docs/pagination) for\n            more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `conversations:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of items to return. Fewer than the requested\n            number of items may be returned, even if the end of the users list\n            hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Start of time range of messages to include in results.\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Conversation ID to fetch thread from.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: End of time range of messages to include in results.\n          in: query\n          name: latest\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from conversations.replies\n                  method\n                properties:\n                  has_more:\n                    type: boolean\n                  messages:\n                    items:\n                      items:\n                        anyOf:\n                          - additionalProperties: true\n                            properties:\n                              last_read:\n                                $ref: '#/components/schemas/defs_ts'\n                              replies:\n                                items:\n                                  additionalProperties: true\n                                  properties:\n                                    ts:\n                                      $ref: '#/components/schemas/defs_ts'\n                                    user:\n                                      $ref: '#/components/schemas/defs_user_id'\n                                  required:\n                                    - user\n                                    - ts\n                                  type: object\n                                type: array\n                              reply_count:\n                                type: integer\n                              source_team:\n                                $ref: '#/components/schemas/defs_team'\n                              subscribed:\n                                type: boolean\n                              team:\n                                $ref: '#/components/schemas/defs_team'\n                              text:\n                                type: string\n                              thread_ts:\n                                $ref: '#/components/schemas/defs_ts'\n                              ts:\n                                $ref: '#/components/schemas/defs_ts'\n                              type:\n                                type: string\n                              unread_count:\n                                type: integer\n                              user:\n                                $ref: '#/components/schemas/defs_user_id'\n                              user_profile:\n                                $ref: '#/components/schemas/objs_user_profile_short'\n                              user_team:\n                                $ref: '#/components/schemas/defs_team'\n                            required:\n                              - type\n                              - user\n                              - text\n                              - thread_ts\n                              - reply_count\n                              - replies\n                              - subscribed\n                              - ts\n                            type: object\n                          - additionalProperties: true\n                            properties:\n                              is_starred:\n                                type: boolean\n                              parent_user_id:\n                                $ref: '#/components/schemas/defs_user_id'\n                              source_team:\n                                $ref: '#/components/schemas/defs_team'\n                              team:\n                                $ref: '#/components/schemas/defs_team'\n                              text:\n                                type: string\n                              thread_ts:\n                                $ref: '#/components/schemas/defs_ts'\n                              ts:\n                                $ref: '#/components/schemas/defs_ts'\n                              type:\n                                type: string\n                              user:\n                                $ref: '#/components/schemas/defs_user_id'\n                              user_profile:\n                                $ref: '#/components/schemas/objs_user_profile_short'\n                              user_team:\n                                $ref: '#/components/schemas/defs_team'\n                            required:\n                              - type\n                              - user\n                              - text\n                              - thread_ts\n                              - parent_user_id\n                              - ts\n                            type: object\n                    type: array\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - messages\n                title: conversations.replies success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    has_more: true\n                    messages:\n                      - last_read: '1484678597.521003'\n                        replies:\n                          - ts: '1483037603.017503'\n                            user: U061F7AUR\n                          - ts: '1483051909.018632'\n                            user: U061F7AUR\n                          - ts: '1483125339.020269'\n                            user: U061F7AUR\n                        reply_count: 3\n                        subscribed: true\n                        text: island\n                        thread_ts: '1482960137.003543'\n                        ts: '1482960137.003543'\n                        type: message\n                        unread_count: 0\n                        user: U061F7AUR\n                      - parent_user_id: U061F7AUR\n                        text: one island\n                        thread_ts: '1482960137.003543'\n                        ts: '1483037603.017503'\n                        type: message\n                        user: U061F7AUR\n                      - parent_user_id: U061F7AUR\n                        text: two island\n                        thread_ts: '1482960137.003543'\n                        ts: '1483051909.018632'\n                        type: message\n                        user: U061F7AUR\n                      - parent_user_id: U061F7AUR\n                        text: three for the land\n                        thread_ts: '1482960137.003543'\n                        ts: '1483125339.020269'\n                        type: message\n                        user: U061F7AUR\n                    ok: true\n                    response_metadata:\n                      next_cursor: bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.replies method\n                properties:\n                  error:\n                    enum:\n                      - missing_scope\n                      - channel_not_found\n                      - thread_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.replies error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: thread_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:history'\n            - 'groups:history'\n            - 'im:history'\n            - 'mpim:history'\n      tags:\n        - conversations\n  /conversations.setPurpose:\n    post:\n      description: Sets the purpose for a conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.setPurpose'\n      operationId: conversations_setPurpose\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from conversations.setPurpose\n                  method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_conversation'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: conversations.setPurpose success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.setPurpose method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - not_in_channel\n                      - is_archived\n                      - too_long\n                      - user_is_restricted\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.setPurpose error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                purpose:\n                  description: 'A new, specialer purpose'\n                  type: string\n                channel:\n                  description: Conversation to set the purpose of\n                  type: string\n  /conversations.setTopic:\n    post:\n      description: Sets the topic for a conversation.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.setTopic'\n      operationId: conversations_setTopic\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from conversations.setTopic\n                  method\n                properties:\n                  channel:\n                    $ref: '#/components/schemas/objs_conversation'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: conversations.setTopic success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.setTopic method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - not_in_channel\n                      - is_archived\n                      - too_long\n                      - user_is_restricted\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.setTopic error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                topic:\n                  description: \u003e-\n                    The new topic string. Does not support formatting or\n                    linkification.\n                  type: string\n                channel:\n                  description: Conversation to set the topic of\n                  type: string\n  /conversations.unarchive:\n    post:\n      description: Reverses conversation archival.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/conversations.unarchive'\n      operationId: conversations_unarchive\n      parameters:\n        - description: 'Authentication token. Requires scope: `conversations:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from conversations.unarchive\n                  method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: conversations.unarchive success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from conversations.unarchive method\n                properties:\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - not_archived\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.unarchive error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:write'\n            - 'groups:write'\n            - 'im:write'\n            - 'mpim:write'\n      tags:\n        - conversations\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: ID of conversation to unarchive\n                  type: string\n  /dialog.open:\n    get:\n      description: Open a dialog with a user\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/dialog.open'\n      operationId: dialog_open\n      parameters:\n        - description: 'Authentication token. Requires scope: `none`'\n          in: header\n          name: token\n          schema:\n            type: string\n        - description: The dialog definition. This must be a JSON-encoded string.\n          in: query\n          name: dialog\n          schema:\n            type: string\n        - description: Exchange a trigger to post to the user.\n          in: query\n          name: trigger_id\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response is quite minimal.\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: \u003e-\n            Typical error response, before getting to any possible validation\n            errors.\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: missing_trigger\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - dialog\n  /dnd.endDnd:\n    post:\n      description: Ends the current user's Do Not Disturb session immediately.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/dnd.endDnd'\n      operationId: dnd_endDnd\n      parameters:\n        - description: 'Authentication token. Requires scope: `dnd:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'dnd:write'\n      tags:\n        - dnd\n  /dnd.endSnooze:\n    post:\n      description: Ends the current user's snooze mode immediately.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/dnd.endSnooze'\n      operationId: dnd_endSnooze\n      parameters:\n        - description: 'Authentication token. Requires scope: `dnd:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'dnd:write'\n      tags:\n        - dnd\n  /dnd.info:\n    get:\n      description: Retrieves a user's current Do Not Disturb status.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/dnd.info'\n      operationId: dnd_info\n      parameters:\n        - description: 'Authentication token. Requires scope: `dnd:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: User to fetch status for (defaults to current user)\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'dnd:read'\n      tags:\n        - dnd\n  /dnd.setSnooze:\n    post:\n      description: \u003e-\n        Turns on Do Not Disturb mode for the current user, or changes its\n        duration.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/dnd.setSnooze'\n      operationId: dnd_setSnooze\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'dnd:write'\n      tags:\n        - dnd\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                num_minutes:\n                  description: 'Number of minutes, from now, to snooze until.'\n                  type: integer\n                token:\n                  description: 'Authentication token. Requires scope: `dnd:write`'\n                  type: string\n  /dnd.teamInfo:\n    get:\n      description: Retrieves the Do Not Disturb status for users on a team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/dnd.teamInfo'\n      operationId: dnd_teamInfo\n      parameters:\n        - description: 'Authentication token. Requires scope: `dnd:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Comma-separated list of users to fetch Do Not Disturb status for\n          in: query\n          name: users\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from dnd.teamInfo method\n                properties:\n                  cached:\n                    type: boolean\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  users:\n                    additionalProperties: true\n                    type: object\n                required:\n                  - ok\n                  - users\n                title: dnd.teamInfo success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    users:\n                      U023BECGF:\n                        dnd_enabled: true\n                        next_dnd_end_ts: 1450423800\n                        next_dnd_start_ts: 1450387800\n                      W058CJVAA:\n                        dnd_enabled: false\n                        next_dnd_end_ts: 1\n                        next_dnd_start_ts: 1\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from dnd.teamInfo method\n                properties:\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: dnd.teamInfo error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'dnd:read'\n      tags:\n        - dnd\n  /emoji.list:\n    get:\n      description: Lists custom emoji for a team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/emoji.list'\n      operationId: emoji_list\n      parameters:\n        - description: 'Authentication token. Requires scope: `emoji:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'emoji:read'\n      tags:\n        - emoji\n  /files.comments.add:\n    post:\n      description: Add a comment to an existing file.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.comments.add'\n      operationId: files_comments_add\n      parameters:\n        - description: 'Authentication token. Requires scope: `files:write:user`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response files.comments.add method\n                properties:\n                  comment:\n                    $ref: '#/components/schemas/objs_comment'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - comment\n                title: files.comments.add schema\n                type: object\n              examples:\n                response:\n                  value:\n                    comment:\n                      channel: C1234467890\n                      comment: Everyone should take a moment to read this file.\n                      created: 1356032811\n                      id: Fc1234567890\n                      timestamp: 1356032811\n                      user: U1234567890\n                    ok: true\n        default:\n          description: Artificial error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from files.comments.add method\n                properties:\n                  error:\n                    enum:\n                      - file_not_found\n                      - file_deleted\n                      - no_comment\n                      - cant_add\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: files.comments.add error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: file_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:write:user'\n      tags:\n        - files.comments\n        - files\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                comment:\n                  description: Text of the comment to add.\n                  type: string\n                file:\n                  description: File to add a comment to.\n                  type: string\n  /files.comments.delete:\n    post:\n      description: Deletes an existing comment on a file.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.comments.delete'\n      operationId: files_comments_delete\n      parameters:\n        - description: 'Authentication token. Requires scope: `files:write:user`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response is very simple\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response files.comments.delete method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: files.comments.delete schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Standard failure response when used with an invalid token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response files.comments.delete method\n                properties:\n                  error:\n                    enum:\n                      - cant_delete\n                      - comment_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: files.comments.delete error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: file_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:write:user'\n      tags:\n        - files.comments\n        - files\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                id:\n                  description: The comment to delete.\n                  type: string\n                file:\n                  description: File to delete a comment from.\n                  type: string\n  /files.comments.edit:\n    post:\n      description: Edit an existing file comment.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.comments.edit'\n      operationId: files_comments_edit\n      parameters:\n        - description: 'Authentication token. Requires scope: `files:write:user`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response when used with a user token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response files.comments.edit method\n                properties:\n                  comment:\n                    $ref: '#/components/schemas/objs_comment'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - comment\n                title: files.comments.edit schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    team: Subarachnoid Workspace\n                    team_id: T12345678\n                    url: 'https://subarachnoid.slack.com/'\n                    user: grace\n                    user_id: W12345678\n        default:\n          description: Standard failure response when used with an invalid token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response files.comments.edit method\n                properties:\n                  error:\n                    enum:\n                      - cant_edit\n                      - comment_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: files.comments.edit error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:write:user'\n      tags:\n        - files.comments\n        - files\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                comment:\n                  description: Text of the comment to edit.\n                  type: string\n                id:\n                  description: The comment to edit.\n                  type: string\n                file:\n                  description: File containing the comment to edit.\n                  type: string\n  /files.delete:\n    post:\n      description: Deletes a file.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.delete'\n      operationId: files_delete\n      parameters:\n        - description: 'Authentication token. Requires scope: `files:write:user`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response files.delete method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: files.delete schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response files.delete method\n                properties:\n                  error:\n                    enum:\n                      - file_not_found\n                      - file_deleted\n                      - cant_delete_file\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: files.delete error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:write:user'\n      tags:\n        - files\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: ID of file to delete.\n                  type: string\n  /files.info:\n    get:\n      description: Gets information about a team file.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.info'\n      operationId: files_info\n      parameters:\n        - in: query\n          name: count\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `files:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Specify a file by providing its ID.\n          in: query\n          name: file\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from files.info method\n                properties:\n                  comments:\n                    $ref: '#/components/schemas/objs_comments'\n                  file:\n                    $ref: '#/components/schemas/objs_file'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  paging:\n                    $ref: '#/components/schemas/objs_paging'\n                required:\n                  - ok\n                  - file\n                  - comments\n                  - paging\n                title: files.info schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from files.info method\n                properties:\n                  error:\n                    enum:\n                      - file_not_found\n                      - file_deleted\n                      - timezone_count_failed\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: files.info error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:read'\n      tags:\n        - files\n  /files.list:\n    get:\n      description: Lists \u0026 filters team files.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.list'\n      operationId: files_list\n      parameters:\n        - in: query\n          name: count\n          schema:\n            type: string\n        - description: 'Filter files appearing in a specific channel, indicated by its ID.'\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: Filter files created before this timestamp (inclusive).\n          in: query\n          name: ts_to\n          schema:\n            type: number\n        - description: Filter files created after this timestamp (inclusive).\n          in: query\n          name: ts_from\n          schema:\n            type: number\n        - description: 'Authentication token. Requires scope: `files:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Filter files created by a single user.\n          in: query\n          name: user\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n        - description: \u003e-\n            Filter files by type:\n\n\n            * `all` - All files\n\n            * `spaces` - Posts\n\n            * `snippets` - Snippets\n\n            * `images` - Image files\n\n            * `gdocs` - Google docs\n\n            * `zips` - Zip files\n\n            * `pdfs` - PDF files\n\n\n            You can pass multiple values in the types argument, like\n            `types=spaces,snippets`.The default value is `all`, which does not\n            filter the list.\n          in: query\n          name: types\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from files.list method\n                properties:\n                  files:\n                    items:\n                      $ref: '#/components/schemas/objs_file'\n                    minItems: 0\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  paging:\n                    $ref: '#/components/schemas/objs_paging'\n                required:\n                  - ok\n                  - files\n                  - paging\n                title: files.list schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from files.list method\n                properties:\n                  error:\n                    enum:\n                      - user_not_found\n                      - unknown_type\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: files.list error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:read'\n      tags:\n        - files\n  /files.revokePublicURL:\n    post:\n      description: Revokes public/external sharing access for a file\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.revokePublicURL'\n      operationId: files_revokePublicURL\n      parameters:\n        - description: 'Authentication token. Requires scope: `files:write:user`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:write:user'\n      tags:\n        - files\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: File to revoke\n                  type: string\n  /files.sharedPublicURL:\n    post:\n      description: Enables a file for public/external sharing.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.sharedPublicURL'\n      operationId: files_sharedPublicURL\n      parameters:\n        - description: 'Authentication token. Requires scope: `files:write:user`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:write:user'\n      tags:\n        - files\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: File to share\n                  type: string\n  /files.upload:\n    post:\n      description: Uploads or creates a file.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/files.upload'\n      operationId: files_upload\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response files.upload method\n                properties:\n                  file:\n                    $ref: '#/components/schemas/objs_file'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - file\n                title: files.upload schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response files.upload method\n                properties:\n                  error:\n                    enum:\n                      - posting_to_general_channel_denied\n                      - invalid_channel\n                      - file_uploads_disabled\n                      - file_uploads_except_images_disabled\n                      - storage_limit_reached\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: files.upload error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'files:write:user'\n      tags:\n        - files\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channels:\n                  description: \u003e-\n                    Comma-separated list of channel names or IDs where the file\n                    will be shared.\n                  type: string\n                title:\n                  description: Title of file.\n                  type: string\n                initial_comment:\n                  description: Initial comment to add to file.\n                  type: string\n                filetype:\n                  description: 'A [file type](/types/file#file_types) identifier.'\n                  type: string\n                filename:\n                  description: Filename of file.\n                  type: string\n                content:\n                  description: \u003e-\n                    File contents via a POST variable. If omitting this\n                    parameter, you must provide a `file`.\n                  type: string\n                token:\n                  description: 'Authentication token. Requires scope: `files:write:user`'\n                  type: string\n                file:\n                  description: \u003e-\n                    File contents via `multipart/form-data`. If omitting this\n                    parameter, you must submit `content`.\n                  type: string\n  /groups.archive:\n    post:\n      description: Archives a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.archive'\n      operationId: groups_archive\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Private channel to archive\n                  type: string\n  /groups.create:\n    post:\n      description: Creates a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.create'\n      operationId: groups_create\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response groups.create method\n                properties:\n                  group:\n                    $ref: '#/components/schemas/objs_group'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - group\n                title: groups.create success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response groups.create method\n                properties:\n                  error:\n                    enum:\n                      - no_channel\n                      - restricted_action\n                      - name_taken\n                      - invalid_name_required\n                      - invalid_name_punctuation\n                      - invalid_name_maxlength\n                      - invalid_name_specials\n                      - invalid_name\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: groups.create error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                validate:\n                  description: \u003e-\n                    Whether to return errors on invalid channel name instead of\n                    modifying it to meet the specified criteria.\n                  type: boolean\n                name:\n                  description: Name of private channel to create\n                  type: string\n  /groups.createChild:\n    post:\n      description: Clones and archives a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.createChild'\n      operationId: groups_createChild\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                token:\n                  description: 'Authentication token. Requires scope: `groups:write`'\n                  type: string\n                channel:\n                  description: Private channel to clone and archive.\n                  type: string\n  /groups.history:\n    get:\n      description: Fetches history of messages and events from a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.history'\n      operationId: groups_history\n      parameters:\n        - description: 'Number of messages to return, between 1 and 1000.'\n          in: query\n          name: count\n          schema:\n            type: integer\n        - description: Include `unread_count_display` in the output?\n          in: query\n          name: unreads\n          schema:\n            type: boolean\n        - description: Include messages with latest or oldest timestamp in results.\n          in: query\n          name: inclusive\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `groups:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Start of time range of messages to include in results.\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Private channel to fetch history for.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: End of time range of messages to include in results.\n          in: query\n          name: latest\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response groups.history method\n                properties:\n                  has_more:\n                    type: boolean\n                  messages:\n                    items:\n                      $ref: '#/components/schemas/objs_message'\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - messages\n                  - has_more\n                title: groups.history success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    has_more: false\n                    latest: '1358547726.000003'\n                    messages:\n                      - text: Hello\n                        ts: '1358546515.000008'\n                        type: message\n                        user: U2147483896\n                      - is_starred: true\n                        text: World\n                        ts: '1358546515.000007'\n                        type: message\n                        user: U2147483896\n                      - ts: '1358546515.000007'\n                        type: something_else\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response groups.history method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - invalid_ts_latest\n                      - invalid_ts_oldest\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: groups.history error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:history'\n      tags:\n        - groups\n  /groups.info:\n    get:\n      description: Gets information about a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.info'\n      operationId: groups_info\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            Set this to `true` to receive the locale for this group. Defaults to\n            `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n        - description: Private channel to get info on\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response groups.info method\n                properties:\n                  group:\n                    $ref: '#/components/schemas/objs_group'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - group\n                title: groups.info success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response groups.info method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: groups.info error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:read'\n      tags:\n        - groups\n  /groups.invite:\n    post:\n      description: Invites a user to a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.invite'\n      operationId: groups_invite\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response groups.invite method\n                properties:\n                  group:\n                    $ref: '#/components/schemas/objs_group'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - group\n                title: groups.invite success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response groups.invite method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - user_not_found\n                      - cant_invite_self\n                      - is_archived\n                      - cant_invite\n                      - ura_max_channels\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: groups.invite error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                user:\n                  description: User to invite.\n                  type: string\n                channel:\n                  description: Private channel to invite user to.\n                  type: string\n  /groups.kick:\n    post:\n      description: Removes a user from a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.kick'\n      operationId: groups_kick\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                user:\n                  description: User to remove from private channel.\n                  type: string\n                channel:\n                  description: Private channel to remove user from.\n                  type: string\n  /groups.leave:\n    post:\n      description: Leaves a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.leave'\n      operationId: groups_leave\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Private channel to leave\n                  type: string\n  /groups.list:\n    get:\n      description: Lists private channels that the calling user has access to.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.list'\n      operationId: groups_list\n      parameters:\n        - description: Exclude the `members` from each `group`\n          in: query\n          name: exclude_members\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `groups:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Don't return archived private channels.\n          in: query\n          name: exclude_archived\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response groups.list method\n                properties:\n                  groups:\n                    items:\n                      $ref: '#/components/schemas/objs_group'\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - groups\n                title: groups.list success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response groups.list method\n                properties:\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: groups.list error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:read'\n      tags:\n        - groups\n  /groups.mark:\n    post:\n      description: Sets the read cursor in a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.mark'\n      operationId: groups_mark\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from groups.mark method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: groups.mark success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from groups.mark method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - invalid_timestamp\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: groups.mark error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ts:\n                  description: Timestamp of the most recently seen message.\n                  type: number\n                channel:\n                  description: Private channel to set reading cursor in.\n                  type: string\n  /groups.open:\n    post:\n      description: Opens a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.open'\n      operationId: groups_open\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Private channel to open.\n                  type: string\n  /groups.rename:\n    post:\n      description: Renames a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.rename'\n      operationId: groups_rename\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                validate:\n                  description: \u003e-\n                    Whether to return errors on invalid channel name instead of\n                    modifying it to meet the specified criteria.\n                  type: boolean\n                name:\n                  description: New name for private channel.\n                  type: string\n                channel:\n                  description: Private channel to rename\n                  type: string\n  /groups.replies:\n    get:\n      description: Retrieve a thread of messages posted to a private channel\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.replies'\n      operationId: groups_replies\n      parameters:\n        - description: Unique identifier of a thread's parent message\n          in: query\n          name: thread_ts\n          schema:\n            type: number\n        - description: 'Authentication token. Requires scope: `groups:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Private channel to fetch thread from\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    messages:\n                      - text: Hello\n                        ts: '1358546515.000008'\n                        type: message\n                        user: U2147483896\n                      - is_starred: true\n                        text: World\n                        ts: '1358546515.000007'\n                        type: message\n                        user: U2147483896\n                      - ts: '1358546515.000007'\n                        type: something_else\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:history'\n      tags:\n        - groups\n  /groups.setPurpose:\n    post:\n      description: Sets the purpose for a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.setPurpose'\n      operationId: groups_setPurpose\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                purpose:\n                  description: The new purpose\n                  type: string\n                channel:\n                  description: Private channel to set the purpose of\n                  type: string\n  /groups.setTopic:\n    post:\n      description: Sets the topic for a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.setTopic'\n      operationId: groups_setTopic\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                topic:\n                  description: The new topic\n                  type: string\n                channel:\n                  description: Private channel to set the topic of\n                  type: string\n  /groups.unarchive:\n    post:\n      description: Unarchives a private channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/groups.unarchive'\n      operationId: groups_unarchive\n      parameters:\n        - description: 'Authentication token. Requires scope: `groups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'groups:write'\n      tags:\n        - groups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Private channel to unarchive\n                  type: string\n  /im.close:\n    post:\n      description: Close a direct message channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/im.close'\n      operationId: im_close\n      parameters:\n        - description: 'Authentication token. Requires scope: `im:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'im:write'\n      tags:\n        - im\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: Direct message channel to close.\n                  type: string\n  /im.history:\n    get:\n      description: Fetches history of messages and events from direct message channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/im.history'\n      operationId: im_history\n      parameters:\n        - description: 'Number of messages to return, between 1 and 1000.'\n          in: query\n          name: count\n          schema:\n            type: integer\n        - description: Include `unread_count_display` in the output?\n          in: query\n          name: unreads\n          schema:\n            type: boolean\n        - description: Include messages with latest or oldest timestamp in results.\n          in: query\n          name: inclusive\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `im:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Start of time range of messages to include in results.\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Direct message channel to fetch history for.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: End of time range of messages to include in results.\n          in: query\n          name: latest\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from im.history method\n                properties:\n                  has_more:\n                    type: boolean\n                  messages:\n                    items:\n                      $ref: '#/components/schemas/objs_message'\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - messages\n                  - has_more\n                title: im.history success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    has_more: false\n                    latest: '1358547726.000003'\n                    messages:\n                      - text: Hello\n                        ts: '1358546515.000008'\n                        type: message\n                        user: U2147483896\n                      - is_starred: true\n                        text: World\n                        ts: '1358546515.000007'\n                        type: message\n                        user: U2147483896\n                      - ts: '1358546515.000007'\n                        type: something_else\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from im.history method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - invalid_ts_latest\n                      - invalid_ts_oldest\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: im.history error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'im:history'\n      tags:\n        - im\n  /im.list:\n    get:\n      description: Lists direct message channels for the calling user.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/im.list'\n      operationId: im_list\n      parameters:\n        - description: \u003e-\n            Paginate through collections of data by setting the `cursor`\n            parameter to a `next_cursor` attribute returned by a previous\n            request's `response_metadata`. Default value fetches the first\n            \"page\" of the collection. See [pagination](/docs/pagination) for\n            more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `im:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of items to return. Fewer than the requested\n            number of items may be returned, even if the end of the users list\n            hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response im.list method\n                properties:\n                  ims:\n                    items:\n                      $ref: '#/components/schemas/objs_im'\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - ims\n                title: im.list success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ims:\n                      - created: 1449709280\n                        id: D0G9QPY56\n                        is_im: true\n                        is_org_shared: false\n                        is_user_deleted: false\n                        user: USLACKBOT\n                      - created: 1466692204\n                        id: D1KL59A72\n                        is_im: true\n                        is_org_shared: false\n                        is_user_deleted: false\n                        user: U0G9QF9C6\n                      - created: 1449722883\n                        id: D0G9XPFH9\n                        is_im: true\n                        is_org_shared: false\n                        is_user_deleted: false\n                        user: U0G9WFXNZ\n                      - created: 1452098023\n                        id: D0HRHJSF7\n                        is_im: true\n                        is_org_shared: false\n                        is_user_deleted: false\n                        user: W0HRJL7CK\n                      - created: 1465834222\n                        id: D1GD7CHC0\n                        is_im: true\n                        is_org_shared: false\n                        is_user_deleted: true\n                        user: U1GDBDGR3\n                      - created: 1468274703\n                        id: D1QMF76M9\n                        is_im: true\n                        is_org_shared: false\n                        is_user_deleted: false\n                        user: U1QNSQB9U\n                      - created: 1502210225\n                        id: D6K48KKRN\n                        is_im: true\n                        is_org_shared: false\n                        is_user_deleted: false\n                        user: U6KR7BVFW\n                    ok: true\n                    response_metadata:\n                      next_cursor: aW1faWQ6RDBCSDk1RExI=\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from im.list method\n                properties:\n                  error:\n                    enum:\n                      - invalid_cursor\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: im.list error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'im:read'\n      tags:\n        - im\n  /im.mark:\n    post:\n      description: Sets the read cursor in a direct message channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/im.mark'\n      operationId: im_mark\n      parameters:\n        - description: 'Authentication token. Requires scope: `im:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response im.mark method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: im.mark success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response im.mark method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - invalid_timestamp\n                      - not_in_channel\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: im.mark error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'im:write'\n      tags:\n        - im\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ts:\n                  description: Timestamp of the most recently seen message.\n                  type: number\n                channel:\n                  description: Direct message channel to set reading cursor in.\n                  type: string\n  /im.open:\n    post:\n      description: Opens a direct message channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/im.open'\n      operationId: im_open\n      parameters:\n        - description: 'Authentication token. Requires scope: `im:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from im.open method\n                properties:\n                  already_open:\n                    type: boolean\n                  channel:\n                    additionalProperties: true\n                    properties:\n                      created:\n                        type: string\n                      id:\n                        $ref: '#/components/schemas/defs_dm_id'\n                      is_im:\n                        type: boolean\n                      is_open:\n                        type: boolean\n                      last_read:\n                        $ref: '#/components/schemas/defs_ts'\n                      latest:\n                        $ref: '#/components/schemas/objs_message'\n                      unread_count:\n                        type: number\n                      unread_count_display:\n                        type: number\n                      user:\n                        $ref: '#/components/schemas/defs_user_id'\n                    required:\n                      - id\n                    type: object\n                  no_op:\n                    type: boolean\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - channel\n                title: im.open success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      id: D947RLWRX\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from im.open method\n                properties:\n                  error:\n                    enum:\n                      - user_not_found\n                      - user_not_visible\n                      - user_disabled\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: im.open error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'im:write'\n      tags:\n        - im\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                return_im:\n                  description: \u003e-\n                    Boolean, indicates you want the full IM channel definition\n                    in the response.\n                  type: boolean\n                user:\n                  description: User to open a direct message channel with.\n                  type: string\n                include_locale:\n                  description: \u003e-\n                    Set this to `true` to receive the locale for this im.\n                    Defaults to `false`\n                  type: boolean\n  /im.replies:\n    get:\n      description: Retrieve a thread of messages posted to a direct message conversation\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/im.replies'\n      operationId: im_replies\n      parameters:\n        - description: Unique identifier of a thread's parent message\n          in: query\n          name: thread_ts\n          schema:\n            type: number\n        - description: 'Authentication token. Requires scope: `im:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Direct message channel to fetch thread from\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    messages:\n                      - text: Hello\n                        ts: '1358546515.000008'\n                        type: message\n                        user: U2147483896\n                      - is_starred: true\n                        text: World\n                        ts: '1358546515.000007'\n                        type: message\n                        user: U2147483896\n                      - ts: '1358546515.000007'\n                        type: something_else\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'im:history'\n      tags:\n        - im\n  /migration.exchange:\n    get:\n      description: 'For Enterprise Grid workspaces, map local user IDs to global user IDs'\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/migration.exchange'\n      operationId: migration_exchange\n      parameters:\n        - description: 'Authentication token. Requires scope: `tokens.basic`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            Specify `true` to convert `W` global user IDs to workspace-specific\n            `U` IDs. Defaults to `false`.\n          in: query\n          name: to_old\n          schema:\n            type: boolean\n        - description: 'A comma-separated list of user ids, up to 400 per request'\n          in: query\n          name: users\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Typical success response when mappings exist for the specified user\n            IDs\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Bulk exchange local workspace user IDs for global IDs\n                properties:\n                  enterprise_id:\n                    title: \u003e-\n                      The enterprise grid organization ID containing the\n                      workspace/team.\n                    type: string\n                  invalid_user_ids:\n                    items:\n                      type: string\n                    title: A list of User IDs that cannot be mapped or found\n                    type: array\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  team_id:\n                    title: The workspace/team ID containing the mapped users\n                    type: string\n                  user_id_map:\n                    additionalProperties: true\n                    title: A mapping of provided user IDs with mapped user IDs\n                    type: object\n                required:\n                  - ok\n                  - team_id\n                  - enterprise_id\n                title: HTTP 200 response schema for migration.exchange\n                type: object\n              examples:\n                response:\n                  value:\n                    enterprise_id: E1KQTNXE1\n                    invalid_user_ids:\n                      - U21ABZZXX\n                    ok: true\n                    team_id: T1KR7PE1W\n                    user_id_map:\n                      U06UBSUN5: W06M56XJM\n                      U06UBSVB3: W06PUUDLY\n                      U06UBSVDX: W06PUUDMW\n                      U06UEB62U: W06PTT6GH\n                      W06UAZ65Q: W06UAZ65Q\n        default:\n          description: Typical error response when there are no mappings to provide\n          content:\n            application/json:\n              schema: {}\n              examples:\n                response:\n                  value:\n                    error: not_enterprise_team\n                    ok: false\n      security:\n        - slackAuth:\n            - tokens.basic\n      tags:\n        - migration\n  /mpim.close:\n    post:\n      description: Closes a multiparty direct message channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/mpim.close'\n      operationId: mpim_close\n      parameters:\n        - description: 'Authentication token. Requires scope: `mpim:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'mpim:write'\n      tags:\n        - mpim\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                channel:\n                  description: MPIM to close.\n                  type: string\n  /mpim.history:\n    get:\n      description: Fetches history of messages and events from a multiparty direct message.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/mpim.history'\n      operationId: mpim_history\n      parameters:\n        - description: 'Number of messages to return, between 1 and 1000.'\n          in: query\n          name: count\n          schema:\n            type: integer\n        - description: Include `unread_count_display` in the output?\n          in: query\n          name: unreads\n          schema:\n            type: boolean\n        - description: Include messages with latest or oldest timestamp in results.\n          in: query\n          name: inclusive\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `mpim:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Start of time range of messages to include in results.\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Multiparty direct message to fetch history for.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: End of time range of messages to include in results.\n          in: query\n          name: latest\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    has_more: false\n                    latest: '1358547726.000003'\n                    messages:\n                      - text: Hello\n                        ts: '1358546515.000008'\n                        type: message\n                        user: U2147483896\n                      - is_starred: true\n                        text: World\n                        ts: '1358546515.000007'\n                        type: message\n                        user: U2147483896\n                      - ts: '1358546515.000007'\n                        type: something_else\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'mpim:history'\n      tags:\n        - mpim\n  /mpim.list:\n    get:\n      description: Lists multiparty direct message channels for the calling user.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/mpim.list'\n      operationId: mpim_list\n      parameters:\n        - description: 'Authentication token. Requires scope: `mpim:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'mpim:read'\n      tags:\n        - mpim\n  /mpim.mark:\n    post:\n      description: Sets the read cursor in a multiparty direct message channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/mpim.mark'\n      operationId: mpim_mark\n      parameters:\n        - description: 'Authentication token. Requires scope: `mpim:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'mpim:write'\n      tags:\n        - mpim\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ts:\n                  description: Timestamp of the most recently seen message.\n                  type: number\n                channel:\n                  description: multiparty direct message channel to set reading cursor in.\n                  type: string\n  /mpim.open:\n    post:\n      description: This method opens a multiparty direct message.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/mpim.open'\n      operationId: mpim_open\n      parameters:\n        - description: 'Authentication token. Requires scope: `mpim:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from mpim.open method\n                properties:\n                  group:\n                    $ref: '#/components/schemas/objs_group'\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - group\n                title: mpim.open success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channel:\n                      id: D024BFF1M\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from mpim.open method\n                properties:\n                  error:\n                    enum:\n                      - users_list_not_supplied\n                      - not_enough_users\n                      - too_many_users\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: mpim.open error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'mpim:write'\n      tags:\n        - mpim\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                users:\n                  description: \u003e-\n                    Comma separated lists of users.  The ordering of the users\n                    is preserved whenever a MPIM group is returned.\n                  type: string\n  /mpim.replies:\n    get:\n      description: \u003e-\n        Retrieve a thread of messages posted to a direct message conversation\n        from a multiparty direct message.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/mpim.replies'\n      operationId: mpim_replies\n      parameters:\n        - description: Unique identifier of a thread's parent message.\n          in: query\n          name: thread_ts\n          schema:\n            type: number\n        - description: 'Authentication token. Requires scope: `mpim:history`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Multiparty direct message channel to fetch thread from.\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    messages:\n                      - text: Hello\n                        ts: '1358546515.000008'\n                        type: message\n                        user: U2147483896\n                      - is_starred: true\n                        text: World\n                        ts: '1358546515.000007'\n                        type: message\n                        user: U2147483896\n                      - ts: '1358546515.000007'\n                        type: something_else\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'mpim:history'\n      tags:\n        - mpim\n  /oauth.access:\n    get:\n      description: Exchanges a temporary OAuth code for an API token.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/oauth.access'\n      operationId: oauth_access\n      parameters:\n        - description: Issued when you created your application.\n          in: query\n          name: client_secret\n          schema:\n            type: string\n        - description: The `code` param returned via the OAuth callback.\n          in: query\n          name: code\n          schema:\n            type: string\n        - description: Issued when you created your application.\n          in: query\n          name: client_id\n          schema:\n            type: string\n        - description: This must match the originally submitted URI (if one was sent).\n          in: query\n          name: redirect_uri\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - oauth\n  /oauth.token:\n    get:\n      description: Exchanges a temporary OAuth verifier code for a workspace token.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/oauth.token'\n      operationId: oauth_token\n      parameters:\n        - description: Issued when you created your application.\n          in: query\n          name: client_secret\n          schema:\n            type: string\n        - description: The `code` param returned via the OAuth callback.\n          in: query\n          name: code\n          schema:\n            type: string\n        - description: Request the user to add your app only to a single channel.\n          in: query\n          name: single_channel\n          schema:\n            type: boolean\n        - description: Issued when you created your application.\n          in: query\n          name: client_id\n          schema:\n            type: string\n        - description: This must match the originally submitted URI (if one was sent).\n          in: query\n          name: redirect_uri\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - oauth\n  /pins.add:\n    post:\n      description: Pins an item to a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/pins.add'\n      operationId: pins_add\n      parameters:\n        - description: 'Authentication token. Requires scope: `pins:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from pins.add method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: pins.add schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from pins.add method\n                properties:\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - file_not_found\n                      - file_comment_not_found\n                      - message_not_found\n                      - channel_not_found\n                      - no_item_specified\n                      - already_pinned\n                      - permission_denied\n                      - file_not_shared\n                      - not_pinnable\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: pins.add error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'pins:write'\n      tags:\n        - pins\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                file_comment:\n                  description: File comment to pin.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to pin.\n                  type: number\n                file:\n                  description: File to pin.\n                  type: string\n                channel:\n                  description: Channel to pin the item in.\n                  type: string\n  /pins.list:\n    get:\n      description: Lists items pinned to a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/pins.list'\n      operationId: pins_list\n      parameters:\n        - description: 'Authentication token. Requires scope: `pins:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Channel to get pinned items for.\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                description: Schema for successful response from pins.list method\n                items:\n                  anyOf:\n                    - additionalProperties: true\n                      properties:\n                        items:\n                          items:\n                            anyOf:\n                              - additionalProperties: true\n                                properties:\n                                  comment:\n                                    $ref: '#/components/schemas/objs_comment'\n                                  created:\n                                    type: integer\n                                  created_by:\n                                    $ref: '#/components/schemas/defs_user_id'\n                                  file:\n                                    $ref: '#/components/schemas/objs_file'\n                                  type:\n                                    enum:\n                                      - file_comment\n                                    type: string\n                                title: File Comment Pin\n                                type: object\n                              - additionalProperties: true\n                                properties:\n                                  created:\n                                    type: integer\n                                  created_by:\n                                    $ref: '#/components/schemas/defs_user_id'\n                                  file:\n                                    $ref: '#/components/schemas/objs_file'\n                                  type:\n                                    enum:\n                                      - file\n                                    type: string\n                                title: File Pin\n                                type: object\n                              - additionalProperties: true\n                                properties:\n                                  channel:\n                                    $ref: '#/components/schemas/defs_channel'\n                                  created:\n                                    type: integer\n                                  created_by:\n                                    $ref: '#/components/schemas/defs_user_id'\n                                  message:\n                                    $ref: '#/components/schemas/objs_message'\n                                  type:\n                                    enum:\n                                      - message\n                                    type: string\n                                title: Message Pin\n                                type: object\n                          type: array\n                          uniqueItems: true\n                        ok:\n                          $ref: '#/components/schemas/defs_ok_true'\n                      required:\n                        - ok\n                        - items\n                      type: object\n                    - additionalProperties: true\n                      properties:\n                        count:\n                          type: integer\n                        ok:\n                          $ref: '#/components/schemas/defs_ok_true'\n                      required:\n                        - ok\n                        - count\n                      type: object\n                title: pins.list success schema\n              examples:\n                response:\n                  value:\n                    items:\n                      - channel: C2U86NC6H\n                        created: 1508881078\n                        created_by: U2U85N1RZ\n                        message:\n                          permalink: \u003e-\n                            https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151\n                          pinned_to:\n                            - C2U86NC6H\n                          text: What is the meaning of life?\n                          ts: '1508197641.000151'\n                          type: message\n                          user: U2U85N1RZ\n                        type: message\n                      - channel: C2U86NC6H\n                        created: 1508880991\n                        created_by: U2U85N1RZ\n                        message:\n                          permalink: \u003e-\n                            https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015\n                          pinned_to:\n                            - C2U86NC6H\n                          text: \u003e-\n                            The meaning of life, the universe, and everything is\n                            42.\n                          ts: '1503289197.000015'\n                          type: message\n                          user: U2U85N1RZ\n                        type: message\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from pins.list method\n                properties:\n                  error:\n                    enum:\n                      - channel_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: pins.list error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'pins:read'\n      tags:\n        - pins\n  /pins.remove:\n    post:\n      description: Un-pins an item from a channel.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/pins.remove'\n      operationId: pins_remove\n      parameters:\n        - description: 'Authentication token. Requires scope: `pins:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from pins.remove method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: pins.remove schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from pins.remove method\n                properties:\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - file_not_found\n                      - file_comment_not_found\n                      - message_not_found\n                      - no_item_specified\n                      - not_pinned\n                      - permission_denied\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_typ\n                      - missing_post_typ\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeou\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: pins.remove error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: no_pin\n                    ok: false\n      security:\n        - slackAuth:\n            - 'pins:write'\n      tags:\n        - pins\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                file_comment:\n                  description: File comment to un-pin.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to un-pin.\n                  type: number\n                file:\n                  description: File to un-pin.\n                  type: string\n                channel:\n                  description: Channel where the item is pinned to.\n                  type: string\n  /reactions.add:\n    post:\n      description: Adds a reaction to an item.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reactions.add'\n      operationId: reactions_add\n      parameters:\n        - description: 'Authentication token. Requires scope: `reactions:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from reactions.add method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: reactions.add schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from reactions.add method\n                properties:\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - file_not_found\n                      - file_comment_not_found\n                      - message_not_found\n                      - no_item_specified\n                      - invalid_name\n                      - already_reacted\n                      - too_many_emoji\n                      - too_many_reactions\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: reactions.add error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: already_reacted\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reactions:write'\n      tags:\n        - reactions\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Reaction (emoji) name.\n                  type: string\n                file_comment:\n                  description: File comment to add reaction to.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to add reaction to.\n                  type: number\n                file:\n                  description: File to add reaction to.\n                  type: string\n                channel:\n                  description: Channel where the message to add reaction to was posted.\n                  type: string\n  /reactions.get:\n    get:\n      description: Gets reactions for an item.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reactions.get'\n      operationId: reactions_get\n      parameters:\n        - description: If true always return the complete reaction list.\n          in: query\n          name: full\n          schema:\n            type: boolean\n        - description: File comment to get reactions for.\n          in: query\n          name: file_comment\n          schema:\n            type: string\n        - description: Timestamp of the message to get reactions for.\n          in: query\n          name: timestamp\n          schema:\n            type: number\n        - description: 'Authentication token. Requires scope: `reactions:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: File to get reactions for.\n          in: query\n          name: file\n          schema:\n            type: string\n        - description: Channel where the message to get reactions for was posted.\n          in: query\n          name: channel\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                description: Schema for successful response from reactions.get method\n                items:\n                  anyOf:\n                    - additionalProperties: true\n                      properties:\n                        channel:\n                          $ref: '#/components/schemas/defs_channel'\n                        message:\n                          $ref: '#/components/schemas/objs_message'\n                        ok:\n                          $ref: '#/components/schemas/defs_ok_true'\n                        type:\n                          enum:\n                            - message\n                          type: string\n                      required:\n                        - ok\n                        - type\n                        - channel\n                        - message\n                    - additionalProperties: true\n                      properties:\n                        file:\n                          $ref: '#/components/schemas/objs_file'\n                        ok:\n                          $ref: '#/components/schemas/defs_ok_true'\n                        type:\n                          enum:\n                            - file\n                          type: string\n                      required:\n                        - ok\n                        - type\n                        - file\n                    - additionalProperties: true\n                      properties:\n                        comment:\n                          $ref: '#/components/schemas/objs_comment'\n                        file:\n                          $ref: '#/components/schemas/objs_file'\n                        ok:\n                          $ref: '#/components/schemas/defs_ok_true'\n                        type:\n                          enum:\n                            - file_comment\n                          type: string\n                      required:\n                        - ok\n                        - type\n                        - file\n                        - comment\n                title: reactions.get success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    file:\n                      channels:\n                        - C2U7V2YA2\n                      comments_count: 1\n                      created: 1507850315\n                      groups: []\n                      id: F7H0D7ZA4\n                      ims: []\n                      name: computer.gif\n                      reactions:\n                        - count: 1\n                          name: stuck_out_tongue_winking_eye\n                          users:\n                            - U2U85N1RV\n                      timestamp: 1507850315\n                      title: computer.gif\n                      user: U2U85N1RV\n                    ok: true\n                    type: file\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from reactions.get method\n                properties:\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - file_not_found\n                      - file_comment_not_found\n                      - message_not_found\n                      - no_item_specified\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: reactions.get error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reactions:read'\n      tags:\n        - reactions\n  /reactions.list:\n    get:\n      description: Lists reactions made by a user.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reactions.list'\n      operationId: reactions_list\n      parameters:\n        - in: query\n          name: count\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `reactions:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: If true always return the complete reaction list.\n          in: query\n          name: full\n          schema:\n            type: boolean\n        - description: Show reactions made by this user. Defaults to the authed user.\n          in: query\n          name: user\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from reactions.list method\n                properties:\n                  items:\n                    items:\n                      items:\n                        anyOf:\n                          - additionalProperties: true\n                            properties:\n                              channel:\n                                $ref: '#/components/schemas/defs_channel'\n                              message:\n                                $ref: '#/components/schemas/objs_message'\n                              type:\n                                enum:\n                                  - message\n                                type: string\n                            required:\n                              - type\n                              - channel\n                              - message\n                            type: object\n                          - additionalProperties: true\n                            properties:\n                              file:\n                                $ref: '#/components/schemas/objs_file'\n                              type:\n                                enum:\n                                  - file\n                                type: string\n                            required:\n                              - type\n                              - file\n                            type: object\n                          - additionalProperties: true\n                            properties:\n                              comment:\n                                $ref: '#/components/schemas/objs_comment'\n                              file:\n                                $ref: '#/components/schemas/objs_file'\n                              type:\n                                enum:\n                                  - file_comment\n                                type: string\n                            required:\n                              - type\n                              - file\n                              - comment\n                            type: object\n                    type: array\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  paging:\n                    $ref: '#/components/schemas/objs_paging'\n                required:\n                  - ok\n                  - items\n                title: reactions.list schema\n                type: object\n              examples:\n                response:\n                  value:\n                    items:\n                      - channel: C3UKJTQAC\n                        message:\n                          bot_id: B4VLRLMKJ\n                          reactions:\n                            - count: 1\n                              name: robot_face\n                              users:\n                                - U2U85N1RV\n                          subtype: bot_message\n                          text: 'Hello from Python! :tada:'\n                          ts: '1507849573.000090'\n                          username: Shipit Notifications\n                        type: message\n                      - comment:\n                          comment: This is a file comment\n                          created: 1508286096\n                          id: Fc7LP08P1U\n                          reactions:\n                            - count: 1\n                              name: white_check_mark\n                              users:\n                                - U2U85N1RV\n                          timestamp: 1508286096\n                          type: file_comment\n                          user: U2U85N1RV\n                        file:\n                          channels:\n                            - C2U7V2YA2\n                          comments_count: 1\n                          created: 1507850315\n                          reactions:\n                            - count: 1\n                              name: stuck_out_tongue_winking_eye\n                              users:\n                                - U2U85N1RV\n                          title: computer.gif\n                          user: U2U85N1RV\n                          username: ''\n                      - file:\n                          channels:\n                            - C2U7V2YA2\n                          comments_count: 1\n                          created: 1507850315\n                          id: F7H0D7ZA4\n                          name: computer.gif\n                          reactions:\n                            - count: 1\n                              name: stuck_out_tongue_winking_eye\n                              users:\n                                - U2U85N1RV\n                          size: 1639034\n                          title: computer.gif\n                          user: U2U85N1RV\n                          username: ''\n                        type: file\n                    ok: true\n                    paging:\n                      count: 100\n                      page: 1\n                      pages: 1\n                      total: 3\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from reactions.list method\n                properties:\n                  error:\n                    enum:\n                      - user_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactiv\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: reactions.list error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reactions:read'\n      tags:\n        - reactions\n  /reactions.remove:\n    post:\n      description: Removes a reaction from an item.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reactions.remove'\n      operationId: reactions_remove\n      parameters:\n        - description: 'Authentication token. Requires scope: `reactions:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from reactions.remove method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: reactions.remove schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from reactions.remove method\n                properties:\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - file_not_found\n                      - file_comment_not_found\n                      - message_not_found\n                      - no_item_specified\n                      - invalid_name\n                      - no_reaction\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: reactions.remove error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: no_reaction\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reactions:write'\n      tags:\n        - reactions\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Reaction (emoji) name.\n                  type: string\n                file_comment:\n                  description: File comment to remove reaction from.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to remove reaction from.\n                  type: number\n                file:\n                  description: File to remove reaction from.\n                  type: string\n                channel:\n                  description: \u003e-\n                    Channel where the message to remove reaction from was\n                    posted.\n                  type: string\n  /reminders.add:\n    post:\n      description: Creates a reminder.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reminders.add'\n      operationId: reminders_add\n      parameters:\n        - description: 'Authentication token. Requires scope: `reminders:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reminders:write'\n      tags:\n        - reminders\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                text:\n                  description: The content of the reminder\n                  type: string\n                user:\n                  description: \u003e-\n                    The user who will receive the reminder. If no user is\n                    specified, the reminder will go to user who created it.\n                  type: string\n                time:\n                  description: \u003e-\n                    When this reminder should happen: the Unix timestamp (up to\n                    five years from now), the number of seconds until the\n                    reminder (if within 24 hours), or a natural language\n                    description (Ex. \"in 15 minutes,\" or \"every Thursday\")\n                  type: string\n  /reminders.complete:\n    post:\n      description: Marks a reminder as complete.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reminders.complete'\n      operationId: reminders_complete\n      parameters:\n        - description: 'Authentication token. Requires scope: `reminders:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reminders:write'\n      tags:\n        - reminders\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                reminder:\n                  description: The ID of the reminder to be marked as complete\n                  type: string\n  /reminders.delete:\n    post:\n      description: Deletes a reminder.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reminders.delete'\n      operationId: reminders_delete\n      parameters:\n        - description: 'Authentication token. Requires scope: `reminders:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reminders:write'\n      tags:\n        - reminders\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                reminder:\n                  description: The ID of the reminder\n                  type: string\n  /reminders.info:\n    get:\n      description: Gets information about a reminder.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reminders.info'\n      operationId: reminders_info\n      parameters:\n        - description: 'Authentication token. Requires scope: `reminders:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: The ID of the reminder\n          in: query\n          name: reminder\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reminders:read'\n      tags:\n        - reminders\n  /reminders.list:\n    get:\n      description: Lists all reminders created by or for a given user.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/reminders.list'\n      operationId: reminders_list\n      parameters:\n        - description: 'Authentication token. Requires scope: `reminders:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'reminders:read'\n      tags:\n        - reminders\n  /rtm.connect:\n    get:\n      description: Starts a Real Time Messaging session.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/rtm.connect'\n      operationId: rtm_connect\n      parameters:\n        - description: \u003e-\n            Only deliver presence events when requested by subscription. See\n            [presence subscriptions](/docs/presence-and-status#subscriptions).\n          in: query\n          name: presence_sub\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `rtm:stream`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            Batch presence deliveries via subscription. Enabling changes the\n            shape of `presence_change` events. See [batch\n            presence](/docs/presence-and-status#batching).\n          in: query\n          name: batch_presence_aware\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    self:\n                      id: U4X318ZMZ\n                      name: robotoverlord\n                    team:\n                      domain: slackdemo\n                      id: T2U81E2FP\n                      name: SlackDemo\n                    url: 'wss://...'\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'rtm:stream'\n      tags:\n        - rtm\n  /rtm.start:\n    get:\n      description: Starts a Real Time Messaging session.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/rtm.start'\n      operationId: rtm_start\n      parameters:\n        - description: \u003e-\n            Exclude latest timestamps for channels, groups, mpims, and ims.\n            Automatically sets `no_unreads` to `1`\n          in: query\n          name: no_latest\n          schema:\n            type: boolean\n        - description: \u003e-\n            Return timestamp only for latest message object of each channel\n            (improves performance).\n          in: query\n          name: simple_latest\n          schema:\n            type: boolean\n        - description: \u003e-\n            Set this to `true` to receive the locale for users and channels.\n            Defaults to `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n        - description: \u003e-\n            Only deliver presence events when requested by subscription. See\n            [presence subscriptions](/docs/presence-and-status#subscriptions).\n          in: query\n          name: presence_sub\n          schema:\n            type: boolean\n        - description: Skip unread counts for each channel (improves performance).\n          in: query\n          name: no_unreads\n          schema:\n            type: boolean\n        - description: \u003e-\n            Batch presence deliveries via subscription. Enabling changes the\n            shape of `presence_change` events. See [batch\n            presence](/docs/presence-and-status#batching).\n          in: query\n          name: batch_presence_aware\n          schema:\n            type: boolean\n        - description: Returns MPIMs to the client in the API response.\n          in: query\n          name: mpim_aware\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `rtm:stream`'\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'rtm:stream'\n      tags:\n        - rtm\n  /search.all:\n    get:\n      description: Searches for messages and files matching a query.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/search.all'\n      operationId: search_all\n      parameters:\n        - description: Change sort direction to ascending (`asc`) or descending (`desc`).\n          in: query\n          name: sort_dir\n          schema:\n            type: string\n        - description: 'Search query. May contains booleans, etc.'\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Return matches sorted by either `score` or `timestamp`.\n          in: query\n          name: sort\n          schema:\n            type: string\n        - in: query\n          name: count\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `search:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            Pass a value of `true` to enable query highlight markers (see\n            below).\n          in: query\n          name: highlight\n          schema:\n            type: boolean\n        - in: query\n          name: page\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    files:\n                      matches:\n                        - channels: []\n                          comments_count: 1\n                          created: 1508804330\n                          display_as_bot: false\n                          editable: false\n                          external_type: ''\n                          filetype: png\n                          groups: []\n                          id: F7PKF1NR7\n                          image_exif_rotation: 1\n                          ims: []\n                          initial_comment:\n                            comment: Sure! Here's the workflow diagram!\n                            created: 1508804330\n                            id: Fc7NLL52E7\n                            is_intro: true\n                            timestamp: 1508804330\n                            user: U2U85N1RZ\n                          is_external: false\n                          is_public: true\n                          mimetype: image/png\n                          mode: hosted\n                          name: slack workflow diagram.png\n                          original_h: 117\n                          original_w: 128\n                          permalink: \u003e-\n                            https://example.slack.com/files/U2U85N1RZ/F7PKF1NR7/slack_workflow_diagram.png\n                          permalink_public: \u003e-\n                            https://slack-files.com/T2U81E2FZ-F7PKF1NR7-bea9143f18\n                          pretty_type: PNG\n                          public_url_shared: false\n                          score: '0.99982661240974'\n                          size: 35705\n                          thumb_160: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_160.png\n                          thumb_360: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_360.png\n                          thumb_360_h: 117\n                          thumb_360_w: 128\n                          thumb_64: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_64.png\n                          thumb_80: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2FZ-F7PKF1NR7-19f33fc256/slack_workflow_diagram_80.png\n                          timestamp: 1508804330\n                          title: slack workflow diagram\n                          top_file: false\n                          url_private: \u003e-\n                            https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/slack_workflow_diagram.png\n                          url_private_download: \u003e-\n                            https://files.slack.com/files-pri/T2U81E2FZ-F7PKF1NR7/download/slack_workflow_diagram.png\n                          user: U2U85N1RZ\n                          username: amy\n                      pagination:\n                        first: 1\n                        last: 1\n                        page: 1\n                        page_count: 1\n                        per_page: 20\n                        total_count: 1\n                      paging:\n                        count: 20\n                        page: 1\n                        pages: 1\n                        total: 1\n                      total: 1\n                    messages:\n                      matches:\n                        - channel:\n                            id: C2U86NC6M\n                            is_ext_shared: false\n                            is_mpim: false\n                            is_org_shared: false\n                            is_pending_ext_shared: false\n                            is_private: false\n                            is_shared: false\n                            name: general\n                            pending_shared: []\n                          iid: 35692677-e60e-43d9-ac45-1987cea88975\n                          next:\n                            iid: 6f510ea1-e1d3-4f3f-bdb9-f9c6f6e9d609\n                            text: Thanks!\n                            ts: '1508804378.000219'\n                            type: message\n                            user: U2U85HJ7R\n                            username: john\n                          permalink: \u003e-\n                            https://example.slack.com/archives/C2U86NC6M/p1508804330000296\n                          previous:\n                            iid: aba8603c-0543-4fb2-9118-a5ac85f3d138\n                            text: Can you send me the Slack workflow diagram?\n                            ts: '1508804301.000026'\n                            type: message\n                            user: U2U85HJ7R\n                            username: john\n                          team: T2U81E2FZ\n                          text: \u003e-\n                            uploaded a file:\n                             and commented: Sure! Here's the\n                            workflow diagram!\n                          ts: '1508804330.000296'\n                          type: message\n                          user: U2U85N1RZ\n                          username: amy\n                      pagination:\n                        first: 1\n                        last: 1\n                        page: 1\n                        page_count: 1\n                        per_page: 20\n                        total_count: 1\n                      paging:\n                        count: 20\n                        page: 1\n                        pages: 1\n                        total: 1\n                      total: 1\n                    ok: true\n                    posts:\n                      matches: []\n                      total: 0\n                    query: diagram\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: missing_scope\n                    needed: 'search:read'\n                    ok: false\n                    provided: 'identify,bot:basic'\n      security:\n        - slackAuth:\n            - 'search:read'\n      tags:\n        - search\n  /search.files:\n    get:\n      description: Searches for files matching a query.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/search.files'\n      operationId: search_files\n      parameters:\n        - description: Change sort direction to ascending (`asc`) or descending (`desc`).\n          in: query\n          name: sort_dir\n          schema:\n            type: string\n        - description: 'Search query. May contain booleans, etc.'\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Return matches sorted by either `score` or `timestamp`.\n          in: query\n          name: sort\n          schema:\n            type: string\n        - description: \u003e-\n            Pass a value of `true` to enable query highlight markers (see\n            below).\n          in: query\n          name: highlight\n          schema:\n            type: boolean\n        - in: query\n          name: count\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `search:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    files:\n                      matches:\n                        - channels: []\n                          comments_count: 1\n                          created: 1507850315\n                          deanimate_gif: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_deanimate_gif.png\n                          display_as_bot: false\n                          editable: false\n                          external_type: ''\n                          filetype: gif\n                          groups: []\n                          id: F7H0D7ZBB\n                          image_exif_rotation: 1\n                          ims: []\n                          is_external: false\n                          is_public: true\n                          mimetype: image/gif\n                          mode: hosted\n                          name: computer.gif\n                          original_h: 313\n                          original_w: 500\n                          permalink: \u003e-\n                            https://eventsdemo.slack.com/files/U2U85N1RZ/F7H0D7ZBB/computer.gif\n                          permalink_public: \u003e-\n                            https://slack-files.com/T2U81E2BB-F7H0D7ZBB-85b7f5557e\n                          pretty_type: GIF\n                          public_url_shared: false\n                          reactions:\n                            - count: 1\n                              name: stuck_out_tongue_winking_eye\n                              users:\n                                - U2U85N1RZ\n                          score: '0.38899223746309'\n                          size: 1639034\n                          thumb_160: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_160.png\n                          thumb_360: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.png\n                          thumb_360_gif: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_360.gif\n                          thumb_360_h: 225\n                          thumb_360_w: 360\n                          thumb_480: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.png\n                          thumb_480_gif: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_480.gif\n                          thumb_480_h: 300\n                          thumb_480_w: 480\n                          thumb_64: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_64.png\n                          thumb_80: \u003e-\n                            https://files.slack.com/files-tmb/T2U81E2BB-F7H0D7ZBB-21624821e6/computer_80.png\n                          timestamp: 1507850315\n                          title: computer.gif\n                          top_file: false\n                          url_private: \u003e-\n                            https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/computer.gif\n                          url_private_download: \u003e-\n                            https://files.slack.com/files-pri/T2U81E2BB-F7H0D7ZBB/download/computer.gif\n                          user: U2U85N1RZ\n                          username: ''\n                      pagination:\n                        first: 1\n                        last: 3\n                        page: 1\n                        page_count: 1\n                        per_page: 20\n                        total_count: 3\n                      paging:\n                        count: 20\n                        page: 1\n                        pages: 1\n                        total: 3\n                      total: 3\n                    ok: true\n                    query: computer.gif\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: No query passed\n                    ok: false\n      security:\n        - slackAuth:\n            - 'search:read'\n      tags:\n        - search\n  /search.messages:\n    get:\n      description: Searches for messages matching a query.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/search.messages'\n      operationId: search_messages\n      parameters:\n        - description: Change sort direction to ascending (`asc`) or descending (`desc`).\n          in: query\n          name: sort_dir\n          schema:\n            type: string\n        - description: 'Search query. May contains booleans, etc.'\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Return matches sorted by either `score` or `timestamp`.\n          in: query\n          name: sort\n          schema:\n            type: string\n        - description: Pass the number of results you want per \"page\". Maximum of `100`.\n          in: query\n          name: count\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `search:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            Pass a value of `true` to enable query highlight markers (see\n            below).\n          in: query\n          name: highlight\n          schema:\n            type: boolean\n        - in: query\n          name: page\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    messages:\n                      matches:\n                        - channel:\n                            id: C12345678\n                            is_ext_shared: false\n                            is_mpim: false\n                            is_org_shared: false\n                            is_pending_ext_shared: false\n                            is_private: false\n                            is_shared: false\n                            name: general\n                            pending_shared: []\n                          iid: cb64bdaa-c1e8-4631-8a91-0f78080113e9\n                          permalink: \u003e-\n                            https://hitchhikers.slack.com/archives/C12345678/p1508284197000015\n                          team: T12345678\n                          text: \u003e-\n                            The meaning of life the universe and everything is\n                            42.\n                          ts: '1508284197.000015'\n                          type: message\n                          user: U2U85N1RV\n                          username: roach\n                        - channel:\n                            id: C12345678\n                            is_ext_shared: false\n                            is_mpim: false\n                            is_org_shared: false\n                            is_pending_ext_shared: false\n                            is_private: false\n                            is_shared: false\n                            name: random\n                            pending_shared: []\n                          iid: 9a00d3c9-bd2d-45b0-988b-6cff99ae2a90\n                          permalink: \u003e-\n                            https://hitchhikers.slack.com/archives/C12345678/p1508795665000236\n                          team: T12345678\n                          text: \u003e-\n                            The meaning of life the universe and everything is\n                            101010\n                          ts: '1508795665.000236'\n                          type: message\n                          user: ''\n                          username: robot overlord\n                      pagination:\n                        first: 1\n                        last: 2\n                        page: 1\n                        page_count: 1\n                        per_page: 20\n                        total_count: 2\n                      paging:\n                        count: 20\n                        page: 1\n                        pages: 1\n                        total: 2\n                      total: 2\n                    ok: true\n                    query: The meaning of life the universe and everything\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: No query passed\n                    ok: false\n      security:\n        - slackAuth:\n            - 'search:read'\n      tags:\n        - search\n  /stars.add:\n    post:\n      description: Adds a star to an item.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/stars.add'\n      operationId: stars_add\n      parameters:\n        - description: 'Authentication token. Requires scope: `stars:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'stars:write'\n      tags:\n        - stars\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                file_comment:\n                  description: File comment to add star to.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to add star to.\n                  type: number\n                channel:\n                  description: \u003e-\n                    Channel to add star to, or channel where the message to add\n                    star to was posted (used with `timestamp`).\n                  type: string\n                file:\n                  description: File to add star to.\n                  type: string\n  /stars.list:\n    get:\n      description: Lists stars for a user.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/stars.list'\n      operationId: stars_list\n      parameters:\n        - in: query\n          name: count\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `stars:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'stars:read'\n      tags:\n        - stars\n  /stars.remove:\n    post:\n      description: Removes a star from an item.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/stars.remove'\n      operationId: stars_remove\n      parameters:\n        - description: 'Authentication token. Requires scope: `stars:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'stars:write'\n      tags:\n        - stars\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                file_comment:\n                  description: File comment to remove star from.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to remove star from.\n                  type: number\n                channel:\n                  description: \u003e-\n                    Channel to remove star from, or channel where the message to\n                    remove star from was posted (used with `timestamp`).\n                  type: string\n                file:\n                  description: File to remove star from.\n                  type: string\n  /team.accessLogs:\n    get:\n      description: Gets the access logs for the current team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/team.accessLogs'\n      operationId: team_accessLogs\n      parameters:\n        - in: query\n          name: count\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `admin`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n        - description: End of time range of logs to include in results (inclusive).\n          in: query\n          name: before\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - admin\n      tags:\n        - team\n  /team.billableInfo:\n    get:\n      description: Gets billable users information for the current team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/team.billableInfo'\n      operationId: team_billableInfo\n      parameters:\n        - description: 'Authentication token. Requires scope: `admin`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            A user to retrieve the billable information for. Defaults to all\n            users.\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - admin\n      tags:\n        - team\n  /team.info:\n    get:\n      description: Gets information about the current team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/team.info'\n      operationId: team_info\n      parameters:\n        - description: 'Authentication token. Requires scope: `team:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from team.info method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  team:\n                    $ref: '#/components/schemas/objs_team'\n                required:\n                  - ok\n                  - team\n                title: team.info schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from team.info method\n                properties:\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revokedno_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: team.info error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'team:read'\n      tags:\n        - team\n  /team.integrationLogs:\n    get:\n      description: Gets the integration logs for the current team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/team.integrationLogs'\n      operationId: team_integrationLogs\n      parameters:\n        - in: query\n          name: count\n          schema:\n            type: string\n        - description: Filter logs with this change type. Defaults to all logs.\n          in: query\n          name: change_type\n          schema:\n            type: string\n        - description: Filter logs to this Slack app. Defaults to all logs.\n          in: query\n          name: app_id\n          schema:\n            type: integer\n        - description: 'Authentication token. Requires scope: `admin`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Filter logs generated by this user�s actions. Defaults to all logs.\n          in: query\n          name: user\n          schema:\n            type: string\n        - description: Filter logs to this service. Defaults to all logs.\n          in: query\n          name: service_id\n          schema:\n            type: integer\n        - in: query\n          name: page\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - admin\n      tags:\n        - team\n  /team.profile.get:\n    get:\n      description: Retrieve a team's profile.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/team.profile.get'\n      operationId: team_profile_get\n      parameters:\n        - description: 'Authentication token. Requires scope: `users.profile:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Filter by visibility.\n          in: query\n          name: visibility\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from team.profile.get method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  profile:\n                    additionalProperties: true\n                    properties:\n                      fields:\n                        items:\n                          $ref: '#/components/schemas/objs_team_profile_field'\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                    required:\n                      - fields\n                    type: object\n                required:\n                  - ok\n                  - profile\n                title: team.profile.get success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    profile:\n                      fields:\n                        - hint: Enter the extension to reach your desk\n                          id: Xf06054AAA\n                          is_hidden: 1\n                          label: Phone extension\n                          ordering: 0\n                          type: text\n                        - hint: When you were born\n                          id: Xf06054BBB\n                          label: Date of birth\n                          ordering: 1\n                          type: date\n                        - hint: Enter a link to your Facebook profile\n                          id: Xf06054CCC\n                          label: Facebook\n                          ordering: 2\n                          type: link\n                        - hint: 'Hogwarts, obviously'\n                          id: Xf06054DDD\n                          label: House\n                          ordering: 3\n                          possible_values:\n                            - Gryffindor\n                            - Hufflepuff\n                            - Ravenclaw\n                            - Slytherin\n                          type: options_list\n                        - hint: Office location (LDAP)\n                          id: Xf06054EEE\n                          label: Location\n                          options:\n                            is_protected: 1\n                          ordering: 4\n                          type: text\n                        - hint: The boss\n                          id: Xf06054FFF\n                          label: Manager\n                          ordering: 5\n                          type: user\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from team.profile.get method\n                properties:\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_typ\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeou\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: team.profile.get error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users.profile:read'\n      tags:\n        - team.profile\n        - team\n  /usergroups.create:\n    post:\n      description: Create a User Group\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/usergroups.create'\n      operationId: usergroups_create\n      parameters:\n        - description: 'Authentication token. Requires scope: `usergroups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'usergroups:write'\n      tags:\n        - usergroups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                handle:\n                  description: \u003e-\n                    A mention handle. Must be unique among channels, users and\n                    User Groups.\n                  type: string\n                name:\n                  description: A name for the User Group. Must be unique among User Groups.\n                  type: string\n                channels:\n                  description: \u003e-\n                    A comma separated string of encoded channel IDs for which\n                    the User Group uses as a default.\n                  type: string\n                include_count:\n                  description: Include the number of users in each User Group.\n                  type: boolean\n                description:\n                  description: A short description of the User Group.\n                  type: string\n  /usergroups.disable:\n    post:\n      description: Disable an existing User Group\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/usergroups.disable'\n      operationId: usergroups_disable\n      parameters:\n        - description: 'Authentication token. Requires scope: `usergroups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'usergroups:write'\n      tags:\n        - usergroups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                include_count:\n                  description: Include the number of users in the User Group.\n                  type: boolean\n                usergroup:\n                  description: The encoded ID of the User Group to disable.\n                  type: string\n  /usergroups.enable:\n    post:\n      description: Enable a User Group\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/usergroups.enable'\n      operationId: usergroups_enable\n      parameters:\n        - description: 'Authentication token. Requires scope: `usergroups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'usergroups:write'\n      tags:\n        - usergroups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                include_count:\n                  description: Include the number of users in the User Group.\n                  type: boolean\n                usergroup:\n                  description: The encoded ID of the User Group to enable.\n                  type: string\n  /usergroups.list:\n    get:\n      description: List all User Groups for a team\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/usergroups.list'\n      operationId: usergroups_list\n      parameters:\n        - description: Include the list of users for each User Group.\n          in: query\n          name: include_users\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `usergroups:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Include the number of users in each User Group.\n          in: query\n          name: include_count\n          schema:\n            type: boolean\n        - description: Include disabled User Groups.\n          in: query\n          name: include_disabled\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    usergroups:\n                      - auto_type: admin\n                        created_by: USLACKBOT\n                        date_create: 1446598059\n                        date_delete: 0\n                        date_update: 1446670362\n                        description: A group of all Administrators on your team.\n                        handle: admins\n                        id: S0614TZR7\n                        is_external: false\n                        is_usergroup: true\n                        name: Team Admins\n                        prefs:\n                          channels: []\n                          groups: []\n                        team_id: T060RNRCH\n                        updated_by: U060RNRCZ\n                        user_count: '2'\n                      - auto_type: owner\n                        created_by: USLACKBOT\n                        date_create: 1446678371\n                        date_delete: 0\n                        date_update: 1446678371\n                        description: A group of all Owners on your team.\n                        handle: owners\n                        id: S06158AV7\n                        is_external: false\n                        is_usergroup: true\n                        name: Team Owners\n                        prefs:\n                          channels: []\n                          groups: []\n                        team_id: T060RNRCH\n                        updated_by: USLACKBOT\n                        user_count: '1'\n                      - created_by: U060RNRCZ\n                        date_create: 1446746793\n                        date_delete: 1446748865\n                        date_update: 1446747767\n                        description: 'Marketing gurus, PR experts and product advocates.'\n                        handle: marketing-team\n                        id: S0615G0KT\n                        is_external: false\n                        is_usergroup: true\n                        name: Marketing Team\n                        prefs:\n                          channels: []\n                          groups: []\n                        team_id: T060RNRCH\n                        updated_by: U060RNRCZ\n                        user_count: '0'\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'usergroups:read'\n      tags:\n        - usergroups\n  /usergroups.update:\n    post:\n      description: Update an existing User Group\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/usergroups.update'\n      operationId: usergroups_update\n      parameters:\n        - description: 'Authentication token. Requires scope: `usergroups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    usergroup:\n                      created_by: U060R4BJ4\n                      date_create: 1447096577\n                      date_delete: 0\n                      date_update: 1447102109\n                      description: 'Marketing gurus, PR experts and product advocates.'\n                      handle: marketing-team\n                      id: S0616NG6M\n                      is_external: false\n                      is_usergroup: true\n                      name: Marketing Team\n                      prefs:\n                        channels: []\n                        groups: []\n                      team_id: T060R4BHN\n                      updated_by: U060R4BJ4\n                      user_count: 1\n                      users:\n                        - U060R4BJ4\n                        - U060RNRCZ\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'usergroups:write'\n      tags:\n        - usergroups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                handle:\n                  description: \u003e-\n                    A mention handle. Must be unique among channels, users and\n                    User Groups.\n                  type: string\n                description:\n                  description: A short description of the User Group.\n                  type: string\n                channels:\n                  description: \u003e-\n                    A comma separated string of encoded channel IDs for which\n                    the User Group uses as a default.\n                  type: string\n                include_count:\n                  description: Include the number of users in the User Group.\n                  type: boolean\n                usergroup:\n                  description: The encoded ID of the User Group to update.\n                  type: string\n                name:\n                  description: A name for the User Group. Must be unique among User Groups.\n                  type: string\n  /usergroups.users.list:\n    get:\n      description: List all users in a User Group\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/usergroups.users.list'\n      operationId: usergroups_users_list\n      parameters:\n        - description: 'Authentication token. Requires scope: `usergroups:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Allow results that involve disabled User Groups.\n          in: query\n          name: include_disabled\n          schema:\n            type: boolean\n        - description: The encoded ID of the User Group to update.\n          in: query\n          name: usergroup\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Standard success response when used with a user token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    users:\n                      - U060R4BJ4\n                      - W123A4BC5\n        default:\n          description: Standard failure response when used with an invalid token\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'usergroups:read'\n      tags:\n        - usergroups.users\n        - usergroups\n  /usergroups.users.update:\n    post:\n      description: Update the list of users for a User Group\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/usergroups.users.update'\n      operationId: usergroups_users_update\n      parameters:\n        - description: 'Authentication token. Requires scope: `usergroups:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    usergroup:\n                      created_by: U060R4BJ4\n                      date_create: 1447096577\n                      date_delete: 0\n                      date_update: 1447102109\n                      description: 'Marketing gurus, PR experts and product advocates.'\n                      handle: marketing-team\n                      id: S0616NG6M\n                      is_external: false\n                      is_usergroup: true\n                      name: Marketing Team\n                      prefs:\n                        channels: []\n                        groups: []\n                      team_id: T060R4BHN\n                      updated_by: U060R4BJ4\n                      user_count: 1\n                      users:\n                        - U060R4BJ4\n                        - U060RNRCZ\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'usergroups:write'\n      tags:\n        - usergroups.users\n        - usergroups\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                include_count:\n                  description: Include the number of users in the User Group.\n                  type: boolean\n                users:\n                  description: \u003e-\n                    A comma separated string of encoded user IDs that represent\n                    the entire list of users for the User Group.\n                  type: string\n                usergroup:\n                  description: The encoded ID of the User Group to update.\n                  type: string\n  /users.conversations:\n    get:\n      description: List conversations the calling user may access.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.conversations'\n      operationId: users_conversations\n      parameters:\n        - description: \u003e-\n            Paginate through collections of data by setting the `cursor`\n            parameter to a `next_cursor` attribute returned by a previous\n            request's `response_metadata`. Default value fetches the first\n            \"page\" of the collection. See [pagination](/docs/pagination) for\n            more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `conversations:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of items to return. Fewer than the requested\n            number of items may be returned, even if the end of the list hasn't\n            been reached. Must be an integer no larger than 1000.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: \u003e-\n            Browse conversations by a specific user ID's membership. Non-public\n            channels are restricted to those where the calling user shares\n            membership.\n          in: query\n          name: user\n          schema:\n            type: string\n        - description: Set to `true` to exclude archived channels from the list\n          in: query\n          name: exclude_archived\n          schema:\n            type: boolean\n        - description: \u003e-\n            Mix and match channel types by providing a comma-separated list of\n            any combination of `public_channel`, `private_channel`, `mpim`, `im`\n          in: query\n          name: types\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Typical success response with only public channels. Note how\n            `num_members` and `is_member` are not returned like typical\n            `conversations` objects.\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Schema for successful response from users.conversations\n                  method. Returned conversation objects do not include\n                  `num_members` or `is_member`\n                properties:\n                  channels:\n                    items:\n                      $ref: '#/components/schemas/objs_conversation'\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  response_metadata:\n                    additionalProperties: true\n                    properties:\n                      next_cursor:\n                        type: string\n                    required:\n                      - next_cursor\n                    type: object\n                required:\n                  - ok\n                  - channels\n                title: conversations.list success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    channels:\n                      - created: 1449252889\n                        creator: U012A3CDE\n                        id: C012AB3CD\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: true\n                        is_group: false\n                        is_im: false\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: general\n                        name_normalized: general\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: ''\n                          last_set: 0\n                          value: \u003e-\n                            This channel is for team-wide communication and\n                            announcements. All team members are in this channel.\n                        topic:\n                          creator: ''\n                          last_set: 0\n                          value: Company-wide announcements and work-based matters\n                        unlinked: 0\n                      - created: 1449252889\n                        creator: U061F7AUR\n                        id: C061EG9T2\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: false\n                        is_group: false\n                        is_im: false\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: random\n                        name_normalized: random\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: ''\n                          last_set: 0\n                          value: \u003e-\n                            A place for non-work-related flimflam, faffing,\n                            hodge-podge or jibber-jabber you'd prefer to keep\n                            out of more focused work-related channels.\n                        topic:\n                          creator: ''\n                          last_set: 0\n                          value: Non-work banter and water cooler conversation\n                        unlinked: 0\n                    ok: true\n                    response_metadata:\n                      next_cursor: dGVhbTpDMDYxRkE1UEI=\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema: {}\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'channels:read'\n            - 'groups:read'\n            - 'im:read'\n            - 'mpim:read'\n      tags:\n        - users\n  /users.deletePhoto:\n    post:\n      description: Delete the user profile photo\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.deletePhoto'\n      operationId: users_deletePhoto\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users.profile:write'\n      tags:\n        - users\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                token:\n                  description: 'Authentication token. Requires scope: `users.profile:write`'\n                  type: string\n  /users.getPresence:\n    get:\n      description: Gets user presence information.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.getPresence'\n      operationId: users_getPresence\n      parameters:\n        - description: 'Authentication token. Requires scope: `users:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: User to get presence info on. Defaults to the authed user.\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            When requesting information for a different user, this method just\n            returns the current presence (either `active` or `away`).\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: \u003e-\n                  Generated from users.getPresence with shasum\n                  e7251aec575d8863f9e0eb38663ae9dc26655f65\n                properties:\n                  auto_away:\n                    type: boolean\n                  connection_count:\n                    type: integer\n                  last_activity:\n                    type: integer\n                  manual_away:\n                    type: boolean\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  online:\n                    type: boolean\n                  presence:\n                    type: string\n                required:\n                  - ok\n                  - presence\n                title: 'API method: users.getPresence'\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    presence: active\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  type: object\n                description: Schema for error response users.getPresence method\n                properties:\n                  error:\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: users.counts error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users:read'\n      tags:\n        - users\n  /users.identity:\n    get:\n      description: Get a user's identity.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.identity'\n      operationId: users_identity\n      parameters:\n        - description: 'Authentication token. Requires scope: `identity.basic`'\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'You will receive at a minimum the following information:'\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    team:\n                      id: T0G9PQBBK\n                    user:\n                      id: U0G9QF9C6\n                      name: Sonny Whether\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: account_inactive\n                    ok: false\n      security:\n        - slackAuth:\n            - identity.basic\n      tags:\n        - users\n  /users.info:\n    get:\n      description: Gets information about a user.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.info'\n      operationId: users_info\n      parameters:\n        - description: \u003e-\n            Set this to `true` to receive the locale for this user. Defaults to\n            `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n        - description: 'Authentication token. Requires scope: `users:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: User to get info on\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from users.info method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  user:\n                    $ref: '#/components/schemas/objs_user'\n                required:\n                  - ok\n                  - user\n                title: users.info success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    user:\n                      color: 9f69e7\n                      deleted: false\n                      has_2fa: false\n                      id: W012A3CDE\n                      is_admin: true\n                      is_app_user: false\n                      is_bot: false\n                      is_owner: false\n                      is_primary_owner: false\n                      is_restricted: false\n                      is_ultra_restricted: false\n                      name: spengler\n                      profile:\n                        avatar_hash: ge3b51ca72de\n                        display_name: spengler\n                        display_name_normalized: spengler\n                        email: spengler@ghostbusters.example.com\n                        image_192: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_24: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_32: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_48: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_512: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_72: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        real_name: Egon Spengler\n                        real_name_normalized: Egon Spengler\n                        status_emoji: ':books:'\n                        status_text: Print is dead\n                        team: T012AB3C4\n                      real_name: Egon Spengler\n                      team_id: T012AB3C4\n                      tz: America/Los_Angeles\n                      tz_label: Pacific Daylight Time\n                      tz_offset: -25200\n                      updated: 1502138686\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from users.info method\n                properties:\n                  error:\n                    enum:\n                      - user_not_found\n                      - user_not_visible\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: users.info error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: user_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users:read'\n      tags:\n        - users\n  /users.list:\n    get:\n      description: Lists all users in a Slack team.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.list'\n      operationId: users_list\n      parameters:\n        - description: \u003e-\n            Deprecated. Whether to include presence data in the output. Defaults\n            to `false`. Setting this to `true` reduces performance, especially\n            with large teams.\n          in: query\n          name: presence\n          schema:\n            type: boolean\n        - description: \u003e-\n            Paginate through collections of data by setting the `cursor`\n            parameter to a `next_cursor` attribute returned by a previous\n            request's `response_metadata`. Default value fetches the first\n            \"page\" of the collection. See [pagination](/docs/pagination) for\n            more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: 'Authentication token. Requires scope: `users:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of items to return. Fewer than the requested\n            number of items may be returned, even if the end of the users list\n            hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: \u003e-\n            Set this to `true` to receive the locale for users. Defaults to\n            `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from users.list method\n                properties:\n                  cache_ts:\n                    type: integer\n                  members:\n                    items:\n                      $ref: '#/components/schemas/objs_user'\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                  - members\n                  - cache_ts\n                title: users.list schema\n                type: object\n              examples:\n                response:\n                  value:\n                    cache_ts: 1498777272\n                    members:\n                      - color: 9f69e7\n                        deleted: false\n                        has_2fa: false\n                        id: W012A3CDE\n                        is_admin: true\n                        is_app_user: false\n                        is_bot: false\n                        is_owner: false\n                        is_primary_owner: false\n                        is_restricted: false\n                        is_ultra_restricted: false\n                        name: spengler\n                        profile:\n                          avatar_hash: ge3b51ca72de\n                          display_name: spengler\n                          display_name_normalized: spengler\n                          email: spengler@ghostbusters.example.com\n                          image_192: \u003e-\n                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_24: \u003e-\n                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_32: \u003e-\n                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_48: \u003e-\n                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_512: \u003e-\n                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_72: \u003e-\n                            https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          real_name: Egon Spengler\n                          real_name_normalized: Egon Spengler\n                          status_emoji: ':books:'\n                          status_text: Print is dead\n                          team: T012AB3C4\n                        real_name: spengler\n                        team_id: T012AB3C4\n                        tz: America/Los_Angeles\n                        tz_label: Pacific Daylight Time\n                        tz_offset: -25200\n                        updated: 1502138686\n                      - color: 9f69e7\n                        deleted: false\n                        has_2fa: false\n                        id: W07QCRPA4\n                        is_admin: true\n                        is_bot: false\n                        is_owner: false\n                        is_primary_owner: false\n                        is_restricted: false\n                        is_ultra_restricted: false\n                        name: glinda\n                        profile:\n                          avatar_hash: 8fbdd10b41c6\n                          display_name: Glinda the Fairly Good\n                          display_name_normalized: Glinda the Fairly Good\n                          email: glenda@south.oz.coven\n                          first_name: Glinda\n                          image_1024: 'https://a.slack-edge.com...png'\n                          image_192: 'https://a.slack-edge.com...png'\n                          image_24: 'https://a.slack-edge.com...png'\n                          image_32: 'https://a.slack-edge.com...png'\n                          image_48: 'https://a.slack-edge.com...png'\n                          image_512: 'https://a.slack-edge.com...png'\n                          image_72: 'https://a.slack-edge.com...png'\n                          image_original: 'https://a.slack-edge.com...png'\n                          last_name: Southgood\n                          phone: ''\n                          real_name: Glinda Southgood\n                          real_name_normalized: Glinda Southgood\n                          skype: ''\n                          title: Glinda the Good\n                        real_name: Glinda Southgood\n                        team_id: T0G9PQBBK\n                        tz: America/Los_Angeles\n                        tz_label: Pacific Daylight Time\n                        tz_offset: -25200\n                        updated: 1480527098\n                    ok: true\n                    response_metadata:\n                      next_cursor: dXNlcjpVMEc5V0ZYTlo=\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from users.list method\n                properties:\n                  error:\n                    enum:\n                      - invalid_cursor\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: users.list error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_cursor\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users:read'\n      tags:\n        - users\n  /users.lookupByEmail:\n    get:\n      description: Find a user with an email address.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.lookupByEmail'\n      operationId: users_lookupByEmail\n      parameters:\n        - description: 'Authentication token. Requires scope: `users:read.email`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: An email address belonging to a user in the workspace\n          in: query\n          name: email\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from users.lookupByEmail method\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                  user:\n                    $ref: '#/components/schemas/objs_user'\n                required:\n                  - ok\n                  - user\n                title: users.lookupByEmail success schema\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    user:\n                      color: 9f69e7\n                      deleted: false\n                      has_2fa: false\n                      id: W012A3CDE\n                      is_admin: true\n                      is_app_user: false\n                      is_bot: false\n                      is_owner: false\n                      is_primary_owner: false\n                      is_restricted: false\n                      is_ultra_restricted: false\n                      name: spengler\n                      profile:\n                        avatar_hash: ge3b51ca72de\n                        display_name: spengler\n                        display_name_normalized: spengler\n                        email: spengler@ghostbusters.example.com\n                        image_192: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_24: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_32: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_48: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_512: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_72: \u003e-\n                          https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        real_name: Egon Spengler\n                        real_name_normalized: Egon Spengler\n                        status_emoji: ':books:'\n                        status_text: Print is dead\n                        team: T012AB3C4\n                      real_name: Egon Spengler\n                      team_id: T012AB3C4\n                      tz: America/Los_Angeles\n                      tz_label: Pacific Daylight Time\n                      tz_offset: -25200\n                      updated: 1502138686\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Schema for error response from users.lookupByEmail method\n                properties:\n                  error:\n                    enum:\n                      - users_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_false'\n                required:\n                  - ok\n                  - error\n                title: users.lookupByEmail error schema\n                type: object\n              examples:\n                response:\n                  value:\n                    error: users_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users:read.email'\n      tags:\n        - users\n  /users.profile.get:\n    get:\n      description: Retrieves a user's profile information.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.profile.get'\n      operationId: users_profile_get\n      parameters:\n        - description: 'Authentication token. Requires scope: `users.profile:read`'\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Include labels for each ID in custom profile fields\n          in: query\n          name: include_labels\n          schema:\n            type: boolean\n        - description: User to retrieve profile info for\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    profile:\n                      avatar_hash: ge3b51ca72de\n                      display_name: spengler\n                      display_name_normalized: spengler\n                      email: spengler@ghostbusters.example.com\n                      image_192: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_24: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_32: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_48: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_512: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_72: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      real_name: Egon Spengler\n                      real_name_normalized: Egon Spengler\n                      status_emoji: ':books:'\n                      status_text: Print is dead\n                      team: T012AB3C4\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: user_not_found\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users.profile:read'\n      tags:\n        - users.profile\n        - users\n  /users.profile.set:\n    post:\n      description: Set the profile information for a user.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.profile.set'\n      operationId: users_profile_set\n      parameters:\n        - description: 'Authentication token. Requires scope: `users.profile:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n                    profile:\n                      avatar_hash: ge3b51ca72de\n                      display_name: spengler\n                      display_name_normalized: spengler\n                      email: spengler@ghostbusters.example.com\n                      image_192: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_24: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_32: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_48: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_512: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      image_72: 'https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg'\n                      real_name: Egon Spengler\n                      real_name_normalized: Egon Spengler\n                      status_emoji: ':books:'\n                      status_text: Print is dead\n                      team: T012AB3C4\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_profile\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users.profile:write'\n      tags:\n        - users.profile\n        - users\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                profile:\n                  description: \u003e-\n                    Collection of key:value pairs presented as a URL-encoded\n                    JSON hash.\n                  type: string\n                user:\n                  description: \u003e-\n                    ID of user to change. This argument may only be specified by\n                    team admins on paid teams.\n                  type: string\n                value:\n                  description: \u003e-\n                    Value to set a single key to. Usable only if `profile` is\n                    not passed.\n                  type: string\n                name:\n                  description: \u003e-\n                    Name of a single key to set. Usable only if `profile` is not\n                    passed.\n                  type: string\n  /users.setActive:\n    post:\n      description: Marked a user as active. Deprecated and non-functional.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.setActive'\n      operationId: users_setActive\n      parameters:\n        - description: 'Authentication token. Requires scope: `users:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users:write'\n      tags:\n        - users\n  /users.setPhoto:\n    post:\n      description: Set the user profile photo\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.setPhoto'\n      operationId: users_setPhoto\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users.profile:write'\n      tags:\n        - users\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                image:\n                  description: File contents via `multipart/form-data`.\n                  type: string\n                crop_w:\n                  description: Width/height of crop box (always square)\n                  type: integer\n                token:\n                  description: 'Authentication token. Requires scope: `users.profile:write`'\n                  type: string\n                crop_y:\n                  description: Y coordinate of top-left corner of crop box\n                  type: integer\n                crop_x:\n                  description: X coordinate of top-left corner of crop box\n                  type: integer\n  /users.setPresence:\n    post:\n      description: Manually sets user presence.\n      externalDocs:\n        description: API method documentation\n        url: 'https://api.slack.com/methods/users.setPresence'\n      operationId: users_setPresence\n      parameters:\n        - description: 'Authentication token. Requires scope: `users:write`'\n          in: header\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Typical success response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default success template\n                type: object\n              examples:\n                response:\n                  value:\n                    ok: true\n        default:\n          description: Typical error response\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                description: Verbose schema not yet ready for this method.\n                properties:\n                  ok:\n                    $ref: '#/components/schemas/defs_ok_true'\n                required:\n                  - ok\n                title: Default error template\n                type: object\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n      security:\n        - slackAuth:\n            - 'users:write'\n      tags:\n        - users\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                presence:\n                  description: Either `auto` or `away`\n                  type: string\ncomponents:\n  securitySchemes:\n    slackAuth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://slack.com/oauth/authorize'\n          tokenUrl: 'https://slack.com/api/oauth.access'\n          scopes:\n            admin: admin\n            bot: Bot user scope\n            'channels:history': 'channels:history'\n            'channels:read': 'channels:read'\n            'channels:write': 'channels:write'\n            'chat:write': 'chat:write'\n            'chat:write:bot': Author messages as a bot\n            'chat:write:user': 'chat:write:user'\n            'conversations:history': 'conversations:history'\n            'conversations:read': 'conversations:read'\n            'conversations:write': 'conversations:write'\n            'dnd:read': 'dnd:read'\n            'dnd:write': 'dnd:write'\n            'emoji:read': 'emoji:read'\n            'files:read': 'files:read'\n            'files:write:user': 'files:write:user'\n            'groups:history': 'groups:history'\n            'groups:read': 'groups:read'\n            'groups:write': 'groups:write'\n            identity.basic: identity.basic\n            'im:history': 'im:history'\n            'im:read': 'im:read'\n            'im:write': 'im:write'\n            'links:write': 'links:write'\n            'mpim:history': 'mpim:history'\n            'mpim:read': 'mpim:read'\n            'mpim:write': 'mpim:write'\n            none: No scope required\n            'pins:read': 'pins:read'\n            'pins:write': 'pins:write'\n            'reactions:read': 'reactions:read'\n            'reactions:write': 'reactions:write'\n            'reminders:read': 'reminders:read'\n            'reminders:write': 'reminders:write'\n            'rtm:stream': 'rtm:stream'\n            'search:read': 'search:read'\n            'stars:read': 'stars:read'\n            'stars:write': 'stars:write'\n            'team:read': 'team:read'\n            tokens.basic: tokens.basic\n            'usergroups:read': 'usergroups:read'\n            'usergroups:write': 'usergroups:write'\n            'users.profile:read': 'users.profile:read'\n            'users.profile:write': 'users.profile:write'\n            'users:read': 'users:read'\n            'users:read.email': 'users:read.email'\n            'users:write': 'users:write'\n  schemas:\n    defs_bot_id:\n      pattern: '^B[A-Z0-9]{8}$'\n      title: Bot User ID\n      type: string\n    defs_channel:\n      pattern: '^[CGD][A-Z0-9]{8}$'\n      title: Channel-like conversation ID\n      type: string\n    defs_channel_id:\n      pattern: '^[C][A-Z0-9]{8}$'\n      title: Channel ID\n      type: string\n    defs_channel_name:\n      title: Name of a channel\n      type: string\n    defs_comment_id:\n      pattern: '^Fc[A-Z0-9]{8}$'\n      title: File Comment ID\n      type: string\n    defs_dm_id:\n      pattern: '^[D][A-Z0-9]{8}$'\n      title: Direct Message Channel ID\n      type: string\n    defs_file_id:\n      pattern: '^[F][A-Z0-9]{8}$'\n      title: File ID\n      type: string\n    defs_group_id:\n      pattern: '^[G][A-Z0-9]{8}$'\n      title: Private Channel ID\n      type: string\n    defs_invite_id:\n      title: Invite ID for an external shared channel\n      type: integer\n    defs_ok_false:\n      enum:\n        - false\n      title: default failure response\n      type: boolean\n    defs_ok_true:\n      enum:\n        - true\n      title: default success response\n      type: boolean\n    defs_room_id:\n      pattern: '^[R][A-Z0-9]{8}$'\n      title: Room ID for a slack call\n      type: string\n    defs_team:\n      pattern: '^[T][A-Z0-9]{8}$'\n      title: Team ID\n      type: string\n    defs_topic_purpose_creator:\n      pattern: '^[UW][A-Z0-9]{8}$|^$'\n      title: 'User ID or empty string, used for topic and purpose creation'\n      type: string\n    defs_ts:\n      pattern: '^\\d{10}\\.\\d{6}$'\n      title: Timestamp in format 0123456789.012345\n      type: string\n    defs_user_id:\n      pattern: '^[UW][A-Z0-9]{8}$'\n      title: User ID\n      type: string\n    objs_channel:\n      additionalProperties: true\n      properties:\n        accepted_user:\n          $ref: '#/components/schemas/defs_user_id'\n        created:\n          type: integer\n        creator:\n          $ref: '#/components/schemas/defs_user_id'\n        id:\n          $ref: '#/components/schemas/defs_channel_id'\n        is_archived:\n          type: boolean\n        is_channel:\n          type: boolean\n        is_general:\n          type: boolean\n        is_member:\n          type: boolean\n        is_moved:\n          type: integer\n        is_mpim:\n          type: boolean\n        is_org_shared:\n          type: boolean\n        is_pending_ext_shared:\n          type: boolean\n        is_private:\n          type: boolean\n        is_read_only:\n          type: boolean\n        is_shared:\n          type: boolean\n        last_read:\n          $ref: '#/components/schemas/defs_ts'\n        latest:\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/objs_message'\n              - nullable: true\n        members:\n          items:\n            $ref: '#/components/schemas/defs_user_id'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        name:\n          type: string\n        name_normalized:\n          type: string\n        num_members:\n          type: integer\n        pending_shared:\n          items:\n            $ref: '#/components/schemas/defs_team'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        previous_names:\n          items:\n            $ref: '#/components/schemas/defs_channel_name'\n          minItems: 0\n          type: array\n          uniqueItems: true\n        priority:\n          type: integer\n        purpose:\n          additionalProperties: true\n          properties:\n            creator:\n              $ref: '#/components/schemas/defs_topic_purpose_creator'\n            last_set:\n              type: integer\n            value:\n              type: string\n          required:\n            - value\n            - creator\n            - last_set\n          type: object\n        topic:\n          additionalProperties: true\n          properties:\n            creator:\n              $ref: '#/components/schemas/defs_topic_purpose_creator'\n            last_set:\n              type: integer\n            value:\n              type: string\n          required:\n            - value\n            - creator\n            - last_set\n          type: object\n        unlinked:\n          title: \u003e-\n            Field to determine whether a channel has ever been\n            shared/disconnected in the past\n          type: integer\n        unread_count:\n          type: integer\n        unread_count_display:\n          type: integer\n      required:\n        - id\n        - name\n        - created\n        - creator\n        - is_channel\n        - is_org_shared\n        - is_private\n        - is_mpim\n        - is_shared\n        - name_normalized\n        - members\n        - topic\n        - purpose\n      title: Channel Object\n      type: object\n    objs_comment:\n      additionalProperties: true\n      properties:\n        comment:\n          type: string\n        created:\n          type: integer\n        id:\n          $ref: '#/components/schemas/defs_comment_id'\n        is_intro:\n          type: boolean\n        pinned_to:\n          items:\n            $ref: '#/components/schemas/defs_channel'\n          type: array\n        reactions:\n          items:\n            $ref: '#/components/schemas/objs_reaction'\n          type: array\n        timestamp:\n          type: integer\n        user:\n          type: string\n      title: File Comment Object\n      type: object\n    objs_comments:\n      items: {}\n      title: file comments object\n      type: array\n    objs_conversation:\n      items:\n        anyOf:\n          - additionalProperties: true\n            properties:\n              accepted_user:\n                $ref: '#/components/schemas/defs_user_id'\n              created:\n                type: integer\n              creator:\n                $ref: '#/components/schemas/defs_user_id'\n              display_counts:\n                additionalProperties: true\n                properties:\n                  display_counts:\n                    type: integer\n                  guest_counts:\n                    type: integer\n                required:\n                  - display_counts\n                  - guest_counts\n                type: object\n              id:\n                $ref: '#/components/schemas/defs_channel'\n              is_archived:\n                type: boolean\n              is_channel:\n                type: boolean\n              is_ext_shared:\n                type: boolean\n              is_general:\n                type: boolean\n              is_group:\n                type: boolean\n              is_im:\n                type: boolean\n              is_member:\n                type: boolean\n              is_moved:\n                type: integer\n              is_mpim:\n                enum:\n                  - false\n                type: boolean\n              is_open:\n                type: boolean\n              is_org_shared:\n                type: boolean\n              is_pending_ext_shared:\n                type: boolean\n              is_private:\n                type: boolean\n              is_read_only:\n                type: boolean\n              is_shared:\n                type: boolean\n              last_read:\n                $ref: '#/components/schemas/defs_ts'\n              latest:\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/objs_message'\n                    - nullable: true\n              name:\n                type: string\n              name_normalized:\n                type: string\n              num_members:\n                type: integer\n              pending_shared:\n                items:\n                  $ref: '#/components/schemas/defs_team'\n                minItems: 0\n                type: array\n                uniqueItems: true\n              pin_count:\n                type: integer\n              previous_names:\n                items:\n                  $ref: '#/components/schemas/defs_channel_name'\n                minItems: 0\n                type: array\n                uniqueItems: true\n              priority:\n                type: integer\n              purpose:\n                additionalProperties: true\n                properties:\n                  creator:\n                    $ref: '#/components/schemas/defs_topic_purpose_creator'\n                  last_set:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - value\n                  - creator\n                  - last_set\n                type: object\n              shared_team_ids:\n                items:\n                  $ref: '#/components/schemas/defs_team'\n                minItems: 0\n                type: array\n                uniqueItems: true\n              shares:\n                items:\n                  additionalProperties: true\n                  properties:\n                    accepted_user:\n                      $ref: '#/components/schemas/defs_user_id'\n                    is_active:\n                      type: boolean\n                    team:\n                      $ref: '#/components/schemas/objs_team'\n                    user:\n                      $ref: '#/components/schemas/defs_user_id'\n                  required:\n                    - team\n                    - user\n                    - accepted_user\n                    - is_active\n                  type: object\n                minItems: 0\n                type: array\n                uniqueItems: true\n              timezone_count:\n                type: integer\n              topic:\n                additionalProperties: true\n                properties:\n                  creator:\n                    $ref: '#/components/schemas/defs_topic_purpose_creator'\n                  last_set:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - value\n                  - creator\n                  - last_set\n                type: object\n              unlinked:\n                title: \u003e-\n                  Field to determine whether a channel has ever been\n                  shared/disconnected in the past\n                type: integer\n              unread_count:\n                type: integer\n              unread_count_display:\n                type: integer\n              user:\n                $ref: '#/components/schemas/defs_user_id'\n            required:\n              - id\n              - name\n              - created\n              - creator\n              - is_archived\n              - is_channel\n              - is_general\n              - is_mpim\n              - is_group\n              - is_org_shared\n              - is_im\n              - is_shared\n              - is_private\n              - name_normalized\n              - topic\n              - purpose\n            title: Conversation object\n            type: object\n          - additionalProperties: true\n            properties:\n              accepted_user:\n                $ref: '#/components/schemas/defs_user_id'\n              created:\n                type: integer\n              creator:\n                $ref: '#/components/schemas/defs_user_id'\n              display_counts:\n                additionalProperties: true\n                properties:\n                  display_counts:\n                    type: integer\n                  guest_counts:\n                    type: integer\n                required:\n                  - display_counts\n                  - guest_counts\n                type: object\n              id:\n                $ref: '#/components/schemas/defs_channel'\n              is_archived:\n                type: boolean\n              is_channel:\n                type: boolean\n              is_ext_shared:\n                type: boolean\n              is_general:\n                type: boolean\n              is_group:\n                type: boolean\n              is_im:\n                type: boolean\n              is_member:\n                type: boolean\n              is_moved:\n                type: integer\n              is_mpim:\n                enum:\n                  - true\n                type: boolean\n              is_open:\n                type: boolean\n              is_org_shared:\n                type: boolean\n              is_pending_ext_shared:\n                type: boolean\n              is_private:\n                type: boolean\n              is_read_only:\n                type: boolean\n              is_shared:\n                type: boolean\n              last_read:\n                $ref: '#/components/schemas/defs_ts'\n              latest:\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/objs_message'\n                    - nullable: true\n              members:\n                items:\n                  $ref: '#/components/schemas/defs_user_id'\n                minItems: 0\n                type: array\n                uniqueItems: true\n              name:\n                type: string\n              name_normalized:\n                type: string\n              num_members:\n                type: integer\n              pending_shared:\n                items:\n                  $ref: '#/components/schemas/defs_team'\n                minItems: 0\n                type: array\n                uniqueItems: true\n              pin_count:\n                type: string\n              previous_names:\n                items:\n                  $ref: '#/components/schemas/defs_channel_name'\n                minItems: 0\n                type: array\n                uniqueItems: true\n              priority:\n                type: integer\n              purpose:\n                additionalProperties: true\n                properties:\n                  creator:\n                    $ref: '#/components/schemas/defs_topic_purpose_creator'\n                  last_set:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - value\n                  - creator\n                  - last_set\n                type: object\n              shared_team_ids:\n                items:\n                  $ref: '#/components/schemas/defs_team'\n                minItems: 0\n                type: array\n                uniqueItems: true\n              shares:\n                items:\n                  additionalProperties: true\n                  properties:\n                    accepted_user:\n                      $ref: '#/components/schemas/defs_user_id'\n                    is_active:\n                      type: boolean\n                    team:\n                      $ref: '#/components/schemas/objs_team'\n                    user:\n                      $ref: '#/components/schemas/defs_user_id'\n                  required:\n                    - team\n                    - user\n                    - accepted_user\n                    - is_active\n                  type: object\n                minItems: 0\n                type: array\n                uniqueItems: true\n              timezone_count:\n                type: integer\n              topic:\n                additionalProperties: true\n                properties:\n                  creator:\n                    $ref: '#/components/schemas/defs_topic_purpose_creator'\n                  last_set:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - value\n                  - creator\n                  - last_set\n                type: object\n              unlinked:\n                title: \u003e-\n                  Field to determine whether a channel has ever been\n                  shared/disconnected in the past\n                type: integer\n              unread_count:\n                type: integer\n              unread_count_display:\n                type: integer\n              user:\n                $ref: '#/components/schemas/defs_user_id'\n            required:\n              - id\n              - name\n              - created\n              - creator\n              - is_archived\n              - is_channel\n              - is_general\n              - is_member\n              - is_mpim\n              - is_group\n              - is_org_shared\n              - is_im\n              - is_shared\n              - is_private\n              - name_normalized\n              - topic\n              - purpose\n            title: Conversation MPIM Object\n            type: object\n          - additionalProperties: true\n            properties:\n              created:\n                type: integer\n              id:\n                $ref: '#/components/schemas/defs_dm_id'\n              is_ext_shared:\n                type: boolean\n              is_im:\n                type: boolean\n              is_org_shared:\n                type: boolean\n              is_shared:\n                type: boolean\n              is_user_deleted:\n                type: boolean\n              priority:\n                type: integer\n              user:\n                $ref: '#/components/schemas/defs_user_id'\n            required:\n              - id\n              - created\n              - is_im\n              - is_org_shared\n              - user\n              - is_user_deleted\n              - priority\n            title: Conversation IM Channel Object from conversations.* methods\n            type: object\n    objs_file:\n      additionalProperties: true\n      properties:\n        channels:\n          additionalProperties: true\n          items:\n            $ref: '#/components/schemas/defs_channel_id'\n          type: array\n        comments_count:\n          type: integer\n        created:\n          type: integer\n        display_as_bot:\n          type: boolean\n        editable:\n          type: boolean\n        external_type:\n          type: string\n        filetype:\n          type: string\n        groups:\n          items: {}\n          type: array\n        id:\n          $ref: '#/components/schemas/defs_file_id'\n        image_exif_rotation:\n          type: integer\n        ims:\n          items: {}\n          type: array\n        is_external:\n          type: boolean\n        is_public:\n          type: boolean\n        mimetype:\n          type: string\n        mode:\n          type: string\n        name:\n          type: string\n        original_h:\n          type: integer\n        original_w:\n          type: integer\n        permalink:\n          format: uri\n          type: string\n        permalink_public:\n          format: uri\n          type: string\n        pinned_to:\n          items:\n            $ref: '#/components/schemas/defs_channel'\n          type: array\n        pretty_type:\n          type: string\n        public_url_shared:\n          type: boolean\n        reactions:\n          items:\n            $ref: '#/components/schemas/objs_reaction'\n          type: array\n        size:\n          type: integer\n        thumb_1024:\n          format: uri\n          type: string\n        thumb_1024_h:\n          type: integer\n        thumb_1024_w:\n          type: integer\n        thumb_160:\n          format: uri\n          type: string\n        thumb_360:\n          format: uri\n          type: string\n        thumb_360_h:\n          type: integer\n        thumb_360_w:\n          type: integer\n        thumb_480:\n          format: uri\n          type: string\n        thumb_480_h:\n          type: integer\n        thumb_480_w:\n          type: integer\n        thumb_64:\n          format: uri\n          type: string\n        thumb_720:\n          format: uri\n          type: string\n        thumb_720_h:\n          type: integer\n        thumb_720_w:\n          type: integer\n        thumb_80:\n          format: uri\n          type: string\n        thumb_800:\n          format: uri\n          type: string\n        thumb_800_h:\n          type: integer\n        thumb_800_w:\n          type: integer\n        thumb_960:\n          format: uri\n          type: string\n        thumb_960_h:\n          type: integer\n        thumb_960_w:\n          type: integer\n        timestamp:\n          type: integer\n        title:\n          type: string\n        url_private:\n          format: uri\n          type: string\n        url_private_download:\n          format: uri\n          type: string\n        user:\n          type: string\n        username:\n          type: string\n      title: file object\n      type: object\n    objs_file_object_with_id_only:\n      $ref: '#/components/schemas/defs_file_id'\n      additionalProperties: true\n      title: file object with ID only\n      type: string\n    objs_group:\n      additionalProperties: true\n      properties:\n        created:\n          type: integer\n        creator:\n          $ref: '#/components/schemas/defs_user_id'\n        id:\n          $ref: '#/components/schemas/defs_group_id'\n        is_archived:\n          type: boolean\n        is_group:\n          type: boolean\n        is_moved:\n          type: integer\n        is_mpim:\n          type: boolean\n        is_open:\n          type: boolean\n        is_pending_ext_shared:\n          type: boolean\n        last_read:\n          $ref: '#/components/schemas/defs_ts'\n        latest:\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/objs_message'\n              - nullable: true\n        members:\n          items:\n            $ref: '#/components/schemas/defs_user_id'\n          minItems: 1\n          type: array\n          uniqueItems: true\n        name:\n          type: string\n        name_normalized:\n          type: string\n        priority:\n          type: integer\n        purpose:\n          additionalProperties: true\n          properties:\n            creator:\n              $ref: '#/components/schemas/defs_topic_purpose_creator'\n            last_set:\n              type: integer\n            value:\n              type: string\n          required:\n            - value\n            - creator\n            - last_set\n          type: object\n        topic:\n          additionalProperties: true\n          properties:\n            creator:\n              $ref: '#/components/schemas/defs_topic_purpose_creator'\n            last_set:\n              type: integer\n            value:\n              type: string\n          required:\n            - value\n            - creator\n            - last_set\n          type: object\n        unread_count:\n          type: integer\n        unread_count_display:\n          type: integer\n      required:\n        - id\n        - name\n        - is_group\n        - created\n        - creator\n        - name_normalized\n        - members\n        - topic\n        - purpose\n      title: Group object\n      type: object\n    objs_im:\n      additionalProperties: true\n      properties:\n        created:\n          type: integer\n        id:\n          $ref: '#/components/schemas/defs_dm_id'\n        is_im:\n          type: boolean\n        is_org_shared:\n          type: boolean\n        is_user_deleted:\n          type: boolean\n        priority:\n          type: integer\n        user:\n          $ref: '#/components/schemas/defs_user_id'\n      required:\n        - id\n        - is_im\n        - is_org_shared\n        - user\n        - created\n        - is_user_deleted\n      title: IM Object\n      type: object\n    objs_inviting_user:\n      additionalProperties: true\n      properties:\n        id:\n          $ref: '#/components/schemas/defs_user_id'\n        is_app_user:\n          type: boolean\n        is_restricted:\n          type: boolean\n        is_ultra_restricted:\n          type: boolean\n        name:\n          type: string\n        profile:\n          $ref: '#/components/schemas/objs_user_profile_shortest'\n        real_name:\n          type: string\n        team_id:\n          $ref: '#/components/schemas/defs_team'\n        updated:\n          type: number\n      required:\n        - id\n        - team_id\n        - name\n        - profile\n        - is_restricted\n        - is_ultra_restricted\n        - updated\n        - is_app_user\n      type: object\n    objs_message:\n      additionalProperties: true\n      properties:\n        attachments:\n          items:\n            additionalProperties: true\n            properties:\n              fallback:\n                type: string\n              id:\n                type: integer\n              image_bytes:\n                type: integer\n              image_height:\n                type: integer\n              image_url:\n                type: string\n              image_width:\n                type: integer\n            required:\n              - id\n            type: object\n          minItems: 1\n          type: array\n          uniqueItems: true\n        bot_id:\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/defs_bot_id'\n              - title: Nil bot_id set when display_as_bot is false\n                nullable: true\n        comment:\n          $ref: '#/components/schemas/objs_comment'\n        display_as_bot:\n          type: boolean\n        file:\n          $ref: '#/components/schemas/objs_file'\n        icons:\n          additionalProperties: true\n          properties:\n            emoji:\n              type: string\n          type: object\n        inviter:\n          $ref: '#/components/schemas/defs_user_id'\n        is_intro:\n          type: boolean\n        last_read:\n          $ref: '#/components/schemas/defs_ts'\n        name:\n          type: string\n        old_name:\n          type: string\n        permalink:\n          format: uri\n          type: string\n        pinned_to:\n          items:\n            $ref: '#/components/schemas/defs_channel'\n          type: array\n        purpose:\n          type: string\n        reactions:\n          items:\n            $ref: '#/components/schemas/objs_reaction'\n          type: array\n        replies:\n          items:\n            additionalProperties: true\n            properties:\n              ts:\n                $ref: '#/components/schemas/defs_ts'\n              user:\n                $ref: '#/components/schemas/defs_user_id'\n            required:\n              - user\n              - ts\n            type: object\n          type: array\n        reply_count:\n          type: integer\n        source_team:\n          $ref: '#/components/schemas/defs_team'\n        subscribed:\n          type: boolean\n        subtype:\n          type: string\n        team:\n          $ref: '#/components/schemas/defs_team'\n        text:\n          type: string\n        thread_ts:\n          $ref: '#/components/schemas/defs_ts'\n        topic:\n          type: string\n        ts:\n          $ref: '#/components/schemas/defs_ts'\n        type:\n          type: string\n        unread_count:\n          type: integer\n        upload:\n          type: boolean\n        user:\n          $ref: '#/components/schemas/defs_user_id'\n        user_profile:\n          $ref: '#/components/schemas/objs_user_profile_short'\n        user_team:\n          $ref: '#/components/schemas/defs_team'\n        username:\n          type: string\n      required:\n        - text\n        - type\n        - ts\n      title: Message object\n      type: object\n    objs_paging:\n      additionalProperties: true\n      properties:\n        count:\n          type: integer\n        page:\n          type: integer\n        pages:\n          type: integer\n        total:\n          type: integer\n      required:\n        - count\n        - page\n        - total\n      title: paging object for files\n      type: object\n    objs_reaction:\n      additionalProperties: true\n      properties:\n        count:\n          type: integer\n        name:\n          type: string\n        users:\n          items:\n            $ref: '#/components/schemas/defs_user_id'\n          type: array\n      required:\n        - name\n        - users\n        - count\n      title: Reaction object\n      type: object\n    objs_team:\n      additionalProperties: true\n      properties:\n        domain:\n          type: string\n        email_domain:\n          type: string\n        enterprise_id:\n          type: string\n        enterprise_name:\n          type: string\n        has_compliance_export:\n          type: boolean\n        icon:\n          properties:\n            image_102:\n              type: string\n            image_132:\n              type: string\n            image_230:\n              type: string\n            image_34:\n              type: string\n            image_44:\n              type: string\n            image_68:\n              type: string\n            image_88:\n              type: string\n            image_default:\n              type: boolean\n          type: object\n        id:\n          $ref: '#/components/schemas/defs_team'\n        name:\n          type: string\n      required:\n        - id\n        - name\n        - domain\n        - email_domain\n        - icon\n      title: Team Object\n      type: object\n    objs_team_profile_field:\n      additionalProperties: true\n      properties:\n        field_name:\n          type: string\n        hint:\n          type: string\n        id:\n          pattern: '^X[a-zA-Z0-9]{9}$'\n          type: string\n        is_hidden:\n          type: boolean\n        label:\n          type: string\n        options:\n          items:\n            type: string\n          type: array\n        ordering:\n          type: number\n        possible_values:\n          items:\n            type: string\n          type: array\n        type:\n          enum:\n            - text\n            - date\n            - link\n            - mailto\n            - options_list\n            - user\n          type: string\n      required:\n        - id\n        - ordering\n        - label\n        - hint\n        - type\n        - options\n      type: object\n    objs_user:\n      additionalProperties: true\n      properties:\n        color:\n          pattern: '^[a-fA-F0-9]{6}$'\n          type: string\n        deleted:\n          type: boolean\n        has_2fa:\n          type: boolean\n        id:\n          $ref: '#/components/schemas/defs_user_id'\n        is_admin:\n          type: boolean\n        is_app_user:\n          type: boolean\n        is_bot:\n          type: boolean\n        is_owner:\n          type: boolean\n        is_primary_owner:\n          type: boolean\n        is_restricted:\n          type: boolean\n        is_ultra_restricted:\n          type: boolean\n        locale:\n          type: string\n        name:\n          type: string\n        profile:\n          $ref: '#/components/schemas/objs_user_profile'\n        real_name:\n          type: string\n        team_id:\n          $ref: '#/components/schemas/defs_team'\n        tz:\n          type: string\n        tz_label:\n          type: string\n        tz_offset:\n          type: number\n        updated:\n          type: number\n      required:\n        - id\n        - team_id\n        - name\n        - deleted\n        - color\n        - real_name\n        - tz\n        - tz_label\n        - tz_offset\n        - profile\n        - is_admin\n        - is_owner\n        - is_primary_owner\n        - is_restricted\n        - is_ultra_restricted\n        - is_bot\n        - updated\n        - is_app_user\n      type: object\n    objs_user_profile:\n      additionalProperties: true\n      properties:\n        always_active:\n          type: boolean\n        avatar_hash:\n          type: string\n        display_name:\n          type: string\n        display_name_normalized:\n          type: string\n        email:\n          format: email\n          type: string\n        fields:\n          type: object\n        first_name:\n          type: string\n        guest_channels:\n          type: string\n        image_192:\n          format: uri\n          type: string\n        image_24:\n          format: uri\n          type: string\n        image_32:\n          format: uri\n          type: string\n        image_48:\n          format: uri\n          type: string\n        image_512:\n          format: uri\n          type: string\n        image_72:\n          format: uri\n          type: string\n        image_original:\n          format: uri\n          type: string\n        last_name:\n          type: string\n        phone:\n          type: string\n        real_name:\n          type: string\n        real_name_normalized:\n          type: string\n        skype:\n          type: string\n        status_emoji:\n          type: string\n        status_expiration:\n          type: integer\n        status_text:\n          type: string\n        status_text_canonical:\n          type: string\n        team:\n          $ref: '#/components/schemas/defs_team'\n        title:\n          type: string\n      required:\n        - real_name\n        - display_name\n        - avatar_hash\n        - real_name_normalized\n        - display_name_normalized\n        - image_24\n        - image_32\n        - image_48\n        - image_72\n        - image_192\n      title: User profile object\n      type: object\n    objs_user_profile_short:\n      additionalProperties: true\n      properties:\n        avatar_hash:\n          type: string\n        display_name:\n          type: string\n        first_name:\n          type: string\n        image_72:\n          format: uri\n          type: string\n        is_restricted:\n          type: boolean\n        is_ultra_restricted:\n          type: boolean\n        name:\n          type: string\n        real_name:\n          type: string\n        team:\n          $ref: '#/components/schemas/defs_team'\n      required:\n        - avatar_hash\n        - image_72\n        - first_name\n        - real_name\n        - display_name\n        - team\n        - name\n        - is_restricted\n        - is_ultra_restricted\n      type: object\n    objs_user_profile_shortest:\n      additionalProperties: true\n      properties:\n        avatar_hash:\n          type: string\n        display_name:\n          type: string\n        first_name:\n          type: string\n        image_72:\n          format: uri\n          type: string\n        real_name:\n          type: string\n        team:\n          $ref: '#/components/schemas/defs_team'\n      required:\n        - avatar_hash\n        - image_72\n        - first_name\n        - real_name\n        - display_name\n        - team\n      type: object\n"
		}
	},
	"Error": "parse: parse spec: paths: /reactions.get: get: operation \"reactions_get\": responses: 200: content: \"application/json\": schema: parse schema: object cannot contain 'items' field"
}