{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EMResearch/EvoMaster"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "core-it/src/test/resources/APIs_guru/amentum.space/gravity/1.1.1/openapi.yaml",
			"byteSize": 7551,
			"content": "openapi: 3.0.0\nservers:\n  - url: \"\"\ninfo:\n  contact:\n    x-twitter: amentumspace\n  description: |\n    The gravitational field of the earth is non-uniform.  The \u003ca href='https://en.wikipedia.org/wiki/Geoid'\u003egeoid\u003c/a\u003e is the shape the\n     ocean surface would take if only gravity and the rotation of the Earth\n      were considered. The geoid is the surface that defines zero elevation.\u003cbr\u003e\u003cbr\u003e\n\n    The geoid height is the difference between an ideal reference ellipsoid  and the geoid.\u003cbr\u003e\u003cbr\u003e\n    The gravity anomaly is the difference between the acceleration due to gravity on the Earth's surface and the value calculated assuming the reference ellipsoid.\u003cbr\u003e\u003cbr\u003e\n    The official Earth Gravitational Model \u003ca href=https://en.wikipedia.org/wiki/Earth_Gravitational_Model#EGM2008/\u003eEGM2008\u003c/a\u003e was developed and  released to the public by the National Geospatial-Intelligence Agency (NGA).\u003cbr\u003e\u003cbr\u003e\n    Our EGM2008 API provides on-demand access to the EGM2008 model, as implemented by the open-source GeographicLib  \u003ca href=https://geographiclib.sourceforge.io/html/gravity.html\u003eGravity\u003c/a\u003e library.\u003cbr\u003e\u003cbr\u003e\n    API requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from  \u003ca href='https://developer.amentum.io'\u003ehere\u003c/a\u003e. \u003cbr\u003e\u003cbr\u003e \n    Amentum Pty Ltd is not responsible nor liable for any loss or damage of any sort incurred as a result of using the API. \u003cbr\u003e\u003cbr\u003e\n    Copyright \u003ca href='https://amentum.space'\u003eAmentum Pty Ltd\u003c/a\u003e 2021.\n  title: Gravity API\n  version: 1.1.1\n  x-apisguru-categories:\n    - location\n    - open_data\n  x-logo:\n    altText: Amentum Aerospace\n    backgroundColor: \"#FFFFFF\"\n    url: https://twitter.com/amentumspace/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://gravity.amentum.space//openapi.json\n      version: \"3.0\"\n  x-providerName: amentum.space\n  x-serviceName: gravity\ntags:\n  - description: |\n      Calculate geoid height and gravity anomaly values using the EGM2008 model\n    name: egm2008\n    x-displayName: EGM2008 API\npaths:\n  /egm2008/geoid_height:\n    get:\n      description: |\n        for a given latitude / longitude. \n      operationId: app.api_egm2008.endpoints.EGM2008.calculate_height\n      parameters:\n        - $ref: \"#/components/parameters/Latitude\"\n        - $ref: \"#/components/parameters/Longitude\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                height:\n                  units: m\n                  value: 45.88107058892659\n              schema:\n                $ref: \"#/components/schemas/Height\"\n          description: Successful geoid height calculation\n      summary: |\n        Calculate the geoid height\n      tags:\n        - egm2008\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://gravity.amentum.io/egm2008/geoid_height?latitude=-45\u0026longitude=45\" -H \"API-Key: \u003cyour_key\u003e\" -H  \"accept: application/json\"\n        - lang: Python\n          source: |\n            import requests\n\n            headers = {\"API-Key\" : \"\u003cadd_your_key\u003e\"}\n\n            params = {\n              \"latitude\" : \"-45\",\n              \"longitude\" : \"45\"\n            }\n\n            # Make the API call\n            try:\n              response = requests.get(\n                \"https://gravity.amentum.io/egm2008/geoid_height\",\n                params=params, headers=headers)\n              response_json = response.json()\n              response.raise_for_status()\n            except requests.exceptions.HTTPError as e:\n              print(response_json['error'])\n            else:\n              # Extract the height\n              height = response_json['height']['value']\n              h_unit = response_json['height']['units']\n              print(\"Height: \", height, h_unit)\n  /egm2008/gravity_anomaly:\n    get:\n      description: |\n        for a given latitude / longitude.\n      operationId: app.api_egm2008.endpoints.EGM2008.calculate_anomaly\n      parameters:\n        - $ref: \"#/components/parameters/Latitude\"\n        - $ref: \"#/components/parameters/Longitude\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                eta:\n                  units: arcsec\n                  value: -0.9413662219916251\n                gravity_anomaly:\n                  units: mGal\n                  value: 27.954737031742376\n                xi:\n                  units: arcsec\n                  value: 1.371151956763653\n              schema:\n                $ref: \"#/components/schemas/Anomaly\"\n          description: Successful anomaly calculation\n      summary: |\n        Calculate gravity anomaly values\n      tags:\n        - egm2008\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://gravity.amentum.io/egm2008/gravity_anomaly?latitude=-45\u0026longitude=45\"  -H \"API-Key: \u003cyour_key\u003e\" -H  \"accept: application/json\"\n        - lang: Python\n          source: |\n            import requests\n\n            headers = {\"API-Key\" : \"\u003cadd_your_key\u003e\"}\n\n            params = {\n              \"latitude\" : \"-45\",\n              \"longitude\" : \"45\"\n            }\n\n            # Make the API call\n            try:\n              response = requests.get(\n                \"https://gravity.amentum.io/egm2008/gravity_anomaly\",\n                params=params, headers=headers)\n              response_json = response.json()\n              response.raise_for_status()\n            except requests.exceptions.HTTPError as e:\n              print(response_json['error'])\n            else:\n              # Extract eta\n              eta = response_json['eta']['value']\n              e_unit = response_json['eta']['units']\n              print(\"Eta: \", eta, e_unit)\n\n              # Extract gravity anomaly\n              ga = response_json['gravity_anomaly']['value']\n              ga_unit = response_json['gravity_anomaly']['units']\n              print(\"Gravity Anomaly: \", ga, ga_unit)\n\n              # Extract xi\n              xi = response_json['xi']['value']\n              xi_unit = response_json['xi']['units']\n              print(\"Xi: \", xi, xi_unit)\ncomponents:\n  parameters:\n    Latitude:\n      description: Geographic latitude (-90 to 90 deg).\n      in: query\n      name: latitude\n      required: true\n      schema:\n        example: -45\n        type: number\n    Longitude:\n      description: Geographic longitude (-180 to 180 deg).\n      in: query\n      name: longitude\n      required: true\n      schema:\n        example: 45\n        type: number\n  schemas:\n    Anomaly:\n      properties:\n        eta:\n          description: Eta (arcsec) - easterly component of deflection of vertical.\n          properties:\n            units:\n              type: string\n            value:\n              type: number\n          type: object\n        gravity_anomaly:\n          description: |\n            Gravity anomaly (mGal)\n          properties:\n            units:\n              type: string\n            value:\n              type: number\n          type: object\n        xi:\n          description: |\n            Xi (arcsec) - northerly component of deflection of vertical.\n          properties:\n            units:\n              type: string\n            value:\n              type: number\n          type: object\n      type: object\n    Height:\n      properties:\n        height:\n          description: |\n            Geoid height (m)\n          properties:\n            units:\n              type: string\n            value:\n              type: number\n          type: object\n      type: object\n",
			"canonicalURL": "/github.com/EMResearch/EvoMaster@910784d611073e73d97ffc611421bbda37d78bb7/-/blob/core-it/src/test/resources/APIs_guru/amentum.space/gravity/1.1.1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EMResearch/EvoMaster/blob/910784d611073e73d97ffc611421bbda37d78bb7/core-it/src/test/resources/APIs_guru/amentum.space/gravity/1.1.1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse servers: at 1:6306: server URL must not be empty"
}