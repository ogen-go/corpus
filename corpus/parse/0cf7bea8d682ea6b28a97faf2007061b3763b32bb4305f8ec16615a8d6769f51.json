{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/scale"
		},
		"file": {
			"name": "recipe.yml",
			"size": 0,
			"path": "scale/docs/rest/v6/recipe.yml",
			"byteSize": 24275,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Recipe Services\n  version: v6\npaths:\n  /recipes/:\n    get:\n      operationId: _rest_v6_recipe_list\n      summary: Recipe List\n      description: Returns a list of all recipes\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n              Defaults to 100, and can be anywhere from 1-1000.\n        - in: query\n          name: started\n          schema:\n            type: string\n            format: date-time\n          description: The start of the time range to query\n        - in: query\n          name: ended\n          schema:\n            type: string\n            format: date-time\n          description: End of the time range to query, defaults to the current time\n        - in: query\n          name: source_started\n          schema:\n            type: string\n            format: date-time\n          description: The start of the source time range to query\n        - in: query\n          name: source_ended\n          schema:\n            type: string\n            format: date-time\n          description: End of the source time range to query, defaults to the current time\n        - in: query\n          name: source_sensor_class\n          schema:\n            type: string\n          description: Return only recipes for the given source sensor class.\n              Duplicate it to filter by multiple values.\n        - in: query\n          name: source_sensor\n          schema:\n            type: string\n          description: Return only recipes for the given source sensor.\n              Duplicate it to filter by multiple values.\n        - in: query\n          name: source_collection\n          schema:\n            type: string\n          description: Return only recipes for the given source collection.\n              Duplicate it to filter by multiple values.\n        - in: query\n          name: source_task\n          schema:\n            type: string\n          description: Return only recipes for the given source task.\n              Duplicate it to filter by multiple values.\n        - in: query\n          name: recipe_id\n          schema:\n            type: integer\n          description: Return only recipes with a given identifier.\n              Duplicate it to filter by multiple values.\n        - in: query\n          name: recipe_type_id\n          schema:\n            type: integer\n          description: Return only recipes with a given recipe type identifier.\n              Duplicate it to filter by multiple values.\n        - in: query\n          name: recipe_type_name\n          schema:\n            type: string\n          description: Return only recipes with a given recipe type name.\n              Duplicate it to filter by multiple values.\n        - in: query\n          name: batch_id\n          schema:\n            type: integer\n          description: Return only recipes with the given batch identifier.\n              Duplicate it to filter by multiple values.\n        - in: query\n          name: is_superseded\n          schema:\n            type: boolean\n          description: Return only recipes that match this value, indicating if the recipe\n              has/has not been superseded\n        - in: query\n          name: is_completed\n          schema:\n            type: boolean\n          description: Return only recipes that match this value, indicating if the recipe\n              has/has not been completed\n        - in: query\n          name: order\n          schema:\n            type: string\n          description: \"One or more fields to use when ordering the results.\n                        Duplicate it to multi-sort, (ex: order=host_name\u0026order=created)\n                        Prefix fields with a dash to reverse the sort, (ex: order=-created)\"\n        - in: query\n          name: root_recipe_id\n          schema:\n            type: integer\n          description: Return only recipes with a given parent recipe identifier.\n              Duplicate it to filter by multiple values.\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/recipe_list'\n    post:\n      operationId: _rest_v6_recipe_post\n      description: creates a new recipe and adds it to the queue\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/recipe_post'\n      responses:\n        '201':\n          description: |-\n            201 CREATED response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/recipe_details'\n                \n  /recipes/{id}/:\n    get:\n      operationId: _rest_v6_recipe_details\n      summary: Recipe Details\n      description: Returns detailed information about the recipe with the specified id\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          description: id of an existing recipe type\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/recipe_detail'\n\n  /recipes/{id}/input_files/:\n    get:\n      operationId: _rest_v6_recipe_input_files\n      summary: Recipe Input Files\n      description: Returns detailed information about input files associated with a given Recipe ID.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: id of an existing recipe\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: The page of the results to return. Defaults to 1.\n      - in: query\n        name: page_size\n        schema:\n          type: integer\n        description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n      - in: query\n        name: started\n        schema:\n          type: string\n          format: date-time\n        description: The start of the time range to query\n      - in: query\n        name: ended\n        schema:\n          type: string\n          format: date-time\n        description: End of the time range to query, defaults to the current time\n      - in: query\n        name: time_field\n        schema:\n          type: string\n        description: \"Indicates the time field(s) that *started* and *ended*\n                      will use for time filtering. Valid values are: *last_modified*,\n                      *data* and *source*. The default value is *last_modified*.\"\n      - in: query\n        name: file_name\n        schema:\n          type: string\n        description: Returns only input files with this file name.\n      - in: query\n        name: recipe_input\n        schema:\n          type: string\n        description: Returns files for this recipe input.\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/file_list'\n\n  /recipes/{id}/reprocess/:\n    post:\n      operationId: _rest_v6_recipe_reprocess\n      summary: Reprocess Recipe\n      description: Creates a new recipe using its latest type revision by superseding an existing recipe and associated|\n        jobs. Note that if the recipe type definition has not changed since the recipe was created, then one or more   |\n        job names must be specified to force the recipe to be re-processed. A recipe that is already superseded cannot |\n        be re-processed again.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/reprocess_post'\n      responses:\n        '202':\n          description: 202 accepted\n\ncomponents:\n  schemas:\n    recipe_list:\n      title: Recipe List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters \n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/recipe'\n          description: List of Recipe objects\n\n    recipe_base:\n      title: Recipe Base\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        recipe_type:\n          $ref: '#/components/schemas/recipe_type_base'\n        recipe_type_rev:\n          type: integer\n          example: 1\n        event:\n          $ref: '#/components/schemas/event_base'\n\n    recipe:\n      title: Recipe\n      allOf:\n        - ref: '#/components/schemas/recipe_base'\n        - type: object\n          properties:\n            recipe_type_rev:\n              $ref: '#/components/schemas/recipe_type_revision_base'\n            event:\n              $ref: '#/components/schemas/event_base'\n            recipe:\n              $ref: '#/components/schemas/recipe_base'\n            batch:\n              $ref: '#/components/schemas/batch_base'\n            is_superseded:\n              type: boolean\n              description: Whether this recipe has been replaced and is now obsolete.\n              example: false\n            superseded_recipe:\n              type: integer\n              description: The previous recipe in the chain that was superseded by this recipe.\n              example: 1\n            input_file_size:\n              type: number\n              description: The amount of disk space in MiB required for input files for this recipe.\n              example: 1.0\n            source_started:\n              type: string\n              format: date-time\n              description: When collection of the source file started.\n              example: 2015-09-10T15:24:53.503Z\n            source_ended:\n              type: string\n              format: date-time\n              description: When collection of the source file ended.\n              example: 2015-09-10T15:24:53.503Z\n            source_sensor_class:\n              type: string\n              description: The class of sensor used to produce the source file.\n              example: classA\n            source_sensor:\n              type: string\n              description: The specific identifier of the sensor used to produce the source file.\n              example: 1\n            source_collection:\n              type: string\n              description: The collection of the source file.\n              example: 12345\n            source_task:\n              type: string\n              description: The task that produced the source file.\n              example: my-task\n            jobs_total:\n              type: integer\n              description: The total count of jobs within this recipe\n              example: 1\n            jobs_pending:\n              type: integer\n              description: The count of PENDING jobs within this recipe\n              example: 1\n            jobs_blocked:\n              type: integer\n              description: The count of BLOCKED jobs within this recipe\n              example: 1\n            jobs_queued:\n              type: integer\n              description: The count of QUEUED jobs within this recipe\n              example: 1\n            jobs_running:\n              type: integer\n              description: The count of RUNNING jobs within this recipe\n              example: 1\n            jobs_failed:\n              type: integer\n              description: The count of FAILED jobs within this recipe\n              example: 1\n            jobs_completed:\n              type: integer\n              description: The count of COMPLETED jobs within this recipe\n              example: 1\n            jobs_canceled:\n              type: integer\n              description: The count of CANCELED jobs within this recipe\n              example: 1\n            sub_recipes_total:\n              type: integer\n              description: The total count of sub-recipes within this recipe\n              example: 1\n            sub_recipes_completed:\n              type: integer\n              description: The count of completed sub-recipes within this recipe\n              example: 1\n            is_completed:\n              type: boolean\n              description: Whether this recipe is completed\n              example: true\n            created:\n              type: string\n              format: date-time\n              description: When the associated database model was initially created.\n              example: 2015-09-10T15:24:53.503Z\n            completed:\n              type: string\n              format: date-time\n              description: When every job and sub-recipe in this was completed successfully. |\n                This field will remain null if a job or sub-recipe in the recipe is blocked or failed.\n              example: 2015-09-10T15:24:53.987Z\n            superseded:\n              type: string\n              format: date-time\n              description: When the the recipe became superseded by another recipe.\n              example: 2015-09-10T15:24:53.987Z\n            last_modified:\n              type: string\n              format: date-time\n              description: When the associated database model was last saved.\n              example: 2015-09-10T15:24:53.987Z\n              \n    recipe_detail:\n      title: Recipe Details\n      allOf:\n        - ref: '#/components/schemas/recipe'\n        - type: object\n          properties:\n            recipe_type_rev:\n              $ref: './recipe_type.yml#/components/schemas/recipe_type_revision_details'\n            event:\n              $ref: '#/components/schemas/event_details'\n            superseded_recipe:\n              $ref: '#/components/schemas/recipe_base'\n            superseded_by_recipe:\n              $ref: '#/components/schemas/recipe_base'\n            input:\n              $ref: './data.yml#/components/schemas/data'\n            details:\n              $ref: '#/components/schemas/recipe_instance'\n            job_types:\n              type: array\n              items:\n                $ref: './job_type.yml#/components/schemas/job_type_base'\n              description: List of Job Types in this recipe\n            sub_recipe_types:\n              type: array\n              items:\n                $ref: './recipe_type.yml#/components/schemas/recipe_type_base'\n              description: List of Sub Recipe Types in this recipe\n\n    recipe_post:\n      title: Recipe Post\n      type: object\n      required: [recipe_type_id,input]\n      properties:\n        recipe_type_id:\n          type: int\n          description: the ID of the recipe type\n        input:\n            description: The input data for the recipe.\n            $ref: './data.yml#/components/schemas/data'\n        configuration:\n            description: The configuration for the recipe.\n            $ref: '#/components/schemas/recipe_config'\n\n    recipe_instance:\n      title: Recipe Instance\n      type: object\n      required: [nodes]\n      properties:\n        nodes:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/recipe_instance_node'\n          description: List of Nodes in this recipe instance\n\n    recipe_instance_node:\n      title: Recipe Instance Node\n      type: object\n      required: [dependencies, node_type]\n      properties:\n        dependencies:\n          type: array\n          items:\n            $ref: '#/components/schemas/recipe_definition_dependency'\n        node_type:\n          type: object\n          additionalProperties:\n            oneOf:\n            - $ref: '#/components/schemas/condition_node_instance'\n            - $ref: '#/components/schemas/job_node_instance'\n            - $ref: '#/components/schemas/recipe_node_instance'\n\n    condition_node_instance:\n      title: Recipe Instance Condition Node\n      required: [node_type, condition_id, is_processed, is_accepted]\n      properties:\n        node_type:\n          type: string\n          enum: [condition]\n          description: the name of the node type\n        condition_id:\n          type: integer\n          description: the unique id of the condition\n          example: 1\n        is_processed:\n          type: boolean\n          description: Whether the condition has been processed (evaluated)\n          example: true\n        is_accepted:\n          type: boolean\n          description: Whether the condition has been accepted. If |\n            accepted, the nodes depending on the condition will be created and |\n            processed. If not accepted, the nodes depending on the condition   |\n            will not be created or processed.\n          example: true\n\n    job_node_instance:\n      title: Recipe Instance Job Node\n      required: [node_type, job_type_name, job_type_version, job_type_revision, job_id, status]\n      properties:\n        node_type:\n          type: string\n          enum: [job]\n          description: the name of the node type\n        job_type_name:\n          type: string\n          description: the name of the job type\n          example: my-job-type\n        job_type_version:\n          type: string\n          description: the job type version\n          example: 1.0.1\n        job_type_revision:\n          type: integer\n          description: the job type revision\n          example: 2\n        job_id:\n          type: integer\n          description: the unique id of the job\n          example: 1\n        status:\n          type: string\n          description: the job's status\n          example: COMPLETED\n\n    recipe_node_instance:\n      title: Recipe Instance Recipe Node\n      required: [node_type, recipe_type_name, recipe_type_revision, recipe_id, is_completed,\n                 jobs_total, jobs_pending, jobs_blocked, jobs_queued, jobs_running, jobs_failed,\n                 jobs_completed, jobs_canceled, sub_recipes_total, sub_recipes_completed]\n      properties:\n        node_type:\n          type: string\n          enum: [recipe]\n          description: the name of the node type\n        recipe_type_name:\n          type: string\n          description: the name of the recipe type\n          example: my-recipe-type\n        recipe_type_revision:\n          type: integer\n          description: the recipe type revision\n          example: 2\n        recipe_id:\n          type: integer\n          description: the unique id of the recipe\n          example: 1\n        is_completed:\n          type: boolean\n          description: Whether the recipe has completed or not\n          example: true\n        jobs_total:\n          type: integer\n          description: The total count of jobs within this recipe\n          example: 1\n        jobs_pending:\n          type: integer\n          description: The count of PENDING jobs within this recipe\n          example: 1\n        jobs_blocked:\n          type: integer\n          description: The count of BLOCKED jobs within this recipe\n          example: 1\n        jobs_queued:\n          type: integer\n          description: The count of QUEUED jobs within this recipe\n          example: 1\n        jobs_running:\n          type: integer\n          description: The count of RUNNING jobs within this recipe\n          example: 1\n        jobs_failed:\n          type: integer\n          description: The count of FAILED jobs within this recipe\n          example: 1\n        jobs_completed:\n          type: integer\n          description: The count of COMPLETED jobs within this recipe\n          example: 1\n        jobs_canceled:\n          type: integer\n          description: The count of CANCELED jobs within this recipe\n          example: 1\n        sub_recipes_total:\n          type: integer\n          description: The total count of sub-recipes within this recipe\n          example: 1\n        sub_recipes_completed:\n          type: integer\n          description: The count of completed sub-recipes within this recipe\n          example: 1\n\n    event_base:\n      title: Event Base\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n          example: PARSE\n        occurred:\n          type: string\n          format: date-time\n          description: When the trigger event occurred.\n          example: 2015-09-10T15:24:53.503Z\n    event_details:\n      allOf:\n        - ref: '#/components/schemas/event_base'\n        - title: Event Details\n        - type: object\n          properties:\n            description:\n              type: object\n              additionalProperties: true\n\n    reprocess_post:\n      title: Reprocess Post\n      required: [forced_nodes]\n      properties:\n        forced_nodes:\n          $ref: '#/components/schemas/forced_nodes'\n        revision_num:\n          type: integer\n          description: Specific revision of the recipe type that should be ran. \n            The revision will be used if this parameter is not specified.\n\n    forced_nodes:\n      title: Forced Nodes\n      required: [all]\n      properties:\n        all:\n          type: boolean\n          description: If true, then all nodes within the recipe should be forced to |\n            re-process and the 'nodes' and 'sub_recipes' fields should be omitted. If|\n            false, then the 'nodes' array is used to indicate which nodes should be |\n            forced to re-process.\n          example: false\n        nodes:\n          type: array\n          items:\n            type: string\n          description: An array listing the names of the recipe nodes that should be |\n            forced to re-process\n          example: [\"job_a_1\", \"job_a_2\", \"recipe_b\", \"recipe_c\"]\n        sub_recipes:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/forced_nodes'\n          description: A JSON object where the key names are the sub-recipe node names |\n            that are being forced to re-process. The values are forced nodes JSON |\n            objects that recursively define the nodes with the sub-recipe to force to |\n            reprocess.\n\n    recipe_config:\n      title: Recipe Configuration\n      type: object\n      required: ['output_workspaces']\n      properties:\n        version:\n          type: string\n          description: The version is an optional string value that defines the version of the\n            configuration used. This allows updates to be made to the specification while\n            maintaining backwards compatibility by allowing Scale to recognize an older version\n            and convert it to the current version. The default value for version if it is not included\n            is the latest version, which is currently 6. It is recommended, though not required, that\n            you include the version so that future changes to the specification will still accept your configuration.\n          example: 6\n        mounts:\n          type: object\n          additionalProperties:\n            oneOf:\n            - $ref: './job_type.yml#/components/schemas/host_mount'\n            - $ref: './job_type.yml#/components/schemas/volume_mount'\n        priority:\n          type: integer\n          description: The priority to use for scheduling the job off of the queue.\n            Jobs with a lower value will be processed before those with higher values\n          example: 100\n        output_workspaces:\n          type: array\n          items:\n            $ref: './job_type.yml#/components/schemas/output_workspace'\n        settings:\n          type: object\n          description: A JSON object representing the configuration for each setting\n            to provide to the job. Each key is the name of a setting defined in the\n            job’s Seed manifest and each value is the value to provide for that setting.\n          additionalProperties:\n            type: string"
		}
	},
	"Error": "parse: parse spec: paths: /recipes/{id}/: get: operation \"_rest_v6_recipe_details\": parameters: parse parameter \"id\": path parameters must be required"
}