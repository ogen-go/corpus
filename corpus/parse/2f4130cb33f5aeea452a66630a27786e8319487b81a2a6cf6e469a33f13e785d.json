{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/42Crunch/vscode-openapi"
		},
		"file": {
			"name": "v3.spaces3.yaml",
			"size": 0,
			"path": "tests/snippets/v3.spaces3.yaml",
			"byteSize": 1931,
			"content": "openapi: 3.0.0\ninfo:\n   title: API Title\n   version: '1.0'\nservers:\n   - url: \"https://elvis.bom/v1\"\n     description: Server description\n   - url: https://api.server.test/v1\n     description: Server description\ncomponents:\n   schemas:\n      schemasKey:\n         type: object\n         properties:\n            property:\n               type: integer\n      name:\n         type: object\n         properties:\n            property:\n               type: integer\n   responses:\n      responsesKey:\n         description: ''\n         content:\n            application/json:\n               schema: {}\n      name:\n         description: ''\n         content:\n            application/json:\n               schema: {}\n   parameters:\n      parametersKey:\n         name: name\n         in: query\n         required: true\n         description: ''\n      name:\n         name: name\n         in: query\n         required: true\n         description: ''\n   securitySchemes:\n      schemeBasic:\n         type: http\n         scheme: basic\n      schemeApiKey:\n         type: apiKey\n         name: api_key\n         in: query\n      schemeJWT:\n         type: http\n         scheme: bearer\n         bearerFormat: JWT\n      schemeOauth2Access:\n         type: oauth2\n         flows:\n            authorizationCode:\n               authorizationUrl: https://domain.test/api/oauth/dialog\n               tokenUrl: https://domain.test/api/oauth/token\n               scopes:\n                  read: example read scope\n                  write: example write scope\npaths:\n   /path1:\n      put:\n         description: ''\n         parameters: []\n         responses:\n            '200':\n               description: OK\n      get:\n         description: ''\n         parameters: []\n         responses:\n            '200':\n               description: OK\n   /name:\n      get:\n         description: ''\n         parameters: []\n         responses:\n            '200':\n               description: OK\n",
			"canonicalURL": "/github.com/42Crunch/vscode-openapi@203dcf7dfc05668700f4d2c570d4f596a6e1b9f3/-/blob/tests/snippets/v3.spaces3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/42Crunch/vscode-openapi/blob/203dcf7dfc05668700f4d2c570d4f596a6e1b9f3/tests/snippets/v3.spaces3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"name\": at 1:37: parameter MUST contain either a schema property, or a content property"
}