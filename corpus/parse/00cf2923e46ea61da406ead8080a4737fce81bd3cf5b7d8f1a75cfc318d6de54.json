{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcsaorg/DCSA-OpenAPI"
		},
		"file": {
			"name": "cs_v1.0.0.yaml",
			"size": 0,
			"path": "cs/v1/cs_v1.0.0.yaml",
			"byteSize": 19231,
			"content": "openapi: 3.0.3\ninfo:\n  version: 1.0.0\n  title: DCSA OpenAPI specification for Commercial Schedules - Alpha 1\n  description: |\n    API specification issued by DCSA.org.\n    \n    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/cs/v1#v100). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.\n\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Digital Container Shipping Association (DCSA)\n    url: https://dcsa.org\n    email: info@dcsa.org\npaths:\n  /v1/point-to-point-schedules:\n    get:\n      summary: Get Point-Point schedules\n      description: |\n        Retrieves the Point-Point schedules\n      parameters:\n        - $ref: '#/components/parameters/placeOfReceiptQueryParam'\n#        - $ref: '#/components/parameters/portOfLoadQueryParam'\n        - $ref: '#/components/parameters/placeOfDeliveryQueryParam'\n#        - $ref: '#/components/parameters/portOfDischargeQueryParam'\n        - $ref: '#/components/parameters/departureStartDateTimeQueryParam'\n        - $ref: '#/components/parameters/departureEndDateTimeQueryParam'\n        - $ref: '#/components/parameters/arrivalStartDateTimeQueryParam'\n        - $ref: '#/components/parameters/arrivalEndDateTimeQueryParam'\n        - $ref: '#/components/parameters/routingTypeCodeQueryParam'\n#        - $ref: '#/components/parameters/specialCargoTypeCodeQueryParam'\n#        - $ref: '#/components/parameters/vesselFlagQueryParam'\n\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/limit'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/cursor'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/sort'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/Api-Version-Major'\n      responses:\n        '200':\n          description: Request successful\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/API-Version'\n            Current-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Current-Page'\n            Next-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Next-Page'\n            Prev-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Prev-Page'\n            Last-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Last-Page'\n            First-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/First-Page'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/pointToPoint'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\ncomponents:\n  schemas:\n    dateTime:\n      type: string\n      format: date-time\n      example: '2021-01-09T14:12:56+01:00'      \n    pointToPoint:\n      type: object\n      description: |\n        Point to point routing metadata\n      allOf:\n        - type: object\n          properties:\n            placeOfReceipt:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n                - description: |\n                    The UN Location code of the `Place of Receipt` of the 1\u003csup\u003est\u003c/sup\u003e leg. This field is only provided if the queryParameter `placeOfReceipt` has been used.\n        - type: object\n          properties:\n            placeOfReceiptDateTime:\n              type: string\n              format: date-time\n              description: |\n                The date and time when the goods will depart the `Place of Reciept`. This field is only provided if the queryParameter `placeOfReceipt` has been used.\n        - type: object\n          properties:\n            placeOfDelivery:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n                - description: |\n                    The UN Location code of the `Place of Delivery` of the last leg. This field is only provided if the queryParameter `placeOfDelivery` has been used.\n        - type: object\n          properties:\n            placeOfDeliveryDateTime:\n              type: string\n              format: date-time\n              description: |\n                The date and time when the goods will arrive at the `Place of Delivery`. This field is only provided if the queryParameter `placeOfDelivery` has been used.\n        - type: object\n          properties:\n            portOfLoad:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n                - description: |\n                    The UN Location code of the `Port of Load` if the 1\u003csup\u003est\u003c/sup\u003e leg is a port. This field is only provided if the queryParameter `portOfLoad` has been used.\n        - type: object\n          properties:\n            portOfLoadDateTime:\n              type: string\n              format: date-time\n              description: |\n                The date and time when the goods will depart from the `Port of Load`. This field is only provided if the queryParameter `portOfLoad` has been used.\n        - type: object\n          properties:\n            portOfDischarge:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n                - description: |\n                    The UN Location code of the `Port of Discharge` if the last leg is a port. This field is only provided if the queryParameter `portOfDischarge` has been used.\n        - type: object\n          properties:\n            portOfDischargeDateTime:\n              type: string\n              format: date-time\n              description: |\n                The date and time when the goods will arrive at the `Port of Discharge`. This field is only provided if the queryParameter `portOfDischarge` has been used.\n        - type: object\n          properties:\n            transitTime:\n              type: integer\n              description: |\n                The estimated total time in days that it takes a shipment to move from place of receipt to place of delivery. Transit time includes stop-over time during transshipments and waiting time at connection points\n        - type: object\n          properties:\n            gateOpeningDateTime:\n              type: string\n              format: date-time\n              description: |\n                Earliest date and time for possible Gate in\n        - type: object\n          properties:\n           gateInCutOffDateTimes:\n              type: array\n              items:\n                $ref: '#/components/schemas/gateInCutOffTime'\n        - type: object\n          properties:\n            legs:\n              type: array\n              description: |\n                Leg of the Point-to-Point routing. Can be either an `intermodal` leg or an `ocean` leg\n              items:\n                oneOf:\n                  - $ref: '#/components/schemas/intermodal'\n                  - $ref: '#/components/schemas/ocean'\n\n    gateInCutOffTime:\n      type: object\n      description: |\n        Cut off times\n      allOf:\n        - type: object\n          properties:\n            cutOffDateTimeCode:\n              type: string\n              description: |\n                Code for the cut-off time\n                - DGD (Dangerous Goods cut-off)\n                - REF (Reefer cut-off)\n                - VCO (VGM cut-off)\n                - FCO (FCL delivery cut-off)\n                - LCO (LCL delivery cut-off)\n                - OOG (Out of Gauge - BB cut-off)\n                - SHI (Shipping Instruction cut-off)\n              enum:\n                - DGD\n                - REF\n                - VCO\n                - FCO\n                - LCO\n                - OOG\n                - SHI\n        - type: object\n          properties:\n            cutOffDateTime:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/cutOffDateTime'\n      required:\n        - cutOffDateTimeCode\n        - cutOffDateTime\n\n    intermodal:\n      type: object\n      description: |\n         intermodal\n      allOf:\n        - type: object\n          properties:\n            modeOfTransport:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/modeOfTransport'\n                - example:\n                    TRAIN\n        - type: object\n          properties:\n            departureLocation:\n              anyOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/addressLocation'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/unLocationLocation'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/facilityLocation'\n        - type: object\n          properties:\n            departurDateTime:\n              type: string\n              format: date-time\n              description: |\n                xxx\n        - type: object\n          properties:\n            arrivalLocation:\n              anyOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/addressLocation'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/unLocationLocation'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/facilityLocation'\n        - type: object\n          properties:\n            arrivalDateTime:\n              type: string\n              format: date-time\n              description: |\n                yyy\n    ocean:\n      type: object\n      description: |\n        ocean\n      allOf:\n        - $ref: '#/components/schemas/intermodal'\n        - type: object\n          properties:\n            vesselName:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselName'\n        - type: object\n          properties:\n            vesselYearBuilt:\n              description: |\n                Year the Vessel is built\n              type: integer\n              example: 1925\n        - type: object\n          properties:\n            vesselCallSign:\n              description: |\n                Call sign of the Vesel\n              type: string\n              example: Alpha 1\n        - type: object\n          properties:\n            vesselFlag:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselFlag'\n        - type: object\n          properties:\n            vesselIMONumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselIMONumber'\n        - type: object\n          properties:\n            serviceName:\n              allOf:\n                - $ref: '#/components/schemas/carrierServiceName'\n        - type: object\n          properties:\n            importVoyageNumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/importVoyageNumber'\n        - type: object\n          properties:\n            exportVoyageNumber:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/exportVoyageNumber'\n        - example:\n            modeOfTransport: VESSEL\n            vesselName: 'King of the Seas'\n            vesselIMONumber: 9321483\n            serviceName: 'Great Lion Service'\n            importVoyageNumber: '111'\n            exortVoyageNumber: '222'\n            departureLocation: FRPAR\n            departureDateTime: '2022-04-01T14:12:56+01:00'\n            arrivalLocation: DEHAM\n            arrivalDateTime: '2022-03-29T14:12:56+01:00'\n    specialCargoTypeCode:\n      type: string\n      enum:\n        - DGD\n        - REF\n        - OOG\n    carrierServiceName:\n      type: string\n      description: |\n        The name of the service \n      example: Great Lion Service\n\n  parameters:\n  \n    ##############\n    # Query params\n    ##############\n    \n    placeOfReceiptQueryParam:\n      in: query\n      name: placeOfReceipt\n      description: |\n        `Place Of Receipt` defined as a UnLocationCode. Cannot be used in combination with `portOfLoad`\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n      required: false\n    portOfLoadQueryParam:\n      in: query\n      name: portOfLoad\n      description: |\n        `Port Of Load` defined as a UnLocationCode. Cannot be used in combination with `placeOfReceipt`\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n      required: false\n    placeOfDeliveryQueryParam:\n      in: query\n      name: placeOffDelivery\n      description: |\n        `Place Of fDelivery` defined as a UnLocationCode. Cannot be used in combination with `portOfDischarge`\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n      required: false\n    portOfDischargeQueryParam:\n      in: query\n      name: portOfDischarge\n      description: |\n        `Port Of Discharge` defined as a UnLocationCode. Cannot be used in combination with `placeOffDelivery`\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n      required: false\n    departureStartDateTimeQueryParam:\n      in: query\n      name: departureStartDateTime\n      description: |\n        Limit the result based on the departure start DateTime (earliest departure dateTme). This is a **conditional** field and `required` if `arrivalEndDateTime` is not specified.\n        \n        It is possible to use this query parameter in combination with the optional `departureEndDateTime`-queryParam. The maximum duration of the period allowed is 12 weeks (=3 months) which is also the default period used if `departureEndDateTime` is **not** defined.\n        \n        **NB:** A BadRequest is returned if the period exceeds 12 weeks or if this queryParameter is used in combination with either `arrivalStartDateTime` or `arrivalEndDateTime`\n      required: false\n      example: 2021-04-01T14:12:56+01:00\n      schema:\n        $ref: '#/components/schemas/dateTime'\n    departureEndDateTimeQueryParam:\n      in: query\n      name: departureEndDateTime\n      description: |\n        Limit the result based on the departure end DateTime. It is not possible to combine this queryParameter with the `arrival`-queryParameters. It can **only** be used in combination with `departureStartDateTime` in which case it defines a period. If omitted the default value of this parameter in combination with `departureStartDateTime` is 12 weeks (=3 months)\n\n        **NB:** A BadRequest is returned if the period exceeds 12 weeks or if this queryParameter is used in combination with either `arrivalStartDateTime` or `arrivalEndDateTime`\n      required: false\n      example: 2021-04-01T14:12:56+01:00\n      schema:\n        $ref: '#/components/schemas/dateTime'\n    arrivalStartDateTimeQueryParam:\n      in: query\n      name: arrivalStartDateTime\n      description: |\n        Limit the result based on the arrival start DateTime. It is not possible to combine this queryParameter with the `departure`-queryParameters. It can **only** be used in combination with `arrivalEndDateTime` in which case it defines a period. If omitted the default value of this parameter in combination with `arrivalEndDateTime` is 12 weeks (=3 months)\n\n        **NB:** A BadRequest is returned if the period exceeds 12 weeks or if this queryParameter is used in combination with either `departureStartDateTime` or `departureEndDateTime`\n      required: false\n      example: 2021-04-01T14:12:56+01:00\n      schema:\n        $ref: '#/components/schemas/dateTime'\n    arrivalEndDateTimeQueryParam:\n      in: query\n      name: arrivalEndDateTime\n      description: |\n        Limit the result based on the arrival end DateTime (latest arrival dateTme). This is a **conditional** field and `required` if `departureStartDateTime` is not specified.\n        \n        It is possible to use this query parameter in combination with the optional `arrivalStartDateTime`-queryParam. The maximum duration of the period allowed is 12 weeks (=3 months) which is also the default period used if `arrivalStartDateTime` is **not** defined.\n        \n        **NB:** A BadRequest is returned if the period exceeds 12 weeks or if this queryParameter is used in combination with either `departureStartDateTime` or `departureEndDateTime`\n      required: false\n      example: 2021-04-01T14:12:56+01:00\n      schema:\n        $ref: '#/components/schemas/dateTime'\n    vesselFlagQueryParam:\n      in: query\n      name: vesselFlag\n      description: |\n        The flag of the vessel. All Vessels in the results will belong to the specified flag\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselFlag'\n      required: false\n    routingTypeCodeQueryParam:\n      in: query\n      name: routingTypeCode\n      description: |\n        Whether to use Direct-routing (`direct`) or Indirect-routing (`indirect`)\n      schema:\n        type: string\n        enum:\n          - direct\n          - indirect\n      required: false\n    specialCargoTypeCodeQueryParam:\n      in: query\n      name: speciaCargoTypeCode\n      explode: false\n      style: form\n      required: false\n      description: |\n        Specify special cargo requirements:\n        \n        - DGD (Dangerious Goods)\n        - REF (Reefer)\n        - OOG (Out of Gauge)\n        \n        It is possible to select multiple values by comma `,` separating them. For multiple values the AND-operator is used. For example _speciaCargoTypeCode=DGD,REF_ Matches schedules where **both** Dangerous Goods (`DGD`) and Reefers (`REF`) can be provided in the same routing.\n      example: [DGD,REF]\n      schema:\n        default: [DGD,REF,OOG]\n        type: array\n        items:\n          $ref: '#/components/schemas/specialCargoTypeCode'"
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"portOfLoadQueryParam\": schema: parse schema: resolve \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode\": find schema: external base \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0\" is not supported"
}