{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/brazil-data-cube/cube-builder"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "cube_builder/spec/openapi.yaml",
			"byteSize": 19444,
			"content": "openapi: 3.0.0\ninfo:\n  title: Cube Builder API.\n  description: Cube Builder is an application to generate data cubes on local cluster using Python and Celery.\n  contact:\n    name: Brazil Data Cube Team\n    url: \"https://discord.com/channels/689541907621085198#/\"\n    email: brazildatacube@inpe.br\n  license:\n    name: GPLv3\n    url: \"https://opensource.org/licenses/GPL-3.0\"\n  version: \"0.6\"\n  x-logo:\n    url: \"https://brazil-data-cube.github.io/_static/logo-bdc.png\"\n    altText: Brazil Data Cube\n    href: \"https://github.com/brazil-data-cube\"\n\npaths:\n  /:\n    get:\n      responses:\n        \"200\":\n          description: Cube-Builder API status.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  description:\n                    type: string\n                  version:\n                    type: string\n                required:\n                  - message\n                  - description\n                  - version\n\n  /cube-status:\n    get:\n      description: Retrieve the cube processing state, which refers to total items and total to be done.\n      responses:\n        \"200\":\n          description: Cube Status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataCubeStatus\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n\n  /cubes:\n    get:\n      description: List all data cubes available.\n      responses:\n        \"200\":\n          description: List of all datacubes.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/DataCube\"\n    post:\n      description: Creates a datacube.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DataCube\" # TODO: datacubeform\n      responses:\n        \"200\":\n          description: Created datacube.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/DataCube\"\n\n  /cubes/{cube_id}:\n    get:\n      description: Get a data cube given an identifier.\n      parameters:\n        - $ref: \"#/components/parameters/cube_id\"\n      responses:\n        \"200\":\n          description: JSON document with Data Cube data.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataCube\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    put:\n      description: Update a data cube given an identifier.\n      parameters:\n        - $ref: \"#/components/parameters/cube_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DataCubeMetadataForm\"\n      responses:\n        \"200\":\n          description: Cube updated successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  /cubes/{cube_id}/tiles:\n    get:\n      description: List all data cube tiles id already done.\n      parameters:\n        - $ref: \"#/components/parameters/cube_id\"\n      responses:\n        \"200\":\n          description: List with all tiles already done.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n\n  /cubes/{cube_id}/tiles/geom:\n      get:\n        description: List all data cube tiles geometry already done.\n        parameters:\n          - $ref: \"#/components/parameters/cube_id\"\n        responses:\n          \"200\":\n            description: List with all tiles geometry already done.\n            content:\n              application/json:\n                schema:\n                  type: array\n                  items:\n                    $ref: \"https://geojson.org/schema/Geometry.json\"\n\n  /cubes/{cube_id}/items:\n    get:\n      description: List all data cube tiles already done.\n      parameters:\n        - $ref: \"#/components/parameters/cube_id\"\n        - $ref: \"#/components/parameters/tiles\"\n        - $ref: \"#/components/parameters/bbox\"\n        - $ref: \"#/components/parameters/start\"\n        - $ref: \"#/components/parameters/end\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: JSON Document listing the query result.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Item\"\n                  page:\n                    type: integer\n                  per_page:\n                    type: integer\n                  total_items:\n                    type: integer\n                  total_pages:\n                    type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n\n  /cubes/{cube_id}/meta:\n    get:\n      description: Retrieve the meta information of a data cube such STAC provider used, collection, etc.\n      parameters:\n        - $ref: \"#/components/parameters/cube_id\"\n      responses:\n        \"200\":\n          description: JSON Document listing the meta information of a data cube.\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: true\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n  /start:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                datacube:\n                  type: string\n                collections:\n                  type: array\n                  items:\n                    type: string\n                tiles:\n                  type: array\n                  items:\n                    type: string\n                start_date:\n                  type: string\n                  format: datetime\n                end_date:\n                  type: string\n                  format: datetime\n                bands:\n                  type: array\n                  items:\n                    type: string\n                force:\n                  type: boolean\n                with_rgb:\n                  type: boolean\n                token:\n                  type: string\n                stac_url:\n                  type: string\n                shape:\n                  type: array\n                  items:\n                    type: integer\n                block_size:\n                  type: integer\n                reuse_from:\n                  type: string\n                histogram_matching:\n                  type: boolean\n      responses:\n        \"200\":\n          description: Execution started.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  ok:\n                    type: boolean\n                    default: true\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /list-merges:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/datacube\"\n        - $ref: \"#/components/parameters/tile\"\n        - $ref: \"#/components/parameters/start_date\"\n        - $ref: \"#/components/parameters/end_date\"\n      responses:\n        \"200\":\n          description: List merge files used in data cube and check for invalid scenes.\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties:\n                    bands:\n                      type: object\n                      additionalProperties:\n                        type: array\n                        items:\n                          type: string\n                    errors:\n                      type: array\n                      items:\n                        type: string\n                    collections:\n                      type: array\n                      items:\n                        type: string\n                      uniqueItems: true\n                    file:\n                      type: string\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  /grids:\n    get:\n      responses:\n        \"200\":\n          description: Retrieve a list of available Grid Schema on Brazil Data Cube database.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/requestBodies/GridRefSys\"\n\n  /grids/{grs_id}:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/grs_id\"\n      responses:\n        \"200\":\n          description: Retrieve a Grid Schema definition with tiles associated.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                  name:\n                    type: string\n                  description:\n                    type: string\n                  table_id:\n                    type: string\n                  crs:\n                    type: string\n\n\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n\n  /create-grids:\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/GridRefSys\"\n      responses:\n        \"201\":\n          description: Grid created.\n          content:\n            text/plain:\n              schema:\n                type: string\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n\n  /list-periods:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Period\"\n      responses:\n        \"200\":\n          description: JSON Document listing data cube periods\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  timeline:\n                    type: array\n                    items:\n                      type: array\n                      minItems: 2\n                      maxItems: 2\n                      items:\n                        type: string\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n\n  /composite-functions:\n    get:\n      responses:\n        \"200\":\n          description: List of all composite functions.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                    name:\n                      type: string\n                    description:\n                      type: string\n                    alias:\n                      type: string\n  /tasks:\n    get:\n      responses:\n        \"200\":\n          description: Get a lists of queued tasks.\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties:\n                    total:\n                      type: integer\n                    ready:\n                      type: integer\n                    unacked:\n                      type: integer\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n\ncomponents:\n  parameters:\n    cube_id:\n      name: cube_id\n      in: path\n      required: true\n      description: Cube unique identifier.\n      schema:\n        type: string\n    grs_id:\n      name: grs_id\n      in: path\n      required: true\n      description: GridRefSys unique identifier.\n      schema:\n        type: string\n    tile:\n      name: tile\n      in: query\n      required: true\n      description: Tile unique identifier.\n      schema:\n        type: string\n    datacube:\n      name: datacube\n      in: query\n      required: true\n      description: Cube unique identifier.\n      schema:\n        type: string\n    tiles:\n      name: tiles\n      in: query\n      description: Comma separated list of tiles to be queried.\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n    bbox:\n      name: bbox\n      in: query\n      description: Bounding Box as a comma separated list of coordinates (minx, miny, maxx, maxy).\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: number\n        minItems: 4\n    start:\n      name: start\n      in: query\n      description: Start date.\n      schema:\n        type: string\n        format: datetime\n    end:\n      name: end\n      in: query\n      description: End date.\n      schema:\n        type: string\n        format: datetime\n    page:\n      name: page\n      in: query\n      description: Page number.\n      schema:\n        type: integer\n    per_page:\n      name: per_page\n      in: query\n      description: Number of items per page.\n      schema:\n        type: integer\n    start_date:\n      name: start_date\n      in: query\n      description: Start date.\n      required: true\n      schema:\n        type: string\n        format: datetime\n    end_date:\n      name: end_date\n      in: query\n      description: End date.\n      required: true\n      schema:\n        type: string\n        format: datetime\n  responses:\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    BadRequest:\n      description: BadRequest\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    InternalServerError:\n      description: An internal server error has occured.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n  requestBodies:\n    GridRefSys:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              projection:\n                type: string\n              meridian:\n                type: integer\n              degreesx:\n                type: integer\n              degreesy:\n                type: integer\n              bbox:\n                type: string\n            required:\n              - name\n              - projection\n              - meridian\n              - degreesx\n              - degreesy\n              - bbox\n  schemas:\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n      required:\n        - code\n        - description\n    Item:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        title:\n          type: string\n        collection_id:\n          type: integer\n        tile_id:\n          type: integer\n        cloud_cover:\n          type: number\n        provider_id:\n          type: integer\n        application_id:\n          type: integer\n        _metadata:\n          type: object\n        srid:\n          type: boolean\n        start_date:\n          type: string\n          format: datetime\n        end_date:\n          type: string\n          format: datetime\n        geom:\n          $ref: \"https://geojson.org/schema/Geometry.json\"\n\n\n    Collection:\n      type: object\n      properties:\n        name:\n          type: string\n        title:\n          type: string\n        description:\n          type: string\n        temporal_composition:\n          type: object\n          additionalProperties: true\n        composite_function_id:\n          type: integer\n        grid_ref_sys_id:\n          type: integer\n        classification_system_id:\n          type: integer\n        collection_type:\n          type: string\n          enum: [\"cube\", \"collection\", \"classification\", \"mosaic\"]\n        _metadata:\n          type: object\n        is_public:\n          type: boolean\n        start_date:\n          type: string\n          format: datetime\n        end_date:\n          type: string\n          format: datetime\n        extent:\n          type: string\n        version:\n          type: integer\n        version_predecessor:\n          type: integer\n        version_successor:\n          type: integer\n\n    Band:\n      type: object\n      properties:\n        name:\n          type: string\n        common_name:\n          type: string\n        data_type:\n          type: string\n        metadata:\n          type: object\n          additionalProperties: true\n\n    DataCube:\n      type: object\n      properties:\n        datacube:\n          type: string\n        grs:\n          type: string\n        resolution:\n          type: integer\n        bands_quicklook:\n          type: array\n          items:\n            type: string\n        temporal_composition_schema:\n          type: object\n          additionalProperties: true\n        composite_function:\n          type: string\n        bands:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/Band\"\n        quality_band:\n          type: string\n        indexes:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/Band\"\n        metadata:\n          type: object\n          additionalProperties: true\n        description:\n          type: string\n        version:\n          type: integer\n        public:\n          type: boolean\n          default: true\n        is_combined:\n          type: boolean\n          default: false\n        status:\n          type: string\n          enum: [\"Pending\", \"Finished\"]\n      required:\n        - datacube\n        - grs\n        - resolution\n        - temporal_composition\n        - bands_quicklook\n        - composite_function\n        - bands\n        - quality_band\n        - metadata\n        - description\n        - version\n        - title\n\n    DataCubeStatus:\n      type: object\n      properties:\n        item:\n          type: string\n\n    DataCubeMetadataForm:\n      type: object\n      properties:\n        description:\n          type: string\n        title:\n          type: string\n        public:\n          type: boolean\n          default: true\n        metadata:\n          type: object\n          additionalProperties: true\n\n    Period:\n      type: object\n      properties:\n        schema:\n          type: string\n        step:\n          type: integer\n        unit:\n          type: string\n        start_date:\n          type: string\n        last_date:\n          type: string\n        cycle:\n          type: object\n          additionalProperties: true\n        intervals:\n          type: array\n          items:\n            type: string\n",
			"canonicalURL": "/github.com/brazil-data-cube/cube-builder@9ef4fd386bcdf637911a73d34634986e5692b545/-/blob/cube_builder/spec/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/brazil-data-cube/cube-builder/blob/9ef4fd386bcdf637911a73d34634986e5692b545/cube_builder/spec/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Item\": resolve \"#/components/schemas/Item\": property \"geom\": at cube_builder/spec/openapi.yaml:604:17: $ref: resolve \"https://geojson.org/schema/Geometry.json\": get \"https://geojson.org/schema/Geometry.json\": https: do: Get \"https://geojson.org/schema/Geometry.json\": host \"geojson.org\" is not allowed"
}