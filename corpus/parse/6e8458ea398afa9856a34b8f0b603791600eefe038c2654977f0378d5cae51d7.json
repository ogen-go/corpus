{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vert-x3/vertx-web"
		},
		"file": {
			"name": "schemas_test_spec.yaml",
			"size": 0,
			"path": "vertx-web-openapi/src/test/resources/specs/schemas_test_spec.yaml",
			"byteSize": 7313,
			"content": "# https://swagger.io/docs/specification/using-ref/\nopenapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: JSON Schemas test spec\n  license:\n    name: MIT\npaths:\n  /test1:\n    post:\n      operationId: test1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Person'\n      responses:\n        default:\n          description: \"OK\"\n  /test2:\n    post:\n      operationId: test2\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/Person'\n                - $ref: '#/components/schemas/Citizen'\n  /test3:\n    post:\n      operationId: test3\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PersonComplex'\n  /test4:\n    post:\n      operationId: test4\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/paths/~1test1/post/requestBody/content/application~1json/schema'\n                - $ref: '#/components/schemas/Citizen'\n  /test5:\n    post:\n      operationId: test5\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: 'http://localhost:8081/geo.json'\n  /test6:\n    post:\n      operationId: test6\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: 'http://localhost:8081/card.json'\n                - type: object\n                  properties:\n                    id_card:\n                      type: string\n                  required:\n                    - id_card\n  /test7:\n    post:\n      operationId: test7\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PersonRecursive'\n  /test8:\n    post:\n      operationId: test8\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: string\n                parent:\n                  $ref: '#/paths/~1test8/post/requestBody/content/application~1json/schema'\n                children:\n                  type: array\n                  items:\n                    $ref: '#/paths/~1test8/post/requestBody/content/application~1json/schema'\n              additionalProperties: {}\n  /test9:\n    post:\n      operationId: test9\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: 'object'\n              allOf:\n                - $ref: 'http://localhost:8081/card.json'\n                - $ref: './schemas/Card_id.yaml'\n                - type: object\n                  properties:\n                    parent_card:\n                      $ref: '#/paths/~1test9/post/requestBody/content/application~1json/schema'\n                    children_cards:\n                      type: array\n                      items:\n                        $ref: '#/paths/~1test9/post/requestBody/content/application~1json/schema'\n  /test10:\n    post:\n      operationId: test10\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: 'http://localhost:8081/tree.yaml#/tree'\n  /test11:\n    post:\n      operationId: test11\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/tree.yaml#/tree'\n  /test12:\n    post:\n      operationId: test12\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schemaA'\n  /test13:\n    post:\n      operationId: test13\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: schema13\n              type: object\n              properties:\n                a:\n                  type: string\n                  default: Hello\n  /test14:\n    post:\n      operationId: test14\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n              minItems: 1\n  /test15:\n    post:\n      operationId: test15\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                nullable: true\n              minItems: 1\n\n  /test16:\n    post:\n      operationId: test16\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/schemaC\"\n  /testLocalRelativeRef:\n    post:\n      operationId: testLocalRelativeRef\n      responses:\n        default:\n          description: \"OK\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"./schemas/card.json\"\n\ncomponents:\n  schemas:\n    Person:\n      type: object\n      properties:\n        name:\n          type: string\n        surname:\n          type: string\n      required:\n        - name\n        - surname\n    Citizen:\n      type: object\n      properties:\n        id_card:\n          type: string\n      required:\n        - id_card\n    PersonComplex:\n      allOf:\n        - $ref: '#/components/schemas/Person'\n        - $ref: '#/components/schemas/Citizen'\n    PersonRecursive:\n      allOf:\n        - $ref: '#/components/schemas/Person'\n        - $ref: '#/components/schemas/Citizen'\n        - type: object\n          properties:\n            mother:\n              $ref: '#/components/schemas/PersonRecursive'\n            father:\n              $ref: '#/components/schemas/PersonRecursive'\n    schemaA:\n      title: schemaA\n      type: object\n      properties:\n        a:\n          $ref: '#/components/schemas/schemaB'\n        b:\n          type: string\n        c:\n          type: number\n    schemaB:\n      title: schemaB\n      type: object\n      properties:\n        a:\n          type: array\n          items:\n            $ref: '#/components/schemas/schemaA'\n    schemaC:\n      title: schemaC\n      properties:\n        mymap:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/schemaD\"\n    schemaD:\n      required:\n        - a\n      properties:\n        a:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /test10: post: operation \"test10\": requestBody: content: application/json: schema: parse schema: resolve \"http://localhost:8081/tree.yaml#/tree\": external \"http://localhost:8081/tree.yaml\": http: do: Get \"http://localhost:8081/tree.yaml\": host \"localhost:8081\" is not allowed"
}