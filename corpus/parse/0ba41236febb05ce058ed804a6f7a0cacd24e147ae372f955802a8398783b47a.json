{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Heaty566/mychess"
		},
		"file": {
			"name": "doc.json",
			"size": 0,
			"path": "server/src/app/public/doc.json",
			"byteSize": 155865,
			"content": "{\n      \"openapi\": \"3.0.0\",\n      \"info\": {\n            \"title\": \"MyGame-V2\",\n            \"description\": \"My chess is an online web games allow people can play chess or tic tac toe and share their happiness across the world. This website is inspired by Chess.com and Steam.\",\n            \"contact\": {\n                  \"name\": \"Pham Vinh Nhan\",\n                  \"email\": \"heaty566@gmail.com\"\n            },\n            \"license\": {\n                  \"name\": \"Apache 2.0\",\n                  \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n            },\n            \"version\": \"2.1.7\"\n      },\n      \"tags\": [\n            {\n                  \"name\": \"auth\",\n                  \"description\": \"handle authentication\"\n            },\n            {\n                  \"name\": \"user\",\n                  \"description\": \"service for user\"\n            },\n            {\n                  \"name\": \"admin\",\n                  \"description\": \"service for administrator, have to login and with role is ADMIN\"\n            },\n            {\n                  \"name\": \"common\",\n                  \"description\": \"service for basic request\"\n            },\n            {\n                  \"name\": \"tic-tac-toe\",\n                  \"description\": \"service tic-tac-toe game\"\n            },\n            {\n                  \"name\": \"chat\",\n                  \"description\": \"service chat box\"\n            },\n            {\n                  \"name\": \"chess\",\n                  \"description\": \"service chess\"\n            }\n      ],\n      \"servers\": [\n            {\n                  \"url\": \"http://localhost:4000\",\n                  \"description\": \"Development server\"\n            }\n      ],\n      \"paths\": {\n            \"/api/auth/login\": {\n                  \"post\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"Registered users can login to establish their identity with the application using the API below. The login operation requires two properties: username and password.\",\n                        \"requestBody\": {\n                              \"description\": \"login user information\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"username\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"username\"\n                                                      },\n                                                      \"password\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"password\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return token cookie\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {}\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"user is not found or wrong password\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"type\": \"object\",\n                                                      \"properties\": {\n                                                            \"data\": {\n                                                                  \"type\": \"object\",\n                                                                  \"description\": \"it type any base on your api\"\n                                                            },\n                                                            \"details\": {\n                                                                  \"type\": \"object\",\n                                                                  \"properties\": {\n                                                                        \"field\": {\n                                                                              \"type\": \"string\",\n                                                                              \"description\": \"field will be the name of invalid field\",\n                                                                              \"example\": \"should not be empty\"\n                                                                        },\n                                                                        \"message\": {\n                                                                              \"type\": \"string\",\n                                                                              \"example\": \"this is an error message\"\n                                                                        },\n                                                                        \"errorMessage\": {\n                                                                              \"type\": \"string\",\n                                                                              \"example\": \"this is an error message\"\n                                                                        }\n                                                                  }\n                                                            }\n                                                      }\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/logout\": {\n                  \"post\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"The Logout operation terminates user session.\",\n                        \"parameters\": [\n                              {\n                                    \"name\": \"token\",\n                                    \"in\": \"cookie\",\n                                    \"required\": true,\n                                    \"style\": \"form\",\n                                    \"schema\": {\n                                          \"type\": \"object\",\n                                          \"properties\": {\n                                                \"re-token\": {\n                                                      \"type\": \"string\",\n                                                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n                                                },\n                                                \"auth-token\": {\n                                                      \"type\": \"string\",\n                                                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n                                                }\n                                          }\n                                    }\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Access token removed successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/register\": {\n                  \"post\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"The register API can be used to create user accounts in the application. A registration request must provide a user object as a collection of key/value properties.\",\n                        \"requestBody\": {\n                              \"description\": \"register user information\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"name\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"my name\"\n                                                      },\n                                                      \"username\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"username\"\n                                                      },\n                                                      \"password\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"password\"\n                                                      },\n                                                      \"confirmPassword\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"password\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return cookie for authentication\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"username is taken\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/otp-email\": {\n                  \"post\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"Create an email is sent with a link to a webpage which contains a form where the user can enter the new password.\",\n                        \"requestBody\": {\n                              \"description\": \"provide an email to send an otp key\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"phoneNumber\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"hello@gmail.com\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"The mail has been sent successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"too many request, mail does not exist, or server cannot send\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/otp-sms\": {\n                  \"post\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"Create an OTP code is sent to the user phone number. Users can use it to access a webpage which contains a form where the user can enter the new password.\",\n                        \"requestBody\": {\n                              \"description\": \"provide phone number to send an otp key\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"phoneNumber\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"+20401230312\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"The OTP code has been sent successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"too many request, phoneNumber does not exist, or server cannot send\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/check-otp\": {\n                  \"post\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"Check-otp API is user to check a OTP code is exist or not.\",\n                        \"parameters\": [\n                              {\n                                    \"name\": \"key\",\n                                    \"description\": \"otp key\",\n                                    \"in\": \"query\",\n                                    \"required\": true,\n                                    \"style\": \"form\",\n                                    \"schema\": {\n                                          \"type\": \"string\",\n                                          \"example\": \"123456789aa\"\n                                    }\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"OTP code is existed.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/google\": {\n                  \"get\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"Mychess integrates with Google to support user authentication and login into a Mychess application with a Google account.\",\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"re-token key\",\n                                    \"content\": {\n                                          \"header\": {\n                                                \"schema\": {\n                                                      \"type\": \"string\",\n                                                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/github\": {\n                  \"get\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"Mychess integrates with Github to support user authentication and login into a Mychess application with a Github account.\",\n                        \"responses\": {\n                              \"200\": {\n                                    \"$ref\": \"#/paths/~1api~1auth~1google/get/responses/200\"\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/facebook\": {\n                  \"get\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"Mychess integrates with Facebook to support user authentication and login into a Mychess application with a Facebook account.\",\n                        \"responses\": {\n                              \"200\": {\n                                    \"$ref\": \"#/paths/~1api~1auth~1google/get/responses/200\"\n                              }\n                        }\n                  }\n            },\n            \"/api/auth/socket-token\": {\n                  \"get\": {\n                        \"tags\": [\"auth\"],\n                        \"description\": \"Create an io cookie and return it to clients.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"The server creates io cookie successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"client is not a user\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/support\": {\n                  \"post\": {\n                        \"tags\": [\"common\"],\n                        \"description\": \"The support API allows users to send their problem to our support team.\",\n                        \"requestBody\": {\n                              \"description\": \"basic user information\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"email\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"hello@gmail.com\"\n                                                      },\n                                                      \"name\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"pham vinh nhan\"\n                                                      },\n                                                      \"message\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"hello world\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                              }\n                        }\n                  }\n            },\n            \"/api/user\": {\n                  \"get\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"This API get information of the current user from server and return it to client without some sensitive fields.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"The server returns user information without some sensitive fields.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  },\n                  \"put\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"User property values of the logged in users can be updated with this API operation.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"content\": {\n                                    \"application/json\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"name\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"who am i\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"description\": \"user basic information is not include some sensitive fields\",\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User information update successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/user/:id\": {\n                  \"get\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"This API get user information base on id parameter is provided and return it to client without some sensitive fields.\",\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"The server returns any user information without some sensitive fields.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"user with the given Id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/user/avatar\": {\n                  \"put\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"This API allows user to upload their avatar image.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"description\": \"put avatar image here\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"avatar\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"/hello.png\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User avatar update successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"The avatar file is required, The avatar file couldn't be uploaded. Photos should be smaller than {{size}} MB, The avatar file couldn't be uploaded. Photos should be saved as JPEG, JPG, PNG, BMP files\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"500\": {\n                                    \"description\": \"Internal server error from aws server, upload failed to aws server\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/user/password\": {\n                  \"put\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"Changes the passwords of users in the native realm and built-in users.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"description\": \"provide new password and current password to change password by user\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"newPassword\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"123abcAbc\"\n                                                      },\n                                                      \"confirmNewPassword\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"123abcAbc\"\n                                                      },\n                                                      \"currentPassword\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"1234abcAbc\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User password update successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"The user password is not correct\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/user/reset-password\": {\n                  \"put\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"Allow user to enter new password with OTP code is provided.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              },\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1check-otp/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"description\": \"provide new password to reset password\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"newPassword\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"123abcAbc\"\n                                                      },\n                                                      \"confirmNewPassword\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"123abcAbc\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User password update successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"OTP code is not correct, OTP code is invalid\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/user/update-with-otp\": {\n                  \"put\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"Allow user to update information with OTP code is provided.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              },\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1check-otp/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User information update successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"OTP code is not correct, OTP code is invalid\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/user/otp-sms\": {\n                  \"post\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"Create an OTP code is sent to the user phone number. Users can use it to access a webpage which contains a form where the user can update phone number.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1auth~1otp-sms/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"The OTP code has been sent successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"The user has requested too many times, please try again after 30 minutes, The user phone number is taken by another user\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"500\": {\n                                    \"description\": \"Internal server error from sms server\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/user/otp-email\": {\n                  \"post\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"Create an email is sent with a link to a webpage which contains a form where the user can update email.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1auth~1otp-email/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"The mail has been sent successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"The user has requested too many times, please try again after 30 minutes, The user email is taken by another user\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"500\": {\n                                    \"description\": \"Internal server error from email server\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/user/search\": {\n                  \"post\": {\n                        \"tags\": [\"user\"],\n                        \"description\": \"This API allows user enter a name of another user to find out their information.\",\n                        \"parameters\": [\n                              {\n                                    \"name\": \"searchUserQuery\",\n                                    \"in\": \"query\",\n                                    \"required\": true,\n                                    \"style\": \"form\",\n                                    \"schema\": {\n                                          \"type\": \"object\",\n                                          \"properties\": {\n                                                \"name\": {\n                                                      \"type\": \"string\",\n                                                      \"example\": \"hello world\"\n                                                },\n                                                \"currentPage\": {\n                                                      \"type\": \"number\",\n                                                      \"example\": 1\n                                                },\n                                                \"pageSize\": {\n                                                      \"type\": \"number\",\n                                                      \"example\": 1\n                                                }\n                                          }\n                                    }\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Get user information successfully. {user[], count}\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/admin/users\": {\n                  \"get\": {\n                        \"tags\": [\"admin\"],\n                        \"description\": \"Get all users information except some sensitive information.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"The server returns array of user information.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user is not an admin\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"user is not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/admin/user-admin/:id\": {\n                  \"put\": {\n                        \"tags\": [\"admin\"],\n                        \"description\": \"Toggle user role from USER to ADMIN and vice versa.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              },\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1check-otp/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User role update successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user is not an admin\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"user is not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/admin/user-status/:id\": {\n                  \"put\": {\n                        \"tags\": [\"admin\"],\n                        \"description\": \"Toggle user status from true to false and vice versa (block user).\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              },\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1check-otp/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User status update successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user is not an admin\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"user is not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/:id\": {\n                  \"get\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"get tic tac toe summary of a user\",\n                        \"parameters\": [\n                              {\n                                    \"name\": \"userId\",\n                                    \"description\": \"user id\",\n                                    \"in\": \"query\",\n                                    \"required\": true,\n                                    \"style\": \"form\",\n                                    \"schema\": {\n                                          \"type\": \"string\",\n                                          \"example\": \"123456789aa\"\n                                    }\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return tic tac toe summary of a user\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/pvp\": {\n                  \"post\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"Create a tic-tac-toe game for player vs player return roomId to connect socket.io\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Create a game with player successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/restart\": {\n                  \"post\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"Create a tic-tac-toe game for player vs player and alert connecting user to push router to other room \",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"description\": \"provide roomId\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"roomId\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"123124215421\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Restart game successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"the old game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or this game is already played\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/bot\": {\n                  \"post\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"Create a tic-tac-toe game for player vs bot return roomId to connect socket.io\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Create new game with bot successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/join-room\": {\n                  \"put\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"Provide room id which user want to join, redirect roomId in response body when return 200\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User status update successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found, or it is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/quick-join-room\": {\n                  \"get\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"A quick join to ttt room\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return roomId which use socket to join\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"No game is found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/start\": {\n                  \"put\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"send request to start tic-tac-toe game when two users are ready\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/ready\": {\n                  \"put\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"send request to toggle ready state to play, two user have to ready before sending a start request (send one more time to change to not ready)\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"user state change to ready\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/leave\": {\n                  \"put\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"send this request when user leave the game, user is leave safely if the game is not start, and count as lose when the game is playing. user can not play any game until they complete leave other game\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"leave room successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/add-move\": {\n                  \"put\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"you the x y in the board which you want to choose\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"description\": \"provide roomId and x y for please tic-tac-toe\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"roomId\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"123124215421\"\n                                                      },\n                                                      \"x\": {\n                                                            \"type\": \"number\",\n                                                            \"example\": 1\n                                                      },\n                                                      \"y\": {\n                                                            \"type\": \"number\",\n                                                            \"example\": 1\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"leave room successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"is not your turn\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game is not playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/draw\": {\n                  \"post\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"create a draw request to current board\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"create new draw successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game not playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  },\n                  \"put\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"Accept draw game in ttt\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"description\": \"draw information\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"roomId\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"username\"\n                                                      },\n                                                      \"isAccept\": {\n                                                            \"type\": \"boolean\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"create new draw successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game not playing, other user does not create draw request\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/ttt/surrender\": {\n                  \"put\": {\n                        \"tags\": [\"tic-tac-toe\"],\n                        \"description\": \"Surrender a game\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"surrender game ok\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game not playing.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/pvp\": {\n                  \"post\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"Create a chess game for player vs player return roomId to connect socket.io\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Restart game successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/bot\": {\n                  \"post\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"Create a chess game for player vs bot return roomId to connect socket.io\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Create new game with bot successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/join-room\": {\n                  \"put\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"Provide room id which user want to join, redirect roomId in response body when return 200\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"User status update successfully.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chess game with the given id was not found, or it is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/start\": {\n                  \"put\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"send request to start chess game when two users are ready\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/leave\": {\n                  \"put\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"send this request when user leave the game, user is leave safely if the game is not start, and count as lose when the game is playing. user can not play any game until they complete leave other game\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"leave room successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/restart\": {\n                  \"post\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"Create a chess game for player vs player and alert connecting user to push router to other room \",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"Restart game successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"the old game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or this game is already played\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/add-move\": {\n                  \"put\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"This router receive position of a piece - which user want to move and move it to potistion user want. Play bot move in bot mode.\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"description\": \"provide roomId and x y for please tic-tac-toe\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"roomId\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"123124215421\"\n                                                      },\n                                                      \"curPos\": {\n                                                            \"type\": \"object\",\n                                                            \"properties\": {\n                                                                  \"x\": {\n                                                                        \"type\": \"number\"\n                                                                  },\n                                                                  \"y\": {\n                                                                        \"type\": \"number\"\n                                                                  }\n                                                            }\n                                                      },\n                                                      \"y\": {\n                                                            \"type\": \"number\",\n                                                            \"example\": 1\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"move piece successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"the piece user want to pickup is enemy piece, or wrong turn, or destination position is invalid\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chess game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/promote-pawn\": {\n                  \"put\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"This router receive position and role user want to promote\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"description\": \"provide roomId and x y for please tic-tac-toe\",\n                              \"content\": {\n                                    \"form-data\": {\n                                          \"schema\": {\n                                                \"type\": \"object\",\n                                                \"properties\": {\n                                                      \"roomId\": {\n                                                            \"type\": \"string\",\n                                                            \"example\": \"123124215421\"\n                                                      },\n                                                      \"promotePos\": {\n                                                            \"type\": \"object\",\n                                                            \"properties\": {\n                                                                  \"x\": {\n                                                                        \"type\": \"number\"\n                                                                  },\n                                                                  \"y\": {\n                                                                        \"type\": \"number\"\n                                                                  }\n                                                            }\n                                                      },\n                                                      \"promoteRole\": {\n                                                            \"$ref\": \"#/components/schemas/chessMoveRedis/properties/chessRole\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              },\n                              \"required\": true\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"promote pawn successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"the piece user want to pickup is enemy piece, or wrong turn, or destination position is invalid\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chess game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/quick-join-room\": {\n                  \"get\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"A quick join to chess room\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return roomId which use socket to join\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"No game is found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/choose-piece\": {\n                  \"post\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"This router pickup position of a piece - which user want to move\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"choose piece successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"the piece user want to pickup is enemy piece\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chess game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/ready\": {\n                  \"put\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"send request to toggle ready state to play, two user have to ready before sending a start request (send one more time to change to not ready)\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"user state change to ready\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game is playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chess game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/surrender\": {\n                  \"put\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"Surrender a game\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"surrender game ok\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game not playing.\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"ttt game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/draw\": {\n                  \"post\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"create a draw request to current board\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"create new draw successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game not playing\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chess game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  },\n                  \"put\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"Accept draw game in chess\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1draw/put/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"create new draw successfully\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this game, or game not playing, other user does not create draw request\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chess game with the given id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chess/:id\": {\n                  \"get\": {\n                        \"tags\": [\"chess\"],\n                        \"description\": \"get chess summary of a user\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1ttt~1%3Aid/get/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return chess summary of a user\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chat/new\": {\n                  \"post\": {\n                        \"tags\": [\"chat\"],\n                        \"description\": \"create new chat room chat\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return a chatId to user socket io to join chat\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chat/join\": {\n                  \"put\": {\n                        \"tags\": [\"chat\"],\n                        \"description\": \"join a exist room chat\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return a chatId to user socket io to join chat\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"400\": {\n                                    \"description\": \"wrong format\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chat with the given Id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chat/send-message\": {\n                  \"put\": {\n                        \"tags\": [\"chat\"],\n                        \"description\": \"add new message to room chat\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"return ok\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this room\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chat with the given Id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            },\n            \"/api/chat/save\": {\n                  \"put\": {\n                        \"tags\": [\"chat\"],\n                        \"description\": \"save a room chat to database chat\",\n                        \"parameters\": [\n                              {\n                                    \"$ref\": \"#/paths/~1api~1auth~1logout/post/parameters/0\"\n                              }\n                        ],\n                        \"requestBody\": {\n                              \"$ref\": \"#/paths/~1api~1ttt~1restart/post/requestBody\"\n                        },\n                        \"responses\": {\n                              \"200\": {\n                                    \"description\": \"chat is saved\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"403\": {\n                                    \"description\": \"user does not belong to this room\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"404\": {\n                                    \"description\": \"chat with the given Id was not found\",\n                                    \"content\": {\n                                          \"application/json\": {\n                                                \"schema\": {\n                                                      \"$ref\": \"#/paths/~1api~1auth~1login/post/responses/400/content/application~1json/schema\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            }\n      },\n      \"components\": {\n            \"schemas\": {\n                  \"user\": {\n                        \"type\": \"object\",\n                        \"description\": \"chat object\",\n                        \"properties\": {\n                              \"id\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"chat id use to join chat in socketId\"\n                              },\n                              \"createDate\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"create new\"\n                              },\n                              \"users\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                          \"type\": \"object\",\n                                          \"description\": \"public user without some sensitive information\",\n                                          \"properties\": {\n                                                \"id\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"username\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"avatarUrl\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"name\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"elo\": {\n                                                      \"type\": \"number\"\n                                                },\n                                                \"createDate\": {\n                                                      \"type\": \"string\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"messages\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                          \"type\": \"object\",\n                                          \"description\": \"message in chat object\",\n                                          \"properties\": {\n                                                \"id\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"createDate\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"content\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"userId\": {\n                                                      \"description\": \"id of user who creates this message\",\n                                                      \"type\": \"string\"\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  },\n                  \"chat\": {\n                        \"$ref\": \"#/components/schemas/user\"\n                  },\n                  \"chat-message\": {\n                        \"type\": \"object\",\n                        \"description\": \"message in chat object\",\n                        \"properties\": {\n                              \"id\": {\n                                    \"type\": \"string\"\n                              },\n                              \"createDate\": {\n                                    \"type\": \"string\"\n                              },\n                              \"content\": {\n                                    \"type\": \"string\"\n                              },\n                              \"userId\": {\n                                    \"description\": \"id of user who creates this message\",\n                                    \"type\": \"string\"\n                              }\n                        }\n                  },\n                  \"apiResponse\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                              \"data\": {\n                                    \"type\": \"object\",\n                                    \"description\": \"it type any base on your api\"\n                              },\n                              \"details\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                          \"field\": {\n                                                \"type\": \"string\",\n                                                \"description\": \"field will be the name of invalid field\",\n                                                \"example\": \"should not be empty\"\n                                          },\n                                          \"message\": {\n                                                \"type\": \"string\",\n                                                \"example\": \"this is an error message\"\n                                          },\n                                          \"errorMessage\": {\n                                                \"type\": \"string\",\n                                                \"example\": \"this is an error message\"\n                                          }\n                                    }\n                              }\n                        }\n                  },\n                  \"gamePlayerFlag\": {\n                        \"type\": \"string\",\n                        \"description\": \"Game Flag for user\",\n                        \"enum\": [\"EMPTY(-1)\", \"USER1(0)\", \"USER2(1)\"]\n                  },\n                  \"gameStatus\": {\n                        \"type\": \"string\",\n                        \"description\": \"Status of game\",\n                        \"enum\": [\"NOT_YET(-1)\", \"PLAYING(0)\", \"END(1)\", \"DRAW(2)\"]\n                  },\n                  \"publicUser\": {\n                        \"type\": \"object\",\n                        \"description\": \"public user without some sensitive information\",\n                        \"properties\": {\n                              \"id\": {\n                                    \"type\": \"string\"\n                              },\n                              \"username\": {\n                                    \"type\": \"string\"\n                              },\n                              \"avatarUrl\": {\n                                    \"type\": \"string\"\n                              },\n                              \"name\": {\n                                    \"type\": \"string\"\n                              },\n                              \"elo\": {\n                                    \"type\": \"number\"\n                              },\n                              \"createDate\": {\n                                    \"type\": \"string\"\n                              }\n                        }\n                  },\n                  \"gamePlayer\": {\n                        \"type\": \"object\",\n                        \"description\": \"information of player in game\",\n                        \"properties\": {\n                              \"id\": {\n                                    \"type\": \"string\"\n                              },\n                              \"username\": {\n                                    \"type\": \"string\"\n                              },\n                              \"avatarUrl\": {\n                                    \"type\": \"string\"\n                              },\n                              \"name\": {\n                                    \"type\": \"string\"\n                              },\n                              \"elo\": {\n                                    \"type\": \"number\"\n                              },\n                              \"isDraw\": {\n                                    \"type\": \"boolean\"\n                              },\n                              \"ready\": {\n                                    \"type\": \"boolean\"\n                              },\n                              \"flag\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Game Flag for user\",\n                                    \"enum\": [\"EMPTY(-1)\", \"USER1(0)\", \"USER2(1)\"]\n                              },\n                              \"currentTurn\": {\n                                    \"type\": \"boolean\"\n                              }\n                        }\n                  },\n                  \"ticTacToeBoard\": {\n                        \"type\": \"object\",\n                        \"description\": \"tic tac toe information about a game\",\n                        \"properties\": {\n                              \"id\": {\n                                    \"type\": \"string\"\n                              },\n                              \"startDate\": {\n                                    \"type\": \"string\"\n                              },\n                              \"lastStep\": {\n                                    \"type\": \"string\"\n                              },\n                              \"status\": {\n                                    \"type\": \"string\"\n                              },\n                              \"board\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                          \"type\": \"array\",\n                                          \"items\": {\n                                                \"$ref\": \"#/components/schemas/gamePlayer/properties/flag\"\n                                          }\n                                    }\n                              },\n                              \"currentTurn\": {\n                                    \"type\": \"boolean\"\n                              },\n                              \"users\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                          \"type\": \"object\",\n                                          \"description\": \"information of player in game\",\n                                          \"properties\": {\n                                                \"id\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"username\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"avatarUrl\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"name\": {\n                                                      \"type\": \"string\"\n                                                },\n                                                \"elo\": {\n                                                      \"type\": \"number\"\n                                                },\n                                                \"isDraw\": {\n                                                      \"type\": \"boolean\"\n                                                },\n                                                \"ready\": {\n                                                      \"type\": \"boolean\"\n                                                },\n                                                \"flag\": {\n                                                      \"$ref\": \"#/components/schemas/gamePlayer/properties/flag\"\n                                                },\n                                                \"currentTurn\": {\n                                                      \"type\": \"boolean\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"isBotMode\": {\n                                    \"type\": \"boolean\"\n                              },\n                              \"winner\": {\n                                    \"$ref\": \"#/components/schemas/gamePlayer/properties/flag\"\n                              },\n                              \"chatId\": {\n                                    \"type\": \"string\"\n                              }\n                        }\n                  },\n                  \"chessRole\": {\n                        \"type\": \"string\",\n                        \"description\": \"Role of chess\",\n                        \"enum\": [\"KING(1)\", \"QUEEN(2)\", \"ROOK(3)\", \"KNIGHT(4)\", \"BISHOP(5)\", \"PAWN(6)\", \"EMPTY(-1)\"]\n                  },\n                  \"chessMoveRedis\": {\n                        \"type\": \"object\",\n                        \"description\": \"Information about move in chessBoard\",\n                        \"properties\": {\n                              \"chessRole\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Role of chess\",\n                                    \"enum\": [\"KING(1)\", \"QUEEN(2)\", \"ROOK(3)\", \"KNIGHT(4)\", \"BISHOP(5)\", \"PAWN(6)\", \"EMPTY(-1)\"]\n                              },\n                              \"flag\": {\n                                    \"$ref\": \"#/components/schemas/gamePlayer/properties/flag\"\n                              },\n                              \"x\": {\n                                    \"type\": \"number\"\n                              },\n                              \"y\": {\n                                    \"type\": \"number\"\n                              }\n                        }\n                  },\n                  \"chessMove\": {\n                        \"type\": \"object\",\n                        \"description\": \"Information about move in database\",\n                        \"properties\": {\n                              \"chessRole\": {\n                                    \"$ref\": \"#/components/schemas/chessMoveRedis/properties/chessRole\"\n                              },\n                              \"flag\": {\n                                    \"$ref\": \"#/components/schemas/gamePlayer/properties/flag\"\n                              },\n                              \"toX\": {\n                                    \"type\": \"number\"\n                              },\n                              \"fromX\": {\n                                    \"type\": \"number\"\n                              },\n                              \"toY\": {\n                                    \"type\": \"number\"\n                              },\n                              \"fromY\": {\n                                    \"type\": \"number\"\n                              }\n                        }\n                  },\n                  \"chessBoard\": {\n                        \"type\": \"object\",\n                        \"description\": \"information of chess board\",\n                        \"properties\": {\n                              \"id\": {\n                                    \"type\": \"string\"\n                              },\n                              \"isBotMode\": {\n                                    \"type\": \"boolean\"\n                              },\n                              \"turn\": {\n                                    \"type\": \"boolean\"\n                              },\n                              \"users\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                          \"$ref\": \"#/components/schemas/ticTacToeBoard/properties/users/items\"\n                                    }\n                              },\n                              \"moves\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                          \"type\": \"object\",\n                                          \"description\": \"Information about move in database\",\n                                          \"properties\": {\n                                                \"chessRole\": {\n                                                      \"$ref\": \"#/components/schemas/chessMoveRedis/properties/chessRole\"\n                                                },\n                                                \"flag\": {\n                                                      \"$ref\": \"#/components/schemas/gamePlayer/properties/flag\"\n                                                },\n                                                \"toX\": {\n                                                      \"type\": \"number\"\n                                                },\n                                                \"fromX\": {\n                                                      \"type\": \"number\"\n                                                },\n                                                \"toY\": {\n                                                      \"type\": \"number\"\n                                                },\n                                                \"fromY\": {\n                                                      \"type\": \"number\"\n                                                }\n                                          }\n                                    }\n                              },\n                              \"winner\": {\n                                    \"$ref\": \"#/components/schemas/gamePlayer/properties/flag\"\n                              },\n                              \"status\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Status of game\",\n                                    \"enum\": [\"NOT_YET(-1)\", \"PLAYING(0)\", \"END(1)\", \"DRAW(2)\"]\n                              },\n                              \"startDate\": {\n                                    \"type\": \"string\"\n                              },\n                              \"chatId\": {\n                                    \"type\": \"string\"\n                              },\n                              \"chessPiece\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                          \"x\": {\n                                                \"type\": \"number\"\n                                          },\n                                          \"y\": {\n                                                \"type\": \"number\"\n                                          }\n                                    }\n                              },\n                              \"board\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                          \"type\": \"array\",\n                                          \"items\": {\n                                                \"type\": \"object\",\n                                                \"description\": \"Flag for chess\",\n                                                \"properties\": {\n                                                      \"chessRole\": {\n                                                            \"$ref\": \"#/components/schemas/chessMoveRedis/properties/chessRole\"\n                                                      },\n                                                      \"flag\": {\n                                                            \"$ref\": \"#/components/schemas/gamePlayer/properties/flag\"\n                                                      }\n                                                }\n                                          }\n                                    }\n                              }\n                        }\n                  }\n            }\n      }\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/ttt/pvp: post: parameters: parse parameter \"\": resolve \"#/paths/~1api~1auth~1logout/post/parameters/0\" reference: component by reference not found"
}