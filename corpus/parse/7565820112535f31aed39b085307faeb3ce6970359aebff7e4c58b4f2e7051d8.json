{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geoadmin/service-stac"
		},
		"file": {
			"name": "schemas.yaml",
			"size": 0,
			"path": "spec/components/schemas.yaml",
			"byteSize": 51043,
			"content": "openapi: 3.0.1\ncomponents:\n  schemas:\n    assetQuery:\n     additionalProperties:\n       $ref: \"#/components/schemas/assetQueryProp\"\n     description: \u003e-\n       Define which properties of the asset to query and the operations to apply.\n\n\n       The following properties can be queried:\n\n       - `type`: query for assets with this specific media type\n\n       - `proj:epsg`: query for assets with this specific epsg\n\n       - `eo:gsd`: query for assets with this specific gsd\n\n       - `geoadmin:variant`: query for assets with this specific variant\n     example:\n       type:\n         eq: image/tiff\n     type: object\n    assetQueryFilter:\n     description: Allows users to query asset properties for specific values\n     properties:\n       assetQuery:\n         $ref: \"#/components/schemas/assetQuery\"\n     type: object\n    assetQueryProp:\n     anyOf:\n       - description: \u003e-\n           If the object doesn't contain any of the operators, it is equivalent to using the\n           equals operator\n       - description: Match using an operator\n         properties:\n           contains:\n             description: \u003e-\n               Find items with a property that contains the specified\n               literal string, e.g., matches \".*\u003cSTRING\u003e.*\".\n               A case-insensitive comparison must be performed.\n             type: string\n           endsWith:\n             description: \u003e-\n               Find items with a property that ends with the specified string. A case-insensitive\n               comparison must be performed.\n             type: string\n           eq:\n             description: \u003e-\n               Find items with a property that is equal to the specified value. For strings, a\n               case-insensitive comparison must be performed.\n             nullable: true\n             oneOf:\n               - type: string\n               - type: number\n               - type: boolean\n           in:\n             description: \u003e-\n               Find items with a property that equals at least one entry in the specified array.\n               A case-insensitive comparison must be performed.\n             items:\n               oneOf:\n                 - type: string\n                 - type: number\n             type: array\n           startsWith:\n             description: \u003e-\n               Find items with a property that begins with the specified string. A case-insensitive\n               comparison must be performed.\n             type: string\n         type: object\n     description: Apply query operations to a specific property\n    assetBase:\n      title: Asset\n      description: The `property name` defines the ID of the Asset.\n      type: object\n      required:\n        - type\n        - created\n        - updated\n      properties:\n        title:\n          $ref: \"#/components/schemas/title\"\n        description:\n          $ref: \"#/components/schemas/description\"\n        type:\n          $ref: \"#/components/schemas/type\"\n        href:\n          $ref: \"#/components/schemas/href\"\n        checksum:multihash:\n          $ref: \"#/components/schemas/checksumMultihashReadOnly\"\n        # roles:\n        #   $ref: '#/components/schemas/roles'\n        \"geoadmin:variant\":\n          $ref: \"#/components/schemas/geoadminVariant\"\n        \"geoadmin:lang\":\n          $ref: \"#/components/schemas/geoadminLang\"\n        \"proj:epsg\":\n          $ref: \"#/components/schemas/projEpsg\"\n        \"eo:gsd\":\n          $ref: \"#/components/schemas/eoGsd\"\n        created:\n          $ref: \"#/components/schemas/created\"\n        updated:\n          $ref: \"#/components/schemas/updated\"\n    bbox:\n      description: |\n        The bounding box is provided as four numbers:\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n\n        The coordinate reference system of the values is WGS84\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n\n        For WGS84 longitude/latitude the values are in most cases the sequence\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n        latitude. However, in cases where the box spans the antimeridian the\n        first value (west-most box edge) is larger than the third value\n        (east-most box edge).\n\n        Example: The bounding box of Switzerland in\n        WGS 84 (from 5.96°E to 10.49°E and from 45.82°N to 47.81°N) would be\n        represented in JSON as `[5.96, 45.82, 10.49, 47.81]` and in a query as\n        `bbox=5.96,45.82,10.49,47.81`.\"\n      example:\n        - 7.0906249\n        - 45.9160584\n        - 7.1035698\n        - 45.925093\n      items:\n        type: number\n      maxItems: 4\n      minItems: 4\n      type: array\n      readOnly: true\n    bboxfilter:\n      description: \u003e-\n        Only features that have a geometry that intersects the bounding box are selected.\n        The bounding box is provided as four numbers:\n\n\n        * Lower left corner, coordinate axis 1\n\n        * Lower left corner, coordinate axis 2\n\n        * Upper right corner, coordinate axis 1\n\n        * Upper right corner, coordinate axis 2\n\n\n        The coordinate reference system of the values is WGS84\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n\n\n        For WGS84 longitude/latitude the values are in most cases the sequence\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n        latitude. However, in cases where the box spans the antimeridian the\n        first value (west-most box edge) is larger than the third value\n        (east-most box edge).\n\n\n        Example: The bounding box of Switzerland in\n        WGS 84 (from 5.96°E to 10.49°E and from 45.82°N to 47.81°N) would be\n        represented in JSON as `[5.96, 45.82, 10.49, 47.81]` and in a query as\n        `bbox=5.96,45.82,10.49,47.81`.\"\n      example:\n        - 7.0906249\n        - 45.9160584\n        - 7.1035698\n        - 45.925093\n      items:\n        type: number\n      maxItems: 4\n      minItems: 4\n      type: array\n      readOnly: false\n    bboxFilter:\n      properties:\n        bbox:\n          $ref: \"#/components/schemas/bboxfilter\"\n    checksumMultihash:\n      description: \u003e-\n        `sha2-256` checksum of the asset in [multihash](https://multiformats.io/multihash/)\n        format.\n\n      example: 12200ADEC47F803A8CF1055ED36750B3BA573C79A3AF7DA6D6F5A2AED03EA16AF3BC\n      pattern: ^[a-f0-9]+$\n      title: Multihash\n      type: string\n    checksumMultihashReadOnly:\n      description: |\n        `sha2-256` checksum of the asset in [multihash](https://multiformats.io/multihash/) format.\n\n      example: 90e402107a7f2588a85362b9beea2a12d4514d45\n      pattern: ^[a-f0-9]+$\n      title: Multihash\n      type: string\n      readOnly: true\n    created:\n      description: RFC 3339 compliant datetime string, time when the object was created\n      example: 2018-02-12T23:20:50Z\n      type: string\n      format: date-time\n      readOnly: true\n    collectionBase:\n      properties:\n        crs:\n          default:\n            - http://www.opengis.net/def/crs/OGC/1.3/CRS84\n          description: The list of coordinate reference systems supported by the service\n          example:\n            - http://www.opengis.net/def/crs/OGC/1.3/CRS84\n          items:\n            type: string\n          type: array\n          readOnly: true\n        description:\n          description: A description of the features in the collection\n          example: \u003e-\n            Swiss Map Raster are a conversion of the map image into a digital form\n            with no direct bearing on the individual map elements.\n\n\n            The information is structured only in colour layers. Swiss Map Raster pixel\n            maps are ideal for finding background information for a broad variety of\n            screen applications, web and mobile applications and services, as well as\n            for geographic information systems. They can also be used as basic maps\n            for a variety of purposes (digital printing, plots, offset printing, etc.).\n          type: string\n        extent:\n          $ref: \"#/components/schemas/extent\"\n        id:\n          description: Identifier of the collection used, for example, in URIs\n          example: ch.swisstopo.pixelkarte-farbe-pk200.noscale\n          type: string\n        itemType:\n          default: Feature\n          description: \u003e-\n            Indicator about the type of the items in the collection (the default value is 'Feature').\n          type: string\n          readOnly: true\n        license:\n          $ref: \"#/components/schemas/license\"\n        providers:\n          $ref: \"#/components/schemas/providers\"\n        stac_version:\n          $ref: \"#/components/schemas/stac_version\"\n        summaries:\n          additionalProperties:\n            oneOf:\n              - items:\n                  description: A value of any type.\n                title: Set of values\n                type: array\n              - description: \u003e-\n                  By default, only ranges with a minimum and a maximum value can\n                  be specified. Ranges can be specified for ordinal values only,\n                  which means they need to have a rank order. Therefore, ranges\n                  can only be specified for numbers and some special types of\n                  strings. Examples: grades (A to F), dates or times.\n                  Implementors are free to add other derived statistical values\n                  to the object, for example `mean` or `stddev`.\n                properties:\n                  max:\n                    anyOf:\n                      - type: string\n                      - type: number\n                  min:\n                    anyOf:\n                      - type: string\n                      - type: number\n                required:\n                  - min\n                  - max\n                title: Statistics\n                type: object\n          description: \u003e-\n            Summaries are either a unique set of all available values *or*\n            statistics. Statistics by default only specify the range (minimum\n            and maximum values), but can optionally be accompanied by additional\n            statistical values. The range can specify the potential range of\n            values, but it is recommended to be as precise as possible. The set\n            of values must contain at least one element and it is strongly\n            recommended to list all values. It is recommended to list as many\n            properties as reasonable so that consumers get a full overview of\n            the Collection. Properties that are covered by the Collection\n            specification (e.g. `providers` and `license`) may not be repeated\n            in the summaries.\n          type: object\n          readOnly: true\n          example:\n            eo:gsd:\n              - 10\n              - 20\n            geoadmin:variant:\n              - kgrel\n              - komb\n              - krel\n            geoadmin:lang:\n              - de\n              - fr\n            proj:epsg:\n              - 2056\n        title:\n          description: Human readable title of the collection\n          example: National Map 1:200'000\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        updated:\n          $ref: \"#/components/schemas/updated\"\n      required:\n        - id\n        - stac_version\n        - description\n        - license\n        - extent\n        - created\n        - updated\n      type: object\n    collection:\n      allOf:\n        - $ref: \"#/components/schemas/collectionBase\"\n        - type: object\n          required:\n            - links\n          properties:\n            links:\n              type: array\n              items:\n                $ref: \"#/components/schemas/link\"\n              example:\n                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale\n                  rel: self\n                - href: https://data.geo.admin.ch/api/stac/v0.9/\n                  rel: root\n                - href: https://data.geo.admin.ch/api/stac/v0.9\n                  rel: parent\n                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items\n                  rel: items\n                - href: https://www.swisstopo.admin.ch/en/home/meta/conditions/geodata/free-geodata.html\n                  rel: license\n                  title: Licence for the free geodata of the Federal Office of Topography swisstopo\n                - href: https://www.geocat.ch/geonetwork/srv/eng/catalog.search#/metadata/4c8c7c58-61c7-4a61-8e7a-6ffb95d183df\n                  rel: describedby\n    collections:\n      properties:\n        collections:\n          items:\n            $ref: \"#/components/schemas/collection\"\n          type: array\n        links:\n          items:\n            $ref: \"#/components/schemas/link\"\n          example:\n            - href: https://data.geo.admin.ch/api/stac/v0.9/collections\n              rel: self\n            - href: https://data.geo.admin.ch/api/stac/v0.9/\n              rel: root\n            - href: https://data.geo.admin.ch/api/stac/v0.9/collections?cursor=10ab\n              rel: next\n            - href: https://data.geo.admin.ch/api/stac/v0.9/collections?cursor=10cd\n              rel: previous\n      required:\n        - links\n        - collections\n      type: object\n    collectionsArray:\n      description: \u003e-\n        Array of Collection IDs to include in the search for items.\n        Only Items in one of the provided Collections will be searched.\n      items:\n        type: string\n      type: array\n    collectionsFilter:\n      description: Only returns the collections specified\n      properties:\n        collections:\n          $ref: \"#/components/schemas/collectionsArray\"\n      type: object\n      example:\n        collections:\n        - ch.swisstopo.swisstlmregio\n        - ch.bfe.energieschweiz\n    confClasses:\n      properties:\n        conformsTo:\n          items:\n            type: string\n          type: array\n      required:\n        - conformsTo\n      type: object\n    datetime:\n      description: RFC 3339 compliant datetime string\n      example: 2018-02-12T23:20:50Z\n      type: string\n      format: date-time\n    datetimeQuery:\n      description: \u003e-\n        Either a date-time or an interval, open or closed. Date and time expressions\n        adhere to RFC 3339. Open intervals are expressed using double-dots.\n\n        Examples:\n\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n\n        * A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n\n        * Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\n\n        Only features that have a temporal property that intersects the value of\n        `datetime` are selected.\n\n\n        When used as URL query argument, the value must be correctly url-encoded.\n      example: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\n      type: string\n    datetimeFilter:\n      properties:\n        datetime:\n          $ref: \"#/components/schemas/datetimeQuery\"\n    description:\n      description: \u003e-\n        Detailed multi-line description to fully explain the catalog or\n        collection.\n\n\n        [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for rich\n        text representation.\n      type: string\n    eoGsd:\n      description: \u003e-\n        GSD is the nominal Ground Sample Distance for the data, as measured in meters on the ground.\n\n\n        There are many definitions of GSD. The value of this attribute should be related to the\n        spatial resolution at the sensor, rather than the pixel size of images after ortho-rectification,\n        pansharpening, or scaling. The GSD of a sensor can vary depending on off-nadir and\n        wavelength, so it is at the discretion of the implementer to decide which value most\n        accurately represents the GSD. For example, Landsat8 optical and short-wave IR bands are\n        all 30 meters, but the panchromatic band is 15 meters. The eo:gsd should be 30 meters in\n        this case because that is nominal spatial resolution at the sensor. The Planet PlanetScope\n        Ortho Tile Product has an eo:gsd of 3.7 (or 4 if rounding), even though the pixel size of\n        the images is 3.125. For example, one might choose for WorldView-2 the Multispectral 20°\n        off-nadir value of 2.07 and for WorldView-3 the Multispectral 20° off-nadir value of 1.38.\n      example: 2.5\n      title: Ground Sample Distance\n      type: number\n    exception:\n      description: \u003e-\n        Information about the exception: an error code plus an optional description.\n      properties:\n        code:\n          type: integer\n          example: 500\n        description:\n          anyOf:\n            - type: string\n            - type: array\n              items:\n                anyOf:\n                  - type: string\n                  - type: object\n            - type: object\n      required:\n        - code\n      type: object\n    extent:\n      description: \u003e-\n        The extent of the features in the collection. In the Core only spatial and temporal\n        extents are specified. Extensions may add additional members to represent other\n        extents, for example, thermal or pressure ranges.\n      properties:\n        spatial:\n          description: The spatial extent of the features in the collection.\n          properties:\n            bbox:\n              description: \u003e-\n                One or more bounding boxes that describe the spatial extent of the dataset.\n                In the Core only a single bounding box is supported. Extensions may support\n                additional areas. If multiple areas are provided, the union of the bounding\n                boxes describes the spatial extent.\n              items:\n                description: \u003e-\n                  Each bounding box is provided as four or six numbers, depending on\n                  whether the coordinate reference system includes a vertical axis\n                  (height or depth):\n\n\n                  * Lower left corner, coordinate axis 1\n\n                  * Lower left corner, coordinate axis 2\n\n                  * Upper right corner, coordinate axis 1\n\n                  * Upper right corner, coordinate axis 2\n\n\n                  The coordinate reference system of the values is WGS 84 longitude/latitude\n                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n\n\n                  For WGS 84 longitude/latitude the values are in most cases the sequence of\n                  minimum longitude, minimum latitude, maximum longitude and maximum latitude.\n                  However, in cases where the box spans the antimeridian the first value\n                  (west-most box edge) is larger than the third value (east-most box edge).\n\n\n                  If the vertical axis is included, the third and the sixth number are\n                  the bottom and the top of the 3-dimensional bounding box.\n\n\n                  If a feature has multiple spatial geometry properties, it is the decision of the\n                  server whether only a single spatial geometry property is used to determine\n                  the extent or all relevant geometries.\n                example:\n                  - 5.685114\n                  - 45.534903\n                  - 10.747775\n                  - 47.982586\n                items:\n                  type: number\n                maxItems: 6\n                minItems: 4\n                type: array\n              minItems: 1\n              type: array\n          required:\n            - bbox\n          type: object\n        temporal:\n          description: The temporal extent of the features in the collection.\n          properties:\n            interval:\n              description: \u003e-\n                One time interval that describe the temporal extent of the dataset.\n              items:\n                description: \u003e-\n                  Begin and end times of the time interval.\n                example:\n                  - \"2019-01-01T00:00:00Z\"\n                  - \"2019-01-02T00:00:00Z\"\n                items:\n                  format: date-time\n                  nullable: false\n                  type: string\n                maxItems: 2\n                minItems: 2\n                type: array\n              minItems: 1\n              maxItems: 1\n              type: array\n          required:\n            - interval\n          type: object\n      required:\n        - spatial\n        - temporal\n      type: object\n      readOnly: true\n    geoadminLang:\n      enum:\n        - de\n        - it\n        - fr\n        - rm\n        - en\n      title: Product language\n      type: string\n    geoadminVariant:\n      example: komb\n      title: Product variants\n      type: string\n    href:\n      type: string\n      format: url\n      description: Link to the asset object\n      readOnly: true\n      example: |\n        http://data.geo.admin.ch/ch.swisstopo.swissimage/collections/cs/items/CS3-20160503_132130_04/thumb.png\n    ids:\n      description: \u003e-\n        Array of Item ids to return. All other filter parameters that further\n        restrict the number of search results are ignored\n      items:\n        type: string\n      type: array\n    idsFilter:\n      description: Only returns items that match the array of given ids\n      properties:\n        ids:\n          $ref: \"#/components/schemas/ids\"\n      type: object\n      example:\n        ids:\n        - swisstlmregio-2019\n        - swisstlmregio-2020\n    intersectsFilter:\n      description: Only returns items that intersect with the provided polygon.\n      properties:\n        intersects:\n          oneOf:\n          - $ref: \"#/components/schemas/geoJsonPoint\"\n          - $ref: \"#/components/schemas/geoJsonLineString\"\n          - $ref: \"#/components/schemas/geoJsonPolygon\"\n          - $ref: \"#/components/schemas/geoJsonMultiPoint\"\n          - $ref: \"#/components/schemas/geoJsonMultiLineString\"\n          - $ref: \"#/components/schemas/geoJsonMultiPolygon\"\n      type: object\n      example:\n        intersects:\n          type: \"Point\"\n          coordinates:\n            - 7\n            - 46\n    itemBase:\n      description: \u003e-\n        A GeoJSON Feature augmented with foreign members that contain values relevant to a\n        STAC entity\n      properties:\n        assets:\n          $ref: \"#/components/schemas/itemAssets\"\n        bbox:\n          $ref: \"#/components/schemas/bbox\"\n        geometry:\n          # Original schemas were defined here:\n          # https://geojson.org/schema/Geometry.json\n          $ref: \"#/components/schemas/itemGeometry\"\n        properties:\n          $ref: \"#/components/schemas/itemProperties\"\n          readOnly: true\n        stac_version:\n          $ref: \"#/components/schemas/stac_version\"\n          readOnly: true\n        type:\n          $ref: \"#/components/schemas/itemType\"\n      required:\n        - stac_version\n        - type\n        - geometry\n        - bbox\n        - properties\n        - assets\n      type: object\n    item:\n      allOf:\n        - type: object\n          required:\n            - id\n            - links\n          properties:\n            id:\n              $ref: \"#/components/schemas/itemId\"\n            links:\n              items:\n                $ref: \"#/components/schemas/link\"\n              type: array\n              example:\n                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items/smr50-263-2016\n                  rel: self\n                - href: https://data.geo.admin.ch/api/stac/v0.9/\n                  rel: root\n                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale\n                  rel: parent\n                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale\n                  rel: collection\n        - $ref: \"#/components/schemas/itemBase\"\n    items:\n      description: \u003e-\n        A FeatureCollection augmented with foreign members that contain values relevant\n        to a STAC entity\n      properties:\n        features:\n          items:\n            $ref: \"#/components/schemas/item\"\n          type: array\n        links:\n          items:\n            $ref: \"#/components/schemas/link\"\n          type: array\n          example:\n            - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items\n              rel: self\n            - href: https://data.geo.admin.ch/api/stac/v0.9/\n              rel: root\n            - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale\n              rel: parent\n            - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items?cursor=10ab\n              rel: next\n            - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items?cursor=10acd\n              rel: previous\n        type:\n          enum:\n            - FeatureCollection\n          type: string\n      required:\n        - features\n        - type\n      type: object\n    itemAssets:\n      title: Assets\n      description: List of Assets attached to this feature.\n      additionalProperties:\n        $ref: \"#/components/schemas/assetBase\"\n      type: object\n      readOnly: true\n      example:\n        smr50-263-2016-2056-kgrs-2.5.tiff:\n          checksum:multihash: 12200ADEC47F803A8CF1055ED36750B3BA573C79A3AF7DA6D6F5A2AED03EA16AF3BC\n          created: \"2020-07-14T12:30:00Z\"\n          eo:gsd: 2.5\n          geoadmin:variant: kgrs\n          href: https://data.geo.admin.ch/ch.swisstopo.pixelkarte-farbe-pk50.noscale/smr50-263-2016-2056-kgrs-2.5.tiff\n          proj:epsg: 2056\n          type: image/tiff; application=geotiff\n          updated: \"2020-07-14T12:30:00Z\"\n        smr50-263-2016-2056-komb-2.5.tiff:\n          checksum:multihash: 12200ADEC47F803A8CF1055ED36750B3BA573C79A3AF7DA6D6F5A2AED03EA16AF3BC\n          created: \"2020-07-14T12:30:00Z\"\n          eo:gsd: 2.5\n          geoadmin:variant: komb\n          href: https://data.geo.admin.ch/ch.swisstopo.pixelkarte-farbe-pk50.noscale/smr50-263-2016-2056-komb-2.5.tiff\n          proj:epsg: \"2056\"\n          type: image/tiff; application=geotiff\n          updated: \"2020-07-14T12:30:00Z\"\n        smr50-263-2016-2056-krel-2.5.tiff:\n          checksum:multihash: 12200ADEC47F803A8CF1055ED36750B3BA573C79A3AF7DA6D6F5A2AED03EA16AF3BC\n          created: \"2020-07-14T12:30:00Z\"\n          eo:gsd: 2.5\n          geoadmin:variant: krel\n          href: https://data.geo.admin.ch/ch.swisstopo.pixelkarte-farbe-pk50.noscale/smr50-263-2016-2056-krel-2.5.tiff\n          proj:epsg: \"2056\"\n          type: image/tiff; application=geotiff\n          updated: \"2020-07-14T12:30:00Z\"\n    itemsSearch:\n      description: \u003e-\n        A GeoJSON FeatureCollection augmented with foreign members that contain values relevant\n        to a STAC entity\n      properties:\n        features:\n          items:\n            $ref: \"#/components/schemas/item\"\n          type: array\n        type:\n          enum:\n            - FeatureCollection\n          type: string\n      required:\n        - features\n        - type\n      type: object\n    itemsSearchGet:\n      allOf:\n        - $ref: \"#/components/schemas/itemsSearch\"\n        - type: object\n          properties:\n            links:\n              $ref: \"#/components/schemas/itemsSearchLinks\"\n    itemsSearchPost:\n      allOf:\n        - $ref: \"#/components/schemas/itemsSearch\"\n        - type: object\n          properties:\n            links:\n              $ref: \"#/components/schemas/itemsSearchPostLinks\"\n    itemsSearchLinks:\n      description: \u003e-\n        An array of links. Can be used for pagination, e.g. by providing a link with the `next`\n        relation type.\n      example:\n        - href: https://data.geo.admin.ch/api/stac/v0.9/search\n          rel: self\n        - href: https://data.geo.admin.ch/api/stac/v0.9/search?cursor=10ab\n          rel: next\n      items:\n        $ref: \"#/components/schemas/link\"\n      type: array\n    itemsSearchPostLinks:\n      description: \u003e-\n        An array of links. Can be used for pagination, e.g. by providing a link with the `next`\n        relation type.\n      example:\n        - href: https://data.geo.admin.ch/api/stac/v0.9/search\n          rel: self\n        - href: https://data.geo.admin.ch/api/stac/v0.9/search?cursor=10ab\n          rel: next\n          method: POST\n          body: {}\n          merge: true\n      items:\n        $ref: \"#/components/schemas/linkPostSearch\"\n      type: array\n    itemId:\n      title: ID\n      description: Feature identifier (unique per collection)\n      example: smr200-200-4-2019\n      type: string\n    itemGeometry:\n      # oneOf:\n        # - $ref: \"#/components/schemas/geoJsonPoint\"\n        # - $ref: \"#/components/schemas/geoJsonLineString\"\n      $ref: \"#/components/schemas/geoJsonPolygon\"\n        # - $ref: \"#/components/schemas/geoJsonMultiPoint\"\n        # - $ref: \"#/components/schemas/geoJsonMultiLineString\"\n        # - $ref: \"#/components/schemas/geoJsonMultiPolygon\"\n    geoJsonPoint:\n      title: GeoJSON Point\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Point\n        coordinates:\n          description: \u003e-\n            For type \"Point\", the \"coordinates\" member is a single position.\n            The coordinate reference system of the values is WGS84\n            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n          example:\n            [7.0906823, 45.9160584]\n          type: array\n          minItems: 2\n          items:\n            type: number\n    geoJsonLineString:\n      title: GeoJSON LineString\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - LineString\n        coordinates:\n          description: \u003e-\n            For type \"LineString\", the \"coordinates\" member is an array of two or\n            more positions.\n            The coordinate reference system of the values is WGS84\n            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n          example:\n            - [\n              [7.0906823, 45.9160584], [7.1035698, 45.9160977]\n            ]\n          type: array\n          minItems: 2\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    geoJsonPolygon:\n      title: GeoJSON Polygon\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Polygon\n        coordinates:\n          description: \u003e-\n            For type \"Polygon\", the \"coordinates\" member MUST be an array of\n            linear ring coordinate arrays.\n            The coordinate reference system of the values is WGS84\n            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n          example:\n            [\n              [\n                [7.0906823, 45.9160584],\n                [7.1035698, 45.9160977],\n                [7.1035146, 45.925093],\n                [7.0906249, 45.9250537],\n                [7.0906823, 45.9160584]\n              ]\n            ]\n          type: array\n          items:\n            type: array\n            minItems: 4\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    geoJsonMultiPoint:\n      title: GeoJSON MultiPoint\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPoint\n        coordinates:\n          description: \u003e-\n            For type \"MultiPoint\", the \"coordinates\" member is an array of\n            positions.\n            The coordinate reference system of the values is WGS84\n            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n          example:\n            [\n              [7.0906823, 45.9160584],\n              [7.1035698, 45.9160977],\n              [7.1035146, 45.925093]\n            ]\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    geoJsonMultiLineString:\n      title: GeoJSON MultiLineString\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiLineString\n        coordinates:\n          description: \u003e-\n            For type \"MultiLineString\", the \"coordinates\" member is an array of\n            LineString coordinate arrays.\n            The coordinate reference system of the values is WGS84\n            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n          example:\n            [\n                [[7.0906823, 45.9160584], [7.1035698, 45.9160977]],\n                [[7.1035146, 45.925093], [7.0906249, 45.9250537]]\n            ]\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    geoJsonMultiPolygon:\n      title: GeoJSON MultiPolygon\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPolygon\n        coordinates:\n          description: \u003e-\n            For type \"MultiPolygon\", the \"coordinates\" member is an array of\n            Polygon coordinate arrays.\n            The coordinate reference system of the values is WGS84\n            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n          example:\n            [\n              [\n                [\n                  [7.0906823, 45.9160584],\n                  [7.1035698, 45.9160977],\n                  [7.1035146, 45.925093],\n                  [7.0906249, 45.9250537],\n                  [7.0906823, 45.9160584]\n                ]\n              ],\n              [\n                [\n                  [8.5816399, 45.7218735],\n                  [8.5944806, 45.7217417],\n                  [8.5946699, 45.7307358],\n                  [8.581827, 45.7308676],\n                  [8.5816399, 45.7218735]\n                ]\n              ]\n            ]\n          type: array\n          items:\n            type: array\n            items:\n              type: array\n              minItems: 4\n              items:\n                type: array\n                minItems: 2\n                items:\n                  type: number\n    itemProperties:\n      title: Properties\n      description: \u003e-\n        Provides the core metadata fields plus extensions\n\n\n        The item's data timing information can be specified either with\n\n        * One datetime value in the field `datetime`\n\n        * A datetime range with a `start_datetime` and an `end_datetime`\n\n\n        One of the two is required\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        datetime:\n          $ref: \"#/components/schemas/datetime\"\n        start_datetime:\n          $ref: \"#/components/schemas/datetime\"\n        end_datetime:\n          $ref: \"#/components/schemas/datetime\"\n        updated:\n          $ref: \"#/components/schemas/updated\"\n        title:\n          description: Human readable title of the Feature\n          example: Feature title\n          type: string\n          minLength: 1\n          maxLength: 255\n          nullable: true\n      required:\n        - created\n        - updated\n      type: object\n    itemType:\n      title: type\n      description: The GeoJSON type\n      enum:\n        - Feature\n      type: string\n      readOnly: true\n    landingPage:\n      properties:\n        description:\n          example: \u003e-\n            Access to data about buildings in the city of Bonn via a Web API that conforms to\n            the OGC API Features specification.\n          type: string\n        id:\n          type: string\n        links:\n          items:\n            $ref: \"#/components/schemas/link\"\n          type: array\n        stac_version:\n          $ref: \"#/components/schemas/stac_version\"\n        title:\n          example: Buildings in Bonn\n          type: string\n      required:\n        - links\n        - stac_version\n        - id\n        - description\n      type: object\n    license:\n      description: \u003e-\n        License(s) of the data as a SPDX\n        [License identifier](https://spdx.org/licenses/). Alternatively, use\n        `proprietary` if the license is not on the SPDX license list or\n        `various` if multiple licenses apply. In these two cases links to the\n        license texts SHOULD be added, see the `license` link relation type.\n\n\n        Non-SPDX licenses SHOULD add a link to the license text with the\n        `license` relation in the links section. The license text MUST NOT be\n        provided as a value of this field. If there is no public license URL\n        available, it is RECOMMENDED to host the license text and\n        link to it.\n      example: proprietary\n      type: string\n    limit:\n      default: 100\n      description: \u003e-\n        The `limit` parameter limits the number of results that are included\n        in the response.\n\n\n        To retrieve the next bunch of result, use the `next` link in the `links`\n        section of the response.\n\n\n        Minimum = 1. Maximum = 100. Default = 100.\n      example: 20\n      maximum: 100\n      minimum: 1\n      type: integer\n    limitFilter:\n      description: Only returns maximum number of results (page size)\n      properties:\n        limit:\n          $ref: \"#/components/schemas/limit\"\n      type: object\n    linestringGeoJSON:\n      properties:\n        coordinates:\n          items:\n            items:\n              type: number\n            minItems: 2\n            type: array\n          minItems: 2\n          type: array\n        type:\n          enum:\n            - LineString\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n    link:\n      properties:\n        href:\n          example: http://data.example.com/buildings/123\n          format: url\n          type: string\n        rel:\n          description: \u003e-\n            Relationship between the current document and the linked document.\n\n\n            NOTE: the following relations are reserved and automatically generated:\n            `self`, `root`, `parent`, `items`, `collection`, `next`, `previous`\n          example: describedby\n          type: string\n        title:\n          example: Trierer Strasse 70, 53115 Bonn\n          type: string\n        type:\n          description: The media type of the link target\n          example: application/geo+json\n          type: string\n        method:\n          default: GET\n          description: Specifies the HTTP method that the link expects\n          enum:\n            - GET\n            - POST\n          type: string\n      required:\n        - href\n        - rel\n      title: Link\n      type: object\n    linkPostSearch:\n      allOf:\n        - $ref: \"#/components/schemas/link\"\n        - type: object\n          properties:\n            body:\n              default: {}\n              description: For `POST /search` requests, the link can specify the HTTP body as a JSON object.\n              type: object\n            merge:\n              default: false\n              description: \u003e-\n                This is only valid when the server is responding to `POST /search `request.\n\n\n                If merge is true, the client is expected to merge the body value\n                into the current request body before following the link.\n                This avoids passing large post bodies back and forth when following\n                links, particularly for navigating pages through the `POST /search`\n                endpoint.\n              type: boolean\n    multilinestringGeoJSON:\n      properties:\n        coordinates:\n          items:\n            items:\n              items:\n                type: number\n              minItems: 2\n              type: array\n            minItems: 2\n            type: array\n          type: array\n        type:\n          enum:\n            - MultiLineString\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n    multipointGeoJSON:\n      properties:\n        coordinates:\n          items:\n            items:\n              type: number\n            minItems: 2\n            type: array\n          type: array\n        type:\n          enum:\n            - MultiPoint\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n    multipolygonGeoJSON:\n      properties:\n        coordinates:\n          items:\n            items:\n              items:\n                items:\n                  type: number\n                minItems: 2\n                type: array\n              minItems: 4\n              type: array\n            type: array\n          type: array\n        type:\n          enum:\n            - MultiPolygon\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n    numberMatched:\n      description: \u003e-\n        The number of features of the feature type that match the selection\n        parameters like `bbox`.\n      example: 127\n      minimum: 0\n      type: integer\n    numberReturned:\n      description: \u003e-\n        The number of features in the feature collection.\n\n\n        A server may omit this information in a response, if the information\n        about the number of features is not known or difficult to compute.\n\n\n        If the value is provided, the value shall be identical to the number\n        of items in the \"features\" array.\n      example: 10\n      minimum: 0\n      type: integer\n    pointGeoJSON:\n      properties:\n        coordinates:\n          items:\n            type: number\n          minItems: 2\n          type: array\n        type:\n          enum:\n            - Point\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n    polygonGeoJSON:\n      properties:\n        coordinates:\n          items:\n            items:\n              items:\n                type: number\n              minItems: 2\n              type: array\n            minItems: 4\n            type: array\n          type: array\n        type:\n          enum:\n            - Polygon\n          type: string\n      required:\n        - type\n        - coordinates\n      type: object\n      example:\n        coordinates:\n          - - - 7.242974548172171\n              - 46.57310580640624\n            - - 7.243756483316452\n              - 46.35721185723752\n            - - 7.698490766144817\n              - 46.357085154660915\n            - - 7.699524647567326\n              - 46.57297861624267\n            - - 7.242974548172171\n              - 46.57310580640624\n        type: Polygon\n    projEpsg:\n      description: \u003e-\n        A Coordinate Reference System (CRS) is the data reference system\n        (sometimes called a 'projection') used by the asset data, and can\n        usually be referenced using an EPSG code. If the asset data does not have a\n        CRS, such as in the case of non-rectified imagery with Ground Control Points,\n        proj:epsg should be set to null. It should also be set to null if a CRS exists,\n        but for which there is no valid EPSG code.\n\n      example: 2056\n      title: EPSG code.\n      type: integer\n    providers:\n      description: \u003e-\n        A list of providers, which may include all organizations capturing or processing the data\n        or the hosting provider. Providers should be listed in chronological order with the most\n        recent provider being the last element of the list.\n      items:\n        properties:\n          description:\n            description: \u003e-\n              Multi-line description to add further provider information such as processing details\n              for processors and producers, hosting details for hosts or basic contact information.\n\n\n              CommonMark 0.29 syntax MAY be used for rich text representation.\n            type: string\n          name:\n            description: The name of the organization or the individual.\n            type: string\n          roles:\n            description: \u003e-\n              Roles of the provider.\n\n\n              The provider's role(s) can be one or more of the following\n              elements:\n\n\n              * licensor: The organization that is licensing the dataset under\n                the license specified in the collection's license field.\n\n              * producer: The producer of the data is the provider that\n                initially captured and processed the source data, e.g. ESA for\n                Sentinel-2 data.\n\n              * processor: A processor is any provider who processed data to a\n                derived product.\n\n              * host: The host is the actual provider offering the data on their\n                storage. There should be no more than one host, specified as last\n                element of the list.\n            items:\n              enum:\n                - producer\n                - licensor\n                - processor\n                - host\n              type: string\n            type: array\n          url:\n            description: \u003e-\n              Homepage on which the provider describes the dataset and publishes contact information.\n            format: url\n            type: string\n        required:\n          - name\n        title: Provider\n        type: object\n      type: array\n      example:\n        - name: Federal Office of Topography - swisstopo\n          roles:\n            - producer\n            - licensor\n          url: https://www.swisstopo.admin.ch\n    query:\n      additionalProperties:\n        $ref: \"#/components/schemas/queryProp\"\n      description: Define which properties to query and the operations to apply\n      example:\n        title:\n          eq: \"Swissregio\"\n        title:\n          contains: \"Swiss\"\n        created:\n          lte: \"2021-01-01T00:00:00.000Z\"\n        updated:\n          gte: \"2020-01-01T00:00:00.000Z\"\n      type: object\n    queryFilter:\n      description: Allows users to query properties for specific values\n      properties:\n        query:\n          $ref: \"#/components/schemas/query\"\n      type: object\n    queryProp:\n      anyOf:\n        - description: \u003e-\n            If the object doesn't contain any of the operators, it is equivalent to using the\n            equals operator\n        - description: Match using an operator\n          properties:\n            contains:\n              description: \u003e-\n                Find items with a property that contains the specified literal string, e.g., matches\n                \".*\u003cSTRING\u003e.*\". A case-insensitive comparison must be performed.\n              type: string\n            endsWith:\n              description: \u003e-\n                Find items with a property that ends with the specified string. A case-insensitive\n                comparison must be performed.\n              type: string\n            eq:\n              description: \u003e-\n                Find items with a property that is equal to the specified value. For strings, a\n                case-insensitive comparison must be performed.\n              nullable: true\n              oneOf:\n                - type: string\n                - type: number\n                - type: boolean\n            gt:\n              description: Find items with a property value greater than the specified value.\n              oneOf:\n                - format: date-time\n                  type: string\n                - type: number\n            gte:\n              description: Find items with a property value greater than or equal the specified value.\n              oneOf:\n                - format: date-time\n                  type: string\n                - type: number\n            in:\n              description: \u003e-\n                Find items with a property that equals at least one entry in the specified array.\n                A case-insensitive comparison must be performed.\n              items:\n                oneOf:\n                  - type: string\n                  - type: number\n              type: array\n            lt:\n              description: Find items with a property value less than the specified value.\n              oneOf:\n                - format: date-time\n                  type: string\n                - type: number\n            lte:\n              description: Find items with a property value less than or equal the specified value.\n              oneOf:\n                - format: date-time\n                  type: string\n                - type: number\n            neq:\n              description: \u003e-\n                Find items that *don't* contain the specified value. For strings, a case-insensitive\n                comparison must be performed.\n              nullable: true\n              oneOf:\n                - type: string\n                - type: number\n                - type: boolean\n            startsWith:\n              description: \u003e-\n                Find items with a property that begins with the specified string. A case-insensitive\n                comparison must be performed.\n              type: string\n          type: object\n      description: \u003e-\n        Apply query operations to a specific property. The following properties\n        are currently supported: `created`, `updated`, `title`.\n    roles:\n      type: array\n      items:\n        type: string\n      description: Purposes of the asset\n      example:\n        - thumbnail\n    searchBody:\n      allOf:\n        #        - $ref: \"#/components/schemas/assetQueryFilter\"\n        - $ref: \"#/components/schemas/queryFilter\"\n        - $ref: \"#/components/schemas/bboxFilter\"\n        - $ref: \"#/components/schemas/datetimeFilter\"\n        - $ref: \"#/components/schemas/intersectsFilter\"\n        - $ref: \"#/components/schemas/collectionsFilter\"\n        - $ref: \"#/components/schemas/idsFilter\"\n        - $ref: \"#/components/schemas/limitFilter\"\n      description: The search criteria\n      type: object\n    stac_version:\n      example: 0.9.0\n      title: STAC version\n      type: string\n      readOnly: true\n    timeStamp:\n      description: This property indicates the time and date when the response was generated.\n      example: \"2017-08-17T08:05:32Z\"\n      format: date-time\n      type: string\n    title:\n      type: string\n      description: Displayed title\n      example: Thumbnail\n      nullable: true\n      minLength: 1\n      maxLength: 255\n    type:\n      type: string\n      description: Media type of the asset\n      example: image/tiff; application=geotiff\n    updated:\n      description: RFC 3339 compliant datetime string, time when the object was updated\n      example: 2018-02-12T23:20:50Z\n      type: string\n      format: date-time\n      readOnly: true\n",
			"canonicalURL": "/github.com/geoadmin/service-stac@404e7dbef039394caef31c367cfd87db014956d1/-/blob/spec/components/schemas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/geoadmin/service-stac/blob/404e7dbef039394caef31c367cfd87db014956d1/spec/components/schemas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"itemsSearchPost\": resolve \"#/components/schemas/itemsSearchPost\": allOf: property \"links\": $ref: resolve \"#/components/schemas/itemsSearchPostLinks\": items: $ref: resolve \"#/components/schemas/linkPostSearch\": allOf: property \"body\": at spec/components/schemas.yaml:1170:24: parse default: unexpected type: \"object\""
}