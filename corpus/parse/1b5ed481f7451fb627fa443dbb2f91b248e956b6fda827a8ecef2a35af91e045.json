{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Pedigree_GET_POST_PUT.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Germplasm/Pedigree/Pedigree_GET_POST_PUT.yaml",
			"byteSize": 8996,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /pedigree:\n    get:\n      summary: Get a filtered list of pedigree nodes which represent a subset of a pedigree tree\n      description: Get a filtered list of pedigree nodes which represent a subset of a pedigree tree\n      parameters:\n      - name: accessionNumber\n        description: |- \n            The unique identifier for a material or germplasm within a genebank\n\n            MCPD (v2.1) (ACCENUMB) 2. This is the unique identifier for accessions within a genebank, and is assigned when a sample is entered into the genebank collection (e.g. \"PI 113869\").\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: collection\n        description: A specific panel/collection/population name this germplasm belongs to.\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: familyCode\n        description: A familyCode representing the family this germplasm belongs to.\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: binomialName\n        description: The full binomial name (scientific name) of a germplasm\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: genus\n        description: The scientific genus of a germplasm\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: species\n        description: The scientific species of a germplasm\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: synonym \n        description: An alternative name or ID used to reference this germplasm\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: If this parameter is true, include the array of parents in the response\n        in: query\n        name: includeParents\n        required: false\n        schema:\n          type: boolean\n      - description: If this parameter is true, include the array of siblings in the response\n        in: query\n        name: includeSiblings\n        required: false\n        schema:\n          type: boolean\n      - description: If this parameter is true, include the array of progeny in the response\n        in: query\n        name: includeProgeny\n        required: false\n        schema:\n          type: boolean\n      - description: Recursively include ALL of the nodes present in this pedigree tree. \n        in: query\n        name: includeFullTree\n        required: false\n        schema:\n          type: boolean\n      - description: Recursively include this number of levels up the tree in the response\n        in: query\n        name: pedigreeDepth\n        required: false\n        schema:\n          type: integer\n      - description: Recursively include this number of levels down the tree in the response\n        in: query\n        name: progenyDepth\n        required: false\n        schema:\n          type: integer\n      - $ref: '#/components/parameters/commonCropName'\n      - $ref: '#/components/parameters/programDbId'\n      - $ref: '#/components/parameters/trialDbId'\n      - $ref: '#/components/parameters/studyDbId'\n      - $ref: '#/components/parameters/germplasmDbId'\n      - $ref: '#/components/parameters/germplasmName'\n      - $ref: '#/components/parameters/germplasmPUI'\n      - $ref: '#/components/parameters/externalReferenceId'\n      - $ref: '#/components/parameters/externalReferenceSource'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/PedigreeListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Pedigree\n    post:\n      summary: Send a list of new pedigree nodes to a server\n      description: Send a list of new pedigree nodes to a server\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items: \n                $ref: '#/components/schemas/PedigreeNode'\n      responses:\n        '200':\n          $ref: '#/components/responses/PedigreeListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Pedigree\n    put:\n      summary: Send a list of pedigree nodes to update existing information on a server\n      description: Send a list of pedigree nodes to update existing information on a server\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                  $ref: '#/components/schemas/PedigreeNode'\n              example:\n                '\u003cgermplasmDbId_1\u003e':\n                  germplasmName: A0021004\n                  germplasmDbId: \u003cgermplasmDbId_1\u003e\n                  germplasmPUI: http://pui.per/accession/A0000003\n                  defaultDisplayName: A0021004\n                  crossingProjectDbId: 625e745a\n                  crossingYear: 2005\n                  familyCode: F0000203\n                  breedingMethodDbId: ffcce7ef\n                  breedingMethodName: Male Backcross\n                  pedigreeString: A0000592/A0036658\n                  parents:  [{ germplasmDbId: b66958de, germplasmName: A0000592, parentType: MALE },\n                             { germplasmDbId: a55847ed, germplasmName: A0036658, parentType: FEMALE }]\n                  siblings: [{ germplasmDbId: 46c9785f, germplasmName: A0001126 },\n                             { germplasmDbId: d7534a70, germplasmName: A0009514 }]\n                  progeny:  [{ germplasmDbId: c66ddf14, germplasmName: A0006842, parentType: FEMALE },\n                             { germplasmDbId: 3a548793, germplasmName: A0037593, parentType: FEMALE },\n                             { germplasmDbId: \u003cgermplasmDbId_2\u003e, germplasmName: A0031485, parentType: MALE }]\n                '\u003cgermplasmDbId_2\u003e': \n                  germplasmName: A0031485\n                  germplasmDbId: \u003cgermplasmDbId_2\u003e\n                  germplasmPUI: http://pui.per/accession/A0000003\n                  defaultDisplayName: A0031485\n                  crossingProjectDbId: 745ad753\n                  crossingYear: 2005\n                  familyCode: F0000203\n                  breedingMethodDbId: ffcce7ef\n                  breedingMethodName: Male Backcross\n                  pedigreeString: A0021004/A0001126\n                  parents:  [{ germplasmDbId: \u003cgermplasmDbId_1\u003e, germplasmName: A0021004, parentType: MALE },\n                             { germplasmDbId: 7eda5584, germplasmName: A0001126, parentType: FEMALE }]\n                  siblings: [{ germplasmDbId: 5f46c978, germplasmName: A0005469 }]\n                  progeny:  [{ germplasmDbId: ddf14c66, germplasmName: A0001466, parentType: MALE }]\n      responses:\n        '200':\n          $ref: '#/components/responses/PedigreeListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Pedigree\ncomponents:\n  responses:\n    PedigreeListResponse:\n      content:\n        application/json:\n          schema:\n            title: PedigreeListResponse\n            type: object\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                properties:\n                  data:\n                    description: The `data` array is part of the BrAPI standard List Response JSON container. `data` will always contain the primary list of objects being returned by a BrAPI endpoint. `data` is also the only array impacted by the `metadata.pagination` details. When the pagination parameters change, the `data` array will reflect those changes in the JSON response.\n                    items:\n                      $ref: '#/components/schemas/PedigreeNode'\n                    type: array\n                required:\n                - data\n                type: object\n            required:\n            - metadata\n            - result\n      description: OK\n      headers: {}\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@99a2ff6e980fc6b34c5675fe27b7608d0bbf2d4e/-/blob/Specification/BrAPI-Germplasm/Pedigree/Pedigree_GET_POST_PUT.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/99a2ff6e980fc6b34c5675fe27b7608d0bbf2d4e/Specification/BrAPI-Germplasm/Pedigree/Pedigree_GET_POST_PUT.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"PedigreeListResponse\": content: application/json: schema: parse schema: property \"@context\": at Specification/BrAPI-Germplasm/Pedigree/Pedigree_GET_POST_PUT.yaml:211:23: $ref: resolve \"#/components/schemas/Context\": resolve: can't find value for \"components/schemas/Context\""
}