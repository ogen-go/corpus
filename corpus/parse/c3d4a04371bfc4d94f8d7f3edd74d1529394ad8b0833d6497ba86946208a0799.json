{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubeshop/tracetest"
		},
		"file": {
			"name": "tests.yaml",
			"size": 0,
			"path": "api/tests.yaml",
			"byteSize": 6790,
			"content": "openapi: 3.0.0\ncomponents:\n  schemas:\n    Test:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        version:\n          type: integer\n          description: version number of the test\n        serviceUnderTest:\n          $ref: \"./triggers.yaml#/components/schemas/Trigger\"\n        specs:\n          $ref: \"#/components/schemas/TestSpecs\"\n          description: specification of assertions that are going to be made\n\n    TestSpecs:\n      type: object\n      properties:\n        specs:\n          type: array\n          items:\n            type: object\n            properties:\n              selector:\n                $ref: \"#/components/schemas/Selector\"\n              assertions:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Assertion\"\n      example:\n        specs:\n          - selector:\n              query: span[tracetest.span.type=\"http\"]\n              structure:\n                - filters:\n                  - property: tracetest.span.type\n                    operator: '='\n                    value: http\n            assertions:\n            - attribute: tracetest.span.duration\n              comparator: \"\u003c\"\n              expected: \"2000\"\n            - attribute: http.status_code\n              comparator: \"=\"\n              expected: \"200\"\n\n    Assertion:\n      type: object\n      properties:\n        attribute:\n          type: string\n        comparator:\n          type: string\n        expected:\n          type: string\n\n    TestRun:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        traceId:\n          type: string\n          readOnly: true\n        spanId:\n          type: string\n          readOnly: true\n        testVersion:\n          type: integer\n          description: Test version used when running this test run\n        state:\n          type: string\n          enum: [CREATED, EXECUTING, AWAITING_TRACE, AWAITING_TEST_RESULTS, FINISHED, FAILED]\n          description: Current execution state\n        lastErrorState:\n          type: string\n          description: Details of the cause for the last `FAILED` state\n        executionTime:\n          type: integer\n          description: time it took for the test to complete, either success or fail. If the test is still running, it will show the time up to the time of the request\n        createdAt:\n          type: string\n          format: date-time\n        serviceTriggeredAt:\n          type: string\n          format: date-time\n        serviceTriggerCompletedAt:\n          type: string\n          format: date-time\n        obtainedTraceAt:\n          type: string\n          format: date-time\n        completedAt:\n          type: string\n          format: date-time\n        trigger:\n          $ref: \"./triggers.yaml#/components/schemas/Trigger\"\n        triggerResult:\n          $ref: \"./triggers.yaml#/components/schemas/TriggerResult\"\n        trace:\n          $ref: \"./trace.yaml#/components/schemas/Trace\"\n        result:\n          $ref: \"#/components/schemas/AssertionResults\"\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n\n    TestRunInformation:\n      type: object\n      properties:\n        metadata:\n          type: object\n          nullable: true\n          additionalProperties:\n            type: string\n\n    AssertionResults:\n      type: object\n      properties:\n        allPassed:\n          type: boolean\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              selector:\n                $ref: \"#/components/schemas/Selector\"\n              results:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/AssertionResult\"\n      example:\n        allPassed: true\n        results:\n          - selector:\n              query: span[tracetest.span.type=\"http\"]\n              structure:\n                - filters:\n                  - property: tracetest.span.type\n                    operator: '='\n                    value: http\n            results:\n            - assertion:\n                attribute: http.status_code\n                comparator: \"=\"\n                expected: \"200\"\n              allPassed: true\n              spanResults:\n                - spanId: \"123\"\n                  observedValue: \"test\"\n                  passed: true\n            - assertion:\n                attribute: http.status_code\n                comparator: \"=\"\n                expected: \"200\"\n              allPassed: true\n              spanResults:\n                - spanId: \"123\"\n                  observedValue: \"test\"\n                  passed: true\n\n    AssertionResult:\n      type: object\n      properties:\n        assertion:\n          $ref: \"#/components/schemas/Assertion\"\n        allPassed:\n          type: boolean\n        spanResults:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AssertionSpanResult\"\n\n    AssertionSpanResult:\n      type: object\n      properties:\n        spanId:\n          type: string\n        observedValue:\n          type: string\n        passed:\n          type: boolean\n        error:\n          type: string\n\n    DefinitionFile:\n      type: object\n      properties:\n        content:\n          type: string\n\n    Selector:\n      type: object\n      properties:\n        query:\n          type: string\n        structure:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SpanSelector\"\n\n    SpanSelector:\n      type: object\n      nullable: true\n      required:\n        - filters\n      properties:\n        filters:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SelectorFilter\"\n        pseudoClass:\n          $ref: \"#/components/schemas/SelectorPseudoClass\"\n        childSelector:\n          $ref: \"#/components/schemas/SpanSelector\"\n\n    SelectorFilter:\n      type: object\n      required:\n        - property\n        - operator\n        - value\n      properties:\n        property:\n          type: string\n        operator:\n          type: string\n        value:\n          type: string\n\n    SelectorPseudoClass:\n      type: object\n      nullable: true\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        argument:\n          type: integer\n\n    ExportedTestInformation:\n      type: object\n      required:\n        - test\n        - run\n      properties:\n        test:\n          $ref: \"#/components/schemas/Test\"\n        run:\n          $ref: \"#/components/schemas/TestRun\"\n\n    TextDefinition:\n      type: object\n      properties:\n        content:\n          type: string\n",
			"canonicalURL": "/github.com/kubeshop/tracetest@9f773ce82f5331dd5eb3e0fee1552653bc08720a/-/blob/api/tests.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kubeshop/tracetest/blob/9f773ce82f5331dd5eb3e0fee1552653bc08720a/api/tests.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Test\": parse schema: property \"serviceUnderTest\": parse schema: at 1:2572: external \"./triggers.yaml\": get: file: local file reference is not allowed"
}