{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/supabase/supabase"
		},
		"file": {
			"name": "api_v0_openapi.json",
			"size": 0,
			"path": "spec/api_v0_openapi.json",
			"byteSize": 18316,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/v1/projects\": {\n      \"get\": {\n        \"operationId\": \"getProjects\",\n        \"summary\": \"List all projects\",\n        \"description\": \"Returns a list of all projects you've previously created.\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/ProjectResponse\" }\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"createProject\",\n        \"summary\": \"Create a project\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/CreateProjectBody\" } }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/ProjectResponse\" } }\n            }\n          }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/v1/organizations\": {\n      \"get\": {\n        \"operationId\": \"getOrganizations\",\n        \"summary\": \"List all organizations\",\n        \"description\": \"Returns a list of organizations that you currently belong to.\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/OrganizationResponse\" }\n                }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Unexpected error listing organizations\" }\n        },\n        \"tags\": [\"organizations\"],\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"createOrganization_\",\n        \"summary\": \"Create an organization\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/CreateOrganizationBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/OrganizationResponse\" }\n              }\n            }\n          },\n          \"500\": { \"description\": \"Unexpected error creating an organization\" }\n        },\n        \"tags\": [\"organizations\"],\n        \"security\": [{ \"bearer\": [] }]\n      }\n    },\n    \"/v1/projects/{ref}/functions\": {\n      \"get\": {\n        \"operationId\": \"getFunctions\",\n        \"summary\": \"List all functions\",\n        \"description\": \"Returns all functions you've previously added to the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/FunctionResponse\" }\n                }\n              }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve project's functions\" }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }, { \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"createFunction\",\n        \"summary\": \"Create a function\",\n        \"description\": \"Creates a function and adds it to the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/CreateFunctionBody\" } }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/FunctionResponse\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create project's function\" }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }, { \"bearer\": [] }]\n      }\n    },\n    \"/v1/projects/{ref}/functions/{function_slug}\": {\n      \"get\": {\n        \"operationId\": \"getFunction\",\n        \"summary\": \"Retrieve a function\",\n        \"description\": \"Retrieves a function with the specified slug and project.\",\n        \"parameters\": [\n          {\n            \"name\": \"include_body\",\n            \"required\": false,\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"function_slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Function slug\",\n            \"schema\": { \"pattern\": \"/^[A-Za-z0-9_-]+$/\", \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/FunctionSlugResponse\" }\n              }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve function with given slug\" }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }, { \"bearer\": [] }]\n      },\n      \"patch\": {\n        \"operationId\": \"UpdateFunction\",\n        \"summary\": \"Update a function\",\n        \"description\": \"Updates a function with the specified slug and project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"function_slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Function slug\",\n            \"schema\": { \"pattern\": \"/^[A-Za-z0-9_-]+$/\", \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UpdateFunctionBody\" } }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/FunctionResponse\" } }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update function with given slug\" }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }, { \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"deleteFunction\",\n        \"summary\": \"Delete a function\",\n        \"description\": \"Deletes a function with the specified slug from the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          },\n          {\n            \"name\": \"function_slug\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Function slug\",\n            \"schema\": { \"pattern\": \"/^[A-Za-z0-9_-]+$/\", \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to delete function with given slug\" }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }, { \"bearer\": [] }]\n      }\n    },\n    \"/v1/projects/{ref}/secrets\": {\n      \"get\": {\n        \"operationId\": \"getSecrets\",\n        \"summary\": \"List all secrets\",\n        \"description\": \"Returns all secrets you've previously added to the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/SecretResponse\" }\n                }\n              }\n            }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve project's secrets\" }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }, { \"bearer\": [] }]\n      },\n      \"post\": {\n        \"operationId\": \"createSecrets\",\n        \"summary\": \"Bulk create secrets\",\n        \"description\": \"Creates multiple secrets and adds them to the specified project.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/CreateSecretBody\" }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"\" },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to create project's secrets\" }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }, { \"bearer\": [] }]\n      },\n      \"delete\": {\n        \"operationId\": \"deleteSecrets\",\n        \"summary\": \"Bulk delete secrets\",\n        \"description\": \"Deletes all secrets with the given names from the specified project\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } } }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"object\" } } }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to delete secrets with given names\" }\n        },\n        \"tags\": [\"projects\"],\n        \"security\": [{ \"apiKeyHeader\": [], \"apiKeyParam\": [] }, { \"bearer\": [] }]\n      }\n    },\n    \"/v1/projects/{ref}/pgsodium\": {\n      \"get\": {\n        \"operationId\": \"getConfig\",\n        \"summary\": \"Gets project's pgsodium config\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"object\" } } }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to retrieve project's pgsodium config\" }\n        },\n        \"tags\": [\"pgsodium (beta)\"],\n        \"security\": [{ \"bearer\": [] }]\n      },\n      \"put\": {\n        \"operationId\": \"updateConfig\",\n        \"summary\": \"Updates project's pgsodium config. Updating the root_key can cause all data encrypted with the older key to become inaccessible.\",\n        \"parameters\": [\n          {\n            \"name\": \"ref\",\n            \"required\": true,\n            \"in\": \"path\",\n            \"description\": \"Project ref\",\n            \"schema\": { \"minLength\": 20, \"maxLength\": 20, \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UpdatePgsodiumConfigBody\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"object\" } } }\n          },\n          \"403\": { \"description\": \"\" },\n          \"500\": { \"description\": \"Failed to update project's pgsodium config\" }\n        },\n        \"tags\": [\"pgsodium (beta)\"],\n        \"security\": [{ \"bearer\": [] }]\n      }\n    }\n  },\n  \"info\": { \"title\": \"Supabase API (v1)\", \"description\": \"\", \"version\": \"1.0.0\", \"contact\": {} },\n  \"tags\": [\n    { \"name\": \"organizations\", \"description\": \"Organization endpoints\" },\n    { \"name\": \"projects\", \"description\": \"Project endpoints\" }\n  ],\n  \"servers\": [],\n  \"components\": {\n    \"securitySchemes\": { \"bearer\": { \"scheme\": \"bearer\", \"bearerFormat\": \"JWT\", \"type\": \"http\" } },\n    \"schemas\": {\n      \"ProjectResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"organization_id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"region\": { \"type\": \"string\" },\n          \"created_at\": { \"type\": \"string\" }\n        },\n        \"required\": [\"id\", \"organization_id\", \"name\", \"region\", \"created_at\"]\n      },\n      \"CreateProjectBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"db_pass\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"organization_id\": { \"type\": \"string\" },\n          \"plan\": { \"type\": \"string\", \"enum\": [\"free\", \"pro\"] },\n          \"region\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"us-east-1\",\n              \"us-west-1\",\n              \"ap-southeast-1\",\n              \"ap-northeast-1\",\n              \"ap-northeast-2\",\n              \"ap-southeast-2\",\n              \"eu-west-1\",\n              \"eu-west-2\",\n              \"eu-central-1\",\n              \"ca-central-1\",\n              \"ap-south-1\",\n              \"sa-east-1\"\n            ]\n          },\n          \"kps_enabled\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\"db_pass\", \"name\", \"organization_id\", \"plan\", \"region\"]\n      },\n      \"OrganizationResponse\": {\n        \"type\": \"object\",\n        \"properties\": { \"id\": { \"type\": \"string\" }, \"name\": { \"type\": \"string\" } },\n        \"required\": [\"id\", \"name\"]\n      },\n      \"CreateOrganizationBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"name\": { \"type\": \"string\" } },\n        \"required\": [\"name\"]\n      },\n      \"FunctionResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"slug\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"status\": { \"enum\": [\"ACTIVE\", \"REMOVED\", \"THROTTLED\"], \"type\": \"string\" },\n          \"version\": { \"type\": \"number\" },\n          \"created_at\": { \"type\": \"number\" },\n          \"updated_at\": { \"type\": \"number\" },\n          \"verify_jwt\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\"id\", \"slug\", \"name\", \"status\", \"version\", \"created_at\", \"updated_at\"]\n      },\n      \"CreateFunctionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"slug\": { \"type\": \"string\", \"pattern\": \"/^[A-Za-z0-9_-]+$/\" },\n          \"name\": { \"type\": \"string\" },\n          \"body\": { \"type\": \"string\" },\n          \"verify_jwt\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\"slug\", \"name\", \"body\"]\n      },\n      \"FunctionSlugResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"slug\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"status\": { \"enum\": [\"ACTIVE\", \"REMOVED\", \"THROTTLED\"], \"type\": \"string\" },\n          \"version\": { \"type\": \"number\" },\n          \"created_at\": { \"type\": \"number\" },\n          \"updated_at\": { \"type\": \"number\" },\n          \"verify_jwt\": { \"type\": \"boolean\" },\n          \"body\": { \"type\": \"string\" }\n        },\n        \"required\": [\"id\", \"slug\", \"name\", \"status\", \"version\", \"created_at\", \"updated_at\"]\n      },\n      \"UpdateFunctionBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"body\": { \"type\": \"string\" },\n          \"verify_jwt\": { \"type\": \"boolean\" }\n        }\n      },\n      \"SecretResponse\": {\n        \"type\": \"object\",\n        \"properties\": { \"name\": { \"type\": \"string\" }, \"value\": { \"type\": \"string\" } },\n        \"required\": [\"name\", \"value\"]\n      },\n      \"CreateSecretBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"value\": { \"type\": \"string\", \"pattern\": \"/^(?!SUPABASE_).*/\" }\n        },\n        \"required\": [\"name\", \"value\"]\n      },\n      \"UpdatePgsodiumConfigBody\": {\n        \"type\": \"object\",\n        \"properties\": { \"root_key\": { \"type\": \"string\" } },\n        \"required\": [\"root_key\"]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/supabase/supabase@b2df67d443cb8aac7ff7d7cc661fe5f775b1cafb/-/blob/spec/api_v0_openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/supabase/supabase/blob/b2df67d443cb8aac7ff7d7cc661fe5f775b1cafb/spec/api_v0_openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v1/projects/{ref}/functions\": get: operation \"getFunctions\": security: at 128:24: unknown security schema \"apiKeyHeader\""
}