{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JHUAPL/PINE"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "backend/pine/backend/documents/openapi.yaml",
			"byteSize": 12118,
			"content": "# (C) 2021 The Johns Hopkins University Applied Physics Laboratory LLC.\n\nopenapi: \"3.0.2\"\n\nsecurity:\n  - cookieAuth: []\n  - eveBasicAuth: []\n  - vegasBearerAuth: []\n\ntags:\n  - name: documents\n    description: Operations in the \"documents\" blueprint.\n\ncomponents:\n\n  schemas:\n\n    WrappedDocuments:\n      type: object\n      properties:\n        _items:\n          type: array\n          items:\n            $ref: \"../api/components.yaml#/schemas/Document\"\n\n    NewDocument:\n      description: Arguments for the new document (at least collection_id, creator_id, text).\n      type: object\n      properties:\n        collection_id:\n          type: string\n        creator_id:\n          type: string\n        text:\n          type: string\n        overlap:\n          type: number\n          format: double\n        metadata:\n          type: object\n          additionalProperties: {}\n        has_annotated:\n          type: object\n          additionalProperties:\n            type: boolean\n      required:\n        - collection_id\n        - creator_id\n        - text\n\npaths:\n\n  /documents/by_id/{doc_id}:\n    get:\n      summary: Get Document\n      description: |\n        Retrieve a document based on its ID.\n        \n        Example: `curl http://localhost:5000/documents/by_id/60c7453f5b72bf4ed65239ee --cookie session.cookie`\n      operationId: documents_get\n      tags: [documents]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/docIdParam\"\n      responses:\n        \"200\":\n          description: Successfully found the document based on the ID.\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/Document\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/DocumentNotFound\"\n        \"500\":\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n    delete:\n      summary: Delete Document\n      description: |\n        Delete a document based on its ID.\n        \n        This endpoint deletes a document and any annotations.  It also updates any next_instances so\n        that the document will not be returned for annotation in any \"get next instance\" calls in\n        the future.  It does NOT delete document data from any pipeline models or update any IAA\n        reports or pipeline metrics.  These will be updated next time they are requested.\n        \n        Example: `curl -X DELETE http://localhost:5000/documents/by_id/60c7453f5b72bf4ed65239ee --cookie session.cookie`\n      operationId: documents_delete\n      tags: [documents]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/docIdParam\"\n      responses:\n        \"200\":\n          description: Deletion successful, response has IDs of changed objects.\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/DocumentDeletionResponse\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/DocumentNotFound\"\n        \"500\":\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /documents/by_ids:\n    delete:\n      summary: Delete Documents\n      description: |\n        Delete documents based on their IDs.\n        \n        This endpoint deletes documents and any associated annotations.  It also updates any next_instances so\n        that the documents will not be returned for annotation in any \"get next instance\" calls in\n        the future.  It does NOT delete document data from any pipeline models or update any IAA\n        reports or pipeline metrics.  These will be updated next time they are requested.\n        \n        Example: `curl -X DELETE http://localhost:5000/documents/by_ids?ids=60c7453f5b72bf4ed65239ee,60c7453f5b72bf4ed65239ef --cookie session.cookie`\n      operationId: documents_delete_multiple\n      tags: [documents]\n      parameters:\n        - name: ids\n          in: query\n          required: true\n          description: The IDs of the document to delete, comma-separated.\n          schema:\n            type: string\n          example: \"60c7453f5b72bf4ed65239ee,60c7453f5b72bf4ed65239ef\"\n      responses:\n        \"200\":\n          description: Deletion successful, response has IDs of changed objects.\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/DocumentDeletionResponse\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/DocumentNotFound\"\n        \"500\":\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /documents/count_by_collection_id/{collection_id}:\n    get:\n      summary: Get Collection Document Count\n      description: |\n        Count the number of documents in a collection.\n        \n        Example: `curl http://localhost:5000/documents/count_by_collection_id/60c7453d5b72bf4ed65239e9 --cookie session.cookie`\n      operationId: documents_count_by_collection\n      tags: [documents]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/collectionIdParam\"\n      responses:\n        \"200\":\n          description: Successfully found collection and counted number of documents inside.\n          content:\n            application/json:\n              schema:\n                type: integer\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/CollectionNotFound\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /documents/by_collection_id_all/{collection_id}:\n    get:\n      summary: Get All Collection Documents\n      description: |\n        Get all documents that are in a collection with a given collection id.\n        \n        Example: `curl http://localhost:5000/documents/by_collection_id_all/60c7453d5b72bf4ed65239e9 --cookie session.cookie`\n      operationId: documents_get_by_collection\n      tags: [documents]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/collectionIdParam\"\n      responses:\n        \"200\":\n          description: Successfully found collection and retrieved all related documents.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WrappedDocuments\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/CollectionNotFound\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /documents/by_collection_id_paginated/{collection_id}:\n    get:\n      summary: Get Paginated Collection Documents\n      description: |\n        Get a variable page of variable size of documents.\n        \n        Example: `curl \"http://localhost:5000/documents/by_collection_id_paginated/60c7453d5b72bf4ed65239e9?page=1\u0026pageSize=5\" --cookie session.cookie`\n      operationId: documents_get_by_collection_paginated\n      tags: [documents]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/collectionIdParam\"\n        - name: page\n          in: query\n          required: true\n          description: \u003e\n            The page number to get by 0 indexing (Will have documents page_num*pageSize -\u003e\n            page_num*pageSize+pageSize-1 in the collection if there are any.)\n          schema:\n            type: integer\n        - name: pageSize\n          in: query\n          required: true\n          description: The number of documents to put in each page.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: \u003e\n            Successfully found collection and retrieved any (if any) associated documents (Could\n            return no documents if page number too high).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WrappedDocuments\"\n        \"400\":\n          $ref: \"../api/components.yaml#/responses/InvalidInputParameters\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/CollectionNotFound\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /documents/user_permissions/{doc_id}:\n    get:\n      summary: Get User Document Permissions\n      description: |\n        Get the permission that the logged in user has for this document.\n        \n        Example: `curl http://localhost:5000/documents/user_permissions/60c7453f5b72bf4ed65239ee --cookie session.cookie`\n      operationId: documents_permissions\n      tags: [documents]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/docIdParam\"\n      responses:\n        \"200\":\n          description: Successfully found document and retrieved user permissions.\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/UserPermissions\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/DocumentNotFound\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /documents/metadata/{doc_id}:\n    put:\n      summary: Update Document Metadata\n      description: |\n        Change/Replace the metadata of a certain document (does not add).\n        \n        Example: `curl -X PUT http://localhost:5000/documents/metadata/60c7453f5b72bf4ed65239ee -d '{\"test\":\"this\"}' --cookie session.cookie -H Content-Type:application/json`\n        \n        Note: you need the content type header to specify json.\n      operationId: documents_update_metadata\n      tags: [documents]\n      parameters:\n        - $ref: \"../api/components.yaml#/parameters/docIdParam\"\n      requestBody:\n        description: The metadata in json form in the body.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: {}\n      responses:\n        \"200\":\n          description: Successfully found document and changed the metadata.\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/IDInfo\"\n        \"400\":\n          $ref: \"../api/components.yaml#/responses/InvalidInputParameters\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/DocumentNotFound\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n\n  /documents:\n    post:\n      summary: Create Document\n      description: |\n        Create a new document in a collection.\n        \n        Example: `curl -X POST http://localhost:5000/documents/ -d '{\"collection_id\":\"6ada\", \"text\":\"blah\"}' --cookie session.cookie -H Content-Type:application/json`\n      operationId: documents_create\n      tags: [documents]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n              - $ref: \"#/components/schemas/NewDocument\"\n              - type: array\n                items:\n                  $ref: \"#/components/schemas/NewDocument\"\n      responses:\n        \"200\":\n          description: Successfully created the new document in the collection.\n          content:\n            application/json:\n              schema:\n                $ref: \"../api/components.yaml#/schemas/IDInfo\"\n        \"400\":\n          $ref: \"../api/components.yaml#/responses/InvalidInputParameters\"\n        \"401\":\n          $ref: \"../api/components.yaml#/responses/NotAuthorized\"\n        \"404\":\n          $ref: \"../api/components.yaml#/responses/CollectionNotFound\"\n        default:\n          $ref: \"../api/components.yaml#/responses/UnexpectedServerError\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"WrappedDocuments\": parse schema: property \"_items\": parse schema: item: parse schema: resolve \"../api/components.yaml#/schemas/Document\": external \"../api/components.yaml\": file: local file reference is not allowed"
}