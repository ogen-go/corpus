{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fawkesrobotics/fawkes"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/plugins/webview/blackboard-rest-api/api.yaml",
			"byteSize": 6075,
			"content": "openapi: 3.0.0\ninfo:\n  title: Blackboard\n  version: v1beta1\n  description: |\n    Fawkes Blackboard REST API.\n    Access blackboard data through a REST API.\n  contact:\n    name:  Tim Niemueller\n    email: niemueller@kbsg.rwth-aachen.de\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\ntags:\n  - name: public\n    description: Blackboard public API.\n\npaths:\n  /blackboard/interfaces:\n    get:\n      tags:\n      - public\n      summary: Get list of interfaces.\n      operationId: list_interfaces\n      description: |\n        Get a list of interfaces currently registered with the blackboard.\n      parameters:\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          allowEmptyValue: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: get list of interfaces\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/InterfaceInfo'\n        '400':\n          description: bad input parameter\n\n  /blackboard/interfaces/{type}/{id+}:\n    get:\n      tags:\n      - public\n      summary: Get information about a specific interface.\n      operationId: get_interface_info\n      description: Get information about a specific interface.\n      parameters:\n        - name: type\n          in: path\n          description: |\n            Type of interface to receive.\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: |\n            ID of Interface to receive. Spaces must be url encoded.\n          required: true\n          schema:\n            type: string\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          allowEmptyValue: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: get interface information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InterfaceInfo'\n        '400':\n          description: bad input parameter\n\n  /blackboard/interfaces/{type}/{id+}/data:\n    get:\n      tags:\n      - public\n      summary: Get data of a specific interface.\n      operationId: get_interface_data\n      description: Get data of a specific interface.\n      parameters:\n        - name: type\n          in: path\n          description: |\n            Type of interface to receive.\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: |\n            ID of interface to receive. Spaces must be url encoded.\n          required: true\n          schema:\n            type: string\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          allowEmptyValue: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: get interface data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InterfaceData'\n        '400':\n          description: bad input parameter\n\n  /blackboard/graph:\n    get:\n      tags:\n      - public\n      summary: Get blackboard graph\n      operationId: get_graph\n      description: |\n        Get a blackboard graph.\n      parameters:\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          allowEmptyValue: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: get graph\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlackboardGraph'\n        '503':\n          description: failure to retrieve graph\n\ncomponents:\n  schemas:\n    InterfaceInfo:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - id\n        - type\n        - hash\n        - fields\n        - message_types\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        id:\n          type: string\n        type:\n          type: string\n        hash:\n          type: string\n        writer:\n          type: string\n        readers:\n          type: array\n          items:\n            type: string\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/InterfaceFieldType'\n        message_types:\n          type: array\n          items:\n            $ref: '#/components/schemas/InterfaceMessageType'\n\n    InterfaceFieldType:\n      type: object\n      required:\n        - name\n        - type\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        is_array:\n          type: boolean\n        enums:\n          type: array\n          description: possible enum values for this field\n          items:\n            type: string\n\n    InterfaceMessageType:\n      type: object\n      required:\n        - name\n        - fields\n      properties:\n        name:\n          type: string\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/InterfaceFieldType'\n\n    InterfaceData:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - id\n        - type\n        - data\n        - timestamp\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        id:\n          type: string\n        type:\n          type: string\n        writer:\n          type: string\n        readers:\n          type: array\n          items:\n            type: string\n        data:\n          type: object\n        timestamp:\n          type: string\n          format: date-time\n\n    BlackboardGraph:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - dotgraph\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        dotgraph:\n          type: string\n",
			"canonicalURL": "/github.com/fawkesrobotics/fawkes@fd3768278fb3d2dc9d5126b9d11c2fe31545bede/-/blob/src/plugins/webview/blackboard-rest-api/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fawkesrobotics/fawkes/blob/fd3768278fb3d2dc9d5126b9d11c2fe31545bede/src/plugins/webview/blackboard-rest-api/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /blackboard/interfaces/{type}/{id+}: get: operation \"get_interface_info\": parse path \"/blackboard/interfaces/{type}/{id+}\": path parameter not specified: \"id+\""
}