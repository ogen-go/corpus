{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/googleapis.abusiveexperiencereport/openapi.yml",
			"byteSize": 7676,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://abusiveexperiencereport.googleapis.com/\ninfo:\n  x-ballerina-display:\n    label: Google Abusive Experience\n    iconPath: \"icon.png\"\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: |\n    This is a generated connector for [Google Abusive Experience Report API v1](https://developers.google.com/abusive-experience-report/) OpenAPI specification.\n    Views Abusive Experience Report data, and gets a list of sites that have a significant number of abusive experiences.\n  x-ballerina-init-description: \u003e\n    The connector initialization doesn't require setting the API credentials. \n  \n    Create a [Google account](https://accounts.google.com/signup) and obtain tokens by following [this guide](https://developers.google.com/abusive-experience-report/v1/how-tos/authorizing).\n\n    Some operations may require passing the token as a parameter.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Abusive Experience Report API\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - analytics\n    - media\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/mermade/oas-kit\n        version: 7.0.4\n      format: google\n      url: https://abusiveexperiencereport.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-providerName: googleapis.com\n  x-serviceName: abusiveexperiencereport\nexternalDocs:\n  url: https://developers.google.com/abusive-experience-report/\ntags:\n  - name: sites\n  - name: violatingSites\npaths:\n  /v1/violatingSites:\n    get:\n      summary: Lists sites that are failing in the Abusive Experience Report.\n      operationId: list.violatingSites\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ViolatingSitesResponse\"\n          description: Successful response\n      tags:\n        - violatingSites\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v1/{name}\":\n    get:\n      summary: Gets a site's Abusive Experience Report summary.\n      operationId: get.sites\n      parameters:\n        - description: \"Required. The name of the site whose summary to get, e.g. `sites/http%3A%2F%2Fwww.google.com%2F`. Format: `sites/{site}`\"\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SiteSummaryResponse\"\n          description: Successful response\n      tags:\n        - sites\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\ncomponents:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n          - \"1\"\n          - \"2\"\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n          - json\n          - media\n          - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    SiteSummaryResponse:\n      description: Response message for GetSiteSummary.\n      properties:\n        abusiveStatus:\n          description: The site's Abusive Experience Report status.\n          enum:\n            - UNKNOWN\n            - PASSING\n            - FAILING\n          type: string\n        enforcementTime:\n          description: The time at which [enforcement](https://support.google.com/webtools/answer/7538608) against the site began or will begin. Not set when the filter_status is OFF.\n          format: google-datetime\n          type: string\n        filterStatus:\n          description: The site's [enforcement status](https://support.google.com/webtools/answer/7538608).\n          enum:\n            - UNKNOWN\n            - ON\n            - OFF\n            - PAUSED\n            - PENDING\n          type: string\n        lastChangeTime:\n          description: The time at which the site's status last changed.\n          format: google-datetime\n          type: string\n        reportUrl:\n          description: A link to the full Abusive Experience Report for the site. Not set in ViolatingSitesResponse. Note that you must complete the [Search Console verification process](https://support.google.com/webmasters/answer/9008080) for the site before you can access the full report.\n          type: string\n        reviewedSite:\n          description: The name of the reviewed site, e.g. `google.com`.\n          type: string\n        underReview:\n          description: Whether the site is currently under review.\n          type: boolean\n      type: object\n    ViolatingSitesResponse:\n      description: Response message for ListViolatingSites.\n      properties:\n        violatingSites:\n          description: The list of violating sites.\n          items:\n            $ref: \"#/components/schemas/SiteSummaryResponse\"\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@d8de4a705adce6beeffb8dd580f8d61a7d2662dc/-/blob/openapi/googleapis.abusiveexperiencereport/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/d8de4a705adce6beeffb8dd580f8d61a7d2662dc/openapi/googleapis.abusiveexperiencereport/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"SiteSummaryResponse\": parse schema: property \"filterStatus\": at 1:2299: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}