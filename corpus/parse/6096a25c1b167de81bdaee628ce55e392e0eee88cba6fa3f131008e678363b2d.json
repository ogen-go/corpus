{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/getyourguide/partner-api-spec"
		},
		"file": {
			"name": "query.yaml",
			"size": 0,
			"path": "spec/components/commons/query.yaml",
			"byteSize": 8089,
			"content": "openapi: 3.0.2\ninfo:\n  title: Common query parameters\n  version: 1.0.0\npaths: {}\ncomponents:\n  parameters:\n    categories[]:\n      allowReserved: true\n      description: Filter for categories for a given query via 'q' or 'coordinates', also works stand-alone as the main query parameter.\n      examples:\n        multipleIds:\n          summary: Example of multiple categories\n          value:\n            - 55\n            - 56\n        oneId:\n          summary: Example of a single category\n          value:\n            - 55\n      explode: true\n      in: query\n      name: categories[]\n      required: false\n      schema:\n        items:\n          $ref: \"#/components/schemas/CategoryId\"\n        type: array\n    categoryId:\n      in: query\n      name: category_id\n      required: false\n      schema:\n        $ref: \"#/components/schemas/CategoryId\"\n    cntLanguage:\n      in: query\n      name: cnt_language\n      required: true\n      schema:\n        $ref: \"#/components/schemas/CntLanguage\"\n    condLanguage[]:\n      allowReserved: true\n      description: The conduction language(s) of a tour. When given, the results contain only tours that are available in the specified language(s).\n      examples:\n        multipleIds:\n          summary: Example of a multiple languages\n          value:\n            - de\n            - en\n        oneId:\n          summary: Example of a single language\n          value:\n            - en\n      explode: true\n      in: query\n      name: cond_language[]\n      required: false\n      schema:\n        items:\n          $ref: \"#/components/schemas/Language\"\n        type: array\n    coordinates[]:\n      allowReserved: true\n      description: Mutually exclusive with 'q' parameter! Search by latitude, longitude and radius passed as URL array.'\n      examples:\n        allCoordinates:\n          summary: Latitude, longitude, radius\n          value:\n            - 48.85693\n            - 2.3412\n            - 10\n      explode: true\n      in: query\n      name: coordinates[]\n      required: false\n      schema:\n        items:\n          type: number\n        type: array\n    country:\n      description: ISO 3166-1, The country where to payment originates. Should be the same value as the country_code field of the Billing Address Object.\n      in: query\n      name: country\n      example: US\n      required: true\n      schema:\n        $ref: \"#/components/schemas/Country\"\n    currency:\n      description: ISO 4217, The currency with which you would like to pay.\n      in: query\n      name: currency\n      example: USD\n      required: true\n      schema:\n        $ref: \"#/components/schemas/Currency\"\n    date[]:\n      allowReserved: true\n      description: Check for tours that are offered on date or between dates.\n      examples:\n        multipleDates:\n          summary: Date from, Date to\n          value:\n            - \"2021-05-01T00:00:00\"\n            - \"2021-05-01T23:59:59\"\n        singleDate:\n          summary: Date from\n          value:\n            - \"2021-05-01T00:00:00\"\n      explode: true\n      in: query\n      name: date[]\n      required: false\n      schema:\n        items:\n          $ref: \"#/components/schemas/Datetime\"\n        type: array\n    duration[]:\n      allowReserved: true\n      description: Filter for min and/or max duration in minutes. Single Value max. duration. Otherwise [min, max].\n      examples:\n        multipleIds:\n          summary: Example of a min / max\n          value:\n            - 1\n            - 3\n        oneId:\n          summary: Example of a max duration\n          value:\n            - 3\n      explode: true\n      in: query\n      name: duration[]\n      required: false\n      schema:\n        items:\n          type: number\n        type: array\n    flags[]:\n      allowReserved: true\n      description: Various flags about properties of the tour (multiple selection allowed).\n      examples:\n        oneFlag:\n          summary: Filter for private tours only.\n          value:\n            - private\n        multipleFlags:\n          summary: Filter for private tours with pick-up only.\n          value:\n            - private\n            - pick-up\n      explode: true\n      in: query\n      name: flags[]\n      required: false\n      schema:\n        items:\n          $ref: \"#/components/schemas/Flags\"\n        type: array\n    limit:\n      in: query\n      name: limit\n      required: false\n      schema:\n        $ref: \"#/components/schemas/Limit\"\n    offset:\n      in: query\n      name: offset\n      required: false\n      schema:\n        $ref: \"#/components/schemas/Offset\"\n    preformatted:\n      description: The amount of content to deliver with the search results.\n      examples:\n        full:\n          summary: Include a full description\n          value: full\n        home:\n          summary: Include a composition of information\n          value: home\n        teaser:\n          summary: Include title and an abstract\n          value: teaser\n      in: query\n      name: preformatted\n      required: false\n      schema:\n        type: string\n    price[]:\n      allowReserved: true\n      description: Filter for price in the query.\n      examples:\n        multipleIds:\n          summary: Example of a min / max\n          value:\n            - 100\n            - 200\n        oneId:\n          summary: Example of a max price\n          value:\n            - 200\n      explode: true\n      in: query\n      name: price[]\n      required: false\n      schema:\n        items:\n          $ref: \"#/components/schemas/Price\"\n        type: array\n    q:\n      description: \"Mutually exclusive with 'coordinates' parameter! Query string, can be location name or IATA code. For IATA the query parameter looks like this: 'q=iata:jfk'\"\n      examples:\n        search_by_IATA:\n          summary: Search by IATA airport codes.\n          value: iata:jfk\n        search_by_query:\n          summary: Search by standard query.\n          value: Berlin\n      in: query\n      name: q\n      required: false\n      schema:\n        type: string\n    rating[]:\n      allowReserved: true\n      description: Filter for Tours with the given ratings. Single value min rating. Otherwise [min, max].\n      examples:\n        multipleRating:\n          summary: Example of min/max rating.\n          value:\n            - 2\n            - 5\n        singleRating:\n          summary: Example of a min rating.\n          value:\n            - 4\n      explode: true\n      in: query\n      name: rating[]\n      required: false\n      schema:\n        items:\n          $ref: \"#/components/schemas/Rating\"\n        type: array\n    sortdirection:\n      description: Defines the sort order.\n      in: query\n      name: sortdirection\n      required: false\n      schema:\n        enum:\n          - DESC\n          - ASC\n        type: string\n    sortfield:\n      description: Defines the sort field.\n      in: query\n      name: sortfield\n      required: false\n      schema:\n        enum:\n          - popularity\n          - price\n          - rating\n          - duration\n        type: string\n    status:\n      description: Filter (formerly) confirmed bookings based on status.\n      in: query\n      name: Status\n      required: false\n      schema:\n        enum:\n          - unconfirmed\n          - confirmed\n          - canceled\n        type: string\n  \n  # Refs to common fields, as direct refs inside the query param schema breaks OpenAPI validation\n  schemas:\n    CategoryId:\n      $ref: \"fields.yaml#/components/schemas/CategoryId\"\n    CntLanguage:\n      $ref: \"fields.yaml#/components/schemas/CntLanguage\"\n    Country:\n      $ref: \"fields.yaml#/components/schemas/Country\"\n    Currency:\n      $ref: \"fields.yaml#/components/schemas/Currency\"\n    Datetime:\n      $ref: \"fields.yaml#/components/schemas/Datetime\"\n    Flags:\n      $ref: \"fields.yaml#/components/schemas/Flags\"\n    Language:\n      $ref: \"fields.yaml#/components/schemas/Language\"\n    Limit:\n      $ref: \"fields.yaml#/components/schemas/Limit\"\n    Offset:\n      $ref: \"fields.yaml#/components/schemas/Offset\"\n    Price:\n      $ref: \"fields.yaml#/components/schemas/Price\"\n    Rating:\n      $ref: \"fields.yaml#/components/schemas/Rating\"\n",
			"canonicalURL": "/github.com/getyourguide/partner-api-spec@4860aa395f0e057d6fa4996e554152da64e44fda/-/blob/spec/components/commons/query.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/getyourguide/partner-api-spec/blob/4860aa395f0e057d6fa4996e554152da64e44fda/spec/components/commons/query.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: at spec/components/commons/query.yaml:62:5: invalid name: \"coordinates[]\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}