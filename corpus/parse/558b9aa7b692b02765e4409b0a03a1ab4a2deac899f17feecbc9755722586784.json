{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-kinesis-2013-12-02-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-kinesis-2013-12-02-swagger.yaml",
			"byteSize": 126847,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2013-12-02\n  x-release: v4\n  title: Amazon Kinesis\n  description: \u003cfullname\u003eAmazon Kinesis Data Streams Service API Reference\u003c/fullname\u003e\n    \u003cp\u003eAmazon Kinesis Data Streams is a managed service that scales elastically\n    for real-time processing of streaming big data.\u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: kinesis\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesis-2013-12-02.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/kinesis/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=Kinesis_20131202.AddTagsToStream:\n    post:\n      operationId: AddTagsToStream\n      description: \u003cp\u003eAdds or updates tags for the specified Kinesis data stream. Each time\n        you invoke this operation, you can specify up to 10 tags. If you want to\n        add more than 10 tags to your stream, you can invoke this operation\n        multiple times. In total, each stream can have up to 50 tags.\u003c/p\u003e \u003cp\u003eIf\n        tags have already been assigned to the stream,\n        \u003ccode\u003eAddTagsToStream\u003c/code\u003e overwrites any existing tags that\n        correspond to the specified tag keys.\u003c/p\u003e \u003cp\u003e \u003ca\u003eAddTagsToStream\u003c/a\u003e has\n        a limit of five transactions per second per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.AddTagsToStream\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddTagsToStreamInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.CreateStream:\n    post:\n      operationId: CreateStream\n      description: \u003cp\u003eCreates a Kinesis data stream. A stream captures and transports data\n        records that are continuously emitted from different data sources or\n        \u003ci\u003eproducers\u003c/i\u003e. Scale-out within a stream is explicitly supported by\n        means of shards, which are uniquely identified groups of data records in\n        a stream.\u003c/p\u003e \u003cp\u003eYou specify and control the number of shards that a\n        stream is composed of. Each shard can support reads up to five\n        transactions per second, up to a maximum data read total of 2 MB per\n        second. Each shard can support writes up to 1,000 records per second, up\n        to a maximum data write total of 1 MB per second. If the amount of data\n        input increases or decreases, you can add or remove shards.\u003c/p\u003e \u003cp\u003eThe\n        stream name identifies the stream. The name is scoped to the AWS account\n        used by the application. It is also scoped by AWS Region. That is, two\n        streams in two different accounts can have the same name, and two\n        streams in the same account, but in two different Regions, can have the\n        same name.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eCreateStream\u003c/code\u003e is an asynchronous\n        operation. Upon receiving a \u003ccode\u003eCreateStream\u003c/code\u003e request, Kinesis\n        Data Streams immediately returns and sets the stream status to\n        \u003ccode\u003eCREATING\u003c/code\u003e. After the stream is created, Kinesis Data Streams\n        sets the stream status to \u003ccode\u003eACTIVE\u003c/code\u003e. You should perform read\n        and write operations only on an \u003ccode\u003eACTIVE\u003c/code\u003e stream. \u003c/p\u003e \u003cp\u003eYou\n        receive a \u003ccode\u003eLimitExceededException\u003c/code\u003e when making a\n        \u003ccode\u003eCreateStream\u003c/code\u003e request when you try to do one of the\n        following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eHave more than five streams in the\n        \u003ccode\u003eCREATING\u003c/code\u003e state at any point in time.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n        \u003cp\u003eCreate more shards than are authorized for your account.\u003c/p\u003e \u003c/li\u003e\n        \u003c/ul\u003e \u003cp\u003eFor the default shard limit for an AWS account, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eAmazon\n        Kinesis Data Streams Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams\n        Developer Guide\u003c/i\u003e. To increase this limit, \u003ca\n        href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\"\u003econtact\n        AWS Support\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eYou can use \u003ccode\u003eDescribeStream\u003c/code\u003e to check\n        the stream status, which is returned in \u003ccode\u003eStreamStatus\u003c/code\u003e.\u003c/p\u003e\n        \u003cp\u003e \u003ca\u003eCreateStream\u003c/a\u003e has a limit of five transactions per second per\n        account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.CreateStream\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateStreamInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.DecreaseStreamRetentionPeriod:\n    post:\n      operationId: DecreaseStreamRetentionPeriod\n      description: \u003cp\u003eDecreases the Kinesis data stream's retention period, which is the\n        length of time data records are accessible after they are added to the\n        stream. The minimum value of a stream's retention period is 24\n        hours.\u003c/p\u003e \u003cp\u003eThis operation may result in lost data. For example, if\n        the stream's retention period is 48 hours and is decreased to 24 hours,\n        any data already in the stream that is older than 24 hours is\n        inaccessible.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DecreaseStreamRetentionPeriod\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DecreaseStreamRetentionPeriodInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.DeleteStream:\n    post:\n      operationId: DeleteStream\n      description: \u003cp\u003eDeletes a Kinesis data stream and all its shards and data. You must\n        shut down any applications that are operating on the stream before you\n        delete the stream. If an application attempts to operate on a deleted\n        stream, it receives the exception\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the stream is in the\n        \u003ccode\u003eACTIVE\u003c/code\u003e state, you can delete it. After a\n        \u003ccode\u003eDeleteStream\u003c/code\u003e request, the specified stream is in the\n        \u003ccode\u003eDELETING\u003c/code\u003e state until Kinesis Data Streams completes the\n        deletion.\u003c/p\u003e \u003cp\u003e \u003cb\u003eNote:\u003c/b\u003e Kinesis Data Streams might continue to\n        accept data read and write operations, such as \u003ca\u003ePutRecord\u003c/a\u003e,\n        \u003ca\u003ePutRecords\u003c/a\u003e, and \u003ca\u003eGetRecords\u003c/a\u003e, on a stream in the\n        \u003ccode\u003eDELETING\u003c/code\u003e state until the stream deletion is complete.\u003c/p\u003e\n        \u003cp\u003eWhen you delete a stream, any shards in that stream are also deleted,\n        and any tags are dissociated from the stream.\u003c/p\u003e \u003cp\u003eYou can use the\n        \u003ca\u003eDescribeStream\u003c/a\u003e operation to check the state of the stream, which\n        is returned in \u003ccode\u003eStreamStatus\u003c/code\u003e.\u003c/p\u003e \u003cp\u003e \u003ca\u003eDeleteStream\u003c/a\u003e\n        has a limit of five transactions per second per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DeleteStream\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteStreamInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.DeregisterStreamConsumer:\n    post:\n      operationId: DeregisterStreamConsumer\n      description: \u003cp\u003eTo deregister a consumer, provide its ARN. Alternatively, you can\n        provide the ARN of the data stream and the name you gave the consumer\n        when you registered it. You may also provide all three parameters, as\n        long as they don't conflict with each other. If you don't know the name\n        or ARN of the consumer that you want to deregister, you can use the\n        \u003ca\u003eListStreamConsumers\u003c/a\u003e operation to get a list of the descriptions\n        of all the consumers that are currently registered with a given data\n        stream. The description of a consumer contains its name and ARN.\u003c/p\u003e\n        \u003cp\u003eThis operation has a limit of five transactions per second per\n        account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DeregisterStreamConsumer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeregisterStreamConsumerInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.DescribeLimits:\n    post:\n      operationId: DescribeLimits\n      description: \u003cp\u003eDescribes the shard limits and usage for the account.\u003c/p\u003e \u003cp\u003eIf you\n        update your account limits, the old limits might be returned for a few\n        minutes.\u003c/p\u003e \u003cp\u003eThis operation has a limit of one transaction per second\n        per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeLimitsOutput\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DescribeLimits\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeLimitsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.DescribeStream:\n    post:\n      operationId: DescribeStream\n      description: \u003cp\u003eDescribes the specified Kinesis data stream.\u003c/p\u003e \u003cp\u003eThe information\n        returned includes the stream name, Amazon Resource Name (ARN), creation\n        time, enhanced metric configuration, and shard map. The shard map is an\n        array of shard objects. For each shard object, there is the hash key and\n        sequence number ranges that the shard spans, and the IDs of any earlier\n        shards that played in a role in creating the shard. Every record\n        ingested in the stream is identified by a sequence number, which is\n        assigned when the record is put into the stream.\u003c/p\u003e \u003cp\u003eYou can limit\n        the number of shards returned by each call. For more information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-retrieve-shards.html\"\u003eRetrieving\n        Shards from a Stream\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer\n        Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThere are no guarantees about the chronological order\n        shards returned. To process shards in chronological order, use the ID of\n        the parent shard to track the lineage to the oldest shard.\u003c/p\u003e \u003cp\u003eThis\n        operation has a limit of 10 transactions per second per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeStreamOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: ExclusiveStartShardId\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DescribeStream\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeStreamInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.DescribeStreamConsumer:\n    post:\n      operationId: DescribeStreamConsumer\n      description: \u003cp\u003eTo get the description of a registered consumer, provide the ARN of\n        the consumer. Alternatively, you can provide the ARN of the data stream\n        and the name you gave the consumer when you registered it. You may also\n        provide all three parameters, as long as they don't conflict with each\n        other. If you don't know the name or ARN of the consumer that you want\n        to describe, you can use the \u003ca\u003eListStreamConsumers\u003c/a\u003e operation to get\n        a list of the descriptions of all the consumers that are currently\n        registered with a given data stream.\u003c/p\u003e \u003cp\u003eThis operation has a limit\n        of 20 transactions per second per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeStreamConsumerOutput\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DescribeStreamConsumer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeStreamConsumerInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.DescribeStreamSummary:\n    post:\n      operationId: DescribeStreamSummary\n      description: \u003cp\u003eProvides a summarized description of the specified Kinesis data\n        stream without the shard list.\u003c/p\u003e \u003cp\u003eThe information returned includes\n        the stream name, Amazon Resource Name (ARN), status, record retention\n        period, approximate creation time, monitoring, encryption details, and\n        open shard count. \u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeStreamSummaryOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DescribeStreamSummary\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeStreamSummaryInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.DisableEnhancedMonitoring:\n    post:\n      operationId: DisableEnhancedMonitoring\n      description: Disables enhanced monitoring.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnhancedMonitoringOutput\"\n        \"480\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"483\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.DisableEnhancedMonitoring\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DisableEnhancedMonitoringInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.EnableEnhancedMonitoring:\n    post:\n      operationId: EnableEnhancedMonitoring\n      description: Enables enhanced Kinesis data stream monitoring for shard-level metrics.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnhancedMonitoringOutput\"\n        \"480\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"483\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.EnableEnhancedMonitoring\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnableEnhancedMonitoringInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.GetRecords:\n    post:\n      operationId: GetRecords\n      description: \u003cp\u003eGets data records from a Kinesis data stream's shard.\u003c/p\u003e \u003cp\u003eSpecify\n        a shard iterator using the \u003ccode\u003eShardIterator\u003c/code\u003e parameter. The\n        shard iterator specifies the position in the shard from which you want\n        to start reading data records sequentially. If there are no records\n        available in the portion of the shard that the iterator points to,\n        \u003ca\u003eGetRecords\u003c/a\u003e returns an empty list. It might take multiple calls to\n        get to a portion of the shard that contains records.\u003c/p\u003e \u003cp\u003eYou can\n        scale by provisioning multiple shards per stream while considering\n        service limits (for more information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eAmazon\n        Kinesis Data Streams Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams\n        Developer Guide\u003c/i\u003e). Your application should have one thread per shard,\n        each reading continuously from its stream. To read from a stream\n        continually, call \u003ca\u003eGetRecords\u003c/a\u003e in a loop. Use\n        \u003ca\u003eGetShardIterator\u003c/a\u003e to get the shard iterator to specify in the\n        first \u003ca\u003eGetRecords\u003c/a\u003e call. \u003ca\u003eGetRecords\u003c/a\u003e returns a new shard\n        iterator in \u003ccode\u003eNextShardIterator\u003c/code\u003e. Specify the shard iterator\n        returned in \u003ccode\u003eNextShardIterator\u003c/code\u003e in subsequent calls to\n        \u003ca\u003eGetRecords\u003c/a\u003e. If the shard has been closed, the shard iterator\n        can't return more data and \u003ca\u003eGetRecords\u003c/a\u003e returns \u003ccode\u003enull\u003c/code\u003e\n        in \u003ccode\u003eNextShardIterator\u003c/code\u003e. You can terminate the loop when the\n        shard is closed, or when the shard iterator reaches the record with the\n        sequence number or other attribute that marks it as the last record to\n        process.\u003c/p\u003e \u003cp\u003eEach data record can be up to 1 MiB in size, and each\n        shard can read up to 2 MiB per second. You can ensure that your calls\n        don't exceed the maximum supported size or throughput by using the\n        \u003ccode\u003eLimit\u003c/code\u003e parameter to specify the maximum number of records\n        that \u003ca\u003eGetRecords\u003c/a\u003e can return. Consider your average record size\n        when determining this limit. The maximum number of records that can be\n        returned per call is 10,000.\u003c/p\u003e \u003cp\u003eThe size of the data returned by\n        \u003ca\u003eGetRecords\u003c/a\u003e varies depending on the utilization of the shard. The\n        maximum size of data that \u003ca\u003eGetRecords\u003c/a\u003e can return is 10 MiB. If a\n        call returns this amount of data, subsequent calls made within the next\n        5 seconds throw \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. If\n        there is insufficient provisioned throughput on the stream, subsequent\n        calls made within the next 1 second throw\n        \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. \u003ca\u003eGetRecords\u003c/a\u003e\n        doesn't return any data when it throws an exception. For this reason, we\n        recommend that you wait 1 second between calls to \u003ca\u003eGetRecords\u003c/a\u003e.\n        However, it's possible that the application will get exceptions for\n        longer than 1 second.\u003c/p\u003e \u003cp\u003eTo detect whether the application is\n        falling behind in processing, you can use the\n        \u003ccode\u003eMillisBehindLatest\u003c/code\u003e response attribute. You can also monitor\n        the stream using CloudWatch metrics and other mechanisms (see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/monitoring.html\"\u003eMonitoring\u003c/a\u003e\n        in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e).\u003c/p\u003e \u003cp\u003eEach\n        Amazon Kinesis record includes a value,\n        \u003ccode\u003eApproximateArrivalTimestamp\u003c/code\u003e, that is set when a stream\n        successfully receives and stores a record. This is commonly referred to\n        as a server-side time stamp, whereas a client-side time stamp is set\n        when a data producer creates or sends the record to a stream (a data\n        producer is any data source putting data records into a stream, for\n        example with \u003ca\u003ePutRecords\u003c/a\u003e). The time stamp has millisecond\n        precision. There are no guarantees about the time stamp accuracy, or\n        that the time stamp is always increasing. For example, records in a\n        shard or across a stream might have time stamps that are out of\n        order.\u003c/p\u003e \u003cp\u003eThis operation has a limit of five transactions per second\n        per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRecordsOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"482\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"483\":\n          description: ExpiredIteratorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredIteratorException\"\n        \"484\":\n          description: KMSDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSDisabledException\"\n        \"485\":\n          description: KMSInvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSInvalidStateException\"\n        \"486\":\n          description: KMSAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSAccessDeniedException\"\n        \"487\":\n          description: KMSNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSNotFoundException\"\n        \"488\":\n          description: KMSOptInRequired\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSOptInRequired\"\n        \"489\":\n          description: KMSThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.GetRecords\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetRecordsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.GetShardIterator:\n    post:\n      operationId: GetShardIterator\n      description: \u003cp\u003eGets an Amazon Kinesis shard iterator. A shard iterator expires 5\n        minutes after it is returned to the requester.\u003c/p\u003e \u003cp\u003eA shard iterator\n        specifies the shard position from which to start reading data records\n        sequentially. The position is specified using the sequence number of a\n        data record in a shard. A sequence number is the identifier associated\n        with every record ingested in the stream, and is assigned when a record\n        is put into the stream. Each stream has one or more shards.\u003c/p\u003e \u003cp\u003eYou\n        must specify the shard iterator type. For example, you can set the\n        \u003ccode\u003eShardIteratorType\u003c/code\u003e parameter to read exactly from the\n        position denoted by a specific sequence number by using the\n        \u003ccode\u003eAT_SEQUENCE_NUMBER\u003c/code\u003e shard iterator type. Alternatively, the\n        parameter can read right after the sequence number by using the\n        \u003ccode\u003eAFTER_SEQUENCE_NUMBER\u003c/code\u003e shard iterator type, using sequence\n        numbers returned by earlier calls to \u003ca\u003ePutRecord\u003c/a\u003e,\n        \u003ca\u003ePutRecords\u003c/a\u003e, \u003ca\u003eGetRecords\u003c/a\u003e, or \u003ca\u003eDescribeStream\u003c/a\u003e. In the\n        request, you can specify the shard iterator type\n        \u003ccode\u003eAT_TIMESTAMP\u003c/code\u003e to read records from an arbitrary point in\n        time, \u003ccode\u003eTRIM_HORIZON\u003c/code\u003e to cause \u003ccode\u003eShardIterator\u003c/code\u003e to\n        point to the last untrimmed record in the shard in the system (the\n        oldest data record in the shard), or \u003ccode\u003eLATEST\u003c/code\u003e so that you\n        always read the most recent data in the shard. \u003c/p\u003e \u003cp\u003eWhen you read\n        repeatedly from a stream, use a \u003ca\u003eGetShardIterator\u003c/a\u003e request to get\n        the first shard iterator for use in your first \u003ca\u003eGetRecords\u003c/a\u003e request\n        and for subsequent reads use the shard iterator returned by the\n        \u003ca\u003eGetRecords\u003c/a\u003e request in \u003ccode\u003eNextShardIterator\u003c/code\u003e. A new shard\n        iterator is returned by every \u003ca\u003eGetRecords\u003c/a\u003e request in\n        \u003ccode\u003eNextShardIterator\u003c/code\u003e, which you use in the\n        \u003ccode\u003eShardIterator\u003c/code\u003e parameter of the next \u003ca\u003eGetRecords\u003c/a\u003e\n        request. \u003c/p\u003e \u003cp\u003eIf a \u003ca\u003eGetShardIterator\u003c/a\u003e request is made too often,\n        you receive a \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. For\n        more information about throughput limits, see \u003ca\u003eGetRecords\u003c/a\u003e, and \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eStreams\n        Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer\n        Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the shard is closed, \u003ca\u003eGetShardIterator\u003c/a\u003e\n        returns a valid iterator for the last sequence number of the shard. A\n        shard can be closed as a result of using \u003ca\u003eSplitShard\u003c/a\u003e or\n        \u003ca\u003eMergeShards\u003c/a\u003e.\u003c/p\u003e \u003cp\u003e \u003ca\u003eGetShardIterator\u003c/a\u003e has a limit of five\n        transactions per second per account per open shard.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetShardIteratorOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"482\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.GetShardIterator\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetShardIteratorInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.IncreaseStreamRetentionPeriod:\n    post:\n      operationId: IncreaseStreamRetentionPeriod\n      description: \u003cp\u003eIncreases the Kinesis data stream's retention period, which is the\n        length of time data records are accessible after they are added to the\n        stream. The maximum value of a stream's retention period is 168 hours (7\n        days).\u003c/p\u003e \u003cp\u003eIf you choose a longer stream retention period, this\n        operation increases the time period during which records that have not\n        yet expired are accessible. However, it does not make previous, expired\n        data (older than the stream's previous retention period) accessible\n        after the operation has been called. For example, if a stream's\n        retention period is set to 24 hours and is increased to 168 hours, any\n        data that is older than 24 hours remains inaccessible to consumer\n        applications.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.IncreaseStreamRetentionPeriod\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IncreaseStreamRetentionPeriodInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.ListShards:\n    post:\n      operationId: ListShards\n      description: \u003cp\u003eLists the shards in a stream and provides information about each\n        shard. This operation has a limit of 100 transactions per second per\n        data stream.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eThis API is a new operation that is used\n        by the Amazon Kinesis Client Library (KCL). If you have a fine-grained\n        IAM policy that only allows specific operations, you must update your\n        policy to allow calls to this API. For more information, see \u003ca\n        href=\"https://docs.aws.amazon.com/streams/latest/dev/controlling-access.html\"\u003eControlling\n        Access to Amazon Kinesis Data Streams Resources Using IAM\u003c/a\u003e.\u003c/p\u003e\n        \u003c/important\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListShardsOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: ExpiredNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredNextTokenException\"\n        \"484\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.ListShards\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListShardsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.ListStreamConsumers:\n    post:\n      operationId: ListStreamConsumers\n      description: \u003cp\u003eLists the consumers registered to receive data from a stream using\n        enhanced fan-out, and provides information about each consumer.\u003c/p\u003e\n        \u003cp\u003eThis operation has a limit of 10 transactions per second per\n        account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListStreamConsumersOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: ExpiredNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredNextTokenException\"\n        \"484\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.ListStreamConsumers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListStreamConsumersInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.ListStreams:\n    post:\n      operationId: ListStreams\n      description: \u003cp\u003eLists your Kinesis data streams.\u003c/p\u003e \u003cp\u003eThe number of streams may be\n        too large to return from a single call to \u003ccode\u003eListStreams\u003c/code\u003e. You\n        can limit the number of returned streams using the \u003ccode\u003eLimit\u003c/code\u003e\n        parameter. If you do not specify a value for the \u003ccode\u003eLimit\u003c/code\u003e\n        parameter, Kinesis Data Streams uses the default limit, which is\n        currently 10.\u003c/p\u003e \u003cp\u003eYou can detect if there are more streams available\n        to list by using the \u003ccode\u003eHasMoreStreams\u003c/code\u003e flag from the returned\n        output. If there are more streams available, you can request more\n        streams by using the name of the last stream returned by the\n        \u003ccode\u003eListStreams\u003c/code\u003e request in the\n        \u003ccode\u003eExclusiveStartStreamName\u003c/code\u003e parameter in a subsequent request\n        to \u003ccode\u003eListStreams\u003c/code\u003e. The group of stream names returned by the\n        subsequent request is then added to the list. You can continue this\n        process until all the stream names have been collected in the list. \u003c/p\u003e\n        \u003cp\u003e \u003ca\u003eListStreams\u003c/a\u003e has a limit of five transactions per second per\n        account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListStreamsOutput\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: ExclusiveStartStreamName\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.ListStreams\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListStreamsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.ListTagsForStream:\n    post:\n      operationId: ListTagsForStream\n      description: Lists the tags for the specified Kinesis data stream. This operation has\n        a limit of five transactions per second per account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForStreamOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.ListTagsForStream\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTagsForStreamInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.MergeShards:\n    post:\n      operationId: MergeShards\n      description: \u003cp\u003eMerges two adjacent shards in a Kinesis data stream and combines them\n        into a single shard to reduce the stream's capacity to ingest and\n        transport data. Two shards are considered adjacent if the union of the\n        hash key ranges for the two shards form a contiguous set with no gaps.\n        For example, if you have two shards, one with a hash key range of\n        276...381 and the other with a hash key range of 382...454, then you\n        could merge these two shards into a single shard that would have a hash\n        key range of 276...454. After the merge, the single child shard receives\n        data for all hash key values covered by the two parent shards.\u003c/p\u003e \u003cp\u003e\n        \u003ccode\u003eMergeShards\u003c/code\u003e is called when there is a need to reduce the\n        overall capacity of a stream because of excess capacity that is not\n        being used. You must specify the shard to be merged and the adjacent\n        shard for a stream. For more information about merging shards, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-merge.html\"\u003eMerge\n        Two Shards\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer\n        Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf the stream is in the \u003ccode\u003eACTIVE\u003c/code\u003e state, you\n        can call \u003ccode\u003eMergeShards\u003c/code\u003e. If a stream is in the\n        \u003ccode\u003eCREATING\u003c/code\u003e, \u003ccode\u003eUPDATING\u003c/code\u003e, or \u003ccode\u003eDELETING\u003c/code\u003e\n        state, \u003ccode\u003eMergeShards\u003c/code\u003e returns a\n        \u003ccode\u003eResourceInUseException\u003c/code\u003e. If the specified stream does not\n        exist, \u003ccode\u003eMergeShards\u003c/code\u003e returns a\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eYou can use\n        \u003ca\u003eDescribeStream\u003c/a\u003e to check the state of the stream, which is\n        returned in \u003ccode\u003eStreamStatus\u003c/code\u003e.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eMergeShards\u003c/code\u003e\n        is an asynchronous operation. Upon receiving a \u003ccode\u003eMergeShards\u003c/code\u003e\n        request, Amazon Kinesis Data Streams immediately returns a response and\n        sets the \u003ccode\u003eStreamStatus\u003c/code\u003e to \u003ccode\u003eUPDATING\u003c/code\u003e. After the\n        operation is completed, Kinesis Data Streams sets the\n        \u003ccode\u003eStreamStatus\u003c/code\u003e to \u003ccode\u003eACTIVE\u003c/code\u003e. Read and write\n        operations continue to work while the stream is in the\n        \u003ccode\u003eUPDATING\u003c/code\u003e state. \u003c/p\u003e \u003cp\u003eYou use \u003ca\u003eDescribeStream\u003c/a\u003e to\n        determine the shard IDs that are specified in the\n        \u003ccode\u003eMergeShards\u003c/code\u003e request. \u003c/p\u003e \u003cp\u003eIf you try to operate on too\n        many streams in parallel using \u003ca\u003eCreateStream\u003c/a\u003e, \u003ca\u003eDeleteStream\u003c/a\u003e,\n        \u003ccode\u003eMergeShards\u003c/code\u003e, or \u003ca\u003eSplitShard\u003c/a\u003e, you receive a\n        \u003ccode\u003eLimitExceededException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eMergeShards\u003c/code\u003e\n        has a limit of five transactions per second per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.MergeShards\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MergeShardsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.PutRecord:\n    post:\n      operationId: PutRecord\n      description: \u003cp\u003eWrites a single data record into an Amazon Kinesis data stream. Call\n        \u003ccode\u003ePutRecord\u003c/code\u003e to send data into the stream for real-time\n        ingestion and subsequent processing, one record at a time. Each shard\n        can support writes up to 1,000 records per second, up to a maximum data\n        write total of 1 MB per second.\u003c/p\u003e \u003cp\u003eYou must specify the name of the\n        stream that captures, stores, and transports the data; a partition key;\n        and the data blob itself.\u003c/p\u003e \u003cp\u003eThe data blob can be any type of data;\n        for example, a segment from a log file, geographic/location data,\n        website clickstream data, and so on.\u003c/p\u003e \u003cp\u003eThe partition key is used by\n        Kinesis Data Streams to distribute data across shards. Kinesis Data\n        Streams segregates the data records that belong to a stream into\n        multiple shards, using the partition key associated with each data\n        record to determine the shard to which a given data record belongs.\u003c/p\u003e\n        \u003cp\u003ePartition keys are Unicode strings, with a maximum length limit of\n        256 characters for each key. An MD5 hash function is used to map\n        partition keys to 128-bit integer values and to map associated data\n        records to shards using the hash key ranges of the shards. You can\n        override hashing the partition key to determine the shard by explicitly\n        specifying a hash value using the \u003ccode\u003eExplicitHashKey\u003c/code\u003e\n        parameter. For more information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\"\u003eAdding\n        Data to a Stream\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer\n        Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003ccode\u003ePutRecord\u003c/code\u003e returns the shard ID of where\n        the data record was placed and the sequence number that was assigned to\n        the data record.\u003c/p\u003e \u003cp\u003eSequence numbers increase over time and are\n        specific to a shard within a stream, not across all shards within a\n        stream. To guarantee strictly increasing ordering, write serially to a\n        shard and use the \u003ccode\u003eSequenceNumberForOrdering\u003c/code\u003e parameter. For\n        more information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\"\u003eAdding\n        Data to a Stream\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer\n        Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf a \u003ccode\u003ePutRecord\u003c/code\u003e request cannot be\n        processed because of insufficient provisioned throughput on the shard\n        involved in the request, \u003ccode\u003ePutRecord\u003c/code\u003e throws\n        \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eBy default,\n        data records are accessible for 24 hours from the time that they are\n        added to a stream. You can use \u003ca\u003eIncreaseStreamRetentionPeriod\u003c/a\u003e or\n        \u003ca\u003eDecreaseStreamRetentionPeriod\u003c/a\u003e to modify this retention\n        period.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutRecordOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"482\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"483\":\n          description: KMSDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSDisabledException\"\n        \"484\":\n          description: KMSInvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSInvalidStateException\"\n        \"485\":\n          description: KMSAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSAccessDeniedException\"\n        \"486\":\n          description: KMSNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSNotFoundException\"\n        \"487\":\n          description: KMSOptInRequired\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSOptInRequired\"\n        \"488\":\n          description: KMSThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.PutRecord\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutRecordInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.PutRecords:\n    post:\n      operationId: PutRecords\n      description: '\u003cp\u003eWrites multiple data records into a Kinesis data stream in a single\n        call (also referred to as a \u003ccode\u003ePutRecords\u003c/code\u003e request). Use this\n        operation to send data into the stream for data ingestion and\n        processing. \u003c/p\u003e \u003cp\u003eEach \u003ccode\u003ePutRecords\u003c/code\u003e request can support up\n        to 500 records. Each record in the request can be as large as 1 MB, up\n        to a limit of 5 MB for the entire request, including partition keys.\n        Each shard can support writes up to 1,000 records per second, up to a\n        maximum data write total of 1 MB per second.\u003c/p\u003e \u003cp\u003eYou must specify the\n        name of the stream that captures, stores, and transports the data; and\n        an array of request \u003ccode\u003eRecords\u003c/code\u003e, with each record in the array\n        requiring a partition key and data blob. The record size limit applies\n        to the total size of the partition key and data blob.\u003c/p\u003e \u003cp\u003eThe data\n        blob can be any type of data; for example, a segment from a log file,\n        geographic/location data, website clickstream data, and so on.\u003c/p\u003e\n        \u003cp\u003eThe partition key is used by Kinesis Data Streams as input to a hash\n        function that maps the partition key and associated data to a specific\n        shard. An MD5 hash function is used to map partition keys to 128-bit\n        integer values and to map associated data records to shards. As a result\n        of this hashing mechanism, all data records with the same partition key\n        map to the same shard within the stream. For more information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\"\u003eAdding\n        Data to a Stream\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer\n        Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eEach record in the \u003ccode\u003eRecords\u003c/code\u003e array may\n        include an optional parameter, \u003ccode\u003eExplicitHashKey\u003c/code\u003e, which\n        overrides the partition key to shard mapping. This parameter allows a\n        data producer to determine explicitly the shard where the record is\n        stored. For more information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords\"\u003eAdding\n        Multiple Records with PutRecords\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data\n        Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003ePutRecords\u003c/code\u003e response\n        includes an array of response \u003ccode\u003eRecords\u003c/code\u003e. Each record in the\n        response array directly correlates with a record in the request array\n        using natural ordering, from the top to the bottom of the request and\n        response. The response \u003ccode\u003eRecords\u003c/code\u003e array always includes the\n        same number of records as the request array.\u003c/p\u003e \u003cp\u003eThe response\n        \u003ccode\u003eRecords\u003c/code\u003e array includes both successfully and unsuccessfully\n        processed records. Kinesis Data Streams attempts to process all records\n        in each \u003ccode\u003ePutRecords\u003c/code\u003e request. A single record failure does\n        not stop the processing of subsequent records.\u003c/p\u003e \u003cp\u003eA successfully\n        processed record includes \u003ccode\u003eShardId\u003c/code\u003e and\n        \u003ccode\u003eSequenceNumber\u003c/code\u003e values. The \u003ccode\u003eShardId\u003c/code\u003e parameter\n        identifies the shard in the stream where the record is stored. The\n        \u003ccode\u003eSequenceNumber\u003c/code\u003e parameter is an identifier assigned to the\n        put record, unique to all records in the stream.\u003c/p\u003e \u003cp\u003eAn\n        unsuccessfully processed record includes \u003ccode\u003eErrorCode\u003c/code\u003e and\n        \u003ccode\u003eErrorMessage\u003c/code\u003e values. \u003ccode\u003eErrorCode\u003c/code\u003e reflects the\n        type of error and can be one of the following values:\n        \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e or\n        \u003ccode\u003eInternalFailure\u003c/code\u003e. \u003ccode\u003eErrorMessage\u003c/code\u003e provides more\n        detailed information about the\n        \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e exception including\n        the account ID, stream name, and shard ID of the record that was\n        throttled. For more information about partially successful responses,\n        see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-add-data-to-stream.html#kinesis-using-sdk-java-putrecords\"\u003eAdding\n        Multiple Records with PutRecords\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data\n        Streams Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBy default, data records are\n        accessible for 24 hours from the time that they are added to a stream.\n        You can use \u003ca\u003eIncreaseStreamRetentionPeriod\u003c/a\u003e or\n        \u003ca\u003eDecreaseStreamRetentionPeriod\u003c/a\u003e to modify this retention\n        period.\u003c/p\u003e'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutRecordsOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"482\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"483\":\n          description: KMSDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSDisabledException\"\n        \"484\":\n          description: KMSInvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSInvalidStateException\"\n        \"485\":\n          description: KMSAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSAccessDeniedException\"\n        \"486\":\n          description: KMSNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSNotFoundException\"\n        \"487\":\n          description: KMSOptInRequired\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSOptInRequired\"\n        \"488\":\n          description: KMSThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.PutRecords\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutRecordsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.RegisterStreamConsumer:\n    post:\n      operationId: RegisterStreamConsumer\n      description: \u003cp\u003eRegisters a consumer with a Kinesis data stream. When you use this\n        operation, the consumer you register can read data from the stream at a\n        rate of up to 2 MiB per second. This rate is unaffected by the total\n        number of consumers that read from the same stream.\u003c/p\u003e \u003cp\u003eYou can\n        register up to 5 consumers per stream. A given consumer can only be\n        registered with one stream.\u003c/p\u003e \u003cp\u003eThis operation has a limit of five\n        transactions per second per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RegisterStreamConsumerOutput\"\n        \"480\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"483\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.RegisterStreamConsumer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterStreamConsumerInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.RemoveTagsFromStream:\n    post:\n      operationId: RemoveTagsFromStream\n      description: \u003cp\u003eRemoves tags from the specified Kinesis data stream. Removed tags are\n        deleted and cannot be recovered after this operation successfully\n        completes.\u003c/p\u003e \u003cp\u003eIf you specify a tag that does not exist, it is\n        ignored.\u003c/p\u003e \u003cp\u003e \u003ca\u003eRemoveTagsFromStream\u003c/a\u003e has a limit of five\n        transactions per second per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.RemoveTagsFromStream\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RemoveTagsFromStreamInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.SplitShard:\n    post:\n      operationId: SplitShard\n      description: \u003cp\u003eSplits a shard into two new shards in the Kinesis data stream, to\n        increase the stream's capacity to ingest and transport data.\n        \u003ccode\u003eSplitShard\u003c/code\u003e is called when there is a need to increase the\n        overall capacity of a stream because of an expected increase in the\n        volume of data records being ingested. \u003c/p\u003e \u003cp\u003eYou can also use\n        \u003ccode\u003eSplitShard\u003c/code\u003e when a shard appears to be approaching its\n        maximum utilization; for example, the producers sending data into the\n        specific shard are suddenly sending more than previously anticipated.\n        You can also call \u003ccode\u003eSplitShard\u003c/code\u003e to increase stream capacity,\n        so that more Kinesis Data Streams applications can simultaneously read\n        data from the stream for real-time processing. \u003c/p\u003e \u003cp\u003eYou must specify\n        the shard to be split and the new hash key, which is the position in the\n        shard where the shard gets split in two. In many cases, the new hash key\n        might be the average of the beginning and ending hash key, but it can be\n        any hash key value in the range being mapped into the shard. For more\n        information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-split.html\"\u003eSplit\n        a Shard\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer\n        Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can use \u003ca\u003eDescribeStream\u003c/a\u003e to determine the\n        shard ID and hash key values for the \u003ccode\u003eShardToSplit\u003c/code\u003e and\n        \u003ccode\u003eNewStartingHashKey\u003c/code\u003e parameters that are specified in the\n        \u003ccode\u003eSplitShard\u003c/code\u003e request.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eSplitShard\u003c/code\u003e is an\n        asynchronous operation. Upon receiving a \u003ccode\u003eSplitShard\u003c/code\u003e\n        request, Kinesis Data Streams immediately returns a response and sets\n        the stream status to \u003ccode\u003eUPDATING\u003c/code\u003e. After the operation is\n        completed, Kinesis Data Streams sets the stream status to\n        \u003ccode\u003eACTIVE\u003c/code\u003e. Read and write operations continue to work while\n        the stream is in the \u003ccode\u003eUPDATING\u003c/code\u003e state. \u003c/p\u003e \u003cp\u003eYou can use\n        \u003ccode\u003eDescribeStream\u003c/code\u003e to check the status of the stream, which is\n        returned in \u003ccode\u003eStreamStatus\u003c/code\u003e. If the stream is in the\n        \u003ccode\u003eACTIVE\u003c/code\u003e state, you can call \u003ccode\u003eSplitShard\u003c/code\u003e. If a\n        stream is in \u003ccode\u003eCREATING\u003c/code\u003e or \u003ccode\u003eUPDATING\u003c/code\u003e or\n        \u003ccode\u003eDELETING\u003c/code\u003e states, \u003ccode\u003eDescribeStream\u003c/code\u003e returns a\n        \u003ccode\u003eResourceInUseException\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf the specified stream does\n        not exist, \u003ccode\u003eDescribeStream\u003c/code\u003e returns a\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e. If you try to create more shards\n        than are authorized for your account, you receive a\n        \u003ccode\u003eLimitExceededException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eFor the default shard limit\n        for an AWS account, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eKinesis\n        Data Streams Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer\n        Guide\u003c/i\u003e. To increase this limit, \u003ca\n        href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\"\u003econtact\n        AWS Support\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you try to operate on too many streams\n        simultaneously using \u003ca\u003eCreateStream\u003c/a\u003e, \u003ca\u003eDeleteStream\u003c/a\u003e,\n        \u003ca\u003eMergeShards\u003c/a\u003e, and/or \u003ca\u003eSplitShard\u003c/a\u003e, you receive a\n        \u003ccode\u003eLimitExceededException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eSplitShard\u003c/code\u003e\n        has a limit of five transactions per second per account.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"482\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.SplitShard\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SplitShardInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.StartStreamEncryption:\n    post:\n      operationId: StartStreamEncryption\n      description: \"\u003cp\u003eEnables or updates server-side encryption using an AWS KMS key for a\n        specified stream. \u003c/p\u003e \u003cp\u003eStarting encryption is an asynchronous\n        operation. Upon receiving the request, Kinesis Data Streams returns\n        immediately and sets the status of the stream to \u003ccode\u003eUPDATING\u003c/code\u003e.\n        After the update is complete, Kinesis Data Streams sets the status of\n        the stream back to \u003ccode\u003eACTIVE\u003c/code\u003e. Updating or applying encryption\n        normally takes a few seconds to complete, but it can take minutes. You\n        can continue to read and write data to your stream while its status is\n        \u003ccode\u003eUPDATING\u003c/code\u003e. Once the status of the stream is\n        \u003ccode\u003eACTIVE\u003c/code\u003e, encryption begins for records written to the\n        stream. \u003c/p\u003e \u003cp\u003eAPI Limits: You can successfully apply a new AWS KMS key\n        for server-side encryption 25 times in a rolling 24-hour period.\u003c/p\u003e\n        \u003cp\u003eNote: It can take up to 5 seconds after the stream is in an\n        \u003ccode\u003eACTIVE\u003c/code\u003e status before all records written to the stream are\n        encrypted. After you enable encryption, you can verify that encryption\n        is applied by inspecting the API response from \u003ccode\u003ePutRecord\u003c/code\u003e or\n        \u003ccode\u003ePutRecords\u003c/code\u003e.\u003c/p\u003e\"\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"483\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"484\":\n          description: KMSDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSDisabledException\"\n        \"485\":\n          description: KMSInvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSInvalidStateException\"\n        \"486\":\n          description: KMSAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSAccessDeniedException\"\n        \"487\":\n          description: KMSNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSNotFoundException\"\n        \"488\":\n          description: KMSOptInRequired\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSOptInRequired\"\n        \"489\":\n          description: KMSThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KMSThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.StartStreamEncryption\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartStreamEncryptionInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.StopStreamEncryption:\n    post:\n      operationId: StopStreamEncryption\n      description: \"\u003cp\u003eDisables server-side encryption for a specified stream. \u003c/p\u003e\n        \u003cp\u003eStopping encryption is an asynchronous operation. Upon receiving the\n        request, Kinesis Data Streams returns immediately and sets the status of\n        the stream to \u003ccode\u003eUPDATING\u003c/code\u003e. After the update is complete,\n        Kinesis Data Streams sets the status of the stream back to\n        \u003ccode\u003eACTIVE\u003c/code\u003e. Stopping encryption normally takes a few seconds to\n        complete, but it can take minutes. You can continue to read and write\n        data to your stream while its status is \u003ccode\u003eUPDATING\u003c/code\u003e. Once the\n        status of the stream is \u003ccode\u003eACTIVE\u003c/code\u003e, records written to the\n        stream are no longer encrypted by Kinesis Data Streams. \u003c/p\u003e \u003cp\u003eAPI\n        Limits: You can successfully disable server-side encryption 25 times in\n        a rolling 24-hour period. \u003c/p\u003e \u003cp\u003eNote: It can take up to 5 seconds\n        after the stream is in an \u003ccode\u003eACTIVE\u003c/code\u003e status before all records\n        written to the stream are no longer subject to encryption. After you\n        disabled encryption, you can verify that encryption is not applied by\n        inspecting the API response from \u003ccode\u003ePutRecord\u003c/code\u003e or\n        \u003ccode\u003ePutRecords\u003c/code\u003e.\u003c/p\u003e\"\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"483\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.StopStreamEncryption\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StopStreamEncryptionInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=Kinesis_20131202.UpdateShardCount:\n    post:\n      operationId: UpdateShardCount\n      description: \u003cp\u003eUpdates the shard count of the specified stream to the specified\n        number of shards.\u003c/p\u003e \u003cp\u003eUpdating the shard count is an asynchronous\n        operation. Upon receiving the request, Kinesis Data Streams returns\n        immediately and sets the status of the stream to \u003ccode\u003eUPDATING\u003c/code\u003e.\n        After the update is complete, Kinesis Data Streams sets the status of\n        the stream back to \u003ccode\u003eACTIVE\u003c/code\u003e. Depending on the size of the\n        stream, the scaling action could take a few minutes to complete. You can\n        continue to read and write data to your stream while its status is\n        \u003ccode\u003eUPDATING\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eTo update the shard count, Kinesis Data\n        Streams performs splits or merges on individual shards. This can cause\n        short-lived shards to be created, in addition to the final shards. We\n        recommend that you double or halve the shard count, as this results in\n        the fewest number of splits or merges.\u003c/p\u003e \u003cp\u003eThis operation has the\n        following default limits. By default, you cannot do the following:\u003c/p\u003e\n        \u003cul\u003e \u003cli\u003e \u003cp\u003eScale more than twice per rolling 24-hour period per\n        stream\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale up to more than double your current shard\n        count for a stream\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale down below half your current\n        shard count for a stream\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale up to more than 500\n        shards in a stream\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScale a stream with more than 500\n        shards down unless the result is less than 500 shards\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n        \u003cp\u003eScale up to more than the shard limit for your account\u003c/p\u003e \u003c/li\u003e\n        \u003c/ul\u003e \u003cp\u003eFor the default limits for an AWS account, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eStreams\n        Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e. To\n        request an increase in the call rate limit, the shard limit for this\n        API, or your overall shard limit, use the \u003ca\n        href=\"https://console.aws.amazon.com/support/v1#/case/create?issueType=service-limit-increase\u0026amp;limitType=service-code-kinesis\"\u003elimits\n        form\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateShardCountOutput\"\n        \"480\":\n          description: InvalidArgumentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidArgumentException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"483\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - Kinesis_20131202.UpdateShardCount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateShardCountInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://kinesis.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Kinesis multi-region endpoint\n  - url: https://kinesis.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Kinesis multi-region endpoint\n  - url: http://kinesis.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Kinesis endpoint for China (Beijing) and China (Ningxia)\n  - url: https://kinesis.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Kinesis endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AddTagsToStreamInput:\n      type: object\n      required:\n        - StreamName\n        - Tags\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n      description: Represents the input for \u003ccode\u003eAddTagsToStream\u003c/code\u003e.\n    ResourceNotFoundException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The requested resource could not be found. The stream might not be\n        specified correctly.\n    ResourceInUseException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The resource is not available for this operation. For successful\n        operation, the resource must be in the \u003ccode\u003eACTIVE\u003c/code\u003e state.\n    InvalidArgumentException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: A specified parameter exceeds its restrictions, is not supported, or\n        can't be used. For more information, see the returned message.\n    LimitExceededException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: \"The requested resource exceeds the maximum number allowed, or the\n        number of concurrent stream requests exceeds the maximum number allowed.\n        \"\n    CreateStreamInput:\n      type: object\n      required:\n        - StreamName\n        - ShardCount\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        ShardCount:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n      description: Represents the input for \u003ccode\u003eCreateStream\u003c/code\u003e.\n    DecreaseStreamRetentionPeriodInput:\n      type: object\n      required:\n        - StreamName\n        - RetentionPeriodHours\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        RetentionPeriodHours:\n          $ref: \"#/components/schemas/RetentionPeriodHours\"\n      description: Represents the input for \u003ca\u003eDecreaseStreamRetentionPeriod\u003c/a\u003e.\n    DeleteStreamInput:\n      type: object\n      required:\n        - StreamName\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        EnforceConsumerDeletion:\n          $ref: \"#/components/schemas/BooleanObject\"\n      description: Represents the input for \u003ca\u003eDeleteStream\u003c/a\u003e.\n    DeregisterStreamConsumerInput:\n      type: object\n      properties:\n        StreamARN:\n          $ref: \"#/components/schemas/StreamARN\"\n        ConsumerName:\n          $ref: \"#/components/schemas/ConsumerName\"\n        ConsumerARN:\n          $ref: \"#/components/schemas/ConsumerARN\"\n    DescribeLimitsOutput:\n      type: object\n      required:\n        - ShardLimit\n        - OpenShardCount\n      properties:\n        ShardLimit:\n          $ref: \"#/components/schemas/ShardCountObject\"\n        OpenShardCount:\n          $ref: \"#/components/schemas/ShardCountObject\"\n    DescribeLimitsInput:\n      type: object\n      properties: {}\n    DescribeStreamOutput:\n      type: object\n      required:\n        - StreamDescription\n      properties:\n        StreamDescription:\n          $ref: \"#/components/schemas/StreamDescription\"\n      description: Represents the output for \u003ccode\u003eDescribeStream\u003c/code\u003e.\n    DescribeStreamInput:\n      type: object\n      required:\n        - StreamName\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        Limit:\n          $ref: \"#/components/schemas/DescribeStreamInputLimit\"\n        ExclusiveStartShardId:\n          $ref: \"#/components/schemas/ShardId\"\n      description: Represents the input for \u003ccode\u003eDescribeStream\u003c/code\u003e.\n    DescribeStreamConsumerOutput:\n      type: object\n      required:\n        - ConsumerDescription\n      properties:\n        ConsumerDescription:\n          $ref: \"#/components/schemas/ConsumerDescription\"\n    DescribeStreamConsumerInput:\n      type: object\n      properties:\n        StreamARN:\n          $ref: \"#/components/schemas/StreamARN\"\n        ConsumerName:\n          $ref: \"#/components/schemas/ConsumerName\"\n        ConsumerARN:\n          $ref: \"#/components/schemas/ConsumerARN\"\n    DescribeStreamSummaryOutput:\n      type: object\n      required:\n        - StreamDescriptionSummary\n      properties:\n        StreamDescriptionSummary:\n          $ref: \"#/components/schemas/StreamDescriptionSummary\"\n    DescribeStreamSummaryInput:\n      type: object\n      required:\n        - StreamName\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n    EnhancedMonitoringOutput:\n      type: object\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        CurrentShardLevelMetrics:\n          $ref: \"#/components/schemas/MetricsNameList\"\n        DesiredShardLevelMetrics:\n          $ref: \"#/components/schemas/MetricsNameList\"\n      description: Represents the output for \u003ca\u003eEnableEnhancedMonitoring\u003c/a\u003e and\n        \u003ca\u003eDisableEnhancedMonitoring\u003c/a\u003e.\n    DisableEnhancedMonitoringInput:\n      type: object\n      required:\n        - StreamName\n        - ShardLevelMetrics\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        ShardLevelMetrics:\n          $ref: \"#/components/schemas/MetricsNameList\"\n      description: Represents the input for \u003ca\u003eDisableEnhancedMonitoring\u003c/a\u003e.\n    EnableEnhancedMonitoringInput:\n      type: object\n      required:\n        - StreamName\n        - ShardLevelMetrics\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        ShardLevelMetrics:\n          $ref: \"#/components/schemas/MetricsNameList\"\n      description: Represents the input for \u003ca\u003eEnableEnhancedMonitoring\u003c/a\u003e.\n    GetRecordsOutput:\n      type: object\n      required:\n        - Records\n      properties:\n        Records:\n          $ref: \"#/components/schemas/RecordList\"\n        NextShardIterator:\n          $ref: \"#/components/schemas/ShardIterator\"\n        MillisBehindLatest:\n          $ref: \"#/components/schemas/MillisBehindLatest\"\n      description: Represents the output for \u003ca\u003eGetRecords\u003c/a\u003e.\n    GetRecordsInput:\n      type: object\n      required:\n        - ShardIterator\n      properties:\n        ShardIterator:\n          $ref: \"#/components/schemas/ShardIterator\"\n        Limit:\n          $ref: \"#/components/schemas/GetRecordsInputLimit\"\n      description: Represents the input for \u003ca\u003eGetRecords\u003c/a\u003e.\n    ProvisionedThroughputExceededException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The request rate for the stream is too high, or the requested data is\n        too large for the available throughput. Reduce the frequency or size of\n        your requests. For more information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\"\u003eStreams\n        Limits\u003c/a\u003e in the \u003ci\u003eAmazon Kinesis Data Streams Developer Guide\u003c/i\u003e,\n        and \u003ca\n        href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\"\u003eError\n        Retries and Exponential Backoff in AWS\u003c/a\u003e in the \u003ci\u003eAWS General\n        Reference\u003c/i\u003e.\n    ExpiredIteratorException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The provided iterator exceeds the maximum age allowed.\n    KMSDisabledException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The request was rejected because the specified customer master key (CMK)\n        isn't enabled.\n    KMSInvalidStateException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The request was rejected because the state of the specified resource\n        isn't valid for this request. For more information, see \u003ca\n        href=\"http://docs.aws.amazon.com/kms/latest/developerguide/key-state.html\"\u003eHow\n        Key State Affects Use of a Customer Master Key\u003c/a\u003e in the \u003ci\u003eAWS Key\n        Management Service Developer Guide\u003c/i\u003e.\n    KMSAccessDeniedException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The ciphertext references a key that doesn't exist or that you don't\n        have access to.\n    KMSNotFoundException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The request was rejected because the specified entity or resource can't\n        be found.\n    KMSOptInRequired:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The AWS access key ID needs a subscription for the service.\n    KMSThrottlingException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The request was denied due to request throttling. For more information\n        about throttling, see \u003ca\n        href=\"http://docs.aws.amazon.com/kms/latest/developerguide/limits.html#requests-per-second\"\u003eLimits\u003c/a\u003e\n        in the \u003ci\u003eAWS Key Management Service Developer Guide\u003c/i\u003e.\n    GetShardIteratorOutput:\n      type: object\n      properties:\n        ShardIterator:\n          $ref: \"#/components/schemas/ShardIterator\"\n      description: Represents the output for \u003ccode\u003eGetShardIterator\u003c/code\u003e.\n    GetShardIteratorInput:\n      type: object\n      required:\n        - StreamName\n        - ShardId\n        - ShardIteratorType\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        ShardId:\n          $ref: \"#/components/schemas/ShardId\"\n        ShardIteratorType:\n          $ref: \"#/components/schemas/ShardIteratorType\"\n        StartingSequenceNumber:\n          $ref: \"#/components/schemas/SequenceNumber\"\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: Represents the input for \u003ccode\u003eGetShardIterator\u003c/code\u003e.\n    IncreaseStreamRetentionPeriodInput:\n      type: object\n      required:\n        - StreamName\n        - RetentionPeriodHours\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        RetentionPeriodHours:\n          $ref: \"#/components/schemas/RetentionPeriodHours\"\n      description: Represents the input for \u003ca\u003eIncreaseStreamRetentionPeriod\u003c/a\u003e.\n    ListShardsOutput:\n      type: object\n      properties:\n        Shards:\n          $ref: \"#/components/schemas/ShardList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListShardsInput:\n      type: object\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        ExclusiveStartShardId:\n          $ref: \"#/components/schemas/ShardId\"\n        MaxResults:\n          $ref: \"#/components/schemas/ListShardsInputLimit\"\n        StreamCreationTimestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n    ExpiredNextTokenException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: The pagination token passed to the operation is expired.\n    ListStreamConsumersOutput:\n      type: object\n      properties:\n        Consumers:\n          $ref: \"#/components/schemas/ConsumerList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListStreamConsumersInput:\n      type: object\n      required:\n        - StreamARN\n      properties:\n        StreamARN:\n          $ref: \"#/components/schemas/StreamARN\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/ListStreamConsumersInputLimit\"\n        StreamCreationTimestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n    ListStreamsOutput:\n      type: object\n      required:\n        - StreamNames\n        - HasMoreStreams\n      properties:\n        StreamNames:\n          $ref: \"#/components/schemas/StreamNameList\"\n        HasMoreStreams:\n          $ref: \"#/components/schemas/BooleanObject\"\n      description: Represents the output for \u003ccode\u003eListStreams\u003c/code\u003e.\n    ListStreamsInput:\n      type: object\n      properties:\n        Limit:\n          $ref: \"#/components/schemas/ListStreamsInputLimit\"\n        ExclusiveStartStreamName:\n          $ref: \"#/components/schemas/StreamName\"\n      description: Represents the input for \u003ccode\u003eListStreams\u003c/code\u003e.\n    ListTagsForStreamOutput:\n      type: object\n      required:\n        - Tags\n        - HasMoreTags\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n        HasMoreTags:\n          $ref: \"#/components/schemas/BooleanObject\"\n      description: Represents the output for \u003ccode\u003eListTagsForStream\u003c/code\u003e.\n    ListTagsForStreamInput:\n      type: object\n      required:\n        - StreamName\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        ExclusiveStartTagKey:\n          $ref: \"#/components/schemas/TagKey\"\n        Limit:\n          $ref: \"#/components/schemas/ListTagsForStreamInputLimit\"\n      description: Represents the input for \u003ccode\u003eListTagsForStream\u003c/code\u003e.\n    MergeShardsInput:\n      type: object\n      required:\n        - StreamName\n        - ShardToMerge\n        - AdjacentShardToMerge\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        ShardToMerge:\n          $ref: \"#/components/schemas/ShardId\"\n        AdjacentShardToMerge:\n          $ref: \"#/components/schemas/ShardId\"\n      description: Represents the input for \u003ccode\u003eMergeShards\u003c/code\u003e.\n    PutRecordOutput:\n      type: object\n      required:\n        - ShardId\n        - SequenceNumber\n      properties:\n        ShardId:\n          $ref: \"#/components/schemas/ShardId\"\n        SequenceNumber:\n          $ref: \"#/components/schemas/SequenceNumber\"\n        EncryptionType:\n          $ref: \"#/components/schemas/EncryptionType\"\n      description: Represents the output for \u003ccode\u003ePutRecord\u003c/code\u003e.\n    PutRecordInput:\n      type: object\n      required:\n        - StreamName\n        - Data\n        - PartitionKey\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        Data:\n          $ref: \"#/components/schemas/Data\"\n        PartitionKey:\n          $ref: \"#/components/schemas/PartitionKey\"\n        ExplicitHashKey:\n          $ref: \"#/components/schemas/HashKey\"\n        SequenceNumberForOrdering:\n          $ref: \"#/components/schemas/SequenceNumber\"\n      description: Represents the input for \u003ccode\u003ePutRecord\u003c/code\u003e.\n    PutRecordsOutput:\n      type: object\n      required:\n        - Records\n      properties:\n        FailedRecordCount:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n        Records:\n          $ref: \"#/components/schemas/PutRecordsResultEntryList\"\n        EncryptionType:\n          $ref: \"#/components/schemas/EncryptionType\"\n      description: \" \u003ccode\u003ePutRecords\u003c/code\u003e results.\"\n    PutRecordsInput:\n      type: object\n      required:\n        - Records\n        - StreamName\n      properties:\n        Records:\n          $ref: \"#/components/schemas/PutRecordsRequestEntryList\"\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n      description: A \u003ccode\u003ePutRecords\u003c/code\u003e request.\n    RegisterStreamConsumerOutput:\n      type: object\n      required:\n        - Consumer\n      properties:\n        Consumer:\n          $ref: \"#/components/schemas/Consumer\"\n    RegisterStreamConsumerInput:\n      type: object\n      required:\n        - StreamARN\n        - ConsumerName\n      properties:\n        StreamARN:\n          $ref: \"#/components/schemas/StreamARN\"\n        ConsumerName:\n          $ref: \"#/components/schemas/ConsumerName\"\n    RemoveTagsFromStreamInput:\n      type: object\n      required:\n        - StreamName\n        - TagKeys\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        TagKeys:\n          $ref: \"#/components/schemas/TagKeyList\"\n      description: Represents the input for \u003ccode\u003eRemoveTagsFromStream\u003c/code\u003e.\n    SplitShardInput:\n      type: object\n      required:\n        - StreamName\n        - ShardToSplit\n        - NewStartingHashKey\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        ShardToSplit:\n          $ref: \"#/components/schemas/ShardId\"\n        NewStartingHashKey:\n          $ref: \"#/components/schemas/HashKey\"\n      description: Represents the input for \u003ccode\u003eSplitShard\u003c/code\u003e.\n    StartStreamEncryptionInput:\n      type: object\n      required:\n        - StreamName\n        - EncryptionType\n        - KeyId\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        EncryptionType:\n          $ref: \"#/components/schemas/EncryptionType\"\n        KeyId:\n          $ref: \"#/components/schemas/KeyId\"\n    StopStreamEncryptionInput:\n      type: object\n      required:\n        - StreamName\n        - EncryptionType\n        - KeyId\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        EncryptionType:\n          $ref: \"#/components/schemas/EncryptionType\"\n        KeyId:\n          $ref: \"#/components/schemas/KeyId\"\n    UpdateShardCountOutput:\n      type: object\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        CurrentShardCount:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n        TargetShardCount:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n    UpdateShardCountInput:\n      type: object\n      required:\n        - StreamName\n        - TargetShardCount\n        - ScalingType\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        TargetShardCount:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n        ScalingType:\n          $ref: \"#/components/schemas/ScalingType\"\n    StreamName:\n      type: string\n      pattern: \"[a-zA-Z0-9_.-]+\"\n      minLength: 1\n      maxLength: 128\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 50\n      additionalProperties:\n        $ref: \"#/components/schemas/TagValue\"\n    BooleanObject:\n      type: boolean\n    ConsumerName:\n      type: string\n      pattern: \"[a-zA-Z0-9_.-]+\"\n      minLength: 1\n      maxLength: 128\n    ConsumerARN:\n      type: string\n      pattern: ^(arn):aws.*:kinesis:.*:\\d{12}:.*stream\\/[a-zA-Z0-9_.-]+\\/consumer\\/[a-zA-Z0-9_.-]+:[0-9]+\n      minLength: 1\n      maxLength: 2048\n    ConsumerStatus:\n      type: string\n      enum:\n        - CREATING\n        - DELETING\n        - ACTIVE\n    Timestamp:\n      type: string\n      format: date-time\n    Consumer:\n      type: object\n      required:\n        - ConsumerName\n        - ConsumerARN\n        - ConsumerStatus\n        - ConsumerCreationTimestamp\n      properties:\n        ConsumerName:\n          $ref: \"#/components/schemas/ConsumerName\"\n        ConsumerARN:\n          $ref: \"#/components/schemas/ConsumerARN\"\n        ConsumerStatus:\n          $ref: \"#/components/schemas/ConsumerStatus\"\n        ConsumerCreationTimestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: An object that represents the details of the consumer you registered.\n    ConsumerCountObject:\n      type: integer\n      minimum: 0\n      maximum: 1000000\n    StreamARN:\n      type: string\n      pattern: arn:aws.*:kinesis:.*:\\d{12}:stream/.*\n      minLength: 1\n      maxLength: 2048\n    ConsumerDescription:\n      type: object\n      required:\n        - ConsumerName\n        - ConsumerARN\n        - ConsumerStatus\n        - ConsumerCreationTimestamp\n        - StreamARN\n      properties:\n        ConsumerName:\n          $ref: \"#/components/schemas/ConsumerName\"\n        ConsumerARN:\n          $ref: \"#/components/schemas/ConsumerARN\"\n        ConsumerStatus:\n          $ref: \"#/components/schemas/ConsumerStatus\"\n        ConsumerCreationTimestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        StreamARN:\n          $ref: \"#/components/schemas/StreamARN\"\n      description: An object that represents the details of a registered consumer.\n    ConsumerList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Consumer\"\n    PositiveIntegerObject:\n      type: integer\n      minimum: 1\n      maximum: 100000\n    Data:\n      type: string\n      minLength: 0\n      maxLength: 1048576\n    RetentionPeriodHours:\n      type: integer\n      minimum: 1\n      maximum: 168\n    ShardCountObject:\n      type: integer\n      minimum: 0\n      maximum: 1000000\n    DescribeStreamInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    ShardId:\n      type: string\n      pattern: \"[a-zA-Z0-9_.-]+\"\n      minLength: 1\n      maxLength: 128\n    StreamDescription:\n      type: object\n      required:\n        - StreamName\n        - StreamARN\n        - StreamStatus\n        - Shards\n        - HasMoreShards\n        - RetentionPeriodHours\n        - StreamCreationTimestamp\n        - EnhancedMonitoring\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        StreamARN:\n          $ref: \"#/components/schemas/StreamARN\"\n        StreamStatus:\n          $ref: \"#/components/schemas/StreamStatus\"\n        Shards:\n          $ref: \"#/components/schemas/ShardList\"\n        HasMoreShards:\n          $ref: \"#/components/schemas/BooleanObject\"\n        RetentionPeriodHours:\n          $ref: \"#/components/schemas/RetentionPeriodHours\"\n        StreamCreationTimestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        EnhancedMonitoring:\n          $ref: \"#/components/schemas/EnhancedMonitoringList\"\n        EncryptionType:\n          $ref: \"#/components/schemas/EncryptionType\"\n        KeyId:\n          $ref: \"#/components/schemas/KeyId\"\n      description: Represents the output for \u003ca\u003eDescribeStream\u003c/a\u003e.\n    StreamDescriptionSummary:\n      type: object\n      required:\n        - StreamName\n        - StreamARN\n        - StreamStatus\n        - RetentionPeriodHours\n        - StreamCreationTimestamp\n        - EnhancedMonitoring\n        - OpenShardCount\n      properties:\n        StreamName:\n          $ref: \"#/components/schemas/StreamName\"\n        StreamARN:\n          $ref: \"#/components/schemas/StreamARN\"\n        StreamStatus:\n          $ref: \"#/components/schemas/StreamStatus\"\n        RetentionPeriodHours:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n        StreamCreationTimestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        EnhancedMonitoring:\n          $ref: \"#/components/schemas/EnhancedMonitoringList\"\n        EncryptionType:\n          $ref: \"#/components/schemas/EncryptionType\"\n        KeyId:\n          $ref: \"#/components/schemas/KeyId\"\n        OpenShardCount:\n          $ref: \"#/components/schemas/ShardCountObject\"\n        ConsumerCount:\n          $ref: \"#/components/schemas/ConsumerCountObject\"\n      description: \"Represents the output for \u003ca\u003eDescribeStreamSummary\u003c/a\u003e \"\n    MetricsNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/MetricsName\"\n      minItems: 1\n      maxItems: 7\n    EncryptionType:\n      type: string\n      enum:\n        - NONE\n        - KMS\n    EnhancedMetrics:\n      type: object\n      properties:\n        ShardLevelMetrics:\n          $ref: \"#/components/schemas/MetricsNameList\"\n      description: Represents enhanced metrics types.\n    EnhancedMonitoringList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/EnhancedMetrics\"\n    ErrorCode:\n      type: string\n    ErrorMessage:\n      type: string\n    ShardIterator:\n      type: string\n      minLength: 1\n      maxLength: 512\n    GetRecordsInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    RecordList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Record\"\n    MillisBehindLatest:\n      type: integer\n      minimum: 0\n    ShardIteratorType:\n      type: string\n      enum:\n        - AT_SEQUENCE_NUMBER\n        - AFTER_SEQUENCE_NUMBER\n        - TRIM_HORIZON\n        - LATEST\n        - AT_TIMESTAMP\n    SequenceNumber:\n      type: string\n      pattern: 0|([1-9]\\d{0,128})\n    HashKey:\n      type: string\n      pattern: 0|([1-9]\\d{0,38})\n    HashKeyRange:\n      type: object\n      required:\n        - StartingHashKey\n        - EndingHashKey\n      properties:\n        StartingHashKey:\n          $ref: \"#/components/schemas/HashKey\"\n        EndingHashKey:\n          $ref: \"#/components/schemas/HashKey\"\n      description: The range of possible hash key values for the shard, which is a set of\n        ordered contiguous positive integers.\n    InternalFailureException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/ErrorMessage\"\n    KeyId:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    NextToken:\n      type: string\n      minLength: 1\n      maxLength: 1048576\n    ListShardsInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    ShardList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Shard\"\n    ListStreamConsumersInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    ListStreamsInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    StreamNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/StreamName\"\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    ListTagsForStreamInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 50\n    TagList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tag\"\n      minItems: 0\n    MetricsName:\n      type: string\n      enum:\n        - IncomingBytes\n        - IncomingRecords\n        - OutgoingBytes\n        - OutgoingRecords\n        - WriteProvisionedThroughputExceeded\n        - ReadProvisionedThroughputExceeded\n        - IteratorAgeMilliseconds\n        - ALL\n    PartitionKey:\n      type: string\n      minLength: 1\n      maxLength: 256\n    PutRecordsRequestEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PutRecordsRequestEntry\"\n      minItems: 1\n      maxItems: 500\n    PutRecordsResultEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PutRecordsResultEntry\"\n      minItems: 1\n      maxItems: 500\n    PutRecordsRequestEntry:\n      type: object\n      required:\n        - Data\n        - PartitionKey\n      properties:\n        Data:\n          $ref: \"#/components/schemas/Data\"\n        ExplicitHashKey:\n          $ref: \"#/components/schemas/HashKey\"\n        PartitionKey:\n          $ref: \"#/components/schemas/PartitionKey\"\n      description: Represents the output for \u003ccode\u003ePutRecords\u003c/code\u003e.\n    PutRecordsResultEntry:\n      type: object\n      properties:\n        SequenceNumber:\n          $ref: \"#/components/schemas/SequenceNumber\"\n        ShardId:\n          $ref: \"#/components/schemas/ShardId\"\n        ErrorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        ErrorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Represents the result of an individual record from a\n        \u003ccode\u003ePutRecords\u003c/code\u003e request. A record that is successfully added to\n        a stream includes \u003ccode\u003eSequenceNumber\u003c/code\u003e and \u003ccode\u003eShardId\u003c/code\u003e\n        in the result. A record that fails to be added to the stream includes\n        \u003ccode\u003eErrorCode\u003c/code\u003e and \u003ccode\u003eErrorMessage\u003c/code\u003e in the result.\n    Record:\n      type: object\n      required:\n        - SequenceNumber\n        - Data\n        - PartitionKey\n      properties:\n        SequenceNumber:\n          $ref: \"#/components/schemas/SequenceNumber\"\n        ApproximateArrivalTimestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        Data:\n          $ref: \"#/components/schemas/Data\"\n        PartitionKey:\n          $ref: \"#/components/schemas/PartitionKey\"\n        EncryptionType:\n          $ref: \"#/components/schemas/EncryptionType\"\n      description: The unit of data of the Kinesis data stream, which is composed of a\n        sequence number, a partition key, and a data blob.\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n      minItems: 1\n      maxItems: 50\n    ScalingType:\n      type: string\n      enum:\n        - UNIFORM_SCALING\n    SequenceNumberRange:\n      type: object\n      required:\n        - StartingSequenceNumber\n      properties:\n        StartingSequenceNumber:\n          $ref: \"#/components/schemas/SequenceNumber\"\n        EndingSequenceNumber:\n          $ref: \"#/components/schemas/SequenceNumber\"\n      description: The range of possible sequence numbers for the shard.\n    Shard:\n      type: object\n      required:\n        - ShardId\n        - HashKeyRange\n        - SequenceNumberRange\n      properties:\n        ShardId:\n          $ref: \"#/components/schemas/ShardId\"\n        ParentShardId:\n          $ref: \"#/components/schemas/ShardId\"\n        AdjacentParentShardId:\n          $ref: \"#/components/schemas/ShardId\"\n        HashKeyRange:\n          $ref: \"#/components/schemas/HashKeyRange\"\n        SequenceNumberRange:\n          $ref: \"#/components/schemas/SequenceNumberRange\"\n      description: A uniquely identified group of data records in a Kinesis data stream.\n    StartingPosition:\n      type: object\n      required:\n        - Type\n      properties:\n        Type:\n          $ref: \"#/components/schemas/ShardIteratorType\"\n        SequenceNumber:\n          $ref: \"#/components/schemas/SequenceNumber\"\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n    StreamStatus:\n      type: string\n      enum:\n        - CREATING\n        - DELETING\n        - ACTIVE\n        - UPDATING\n    SubscribeToShardEvent:\n      type: object\n      required:\n        - Records\n        - ContinuationSequenceNumber\n        - MillisBehindLatest\n      properties:\n        Records:\n          $ref: \"#/components/schemas/RecordList\"\n        ContinuationSequenceNumber:\n          $ref: \"#/components/schemas/SequenceNumber\"\n        MillisBehindLatest:\n          $ref: \"#/components/schemas/MillisBehindLatest\"\n      description: \"After you call \u003ca\u003eSubscribeToShard\u003c/a\u003e, Kinesis Data Streams sends\n        events of this type to your consumer. \"\n    SubscribeToShardEventStream:\n      type: object\n      required:\n        - SubscribeToShardEvent\n      properties:\n        SubscribeToShardEvent:\n          $ref: \"#/components/schemas/SubscribeToShardEvent\"\n    SubscribeToShardInput:\n      type: object\n      required:\n        - ConsumerARN\n        - ShardId\n        - StartingPosition\n      properties:\n        ConsumerARN:\n          $ref: \"#/components/schemas/ConsumerARN\"\n        ShardId:\n          $ref: \"#/components/schemas/ShardId\"\n        StartingPosition:\n          $ref: \"#/components/schemas/StartingPosition\"\n    SubscribeToShardOutput:\n      type: object\n      required:\n        - EventStream\n      properties:\n        EventStream:\n          $ref: \"#/components/schemas/SubscribeToShardEventStream\"\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    Tag:\n      type: object\n      required:\n        - Key\n      properties:\n        Key:\n          $ref: \"#/components/schemas/TagKey\"\n        Value:\n          $ref: \"#/components/schemas/TagValue\"\n      description: Metadata assigned to the stream, consisting of a key-value pair.\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-kinesis-2013-12-02-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-kinesis-2013-12-02-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:31504: duplicate path: \"/#X-Amz-Target=Kinesis_20131202.CreateStream\""
}