{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openreferral/api-specification"
		},
		"file": {
			"name": "openapi-hsda-meta.yaml",
			"size": 0,
			"path": "v2.0/openapi-hsda-meta.yaml",
			"byteSize": 21307,
			"content": "openapi: 3.0.0\ninfo:\n  title: Human Services Data Meta API\n  description: |-\n    This is a specification describing the Human Services Data API, using the\n    Human Services Data Specification (HSDS). This has been extracted from the\n    Ohana API deployment, but will be standardized to refer to the universal\n    standard that will apply to any HSDS/A compliant API.\n  termsOfService: https://openreferral.org/documentation/\n  contact:\n    name: Open Referral\n    url: https://openreferral.org/\n    email: info@openreferral.org\n  license:\n    name: Creative Commons Attribution Share-Alike 4.0\n    url: https://creativecommons.org/licenses/by-sa/4.0/\n  version: v2.0\nservers:\n- url: \"{{ hsda_base_url }}\"\n  variables:\n    basePath:\n      default: \"/v2\"\npaths:\n  \"/metadata/\":\n    get:\n      summary: Get Metadata\n      description: Returns a list of all metadata.\n      operationId: listMetaata\n      parameters:\n      - in: query\n        name: query\n        description: |-\n          A query to filter list by (up to provider to determine what to\n          search)\n        schema:\n          type: string\n      - in: query\n        name: fields\n        description: A list of fields to be returned with the response, if not included,\n          all are returned.\n        schema:\n          type: string\n      - in: query\n        name: page\n        description: The particular page of results.\n        schema:\n          type: number\n      - in: query\n        name: per_page\n        description: Number of records to return per page, up to 100.\n        schema:\n          type: number\n      - in: query\n        name: sort_by\n        description: Which field to sort by.\n        schema:\n          type: string\n      - in: query\n        name: order\n        description: Which order to sort by (asc,desc).\n        schema:\n          type: string\n      - in: query\n        name: format\n        description: |-\n          The data format of the response (csv, json, xml).\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Metadata Response\n          headers:\n            X-pagination-page:\n                description: The current page being returned.\n                schema:\n                    type: integer\n            X-pagination-per-page:\n                description: The number of records returned per page.\n                schema:\n                    type: integer\n            X-pagination-total-pages:\n                description: The total number of available pages.\n                schema:\n                    type: integer\n            X-pagination-total-records:\n                description: The the total number of available records.\n                schema:\n                    type: integer\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadatas\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadatas\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadatas\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n      tags:\n      - Metadata\n    post:\n      summary: Add Metadata\n      description: Creates a new metadata entry.\n      operationId: addMetadata\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/metadata\"\n      security:\n      - appid: []\n      - appkey: []\n      responses:\n        '200':\n          description: Metadata Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n      tags:\n      - Metadatas\n  \"/metadata/{metadata_id}/\":\n    get:\n      summary: Get Metadata\n      description: Returns a single metadata entry\n      operationId: getMetadata\n      parameters:\n      - in: path\n        required: true\n        name: metadata_id\n        description: The metadata id.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Metadata Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n      tags:\n      - Metadatas\n    put:\n      summary: Update Metadata\n      description: Updates an existing metadata entry using its id.\n      operationId: updateMetadata\n      parameters:\n      - in: path\n        required: true\n        name: metadata_id\n        description: The metadata id.\n        schema:\n          type: string\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/metadata\"\n      security:\n      - appid: []\n      - appkey: []\n      responses:\n        '200':\n          description: Metadata Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n        '403':\n          description: No Access Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n      tags:\n      - Metadatas\n    delete:\n      summary: Delete metadata\n      description: Deletes a metadata by Id\n      operationId: deleteMetadataComplete\n      parameters:\n      - in: path\n        required: true\n        name: metadata_id\n        description: The metadata id.\n        schema:\n          type: string\n      tags:\n      - Metadatas\n      security:\n      - appid: []\n      - appkey: []\n      responses:\n        '200':\n          description: Metadata Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metadata\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n  \"/metatable/\":\n    get:\n      summary: Get Metatable\n      description: Returns a list of all metatable.\n      operationId: listMetaata\n      parameters:\n      - in: query\n        name: query\n        description: |-\n          A query to filter list by (up to provider to determine what to\n          search)\n        schema:\n          type: string\n      - in: query\n        name: fields\n        description: A list of fields to be returned with the response, if not included,\n          all are returned.\n        schema:\n          type: string\n      - in: query\n        name: page\n        description: The particular page of results.\n        schema:\n          type: number\n      - in: query\n        name: per_page\n        description: Number of records to return per page, up to 100.\n        schema:\n          type: number\n      - in: query\n        name: sort_by\n        description: Which field to sort by.\n        schema:\n          type: string\n      - in: query\n        name: order\n        description: Which order to sort by (asc,desc).\n        schema:\n          type: string\n      - in: query\n        name: format\n        description: |-\n          The data format of the response (csv, json, xml).\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Metatable Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatables\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatables\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatables\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n      tags:\n      - Metatable\n    post:\n      summary: Add Metatable\n      description: Creates a new metatable entry.\n      operationId: addMetatable\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/metatable\"\n      security:\n      - appid: []\n      - appkey: []\n      responses:\n        '200':\n          description: Metatable Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n      tags:\n      - Metatables\n  \"/metatable/{metatable_id}/\":\n    get:\n      summary: Get Metatable\n      description: Returns a single metatable entry\n      operationId: getMetatable\n      parameters:\n      - in: path\n        required: true\n        name: metatable_id\n        description: The metatable id.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Metatable Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n      tags:\n      - Metatables\n    put:\n      summary: Update Metatable\n      description: Updates an existing metatable entry using its id.\n      operationId: updateMetatable\n      parameters:\n      - in: path\n        required: true\n        name: metatable_id\n        description: The metatable id.\n        schema:\n          type: string\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/metatable\"\n      security:\n      - appid: []\n      - appkey: []\n      responses:\n        '200':\n          description: Metatable Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n        '403':\n          description: No Access Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n      tags:\n      - Metatables\n    delete:\n      summary: Delete metatable\n      description: Deletes a metatable by Id\n      operationId: deleteMetatableComplete\n      parameters:\n      - in: path\n        required: true\n        name: metatable_id\n        description: The metatable id.\n        schema:\n          type: string\n      tags:\n      - Metatables\n      security:\n      - appid: []\n      - appkey: []\n      responses:\n        '200':\n          description: Metatable Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/metatable\"\n        '500':\n          description: Error Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\n            text/csv:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"#/components/schemas/problems\"\ncomponents:\n  securitySchemes:\n    appid:\n      type: apiKey\n      in: header\n      name: x-appid\n    appkey:\n      type: apiKey\n      in: header\n      name: x-appkey\n  schemas:\n    metadata:\n      description: |-\n        The metadata table contains a record of the changes that have been\n        made to the data in order to maintain provenance information.\n      properties:\n        id:\n          type: string\n          description: Each entry must have a unique identifier\n        resource_id:\n          type: string\n          description: |-\n            Each service, program. location, address, or metadata will have\n            a unique identifier.\n        resource_type:\n          type: string\n          description: The type of entity being referenced\n        last_action_date:\n          type: string\n          format: datetime\n          description: The date when data was changed.\n        last_action_type:\n          type: string\n          description: The kind of change made to the data; eg create, update, delete\n        field_name:\n          type: string\n          description: The name of field that has been modified\n        previous_value:\n          type: string\n          description: The previous value of a field that has been updated\n        replacement_value:\n          type: string\n          description: The new value of a field that has been updated\n        updated_by:\n          type: string\n          description: The name of the person who updated a value\n      required:\n      - id\n      - resource_id\n      - resource_type\n      - last_action_date\n      - last_action_type\n      - field_name\n      - previous_value\n      - replacement_value\n      - updated_by\n    meta_table_description:\n      description: |-\n        The meta_table_description table contains metadata about individual\n        tables.\n      properties:\n        id:\n          type: string\n          description: Each entry must have a unique identifier\n        name:\n          type: string\n          description: ''\n        language:\n          type: string\n          description: ''\n        character_set:\n          type: string\n          description: ''\n      required:\n      - id\n",
			"canonicalURL": "/github.com/openreferral/api-specification@38d42f29aa1779db44257c0276ba07579f203641/-/blob/v2.0/openapi-hsda-meta.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/openreferral/api-specification/blob/38d42f29aa1779db44257c0276ba07579f203641/v2.0/openapi-hsda-meta.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/metadata/\": at 1:2445: get: operation \"listMetaata\": at 1:2452: responses: 200: at 1:3428: at 1:3439: content: application/json: at 1:3459: schema: at 1:3469: parse schema: item: at 1:3478: parse schema: resolve \"#/components/schemas/metadatas\": find schema: resolve: can't find value for \"components/schemas/metadatas\""
}