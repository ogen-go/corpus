{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tencent-connect/bot-oas"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "v1/openapi.yaml",
			"byteSize": 43923,
			"content": "openapi: 3.0.3\ninfo:\n  title: QQ 机器人 OpenAPI\n  description: |\n    QQ 频道机器人通过开放的平台承载机器人的定制化功能，让开发者获得更畅快的开发体验。\n  version: v1.0.0\n  contact:\n    name: 加入开发者频道\n    url: https://qun.qq.com/qqweb/qunpro/share?_wv=3\u0026_wwv=128\u0026inviteCode=1MVRbV\u0026from=246610\u0026biz=ka\nservers:\n  - url: https://sandbox.api.sgroup.qq.com\n    description: |\n      沙箱环境\n      沙箱环境调用 openapi 仅能操作沙箱频道\n  - url: https://api.sgroup.qq.com\n    description: 正式环境\nsecurity:\n  - bot_auth: []\npaths:\n  /guilds/{guild_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n    get:\n      summary: 获取频道详情\n      description: 用于获取 guild_id 指定的频道的详情\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/guild/get_guild.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Guild'\n      tags:\n        - GuildManagements\n  /users/@me:\n    get:\n      summary: 获取用户详情\n      description: 用于获取当前用户（机器人）详情\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/user/me.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/User'\n      tags:\n        - UserRelations\n  /users/@me/guilds:\n    parameters:\n      - name: before\n        in: query\n        required: false\n        schema:\n          type: string\n        description: 读此 guild id 之前的数据，before 设置时， 先反序，再分页\n      - name: after\n        in: query\n        required: false\n        schema:\n          type: string\n        description: 读取此 id 之后的数据\n      - name: limit\n        in: query\n        required: false\n        schema:\n          type: number\n          default: 100\n        description: 每次拉取多少条数据，最大不超过 100，默认 100\n    get:\n      summary: 获取用户频道列表\n      description: |\n        用于获取当前用户（机器人）所加入的频道列表，支持分页，参数 before、after 同时存在时，以 before 为准。\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/user/guilds.html'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/Guild'\n      tags:\n        - UserRelations\n  /guilds/{guild_id}/channels:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n    get:\n      summary: 获取子频道列表\n      description: 用于获取 guild_id 指定的频道下的子频道列表\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/channel/get_channels.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/Channel'\n      tags:\n        - GuildManagements\n    post:\n      summary: 创建子频道\n      description: |\n        用于在 guild_id 指定的频道下创建一个子频道。\n          * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n          * 创建成功后，返回创建成功的子频道对象，同时会触发一个频道创建的事件通知。\n          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`\n          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/channel/post_channels.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'components.yaml#/components/schemas/ChannelCreate'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/Channel'\n      tags:\n        - GuildManagements\n  /channels/{channel_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n    get:\n      summary: 获取子频道详情\n      description: 用于获取 channel_id 指定的子频道的详情\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/channel/get_channel.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Channel'\n      tags:\n        - GuildManagements\n    patch:\n      summary: 修改子频道\n      description: |\n        用于修改 channel_id 指定的子频道的信息。\n          * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n          * 修改成功后，会触发子频道更新事件。\n          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`\n          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/channel/patch_channel.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'components.yaml#/components/schemas/ChannelUpdate'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Channel'\n      tags:\n        - GuildManagements\n    delete:\n      summary: 删除子频道\n      description: |\n        用于删除 channel_id 指定的子频道。\n          * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n          * 修改成功后，会触发子频道删除事件。\n          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`\n          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel/delete_channel.html'\n      responses:\n        200:\n          description: 成功\n      tags:\n        - GuildManagements   \n  /guilds/{guild_id}/members:\n    get:\n      summary: 获取频道成员列表\n      description: |\n        用于获取 guild_id 指定的频道中所有成员的详情列表，支持分页。\n          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`\n          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/member/get_members.html\n      parameters:\n        - $ref: 'components.yaml#/components/parameters/PathGuildID'\n        - name: after\n          in: query\n          required: false\n          schema:\n            type: string\n          description: 上一次回包中最后一个member的user id， 如果是第一次请求填 0，默认为 0\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: number\n            default: 1\n          description: 分页大小，1-400，默认是 1。成员较多的频道尽量使用较大的limit值，以减少请求数\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/Member'\n      tags:\n        - UserRelations\n  /guilds/{guild_id}/members/{user_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n      - $ref: 'components.yaml#/components/parameters/PathUserID'\n    get:\n      summary: 获取成员详情\n      description: 用于获取 guild_id 指定的频道中 user_id 对应成员的详细信息\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/member/get_member.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Member'\n      tags:\n        - UserRelations\n    delete:\n      summary: 删除频道成员\n      description: |\n        用于删除 guild_id 指定的频道下的成员 user_id。\n          * 需要使用的 token 对应的用户具备踢人权限。如果是机器人，要求被添加为管理员。\n          * 操作成功后，会触发频道成员删除事件。\n          * 无法移除身份为管理员的成员\n          * `公域机器人暂不支持申请，仅私域机器人可用，选择私域机器人后默认开通。`\n          * `注意: 开通后需要先将机器人从频道移除，然后重新添加，方可生效。`\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/member/delete_member.html\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              properties:\n                add_blacklist:\n                  type: boolean\n                  description: 删除成员的同时，将该用户添加到频道黑名单中\n      responses:\n        204:\n          description: 成功\n      tags:\n        - UserRelations\n  /guilds/{guild_id}/roles:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n    get:\n      summary: 获取频道身份组列表\n      description: 用于获取 guild_id指定的频道下的身份组列表\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/guild/get_guild_roles.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  guild_id:\n                    type: string\n                    description: 频道 ID\n                  roles:\n                    type: array\n                    items:\n                      $ref: 'components.yaml#/components/schemas/Role'\n                    description: 频道身份组对象列表\n                  role_num_limit:\n                    type: string\n                    description: 默认分组上限\n      tags: [UserRelations]\n    post:\n      summary: 创建频道身份组\n      description: |\n        用于在guild_id 指定的频道下创建一个身份组。\n          * 需要使用的 token 对应的用户具备创建身份组权限。如果是机器人，要求被添加为管理员。\n          * 参数为非必填，但至少需要传其中之一，默认为空或 0。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/guild/post_guild_role.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  type: string\n                  description: 名称\n                color:\n                  type: number\n                  description: ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例:4294927682）\n                hoist:\n                  type: number\n                  description: 在成员列表中单独展示,0-否, 1-是\n              required:\n                - name\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  role_id:\n                    type: string\n                    description: 频道身份组 ID\n                  role:\n                    $ref: 'components.yaml#/components/schemas/GuildRole'\n      tags: [UserRelations]\n\n  /guilds/{guild_id}/roles/{role_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n      - $ref: 'components.yaml#/components/parameters/PathRoleID'\n    patch:\n      summary: 修改频道身份组\n      description: |\n        用于修改频道 guild_id 下 role_id 指定的身份组。\n          * 需要使用的 token 对应的用户具备修改身份组权限。如果是机器人，要求被添加为管理员。\n          * 接口会修改传入的字段，不传入的默认不会修改，至少要传入一个参数。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/guild/patch_guild_role.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  type: string\n                  description: 名称\n                color:\n                  type: number\n                  description: ARGB 的 HEX 十六进制颜色值转换后的十进制数值（例：4294927682）\n                hoist:\n                  type: number\n                  description: 在成员列表中单独展示,0-否, 1-是\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  guild_id:\n                    type: string\n                    description: 频道 ID\n                  role_id:\n                    type: string\n                    description: 频道身份组 ID\n                  role:\n                    $ref: 'components.yaml#/components/schemas/GuildRole'\n      tags: [UserRelations]\n    delete:\n      summary: 删除频道身份组\n      description: |\n        用于删除频道guild_id下 role_id 对应的身份组。\n        * 需要使用的 token 对应的用户具备`删除身份组权限`。如果是机器人，要求被添加为管理员。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/guild/delete_guild_role.html\n      responses:\n        204:\n          description: 成功\n      tags: [UserRelations]\n\n  /guilds/{guild_id}/members/{user_id}/roles/{role_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n      - $ref: 'components.yaml#/components/parameters/PathRoleID'\n      - $ref: 'components.yaml#/components/parameters/PathUserID'\n    put:\n      summary: 创建频道身份组成员\n      description: |\n        用于将频道guild_id下的用户 user_id 添加到身份组 role_id 。\n          * 需要使用的 token 对应的用户具备增加身份组成员权限。如果是机器人，要求被添加为管理员。\n          * 如果要增加的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/put_guild_member_role.html'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  type: string\n                  description: 子频道 id\n      responses:\n        204:\n          description: 成功\n      tags: [UserRelations]\n    delete:\n      summary: 删除频道身份组成员\n      description: |\n        用于将 用户 user_id 从 频道 guild_id 的 role_id 身份组中移除。\n          * 需要使用的 token 对应的用户具备删除身份组成员权限。如果是机器人，要求被添加为管理员。\n          * 如果要删除的身份组 ID 是5-子频道管理员，需要增加 channel 对象来指定具体是哪个子频道。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/guild/delete_guild_member_role.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  type: string\n                  description: 子频道 id\n      responses:\n        204:\n          description: 成功\n      tags: [UserRelations]\n\n  /channels/{channel_id}/members/{user_id}/permissions:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n      - $ref: 'components.yaml#/components/parameters/PathUserID'\n    get:\n      summary: 获取子频道用户权限\n      description: |\n        用于获取 子频道channel_id 下用户 user_id 的权限。\n          * 获取子频道用户权限。\n          * 要求操作人具有`管理子频道的权限`，如果是机器人，则需要将机器人设置为管理员。\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/get_channel_permissions.html'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/ChannelPermissions'\n      tags:\n        - Permissions\n    put:\n      summary: 修改子频道权限\n      description: |\n        用于修改子频道 channel_id 下用户 user_id 的权限。\n          * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n          * 参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予用户权限即把add对应位置 1，删除用户权限即把remove对应位置 1。当两个字段同一位都为 1，表现为删除权限。\n          * `本接口不支持修改可管理子频道权限。`\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/put_channel_permissions.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                add:\n                  type: string\n                  description: 字符串形式的位图表示赋予用户的权限\n                remove:\n                  type: string\n                  description: 字符串形式的位图表示删除用户的权限\n      responses:\n        204:\n          description: 成功\n      tags:\n        - Permissions\n  /channels/{channel_id}/roles/{role_id}/permissions:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n      - $ref: 'components.yaml#/components/parameters/PathRoleID'\n    get:\n      summary: 获取子频道身份组权限\n      description: |\n        用于获取子频道 channel_id 下身份组 role_id 的权限。\n        * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/get_channel_roles_permissions.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/ChannelPermissions'\n      tags:\n        - Permissions\n    put:\n      summary: 修改子频道身份组权限\n      description: |\n        用于修改子频道 channel_id 下身份组 role_id 的权限。\n          * 要求操作人具有管理子频道的权限，如果是机器人，则需要将机器人设置为管理员。\n          * 参数包括add和remove两个字段，分别表示授予的权限以及删除的权限。要授予身份组权限即把add对应位置 1，删除身份组权限即把remove对应位置 1。当两个字段同一位都为 1，表现为删除权限。\n          * `本接口不支持修改可管理子频道权限。`\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/channel_permissions/put_channel_roles_permissions.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                add:\n                  type: string\n                  description: 字符串形式的位图表示赋予用户的权限\n                remove:\n                  type: string\n                  description: 字符串形式的位图表示删除用户的权限\n      responses:\n        204:\n          description: 成功\n      tags:\n        - Permissions\n  /channels/{channel_id}/messages/{message_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n      - $ref: 'components.yaml#/components/parameters/PathMessageID'\n    get:\n      summary: 获取指定消息\n      description: 用于获取子频道 channel_id 下的消息 message_id 的详情。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/message/get_message_of_id.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Message'\n      tags:\n        - Messages\n  /channels/{channel_id}/messages:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n    post:\n      summary: 发送消息\n      description: |\n        用于向 channel_id 指定的子频道发送消息。\n        * 要求操作人在该子频道具有发送消息的权限。\n        * 主动推送消息，默认每天往每个频道可推送的消息数是 `20` 条，超过会被限制。\n        * 主动推送消息在每个频道中，每天可以往 `2` 个子频道推送消息。超过后会被限制。\n        * 不论主动消息还是被动消息，在一个子频道中，每 `1s` 只能发送 `5` 条消息。\n        * 被动回复消息有效期为 `5` 分钟。超时会报错。\n        * 发送消息接口要求机器人接口需要连接到 websocket 上保持在线状态\n        * 有关主动消息审核，可以通过 Intents 中审核事件 MESSAGE_AUDIT 返回 MessageAudited 对象获取结果。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/message/post_messages.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'components.yaml#/components/schemas/MessageSend'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Message'\n      tags:\n        - Messages\n  /users/@me/dms:\n    post:\n      summary: 创建私信会话\n      description: |\n        用于机器人和在同一个频道内的成员创建私信会话。\n          * 机器人和用户存在共同频道才能创建私信会话。\n          * 创建成功后，返回创建成功的频道 id ，子频道 id 和创建时间。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/dms/post_dms.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                recipient_id:\n                  type: string\n                  description: 接收者 id\n                source_guild_id:\n                  type: string\n                  description: 源频道 id\n              required:\n                - recipient_id\n                - source_guild_id\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/DMS'\n      tags:\n        - Messages\n  /dms/{guild_id}/messages:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n    post:\n      summary: 发送私信\n      description: |\n        用于发送私信消息，前提是已经创建了私信会话。\n        * 私信的 guild_id 在创建私信会话时以及私信消息事件中获取。\n        * 私信场景下，每个机器人每天可以对一个用户发 `2` 条主动消息。\n        * 私信场景下，每个机器人每天累计可以发 `200` 条主动消息。\n        * 私信场景下，被动消息没有条数限制。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/dms/post_dms_messages.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'components.yaml#/components/schemas/MessageSend'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/Message'\n      tags:\n        - Messages\n  /guilds/{guild_id}/mute:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n    patch:\n      summary: 禁言全员\n      description: |\n        用于将频道的全体成员（非管理员）禁言。\n          * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。\n          * 该接口同样可用于解除禁言，具体使用见解除全员禁言。\n          * `该接口同样支持解除全员禁言，将mute_end_timestamp或mute_seconds传值为字符串'0'即可`。\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/guild/patch_guild_mute.html'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                mute_end_timestamp:\n                  type: string\n                  description: 禁言到期时间戳，绝对时间戳，单位:秒（与 mute_seconds 字段同时赋值的话，以该字段为准）\n                mute_seconds:\n                  type: string\n                  description: 禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）\n              minProperties: 1\n      responses:\n        204:\n          description: 成功\n      tags:\n        - Permissions\n  /guilds/{guild_id}/members/{user_id}/mute:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n      - $ref: 'components.yaml#/components/parameters/PathUserID'\n    patch:\n      summary: 禁言指定成员\n      description: |\n        用于禁言频道 guild_id 下的成员 user_id。\n        * 需要使用的 token 对应的用户具备管理员权限。如果是机器人，要求被添加为管理员。\n        * `该接口同样可用于解除禁言，具体使用见解除指定成员禁言`。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/guild/patch_guild_member_mute.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                mute_end_timestamp:\n                  type: string\n                  description: 禁言到期时间戳，绝对时间戳，单位:秒（与 mute_seconds 字段同时赋值的话，以该字段为准）\n                mute_seconds:\n                  type: string\n                  description: 禁言多少秒（两个字段二选一，默认以 mute_end_timestamp 为准）\n              minProperties: 1\n      responses:\n        204:\n          description: 成功\n      tags:\n        - Permissions\n  /guilds/{guild_id}/announces:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n    post:\n      summary: 创建频道公告\n      description: |\n        用于将频道内的某条消息设置为频道全局公告\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/announces/post_guild_announces.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                message_id:\n                  type: string\n                  description: 消息 id\n                channel_id:\n                  type: string\n                  description: 子频道 id\n              required:\n                - message_id\n                - channel_id\n      responses:\n        204:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Announces'\n      tags: [GuildManagements]\n  /guilds/{guild_id}/announces/{message_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n      - $ref: 'components.yaml#/components/parameters/PathMessageID'\n    delete:\n      summary: 删除频道公告\n      description: |\n        用于删除频道 guild_id 下 message_id 指定的全局公告。\n          * message_id 有值时，会校验 message_id 合法性，若不校验校验 message_id，请将 message_id 设置为 all。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/announces/delete_guild_announces.html\n      responses:\n        204:\n          description: 成功\n      tags: [GuildManagements]\n  /channels/{channel_id}/announces:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n    post:\n      summary: 创建子频道公告\n      description: 用于将子频道 channel_id 内的某条消息设置为子频道公告。\n      deprecated: true\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/announces/post_channel_announces.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                message_id:\n                  type: string\n                  description: 消息 id\n              required:\n                - message_id\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Announces'\n      tags: [GuildManagements]\n\n  /channels/{channel_id}/announces/{message_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n      - $ref: 'components.yaml#/components/parameters/PathMessageID'\n    delete:\n      summary: 删除子频道公告\n      description: |\n        用于删除子频道 channel_id 下 message_id 指定的子频道公告。\n        * message_id 有值时，会校验 message_id 合法性，若不校验校验 message_id，请将 message_id 设置为 all。\n      deprecated: true\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/announces/delete_channel_announces.html'\n      responses:\n        204:\n          description: 成功\n      tags: [GuildManagements]\n\n  /channels/{channel_id}/schedules:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n    get:\n      summary: 获取频道日程列表\n      description: |\n        用于获取channel_id指定的子频道中当天的日程列表。\n        * 若带了参数 since，则返回结束时间在 since 之后的日程列表；若未带参数 since，则默认返回当天的日程列表。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/schedule/get_schedules.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                since:\n                  type: integer\n                  description: 起始时间戳(ms) \n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/Schedule'\n      tags:\n        - Applications\n    post:\n      summary: 创建日程\n      description: |\n        用于在 channel_id 指定的日程子频道下创建一个日程。\n          * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n          * 创建成功后，返回创建成功的日程对象。\n          * 创建操作频次限制: 单个管理员每天限`10`次, 单个频道每天`100`次。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/schedule/post_schedule.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'components.yaml#/components/schemas/ScheduleCreate' \n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Schedule'\n      tags:\n        - Applications\n  /channels/{channel_id}/schedules/{schedule_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n      - $ref: 'components.yaml#/components/parameters/PathScheduleID'\n    get:\n      summary: 获取日程详情\n      description: 获取日程子频道 channel_id 下 schedule_id 指定的的日程的详情。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/schedule/get_schedule.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Schedule'\n      tags:\n        - Applications\n    patch:\n      summary: 修改日程\n      description: |\n        用于修改日程子频道 channel_id 下 schedule_id 指定的日程的详情。\n        * 要求操作人具有管理频道的权限，如果是机器人，则需要将机器人设置为管理员。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/schedule/patch_schedule.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'components.yaml#/components/schemas/ScheduleUpdate'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/Schedule'\n      tags:\n        - Applications\n    delete:\n      summary: 删除日程\n      description: |\n        用于删除日程子频道 channel_id 下 schedule_id 指定的日程。\n        * 要求操作人具有`管理频道的权限`，如果是机器人，则需要将机器人设置为管理员。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/schedule/delete_schedule.html\n      responses:\n        204:\n          description: 成功\n      tags:\n        - Applications\n  /channels/{channel_id}/audio:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n    post:\n      summary: 音频控制\n      description: |\n        用于控制子频道 channel_id 下的音频。\n        * 音频接口:仅限音频类机器人才能使用，后续会根据机器人类型自动开通接口权限，现如需调用，需联系平台申请权限。\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/audio/audio_control.html'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'components.yaml#/components/schemas/AudioControl'\n      responses:\n        200:\n          description: 成功\n      tags:\n        - Audio\n  /guilds/{guild_id}/api_permission:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n    get:\n      summary: 获取频道可用权限列表\n      description: |\n        用于获取机器人在频道 guild_id 内可以使用的权限列表。\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/api_permissions/get_guild_api_permission.html'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/APIPermission'\n      tags:\n        - BotAPI\n  /guilds/{guild_id}/api_permission/demand:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathGuildID'\n    post:\n      summary: 创建频道 API 接口权限授权链接\n      description: |\n        用于创建 API 接口权限授权链接，该链接指向guild_id对应的频道 。\n        * 每天只能在一个频道内发 `3` 条（默认值）频道权限授权链接。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/api_permissions/post_api_permission_demand.html\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                channel_id:\n                  type: string\n                  description: 授权链接发送的子频道 id\n                api_identify:\n                  $ref: 'components.yaml#/components/schemas/APIPermissionDemandIdentify'\n                desc:\n                  type: string\n                  description: 机器人申请对应的 API 接口权限后可以使用功能的描述\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'components.yaml#/components/schemas/APIPermissionDemand'\n      tags:\n        - BotAPI\n  /gateway:\n    get:\n      summary: 获取通用 WSS 接入点\n      description: 用于获取 WSS 接入地址，通过该地址可建立 websocket 长连接。\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/wss/url_get.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    type: string\n                    description: websocket 的地址\n      tags:\n        - BotAPI\n  /gateway/bot:\n    get:\n      summary: 获取带分片 WSS 接入点\n      description: |\n        用于获取 WSS 接入地址及相关信息，通过该地址可建立 websocket 长连接。相关信息包括：\n          * 建议的分片数。\n          * 目前连接数使用情况。\n      externalDocs:\n        url: 'https://bot.q.qq.com/wiki/develop/api/openapi/wss/shard_url_get.html'\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    type: string\n                    description: websocket 的地址\n                  shards:\n                    type: integer\n                    description: 建议的 shard 数\n                  session_start_limit:\n                    $ref: 'components.yaml#/components/schemas/SessionStartLimit'\n      tags:\n        - BotAPI\n  /channels/{channel_id}/messages/{message_id}/reactions/{type}/{id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n      - $ref: 'components.yaml#/components/parameters/PathMessageID'\n      - name: type\n        in: path\n        required: true\n        schema:\n          $ref: 'components.yaml#/components/schemas/EmojiType'\n        description: 表情类型\n      - name: id\n        in: path\n        required: true\n        schema:\n          $ref: 'components.yaml#/components/schemas/EmojiID'\n        description: 表情ID\n    put:\n      tags:\n        - Messages\n      summary: 对消息 `message_id` 进行表情表态\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/reaction/put_message_reaction.html\n      responses:\n        204:\n          description: 成功\n    delete:\n      tags:\n        - Messages\n      summary: 删除自己对消息 `message_id` 的表情表态\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/reaction/delete_own_message_reaction.html\n      responses:\n        204:\n          description: 成功\n  /channels/{channel_id}/pins/{message_id}:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n      - $ref: 'components.yaml#/components/parameters/PathMessageID'\n    put:\n      tags:\n        - Messages\n      summary: 将消息 `message_id` 添加到精华消息中\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/pins/put_pins_message.html\n      responses:\n        200:\n          description: 成功\n          content:\n            applicztion/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/PinsMessage'\n    delete:\n      tags:\n        - Messages\n      summary: 将消息 `message_id` 从精华消息中删除\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/pins/delete_pins_message.html\n      responses:\n        204:\n          description: 成功\n  /channels/{channel_id}/pins:\n    parameters:\n      - $ref: 'components.yaml#/components/parameters/PathChannelID'\n    get:\n      tags: [Messages]\n      summary: 获取精华消息列表\n      externalDocs:\n        url: https://bot.q.qq.com/wiki/develop/api/openapi/pins/get_pins_message.html\n      responses:\n        200:\n          description: 成功\n          content:\n            application/json:\n              schema:\n                $ref: 'components.yaml#/components/schemas/PinsMessage'\n\n\n#================\n# 接口分类说明，不与 wiki 的分类对齐，而是按照实际的功能大类进行归类\ntags:\n  - name: Messages\n    description: 频道消息、私信等相关接口\n  - name: UserRelations\n    description: 用户关系链相关接口API，包括用户信息，成员信息，用户的频道列表等\n  - name: GuildManagements\n    description: 频道、子频道信息管理类的接口\n  - name: Permissions\n    description: 频道管理相关接口，如身份组管理，权限管理等\n  - name: Applications\n    description: 垂直应用类接口，如日程功能\n  - name: Audio\n    description: 音频相关API集合\n  - name: Forums\n    description: 论坛类接口，操作论坛帖子，回复等\n  - name: BotAPI\n    description: 机器人提供的基础接口\n\n\n# 文档地址\nexternalDocs:\n  description: 'Reference: QQ 机器人文档'\n  url: https://bot.q.qq.com/wiki\n\n# 对象定义，parameters 和 schemes 在独立文件中定义\ncomponents:\n  securitySchemes:\n    bot_auth:\n      description: 机器人 API 鉴权，格式为 `Bot {appID}.{appToken}`\n      type: apiKey\n      name: Authorization\n      in: header\n  responses:\n    401:\n      description: |\n        请求异常，请检查参数传递是否正确\n    403:\n      description: |\n        权限检查失败，请检查如下几点：\n          - 头部的 token 是否正确\n          - 频道主是否授予了机器人对应的权限\n          - 频道ID等ID是否正确\n    500:\n      description: |\n        内部逻辑处理失败，大部分情况下可以重试，如果重试仍然失败，请检查参数是否正确\n    502:\n      description: |\n        内部处理超时，请稍后重试\n",
			"canonicalURL": "/github.com/tencent-connect/bot-oas@d4ffa48e8db1620b249d1b02683dd800de460749/-/blob/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tencent-connect/bot-oas/blob/d4ffa48e8db1620b249d1b02683dd800de460749/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/channels/{channel_id}\": parameters: parse parameter \"\": at 1:1563: external \"components.yaml\": get: file: local file reference is not allowed"
}