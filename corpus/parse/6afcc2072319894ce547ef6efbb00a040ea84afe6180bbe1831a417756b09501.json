{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/trello/openapi.yaml",
			"byteSize": 380278,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://trello.com/1\nx-hasEquivalentPaths: true\ninfo:\n  x-ballerina-display:\n    label: Trello\n    iconPath: \"icon.png\"\n  contact:\n    name: Trello\n    url: https://trello.com/home\n  description: \u003e-\n    This is a generated connector for [Trello API v1](https://trello.com) OpenAPI specification.\n\n    Client endpoint of Trello API provides capability to perform CRUD (Create, Read, Update, and Delete) operations on resources in a Trello account.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n    \n    Create a [Trello account](https://trello.com) and obtain tokens following [this guide](https://developer.atlassian.com/cloud/trello/guides/rest-api/api-introduction/#authentication-and-authorization).\n  license:\n    name: \"Trello : Terms of Service\"\n    url: https://trello.com/legal\n  termsOfService: https://trello.com/legal\n  title: Trello\n  version: \"1.0\"\n  x-apisguru-categories:\n    - collaboration\n  x-logo:\n    url: https://d2k1ftgv7pobq7.cloudfront.net/meta/p/res/images/c13d1cd96a2cff30f0460a5e1860c5ea/header-logo-blue.svg\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/APIs-guru/unofficial_openapi_specs/master/trello.com/1.0/swagger.yaml\n      version: \"3.0\"\n  x-providerName: trello.com\n  x-unofficialSpec: true\nexternalDocs:\n  url: https://developers.trello.com\ntags:\n  - description: https://trello.com/docs/api/action/index.html\n    name: action\n  - description: https://trello.com/docs/api/batch/index.html\n    name: batch\n  - description: https://trello.com/docs/api/board/index.html\n    name: board\n  - description: https://trello.com/docs/api/card/index.html\n    name: card\n  - description: https://trello.com/docs/api/checklist/index.html\n    name: checklist\n  - description: https://trello.com/docs/api/label/index.html\n    name: label\n  - description: https://trello.com/docs/api/list/index.html\n    name: list\n  - description: https://trello.com/docs/api/member/index.html\n    name: member\n  - description: https://trello.com/docs/api/notification/index.html\n    name: notification\n  - description: https://trello.com/docs/api/organization/index.html\n    name: organization\n  - description: https://trello.com/docs/api/search/index.html\n    name: search\n  - description: https://trello.com/docs/api/session/index.html\n    name: session\n  - description: https://trello.com/docs/api/token/index.html\n    name: token\n  - description: https://trello.com/docs/api/type/index.html\n    name: type\n  - description: https://trello.com/docs/api/webhook/index.html\n    name: webhook\npaths:\n  /batch:\n    get:\n      operationId: getBatch\n      parameters:\n        - description: List of API v1 GET routes, not including the version prefix\n          in: query\n          name: urls\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get batch\n      tags:\n        - batch\n  /boards:\n    post:\n      operationId: addBoards\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards\"\n        description: Attributes of \"Boards\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add new board\n      tags:\n        - board\n  \"/boards/{idBoard}\":\n    get:\n      operationId: getBoardsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: actions_format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: actions_since\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: action_member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: action_member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: action_memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: action_memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: card_attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: card_attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: card_checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: card_stickers\n          required: false\n          schema:\n            type: string\n        - description: \"One of: mine or none\"\n          in: query\n          name: boardStars\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: labels\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: color, idBoard, name or uses\"\n          in: query\n          name: label_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: labels_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: lists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: list_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: active, admin, deactivated, me\n            or normal\"\n          in: query\n          name: memberships\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberships_member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberships_member_fields\n          required: false\n          schema:\n            default: fullName and username\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: members\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, initials, fullName, username and confirmed\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: membersInvited\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: membersInvited_fields\n          required: false\n          schema:\n            default: avatarHash, initials, fullName and username\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: checklist_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: organization\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            default: name and displayName\n            type: string\n        - description: \"All or a comma-separated list of: active, admin, deactivated, me\n            or normal\"\n          in: query\n          name: organization_memberships\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: myPrefs\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: name, desc, descData, closed, idOrganization, pinned, url, shortUrl,\n              prefs and labelNames\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get board by ID\n      tags:\n        - board\n    put:\n      operationId: updateBoardsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards\"\n        description: Attributes of \"Boards\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards by ID\n      tags:\n        - board\n  \"/boards/{idBoard}/actions\":\n    get:\n      operationId: getBoardsActionsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            default: \"0\"\n            type: string\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards actions by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/boardStars\":\n    get:\n      operationId: getBoardsBoardStarsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: mine or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: mine\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards board stars by ID\n      tags:\n        - board\n  \"/boards/{idBoard}/calendarKey/generate\":\n    post:\n      operationId: addBoardsCalendarKeyGenerateByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add boards calendar key generate by ID\n      tags:\n        - board\n  \"/boards/{idBoard}/cards\":\n    get:\n      operationId: getBoardsCardsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: visible\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards cards by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/cards/{filter}\":\n    get:\n      operationId: getBoardsCardsByIdBoardByFilter\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get boards cards by ID board by filter\n      tags:\n        - board\n  \"/boards/{idBoard}/cards/{idCard}\":\n    get:\n      operationId: getBoardsCardsByIdBoardByIdCard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: IdCard\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: action_memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, initials, fullName and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: idCheckItem or state\"\n          in: query\n          name: checkItemState_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: labels\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: checklist_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards cards by ID board by ID card\n      tags:\n        - board\n  \"/boards/{idBoard}/checklists\":\n    get:\n      operationId: getBoardsChecklistsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checkItems\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: checkItem_fields\n          required: false\n          schema:\n            default: name, nameData, pos and state\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards checklists by ID board\n      tags:\n        - board\n    post:\n      operationId: addBoardsChecklistsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_checklists\"\n        description: Attributes of \"Boards Checklists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add boards checklists by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/closed\":\n    put:\n      operationId: updateBoardsClosedByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_closed\"\n        description: Attributes of \"Boards Closed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards closed by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/deltas\":\n    get:\n      operationId: getBoardsDeltasByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: A valid tag for subscribing\n          in: query\n          name: tags\n          required: true\n          schema:\n            type: string\n        - description: A number from -1 to Infinity\n          in: query\n          name: ixLastUpdate\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards deltas by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/desc\":\n    put:\n      operationId: updateBoardsDescByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_desc\"\n        description: Attributes of \"Boards Desc\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards desc by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/emailKey/generate\":\n    post:\n      operationId: addBoardsEmailKeyGenerateByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add boards email key generate by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/idOrganization\":\n    put:\n      operationId: updateBoardsIdOrganizationByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_idOrganization\"\n        description: Attributes of \"Boards ID Organization\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards ID organization by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/blue\":\n    put:\n      operationId: updateBoardsLabelNamesBlueByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_blue\"\n        description: Attributes of \"Label Names Blue\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards label names blue by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/green\":\n    put:\n      operationId: updateBoardsLabelNamesGreenByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_green\"\n        description: Attributes of \"Label Names Green\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards label names green by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/orange\":\n    put:\n      operationId: updateBoardsLabelNamesOrangeByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_orange\"\n        description: Attributes of \"Label Names Orange\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards label names orange by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/purple\":\n    put:\n      operationId: updateBoardsLabelNamesPurpleByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_purple\"\n        description: Attributes of \"Label Names Purple\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards label names purple by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/red\":\n    put:\n      operationId: updateBoardsLabelNamesRedByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_red\"\n        description: Attributes of \"Label Names Red\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards label names red by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/yellow\":\n    put:\n      operationId: updateBoardsLabelNamesYellowByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_yellow\"\n        description: Attributes of \"Label Names Yellow\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards label names yellow by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/labels\":\n    get:\n      operationId: getBoardsLabelsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: color, idBoard, name or uses\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards labels by ID board\n      tags:\n        - board\n    post:\n      operationId: addBoardsLabelsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_labels\"\n        description: Attributes of \"Boards Labels\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add boards labels by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/labels/{idLabel}\":\n    get:\n      operationId: getBoardsLabelsByIdBoardByIdLabel\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: color, idBoard, name or uses\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards labels by ID board by ID label\n      tags:\n        - board\n  \"/boards/{idBoard}/lists\":\n    get:\n      operationId: getBoardsListsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: open\n            type: string\n        - description: \"All or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards lists by ID board\n      tags:\n        - board\n    post:\n      operationId: addBoardsListsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_lists\"\n        description: Attributes of \"Boards Lists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add boards lists by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/lists/{filter}\":\n    get:\n      operationId: getBoardsListsByIdBoardByFilter\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get boards lists by ID board by filter\n      tags:\n        - board\n  \"/boards/{idBoard}/markAsViewed\":\n    post:\n      operationId: addBoardsMarkAsViewedByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add boards mark as viewed by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/members\":\n    get:\n      operationId: getBoardsMembersByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: fullName and username\n            type: string\n        - description: True or false ; works for premium organizations only.\n          in: query\n          name: activity\n          required: false\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards members by ID board\n      tags:\n        - board\n    put:\n      operationId: updateBoardsMembersByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/boards_members\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards members by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/members/{filter}\":\n    get:\n      operationId: getBoardsMembersByIdBoardByFilter\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get boards members by ID board by filter\n      tags:\n        - board\n  \"/boards/{idBoard}/members/{idMember}\":\n    delete:\n      operationId: deleteBoardsMembersByIdBoardByIdMember\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete boards members by ID board by ID member\n      tags:\n        - board\n    put:\n      operationId: updateBoardsMembersByIdBoardByIdMember\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/boards_members\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards members by ID board by ID member\n      tags:\n        - board\n  \"/boards/{idBoard}/members/{idMember}/cards\":\n    get:\n      operationId: getBoardsMembersCardsByIdBoardByIdMember\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            default: name, desc, closed, idOrganization, pinned, url and prefs\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: list\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: list_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: visible\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards members cards by ID board by ID member\n      tags:\n        - board\n  \"/boards/{idBoard}/membersInvited\":\n    get:\n      operationId: getBoardsMembersInvitedByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards members invited by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/membersInvited/{field}\":\n    get:\n      operationId: getBoardsMembersInvitedByIdBoardByField\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards members invited by ID board by field\n      tags:\n        - board\n  \"/boards/{idBoard}/memberships\":\n    get:\n      operationId: getBoardsMembershipsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: active, admin, deactivated, me\n            or normal\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: fullName and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards memberships by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/memberships/{idMembership}\":\n    get:\n      operationId: getBoardsMembershipsByIdBoardByIdMembership\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: IdMembership\n          in: path\n          name: idMembership\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: fullName and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards memberships by ID board by ID membership\n      tags:\n        - board\n    put:\n      operationId: updateBoardsMembershipsByIdBoardByIdMembership\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: IdMembership\n          in: path\n          name: idMembership\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_memberships\"\n        description: Attributes of \"Boards Memberships\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards memberships by ID board by ID membership\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs\":\n    get:\n      operationId: getBoardsMyPrefsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards my prefs by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/emailPosition\":\n    put:\n      operationId: updateBoardsMyPrefsEmailPositionByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_emailPosition\"\n        description: Attributes of \"My Prefs Email Position\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards my prefs email position by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/idEmailList\":\n    put:\n      operationId: updateBoardsMyPrefsIdEmailListByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_idEmailList\"\n        description: Attributes of \"My Prefs ID Email List\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards my prefs ID email list by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showListGuide\":\n    put:\n      operationId: updateBoardsMyPrefsShowListGuideByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showListGuide\"\n        description: Attributes of \"My Prefs Show List Guide\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards my prefs show list guide by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showSidebar\":\n    put:\n      operationId: updateBoardsMyPrefsShowSidebarByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showSidebar\"\n        description: Attributes of \"My Prefs Show Sidebar\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards my prefs show sidebar by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showSidebarActivity\":\n    put:\n      operationId: updateBoardsMyPrefsShowSidebarActivityByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showSidebarActivity\"\n        description: Attributes of \"My Prefs Show Sidebar Activity\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards my prefs show sidebar activity by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showSidebarBoardActions\":\n    put:\n      operationId: updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showSidebarBoardActions\"\n        description: Attributes of \"My Prefs Show Sidebar Board Actions\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards my prefs show sidebar board actions by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showSidebarMembers\":\n    put:\n      operationId: updateBoardsMyPrefsShowSidebarMembersByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showSidebarMembers\"\n        description: Attributes of \"My Prefs Show Sidebar Members\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards my prefs show sidebar members by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/name\":\n    put:\n      operationId: updateBoardsNameByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_name\"\n        description: Attributes of \"Boards Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards name by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/organization\":\n    get:\n      operationId: getBoardsOrganizationByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards organization by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/organization/{field}\":\n    get:\n      operationId: getBoardsOrganizationByIdBoardByField\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get boards organization by ID board by field\n      tags:\n        - board\n  \"/boards/{idBoard}/powerUps\":\n    post:\n      operationId: addBoardsPowerUpsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_powerUps\"\n        description: Attributes of \"Boards Power Ups\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add boards power ups by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/powerUps/{powerUp}\":\n    delete:\n      operationId: deleteBoardsPowerUpsByIdBoardByPowerUp\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: PowerUp\n          in: path\n          name: powerUp\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete boards power ups by ID board by power up\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/background\":\n    put:\n      operationId: updateBoardsPrefsBackgroundByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_background\"\n        description: Attributes of \"Prefs Background\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs background by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/calendarFeedEnabled\":\n    put:\n      operationId: updateBoardsPrefsCalendarFeedEnabledByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_calendarFeedEnabled\"\n        description: Attributes of \"Prefs Calendar Feed Enabled\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs calendar feed enabled by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/cardAging\":\n    put:\n      operationId: updateBoardsPrefsCardAgingByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_cardAging\"\n        description: Attributes of \"Prefs Card Aging\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs card aging by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/cardCovers\":\n    put:\n      operationId: updateBoardsPrefsCardCoversByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_cardCovers\"\n        description: Attributes of \"Prefs Card Covers\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs card covers by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/comments\":\n    put:\n      operationId: updateBoardsPrefsCommentsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_comments\"\n        description: Attributes of \"Prefs Comments\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs comments by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/invitations\":\n    put:\n      operationId: updateBoardsPrefsInvitationsByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_invitations\"\n        description: Attributes of \"Prefs Invitations\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs invitations by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/permissionLevel\":\n    put:\n      operationId: updateBoardsPrefsPermissionLevelByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_permissionLevel\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs permission level by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/selfJoin\":\n    put:\n      operationId: updateBoardsPrefsSelfJoinByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_selfJoin\"\n        description: Attributes of \"Prefs Self Join\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs self join by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/voting\":\n    put:\n      operationId: updateBoardsPrefsVotingByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_voting\"\n        description: Attributes of \"Prefs Voting\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards prefs voting by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/subscribed\":\n    put:\n      operationId: updateBoardsSubscribedByIdBoard\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_subscribed\"\n        description: Attributes of \"Boards Subscribed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update boards subscribed by ID board\n      tags:\n        - board\n  \"/boards/{idBoard}/{field}\":\n    get:\n      operationId: getBoardsByIdBoardByField\n      parameters:\n        - description: Board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get boards by ID board by field\n      tags:\n        - board\n  /cards:\n    post:\n      operationId: addCards\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards\"\n        description: Attributes of \"Cards\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards\n      tags:\n        - card\n  \"/cards/{idCard}\":\n    delete:\n      operationId: deleteCardsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards by ID card\n      tags:\n        - card\n    get:\n      operationId: getCardsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: action_memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: membersVoted\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberVoted_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: idCheckItem or state\"\n          in: query\n          name: checkItemState_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: checklist_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            default: name, desc, descData, closed, idOrganization, pinned, url and prefs\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: list\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: list_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: image, imageScaled, imageUrl,\n            left, rotate, top or zIndex\"\n          in: query\n          name: sticker_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,\n              email, idBoard, idChecklists, idLabels, idList, idMembers,\n              idShort, idAttachmentCover, manualCoverAttachment, labels, name,\n              pos, shortUrl and url\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards by ID card\n      tags:\n        - card\n    put:\n      operationId: updateCardsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards\"\n        description: Attributes of \"Cards\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/actions\":\n    get:\n      operationId: getCardsActionsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: commentCard and updateCard:idList\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            default: \"0\"\n            type: string\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards actions by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/actions/comments\":\n    post:\n      operationId: addCardsActionsCommentsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/actions_comments\"\n        description: Attributes of \"Actions Comments\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards actions comments by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/actions/{idAction}/comments\":\n    delete:\n      description: This can only be done by the original author of the comment, or\n        someone with higher permissions than the original author.\n      operationId: deleteCardsActionsCommentsByIdCardByIdAction\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards actions comments by ID card by ID action\n      tags:\n        - card\n    put:\n      description: This can only be done by the original author of the comment.\n      operationId: updateCardsActionsCommentsByIdCardByIdAction\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_actions_comments\"\n        description: Attributes of \"Cards Actions Comments\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards actions comments by ID card by ID action\n      tags:\n        - card\n  \"/cards/{idCard}/attachments\":\n    get:\n      operationId: getCardsAttachmentsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards attachments by ID card\n      tags:\n        - card\n    post:\n      operationId: addCardsAttachmentsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_attachments\"\n        description: Attributes of \"Cards Attachments\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards attachments by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/attachments/{idAttachment}\":\n    delete:\n      operationId: deleteCardsAttachmentsByIdCardByIdAttachment\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdAttachment\n          in: path\n          name: idAttachment\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards attachments by ID card by ID attachment\n      tags:\n        - card\n    get:\n      operationId: getCardsAttachmentsByIdCardByIdAttachment\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdAttachment\n          in: path\n          name: idAttachment\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards attachments by ID card by ID attachment\n      tags:\n        - card\n  \"/cards/{idCard}/board\":\n    get:\n      operationId: getCardsBoardByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards board by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/board/{field}\":\n    get:\n      operationId: getCardsBoardByIdCardByField\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards board by ID card by field\n      tags:\n        - card\n  \"/cards/{idCard}/checkItemStates\":\n    get:\n      operationId: getCardsCheckItemStatesByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: idCheckItem or state\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards check item states by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}\":\n    put:\n      operationId: updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdChecklistCurrent\n          in: path\n          name: idChecklistCurrent\n          required: true\n          schema:\n            type: string\n        - description: IdCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_idChecklistCurrent_checkItem\"\n        description: Attributes of \"Cards Checklist ID Checklist Current Check Item\" to\n          be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards checklist check item by ID card by ID checklist current by ID check item\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem\":\n    post:\n      operationId: addCardsChecklistCheckItemByIdCardByIdChecklist\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_checkItem\"\n        description: Attributes of \"Cards Checklist Check Item\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards checklist check item by ID card by ID checklist\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}\":\n    delete:\n      operationId: deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: IdCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards checklist check item by ID card by ID checklist by ID check item\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard\":\n    post:\n      operationId: addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: IdCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards checklist check item convert to card by ID card by ID checklist by ID check item\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name\":\n    put:\n      operationId: updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: IdCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_checkItem_name\"\n        description: Attributes of \"Cards Checklist Check Item Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards checklist check item name by ID card by ID checklist by ID check item\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos\":\n    put:\n      operationId: updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: IdCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_checkItem_pos\"\n        description: Attributes of \"Cards Checklist Check Item Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards checklist check item pos by ID card by ID checklist by ID check item\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state\":\n    put:\n      operationId: updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: IdCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_checkItem_state\"\n        description: Attributes of \"Cards Checklist Check Item State\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards checklist check item state by ID card by ID checklist by ID check item\n      tags:\n        - card\n  \"/cards/{idCard}/checklists\":\n    get:\n      operationId: getCardsChecklistsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checkItems\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: checkItem_fields\n          required: false\n          schema:\n            default: name, nameData, pos and state\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards checklists by ID card\n      tags:\n        - card\n    post:\n      operationId: addCardsChecklistsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklists\"\n        description: Attributes of \"Cards Checklists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards checklists by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/checklists/{idChecklist}\":\n    delete:\n      operationId: deleteCardsChecklistsByIdCardByIdChecklist\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards checklists by ID card by ID checklist\n      tags:\n        - card\n  \"/cards/{idCard}/closed\":\n    put:\n      operationId: updateCardsClosedByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_closed\"\n        description: Attributes of \"Cards Closed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards closed by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/desc\":\n    put:\n      operationId: updateCardsDescByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_desc\"\n        description: Attributes of \"Cards Desc\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards desc by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/due\":\n    put:\n      operationId: updateCardsDueByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_due\"\n        description: Attributes of \"Cards Due\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards due by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/idAttachmentCover\":\n    put:\n      operationId: updateCardsIdAttachmentCoverByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idAttachmentCover\"\n        description: Attributes of \"Cards ID Attachment Cover\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards ID attachment cover by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/idBoard\":\n    put:\n      operationId: updateCardsIdBoardByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idBoard\"\n        description: Attributes of \"Cards ID Board\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards ID board by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/idLabels\":\n    post:\n      operationId: addCardsIdLabelsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idLabels\"\n        description: Attributes of \"Cards ID Labels\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards ID labels by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/idLabels/{idLabel}\":\n    delete:\n      operationId: deleteCardsIdLabelsByIdCardByIdLabel\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards ID labels by ID card by ID label\n      tags:\n        - card\n  \"/cards/{idCard}/idList\":\n    put:\n      operationId: updateCardsIdListByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idList\"\n        description: Attributes of \"Cards ID List\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards ID list by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/idMembers\":\n    post:\n      operationId: addCardsIdMembersByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idMembers\"\n        description: Attributes of \"Cards ID Members\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards ID members by ID card\n      tags:\n        - card\n    put:\n      operationId: updateCardsIdMembersByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idMembers\"\n        description: Attributes of \"Cards ID Members\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards ID members by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/idMembers/{idMember}\":\n    delete:\n      operationId: deleteCardsIdMembersByIdCardByIdMember\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards ID members by ID card by ID member\n      tags:\n        - card\n  \"/cards/{idCard}/labels\":\n    post:\n      operationId: addCardsLabelsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_labels\"\n        description: Attributes of \"Cards Labels\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards labels by ID card\n      tags:\n        - card\n    put:\n      operationId: updateCardsLabelsByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_labels\"\n        description: Attributes of \"Cards Labels\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards labels by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/labels/{color}\":\n    delete:\n      operationId: deleteCardsLabelsByIdCardByColor\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: Color\n          in: path\n          name: color\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards labels by ID card by color\n      tags:\n        - card\n  \"/cards/{idCard}/list\":\n    get:\n      operationId: getCardsListByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards list by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/list/{field}\":\n    get:\n      operationId: getCardsListByIdCardByField\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards list by ID card by field\n      tags:\n        - card\n  \"/cards/{idCard}/markAssociatedNotificationsRead\":\n    post:\n      operationId: addCardsMarkAssociatedNotificationsReadByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards mark associated notifications read by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/members\":\n    get:\n      operationId: getCardsMembersByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards members by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/membersVoted\":\n    get:\n      operationId: getCardsMembersVotedByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards members voted by ID card\n      tags:\n        - card\n    post:\n      operationId: addCardsMembersVotedByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_membersVoted\"\n        description: Attributes of \"Cards Members Voted\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards members voted by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/membersVoted/{idMember}\":\n    delete:\n      operationId: deleteCardsMembersVotedByIdCardByIdMember\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards members voted by ID card by ID member\n      tags:\n        - card\n  \"/cards/{idCard}/name\":\n    put:\n      operationId: updateCardsNameByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_name\"\n        description: Attributes of \"Cards Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards name by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/pos\":\n    put:\n      operationId: updateCardsPosByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_pos\"\n        description: Attributes of \"Cards Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards pos by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/stickers\":\n    get:\n      operationId: getCardsStickersByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: image, imageScaled, imageUrl,\n            left, rotate, top or zIndex\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards stickers by ID card\n      tags:\n        - card\n    post:\n      operationId: addCardsStickersByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_stickers\"\n        description: Attributes of \"Cards Stickers\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add cards stickers by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/stickers/{idSticker}\":\n    delete:\n      operationId: deleteCardsStickersByIdCardByIdSticker\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdSticker\n          in: path\n          name: idSticker\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete cards stickers by ID card by ID sticker\n      tags:\n        - card\n    get:\n      operationId: getCardsStickersByIdCardByIdSticker\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdSticker\n          in: path\n          name: idSticker\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: image, imageScaled, imageUrl,\n            left, rotate, top or zIndex\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get cards stickers by ID card by ID sticker\n      tags:\n        - card\n    put:\n      operationId: updateCardsStickersByIdCardByIdSticker\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: IdSticker\n          in: path\n          name: idSticker\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_stickers\"\n        description: Attributes of \"Cards Stickers\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards stickers by ID card by ID sticker\n      tags:\n        - card\n  \"/cards/{idCard}/subscribed\":\n    put:\n      operationId: updateCardsSubscribedByIdCard\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_subscribed\"\n        description: Attributes of \"Cards Subscribed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update cards subscribed by ID card\n      tags:\n        - card\n  \"/cards/{idCard}/{field}\":\n    get:\n      operationId: getCardsByIdCardByField\n      parameters:\n        - description: Card ID or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get cards by ID card by field\n      tags:\n        - card\n  /checklists:\n    post:\n      operationId: addChecklists\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists\"\n        description: Attributes of \"Checklists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add checklists\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}\":\n    delete:\n      operationId: deleteChecklistsByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete checklists by ID checklist\n      tags:\n        - checklist\n    get:\n      operationId: getChecklistsByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checkItems\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: checkItem_fields\n          required: false\n          schema:\n            default: name, nameData, pos and state\n            type: string\n        - description: \"All or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get checklists by ID checklist\n      tags:\n        - checklist\n    put:\n      operationId: updateChecklistsByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists\"\n        description: Attributes of \"Checklists\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update checklists by ID checklist\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/board\":\n    get:\n      operationId: getChecklistsBoardByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get checklists board by ID checklist\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/board/{field}\":\n    get:\n      operationId: getChecklistsBoardByIdChecklistByField\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get checklists board by ID checklist by field\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/cards\":\n    get:\n      operationId: getChecklistsCardsByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: open\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get checklists cards by ID checklist\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/cards/{filter}\":\n    get:\n      operationId: getChecklistsCardsByIdChecklistByFilter\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get checklists cards by ID checklist by filter\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/checkItems\":\n    get:\n      operationId: getChecklistsCheckItemsByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: name, nameData, pos and state\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get checklists check items by ID checklist\n      tags:\n        - checklist\n    post:\n      operationId: addChecklistsCheckItemsByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists_checkItems\"\n        description: Attributes of \"Checklists Check Items\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add checklists check items by ID checklist\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/checkItems/{idCheckItem}\":\n    delete:\n      operationId: deleteChecklistsCheckItemsByIdChecklistByIdCheckItem\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: IdCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete checklists check items by ID checklist by ID check item\n      tags:\n        - checklist\n    get:\n      operationId: getChecklistsCheckItemsByIdChecklistByIdCheckItem\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: IdCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: name, nameData, pos and state\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get checklists check items by ID checklist by ID check item\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/idCard\":\n    put:\n      operationId: updateChecklistsIdCardByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists_idCard\"\n        description: Attributes of \"Checklists ID Card\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update checklists ID card by ID checklist\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/name\":\n    put:\n      operationId: updateChecklistsNameByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists_name\"\n        description: Attributes of \"Checklists Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update checklists name by ID checklist\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/pos\":\n    put:\n      operationId: updateChecklistsPosByIdChecklist\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists_pos\"\n        description: Attributes of \"Checklists Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update checklists pos by ID checklist\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/{field}\":\n    get:\n      operationId: getChecklistsByIdChecklistByField\n      parameters:\n        - description: IdChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get checklists by ID checklist by field\n      tags:\n        - checklist\n  /labels:\n    post:\n      operationId: addLabels\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labels\"\n        description: Attributes of \"Labels\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add labels\n      tags:\n        - label\n  \"/labels/{idLabel}\":\n    delete:\n      operationId: deleteLabelsByIdLabel\n      parameters:\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete labels by ID label\n      tags:\n        - label\n    get:\n      operationId: getLabelsByIdLabel\n      parameters:\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: color, idBoard, name or uses\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get labels by ID label\n      tags:\n        - label\n    put:\n      operationId: updateLabelsByIdLabel\n      parameters:\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labels\"\n        description: Attributes of \"Labels\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update labels by ID label\n      tags:\n        - label\n  \"/labels/{idLabel}/board\":\n    get:\n      operationId: getLabelsBoardByIdLabel\n      parameters:\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get labels board by ID label\n      tags:\n        - label\n  \"/labels/{idLabel}/board/{field}\":\n    get:\n      operationId: getLabelsBoardByIdLabelByField\n      parameters:\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get labels board by ID label by field\n      tags:\n        - label\n  \"/labels/{idLabel}/color\":\n    put:\n      operationId: updateLabelsColorByIdLabel\n      parameters:\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labels_color\"\n        description: Attributes of \"Labels Color\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update labels color by ID label\n      tags:\n        - label\n  \"/labels/{idLabel}/name\":\n    put:\n      operationId: updateLabelsNameByIdLabel\n      parameters:\n        - description: IdLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labels_name\"\n        description: Attributes of \"Labels Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update labels name by ID label\n      tags:\n        - label\n  /lists:\n    post:\n      operationId: addLists\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists\"\n        description: Attributes of \"Lists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add lists\n      tags:\n        - list\n  \"/lists/{idList}\":\n    get:\n      operationId: getListsByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            default: name, desc, descData, closed, idOrganization, pinned, url and prefs\n            type: string\n        - description: \"All or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: name, closed, idBoard and pos\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get lists by ID list\n      tags:\n        - list\n    put:\n      operationId: updateListsByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists\"\n        description: Attributes of \"Lists\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update lists by ID list\n      tags:\n        - list\n  \"/lists/{idList}/actions\":\n    get:\n      operationId: getListsActionsByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            default: \"0\"\n            type: string\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get lists actions by ID list\n      tags:\n        - list\n  \"/lists/{idList}/archiveAllCards\":\n    post:\n      operationId: addListsArchiveAllCardsByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add lists archive all cards by ID list\n      tags:\n        - list\n  \"/lists/{idList}/board\":\n    get:\n      operationId: getListsBoardByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get lists board by ID list\n      tags:\n        - list\n  \"/lists/{idList}/board/{field}\":\n    get:\n      operationId: getListsBoardByIdListByField\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get lists board by ID list by field\n      tags:\n        - list\n  \"/lists/{idList}/cards\":\n    get:\n      operationId: getListsCardsByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: open\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get lists cards by ID list\n      tags:\n        - list\n    post:\n      operationId: addListsCardsByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_cards\"\n        description: Attributes of \"Lists Cards\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add lists cards by ID list\n      tags:\n        - list\n  \"/lists/{idList}/cards/{filter}\":\n    get:\n      operationId: getListsCardsByIdListByFilter\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get lists cards by ID list by filter\n      tags:\n        - list\n  \"/lists/{idList}/closed\":\n    put:\n      operationId: updateListsClosedByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_closed\"\n        description: Attributes of \"Lists Closed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update lists closed by ID list\n      tags:\n        - list\n  \"/lists/{idList}/idBoard\":\n    put:\n      operationId: updateListsIdBoardByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_idBoard\"\n        description: Attributes of \"Lists ID Board\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update lists ID board by ID list\n      tags:\n        - list\n  \"/lists/{idList}/moveAllCards\":\n    post:\n      operationId: addListsMoveAllCardsByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_moveAllCards\"\n        description: Attributes of \"Lists Move All Cards\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add lists move all cards by ID list\n      tags:\n        - list\n  \"/lists/{idList}/name\":\n    put:\n      operationId: updateListsNameByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_name\"\n        description: Attributes of \"Lists Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update lists name by ID list\n      tags:\n        - list\n  \"/lists/{idList}/pos\":\n    put:\n      operationId: updateListsPosByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_pos\"\n        description: Attributes of \"Lists Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update lists pos by ID list\n      tags:\n        - list\n  \"/lists/{idList}/subscribed\":\n    put:\n      operationId: updateListsSubscribedByIdList\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_subscribed\"\n        description: Attributes of \"Lists Subscribed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update lists subscribed by ID list\n      tags:\n        - list\n  \"/lists/{idList}/{field}\":\n    get:\n      operationId: getListsByIdListByField\n      parameters:\n        - description: IdList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get lists by ID list by field\n      tags:\n        - list\n  \"/members/{idMember}\":\n    get:\n      description: If you specify 'me' as the username, this call will respond as if\n        you had supplied the username associated with the supplied token\n      operationId: getMembersByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: action_since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: action_before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: card_members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: card_member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: card_attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: card_attachment_fields\n          required: false\n          schema:\n            default: url and previews\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: card_stickers\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: boards\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            default: name, closed, idOrganization and pinned\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: board_actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board_actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board_actions_display\n          required: false\n          schema:\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: board_actions_format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: board_actions_since\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: board_actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: board_action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: board_lists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: active, admin, deactivated, me\n            or normal\"\n          in: query\n          name: board_memberships\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board_organization\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: board_organization_fields\n          required: false\n          schema:\n            default: name and displayName\n            type: string\n        - description: \"All or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: boardsInvited\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: boardsInvited_fields\n          required: false\n          schema:\n            default: name, closed, idOrganization and pinned\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: boardStars\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: savedSearches\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, members, none or public\"\n          in: query\n          name: organizations\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: organization_paid_account\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, members, none or public\"\n          in: query\n          name: organizationsInvited\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organizationsInvited_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: addAdminToBoard,\n            addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,\n            addedToBoard, addedToCard, addedToOrganization, cardDueSoon,\n            changeCard, closeBoard, commentCard, createdCard,\n            declinedInvitationToBoard, declinedInvitationToOrganization,\n            invitedToBoard, invitedToOrganization, makeAdminOfBoard,\n            makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,\n            removedFromBoard, removedFromCard, removedFromOrganization,\n            removedMemberFromCard, unconfirmedInvitedToBoard,\n            unconfirmedInvitedToOrganization or updateCheckItemStateOnCard\"\n          in: query\n          name: notifications\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: notifications_entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: notifications_display\n          required: false\n          schema:\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: notifications_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator,\n            type or unread\"\n          in: query\n          name: notification_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: notification_memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: notification_memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: An ID, or null\n          in: query\n          name: notification_before\n          required: false\n          schema:\n            type: string\n        - description: An ID, or null\n          in: query\n          name: notification_since\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: tokens\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: paid_account\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, custom, default, none or premium\"\n          in: query\n          name: boardBackgrounds\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: customBoardBackgrounds\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: customStickers\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: customEmoji\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members by ID member\n      tags:\n        - member\n    put:\n      operationId: updateMembersByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members\"\n        description: Attributes of \"Members\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members by ID member\n      tags:\n        - member\n  \"/members/{idMember}/actions\":\n    get:\n      operationId: getMembersActionsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            default: \"0\"\n            type: string\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members actions by ID member\n      tags:\n        - member\n  \"/members/{idMember}/avatar\":\n    post:\n      operationId: addMembersAvatarByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_avatar\"\n        description: Attributes of \"Members Avatar\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add members avatar by ID member\n      tags:\n        - member\n  \"/members/{idMember}/avatarSource\":\n    put:\n      operationId: updateMembersAvatarSourceByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_avatarSource\"\n        description: Attributes of \"Members Avatar Source\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members avatar source by ID member\n      tags:\n        - member\n  \"/members/{idMember}/bio\":\n    put:\n      operationId: updateMembersBioByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_bio\"\n        description: Attributes of \"Members Bio\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members bio by ID member\n      tags:\n        - member\n  \"/members/{idMember}/boardBackgrounds\":\n    get:\n      operationId: getMembersBoardBackgroundsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, custom, default, none or premium\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members board backgrounds by ID member\n      tags:\n        - member\n    post:\n      operationId: addMembersBoardBackgroundsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardBackgrounds\"\n        description: Attributes of \"Members Board Backgrounds\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add members board backgrounds by ID member\n      tags:\n        - member\n  \"/members/{idMember}/boardBackgrounds/{idBoardBackground}\":\n    delete:\n      operationId: deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete members board backgrounds by ID member by ID board background\n      tags:\n        - member\n    get:\n      operationId: getMembersBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: brightness, fullSizeUrl, scaled\n            or tile\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members board backgrounds by ID member by ID board background\n      tags:\n        - member\n    put:\n      operationId: updateMembersBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardBackgrounds\"\n        description: Attributes of \"Members Board Backgrounds\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members board backgrounds by ID member by ID board background\n      tags:\n        - member\n  \"/members/{idMember}/boardStars\":\n    get:\n      operationId: getMembersBoardStarsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members board stars by ID member\n      tags:\n        - member\n    post:\n      operationId: addMembersBoardStarsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardStars\"\n        description: Attributes of \"Members Board Stars\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add members board stars by ID member\n      tags:\n        - member\n  \"/members/{idMember}/boardStars/{idBoardStar}\":\n    delete:\n      operationId: deleteMembersBoardStarsByIdMemberByIdBoardStar\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete members board stars by ID member by ID board star\n      tags:\n        - member\n    get:\n      operationId: getMembersBoardStarsByIdMemberByIdBoardStar\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members board stars by ID member by ID board star\n      tags:\n        - member\n    put:\n      operationId: updateMembersBoardStarsByIdMemberByIdBoardStar\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardStars\"\n        description: Attributes of \"Members Board Stars\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members board stars by ID member by ID board star\n      tags:\n        - member\n  \"/members/{idMember}/boardStars/{idBoardStar}/idBoard\":\n    put:\n      operationId: updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardStars_idBoard\"\n        description: Attributes of \"Members Board Stars ID Board\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members board stars ID board by ID member by ID board star\n      tags:\n        - member\n  \"/members/{idMember}/boardStars/{idBoardStar}/pos\":\n    put:\n      operationId: updateMembersBoardStarsPosByIdMemberByIdBoardStar\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardStars_pos\"\n        description: Attributes of \"Members Board Stars Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members board stars pos by ID member by ID board star\n      tags:\n        - member\n  \"/members/{idMember}/boards\":\n    get:\n      operationId: getMembersBoardsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: actions_format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: actions_since\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: active, admin, deactivated, me\n            or normal\"\n          in: query\n          name: memberships\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: organization\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            default: name and displayName\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: lists\n          required: false\n          schema:\n            default: none\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members boards by ID member\n      tags:\n        - member\n  \"/members/{idMember}/boards/{filter}\":\n    get:\n      operationId: getMembersBoardsByIdMemberByFilter\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get members boards by ID member by filter\n      tags:\n        - member\n  \"/members/{idMember}/boardsInvited\":\n    get:\n      operationId: getMembersBoardsInvitedByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members boards invited by ID member\n      tags:\n        - member\n  \"/members/{idMember}/boardsInvited/{field}\":\n    get:\n      operationId: getMembersBoardsInvitedByIdMemberByField\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members boards invited by ID member by field\n      tags:\n        - member\n  \"/members/{idMember}/cards\":\n    get:\n      operationId: getMembersCardsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: visible\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members cards by ID member\n      tags:\n        - member\n  \"/members/{idMember}/cards/{filter}\":\n    get:\n      operationId: getMembersCardsByIdMemberByFilter\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get members cards by ID member by filter\n      tags:\n        - member\n  \"/members/{idMember}/customBoardBackgrounds\":\n    get:\n      operationId: getMembersCustomBoardBackgroundsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members custom board backgrounds by ID member\n      tags:\n        - member\n    post:\n      operationId: addMembersCustomBoardBackgroundsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_customBoardBackgrounds\"\n        description: Attributes of \"Members Custom Board Backgrounds\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add members custom board backgrounds by ID member\n      tags:\n        - member\n  \"/members/{idMember}/customBoardBackgrounds/{idBoardBackground}\":\n    delete:\n      operationId: deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete members custom board backgrounds by ID member by ID board background\n      tags:\n        - member\n    get:\n      operationId: getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: brightness, fullSizeUrl, scaled\n            or tile\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members custom board backgrounds by ID member by ID board background\n      tags:\n        - member\n    put:\n      operationId: updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_customBoardBackgrounds\"\n        description: Attributes of \"Members Custom Board Backgrounds\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members custom board backgrounds by ID member by ID board background\n      tags:\n        - member\n  \"/members/{idMember}/customEmoji\":\n    get:\n      description: This gets the list of all of the user’s uploaded emoji\n      operationId: getMembersCustomEmojiByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members custom emoji by ID member\n      tags:\n        - member\n    post:\n      operationId: addMembersCustomEmojiByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_customEmoji\"\n        description: Attributes of \"Members Custom Emoji\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add members custom emoji by ID member\n      tags:\n        - member\n  \"/members/{idMember}/customEmoji/{idCustomEmoji}\":\n    get:\n      operationId: getMembersCustomEmojiByIdMemberByIdCustomEmoji\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdCustomEmoji\n          in: path\n          name: idCustomEmoji\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: name or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members custom emoji by ID member by ID custom emoji\n      tags:\n        - member\n  \"/members/{idMember}/customStickers\":\n    get:\n      description: This gets a list of all of the user’s uploaded stickers\n      operationId: getMembersCustomStickersByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members custom stickers by ID member\n      tags:\n        - member\n    post:\n      operationId: addMembersCustomStickersByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_customStickers\"\n        description: Attributes of \"Members Custom Stickers\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add members custom stickers by ID member\n      tags:\n        - member\n  \"/members/{idMember}/customStickers/{idCustomSticker}\":\n    delete:\n      operationId: deleteMembersCustomStickersByIdMemberByIdCustomSticker\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdCustomSticker\n          in: path\n          name: idCustomSticker\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete members custom stickers by ID member by ID custom sticker\n      tags:\n        - member\n    get:\n      operationId: getMembersCustomStickersByIdMemberByIdCustomSticker\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdCustomSticker\n          in: path\n          name: idCustomSticker\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: scaled or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members custom stickers by ID member by ID custom sticker\n      tags:\n        - member\n  \"/members/{idMember}/deltas\":\n    get:\n      operationId: getMembersDeltasByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: A valid tag for subscribing\n          in: query\n          name: tags\n          required: true\n          schema:\n            type: string\n        - description: A number from -1 to Infinity\n          in: query\n          name: ixLastUpdate\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members deltas by ID member\n      tags:\n        - member\n  \"/members/{idMember}/fullName\":\n    put:\n      operationId: updateMembersFullNameByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_fullName\"\n        description: Attributes of \"Members Full Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members full name by ID member\n      tags:\n        - member\n  \"/members/{idMember}/initials\":\n    put:\n      operationId: updateMembersInitialsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_initials\"\n        description: Attributes of \"Members Initials\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members initials by ID member\n      tags:\n        - member\n  \"/members/{idMember}/notifications\":\n    get:\n      description: You can only read the notifications for the member associated with\n        the supplied token\n      operationId: getMembersNotificationsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAdminToBoard,\n            addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,\n            addedToBoard, addedToCard, addedToOrganization, cardDueSoon,\n            changeCard, closeBoard, commentCard, createdCard,\n            declinedInvitationToBoard, declinedInvitationToOrganization,\n            invitedToBoard, invitedToOrganization, makeAdminOfBoard,\n            makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,\n            removedFromBoard, removedFromCard, removedFromOrganization,\n            removedMemberFromCard, unconfirmedInvitedToBoard,\n            unconfirmedInvitedToOrganization or updateCheckItemStateOnCard\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all, read or unread\"\n          in: query\n          name: read_filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator,\n            type or unread\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: A number from 0 to 100\n          in: query\n          name: page\n          required: false\n          schema:\n            default: \"0\"\n            type: string\n        - description: An ID, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: An ID, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members notifications by ID member\n      tags:\n        - member\n  \"/members/{idMember}/notifications/{filter}\":\n    get:\n      operationId: getMembersNotificationsByIdMemberByFilter\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get members notifications by ID member by filter\n      tags:\n        - member\n  \"/members/{idMember}/oneTimeMessagesDismissed\":\n    post:\n      operationId: addMembersOneTimeMessagesDismissedByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_oneTimeMessagesDismissed\"\n        description: Attributes of \"Members One Time Messages Dismissed\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add members one time messages dismissed by ID member\n      tags:\n        - member\n  \"/members/{idMember}/organizations\":\n    get:\n      operationId: getMembersOrganizationsByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, members, none or public\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: paid_account\n          required: false\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members organizations by ID member\n      tags:\n        - member\n  \"/members/{idMember}/organizations/{filter}\":\n    get:\n      operationId: getMembersOrganizationsByIdMemberByFilter\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get members organizations by ID member by filter\n      tags:\n        - member\n  \"/members/{idMember}/organizationsInvited\":\n    get:\n      operationId: getMembersOrganizationsInvitedByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members organizations invited by ID member\n      tags:\n        - member\n  \"/members/{idMember}/organizationsInvited/{field}\":\n    get:\n      operationId: getMembersOrganizationsInvitedByIdMemberByField\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members organizations invited by ID member by field\n      tags:\n        - member\n  \"/members/{idMember}/prefs/colorBlind\":\n    put:\n      operationId: updateMembersPrefsColorBlindByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_colorBlind\"\n        description: Attributes of \"Prefs Color Blind\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members prefs color blind by ID member\n      tags:\n        - member\n  \"/members/{idMember}/prefs/locale\":\n    put:\n      operationId: updateMembersPrefsLocaleByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_locale\"\n        description: Attributes of \"Prefs Locale\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members prefs locale by ID member\n      tags:\n        - member\n  \"/members/{idMember}/prefs/minutesBetweenSummaries\":\n    put:\n      operationId: updateMembersPrefsMinutesBetweenSummariesByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_minutesBetweenSummaries\"\n        description: Attributes of \"Prefs Minutes Between Summaries\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members prefs minutes between summaries by ID member\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches\":\n    get:\n      operationId: getMembersSavedSearchesByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members saved searches by ID member\n      tags:\n        - member\n    post:\n      operationId: addMembersSavedSearchesByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches\"\n        description: Attributes of \"Members Saved Searches\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add members saved searches by ID member\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches/{idSavedSearch}\":\n    delete:\n      operationId: deleteMembersSavedSearchesByIdMemberByIdSavedSearch\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete members saved searches by ID member by ID saved search\n      tags:\n        - member\n    get:\n      operationId: getMembersSavedSearchesByIdMemberByIdSavedSearch\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members saved searches by ID member by ID saved search\n      tags:\n        - member\n    put:\n      operationId: updateMembersSavedSearchesByIdMemberByIdSavedSearch\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches\"\n        description: Attributes of \"Members Saved Searches\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members saved searches by ID member by ID saved search\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches/{idSavedSearch}/name\":\n    put:\n      operationId: updateMembersSavedSearchesNameByIdMemberByIdSavedSearch\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches_name\"\n        description: Attributes of \"Members Saved Searches Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members saved searches name by ID member by ID saved search\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches/{idSavedSearch}/pos\":\n    put:\n      operationId: updateMembersSavedSearchesPosByIdMemberByIdSavedSearch\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches_pos\"\n        description: Attributes of \"Members Saved Searches Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members saved searches pos by ID member by ID saved search\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches/{idSavedSearch}/query\":\n    put:\n      operationId: updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: IdSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches_query\"\n        description: Attributes of \"Members Saved Searches Query\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members saved searches query by ID member by ID saved search\n      tags:\n        - member\n  \"/members/{idMember}/tokens\":\n    get:\n      operationId: getMembersTokensByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get members tokens by ID member\n      tags:\n        - member\n  \"/members/{idMember}/username\":\n    put:\n      operationId: updateMembersUsernameByIdMember\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_username\"\n        description: Attributes of \"Members Username\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update members username by ID member\n      tags:\n        - member\n  \"/members/{idMember}/{field}\":\n    get:\n      operationId: getMembersByIdMemberByField\n      parameters:\n        - description: IdMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get members by ID member by field\n      tags:\n        - member\n  /notifications/all/read:\n    post:\n      operationId: addNotificationsAllRead\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add notifications all read\n      tags:\n        - notification\n  \"/notifications/{idNotification}\":\n    get:\n      operationId: getNotificationsByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator,\n            type or unread\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            default: name\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: list\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: card\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: name\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: organization\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            default: displayName\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications by ID notification\n      tags:\n        - notification\n    put:\n      operationId: updateNotificationsByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/notifications\"\n        description: Attributes of \"Notifications\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update notifications by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/board\":\n    get:\n      operationId: getNotificationsBoardByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications board by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/board/{field}\":\n    get:\n      operationId: getNotificationsBoardByIdNotificationByField\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications board by ID notification by field\n      tags:\n        - notification\n  \"/notifications/{idNotification}/card\":\n    get:\n      operationId: getNotificationsCardByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications card by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/card/{field}\":\n    get:\n      operationId: getNotificationsCardByIdNotificationByField\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications card by ID notification by field\n      tags:\n        - notification\n  \"/notifications/{idNotification}/display\":\n    get:\n      operationId: getNotificationsDisplayByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications display by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/entities\":\n    get:\n      operationId: getNotificationsEntitiesByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications entities by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/list\":\n    get:\n      operationId: getNotificationsListByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications list by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/list/{field}\":\n    get:\n      operationId: getNotificationsListByIdNotificationByField\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications list by ID notification by field\n      tags:\n        - notification\n  \"/notifications/{idNotification}/member\":\n    get:\n      operationId: getNotificationsMemberByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications member by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/member/{field}\":\n    get:\n      operationId: getNotificationsMemberByIdNotificationByField\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications member by ID notification by field\n      tags:\n        - notification\n  \"/notifications/{idNotification}/memberCreator\":\n    get:\n      operationId: getNotificationsMemberCreatorByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications member creator by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/memberCreator/{field}\":\n    get:\n      operationId: getNotificationsMemberCreatorByIdNotificationByField\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications member creator by ID notification by field\n      tags:\n        - notification\n  \"/notifications/{idNotification}/organization\":\n    get:\n      operationId: getNotificationsOrganizationByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications organization by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/organization/{field}\":\n    get:\n      operationId: getNotificationsOrganizationByIdNotificationByField\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get notifications organization by ID notification by field\n      tags:\n        - notification\n  \"/notifications/{idNotification}/unread\":\n    put:\n      operationId: updateNotificationsUnreadByIdNotification\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/notifications_unread\"\n        description: Attributes of \"Notifications Unread\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update notifications unread by ID notification\n      tags:\n        - notification\n  \"/notifications/{idNotification}/{field}\":\n    get:\n      operationId: getNotificationsByIdNotificationByField\n      parameters:\n        - description: IdNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get notifications by ID notification by field\n      tags:\n        - notification\n  /organizations:\n    post:\n      operationId: addOrganizations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations\"\n        description: Attributes of \"Organizations\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add organizations\n      tags:\n        - organization\n  \"/organizations/{idOrg}\":\n    delete:\n      operationId: deleteOrganizationsByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete organizations by ID org\n      tags:\n        - organization\n    get:\n      operationId: getOrganizationsByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: active, admin, deactivated, me\n            or normal\"\n          in: query\n          name: memberships\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberships_member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberships_member_fields\n          required: false\n          schema:\n            default: fullName and username\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: members\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials, username and confirmed\n            type: string\n        - description: True or false ; works for premium organizations only.\n          in: query\n          name: member_activity\n          required: false\n          schema:\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: membersInvited\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: membersInvited_fields\n          required: false\n          schema:\n            default: avatarHash, initials, fullName and username\n            type: string\n        - description: \"All or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: boards\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: board_actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board_actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board_actions_display\n          required: false\n          schema:\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: board_actions_format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: board_actions_since\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: board_actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: board_action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: board_lists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: paid_account\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: name, displayName, desc, descData, url, website, logoHash, products and\n              powerUps\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations by ID org\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations\"\n        description: Attributes of \"Organizations\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/actions\":\n    get:\n      operationId: getOrganizationsActionsByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            default: \"0\"\n            type: string\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations actions by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/boards\":\n    get:\n      operationId: getOrganizationsBoardsByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: A number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            default: \"50\"\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: actions_format\n          required: false\n          schema:\n            default: list\n            type: string\n        - description: A date, null or lastView\n          in: query\n          name: actions_since\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: active, admin, deactivated, me\n            or normal\"\n          in: query\n          name: memberships\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: organization\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            default: name and displayName\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: lists\n          required: false\n          schema:\n            default: none\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations boards by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/boards/{filter}\":\n    get:\n      operationId: getOrganizationsBoardsByIdOrgByFilter\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get organizations boards by ID org by filter\n      tags:\n        - organization\n  \"/organizations/{idOrg}/deltas\":\n    get:\n      operationId: getOrganizationsDeltasByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: A valid tag for subscribing\n          in: query\n          name: tags\n          required: true\n          schema:\n            type: string\n        - description: A number from -1 to Infinity\n          in: query\n          name: ixLastUpdate\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations deltas by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/desc\":\n    put:\n      operationId: updateOrganizationsDescByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_desc\"\n        description: Attributes of \"Organizations Desc\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations desc by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/displayName\":\n    put:\n      operationId: updateOrganizationsDisplayNameByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_displayName\"\n        description: Attributes of \"Organizations Display Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations display name by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/logo\":\n    delete:\n      operationId: deleteOrganizationsLogoByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete organizations logo by ID org\n      tags:\n        - organization\n    post:\n      operationId: addOrganizationsLogoByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_logo\"\n        description: Attributes of \"Organizations Logo\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add organizations logo by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members\":\n    get:\n      operationId: getOrganizationsMembersByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: fullName and username\n            type: string\n        - description: True or false ; works for premium organizations only.\n          in: query\n          name: activity\n          required: false\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations members by ID org\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsMembersByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/organizations_members\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations members by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{filter}\":\n    get:\n      operationId: getOrganizationsMembersByIdOrgByFilter\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: Filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get organizations members by ID org by filter\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{idMember}\":\n    delete:\n      operationId: deleteOrganizationsMembersByIdOrgByIdMember\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete organizations members by ID org by ID member\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsMembersByIdOrgByIdMember\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/organizations_members\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations members by ID org by ID member\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{idMember}/all\":\n    delete:\n      operationId: deleteOrganizationsMembersAllByIdOrgByIdMember\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete organizations members all by ID org by ID member\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{idMember}/cards\":\n    get:\n      operationId: getOrganizationsMembersCardsByIdOrgByIdMember\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: bytes, date, edgeColor,\n            idMember, isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials and username\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            default: none\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            default: name, desc, closed, idOrganization, pinned, url and prefs\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: list\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: list_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: visible\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations members cards by ID org by ID member\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{idMember}/deactivated\":\n    put:\n      operationId: updateOrganizationsMembersDeactivatedByIdOrgByIdMember\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: IdMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_members_deactivated\"\n        description: Attributes of \"Organizations Members Deactivated\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations members deactivated by ID org by ID member\n      tags:\n        - organization\n  \"/organizations/{idOrg}/membersInvited\":\n    get:\n      operationId: getOrganizationsMembersInvitedByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: all\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations members invited by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/membersInvited/{field}\":\n    get:\n      operationId: getOrganizationsMembersInvitedByIdOrgByField\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations members invited by ID org by field\n      tags:\n        - organization\n  \"/organizations/{idOrg}/memberships\":\n    get:\n      operationId: getOrganizationsMembershipsByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: active, admin, deactivated, me\n            or normal\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: fullName and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations memberships by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/memberships/{idMembership}\":\n    get:\n      operationId: getOrganizationsMembershipsByIdOrgByIdMembership\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: IdMembership\n          in: path\n          name: idMembership\n          required: true\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: fullName and username\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get organizations memberships by ID org by ID membership\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsMembershipsByIdOrgByIdMembership\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: IdMembership\n          in: path\n          name: idMembership\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_memberships\"\n        description: Attributes of \"Organizations Memberships\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations memberships by ID org by ID membership\n      tags:\n        - organization\n  \"/organizations/{idOrg}/name\":\n    put:\n      operationId: updateOrganizationsNameByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_name\"\n        description: Attributes of \"Organizations Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations name by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/associatedDomain\":\n    delete:\n      operationId: deleteOrganizationsPrefsAssociatedDomainByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete organizations prefs associated domain by ID org\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsPrefsAssociatedDomainByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_associatedDomain\"\n        description: Attributes of \"Prefs Associated Domain\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations prefs associated domain by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/boardVisibilityRestrict/org\":\n    put:\n      operationId: updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_boardVisibilityRestrict\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations prefs board visibility restrict org by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/boardVisibilityRestrict/private\":\n    put:\n      operationId: updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_boardVisibilityRestrict\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations prefs board visibility restrict private by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/boardVisibilityRestrict/public\":\n    put:\n      operationId: updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_boardVisibilityRestrict\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations prefs board visibility restrict public by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/externalMembersDisabled\":\n    put:\n      operationId: updateOrganizationsPrefsExternalMembersDisabledByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_externalMembersDisabled\"\n        description: Attributes of \"Prefs External Members Disabled\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations prefs external members disabled by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/googleAppsVersion\":\n    put:\n      operationId: updateOrganizationsPrefsGoogleAppsVersionByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_googleAppsVersion\"\n        description: Attributes of \"Prefs Google Apps Version\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations prefs google apps version by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/orgInviteRestrict\":\n    delete:\n      operationId: deleteOrganizationsPrefsOrgInviteRestrictByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: An email address with optional expansion tokens\n          in: query\n          name: value\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Delete organizations prefs org invite restrict by ID org\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsPrefsOrgInviteRestrictByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_orgInviteRestrict\"\n        description: Attributes of \"Prefs Org Invite Restrict\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations prefs org invite restrict by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/permissionLevel\":\n    put:\n      operationId: updateOrganizationsPrefsPermissionLevelByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_permissionLevel\"\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations prefs permission level by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/website\":\n    put:\n      operationId: updateOrganizationsWebsiteByIdOrg\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_website\"\n        description: Attributes of \"Organizations Website\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update organizations website by ID org\n      tags:\n        - organization\n  \"/organizations/{idOrg}/{field}\":\n    get:\n      operationId: getOrganizationsByIdOrgByField\n      parameters:\n        - description: IdOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: Field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get organizations by ID org by field\n      tags:\n        - organization\n  /search:\n    get:\n      operationId: getSearch\n      parameters:\n        - description: A string with a length from 1 to 16384\n          in: query\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of objectIds, 24-character hex strings\n          in: query\n          name: idBoards\n          required: false\n          schema:\n            default: mine\n            type: string\n        - description: A comma-separated list of objectIds, 24-character hex strings\n          in: query\n          name: idOrganizations\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of objectIds, 24-character hex strings\n          in: query\n          name: idCards\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: actions, boards, cards, members\n            or organizations\"\n          in: query\n          name: modelTypes\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: \"All or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            default: name and idOrganization\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: boards_limit\n          required: false\n          schema:\n            default: \"10\"\n            type: string\n        - description: \"All or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            default: all\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: cards_limit\n          required: false\n          schema:\n            default: \"10\"\n            type: string\n        - description: A number from 0 to 100\n          in: query\n          name: cards_page\n          required: false\n          schema:\n            default: \"0\"\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: card_board\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: card_list\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: card_members\n          required: false\n          schema:\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: card_stickers\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: card_attachments\n          required: false\n          schema:\n            type: string\n        - description: \"All or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            default: name and displayName\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: organizations_limit\n          required: false\n          schema:\n            default: \"10\"\n            type: string\n        - description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            default: avatarHash, fullName, initials, username and confirmed\n            type: string\n        - description: A number from 1 to 1000\n          in: query\n          name: members_limit\n          required: false\n          schema:\n            default: \"10\"\n            type: string\n        - description: \"True or false\"\n          in: query\n          name: partial\n          required: false\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get search\n      tags:\n        - search\n  /search/members:\n    get:\n      operationId: getSearchMembers\n      parameters:\n        - description: A string with a length from 1 to 16384\n          in: query\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: A number from 1 to 20\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: \"8\"\n            type: string\n        - description: An ID, or null\n          in: query\n          name: idBoard\n          required: false\n          schema:\n            type: string\n        - description: An ID, or null\n          in: query\n          name: idOrganization\n          required: false\n          schema:\n            type: string\n        - description: A boolean\n          in: query\n          name: onlyOrgMembers\n          required: false\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: Get search members\n      tags:\n        - search\n  /sessions:\n    post:\n      operationId: addSessions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/sessions\"\n        description: Attributes of \"Sessions\" to be added.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Add sessions\n      tags:\n        - session\n  /sessions/socket:\n    get:\n      description: This is the route for WebSocket requests.  See the socket API\n        reference for a description of WebSocket usage.\n      operationId: getSessionsSocket \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get sessions socket\n      tags:\n        - session\n  \"/sessions/{idSession}\":\n    put:\n      operationId: updateSessionsByIdSession\n      parameters:\n        - description: IdSession\n          in: path\n          name: idSession\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/sessions\"\n        description: Attributes of \"Sessions\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update sessions by ID session\n      tags:\n        - session\n  \"/sessions/{idSession}/status\":\n    put:\n      operationId: updateSessionsStatusByIdSession\n      parameters:\n        - description: IdSession\n          in: path\n          name: idSession\n          required: true\n          schema:\n            type: string\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/sessions_status\"\n        description: Attributes of \"Sessions Status\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Update sessions status by ID session\n      tags:\n        - session\n  \"/types/{ID}\":\n    get:\n      operationId: getTypesById\n      parameters:\n        - description: ID\n          in: path\n          name: ID\n          required: true\n          schema:\n            type: string\n        \n      responses:\n        \"200\":\n          content: {}\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: Get types by ID\n      tags:\n        - type\nsecurity:\n  - api_key: []\n  - api_token: []\ncomponents:\n  requestBodies:\n    boards_members:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/boards_members\"\n      description: Attributes of \"Boards Members\" to be updated.\n      required: true\n    organizations_members:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/organizations_members\"\n      description: Attributes of \"Organizations Members\" to be updated.\n      required: true\n    prefs_boardVisibilityRestrict:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/prefs_boardVisibilityRestrict\"\n      description: Attributes of \"Prefs Board Visibility Restrict\" to be updated.\n      required: true\n    prefs_permissionLevel:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/prefs_permissionLevel\"\n      description: Attributes of \"Prefs Permission Level\" to be updated.\n      required: true\n    webhooks:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/webhooks\"\n      description: Attributes of \"Webhooks\" to be updated.\n      required: true\n  schemas:\n    actions:\n      properties:\n        text:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: action\n    actions_comments:\n      properties:\n        text:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    actions_text:\n      properties:\n        value:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: action\n    boards:\n      properties:\n        closed:\n          description: \"True or false\"\n          type: string\n        desc:\n          description: A string with a length from 0 to 16384\n          type: string\n        idBoardSource:\n          description: The ID of the board to copy into the new board\n          type: string\n        idOrganization:\n          description: The ID or name of the organization to add the board to.\n          type: string\n        keepFromSource:\n          description: Components of the source board to copy.\n          type: string\n        # labelNames/blue:\n        #   description: A string with a length from 0 to 16384\n        #   type: string\n        # labelNames/green:\n        #   description: A string with a length from 0 to 16384\n        #   type: string\n        # labelNames/orange:\n        #   description: A string with a length from 0 to 16384\n        #   type: string\n        # labelNames/purple:\n        #   description: A string with a length from 0 to 16384\n        #   type: string\n        # labelNames/red:\n        #   description: A string with a length from 0 to 16384\n        #   type: string\n        # labelNames/yellow:\n        #   description: A string with a length from 0 to 16384\n        #   type: string\n        name:\n          description: A string with a length from 1 to 16384\n          type: string\n        powerUps:\n          description: \"All or a comma-separated list of: calendar, cardAging, recap or\n            voting\"\n          type: string\n        # prefs/background:\n        #   description: A standard background name, or the ID of a custom background\n        #   type: string\n        # prefs/calendarFeedEnabled:\n        #   description: \"True or false\"\n        #   type: string\n        # prefs/cardAging:\n        #   description: \"One of: pirate or regular\"\n        #   type: string\n        # prefs/cardCovers:\n        #   description: \"True or false\"\n        #   type: string\n        # prefs/comments:\n        #   description: \"One of: disabled, members, observers, org or public\"\n        #   type: string\n        # prefs/invitations:\n        #   description: \"One of: admins or members\"\n        #   type: string\n        # prefs/permissionLevel:\n        #   description: \"One of: org, private or public\"\n        #   type: string\n        # prefs/selfJoin:\n        #   description: \"True or false\"\n        #   type: string\n        # prefs/voting:\n        #   description: \"One of: disabled, members, observers, org or public\"\n        #   type: string\n        prefs_background:\n          description: A string with a length from 0 to 16384\n          type: string\n        prefs_cardAging:\n          description: \"One of: pirate or regular\"\n          type: string\n        prefs_cardCovers:\n          description: \"True or false\"\n          type: string\n        prefs_comments:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n        prefs_invitations:\n          description: \"One of: admins or members\"\n          type: string\n        prefs_permissionLevel:\n          description: \"One of: org, private or public\"\n          type: string\n        prefs_selfJoin:\n          description: \"True or false\"\n          type: string\n        prefs_voting:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n        subscribed:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_checklists:\n      properties:\n        name:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_closed:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_desc:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_idOrganization:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_labels:\n      properties:\n        color:\n          description: A valid label color or null\n          type: string\n        name:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_lists:\n      properties:\n        name:\n          description: A string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_members:\n      properties:\n        email:\n          description: An email address\n          type: string\n        fullName:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n        type:\n          description: \"One of: admin, normal or observer\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_memberships:\n      properties:\n        member_fields:\n          description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          type: string\n        type:\n          description: \"One of: admin, normal or observer\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_name:\n      properties:\n        value:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_powerUps:\n      properties:\n        value:\n          description: \"One of: calendar, cardAging, recap or voting\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_subscribed:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    cards:\n      properties:\n        closed:\n          description: \"True or false\"\n          type: string\n        desc:\n          description: A string with a length from 0 to 16384\n          type: string\n        due:\n          description: A date, or null\n          type: string\n        fileSource:\n          description: A file\n          type: string\n        idAttachmentCover:\n          description: ID of the image attachment of this card to use as its cover, or\n            null for no cover\n          type: string\n        idBoard:\n          description: ID of the board the card should be moved to\n          type: string\n        idCardSource:\n          description: The ID of the card to copy into a new card.\n          type: string\n        idLabels:\n          description: A comma-separated list of objectIds, 24-character hex strings\n          type: string\n        idList:\n          description: ID of the list that the card should be added to\n          type: string\n        idMembers:\n          description: A comma-separated list of objectIds, 24-character hex strings\n          type: string\n        keepFromSource:\n          description: Properties of the card to copy over from the source.\n          type: string\n        labels:\n          description: \"All or a comma-separated list of: blue, green, orange, purple, red\n            or yellow\"\n          type: string\n        name:\n          description: The name of the new card.  It isn\u0026#39;t required if the name is\n            being copied from provided by a URL, file or card that is being\n            copied.\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n        subscribed:\n          description: \"True or false\"\n          type: string\n        urlSource:\n          description: A URL starting with http:// or https:// or null\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_actions_comments:\n      properties:\n        text:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_attachments:\n      properties:\n        file:\n          description: A file\n          type: string\n        mimeType:\n          description: A string with a length from 0 to 256\n          type: string\n        name:\n          description: A string with a length from 0 to 256\n          type: string\n        url:\n          description: A URL starting with http:// or https:// or null\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_checkItem:\n      properties:\n        name:\n          description: A string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_checkItem_name:\n      properties:\n        value:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_checkItem_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_checkItem_state:\n      properties:\n        value:\n          description: \"One of: complete, false, incomplete or true\"\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_idChecklistCurrent_checkItem:\n      properties:\n        idChecklist:\n          description: An ID, or null\n          type: string\n        name:\n          description: A string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n        state:\n          description: \"One of: complete, false, incomplete or true\"\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklists:\n      properties:\n        idChecklistSource:\n          description: The ID of the source checklist to copy into a new checklist.\n          type: string\n        name:\n          description: A string with a length from 0 to 16384\n          type: string\n        value:\n          description: The ID of the checklist to add to the card, or null to create a new\n            one.\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_closed:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_desc:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_due:\n      properties:\n        value:\n          description: A date, or null\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idAttachmentCover:\n      properties:\n        value:\n          description: ID of the image attachment of this card to use as its cover, or\n            null for no cover\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idBoard:\n      properties:\n        idList:\n          description: ID of the list that the card should be moved to on the new board\n          type: string\n        value:\n          description: ID of the board the card should be moved to\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idLabels:\n      properties:\n        value:\n          description: The ID of the label to add\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idList:\n      properties:\n        value:\n          description: ID of the list the card should be moved to\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idMembers:\n      properties:\n        value:\n          description: The ID of the member to add to the card\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_labels:\n      properties:\n        color:\n          description: A valid label color or null\n          type: string\n        name:\n          description: A string with a length from 0 to 16384\n          type: string\n        value:\n          description: \"All or a comma-separated list of: blue, green, orange, purple, red\n            or yellow\"\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_membersVoted:\n      properties:\n        value:\n          description: The ID of the member to vote \u0026#39;yes\u0026#39; on the card\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_name:\n      properties:\n        value:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_stickers:\n      properties:\n        image:\n          description: A string with a length from 0 to 16384\n          type: string\n        left:\n          description: Undefined\n          type: string\n        rotate:\n          description: Undefined\n          type: string\n        top:\n          description: Undefined\n          type: string\n        zIndex:\n          description: Valid Z values for stickers, must be an integer\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_subscribed:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: card\n    checklists:\n      properties:\n        idBoard:\n          description: ID of the board that the checklist should be added to\n          type: string\n        idCard:\n          description: ID of the card that the checklist should be added to\n          type: string\n        idChecklistSource:\n          description: The ID of the source checklist to copy into a new checklist.\n          type: string\n        name:\n          description: A string with a length from 0 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: checklist\n    checklists_checkItems:\n      properties:\n        checked:\n          description: \"True or false\"\n          type: string\n        name:\n          description: A string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: checklist\n    checklists_idCard:\n      properties:\n        value:\n          description: The ID of the card that the checklist is on\n          type: string\n      type: object\n      xml:\n        name: checklist\n    checklists_name:\n      properties:\n        value:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: checklist\n    checklists_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: checklist\n    labelNames_blue:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_green:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_orange:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_purple:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_red:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_yellow:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labels:\n      properties:\n        color:\n          description: A valid label color or null\n          type: string\n        idBoard:\n          description: An ID\n          type: string\n        name:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: label\n    labels_color:\n      properties:\n        value:\n          description: A valid label color or null\n          type: string\n      type: object\n      xml:\n        name: label\n    labels_name:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: label\n    lists:\n      properties:\n        closed:\n          description: \"True or false\"\n          type: string\n        idBoard:\n          description: ID of the board that the list should be added to\n          type: string\n        idListSource:\n          description: The ID of the list to copy into a new list.\n          type: string\n        name:\n          description: A string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n        subscribed:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_cards:\n      properties:\n        desc:\n          description: A string with a length from 0 to 16384\n          type: string\n        due:\n          description: A date, or null\n          type: string\n        idMembers:\n          description: A comma-separated list of objectIds, 24-character hex strings\n          type: string\n        labels:\n          description: \"All or a comma-separated list of: blue, green, orange, purple, red\n            or yellow\"\n          type: string\n        name:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_closed:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_idBoard:\n      properties:\n        pos:\n          description: Position of the list on the new board\n          type: string\n        value:\n          description: ID of the board the list should be moved to\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_moveAllCards:\n      properties:\n        idBoard:\n          description: ID of the board that the cards should be moved to\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_name:\n      properties:\n        value:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_subscribed:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: list\n    members:\n      properties:\n        avatarSource:\n          description: \"One of: gravatar, none or upload\"\n          type: string\n        bio:\n          description: A string with a length from 0 to 16384\n          type: string\n        fullName:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n        initials:\n          description: A string with a length from 1 to 4.  Cannot begin or end with a space\n          type: string\n        # prefs/colorBlind:\n        #   description: \"True or false\"\n        #   type: string\n        # prefs/locale:\n        #   description: A string with a length from 0 to 255\n        #   type: string\n        # prefs/minutesBetweenSummaries:\n        #   description: -1 (disabled), 1 or 60\n        #   type: string\n        username:\n          description: A string with a length of at least 3.  Only lowercase letters,\n            underscores, and numbers are allowed.  Must be unique.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_avatar:\n      properties:\n        file:\n          description: A file\n          type: string\n      type: object\n      xml:\n        name: member\n    members_avatarSource:\n      properties:\n        value:\n          description: \"One of: gravatar, none or upload\"\n          type: string\n      type: object\n      xml:\n        name: member\n    members_bio:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: member\n    members_boardBackgrounds:\n      properties:\n        brightness:\n          description: \"One of: dark, light or unknown\"\n          type: string\n        file:\n          description: A file\n          type: string\n        tile:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: member\n    members_boardStars:\n      properties:\n        idBoard:\n          description: The ID of the board to star\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_boardStars_idBoard:\n      properties:\n        value:\n          description: An ID\n          type: string\n      type: object\n      xml:\n        name: member\n    members_boardStars_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_customBoardBackgrounds:\n      properties:\n        brightness:\n          description: \"One of: dark, light or unknown\"\n          type: string\n        file:\n          description: A file\n          type: string\n        tile:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: member\n    members_customEmoji:\n      properties:\n        file:\n          description: A file\n          type: string\n        name:\n          description: A string with a length from 2 to 64\n          type: string\n      type: object\n      xml:\n        name: member\n    members_customStickers:\n      properties:\n        file:\n          description: A file\n          type: string\n      type: object\n      xml:\n        name: member\n    members_fullName:\n      properties:\n        value:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_initials:\n      properties:\n        value:\n          description: A string with a length from 1 to 4.  Cannot begin or end with a space\n          type: string\n      type: object\n      xml:\n        name: member\n    members_oneTimeMessagesDismissed:\n      properties:\n        value:\n          description: Type of message dismissed\n          type: string\n      type: object\n      xml:\n        name: member\n    members_savedSearches:\n      properties:\n        name:\n          description: A non-empty string with at least one non-space character\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n        query:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: member\n    members_savedSearches_name:\n      properties:\n        value:\n          description: A non-empty string with at least one non-space character\n          type: string\n      type: object\n      xml:\n        name: member\n    members_savedSearches_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_savedSearches_query:\n      properties:\n        value:\n          description: A string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: member\n    members_username:\n      properties:\n        value:\n          description: A string with a length of at least 3.  Only lowercase letters,\n            underscores, and numbers are allowed.  Must be unique.\n          type: string\n      type: object\n      xml:\n        name: member\n    myPrefs_emailPosition:\n      properties:\n        value:\n          description: \"One of: bottom or top\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_idEmailList:\n      properties:\n        value:\n          description: An ID\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showListGuide:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showSidebar:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showSidebarActivity:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showSidebarBoardActions:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showSidebarMembers:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    notifications:\n      properties:\n        unread:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: notification\n    notifications_unread:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: notification\n    organizations:\n      properties:\n        desc:\n          description: A string with a length from 0 to 16384\n          type: string\n        displayName:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n        name:\n          description: A string with a length from 0 to 16384\n          type: string\n        # prefs/associatedDomain:\n        #   description: The google apps domain to link this org to.\n        #   type: string\n        # prefs/boardVisibilityRestrict/org:\n        #   description: \"One of: admin, none or org\"\n        #   type: string\n        # prefs/boardVisibilityRestrict/private:\n        #   description: \"One of: admin, none or org\"\n        #   type: string\n        # prefs/boardVisibilityRestrict/public:\n        #   description: \"One of: admin, none or org\"\n        #   type: string\n        # prefs/externalMembersDisabled:\n        #   description: \"True or false\"\n        #   type: string\n        # prefs/googleAppsVersion:\n        #   description: A number from 1 to 2\n        #   type: string\n        # prefs/orgInviteRestrict:\n        #   description: An email address with optional expansion tokens\n        #   type: string\n        # prefs/permissionLevel:\n        #   description: \"One of: private or public\"\n        #   type: string\n        website:\n          description: A URL starting with http:// or https:// or null\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_desc:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_displayName:\n      properties:\n        value:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_logo:\n      properties:\n        file:\n          description: A file\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_members:\n      properties:\n        email:\n          description: An email address\n          type: string\n        fullName:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n        type:\n          description: \"One of: admin, normal or observer\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_members_deactivated:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_memberships:\n      properties:\n        member_fields:\n          description: \"All or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          type: string\n        type:\n          description: \"One of: admin, normal or observer\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_name:\n      properties:\n        value:\n          description: A string with a length of at least 3.  Only lowercase letters,\n            underscores, and numbers are allowed.  Must be unique.\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_website:\n      properties:\n        value:\n          description: A URL starting with http:// or https:// or null\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_associatedDomain:\n      properties:\n        value:\n          description: The google apps domain to link this org to.\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_background:\n      properties:\n        value:\n          description: A standard background name, or the ID of a custom background\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_boardVisibilityRestrict:\n      properties:\n        value:\n          description: \"One of: admin, none or org\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_calendarFeedEnabled:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_cardAging:\n      properties:\n        value:\n          description: \"One of: pirate or regular\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_cardCovers:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_colorBlind:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: member\n    prefs_comments:\n      properties:\n        value:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_externalMembersDisabled:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_googleAppsVersion:\n      properties:\n        value:\n          description: A number from 1 to 2\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_invitations:\n      properties:\n        value:\n          description: \"One of: admins or members\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_locale:\n      properties:\n        value:\n          description: A string with a length from 0 to 255\n          type: string\n      type: object\n      xml:\n        name: member\n    prefs_minutesBetweenSummaries:\n      properties:\n        value:\n          description: -1 (disabled), 1 or 60\n          type: string\n      type: object\n      xml:\n        name: member\n    prefs_orgInviteRestrict:\n      properties:\n        value:\n          description: An email address with optional expansion tokens\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_permissionLevel:\n      properties:\n        value:\n          description: \"One of: private or public\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_selfJoin:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_voting:\n      properties:\n        value:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n      type: object\n      xml:\n        name: board\n    sessions:\n      properties:\n        idBoard:\n          description: The ID of the board you\u0026#39;re viewing.  Boards with no viewers\n            will not get updates about members\u0026#39; statuses.\n          type: string\n        status:\n          description: \"One of: active, disconnected or idle\"\n          type: string\n      type: object\n      xml:\n        name: session\n    sessions_status:\n      properties:\n        value:\n          description: \"One of: active, disconnected or idle\"\n          type: string\n      type: object\n      xml:\n        name: session\n    tokens_webhooks:\n      properties:\n        callbackURL:\n          description: A valid URL that is reachable with a HEAD request\n          type: string\n        description:\n          description: A string with a length from 0 to 16384\n          type: string\n        idModel:\n          description: ID of the model to be monitored\n          type: string\n      type: object\n      xml:\n        name: token\n    webhooks:\n      properties:\n        active:\n          description: \"True or false\"\n          type: string\n        callbackURL:\n          description: A valid URL that is reachable with a HEAD request\n          type: string\n        description:\n          description: A string with a length from 0 to 16384\n          type: string\n        idModel:\n          description: ID of the model that should be hooked\n          type: string\n      type: object\n      xml:\n        name: webhook\n    webhooks_active:\n      properties:\n        value:\n          description: \"True or false\"\n          type: string\n      type: object\n      xml:\n        name: webhook\n    webhooks_callbackURL:\n      properties:\n        value:\n          description: A valid URL that is reachable with a HEAD request\n          type: string\n      type: object\n      xml:\n        name: webhook\n    webhooks_description:\n      properties:\n        value:\n          description: A string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: webhook\n    webhooks_idModel:\n      properties:\n        value:\n          description: ID of the model to be monitored\n          type: string\n      type: object\n      xml:\n        name: webhook\n  securitySchemes:\n    api_key:\n      in: query\n      description: Represents API Key `key`\n      name: key\n      type: apiKey\n    api_token:\n      description: Represents API Key `token`\n      in: query\n      name: token\n      type: apiKey",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@331a656907cc680fb04372bd0b24a65c54b07c80/-/blob/openapi/trello/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/331a656907cc680fb04372bd0b24a65c54b07c80/openapi/trello/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at openapi/trello/openapi.yaml:797:3: duplicate path: \"/boards/{idBoard}/cards/{idCard}\""
}