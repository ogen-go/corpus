{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/didx-xyz/aries-cloudapi-python"
		},
		"file": {
			"name": "spc_682992b0411b42378592ec418619bf29.yml",
			"size": 0,
			"path": ".insomnia/ApiSpec/spc_682992b0411b42378592ec418619bf29.yml",
			"byteSize": 31480,
			"content": "_id: spc_682992b0411b42378592ec418619bf29\ntype: ApiSpec\nparentId: wrk_9834320c6b6b40d7a147c5af69483c65\nmodified: 1626176838661\ncreated: 1626164860892\nfileName: CloudApi.yaml\ncontents: \u003e-\n  openapi: 3.0.2\n\n  info:\n    title: FastAPI\n    version: 0.1.0\n  paths:\n    /admin/governance/dids/trusted-registry:\n      get:\n        tags:\n        - 'Admin: Public Dids'\n        summary: Get Trusted Registry\n        description: \"Retrieve Trusted partner list from Trust Registry\\n\\nParameters:\\n\\\n          -----------\\napi_key: Header(None)\\n    The admin API key\\n\\nReturns:\\n--------\\n\\\n          trusted_partners: [dict/JSON]\\n    List of unique trusted partners\"\n        operationId: get_trusted_registry_admin_governance_dids_trusted_registry_get\n        parameters:\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /admin/governance/dids/trusted-registry/{partner_did}:\n      get:\n        tags:\n        - 'Admin: Public Dids'\n        summary: Get Trusted Partner\n        description: \"Retrieve Trusted partner from Trust Registry\\n\\nParameters:\\n\\\n          -----------\\napi_key: Header(None)\\n    The admin API key\\n\\nReturns:\\n--------\\n\\\n          trusted_partner: dict/JSON\\n    Unique trusted partner endpoint and DID\"\n        operationId: get_trusted_partner_admin_governance_dids_trusted_registry__partner_did__get\n        parameters:\n        - required: true\n          schema:\n            title: Partner Did\n            type: string\n          name: partner_did\n          in: path\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /admin/governance/schemas/{schema_id}:\n      get:\n        tags:\n        - 'Admin: Schemas'\n        summary: Get Schema\n        operationId: get_schema_admin_governance_schemas__schema_id__get\n        parameters:\n        - required: true\n          schema:\n            title: Schema Id\n            type: string\n          name: schema_id\n          in: path\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /admin/governance/schemas/:\n      get:\n        tags:\n        - 'Admin: Schemas'\n        summary: Get Schemas\n        operationId: get_schemas_admin_governance_schemas__get\n        parameters:\n        - required: false\n          schema:\n            title: Schema Id\n            type: string\n          name: schema_id\n          in: query\n        - required: false\n          schema:\n            title: Schema Issuer Did\n            type: string\n          name: schema_issuer_did\n          in: query\n        - required: false\n          schema:\n            title: Schema Name\n            type: string\n          name: schema_name\n          in: query\n        - required: false\n          schema:\n            title: Schema Version\n            type: string\n          name: schema_version\n          in: query\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n      post:\n        tags:\n        - 'Admin: Schemas'\n        summary: Create Schema\n        operationId: create_schema_admin_governance_schemas__post\n        parameters:\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        requestBody:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SchemaDefinition'\n          required: true\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /admin/governance/credential-definitions/:\n      post:\n        tags:\n        - 'Admin: CredentialDefinitions'\n        summary: Create Credential Definition\n        operationId: create_credential_definition_admin_governance_credential_definitions__post\n        parameters:\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        requestBody:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CredentialDefinition'\n          required: true\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /admin/governance/credential-definitions/created:\n      get:\n        tags:\n        - 'Admin: CredentialDefinitions'\n        summary: Get Created Credential Definitions\n        operationId: get_created_credential_definitions_admin_governance_credential_definitions_created_get\n        parameters:\n        - required: false\n          schema:\n            title: Issuer Did\n            type: string\n          name: issuer_did\n          in: query\n        - required: false\n          schema:\n            title: Cred Def Id\n            type: string\n          name: cred_def_id\n          in: query\n        - required: false\n          schema:\n            title: Schema Id\n            type: string\n          name: schema_id\n          in: query\n        - required: false\n          schema:\n            title: Schema Issuer Did\n            type: string\n          name: schema_issuer_did\n          in: query\n        - required: false\n          schema:\n            title: Schema Name\n            type: string\n          name: schema_name\n          in: query\n        - required: false\n          schema:\n            title: Schema Version\n            type: string\n          name: schema_version\n          in: query\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /admin/governance/credential-definitions/{cred_def_id}:\n      get:\n        tags:\n        - 'Admin: CredentialDefinitions'\n        summary: Get Credential Definition\n        operationId: get_credential_definition_admin_governance_credential_definitions__cred_def_id__get\n        parameters:\n        - required: true\n          schema:\n            title: Cred Def Id\n            type: string\n          name: cred_def_id\n          in: path\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /wallets/create-pub-did:\n      get:\n        tags:\n        - 'Admin: Wallets'\n        summary: Create Public Did\n        description: \"Create a new public DID and\\nwrite it to the ledger and\\nreceive\\\n          \\ its public info.\\n\\nParameters:\\n-----------\\napi_key: Header(None)\\n  \\\n          \\  The request header object api_key\\nwallet_id: Header(None)\\n    The request\\\n          \\ header object wallet_id\\ntenant_jwt: Header(None)\\n    The request header\\\n          \\ object tenant_jwt\\n\\nReturns:\\n* DID object (json)\\n* Issuer verkey (str)\\n\\\n          * Issuer Endpoint (url)\"\n        operationId: create_public_did_wallets_create_pub_did_get\n        parameters:\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/DidCreationResponse'\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /wallets/create-wallet:\n      post:\n        tags:\n        - 'Admin: Wallets'\n        summary: Create Wallet\n        description: \"Create a new wallet\\n\\nParameters:\\n-----------\\nwallet_payload:\\\n          \\ dict\\n    The payload for creating the wallet\\n\\n\\nReturns:\\n--------\\n\\\n          The response object from creating a wallet on the ledger\\n\\nExample Request\\\n          \\ Body:\\n{\\n        \\\"image_url\\\": \\\"https://aries.ca/images/sample.png\\\"\\\n          ,\\n        \\\"key_management_mode\\\": \\\"managed\\\",\\n        \\\"label\\\": \\\"YOMA\\\"\\\n          ,\\n        \\\"wallet_dispatch_type\\\": \\\"default\\\",\\n        \\\"wallet_key\\\"\\\n          : \\\"MySecretKey1234\\\",\\n        \\\"wallet_name\\\": \\\"YOMAsWallet\\\",\\n      \\\n          \\  \\\"wallet_type\\\": \\\"indy\\\"\\n    }\"\n        operationId: create_wallet_wallets_create_wallet_post\n        parameters:\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        requestBody:\n          content:\n            application/json:\n              schema:\n                title: Wallet Payload\n                type: object\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /wallets/{wallet_id}:\n      get:\n        tags:\n        - 'Admin: Wallets'\n        summary: Get Subwallet\n        operationId: get_subwallet_wallets__wallet_id__get\n        parameters:\n        - required: true\n          schema:\n            title: Wallet Id\n            type: string\n          name: wallet_id\n          in: path\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n      post:\n        tags:\n        - 'Admin: Wallets'\n        summary: Update Subwallet\n        operationId: update_subwallet_wallets__wallet_id__post\n        parameters:\n        - required: true\n          schema:\n            title: Wallet Id\n            type: string\n          name: wallet_id\n          in: path\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        requestBody:\n          content:\n            application/json:\n              schema:\n                title: Payload\n                type: object\n          required: true\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n      delete:\n        tags:\n        - 'Admin: Wallets'\n        summary: Remove Wallet By Id\n        operationId: remove_wallet_by_id_wallets__wallet_id__delete\n        parameters:\n        - required: true\n          schema:\n            title: Wallet Id\n            type: string\n          name: wallet_id\n          in: path\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /wallets/{wallet_id}/auth-token:\n      get:\n        tags:\n        - 'Admin: Wallets'\n        summary: Get Subwallet Auth Token\n        operationId: get_subwallet_auth_token_wallets__wallet_id__auth_token_get\n        parameters:\n        - required: true\n          schema:\n            title: Wallet Id\n            type: string\n          name: wallet_id\n          in: path\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /wallets/query-subwallet:\n      get:\n        tags:\n        - 'Admin: Wallets'\n        summary: Query Subwallet\n        operationId: query_subwallet_wallets_query_subwallet_get\n        parameters:\n        - required: false\n          schema:\n            title: Wallet Name\n            type: string\n          name: wallet_name\n          in: query\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /verifier/request-proof-for-schema:\n      post:\n        tags:\n        - 'Legacy: Verifier'\n        summary: Get Proof Request\n        description: \"Request proof of a (sub) set of attributes against a schema by\\\n          \\ ID.\\nThis may contain zero-knowledge attributes.\\nThis may contain revocation\\\n          \\ of the proof.\\n\\nParameters:\\n-----------\\nconnection_id: str\\nschema_id:\\\n          \\ str\\nname_proof_request: str\\nzero_knowledge_proof: Dict = None\\nrequested_attrs:\\\n          \\ List[str] = Query(None)\\nself_attested: List[\\n    str\\n] = None,\\nrevocation:\\\n          \\ int = None,\\nexchange_tracing: bool = False,\\nreq_header: Optional[str]\\\n          \\ = Header(None),\\n\\nReturns:\\n--------\\npresentation_exchange_id: json\\n\\\n          \\    The presentation exchange ID JSON object\"\n        operationId: get_proof_request_verifier_request_proof_for_schema_post\n        parameters:\n        - required: true\n          schema:\n            title: Connection Id\n            type: string\n          name: connection_id\n          in: query\n        - required: true\n          schema:\n            title: Schema Id\n            type: string\n          name: schema_id\n          in: query\n        - required: true\n          schema:\n            title: Name Proof Request\n            type: string\n          name: name_proof_request\n          in: query\n        - required: false\n          schema:\n            title: Requested Attrs\n            type: array\n            items:\n              type: string\n          name: requested_attrs\n          in: query\n        - required: false\n          schema:\n            title: Revocation\n            type: integer\n          name: revocation\n          in: query\n        - required: false\n          schema:\n            title: Exchange Tracing\n            type: boolean\n            default: false\n          name: exchange_tracing\n          in: query\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        requestBody:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Body_get_proof_request_verifier_request_proof_for_schema_post'\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /verifier/verify-proof-request:\n      get:\n        tags:\n        - 'Legacy: Verifier'\n        summary: Verify Proof Request\n        description: \"Verify a proof request against the ledger\\n\\nParameters:\\n-----------\\n\\\n          presentation_exchange_id: str\\napi_key: Header(None)\\n    The request header\\\n          \\ object api_key\\nwallet_id: Header(None)\\n    The request header object wallet_id\\n\\\n          tenant_jwt: Header(None)\\n    The request header object tenant_jwt\\n\\nReturns:\\n\\\n          --------\\nverify: dict\\n    The json representation of the verify request\"\n        operationId: verify_proof_request_verifier_verify_proof_request_get\n        parameters:\n        - required: true\n          schema:\n            title: Presentation Exchange Id\n            type: string\n          name: presentation_exchange_id\n          in: query\n        - required: false\n          schema:\n            title: Authorization\n            type: string\n          name: authorization\n          in: header\n        - required: false\n          schema:\n            title: X-Wallet-Id\n          name: x-wallet-id\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /issuer/issue-credential:\n      get:\n        tags:\n        - 'Legacy: Issuer'\n        summary: Issue Credential\n        description: \"Issues a credential\\n\\nParameters:\\n-----------\\nschema_id: str\\n\\\n          connection_id: str\\ncredential_attrs: List[str]\\n    A list of requested credential\\\n          \\ attributes\\napi_key: Header(None)\\n    The request header object api_key\\n\\\n          wallet_id: Header(None)\\n    The request header object wallet_id\\ntenant_jwt:\\\n          \\ Header(None)\\n    The request header object tenant_jwt\"\n        operationId: issue_credential_issuer_issue_credential_get\n        parameters:\n        - required: true\n          schema:\n            title: Schema Id\n            type: string\n          name: schema_id\n          in: query\n        - required: true\n          schema:\n            title: Connection Id\n            type: string\n          name: connection_id\n          in: query\n        - required: false\n          schema:\n            title: Credential Attrs\n            type: array\n            items:\n              type: string\n          name: credential_attrs\n          in: query\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/IssueCredentialResponse'\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /issuer/connection:\n      get:\n        tags:\n        - 'Legacy: Issuer'\n        summary: Create Connection\n        description: \"Creates invitation for the holder to scan\\n\\nParameters:\\n----------\\n\\\n          api_key: Header(None)\\n    The request header object api_key\\nwallet_id: Header(None)\\n\\\n          \\    The request header object wallet_id\\ntenant_jwt: Header(None)\\n    The\\\n          \\ request header object tenant_jwt\\n\\nReturns: StreamingResponse\\n    QRCode\\\n          \\ PNG file from StreamingResponse\"\n        operationId: create_connection_issuer_connection_get\n        parameters:\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Return the JSON item or an image.\n            content:\n              application/json:\n                schema: {}\n              image/png: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /issuer/get-connection-id:\n      get:\n        tags:\n        - 'Legacy: Issuer'\n        summary: Get Connection Ids\n        description: \"Creates invitation for the holder to scan\\n\\nParameters:\\n----------\\n\\\n          api_key: Header(None)\\n    The request header object api_key\\nwallet_id: Header(None)\\n\\\n          \\    The request header object wallet_id\\ntenant_jwt: Header(None)\\n    The\\\n          \\ request header object tenant_jwt\\n\\nReturns:\\n--------\\nconnection_id: JSON\\n\\\n          \\    The request response from the ledger with all current connections\\n \\\n          \\   The 'results' key holds a [dict].\"\n        operationId: get_connection_ids_issuer_get_connection_id_get\n        parameters:\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/ConnectionIdResponse'\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /schemas/all_schemas:\n      get:\n        tags:\n        - 'Legacy: Schemas'\n        summary: Get Schema\n        description: \"Get all valid schemas from YOMA\\n\\nParameters:\\n-----------\\n\\\n          api_key: Header(None)\\n    The request header object api_key\\nwallet_id: Header(None)\\n\\\n          \\    The request header object wallet_id\\ntenant_jwt: Header(None)\\n    The\\\n          \\ request header object tenant_jwt\\n\\nReturns:\\n--------\\ncreated_schema:\\\n          \\ dict\\n    The created schema response in JSON\"\n        operationId: get_schema_schemas_all_schemas_get\n        parameters:\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /schemas/write-schema-and-credential-definition:\n      post:\n        tags:\n        - 'Legacy: Schemas'\n        summary: Write Credential Schema\n        description: \"Create schema and credential definition and\\nwrite it to the ledger.\\n\\\n          \\nParameters:\\n----------\\n* schema_name: str\\n    The name of the schema\\\n          \\ to be defined\\n* schema_version: str\\n    The version of the schema to be\\\n          \\ written\\n\\n    Should be of the form x.x.x where x is an integer\\n* schema_attributes:\\\n          \\ list, optional\\n    A list of attributes for the schema (default is None)\\n\\\n          api_key: Header(None)\\n    The request header object api_key\\nwallet_id: Header(None)\\n\\\n          \\    The request header object wallet_id\\ntenant_jwt: Header(None)\\n    The\\\n          \\ request header object tenant_jwt\\n\\nReturns:\\n--------\\nas json:\\n* schema\\n\\\n          * schema_id\\n* credential_definition\\n* credential_id\"\n        operationId: write_credential_schema_schemas_write_schema_and_credential_definition_post\n        parameters:\n        - required: true\n          schema:\n            title: Schema Name\n            type: string\n          name: schema_name\n          in: query\n        - required: true\n          schema:\n            title: Schema Version\n            type: string\n          name: schema_version\n          in: query\n        - required: false\n          schema:\n            title: Schema Attrs\n            type: array\n            items:\n              type: string\n          name: schema_attrs\n          in: query\n        - required: false\n          schema:\n            title: X-Api-Key\n            type: string\n          name: x-api-key\n          in: header\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/SchemaResponse'\n          '422':\n            description: Validation Error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/HTTPValidationError'\n    /:\n      get:\n        tags:\n        - Root\n        summary: Root\n        operationId: root__get\n        responses:\n          '200':\n            description: Successful Response\n            content:\n              application/json:\n                schema: {}\n  components:\n    schemas:\n      Body_get_proof_request_verifier_request_proof_for_schema_post:\n        title: Body_get_proof_request_verifier_request_proof_for_schema_post\n        type: object\n        properties:\n          zero_knowledge_proof:\n            title: Zero Knowledge Proof\n            type: array\n            items:\n              type: object\n          self_attested:\n            title: Self Attested\n            type: array\n            items:\n              type: string\n      ConnectionIdResponse:\n        title: ConnectionIdResponse\n        required:\n        - connection_ids\n        type: object\n        properties:\n          connection_ids:\n            title: Connection Ids\n            type: object\n      CredentialDefinition:\n        title: CredentialDefinition\n        required:\n        - tag\n        - schema_id\n        type: object\n        properties:\n          support_revocation:\n            title: Support Revocation\n            type: boolean\n          tag:\n            title: Tag\n            type: string\n          schema_id:\n            title: Schema Id\n            type: string\n      DidCreationResponse:\n        title: DidCreationResponse\n        required:\n        - did_object\n        - issuer_verkey\n        - issuer_endpoint\n        type: object\n        properties:\n          did_object:\n            title: Did Object\n            type: object\n          issuer_verkey:\n            title: Issuer Verkey\n            type: string\n          issuer_endpoint:\n            title: Issuer Endpoint\n            type: string\n      HTTPValidationError:\n        title: HTTPValidationError\n        type: object\n        properties:\n          detail:\n            title: Detail\n            type: array\n            items:\n              $ref: '#/components/schemas/ValidationError'\n      IssueCredentialResponse:\n        title: IssueCredentialResponse\n        required:\n        - credential\n        type: object\n        properties:\n          credential:\n            title: Credential\n            type: object\n      SchemaDefinition:\n        title: SchemaDefinition\n        required:\n        - name\n        - version\n        - attributes\n        type: object\n        properties:\n          name:\n            title: Name\n            type: string\n          version:\n            title: Version\n            type: string\n          attributes:\n            title: Attributes\n            type: array\n            items:\n              type: string\n      SchemaResponse:\n        title: SchemaResponse\n        required:\n        - schema_resp\n        - schema_id\n        - credential_definition\n        - credential_definition_id\n        type: object\n        properties:\n          schema_resp:\n            title: Schema Resp\n            type: object\n          schema_id:\n            title: Schema Id\n            type: string\n          credential_definition:\n            title: Credential Definition\n            type: object\n          credential_definition_id:\n            title: Credential Definition Id\n            type: string\n      ValidationError:\n        title: ValidationError\n        required:\n        - loc\n        - msg\n        - type\n        type: object\n        properties:\n          loc:\n            title: Location\n            type: array\n            items:\n              type: string\n          msg:\n            title: Message\n            type: string\n          type:\n            title: Error Type\n            type: string\ncontentType: yaml\n",
			"canonicalURL": "/github.com/didx-xyz/aries-cloudapi-python@65904db47e38e94c0fb09835156bb9a8e41bd818/-/blob/.insomnia/ApiSpec/spc_682992b0411b42378592ec418619bf29.yml",
			"externalURLs": [
				{
					"url": "https://github.com/didx-xyz/aries-cloudapi-python/blob/65904db47e38e94c0fb09835156bb9a8e41bd818/.insomnia/ApiSpec/spc_682992b0411b42378592ec418619bf29.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at .insomnia/ApiSpec/spc_682992b0411b42378592ec418619bf29.yml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}