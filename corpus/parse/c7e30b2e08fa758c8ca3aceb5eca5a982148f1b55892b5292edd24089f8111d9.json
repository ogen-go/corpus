{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sys-001/telegram-bot-api-versions"
		},
		"file": {
			"name": "v400.yaml",
			"size": 0,
			"path": "files/openapi/yaml/v400.yaml",
			"byteSize": 395970,
			"content": "openapi: 3.0.0\ninfo:\n    title: 'Telegram Bot API'\n    description: 'Auto-generated OpenAPI schema by TGScraper.'\n    version: 4.0.0\nservers:\n    -\n        url: 'https://api.telegram.org/bot{token}'\n        variables:\n            token:\n                default: '1234:AAbbcc'\n                description: \"Bot's unique authentication token, given by @BotFather.\"\nexternalDocs:\n    description: 'Official Telegram Bot API documentation.'\n    url: 'https://core.telegram.org/bots/api'\ncomponents:\n    responses:\n        BadRequest:\n            description: 'Bad request, you have provided malformed data.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        Unauthorized:\n            description: 'The authorization token is invalid or it has been revoked.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        Forbidden:\n            description: 'This action is forbidden.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        NotFound:\n            description: 'The specified resource was not found.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        Conflict:\n            description: 'There is a conflict with another instance using webhook or polling.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        TooManyRequests:\n            description: \"You're doing too many requests, retry after a while.\"\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        ServerError:\n            description: 'The bot API is experiencing some issues, try again later.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n        UnknownError:\n            description: 'An unknown error occurred.'\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Error'\n    schemas:\n        Response:\n            type: object\n            description: 'Represents the default response object.'\n            required:\n                - ok\n            properties:\n                ok:\n                    type: boolean\n        Success:\n            description: 'Request was successful, the result is returned.'\n            allOf:\n                -\n                    $ref: '#/components/schemas/Response'\n                -\n                    type: object\n                    required:\n                        - result\n                    properties:\n                        result:\n                            type: object\n        Error:\n            description: 'Request was unsuccessful, so an error occurred.'\n            allOf:\n                -\n                    $ref: '#/components/schemas/Response'\n                -\n                    type: object\n                    required:\n                        - error_code\n                        - description\n                    properties:\n                        error_code:\n                            type: integer\n                        description:\n                            type: string\n                        parameters:\n                            $ref: '#/components/schemas/ResponseParameters'\n        Update:\n            description: 'This object represents an incoming update.At most one of the optional parameters can be present in any given update.'\n            required:\n                - Field\n                - update_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                update_id:\n                    type: integer\n                message:\n                    $ref: '#/components/schemas/Message'\n                edited_message:\n                    $ref: '#/components/schemas/Message'\n                channel_post:\n                    $ref: '#/components/schemas/Message'\n                edited_channel_post:\n                    $ref: '#/components/schemas/Message'\n                inline_query:\n                    $ref: '#/components/schemas/InlineQuery'\n                chosen_inline_result:\n                    $ref: '#/components/schemas/ChosenInlineResult'\n                callback_query:\n                    $ref: '#/components/schemas/CallbackQuery'\n                shipping_query:\n                    $ref: '#/components/schemas/ShippingQuery'\n                pre_checkout_query:\n                    $ref: '#/components/schemas/PreCheckoutQuery'\n            type: object\n        WebhookInfo:\n            description: 'Contains information about the current status of a webhook.'\n            required:\n                - Field\n                - url\n                - has_custom_certificate\n                - pending_update_count\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                url:\n                    type: string\n                has_custom_certificate:\n                    type: boolean\n                pending_update_count:\n                    type: integer\n                last_error_date:\n                    type: integer\n                last_error_message:\n                    type: string\n                max_connections:\n                    type: integer\n                allowed_updates:\n                    type: array\n                    items:\n                        type: string\n            type: object\n        User:\n            description: 'This object represents a Telegram user or bot.'\n            required:\n                - Field\n                - id\n                - is_bot\n                - first_name\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: integer\n                is_bot:\n                    type: boolean\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n                username:\n                    type: string\n                language_code:\n                    type: string\n            type: object\n        Chat:\n            description: 'This object represents a chat.'\n            required:\n                - Field\n                - id\n                - type\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: integer\n                type:\n                    type: string\n                title:\n                    type: string\n                username:\n                    type: string\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n                all_members_are_administrators:\n                    type: boolean\n                photo:\n                    $ref: '#/components/schemas/ChatPhoto'\n                description:\n                    type: string\n                invite_link:\n                    type: string\n                pinned_message:\n                    $ref: '#/components/schemas/Message'\n                sticker_set_name:\n                    type: string\n                can_set_sticker_set:\n                    type: boolean\n            type: object\n        Message:\n            description: 'This object represents a message.'\n            required:\n                - Field\n                - message_id\n                - date\n                - chat\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                message_id:\n                    type: integer\n                from:\n                    $ref: '#/components/schemas/User'\n                date:\n                    type: integer\n                chat:\n                    $ref: '#/components/schemas/Chat'\n                forward_from:\n                    $ref: '#/components/schemas/User'\n                forward_from_chat:\n                    $ref: '#/components/schemas/Chat'\n                forward_from_message_id:\n                    type: integer\n                forward_signature:\n                    type: string\n                forward_date:\n                    type: integer\n                reply_to_message:\n                    $ref: '#/components/schemas/Message'\n                edit_date:\n                    type: integer\n                media_group_id:\n                    type: string\n                author_signature:\n                    type: string\n                text:\n                    type: string\n                entities:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/MessageEntity'\n                caption_entities:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/MessageEntity'\n                audio:\n                    $ref: '#/components/schemas/Audio'\n                document:\n                    $ref: '#/components/schemas/Document'\n                animation:\n                    $ref: '#/components/schemas/Animation'\n                game:\n                    $ref: '#/components/schemas/Game'\n                photo:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PhotoSize'\n                sticker:\n                    $ref: '#/components/schemas/Sticker'\n                video:\n                    $ref: '#/components/schemas/Video'\n                voice:\n                    $ref: '#/components/schemas/Voice'\n                video_note:\n                    $ref: '#/components/schemas/VideoNote'\n                caption:\n                    type: string\n                contact:\n                    $ref: '#/components/schemas/Contact'\n                location:\n                    $ref: '#/components/schemas/Location'\n                venue:\n                    $ref: '#/components/schemas/Venue'\n                new_chat_members:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/User'\n                left_chat_member:\n                    $ref: '#/components/schemas/User'\n                new_chat_title:\n                    type: string\n                new_chat_photo:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PhotoSize'\n                delete_chat_photo:\n                    type: boolean\n                    default: true\n                group_chat_created:\n                    type: boolean\n                    default: true\n                supergroup_chat_created:\n                    type: boolean\n                    default: true\n                channel_chat_created:\n                    type: boolean\n                    default: true\n                migrate_to_chat_id:\n                    type: integer\n                migrate_from_chat_id:\n                    type: integer\n                pinned_message:\n                    $ref: '#/components/schemas/Message'\n                invoice:\n                    $ref: '#/components/schemas/Invoice'\n                successful_payment:\n                    $ref: '#/components/schemas/SuccessfulPayment'\n                connected_website:\n                    type: string\n                passport_data:\n                    $ref: '#/components/schemas/PassportData'\n            type: object\n        MessageEntity:\n            description: 'This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.'\n            required:\n                - Field\n                - type\n                - offset\n                - length\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                offset:\n                    type: integer\n                length:\n                    type: integer\n                url:\n                    type: string\n                user:\n                    $ref: '#/components/schemas/User'\n            type: object\n        PhotoSize:\n            description: 'This object represents one size of a photo or a file / sticker thumbnail.'\n            required:\n                - Field\n                - file_id\n                - width\n                - height\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                file_size:\n                    type: integer\n            type: object\n        Audio:\n            description: 'This object represents an audio file to be treated as music by the Telegram clients.'\n            required:\n                - Field\n                - file_id\n                - duration\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                duration:\n                    type: integer\n                performer:\n                    type: string\n                title:\n                    type: string\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n            type: object\n        Document:\n            description: 'This object represents a general file (as opposed to photos, voice messages and audio files).'\n            required:\n                - Field\n                - file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n                file_name:\n                    type: string\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n            type: object\n        Video:\n            description: 'This object represents a video file.'\n            required:\n                - Field\n                - file_id\n                - width\n                - height\n                - duration\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                duration:\n                    type: integer\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n            type: object\n        Animation:\n            description: 'This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).'\n            required:\n                - Field\n                - file_id\n                - width\n                - height\n                - duration\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                duration:\n                    type: integer\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n                file_name:\n                    type: string\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n            type: object\n        Voice:\n            description: 'This object represents a voice note.'\n            required:\n                - Field\n                - file_id\n                - duration\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                duration:\n                    type: integer\n                mime_type:\n                    type: string\n                file_size:\n                    type: integer\n            type: object\n        VideoNote:\n            description: 'This object represents a video message (available in Telegram apps as of v.4.0).'\n            required:\n                - Field\n                - file_id\n                - length\n                - duration\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                length:\n                    type: integer\n                duration:\n                    type: integer\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n                file_size:\n                    type: integer\n            type: object\n        Contact:\n            description: 'This object represents a phone contact.'\n            required:\n                - Field\n                - phone_number\n                - first_name\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                phone_number:\n                    type: string\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n                user_id:\n                    type: integer\n                vcard:\n                    type: string\n            type: object\n        Location:\n            description: 'This object represents a point on the map.'\n            required:\n                - Field\n                - longitude\n                - latitude\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                longitude:\n                    type: number\n                latitude:\n                    type: number\n            type: object\n        Venue:\n            description: 'This object represents a venue.'\n            required:\n                - Field\n                - location\n                - title\n                - address\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                location:\n                    $ref: '#/components/schemas/Location'\n                title:\n                    type: string\n                address:\n                    type: string\n                foursquare_id:\n                    type: string\n                foursquare_type:\n                    type: string\n            type: object\n        UserProfilePhotos:\n            description: \"This object represent a user's profile pictures.\"\n            required:\n                - Field\n                - total_count\n                - photos\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                total_count:\n                    type: integer\n                photos:\n                    type: array\n                    items:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/PhotoSize'\n            type: object\n        File:\n            description: 'This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot\u003ctoken\u003e/\u003cfile_path\u003e. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile.'\n            required:\n                - Field\n                - file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                file_size:\n                    type: integer\n                file_path:\n                    type: string\n            type: object\n        ReplyKeyboardMarkup:\n            description: 'This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).'\n            required:\n                - Field\n                - keyboard\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                keyboard:\n                    type: array\n                    items:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/KeyboardButton'\n                resize_keyboard:\n                    type: boolean\n                one_time_keyboard:\n                    type: boolean\n                selective:\n                    type: boolean\n            type: object\n        KeyboardButton:\n            description: 'This object represents one button of the reply keyboard. For simple text buttons String can be used instead of this object to specify text of the button. Optional fields are mutually exclusive.'\n            required:\n                - Field\n                - text\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                text:\n                    type: string\n                request_contact:\n                    type: boolean\n                request_location:\n                    type: boolean\n            type: object\n        ReplyKeyboardRemove:\n            description: 'Upon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).'\n            required:\n                - Field\n                - remove_keyboard\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                remove_keyboard:\n                    type: boolean\n                    default: true\n                selective:\n                    type: boolean\n            type: object\n        InlineKeyboardMarkup:\n            description: 'This object represents an inline keyboard that appears right next to the message it belongs to.'\n            required:\n                - Field\n                - inline_keyboard\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                inline_keyboard:\n                    type: array\n                    items:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/InlineKeyboardButton'\n            type: object\n        InlineKeyboardButton:\n            description: 'This object represents one button of an inline keyboard. You must use exactly one of the optional fields.'\n            required:\n                - Field\n                - text\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                text:\n                    type: string\n                url:\n                    type: string\n                callback_data:\n                    type: string\n                switch_inline_query:\n                    type: string\n                switch_inline_query_current_chat:\n                    type: string\n                callback_game:\n                    $ref: '#/components/schemas/CallbackGame'\n                pay:\n                    type: boolean\n            type: object\n        CallbackQuery:\n            description: 'This object represents an incoming callback query from a callback button in an inline keyboard. If the button that originated the query was attached to a message sent by the bot, the field message will be present. If the button was attached to a message sent via the bot (in inline mode), the field inline_message_id will be present. Exactly one of the fields data or game_short_name will be present.'\n            required:\n                - Field\n                - id\n                - from\n                - chat_instance\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: string\n                from:\n                    $ref: '#/components/schemas/User'\n                message:\n                    $ref: '#/components/schemas/Message'\n                inline_message_id:\n                    type: string\n                chat_instance:\n                    type: string\n                data:\n                    type: string\n                game_short_name:\n                    type: string\n            type: object\n        ForceReply:\n            description: \"Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot‘s message and tapped ’Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode.\"\n            required:\n                - Field\n                - force_reply\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                force_reply:\n                    type: boolean\n                    default: true\n                selective:\n                    type: boolean\n            type: object\n        ChatPhoto:\n            description: 'This object represents a chat photo.'\n            required:\n                - Field\n                - small_file_id\n                - big_file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                small_file_id:\n                    type: string\n                big_file_id:\n                    type: string\n            type: object\n        ChatMember:\n            description: 'This object contains information about one member of a chat.'\n            required:\n                - Field\n                - user\n                - status\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                user:\n                    $ref: '#/components/schemas/User'\n                status:\n                    type: string\n                until_date:\n                    type: integer\n                can_be_edited:\n                    type: boolean\n                can_change_info:\n                    type: boolean\n                can_post_messages:\n                    type: boolean\n                can_edit_messages:\n                    type: boolean\n                can_delete_messages:\n                    type: boolean\n                can_invite_users:\n                    type: boolean\n                can_restrict_members:\n                    type: boolean\n                can_pin_messages:\n                    type: boolean\n                can_promote_members:\n                    type: boolean\n                can_send_messages:\n                    type: boolean\n                can_send_media_messages:\n                    type: boolean\n                can_send_other_messages:\n                    type: boolean\n                can_add_web_page_previews:\n                    type: boolean\n            type: object\n        ResponseParameters:\n            description: 'Contains information about why a request was unsuccessful.'\n            required:\n                - Field\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                migrate_to_chat_id:\n                    type: integer\n                retry_after:\n                    type: integer\n            type: object\n        InputMedia:\n            description: 'This object represents the content of a media message to be sent. It should be one of'\n            anyOf:\n                -\n                    $ref: '#/components/schemas/InputMediaAnimation'\n                -\n                    $ref: '#/components/schemas/InputMediaDocument'\n                -\n                    $ref: '#/components/schemas/InputMediaAudio'\n                -\n                    $ref: '#/components/schemas/InputMediaPhoto'\n                -\n                    $ref: '#/components/schemas/InputMediaVideo'\n        InputMediaPhoto:\n            description: 'Represents a photo to be sent.'\n            required:\n                - Field\n                - type\n                - media\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: photo\n                media:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n            type: object\n        InputMediaVideo:\n            description: 'Represents a video to be sent.'\n            required:\n                - Field\n                - type\n                - media\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: video\n                media:\n                    type: string\n                thumb:\n                    anyOf:\n                        -\n                            $ref: '#/components/schemas/InputFile'\n                        -\n                            type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                duration:\n                    type: integer\n                supports_streaming:\n                    type: boolean\n            type: object\n        InputMediaAnimation:\n            description: 'Represents an animation file (GIF or H.264/MPEG-4 AVC video without sound) to be sent.'\n            required:\n                - Field\n                - type\n                - media\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: animation\n                media:\n                    type: string\n                thumb:\n                    anyOf:\n                        -\n                            $ref: '#/components/schemas/InputFile'\n                        -\n                            type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                duration:\n                    type: integer\n            type: object\n        InputMediaAudio:\n            description: 'Represents an audio file to be treated as music to be sent.'\n            required:\n                - Field\n                - type\n                - media\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: audio\n                media:\n                    type: string\n                thumb:\n                    anyOf:\n                        -\n                            $ref: '#/components/schemas/InputFile'\n                        -\n                            type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                duration:\n                    type: integer\n                performer:\n                    type: integer\n                title:\n                    type: integer\n            type: object\n        InputMediaDocument:\n            description: 'Represents a general file to be sent.'\n            required:\n                - Field\n                - type\n                - media\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: document\n                media:\n                    type: string\n                thumb:\n                    anyOf:\n                        -\n                            $ref: '#/components/schemas/InputFile'\n                        -\n                            type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n            type: object\n        InputFile:\n            description: 'This object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.'\n            type: object\n        Sticker:\n            description: 'This object represents a sticker.'\n            required:\n                - Field\n                - file_id\n                - width\n                - height\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                width:\n                    type: integer\n                height:\n                    type: integer\n                thumb:\n                    $ref: '#/components/schemas/PhotoSize'\n                emoji:\n                    type: string\n                set_name:\n                    type: string\n                mask_position:\n                    $ref: '#/components/schemas/MaskPosition'\n                file_size:\n                    type: integer\n            type: object\n        StickerSet:\n            description: 'This object represents a sticker set.'\n            required:\n                - Field\n                - name\n                - title\n                - contains_masks\n                - stickers\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                name:\n                    type: string\n                title:\n                    type: string\n                contains_masks:\n                    type: boolean\n                stickers:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Sticker'\n            type: object\n        MaskPosition:\n            description: 'This object describes the position on faces where a mask should be placed by default.'\n            required:\n                - Field\n                - point\n                - x_shift\n                - y_shift\n                - scale\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                point:\n                    type: string\n                x_shift:\n                    type: number\n                y_shift:\n                    type: number\n                scale:\n                    type: number\n            type: object\n        InlineQuery:\n            description: 'This object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.'\n            required:\n                - Field\n                - id\n                - from\n                - query\n                - offset\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: string\n                from:\n                    $ref: '#/components/schemas/User'\n                location:\n                    $ref: '#/components/schemas/Location'\n                query:\n                    type: string\n                offset:\n                    type: string\n            type: object\n        InlineQueryResult:\n            description: 'This object represents one result of an inline query. Telegram clients currently support results of the following 20 types:'\n            anyOf:\n                -\n                    $ref: '#/components/schemas/InlineQueryResultCachedAudio'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultCachedDocument'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultCachedGif'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultCachedMpeg4Gif'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultCachedPhoto'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultCachedSticker'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultCachedVideo'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultCachedVoice'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultArticle'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultAudio'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultContact'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultGame'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultDocument'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultGif'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultLocation'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultMpeg4Gif'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultPhoto'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultVenue'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultVideo'\n                -\n                    $ref: '#/components/schemas/InlineQueryResultVoice'\n        InlineQueryResultArticle:\n            description: 'Represents a link to an article or web page.'\n            required:\n                - Field\n                - type\n                - id\n                - title\n                - input_message_content\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: article\n                id:\n                    type: string\n                title:\n                    type: string\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                url:\n                    type: string\n                hide_url:\n                    type: boolean\n                description:\n                    type: string\n                thumb_url:\n                    type: string\n                thumb_width:\n                    type: integer\n                thumb_height:\n                    type: integer\n            type: object\n        InlineQueryResultPhoto:\n            description: 'Represents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.'\n            required:\n                - Field\n                - type\n                - id\n                - photo_url\n                - thumb_url\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: photo\n                id:\n                    type: string\n                photo_url:\n                    type: string\n                thumb_url:\n                    type: string\n                photo_width:\n                    type: integer\n                photo_height:\n                    type: integer\n                title:\n                    type: string\n                description:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultGif:\n            description: 'Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.'\n            required:\n                - Field\n                - type\n                - id\n                - gif_url\n                - thumb_url\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: gif\n                id:\n                    type: string\n                gif_url:\n                    type: string\n                gif_width:\n                    type: integer\n                gif_height:\n                    type: integer\n                gif_duration:\n                    type: integer\n                thumb_url:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultMpeg4Gif:\n            description: 'Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.'\n            required:\n                - Field\n                - type\n                - id\n                - mpeg4_url\n                - thumb_url\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: mpeg4_gif\n                id:\n                    type: string\n                mpeg4_url:\n                    type: string\n                mpeg4_width:\n                    type: integer\n                mpeg4_height:\n                    type: integer\n                mpeg4_duration:\n                    type: integer\n                thumb_url:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultVideo:\n            description: 'Represents a link to a page containing an embedded video player or a video file. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.'\n            required:\n                - Field\n                - type\n                - id\n                - video_url\n                - mime_type\n                - thumb_url\n                - title\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: video\n                id:\n                    type: string\n                video_url:\n                    type: string\n                mime_type:\n                    type: string\n                thumb_url:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                video_width:\n                    type: integer\n                video_height:\n                    type: integer\n                video_duration:\n                    type: integer\n                description:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultAudio:\n            description: 'Represents a link to an mp3 audio file. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.'\n            required:\n                - Field\n                - type\n                - id\n                - audio_url\n                - title\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: audio\n                id:\n                    type: string\n                audio_url:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                performer:\n                    type: string\n                audio_duration:\n                    type: integer\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultVoice:\n            description: 'Represents a link to a voice recording in an .ogg container encoded with OPUS. By default, this voice recording will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the the voice message.'\n            required:\n                - Field\n                - type\n                - id\n                - voice_url\n                - title\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: voice\n                id:\n                    type: string\n                voice_url:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                voice_duration:\n                    type: integer\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultDocument:\n            description: 'Represents a link to a file. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file. Currently, only .PDF and .ZIP files can be sent using this method.'\n            required:\n                - Field\n                - type\n                - id\n                - title\n                - document_url\n                - mime_type\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: document\n                id:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                document_url:\n                    type: string\n                mime_type:\n                    type: string\n                description:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n                thumb_url:\n                    type: string\n                thumb_width:\n                    type: integer\n                thumb_height:\n                    type: integer\n            type: object\n        InlineQueryResultLocation:\n            description: 'Represents a location on a map. By default, the location will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the location.'\n            required:\n                - Field\n                - type\n                - id\n                - latitude\n                - longitude\n                - title\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: location\n                id:\n                    type: string\n                latitude:\n                    type: number\n                longitude:\n                    type: number\n                title:\n                    type: string\n                live_period:\n                    type: integer\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n                thumb_url:\n                    type: string\n                thumb_width:\n                    type: integer\n                thumb_height:\n                    type: integer\n            type: object\n        InlineQueryResultVenue:\n            description: 'Represents a venue. By default, the venue will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the venue.'\n            required:\n                - Field\n                - type\n                - id\n                - latitude\n                - longitude\n                - title\n                - address\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: venue\n                id:\n                    type: string\n                latitude:\n                    type: number\n                longitude:\n                    type: number\n                title:\n                    type: string\n                address:\n                    type: string\n                foursquare_id:\n                    type: string\n                foursquare_type:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n                thumb_url:\n                    type: string\n                thumb_width:\n                    type: integer\n                thumb_height:\n                    type: integer\n            type: object\n        InlineQueryResultContact:\n            description: 'Represents a contact with a phone number. By default, this contact will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the contact.'\n            required:\n                - Field\n                - type\n                - id\n                - phone_number\n                - first_name\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: contact\n                id:\n                    type: string\n                phone_number:\n                    type: string\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n                vcard:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n                thumb_url:\n                    type: string\n                thumb_width:\n                    type: integer\n                thumb_height:\n                    type: integer\n            type: object\n        InlineQueryResultGame:\n            description: 'Represents a Game.'\n            required:\n                - Field\n                - type\n                - id\n                - game_short_name\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: game\n                id:\n                    type: string\n                game_short_name:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n            type: object\n        InlineQueryResultCachedPhoto:\n            description: 'Represents a link to a photo stored on the Telegram servers. By default, this photo will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.'\n            required:\n                - Field\n                - type\n                - id\n                - photo_file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: photo\n                id:\n                    type: string\n                photo_file_id:\n                    type: string\n                title:\n                    type: string\n                description:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultCachedGif:\n            description: 'Represents a link to an animated GIF file stored on the Telegram servers. By default, this animated GIF file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with specified content instead of the animation.'\n            required:\n                - Field\n                - type\n                - id\n                - gif_file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: gif\n                id:\n                    type: string\n                gif_file_id:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultCachedMpeg4Gif:\n            description: 'Represents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.'\n            required:\n                - Field\n                - type\n                - id\n                - mpeg4_file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: mpeg4_gif\n                id:\n                    type: string\n                mpeg4_file_id:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultCachedSticker:\n            description: 'Represents a link to a sticker stored on the Telegram servers. By default, this sticker will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the sticker.'\n            required:\n                - Field\n                - type\n                - id\n                - sticker_file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: sticker\n                id:\n                    type: string\n                sticker_file_id:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultCachedDocument:\n            description: 'Represents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file.'\n            required:\n                - Field\n                - type\n                - id\n                - title\n                - document_file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: document\n                id:\n                    type: string\n                title:\n                    type: string\n                document_file_id:\n                    type: string\n                description:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultCachedVideo:\n            description: 'Represents a link to a video file stored on the Telegram servers. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.'\n            required:\n                - Field\n                - type\n                - id\n                - video_file_id\n                - title\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: video\n                id:\n                    type: string\n                video_file_id:\n                    type: string\n                title:\n                    type: string\n                description:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultCachedVoice:\n            description: 'Represents a link to a voice message stored on the Telegram servers. By default, this voice message will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the voice message.'\n            required:\n                - Field\n                - type\n                - id\n                - voice_file_id\n                - title\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: voice\n                id:\n                    type: string\n                voice_file_id:\n                    type: string\n                title:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InlineQueryResultCachedAudio:\n            description: 'Represents a link to an mp3 audio file stored on the Telegram servers. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.'\n            required:\n                - Field\n                - type\n                - id\n                - audio_file_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                    default: audio\n                id:\n                    type: string\n                audio_file_id:\n                    type: string\n                caption:\n                    type: string\n                parse_mode:\n                    type: string\n                reply_markup:\n                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                input_message_content:\n                    $ref: '#/components/schemas/InputMessageContent'\n            type: object\n        InputMessageContent:\n            description: 'This object represents the content of a message to be sent as a result of an inline query. Telegram clients currently support the following 4 types:'\n            anyOf:\n                -\n                    $ref: '#/components/schemas/InputTextMessageContent'\n                -\n                    $ref: '#/components/schemas/InputLocationMessageContent'\n                -\n                    $ref: '#/components/schemas/InputVenueMessageContent'\n                -\n                    $ref: '#/components/schemas/InputContactMessageContent'\n        InputTextMessageContent:\n            description: 'Represents the content of a text message to be sent as the result of an inline query.'\n            required:\n                - Field\n                - message_text\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                message_text:\n                    type: string\n                parse_mode:\n                    type: string\n                disable_web_page_preview:\n                    type: boolean\n            type: object\n        InputLocationMessageContent:\n            description: 'Represents the content of a location message to be sent as the result of an inline query.'\n            required:\n                - Field\n                - latitude\n                - longitude\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                latitude:\n                    type: number\n                longitude:\n                    type: number\n                live_period:\n                    type: integer\n            type: object\n        InputVenueMessageContent:\n            description: 'Represents the content of a venue message to be sent as the result of an inline query.'\n            required:\n                - Field\n                - latitude\n                - longitude\n                - title\n                - address\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                latitude:\n                    type: number\n                longitude:\n                    type: number\n                title:\n                    type: string\n                address:\n                    type: string\n                foursquare_id:\n                    type: string\n                foursquare_type:\n                    type: string\n            type: object\n        InputContactMessageContent:\n            description: 'Represents the content of a contact message to be sent as the result of an inline query.'\n            required:\n                - Field\n                - phone_number\n                - first_name\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                phone_number:\n                    type: string\n                first_name:\n                    type: string\n                last_name:\n                    type: string\n                vcard:\n                    type: string\n            type: object\n        ChosenInlineResult:\n            description: 'Represents a result of an inline query that was chosen by the user and sent to their chat partner.'\n            required:\n                - Field\n                - result_id\n                - from\n                - query\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                result_id:\n                    type: string\n                from:\n                    $ref: '#/components/schemas/User'\n                location:\n                    $ref: '#/components/schemas/Location'\n                inline_message_id:\n                    type: string\n                query:\n                    type: string\n            type: object\n        LabeledPrice:\n            description: 'This object represents a portion of the price for goods or services.'\n            required:\n                - Field\n                - label\n                - amount\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                label:\n                    type: string\n                amount:\n                    type: integer\n            type: object\n        Invoice:\n            description: 'This object contains basic information about an invoice.'\n            required:\n                - Field\n                - title\n                - description\n                - start_parameter\n                - currency\n                - total_amount\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                title:\n                    type: string\n                description:\n                    type: string\n                start_parameter:\n                    type: string\n                currency:\n                    type: string\n                total_amount:\n                    type: integer\n            type: object\n        ShippingAddress:\n            description: 'This object represents a shipping address.'\n            required:\n                - Field\n                - country_code\n                - state\n                - city\n                - street_line1\n                - street_line2\n                - post_code\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                country_code:\n                    type: string\n                state:\n                    type: string\n                city:\n                    type: string\n                street_line1:\n                    type: string\n                street_line2:\n                    type: string\n                post_code:\n                    type: string\n            type: object\n        OrderInfo:\n            description: 'This object represents information about an order.'\n            required:\n                - Field\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                name:\n                    type: string\n                phone_number:\n                    type: string\n                email:\n                    type: string\n                shipping_address:\n                    $ref: '#/components/schemas/ShippingAddress'\n            type: object\n        ShippingOption:\n            description: 'This object represents one shipping option.'\n            required:\n                - Field\n                - id\n                - title\n                - prices\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: string\n                title:\n                    type: string\n                prices:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/LabeledPrice'\n            type: object\n        SuccessfulPayment:\n            description: 'This object contains basic information about a successful payment.'\n            required:\n                - Field\n                - currency\n                - total_amount\n                - invoice_payload\n                - telegram_payment_charge_id\n                - provider_payment_charge_id\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                currency:\n                    type: string\n                total_amount:\n                    type: integer\n                invoice_payload:\n                    type: string\n                shipping_option_id:\n                    type: string\n                order_info:\n                    $ref: '#/components/schemas/OrderInfo'\n                telegram_payment_charge_id:\n                    type: string\n                provider_payment_charge_id:\n                    type: string\n            type: object\n        ShippingQuery:\n            description: 'This object contains information about an incoming shipping query.'\n            required:\n                - Field\n                - id\n                - from\n                - invoice_payload\n                - shipping_address\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: string\n                from:\n                    $ref: '#/components/schemas/User'\n                invoice_payload:\n                    type: string\n                shipping_address:\n                    $ref: '#/components/schemas/ShippingAddress'\n            type: object\n        PreCheckoutQuery:\n            description: 'This object contains information about an incoming pre-checkout query.'\n            required:\n                - Field\n                - id\n                - from\n                - currency\n                - total_amount\n                - invoice_payload\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                id:\n                    type: string\n                from:\n                    $ref: '#/components/schemas/User'\n                currency:\n                    type: string\n                total_amount:\n                    type: integer\n                invoice_payload:\n                    type: string\n                shipping_option_id:\n                    type: string\n                order_info:\n                    $ref: '#/components/schemas/OrderInfo'\n            type: object\n        PassportData:\n            description: 'Contains information about Telegram Passport data shared with the bot by the user.'\n            required:\n                - Parameters\n                - data\n                - credentials\n            properties:\n                Parameters:\n                    $ref: '#/components/schemas/Type'\n                data:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/EncryptedPassportElement'\n                credentials:\n                    $ref: '#/components/schemas/EncryptedCredentials'\n            type: object\n        PassportFile:\n            description: \"This object represents a file uploaded to Telegram Passport. Currently all Telegram Passport files are in JPEG format when decrypted and don't exceed 10MB.\"\n            required:\n                - Field\n                - file_id\n                - file_size\n                - file_date\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                file_id:\n                    type: string\n                file_size:\n                    type: integer\n                file_date:\n                    type: integer\n            type: object\n        EncryptedPassportElement:\n            description: 'Contains information about documents or other Telegram Passport elements shared with the bot by the user.'\n            required:\n                - Parameters\n                - type\n            properties:\n                Parameters:\n                    $ref: '#/components/schemas/Type'\n                type:\n                    type: string\n                data:\n                    type: string\n                phone_number:\n                    type: string\n                email:\n                    type: string\n                files:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PassportFile'\n                front_side:\n                    $ref: '#/components/schemas/PassportFile'\n                reverse_side:\n                    $ref: '#/components/schemas/PassportFile'\n                selfie:\n                    $ref: '#/components/schemas/PassportFile'\n            type: object\n        EncryptedCredentials:\n            description: 'Contains data required for decrypting and authenticating EncryptedPassportElement. See the Telegram Passport Documentation for a complete description of the data decryption and authentication processes.'\n            required:\n                - Parameters\n                - data\n                - hash\n                - secret\n            properties:\n                Parameters:\n                    $ref: '#/components/schemas/Type'\n                data:\n                    type: string\n                hash:\n                    type: string\n                secret:\n                    type: string\n            type: object\n        PassportElementError:\n            description: 'This object represents an error in the Telegram Passport element which was submitted that should be resolved by the user. It should be one of:'\n            anyOf:\n                -\n                    $ref: '#/components/schemas/PassportElementErrorDataField'\n                -\n                    $ref: '#/components/schemas/PassportElementErrorFrontSide'\n                -\n                    $ref: '#/components/schemas/PassportElementErrorReverseSide'\n                -\n                    $ref: '#/components/schemas/PassportElementErrorSelfie'\n                -\n                    $ref: '#/components/schemas/PassportElementErrorFile'\n                -\n                    $ref: '#/components/schemas/PassportElementErrorFiles'\n        PassportElementErrorDataField:\n            description: \"Represents an issue in one of the data fields that was provided by the user. The error is considered resolved when the field's value changes.\"\n            required:\n                - Field\n                - source\n                - type\n                - field_name\n                - data_hash\n                - message\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                source:\n                    type: string\n                    default: data\n                type:\n                    type: string\n                field_name:\n                    type: string\n                data_hash:\n                    type: string\n                message:\n                    type: string\n            type: object\n        PassportElementErrorFrontSide:\n            description: 'Represents an issue with the front side of a document. The error is considered resolved when the file with the front side of the document changes.'\n            required:\n                - Field\n                - source\n                - type\n                - file_hash\n                - message\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                source:\n                    type: string\n                    default: front_side\n                type:\n                    type: string\n                file_hash:\n                    type: string\n                message:\n                    type: string\n            type: object\n        PassportElementErrorReverseSide:\n            description: 'Represents an issue with the reverse side of a document. The error is considered resolved when the file with reverse side of the document changes.'\n            required:\n                - Field\n                - source\n                - type\n                - file_hash\n                - message\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                source:\n                    type: string\n                    default: reverse_side\n                type:\n                    type: string\n                file_hash:\n                    type: string\n                message:\n                    type: string\n            type: object\n        PassportElementErrorSelfie:\n            description: 'Represents an issue with the selfie with a document. The error is considered resolved when the file with the selfie changes.'\n            required:\n                - Field\n                - source\n                - type\n                - file_hash\n                - message\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                source:\n                    type: string\n                    default: selfie\n                type:\n                    type: string\n                file_hash:\n                    type: string\n                message:\n                    type: string\n            type: object\n        PassportElementErrorFile:\n            description: 'Represents an issue with a document scan. The error is considered resolved when the file with the document scan changes.'\n            required:\n                - Field\n                - source\n                - type\n                - file_hash\n                - message\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                source:\n                    type: string\n                    default: file\n                type:\n                    type: string\n                file_hash:\n                    type: string\n                message:\n                    type: string\n            type: object\n        PassportElementErrorFiles:\n            description: 'Represents an issue with a list of scans. The error is considered resolved when the list of files containing the scans changes.'\n            required:\n                - Field\n                - source\n                - type\n                - file_hashes\n                - message\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                source:\n                    type: string\n                    default: files\n                type:\n                    type: string\n                file_hashes:\n                    type: array\n                    items:\n                        type: string\n                message:\n                    type: string\n            type: object\n        Game:\n            description: 'This object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers.'\n            required:\n                - Field\n                - title\n                - description\n                - photo\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                title:\n                    type: string\n                description:\n                    type: string\n                photo:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PhotoSize'\n                text:\n                    type: string\n                text_entities:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/MessageEntity'\n                animation:\n                    $ref: '#/components/schemas/Animation'\n            type: object\n        CallbackGame:\n            description: 'A placeholder, currently holds no information. Use BotFather to set up your game.'\n            type: object\n        GameHighScore:\n            description: 'This object represents one row of the high scores table for a game.'\n            required:\n                - Field\n                - position\n                - user\n                - score\n            properties:\n                Field:\n                    $ref: '#/components/schemas/Type'\n                position:\n                    type: integer\n                user:\n                    $ref: '#/components/schemas/User'\n                score:\n                    type: integer\n            type: object\npaths:\n    /getUpdates:\n        description: 'Use this method to receive incoming updates using long polling (wiki). An Array of Update objects is returned.'\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                                timeout:\n                                    type: integer\n                                allowed_updates:\n                                    type: array\n                                    items:\n                                        type: string\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                                timeout:\n                                    type: integer\n                                allowed_updates:\n                                    type: array\n                                    items:\n                                        type: string\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                                timeout:\n                                    type: integer\n                                allowed_updates:\n                                    type: array\n                                    items:\n                                        type: string\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: array\n                                                items:\n                                                    $ref: '#/components/schemas/Update'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setWebhook:\n        description: \"Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts. Returns True on success.\\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. https://www.example.com/\u003ctoken\u003e. Since nobody else knows your bot‘s token, you can be pretty sure it’s us.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                url:\n                                    type: string\n                                certificate:\n                                    $ref: '#/components/schemas/InputFile'\n                                max_connections:\n                                    type: integer\n                                    default: 40\n                                allowed_updates:\n                                    type: array\n                                    items:\n                                        type: string\n                            required:\n                                - url\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                url:\n                                    type: string\n                                certificate:\n                                    $ref: '#/components/schemas/InputFile'\n                                max_connections:\n                                    type: integer\n                                    default: 40\n                                allowed_updates:\n                                    type: array\n                                    items:\n                                        type: string\n                            required:\n                                - url\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                url:\n                                    type: string\n                                certificate:\n                                    $ref: '#/components/schemas/InputFile'\n                                max_connections:\n                                    type: integer\n                                    default: 40\n                                allowed_updates:\n                                    type: array\n                                    items:\n                                        type: string\n                            required:\n                                - url\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /deleteWebhook:\n        description: 'Use this method to remove webhook integration if you decide to switch back to getUpdates. Returns True on success. Requires no parameters.'\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                    multipart/form-data:\n                        schema:\n                            type: object\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getWebhookInfo:\n        description: 'Use this method to get current webhook status. Requires no parameters. On success, returns a WebhookInfo object. If the bot is using getUpdates, will return an object with the url field empty.'\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                    multipart/form-data:\n                        schema:\n                            type: object\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/WebhookInfo'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getMe:\n        description: \"A simple method for testing your bot's auth token. Requires no parameters. Returns basic information about the bot in form of a User object.\"\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                    multipart/form-data:\n                        schema:\n                            type: object\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/User'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendMessage:\n        description: 'Use this method to send text messages. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - text\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - text\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - text\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /forwardMessage:\n        description: 'Use this method to forward messages of any kind. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                from_chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - from_chat_id\n                                - message_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                from_chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - from_chat_id\n                                - message_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                from_chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - from_chat_id\n                                - message_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendPhoto:\n        description: 'Use this method to send photos. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - photo\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - photo\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - photo\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendAudio:\n        description: \"Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format. On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\\nFor sending voice messages, use the sendVoice method instead.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                audio:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                duration:\n                                    type: integer\n                                performer:\n                                    type: string\n                                title:\n                                    type: string\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - audio\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                audio:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                duration:\n                                    type: integer\n                                performer:\n                                    type: string\n                                title:\n                                    type: string\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - audio\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                audio:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                duration:\n                                    type: integer\n                                performer:\n                                    type: string\n                                title:\n                                    type: string\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - audio\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendDocument:\n        description: 'Use this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                document:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - document\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                document:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - document\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                document:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - document\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendVideo:\n        description: 'Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                width:\n                                    type: integer\n                                height:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                supports_streaming:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                width:\n                                    type: integer\n                                height:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                supports_streaming:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                width:\n                                    type: integer\n                                height:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                supports_streaming:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendAnimation:\n        description: 'Use this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent Message is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                animation:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                width:\n                                    type: integer\n                                height:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - animation\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                animation:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                width:\n                                    type: integer\n                                height:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - animation\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                animation:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                width:\n                                    type: integer\n                                height:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - animation\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendVoice:\n        description: 'Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                voice:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                duration:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - voice\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                voice:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                duration:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - voice\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                voice:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                duration:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - voice\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendVideoNote:\n        description: 'As of v.4.0, Telegram clients support rounded square mp4 videos of up to 1 minute long. Use this method to send video messages. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video_note:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                length:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video_note\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video_note:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                length:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video_note\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                video_note:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                duration:\n                                    type: integer\n                                length:\n                                    type: integer\n                                thumb:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - video_note\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendMediaGroup:\n        description: 'Use this method to send a group of photos or videos as an album. On success, an array of the sent Messages is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                media:\n                                    type: array\n                                    items:\n                                        anyOf:\n                                            -\n                                                $ref: '#/components/schemas/InputMediaPhoto'\n                                            -\n                                                $ref: '#/components/schemas/InputMediaVideo'\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - media\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                media:\n                                    type: array\n                                    items:\n                                        anyOf:\n                                            -\n                                                $ref: '#/components/schemas/InputMediaPhoto'\n                                            -\n                                                $ref: '#/components/schemas/InputMediaVideo'\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - media\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                media:\n                                    type: array\n                                    items:\n                                        anyOf:\n                                            -\n                                                $ref: '#/components/schemas/InputMediaPhoto'\n                                            -\n                                                $ref: '#/components/schemas/InputMediaVideo'\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - media\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: array\n                                                items:\n                                                    $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendLocation:\n        description: 'Use this method to send point on the map. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                live_period:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                live_period:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                live_period:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /editMessageLiveLocation:\n        description: 'Use this method to edit live location messages sent by the bot or via the bot (for inline bots). A location can be edited until its live_period expires or editing is explicitly disabled by a call to stopMessageLiveLocation. On success, if the edited message was sent by the bot, the edited Message is returned, otherwise True is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - latitude\n                                - longitude\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - latitude\n                                - longitude\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - latitude\n                                - longitude\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                anyOf:\n                                                    -\n                                                        $ref: '#/components/schemas/Message'\n                                                    -\n                                                        type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /stopMessageLiveLocation:\n        description: 'Use this method to stop updating a live location message sent by the bot or via the bot (for inline bots) before live_period expires. On success, if the message was sent by the bot, the sent Message is returned, otherwise True is returned.'\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                anyOf:\n                                                    -\n                                                        $ref: '#/components/schemas/Message'\n                                                    -\n                                                        type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendVenue:\n        description: 'Use this method to send information about a venue. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                title:\n                                    type: string\n                                address:\n                                    type: string\n                                foursquare_id:\n                                    type: string\n                                foursquare_type:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n                                - title\n                                - address\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                title:\n                                    type: string\n                                address:\n                                    type: string\n                                foursquare_id:\n                                    type: string\n                                foursquare_type:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n                                - title\n                                - address\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                latitude:\n                                    type: number\n                                longitude:\n                                    type: number\n                                title:\n                                    type: string\n                                address:\n                                    type: string\n                                foursquare_id:\n                                    type: string\n                                foursquare_type:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - latitude\n                                - longitude\n                                - title\n                                - address\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendContact:\n        description: 'Use this method to send phone contacts. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                phone_number:\n                                    type: string\n                                first_name:\n                                    type: string\n                                last_name:\n                                    type: string\n                                vcard:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - phone_number\n                                - first_name\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                phone_number:\n                                    type: string\n                                first_name:\n                                    type: string\n                                last_name:\n                                    type: string\n                                vcard:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - phone_number\n                                - first_name\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                phone_number:\n                                    type: string\n                                first_name:\n                                    type: string\n                                last_name:\n                                    type: string\n                                vcard:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - phone_number\n                                - first_name\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendChatAction:\n        description: \"Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns True on success.\\nWe only recommend using this method when a response from the bot will take a noticeable amount of time to arrive.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                action:\n                                    type: string\n                            required:\n                                - chat_id\n                                - action\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                action:\n                                    type: string\n                            required:\n                                - chat_id\n                                - action\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                action:\n                                    type: string\n                            required:\n                                - chat_id\n                                - action\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getUserProfilePhotos:\n        description: 'Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                            required:\n                                - user_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                            required:\n                                - user_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                offset:\n                                    type: integer\n                                limit:\n                                    type: integer\n                                    default: 100\n                            required:\n                                - user_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/UserProfilePhotos'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getFile:\n        description: 'Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a File object is returned. The file can then be downloaded via the link https://api.telegram.org/file/bot\u003ctoken\u003e/\u003cfile_path\u003e, where \u003cfile_path\u003e is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile again.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                file_id:\n                                    type: string\n                            required:\n                                - file_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                file_id:\n                                    type: string\n                            required:\n                                - file_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                file_id:\n                                    type: string\n                            required:\n                                - file_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/File'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /kickChatMember:\n        description: 'Use this method to kick a user from a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the group on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                until_date:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                until_date:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                until_date:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /unbanChatMember:\n        description: 'Use this method to unban a previously kicked user in a supergroup or channel. The user will not return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /restrictChatMember:\n        description: 'Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate admin rights. Pass True for all boolean parameters to lift restrictions from a user. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                until_date:\n                                    type: integer\n                                can_send_messages:\n                                    type: boolean\n                                can_send_media_messages:\n                                    type: boolean\n                                can_send_other_messages:\n                                    type: boolean\n                                can_add_web_page_previews:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - user_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                until_date:\n                                    type: integer\n                                can_send_messages:\n                                    type: boolean\n                                can_send_media_messages:\n                                    type: boolean\n                                can_send_other_messages:\n                                    type: boolean\n                                can_add_web_page_previews:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - user_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                until_date:\n                                    type: integer\n                                can_send_messages:\n                                    type: boolean\n                                can_send_media_messages:\n                                    type: boolean\n                                can_send_other_messages:\n                                    type: boolean\n                                can_add_web_page_previews:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - user_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /promoteChatMember:\n        description: 'Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Pass False for all boolean parameters to demote a user. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                can_change_info:\n                                    type: boolean\n                                can_post_messages:\n                                    type: boolean\n                                can_edit_messages:\n                                    type: boolean\n                                can_delete_messages:\n                                    type: boolean\n                                can_invite_users:\n                                    type: boolean\n                                can_restrict_members:\n                                    type: boolean\n                                can_pin_messages:\n                                    type: boolean\n                                can_promote_members:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - user_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                can_change_info:\n                                    type: boolean\n                                can_post_messages:\n                                    type: boolean\n                                can_edit_messages:\n                                    type: boolean\n                                can_delete_messages:\n                                    type: boolean\n                                can_invite_users:\n                                    type: boolean\n                                can_restrict_members:\n                                    type: boolean\n                                can_pin_messages:\n                                    type: boolean\n                                can_promote_members:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - user_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                                can_change_info:\n                                    type: boolean\n                                can_post_messages:\n                                    type: boolean\n                                can_edit_messages:\n                                    type: boolean\n                                can_delete_messages:\n                                    type: boolean\n                                can_invite_users:\n                                    type: boolean\n                                can_restrict_members:\n                                    type: boolean\n                                can_pin_messages:\n                                    type: boolean\n                                can_promote_members:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - user_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /exportChatInviteLink:\n        description: 'Use this method to generate a new invite link for a chat; any previously generated link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns the new invite link as String on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: string\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setChatPhoto:\n        description: \"Use this method to set a new profile photo for the chat. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns True on success.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    $ref: '#/components/schemas/InputFile'\n                            required:\n                                - chat_id\n                                - photo\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    $ref: '#/components/schemas/InputFile'\n                            required:\n                                - chat_id\n                                - photo\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                photo:\n                                    $ref: '#/components/schemas/InputFile'\n                            required:\n                                - chat_id\n                                - photo\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /deleteChatPhoto:\n        description: \"Use this method to delete a chat photo. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns True on success.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setChatTitle:\n        description: \"Use this method to change the title of a chat. Titles can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns True on success.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                title:\n                                    type: string\n                            required:\n                                - chat_id\n                                - title\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                title:\n                                    type: string\n                            required:\n                                - chat_id\n                                - title\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                title:\n                                    type: string\n                            required:\n                                - chat_id\n                                - title\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setChatDescription:\n        description: 'Use this method to change the description of a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                description:\n                                    type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                description:\n                                    type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                description:\n                                    type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /pinChatMessage:\n        description: 'Use this method to pin a message in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the ‘can_pin_messages’ admin right in the supergroup or ‘can_edit_messages’ admin right in the channel. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - message_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - message_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                disable_notification:\n                                    type: boolean\n                            required:\n                                - chat_id\n                                - message_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /unpinChatMessage:\n        description: 'Use this method to unpin a message in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the ‘can_pin_messages’ admin right in the supergroup or ‘can_edit_messages’ admin right in the channel. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /leaveChat:\n        description: 'Use this method for your bot to leave a group, supergroup or channel. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getChat:\n        description: 'Use this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a Chat object on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Chat'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getChatAdministrators:\n        description: 'Use this method to get a list of administrators in a chat. On success, returns an Array of ChatMember objects that contains information about all chat administrators except other bots. If the chat is a group or a supergroup and no administrators were appointed, only the creator will be returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: array\n                                                items:\n                                                    $ref: '#/components/schemas/ChatMember'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getChatMembersCount:\n        description: 'Use this method to get the number of members in a chat. Returns Int on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: integer\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getChatMember:\n        description: 'Use this method to get information about a member of a chat. Returns a ChatMember object on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                user_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - user_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/ChatMember'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setChatStickerSet:\n        description: 'Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field can_set_sticker_set optionally returned in getChat requests to check if the bot can use this method. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker_set_name:\n                                    type: string\n                            required:\n                                - chat_id\n                                - sticker_set_name\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker_set_name:\n                                    type: string\n                            required:\n                                - chat_id\n                                - sticker_set_name\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker_set_name:\n                                    type: string\n                            required:\n                                - chat_id\n                                - sticker_set_name\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /deleteChatStickerSet:\n        description: 'Use this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Use the field can_set_sticker_set optionally returned in getChat requests to check if the bot can use this method. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                            required:\n                                - chat_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /answerCallbackQuery:\n        description: 'Use this method to send answers to callback queries sent from inline keyboards. The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, True is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                callback_query_id:\n                                    type: string\n                                text:\n                                    type: string\n                                show_alert:\n                                    type: boolean\n                                url:\n                                    type: string\n                                cache_time:\n                                    type: integer\n                            required:\n                                - callback_query_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                callback_query_id:\n                                    type: string\n                                text:\n                                    type: string\n                                show_alert:\n                                    type: boolean\n                                url:\n                                    type: string\n                                cache_time:\n                                    type: integer\n                            required:\n                                - callback_query_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                callback_query_id:\n                                    type: string\n                                text:\n                                    type: string\n                                show_alert:\n                                    type: boolean\n                                url:\n                                    type: string\n                                cache_time:\n                                    type: integer\n                            required:\n                                - callback_query_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /editMessageText:\n        description: 'Use this method to edit text and game messages sent by the bot or via the bot (for inline bots). On success, if edited message is sent by the bot, the edited Message is returned, otherwise True is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - text\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - text\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                text:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                disable_web_page_preview:\n                                    type: boolean\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - text\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                anyOf:\n                                                    -\n                                                        $ref: '#/components/schemas/Message'\n                                                    -\n                                                        type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /editMessageCaption:\n        description: 'Use this method to edit captions of messages sent by the bot or via the bot (for inline bots). On success, if edited message is sent by the bot, the edited Message is returned, otherwise True is returned.'\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                caption:\n                                    type: string\n                                parse_mode:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                anyOf:\n                                                    -\n                                                        $ref: '#/components/schemas/Message'\n                                                    -\n                                                        type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /editMessageMedia:\n        description: \"Use this method to edit audio, document, photo, or video messages. If a message is a part of a message album, then it can be edited only to a photo or a video. Otherwise, message type can be changed arbitrarily. When inline message is edited, new file can't be uploaded. Use previously uploaded file via its file_id or specify a URL. On success, if the edited message was sent by the bot, the edited Message is returned, otherwise True is returned.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                media:\n                                    $ref: '#/components/schemas/InputMedia'\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - media\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                media:\n                                    $ref: '#/components/schemas/InputMedia'\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - media\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                media:\n                                    $ref: '#/components/schemas/InputMedia'\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - media\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                anyOf:\n                                                    -\n                                                        $ref: '#/components/schemas/Message'\n                                                    -\n                                                        type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /editMessageReplyMarkup:\n        description: 'Use this method to edit only the reply markup of messages sent by the bot or via the bot (for inline bots).  On success, if edited message is sent by the bot, the edited Message is returned, otherwise True is returned.'\n        post:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                anyOf:\n                                                    -\n                                                        $ref: '#/components/schemas/Message'\n                                                    -\n                                                        type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /deleteMessage:\n        description: 'Use this method to delete a message, including service messages, with the following limitations:- A message can only be deleted if it was sent less than 48 hours ago.- Bots can delete outgoing messages in groups and supergroups.- Bots granted can_post_messages permissions can delete outgoing messages in channels.- If the bot is an administrator of a group, it can delete any message there.- If the bot has can_delete_messages permission in a supergroup or a channel, it can delete any message there.Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - message_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - message_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                message_id:\n                                    type: integer\n                            required:\n                                - chat_id\n                                - message_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendSticker:\n        description: 'Use this method to send .webp stickers. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - sticker\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - sticker\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    anyOf:\n                                        -\n                                            type: integer\n                                        -\n                                            type: string\n                                sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InlineKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardMarkup'\n                                        -\n                                            $ref: '#/components/schemas/ReplyKeyboardRemove'\n                                        -\n                                            $ref: '#/components/schemas/ForceReply'\n                            required:\n                                - chat_id\n                                - sticker\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getStickerSet:\n        description: 'Use this method to get a sticker set. On success, a StickerSet object is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                name:\n                                    type: string\n                            required:\n                                - name\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                name:\n                                    type: string\n                            required:\n                                - name\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                name:\n                                    type: string\n                            required:\n                                - name\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/StickerSet'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /uploadStickerFile:\n        description: 'Use this method to upload a .png file with a sticker for later use in createNewStickerSet and addStickerToSet methods (can be used multiple times). Returns the uploaded File on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                png_sticker:\n                                    $ref: '#/components/schemas/InputFile'\n                            required:\n                                - user_id\n                                - png_sticker\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                png_sticker:\n                                    $ref: '#/components/schemas/InputFile'\n                            required:\n                                - user_id\n                                - png_sticker\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                png_sticker:\n                                    $ref: '#/components/schemas/InputFile'\n                            required:\n                                - user_id\n                                - png_sticker\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/File'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /createNewStickerSet:\n        description: 'Use this method to create new sticker set owned by a user. The bot will be able to edit the created sticker set. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                name:\n                                    type: string\n                                title:\n                                    type: string\n                                png_sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                emojis:\n                                    type: string\n                                contains_masks:\n                                    type: boolean\n                                mask_position:\n                                    $ref: '#/components/schemas/MaskPosition'\n                            required:\n                                - user_id\n                                - name\n                                - title\n                                - png_sticker\n                                - emojis\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                name:\n                                    type: string\n                                title:\n                                    type: string\n                                png_sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                emojis:\n                                    type: string\n                                contains_masks:\n                                    type: boolean\n                                mask_position:\n                                    $ref: '#/components/schemas/MaskPosition'\n                            required:\n                                - user_id\n                                - name\n                                - title\n                                - png_sticker\n                                - emojis\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                name:\n                                    type: string\n                                title:\n                                    type: string\n                                png_sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                emojis:\n                                    type: string\n                                contains_masks:\n                                    type: boolean\n                                mask_position:\n                                    $ref: '#/components/schemas/MaskPosition'\n                            required:\n                                - user_id\n                                - name\n                                - title\n                                - png_sticker\n                                - emojis\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /addStickerToSet:\n        description: 'Use this method to add a new sticker to a set created by the bot. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                name:\n                                    type: string\n                                png_sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                emojis:\n                                    type: string\n                                mask_position:\n                                    $ref: '#/components/schemas/MaskPosition'\n                            required:\n                                - user_id\n                                - name\n                                - png_sticker\n                                - emojis\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                name:\n                                    type: string\n                                png_sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                emojis:\n                                    type: string\n                                mask_position:\n                                    $ref: '#/components/schemas/MaskPosition'\n                            required:\n                                - user_id\n                                - name\n                                - png_sticker\n                                - emojis\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                name:\n                                    type: string\n                                png_sticker:\n                                    anyOf:\n                                        -\n                                            $ref: '#/components/schemas/InputFile'\n                                        -\n                                            type: string\n                                emojis:\n                                    type: string\n                                mask_position:\n                                    $ref: '#/components/schemas/MaskPosition'\n                            required:\n                                - user_id\n                                - name\n                                - png_sticker\n                                - emojis\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setStickerPositionInSet:\n        description: 'Use this method to move a sticker in a set created by the bot to a specific position . Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                sticker:\n                                    type: string\n                                position:\n                                    type: integer\n                            required:\n                                - sticker\n                                - position\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                sticker:\n                                    type: string\n                                position:\n                                    type: integer\n                            required:\n                                - sticker\n                                - position\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                sticker:\n                                    type: string\n                                position:\n                                    type: integer\n                            required:\n                                - sticker\n                                - position\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /deleteStickerFromSet:\n        description: 'Use this method to delete a sticker from a set created by the bot. Returns True on success.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                sticker:\n                                    type: string\n                            required:\n                                - sticker\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                sticker:\n                                    type: string\n                            required:\n                                - sticker\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                sticker:\n                                    type: string\n                            required:\n                                - sticker\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /answerInlineQuery:\n        description: 'Use this method to send answers to an inline query. On success, True is returned.No more than 50 results per query are allowed.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                inline_query_id:\n                                    type: string\n                                results:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/InlineQueryResult'\n                                cache_time:\n                                    type: integer\n                                    default: 300\n                                is_personal:\n                                    type: boolean\n                                next_offset:\n                                    type: string\n                                switch_pm_text:\n                                    type: string\n                                switch_pm_parameter:\n                                    type: string\n                            required:\n                                - inline_query_id\n                                - results\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                inline_query_id:\n                                    type: string\n                                results:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/InlineQueryResult'\n                                cache_time:\n                                    type: integer\n                                    default: 300\n                                is_personal:\n                                    type: boolean\n                                next_offset:\n                                    type: string\n                                switch_pm_text:\n                                    type: string\n                                switch_pm_parameter:\n                                    type: string\n                            required:\n                                - inline_query_id\n                                - results\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                inline_query_id:\n                                    type: string\n                                results:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/InlineQueryResult'\n                                cache_time:\n                                    type: integer\n                                    default: 300\n                                is_personal:\n                                    type: boolean\n                                next_offset:\n                                    type: string\n                                switch_pm_text:\n                                    type: string\n                                switch_pm_parameter:\n                                    type: string\n                            required:\n                                - inline_query_id\n                                - results\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendInvoice:\n        description: 'Use this method to send invoices. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    type: integer\n                                title:\n                                    type: string\n                                description:\n                                    type: string\n                                payload:\n                                    type: string\n                                provider_token:\n                                    type: string\n                                start_parameter:\n                                    type: string\n                                currency:\n                                    type: string\n                                prices:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/LabeledPrice'\n                                provider_data:\n                                    type: string\n                                photo_url:\n                                    type: string\n                                photo_size:\n                                    type: integer\n                                photo_width:\n                                    type: integer\n                                photo_height:\n                                    type: integer\n                                need_name:\n                                    type: boolean\n                                need_phone_number:\n                                    type: boolean\n                                need_email:\n                                    type: boolean\n                                need_shipping_address:\n                                    type: boolean\n                                send_phone_number_to_provider:\n                                    type: boolean\n                                send_email_to_provider:\n                                    type: boolean\n                                is_flexible:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - chat_id\n                                - title\n                                - description\n                                - payload\n                                - provider_token\n                                - start_parameter\n                                - currency\n                                - prices\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    type: integer\n                                title:\n                                    type: string\n                                description:\n                                    type: string\n                                payload:\n                                    type: string\n                                provider_token:\n                                    type: string\n                                start_parameter:\n                                    type: string\n                                currency:\n                                    type: string\n                                prices:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/LabeledPrice'\n                                provider_data:\n                                    type: string\n                                photo_url:\n                                    type: string\n                                photo_size:\n                                    type: integer\n                                photo_width:\n                                    type: integer\n                                photo_height:\n                                    type: integer\n                                need_name:\n                                    type: boolean\n                                need_phone_number:\n                                    type: boolean\n                                need_email:\n                                    type: boolean\n                                need_shipping_address:\n                                    type: boolean\n                                send_phone_number_to_provider:\n                                    type: boolean\n                                send_email_to_provider:\n                                    type: boolean\n                                is_flexible:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - chat_id\n                                - title\n                                - description\n                                - payload\n                                - provider_token\n                                - start_parameter\n                                - currency\n                                - prices\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    type: integer\n                                title:\n                                    type: string\n                                description:\n                                    type: string\n                                payload:\n                                    type: string\n                                provider_token:\n                                    type: string\n                                start_parameter:\n                                    type: string\n                                currency:\n                                    type: string\n                                prices:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/LabeledPrice'\n                                provider_data:\n                                    type: string\n                                photo_url:\n                                    type: string\n                                photo_size:\n                                    type: integer\n                                photo_width:\n                                    type: integer\n                                photo_height:\n                                    type: integer\n                                need_name:\n                                    type: boolean\n                                need_phone_number:\n                                    type: boolean\n                                need_email:\n                                    type: boolean\n                                need_shipping_address:\n                                    type: boolean\n                                send_phone_number_to_provider:\n                                    type: boolean\n                                send_email_to_provider:\n                                    type: boolean\n                                is_flexible:\n                                    type: boolean\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - chat_id\n                                - title\n                                - description\n                                - payload\n                                - provider_token\n                                - start_parameter\n                                - currency\n                                - prices\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /answerShippingQuery:\n        description: 'If you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the Bot API will send an Update with a shipping_query field to the bot. Use this method to reply to shipping queries. On success, True is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                shipping_query_id:\n                                    type: string\n                                ok:\n                                    type: boolean\n                                shipping_options:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/ShippingOption'\n                                error_message:\n                                    type: string\n                            required:\n                                - shipping_query_id\n                                - ok\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                shipping_query_id:\n                                    type: string\n                                ok:\n                                    type: boolean\n                                shipping_options:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/ShippingOption'\n                                error_message:\n                                    type: string\n                            required:\n                                - shipping_query_id\n                                - ok\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                shipping_query_id:\n                                    type: string\n                                ok:\n                                    type: boolean\n                                shipping_options:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/ShippingOption'\n                                error_message:\n                                    type: string\n                            required:\n                                - shipping_query_id\n                                - ok\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result: {  }\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /answerPreCheckoutQuery:\n        description: 'Once the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an Update with the field pre_checkout_query. Use this method to respond to such pre-checkout queries. On success, True is returned. Note: The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                pre_checkout_query_id:\n                                    type: string\n                                ok:\n                                    type: boolean\n                                error_message:\n                                    type: string\n                            required:\n                                - pre_checkout_query_id\n                                - ok\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                pre_checkout_query_id:\n                                    type: string\n                                ok:\n                                    type: boolean\n                                error_message:\n                                    type: string\n                            required:\n                                - pre_checkout_query_id\n                                - ok\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                pre_checkout_query_id:\n                                    type: string\n                                ok:\n                                    type: boolean\n                                error_message:\n                                    type: string\n                            required:\n                                - pre_checkout_query_id\n                                - ok\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result: {  }\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setPassportDataErrors:\n        description: \"Informs a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns True on success.\\nUse this if the data submitted by the user doesn't satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                errors:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/PassportElementError'\n                            required:\n                                - user_id\n                                - errors\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                errors:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/PassportElementError'\n                            required:\n                                - user_id\n                                - errors\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                errors:\n                                    type: array\n                                    items:\n                                        $ref: '#/components/schemas/PassportElementError'\n                            required:\n                                - user_id\n                                - errors\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /sendGame:\n        description: 'Use this method to send a game. On success, the sent Message is returned.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    type: integer\n                                game_short_name:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - chat_id\n                                - game_short_name\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    type: integer\n                                game_short_name:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - chat_id\n                                - game_short_name\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                chat_id:\n                                    type: integer\n                                game_short_name:\n                                    type: string\n                                disable_notification:\n                                    type: boolean\n                                reply_to_message_id:\n                                    type: integer\n                                reply_markup:\n                                    $ref: '#/components/schemas/InlineKeyboardMarkup'\n                            required:\n                                - chat_id\n                                - game_short_name\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                $ref: '#/components/schemas/Message'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /setGameScore:\n        description: \"Use this method to set the score of the specified user in a game. On success, if the message was sent by the bot, returns the edited Message, otherwise returns True. Returns an error, if the new score is not greater than the user's current score in the chat and force is False.\"\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                score:\n                                    type: integer\n                                force:\n                                    type: boolean\n                                disable_edit_message:\n                                    type: boolean\n                                chat_id:\n                                    type: integer\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                            required:\n                                - user_id\n                                - score\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                score:\n                                    type: integer\n                                force:\n                                    type: boolean\n                                disable_edit_message:\n                                    type: boolean\n                                chat_id:\n                                    type: integer\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                            required:\n                                - user_id\n                                - score\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                score:\n                                    type: integer\n                                force:\n                                    type: boolean\n                                disable_edit_message:\n                                    type: boolean\n                                chat_id:\n                                    type: integer\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                            required:\n                                - user_id\n                                - score\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                anyOf:\n                                                    -\n                                                        $ref: '#/components/schemas/Message'\n                                                    -\n                                                        type: boolean\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n    /getGameHighScores:\n        description: 'Use this method to get data for high score tables. Will return the score of the specified user and several of his neighbors in a game. On success, returns an Array of GameHighScore objects.'\n        post:\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                chat_id:\n                                    type: integer\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                            required:\n                                - user_id\n                    application/x-www-form-urlencoded:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                chat_id:\n                                    type: integer\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                            required:\n                                - user_id\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                Parameters:\n                                    $ref: '#/components/schemas/Type'\n                                user_id:\n                                    type: integer\n                                chat_id:\n                                    type: integer\n                                message_id:\n                                    type: integer\n                                inline_message_id:\n                                    type: string\n                            required:\n                                - user_id\n            responses:\n                200:\n                    description: 'Request was successful, the result is returned.'\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    -\n                                        $ref: '#/components/schemas/Success'\n                                    -\n                                        type: object\n                                        properties:\n                                            result:\n                                                type: array\n                                                items:\n                                                    $ref: '#/components/schemas/GameHighScore'\n                400:\n                    $ref: '#/components/responses/BadRequest'\n                401:\n                    $ref: '#/components/responses/Unauthorized'\n                403:\n                    $ref: '#/components/responses/Forbidden'\n                404:\n                    $ref: '#/components/responses/NotFound'\n                409:\n                    $ref: '#/components/responses/Conflict'\n                429:\n                    $ref: '#/components/responses/TooManyRequests'\n                5XX:\n                    $ref: '#/components/responses/ServerError'\n                default:\n                    $ref: '#/components/responses/UnknownError'\n",
			"canonicalURL": "/github.com/sys-001/telegram-bot-api-versions@bbe4ec9d1349cb36ce5b48f2ae56e08e1128abb1/-/blob/files/openapi/yaml/v400.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sys-001/telegram-bot-api-versions/blob/bbe4ec9d1349cb36ce5b48f2ae56e08e1128abb1/files/openapi/yaml/v400.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Game\": resolve \"#/components/schemas/Game\": property \"Field\": at files/openapi/yaml/v400.yaml:2239:27: $ref: resolve \"#/components/schemas/Type\": resolve: can't find value for \"components/schemas/Type\""
}