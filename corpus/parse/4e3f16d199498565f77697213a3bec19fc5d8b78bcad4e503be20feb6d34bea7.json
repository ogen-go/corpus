{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/acherkashin/yandex-music-open-api"
		},
		"file": {
			"name": "yandex-music.yaml",
			"size": 0,
			"path": "src/yandex-music.yaml",
			"byteSize": 74635,
			"content": "openapi: 3.0.1\ninfo:\n  title: Yandex Music Api\n  description: \"Swagger документация для Yandex Music API.\"\n  version: 1.0.0\nservers:\n  - url: https://yandex-music-cors-proxy.herokuapp.com/https://api.music.yandex.net:443/\n  - url: https://api.music.yandex.net:443/\n  - url: http://api.music.yandex.net:443/\ntags:\n  - name: \"user\"\n  - name: \"tracks\"\n  - name: \"albums\"\n  - name: \"playlists\"\n  - name: \"landing\"\n  - name: \"artists\"\n  - name: \"rotor\"\n  - name: \"tags\"\n\npaths:\n  /settings:\n    description: Получение предложений по покупке. Нет обязательных параметров\n    get:\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/Settings\"\n\n  /permission-alerts:\n    description: Получение оповещений. Нет обязательных параметров.\n    get:\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/PermissionAlerts\"\n\n  /account/experiments:\n    description: Получение значений экспериментальных функций аккаунта\n    get:\n      tags:\n        - account\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/Experiments\"\n\n  /account/consume-promo-code:\n    description: Активация промо-кода\n    post:\n      tags:\n        - account\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n                language:\n                  type: string\n                  example: en\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/PromoCodeStatus\"\n\n  /feed/wizard/is-passed:\n    get:\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    properties:\n                      isWizardPassed:\n                        type: boolean\n                        example: true\n\n  /account/settings:\n    description: Настройки текущего пользователя\n    get:\n      summary: Получение настроек текущего пользователя\n      tags:\n        - account\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    $ref: \"#/components/schemas/UserSettings\"\n    post:\n      summary: Изменение настроек текущего пользователя\n      tags:\n        - account\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              description: Словарь параметров и значений\n              type: object\n              additionalProperties: true\n              example:\n                theme: \"black\"\n                volumePercents: 80\n                adsDisabled: true\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                description: Настройки пользователя или \"None\"\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    oneOf:\n                      - $ref: \"#/components/schemas/UserSettings\"\n                      - type: string\n                        example: \"None\"\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n\n  /account/status:\n    description: Get account status for current user\n    get:\n      tags:\n        - \"account\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    $ref: \"#/components/schemas/Status\"\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n  /feed:\n    get:\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /tags/{tagId}/playlist-ids:\n    summary: Получение тега (подборки)\n    parameters:\n      - in: path\n        name: tagId\n        schema:\n          type: string\n        required: true\n        example: \"рок\"\n    get:\n      tags:\n        - \"tags\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/TagResult\"\n\n  /albums/{albumId}/:\n    parameters:\n      - in: path\n        name: albumId\n        schema:\n          type: number\n        required: true\n        example: 7019818\n    get:\n      tags:\n        - \"albums\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/Album\"\n\n  /albums/{albumId}/with-tracks:\n    parameters:\n      - in: path\n        name: albumId\n        schema:\n          type: number\n        required: true\n        example: 7019818\n    get:\n      tags:\n        - \"albums\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/Album\"\n\n  /albums:\n    post:\n      tags:\n        - \"albums\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                \"album-ids\":\n                  type: array\n                  items:\n                    type: string\n                  example: [13984185, 13730064, 13963354, 13546288, 13937809]\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      $ref: \"#/components/schemas/Album\"\n\n  /landing3:\n    parameters:\n      - in: query\n        name: blocks\n        schema:\n          type: string\n          description: Одно или несколько значений блоков, разделенных запятой \"promotions\",\"new-releases\",\"new-playlists\",\"mixes\",\"chart\",\"playlists\",\"play_contexts\",\"podcasts\"\n        examples:\n          single:\n            value: \"new-releases\"\n          multiple:\n            value: \"new-playlists, new-playlists\"\n    get:\n      tags:\n        - \"landing\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content: {}\n          headers:\n            \"X-Yandex-Music-Device\":\n              schema:\n                type: string\n                description: Данные заголовок использует Windows приложение Yandex.Music, если пользователь не авторизован\n                example: \"os=unknown; os_version=unknown; manufacturer=unknown; model=unknown; clid=; device_id=unknown; uuid=unknown\"\n\n  /landing3/{landingBlock}:\n    parameters:\n      - in: path\n        name: landingBlock\n        required: true\n        schema:\n          type: string\n          enum:\n            [\n              \"new-playlists\",\n              \"new-releases\",\n              \"new-playlists\",\n              \"chart\",\n              \"podcasts\",\n            ]\n\n  /landing3/chart/{chartType}:\n    parameters:\n      - in: path\n        name: chartType\n        required: true\n        schema:\n          type: string\n          enum: [\"russia\", \"world\"]\n    get:\n      tags:\n        - \"landing\"\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /genres:\n    get:\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /playlists/list:\n    description: Получение полной информации о плейлистах по их идентификатору\n    parameters:\n      - in: query\n        name: playlistIds\n        description: uid владельца плейлиста и kind плейлиста через двоеточие и запятую\n        schema:\n          type: string\n          example: 103372440:1878,460140864:1000\n    post:\n      tags:\n        - \"playlists\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                playListIds: \n                  type: array\n                  items:\n                    type: string\n                  example: [\"103372440:1878\",\"460140864:1000\"]\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Playlist\"\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n\n  /search:\n    parameters:\n      - in: query\n        name: text\n        description: Текст запроса\n        schema:\n          type: string\n          example: Король и Шут\n      - in: query\n        name: page\n        description: Номер страницы выдачи\n        schema:\n          type: number\n          example: 0\n      - in: query\n        name: type\n        schema:\n          $ref: \"#/components/schemas/SearchType\"\n      - in: query\n        name: nococrrect\n        schema:\n          type: boolean\n          default: false\n    get:\n      summary: Осуществление поиска по запросу и типу, получение результатов\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Playlist\"\n\n  /users/{userId}/playlists/list:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n    get:\n      summary: Получение списка плейлистов пользователя.\n      tags:\n        - \"user\"\n        - \"playlists\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Playlist\"\n        405:\n          description: \"Method Not Allowed\"\n          content: {}\n\n  /users/{userId}/dislikes/tracks:\n    description: Получение треков с отметкой \"Не рекомендовать\"\n    summary: Получение треков с отметкой \"Не рекомендовать\"\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n      - in: query\n        required: false\n        name: if_modified_since_revision\n        description: TODO\n        schema:\n          type: number\n    get:\n      tags:\n        - \"user\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    $ref: \"#/components/schemas/TracksList\"\n  /search/suggest:\n    parameters:\n      - in: query\n        required: true\n        name: part\n        description: Часть поискового запроса\n        schema:\n          type: string\n          example: Король\n    get:\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    $ref: \"#/components/schemas/Suggestions\"\n\n  /users/{userId}/playlists/{kind}:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n      - in: path\n        required: true\n        name: kind\n        description: Идентификатор плейлиста\n        schema:\n          type: number\n          example: 1000\n    get:\n      summary: Получение плейлиста по уникальному идентификатору\n      tags:\n        - \"user\"\n        - \"playlists\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content: \n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Playlist\"\n\n  /users/{userId}/playlists:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n      - in: query\n        required: true\n        name: kinds\n        schema:\n          type: string\n          example: \"1000,1003\"\n      - in: query\n        required: true\n        name: mixed\n        schema:\n          type: boolean\n          example: false\n      - in: query\n        required: true\n        name: rich-tracks\n        schema:\n          type: boolean\n          example: false\n    get:\n      tags:\n        - \"user\"\n        - \"playlists\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /users/{userId}/playlists/create:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n    post:\n      tags:\n        - \"user\"\n        - \"playlists\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n              example: '{\"title\" : \"Название плейлиста\", \"visibility\": \"public\"}'\n      responses:\n        200:\n          description: Ok\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n        401:\n          description: Unauthorized\n\n  /users/{userId}/playlists/{kind}/name:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n      - in: path\n        required: true\n        name: kind\n        description: Идентификатор плейлиста\n        schema:\n          type: number\n          example: 1000\n    post:\n      summary: Изменение названия плейлиста.\n      tags:\n        - \"user\"\n        - \"playlists\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: string\n                  example: new-name\n      responses:\n        200:\n          description: Изменение видимости плейлиста\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    $ref: \"#/components/schemas/Playlist\"\n\n  /users/{userId}/playlists/{kind}/delete:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n      - in: path\n        required: true\n        name: kind\n        description: Идентификатор плейлиста\n        schema:\n          type: number\n          example: 1000\n    delete:\n      tags:\n        - \"user\"\n        - \"playlists\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  # TODO: Complete\n  /users/{userId}/playlists/{kind}/change-relative:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n      - in: path\n        required: true\n        name: kind\n        description: Идентификатор плейлиста\n        schema:\n          type: number\n          example: 1000\n    post:\n      tags:\n        - \"user\"\n        - \"playlists\"\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /users/{userId}/playlists/{kind}/recommendations:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n      - in: path\n        required: true\n        name: kind\n        description: Идентификатор плейлиста\n        schema:\n          type: number\n          example: 1000\n    get:\n      description: Получение рекомендаций для плейлиста\n      tags:\n        - \"user\"\n        - \"playlists\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    $ref: \"#/components/schemas/PlaylistRecommendations\"\n\n  /users/{userId}/playlists/{kind}/visibility:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n      - in: path\n        required: true\n        name: kind\n        description: Идентификатор плейлиста\n        schema:\n          type: number\n          example: 1000\n    post:\n      summary: Изменение видимости плейлиста\n      description: Необходимо передать \"public\" или \"private\" в качестве значения\n      tags:\n        - \"user\"\n        - \"playlists\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: string\n                  enum:\n                    - \"public\"\n                    - \"private\"\n      responses:\n        200:\n          description: Изменение видимости плейлиста\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/Playlist\"\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n\n  /users/{userId}/likes/tracks/add-multiple:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n    post:\n      summary: Пометить треки как \"Мне нравится\"\n      tags:\n        - \"user\"\n        - \"tracks\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                \"track-ids\":\n                  type: array\n                  items:\n                    type: string\n                  example: [7019818, 29238706, 83063895]\n      responses:\n        200:\n          description: Ok\n          content: \n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result: \n                    type: object\n                    properties:\n                      revision:\n                        type: number\n        401:\n          description: Unauthorized\n          content: {}\n\n  /users/{userId}/likes/tracks/remove:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n    post:\n      tags:\n        - \"user\"\n        - \"tracks\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n            example: '{\"track-ids\" : \"7019818,29238706\"}'\n      responses:\n        200:\n          description: Ok\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n\n  /users/{userId}/likes/tracks:\n    parameters:\n      - in: path\n        required: true\n        name: userId\n        description: Идентификатор пользователя\n        schema:\n          type: number\n          example: 541320800\n    get:\n      summary: Получение треков с отметкой \"Мне нравится\"\n      tags:\n        - \"user\"\n        - \"tracks\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    properties:\n                      library:\n                        $ref: \"#/components/schemas/TracksList\"\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      message:\n                        type: string\n\n  /tracks/:\n    post:\n      summary: Получение треков\n      tags:\n        - \"tracks\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                \"track-ids\":\n                  description: Уникальные идентификаторы треков\n                  type: array\n                  items:\n                    type: string\n                  example: [7019818, 29238706]\n                \"with-positions\":\n                  description: С позициями\n                  type: boolean\n                  example: false\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Track\"\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n\n  /tracks/{trackId}/download-info:\n    parameters:\n      - in: path\n        required: true\n        name: trackId\n        schema:\n          type: string\n          example: \"78550148\"\n    get:\n      summary: Получение информации о доступных вариантах загрузки трека.\n      tags:\n        - \"tracks\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/DownloadInfo\"\n\n  /tracks/{trackId}/supplement:\n    parameters:\n      - in: path\n        required: true\n        name: trackId\n        schema:\n          type: string\n          example: 32326555\n    get:\n      description: Получение дополнительной информации о треке (Текст песни, видео, и т.д.).\n      summary: Получение дополнительной информации о треке (Текст песни, видео, и т.д.).\n      tags:\n        - \"tracks\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/Supplement\"\n\n  /tracks/{trackId}/similar:\n    parameters:\n      - in: path\n        required: true\n        name: trackId\n        schema:\n          type: string\n          example: 32326555\n    get:\n      summary: Получение похожих треков\n      description: Получение похожих треков\n      tags:\n        - tracks\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  invocationInfo:\n                    type: object\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: object\n                    $ref: \"#/components/schemas/SimilarTracks\"\n\n  /play-audio:\n    description: Метод для отправки текущего состояния прослушиваемого трека\n    post:\n      tags:\n        - tracks\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n                - from\n              type: object\n              properties:\n                track-id:\n                  description: Уникальный идентификатор трека\n                  oneOf:\n                    - type: string\n                    - type: number\n                from-cache:\n                  type: boolean\n                  description: Проигрывается ли трек с кеша\n                from:\n                  type: string\n                  description: Наименования клиента с которого происходит прослушивание\n                play-id:\n                  type: string\n                  description: Уникальный идентификатор проигрывания\n                uid:\n                  type: number\n                  description: Уникальный идентификатор пользователя\n                timestamp:\n                  type: string\n                  description: Текущая дата и время в ISO\n                  example: \"2021-03-17T18:13:40.000+00:00\"\n                track-length-seconds:\n                  type: number\n                  description: Продолжительность трека в секундах\n                total-played-seconds:\n                  type: number\n                  description: Продолжительность трека в секундах\n                end-position-seconds:\n                  type: number\n                  description: Продолжительность трека в секундах\n                album-id:\n                  description: Уникальный идентификатор альбома\n                  oneOf:\n                    - type: string\n                    - type: number\n                playlist-id:\n                  type: string\n                  description: Уникальный идентификатор проигрывания\n                client-now:\n                  type: string\n                  description: Текущая дата и время клиента в ISO\n                  example: \"2021-03-17T18:13:40.000+00:00\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                description: Возвращает строку \"ok\" при успешном выполнении запроса\n                type: object\n                properties:\n                  invocationInfo:\n                    $ref: \"#/components/schemas/InvocationInfo\"\n                  result:\n                    type: string\n                    example: ok\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n\n  /artists/{artistId}/track-ids-by-rating:\n    parameters:\n      - in: path\n        required: true\n        name: artistId\n        schema:\n          type: string\n          example: 218099\n    get:\n      summary: Получение популярных треков для артиста\n      tags:\n        - \"artists\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  artist:\n                    $ref: \"#/components/schemas/Artist\"\n                  tracks:\n                    type: array\n                    items:\n                      type: string\n\n  /artists/{artistId}/brief-info:\n    parameters:\n      - in: path\n        required: true\n        name: artistId\n        schema:\n          type: string\n          example: 218099\n    get:\n      tags:\n        - \"artists\"\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /artists/{artistId}/tracks:\n    parameters:\n      - in: path\n        required: true\n        name: artistId\n        schema:\n          type: string\n          example: 218099\n      - in: query\n        required: false\n        name: page\n        schema:\n          type: number\n          example: 0\n      - in: query\n        required: false\n        name: page-size\n        schema:\n          type: number\n          example: 20\n    get:\n      tags:\n        - \"artists\"\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /artists/{artistId}/direct-albums:\n    parameters:\n      - in: path\n        required: true\n        name: artistId\n        schema:\n          type: string\n          example: 218099\n      - in: query\n        required: false\n        name: page\n        schema:\n          type: number\n          example: 0\n      - in: query\n        required: false\n        name: page-size\n        schema:\n          type: number\n          example: 20\n      - in: query\n        required: false\n        name: sort-by\n        schema:\n          type: string\n          enum:\n            - \"year\"\n            - \"rating\"\n    get:\n      tags:\n        - \"artists\"\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /rotor/station/{rotorID}/tracks:\n    parameters:\n      - in: path\n        required: false\n        name: rotorID\n        description: \"ID радиостанции, для примера: user:onyourwave это моя волна\"\n        schema:\n          type: string\n          example: user:onyourwave\n      - in: query\n        required: false\n        name: settings2\n        description: \"Использовать ли второй набор настроек. Все официальные клиенты выполняют запросы с `settings2 = True`.\"\n        schema:\n          type: boolean\n          example: true\n      - in: query\n        required: false\n        name: queue\n        description: \"Уникальной идентификатор трека, который только что был.\"\n        schemas:\n          type: string\n    get:\n      summary: \"Получение цепочки треков определённой станции\"\n      tags:\n        - \"rotor\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content: {}\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n\n  /rotor/account/status:\n    get:\n      summary: \"Получение статуса пользователя с дополнителными полями\"\n      tags:\n        - \"rotor\"\n        - \"account\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      responses:\n        200:\n          description: Ok\n          content: {}\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n\n  /rotor/stations/list:\n    parameters:\n      - in: query\n        required: false\n        name: language\n        description: \"Язык, на котором будет информация о станциях\"\n        schema:\n          type: string\n          example: ru\n    get:\n      summary: \"Получение всех радиостанций с настройками пользователя\"\n      tags:\n        - \"rotor\"\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /rotor/stations/dashboard:\n    get:\n      summary: \"Получение рекомендованных станций текущего пользователя\"\n      security:\n        - oAuth: []\n        - oAuthProxied: []\n      tags:\n        - \"rotor\"\n      responses:\n        200:\n          description: Ok\n          content: {}\n\n  /rotor/station/{station}/feedback:\n    parameters:\n      - in: path\n        required: true\n        name: station\n        description: Станция\n        schema:\n          type: string\n    post:\n      summary: \"Отправка ответной реакции на происходящее при прослушивании радио. Сообщения о начале прослушивания радио, начале и конце трека, его пропуска.\"\n      tags:\n        - \"rotor\"\n      requestBody:\n        required: true\n        content:\n          # TODO: complete parameters\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n              example: \"\"\n      responses:\n        200:\n          description: Ok\n          content: {}\n\ncomponents:\n  securitySchemes:\n    oAuthProxied:\n      type: oauth2\n      description: Authentication via proxy server to bypass cors\n      flows:\n        password:\n          tokenUrl: https://yandex-music-cors-proxy.herokuapp.com/https://oauth.yandex.ru/token\n          scopes: {}  \n    oAuth:\n      type: oauth2\n      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)\n      flows:\n        password:\n          tokenUrl: https://oauth.yandex.ru/token\n          scopes: {}\n  schemas:\n    UserSettings:\n      type: object\n      properties:\n        uid:\n          type: number\n        lastFmScrobblingEnabled:\n          type: boolean\n          example: false\n        facebookScrobblingEnabled:\n          type: boolean\n          example: false\n        shuffleEnabled:\n          type: boolean\n          example: false\n        addNewTrackOnPlaylistTop:\n          type: boolean\n          example: false\n        volumePercents:\n          type: boolean\n          example: 75\n        userMusicVisibility:\n          $ref: \"#/components/schemas/VisibilityEnum\"\n        userSocialVisibility:\n          $ref: \"#/components/schemas/VisibilityEnum\"\n        adsDisabled:\n          type: boolean\n          example: true\n        modified:\n          type: string\n          example: \"2019-04-14T14:55:50+00:00\"\n        rbtDisabled:\n          type: string\n        theme:\n          type: string\n          enum:\n            - \"black\"\n            - \"default\"\n          description: Тема оформления.\n          example: \"black\"\n        promosDisabled:\n          type: boolean\n          example: true\n        autoPlayRadio:\n          type: boolean\n          example: true\n        syncQueueEnabled:\n          type: boolean\n          example: false\n    VisibilityEnum:\n      type: string\n      enum:\n        - \"private\"\n        - \"public\"\n      example: \"public\"\n    InvocationInfo:\n      type: object\n      properties:\n        \"exec-duration-millis\":\n          type: number\n        hostname:\n          type: string\n        \"req-id\":\n          type: number\n    Error:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"validate\"\n        message:\n          type: string\n          example: \"Parameters requirements are not met\"\n    Account:\n      type: object\n      description: Основная информация об аккаунте\n      properties:\n        now:\n          type: string\n          description: Текущая дата и время\n          example: \"2021-03-17T18:13:40+00:00\"\n        uid:\n          type: number\n          description: Уникальный идентификатор\n        login:\n          type: string\n          description: Виртуальное имя (обычно e-mail)\n        region:\n          type: number\n          description: Регион\n        fullName:\n          type: string\n          description: Полное имя (имя и фамилия)\n        secondName:\n          type: string\n          description: Фамилия\n        firstName:\n          type: string\n          description: Имя\n        displayName:\n          type: string\n          description: Отображаемое имя\n        serviceAvailable:\n          type: boolean\n          description: Доступен ли сервис\n        hostedUser:\n          type: boolean\n          description: Является ли пользователем чьим-то другим\n        \"passport-phones\":\n          type: array\n          description: Мобильные номера\n          items:\n            type: object\n            properties:\n              phone:\n                type: string\n    Album:\n      type: object\n      properties:\n        id:\n          type: number\n          description: Идентификатор альбома\n        error:\n          description: Ошибка получения альбома\n          type: string\n          nullable: true\n        title:\n          description: Название альбома\n          type: string\n        \"type\":\n          description: Тип альбома\n          type: string\n          enum: [\"single\", \"podcast\"]\n        metaType:\n          description: Мета тип\n          type: string\n          enum: [\"single\", \"podcast\", \"music\"]\n        year:\n          description: Год релиза\n          type: number\n        releaseDate:\n          description: Дата релиза в формате ISO 8601\n          type: string\n        coverUri:\n          description: Ссылка на обложку\n          type: string\n        ogImage:\n          description: Ссылка на превью Open Graph\n          type: string\n        genre:\n          description: Жанр музыки\n          type: string\n        buy:\n          type: array\n          items:\n            type: object\n        trackCount:\n          description: Количество треков.\n          type: number\n        recent:\n          description: Является ли альбом новым\n          type: boolean\n        veryImportant:\n          description: Популярен ли альбом у слушателей\n          type: boolean\n        artists:\n          description: Артисты\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Artist\"\n        labels:\n          description: Лейблы\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: number\n              name:\n                type: string\n        available:\n          description: Доступен ли альбом\n          type: boolean\n        availableForPremiumUsers:\n          description: Доступен ли альбом для пользователей с подпиской\n          type: boolean\n        availableForMobile:\n          description: Доступен ли альбом из приложения для телефона\n          type: boolean\n        availablePartially:\n          description: Доступен ли альбом частично для пользователей без подписки\n          type: boolean\n        bests:\n          description: ID лучших треков альбома\n          type: array\n          items:\n            type: number\n        prerolls:\n          description: Прероллы\n          type: array\n          items:\n            type: object\n        volumes:\n          description: Треки альбома, разделенные по дискам.\n          type: array\n          nullable: true\n          items:\n            type: array\n            items:\n              type: object\n              $ref: \"#/components/schemas/Track\"\n    Artist:\n      type: object\n      properties:\n        composer:\n          type: boolean\n        cover:\n          type: object\n          nullable: true\n          $ref: \"#/components/schemas/Cover\"\n        decomposed:\n          type: array\n          nullable: true\n          items:\n            type: object\n        genres:\n          type: array\n          items:\n            type: object\n        id:\n          type: string\n        name:\n          type: string\n        various:\n          type: boolean\n        popularTracks:\n          type: array\n          nullable: true\n          items:\n            type: object\n            $ref: \"#/components/schemas/Track\"\n        ticketsAvailable:\n          description: Имеются ли в продаже билеты на концерт\n          nullable: true\n          type: boolean\n        regions:\n          type: array\n          nullable: true\n          items:\n            type: string\n    Cover:\n      type: object\n      properties:\n        custom:\n          type: boolean\n          nullable: true\n        dir:\n          type: string\n          nullable: true\n        \"type\":\n          nullable: true\n          type: string\n          enum: [\"pic\", \"mosaic\"]\n        itemsUri:\n          type: array\n          nullable: true\n          items:\n            type: string\n        uri:\n          type: string\n          nullable: true\n        version:\n          type: string\n          nullable: true\n        error:\n          type: string\n          nullable: true\n          description: If exists other properties is missing\n    Owner:\n      type: object\n      properties:\n        login:\n          type: string\n        name:\n          type: string\n        sex:\n          type: string\n        uid:\n          type: number\n        verified:\n          type: boolean\n    Track:\n      type: object\n      properties:\n        albums:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Album\"\n        artists:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Artist\"\n        available:\n          type: boolean\n        availableForPremiumUsers:\n          type: boolean\n        availableFullWithoutPermission:\n          type: boolean\n        coverUri:\n          description: Cover uri template\n          type: string\n        durationMs:\n          type: number\n        fileSize:\n          type: number\n        id:\n          type: string\n        lyricsAvailable:\n          type: boolean\n        major:\n          type: object\n          properties:\n            id:\n              type: number\n            name:\n              type: string\n        normalization:\n          type: object\n          properties:\n            gain:\n              type: number\n            peak:\n              type: number\n        ogImage:\n          type: string\n        previewDurationMs:\n          type: number\n        realId:\n          type: string\n        rememberPosition:\n          type: boolean\n        storageDir:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n    TrackItem:\n      type: object\n      properties:\n        id:\n          type: number\n        playCount:\n          type: number\n        recent:\n          type: boolean\n        timestamp:\n          type: string\n        track:\n          description: Null when tracks are not riched\n          type: object\n          $ref: \"#/components/schemas/Track\"\n    Playlist:\n      description: play list data\n      type: object\n      properties:\n        playlistUuid:\n          type: string\n        description:\n          type: string\n        descriptionFormatted:\n          type: string\n        available:\n          type: boolean\n        collective:\n          type: boolean\n        cover:\n          type: object\n          $ref: \"#/components/schemas/Cover\"\n        created:\n          type: string\n        modified:\n          type: string\n        backgroundColor:\n          type: string\n        textColor:\n          type: string\n        durationMs:\n          type: number\n        isBunner:\n          type: boolean\n        isPremiere:\n          type: boolean\n        kind:\n          type: number\n        ogImage:\n          type: string\n        owner:\n          type: object\n          $ref: \"#/components/schemas/Owner\"\n        prerolls:\n          type: array\n          items:\n            type: object\n        revision:\n          type: number\n        snapshot:\n          type: number\n        tags:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              value:\n                type: string\n        title:\n          type: string\n        trackCount:\n          type: number\n        uid:\n          type: number\n        visibility:\n          type: string\n          enum: [\"public\", \"private\"]\n        likesCount:\n          type: number\n        tracks:\n          type: array\n          nullable: true\n          items:\n            type: object\n            $ref: \"#/components/schemas/TrackItem\"\n    Status:\n      type: object\n      properties:\n        account:\n          type: object\n          $ref: \"#/components/schemas/Account\"\n        permissions:\n          type: object\n          $ref: \"#/components/schemas/Permissions\"\n        subscription:\n          type: object\n          $ref: \"#/components/schemas/Subscription\"\n        subeditor:\n          type: boolean\n          description: Наличие статуса модератора проверки корректности информации\n        subeditorLevel:\n          type: number\n          description: Уровень статуса модератора\n        pretrialActive:\n          type: boolean\n        plus:\n          type: object\n          description: Информация о Plus подписке\n          properties:\n            hasPlus:\n              type: boolean\n            isTutorialCompleted:\n              type: boolean\n        defaultEmail:\n          type: string\n          description: Основной e-mail адрес аккаунта\n          example: \"email@example.com\"\n        barBelow:\n          type: object\n          description: Блок с предупреждениями о конце подписки и подарках\n          $ref: \"#/components/schemas/Alert\"\n    Permissions:\n      type: object\n      description: Информация о правах пользователя, их изначальных значениях и даты окончания\n      properties:\n        until:\n          type: string\n          example: \"2021-03-24T18:13:40+00:00\"\n        values:\n          type: array\n          items:\n            enum:\n              [\n                \"landing-play\",\n                \"feed-play\",\n                \"radio-play\",\n                \"mix-play\",\n                \"radio-skips\",\n                \"play-radio-full-tracks\",\n              ]\n        default:\n          type: array\n          items:\n            enum:\n              [\n                \"landing-play\",\n                \"feed-play\",\n                \"radio-play\",\n                \"mix-play\",\n                \"radio-skips\",\n                \"play-radio-full-tracks\",\n              ]\n    Subscription:\n      type: object\n      description: Информация о подписках пользователя\n      properties:\n        hadAnySubscription:\n          type: boolean\n        canStartTrial:\n          type: boolean\n        mcdonalds:\n          type: boolean\n    Alert:\n      type: object\n      description: Блок с предупреждениями о конце подписки и подарках\n      properties:\n        alertId:\n          type: string\n          description: Уникальный идентификатор\n        text:\n          type: string\n          description: Текст предупреждения\n        bgColor:\n          type: string\n          description: Цвет заднего фона (HTML)\n        textColor:\n          type: string\n          description: Цвет текста (HTML)\n        alertType:\n          type: string\n          description: Тип предупреждения\n          example: \"Promo_rk360\"\n        button:\n          type: object\n          $ref: \"#/components/schemas/AlertButton\"\n        closeButton:\n          type: boolean\n          description: Наличие кнопки \"Закрыть\"\n    AlertButton:\n      type: object\n      description: кнопка со ссылкой\n      properties:\n        text:\n          type: string\n          description: Текст на кнопке\n        bgColor:\n          type: string\n          description: Цвет заднего фона (HTML)\n        textColor:\n          type: string\n          description: Цвет текста (HTML)\n        uri:\n          type: string\n          description: Ссылка, куда ведет кнопка\n    Suggestions:\n      type: object\n      description: подсказки при поиске\n      properties:\n        best:\n          type: object\n        suggestions:\n          type: array\n          items:\n            type: string\n    Best:\n      type: object\n      description: лучший результат поиска\n      properties:\n        type:\n          type: string\n          description: Тип лучшего результата\n        text:\n          type: string\n        result:\n          oneOf:\n            - $ref: \"#/components/schemas/Track\"\n            - $ref: \"#/components/schemas/Artist\"\n            - $ref: \"#/components/schemas/Album\"\n            - $ref: \"#/components/schemas/Playlist\"\n            - $ref: \"#/components/schemas/Video\"\n    PlaylistRecommendations:\n      type: object\n      description: рекомендации для плейлиста\n      properties:\n        batch_id:\n          type: string\n          description: Уникальный идентификатор партии треков\n        tracks:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Track\"\n    Settings:\n      type: object\n      description: Предложения по покупке\n      properties:\n        inAppProducts:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Product\"\n        nativeProducts:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Product\"\n        webPaymentUrl:\n          type: string\n        webPaymentMonthProductPrice:\n          type: object\n          $ref: \"#/components/schemas/Price\"\n        promoCodesEnabled:\n          type: boolean\n    Price:\n      type: object\n      description: цена\n      properties:\n        amount:\n          description: Количество единиц\n          type: number\n        currency:\n          description: Валюта\n          type: string\n    Product:\n      type: object\n      description: продаваемый продукт\n      properties:\n        productId:\n          description: Уникальный идентификатор.\n          type: string\n        type:\n          description: Тип продаваемого.\n          type: string\n        commonPeriodDuration:\n          description: Длительность общего периода.\n          type: string\n        duration:\n          description: Длительность.\n          type: number\n        trialDuration:\n          description: Длительность испытательного срока.\n          type: number\n        price:\n          description: Цена.\n          type: object\n          $ref: \"#/components/schemas/Price\"\n        feature:\n          description: Предоставляемая возможность.\n          type: string\n        debug:\n          description: Отладочный продукт.\n          type: boolean\n        plus:\n          description: Даёт ли подписку \"Плюс\".\n          type: boolean\n        cheapest:\n          description: Самый дешёвый (лучшее предложение).\n          type: boolean\n        title:\n          description: Заголовок продукта.\n          type: string\n        familySub:\n          description: Семейная ли подписка.\n          type: boolean\n        fbImage:\n          description: Картинка для превью на facebook.\n          type: string\n        fbName:\n          description: Заголовок превью на facebook.\n          type: string\n        family:\n          description: Доступно ли для семьи.\n          type: boolean\n        features:\n          description: Список предоставляемых возможностей.\n          type: array\n          items:\n            type: string\n        description:\n          description: Описание.\n          type: string\n        available:\n          description: Доступна ли покупка.\n          type: boolean\n        trialAvailable:\n          description: Доступен ли пробный период.\n          type: boolean\n        trialPeriodDuration:\n          description: Длительность пробного периода.\n          type: string\n        introPeriodDuration:\n          description: Длительность вступительного периода TODO.\n          type: string\n        introPrice:\n          description: Цена вступительного периода.\n          type: object\n          $ref: \"#/components/schemas/Price\"\n        startPeriodDuration:\n          description: Длительность первого срока (за меньшую цену).\n          type: string\n        startPrice:\n          description: Цена за первый срок.\n          type: object\n          $ref: \"#/components/schemas/Price\"\n        licenceTextParts:\n          description: Длительность пробного периода.\n          type: object\n          $ref: \"#/components/schemas/LicenceTextPart\"\n        vendorTrialAvailable:\n          description: Доступен испытательный срок продавца TODO.\n          type: boolean\n        buttonText:\n          description: Текст кнопки.\n          type: string\n        buttonAdditionalText:\n          description: Дополнительный текст кнопки.\n          type: string\n        paymentMethodTypes:\n          description: Способы оплаты.\n          type: array\n          items:\n            type: string\n    LicenceTextPart:\n      type: object\n      description: часть текста с ссылкой на лицензионное соглашение\n      properties:\n        text:\n          description: Часть текста.\n          type: string\n        url:\n          description: Ссылка на лицензионное соглашение.\n          type: string\n    PermissionAlerts:\n      type: object\n      description: оповещения\n      properties:\n        alerts:\n          type: array\n          items:\n            type: string\n    Experiments:\n      type: object\n      description: режимы экспериментальных функций\n    PromoCodeStatus:\n      type: object\n      description: статус активации промо-кода\n      properties:\n        status:\n          type: string\n          description: Статус операции\n          example: code-not-exists\n        statusDesc:\n          type: string\n          description: Описание статуса\n          example: Gift code does not exist\n        accountStatus:\n          type: object\n          description: Информация об аккаунте пользователя.\n          $ref: \"#/components/schemas/Status\"\n    Supplement:\n      type: object\n      description: дополнительная информация о треке\n      properties:\n        id:\n          type: number\n          description: Уникальный идентификатор дополнительной информации.\n        lyrics:\n          type: object\n          description: Текст песни.\n          $ref: \"#/components/schemas/Lyrics\"\n        videos:\n          type: object\n          description: Видео.\n          $ref: \"#/components/schemas/VideoSupplement\"\n        radioIsAvailable:\n          type: boolean\n          description: Доступно ли радио.\n        description:\n          type: string\n          description: Полное описание эпизода подкаста.\n    Lyrics:\n      type: object\n      description: текст трека\n      properties:\n        id:\n          type: number\n          description: Уникальный идентификатор текста трека.\n        lyrics:\n          type: string\n          description: Первые строки текст песни.\n        hasRights:\n          type: boolean\n          description: Есть ли права.\n        fullLyrics:\n          type: string\n          description: Текст песни.\n        textLanguage:\n          type: string\n          description: Язык текста.\n        showTranslation:\n          type: boolean\n          description: Доступен ли перевод.\n        url:\n          type: string\n          description: Ссылка на источник перевода. Обычно genius.com.\n    VideoSupplement:\n      type: object\n      description: видеоклипы\n      properties:\n        cover:\n          type: string\n          description: URL на обложку видео.\n        provider:\n          type: string\n          description: Сервис поставляющий видео.\n        title:\n          type: string\n          description: Название видео.\n        providerVideoId:\n          type: string\n          description: Уникальный идентификатор видео на сервисе.\n        url:\n          type: string\n          description: URL на видео.\n        embedUrl:\n          type: string\n          description: URL на видео, находящегося на серверах Яндекса.\n        embed:\n          type: string\n          description: HTML тег для встраивания видео.\n    Video:\n      type: object\n      description: Видео\n      properties:\n        title:\n          type: string\n          description: Название видео\n        cover:\n          type: string\n          description: Ссылка на изображение\n        embedUrl:\n          type: string\n          description: Ссылка на видео\n        provider:\n          type: string\n          description: Сервис поставляющий видео\n        providerVideoId:\n          type: string\n          description: Уникальный идентификатор видео на сервисе.\n        youtubeUrl:\n          type: string\n          description: Ссылка на видео Youtube\n        thumbnailUrl:\n          type: string\n          description: Ссылка на изображение\n        duration:\n          type: number\n          description: Длительность видео в секундах\n        text:\n          type: string\n          description: Текст\n        htmlAutoPlayVideoPlayer:\n          type: string\n          description: HTML тег для встраивания в разметку страницы\n        regions:\n          type: array\n          items:\n            type: string\n          example: [\"RUSSIA_PREMIUM\", \"RUSSIA\"]\n    TagResult:\n      type: object\n      description: Класс, представляющий тег и его плейлисты\n      properties:\n        tag:\n          $ref: \"#/components/schemas/Tag\"\n        ids:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PlaylistId\"\n    Tag:\n      type: object\n      description: Тег\n      required:\n        - id\n        - value\n        - name\n        - ogDescription\n      properties:\n        id:\n          type: string\n          description: Уникальный идентификатор тега\n        value:\n          type: string\n          description: Значение тега (название в lower case)\n        name:\n          type: string\n          description: Название тега (отображаемое)\n        ogDescription:\n          type: string\n          description: Описание тега для OpenGraph\n        ogImage:\n          type: string\n          description: Ссылка на изображение для OpenGraph\n    PlaylistId:\n      type: object\n      properties:\n        uid:\n          type: integer\n          description: Уникальный идентификатор пользователя владеющим плейлистом\n        kind:\n          type: integer\n          description: Уникальный идентификатор плейлиста\n    SimilarTracks:\n      type: object\n      description: список похожих треков на другой трек\n      properties:\n        track:\n          type: object\n          description: трек\n          $ref: \"#/components/schemas/Track\"\n        similarTracks:\n          type: array\n          description: Похожие треки\n          items:\n            $ref: \"#/components/schemas/Track\"\n    TracksList:\n      type: object\n      description: список треков\n      properties:\n        uid:\n          type: number\n          description: Уникальный идентификатор пользователя\n        revisions:\n          type: number\n          description: Актуальность данных TODO\n        tracks:\n          type: array\n          description: Список треков в укороченной версии\n          items:\n            $ref: \"#/components/schemas/TrackShort\"\n    TrackShort:\n      type: object\n      description: Укороченная версия трека с неполными данными\n      properties:\n        id:\n          type: string\n          description: Уникальный идентификатор трека\n        albumId:\n          type: string\n          description: Уникальный идентификатор альбома\n        timestamp:\n          type: string\n          description: Дата\n    DownloadInfo:\n      type: object\n      description: информация о вариантах загрузки трека\n      properties:\n        codec:\n          type: string\n          description: Кодек аудиофайла\n        gain:\n          type: boolean\n          description: Усиление\n        preview:\n          type: string\n          description: Предварительный просмотр\n        downloadInfoUrl:\n          type: string\n          description: Ссылка на XML документ содержащий данные для загрузки трека\n        direct:\n          type: boolean\n          description: Прямая ли ссылка\n        bitrateInKbps:\n          type: number\n          description: Битрейт аудиофайла в кбит/с\n    Search:\n      type: object\n      description: Результаты поиска\n      properties:\n        searchResultId:\n          type: string\n          description: ID запроса\n        text:\n          type: string\n          description: Текст запроса\n        best:\n          $ref: \"#/components/schemas/Best\"\n        albums:\n          $ref: \"#/components/schemas/SearchResult\"\n          description: Найденные альбомы\n        artists:\n          $ref: \"#/components/schemas/SearchResult\"\n          description: Найденные артисты\n        playlists:\n          $ref: \"#/components/schemas/SearchResult\"\n          description: Найденные альбомы\n        tracks:\n          $ref: \"#/components/schemas/SearchResult\"\n          description: Найденные треки\n        videos:\n          $ref: \"#/components/schemas/SearchResult\"\n          description: Найденные видео\n        users:\n          $ref: \"#/components/schemas/SearchResult\"\n          description: Найденные пользователи\n        podcasts:\n          $ref: \"#/components/schemas/SearchResult\"\n          description: Найденные подкасты\n        podcast_episodes:\n          $ref: \"#/components/schemas/SearchResult\"\n          description: Найденные выпуски подкастов\n        type:\n          $ref: \"#/components/schemas/SearchType\"\n          description: Тип результата по которому искали\n        page:\n          type: number\n          description: Текущая страница\n        perPage:\n          type: number\n          description: Результатов на странице\n        misspellCorrected:\n          type: boolean\n          description: Был ли исправлен запрос\n        misspellOriginal:\n          type: string\n          description: Оригинальный запрос\n        nocorrect:\n          type: boolean\n          description: Было ли отключено исправление результата\n    SearchType:\n      type: string\n      enum: [\"artist\", \"album\", \"track\", \"podcast\", \"all\"]\n      default: \"all\"\n    SearchResult:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Тип результата\n        total:\n          type: number\n          description: Количество результатов\n        perPage:\n          type: number\n          description: Максимальное количество результатов на странице.\n        order:\n          type: number\n          description: Позиция блока\n        results:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/Track\"\n              - $ref: \"#/components/schemas/Artist\"\n              - $ref: \"#/components/schemas/Album\"\n              - $ref: \"#/components/schemas/Playlist\"\n              - $ref: \"#/components/schemas/Video\"\n    BadRequest:\n      type: object\n      properties:\n        invocationInfo:\n          $ref: \"#/components/schemas/InvocationInfo\"\n        error:\n          $ref: \"#/components/schemas/Error\"\n",
			"canonicalURL": "/github.com/acherkashin/yandex-music-open-api@621f48d963e1cffd6a3cc6aebcebf2f716709d4e/-/blob/src/yandex-music.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/acherkashin/yandex-music-open-api/blob/621f48d963e1cffd6a3cc6aebcebf2f716709d4e/src/yandex-music.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/landing3/{landingBlock}\": parameters: parse parameter \"landingBlock\": schema: at 1:30372: duplicate enum value: \"\\\"new-playlists\\\"\""
}