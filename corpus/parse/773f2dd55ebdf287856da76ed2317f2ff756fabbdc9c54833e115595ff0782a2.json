{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GeoNode/documentation"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "devel/api/V2/schema/openapi.yml",
			"byteSize": 233599,
			"content": "openapi: 3.0.3\ninfo:\n  title: ''\n  version: 0.0.0\npaths:\n  /api/v2/:\n    get:\n      operationId: root_retrieve\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n  /api/v2/categories/:\n    get:\n      operationId: categories_list\n      description: API endpoint that lists categories.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - categories\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedTopicCategoryList'\n          description: ''\n  /api/v2/categories/{id}/:\n    get:\n      operationId: categories_retrieve\n      description: API endpoint that lists categories.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this topic category.\n        required: true\n      tags:\n      - categories\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopicCategory'\n          description: ''\n  /api/v2/datasets/:\n    get:\n      operationId: datasets_list\n      description: API endpoint that allows layers to be viewed or edited.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - datasets\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDatasetListList'\n          description: ''\n    patch:\n      operationId: datasets_partial_update\n      description: API endpoint that allows layers to be viewed or edited.\n      tags:\n      - datasets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n  /api/v2/datasets/{id}/:\n    get:\n      operationId: datasets_retrieve\n      description: API endpoint that allows layers to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - datasets\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n    put:\n      operationId: datasets_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - datasets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n    patch:\n      operationId: datasets_partial_update_2\n      description: API endpoint that allows layers to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - datasets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n  /api/v2/datasets/{id}/{field_name}/:\n    get:\n      operationId: datasets_retrieve_2\n      description: |-\n        Fetch related object(s), as if sideloaded (used to support\n        link objects).\n\n        This method gets mapped to `/\u003cresource\u003e/\u003cpk\u003e/\u003cfield_name\u003e/` by\n        DynamicRouter for all DynamicRelationField fields. Generally,\n        this method probably shouldn't be overridden.\n\n        An alternative implementation would be to generate reverse queries.\n        For an exploration of that approach, see:\n            https://gist.github.com/ryochiji/54687d675978c7d96503\n      parameters:\n      - in: path\n        name: field_name\n        schema:\n          type: string\n          pattern: ^styles$\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - datasets\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n  /api/v2/datasets/{id}/maplayers/:\n    get:\n      operationId: datasets_maplayers_list\n      description: API endpoint allowing to retrieve the MapLayers list.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - datasets\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSimpleMapLayerList'\n          description: ''\n  /api/v2/datasets/{id}/maps/:\n    get:\n      operationId: datasets_maps_list\n      description: API endpoint allowing to retrieve maps using the dataset.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - datasets\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSimpleMapList'\n          description: ''\n  /api/v2/documents/:\n    get:\n      operationId: documents_list\n      description: API endpoint that allows documents to be viewed or edited.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - documents\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDocumentList'\n          description: ''\n    patch:\n      operationId: documents_partial_update\n      description: API endpoint that allows documents to be viewed or edited.\n      tags:\n      - documents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n  /api/v2/documents/{id}/:\n    get:\n      operationId: documents_retrieve\n      description: API endpoint that allows documents to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      tags:\n      - documents\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n    put:\n      operationId: documents_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      tags:\n      - documents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Document'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Document'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n    patch:\n      operationId: documents_partial_update_2\n      description: API endpoint that allows documents to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      tags:\n      - documents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n  /api/v2/documents/{id}/linked_resources/:\n    get:\n      operationId: documents_linked_resources_list\n      description: API endpoint allowing to retrieve the DocumentResourceLink(s).\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - documents\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResourceBaseList'\n          description: ''\n  /api/v2/geoapps/:\n    get:\n      operationId: geoapps_list\n      description: API endpoint that allows geoapps to be viewed or edited.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - geoapps\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedGeoAppList'\n          description: ''\n    post:\n      operationId: geoapps_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - geoapps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n    patch:\n      operationId: geoapps_partial_update\n      description: API endpoint that allows geoapps to be viewed or edited.\n      tags:\n      - geoapps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n  /api/v2/geoapps/{id}/:\n    get:\n      operationId: geoapps_retrieve\n      description: API endpoint that allows geoapps to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - geoapps\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n    put:\n      operationId: geoapps_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - geoapps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n    patch:\n      operationId: geoapps_partial_update_2\n      description: API endpoint that allows geoapps to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - geoapps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n  /api/v2/geoapps/{id}/{field_name}/:\n    get:\n      operationId: geoapps_retrieve_2\n      description: |-\n        Fetch related object(s), as if sideloaded (used to support\n        link objects).\n\n        This method gets mapped to `/\u003cresource\u003e/\u003cpk\u003e/\u003cfield_name\u003e/` by\n        DynamicRouter for all DynamicRelationField fields. Generally,\n        this method probably shouldn't be overridden.\n\n        An alternative implementation would be to generate reverse queries.\n        For an exploration of that approach, see:\n            https://gist.github.com/ryochiji/54687d675978c7d96503\n      parameters:\n      - in: path\n        name: field_name\n        schema:\n          type: string\n          pattern: ^data$\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - geoapps\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n  /api/v2/groups/:\n    get:\n      operationId: groups_list\n      description: API endpoint that allows gropus to be viewed or edited.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - groups\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedGroupProfileList'\n          description: ''\n    post:\n      operationId: groups_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - groups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    patch:\n      operationId: groups_partial_update\n      description: API endpoint that allows gropus to be viewed or edited.\n      tags:\n      - groups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    delete:\n      operationId: groups_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - groups\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/groups/{id}/:\n    get:\n      operationId: groups_retrieve\n      description: API endpoint that allows gropus to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - groups\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    put:\n      operationId: groups_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - groups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    patch:\n      operationId: groups_partial_update_2\n      description: API endpoint that allows gropus to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - groups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    delete:\n      operationId: groups_destroy_2\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - groups\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/groups/{id}/managers/:\n    get:\n      operationId: groups_managers_list\n      description: API endpoint allowing to retrieve the Group managers.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - groups\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserProfileList'\n          description: ''\n  /api/v2/groups/{id}/members/:\n    get:\n      operationId: groups_members_list\n      description: API endpoint allowing to retrieve the Group members.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - groups\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserProfileList'\n          description: ''\n  /api/v2/groups/{id}/resources/:\n    get:\n      operationId: groups_resources_list\n      description: API endpoint allowing to retrieve the Group specific resources.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - groups\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResourceBaseList'\n          description: ''\n  /api/v2/harvesters/:\n    get:\n      operationId: harvesters_list\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - harvesters\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedBriefHarvesterList'\n          description: ''\n    post:\n      operationId: harvesters_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - harvesters\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Harvester'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Harvester'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Harvester'\n        required: true\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Harvester'\n          description: ''\n  /api/v2/harvesters/{harvester_id}/harvestable-resources/:\n    get:\n      operationId: harvesters_harvestable_resources_retrieve\n      description: |-\n        Adds the `update_list` method to a viewset\n\n        `update_list` is used by `api.routers.ListPatchRouter` in order to allow\n        performing PATCH requests against a viewset's `list` endpoint\n      parameters:\n      - in: path\n        name: harvester_id\n        schema:\n          type: integer\n        required: true\n      tags:\n      - harvesters\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n    patch:\n      operationId: harvesters_harvestable_resources_partial_update\n      description: |-\n        Adds the `update_list` method to a viewset\n\n        `update_list` is used by `api.routers.ListPatchRouter` in order to allow\n        performing PATCH requests against a viewset's `list` endpoint\n      parameters:\n      - in: path\n        name: harvester_id\n        schema:\n          type: integer\n        required: true\n      tags:\n      - harvesters\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n  /api/v2/harvesters/{id}/:\n    get:\n      operationId: harvesters_retrieve\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this harvester.\n        required: true\n      tags:\n      - harvesters\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Harvester'\n          description: ''\n    put:\n      operationId: harvesters_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this harvester.\n        required: true\n      tags:\n      - harvesters\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Harvester'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Harvester'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Harvester'\n        required: true\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Harvester'\n          description: ''\n    patch:\n      operationId: harvesters_partial_update\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this harvester.\n        required: true\n      tags:\n      - harvesters\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedHarvester'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedHarvester'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedHarvester'\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Harvester'\n          description: ''\n    delete:\n      operationId: harvesters_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this harvester.\n        required: true\n      tags:\n      - harvesters\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/harvesting-sessions/:\n    get:\n      operationId: harvesting_sessions_list\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - harvesting-sessions\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedBriefAsynchronousHarvestingSessionList'\n          description: ''\n  /api/v2/harvesting-sessions/{id}/:\n    get:\n      operationId: harvesting_sessions_retrieve\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this asynchronous harvesting\n          session.\n        required: true\n      tags:\n      - harvesting-sessions\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BriefAsynchronousHarvestingSession'\n          description: ''\n  /api/v2/keywords/:\n    get:\n      operationId: keywords_list\n      description: API endpoint that lists hierarchical keywords.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - keywords\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedHierarchicalKeywordList'\n          description: ''\n  /api/v2/keywords/{id}/:\n    get:\n      operationId: keywords_retrieve\n      description: API endpoint that lists hierarchical keywords.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this hierarchical keyword.\n        required: true\n      tags:\n      - keywords\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HierarchicalKeyword'\n          description: ''\n  /api/v2/management/commands/:\n    get:\n      operationId: management_commands_retrieve\n      description: |-\n        Handle the exposed management commands usage:\n          - GET: List of exposed commands\n          - GET detail: Help for a specific command\n          - POST: Create a job (and automatic runs) for a specific command.\n      tags:\n      - management\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJobCreate'\n          description: ''\n    post:\n      operationId: management_commands_create\n      description: |-\n        Creates and runs a management command job.\n        Expects application/json content type in a following shape:\n        {\n            \"args\": [\u003carg1\u003e, \u003carg2\u003e],\n            \"kwargs: {\u003ckey1\u003e: \u003cval1\u003e, \u003ckey2\u003e: \u003cval2\u003e},\n            \"autostart\": bool\n        }\n        By default, autostart is set to true.\n      tags:\n      - management\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n        required: true\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJobCreate'\n          description: ''\n  /api/v2/management/commands/{cmd_name}/:\n    get:\n      operationId: management_commands_retrieve_2\n      description: |-\n        Handle the exposed management commands usage:\n          - GET: List of exposed commands\n          - GET detail: Help for a specific command\n          - POST: Create a job (and automatic runs) for a specific command.\n      parameters:\n      - in: path\n        name: cmd_name\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      tags:\n      - management\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJobCreate'\n          description: ''\n    post:\n      operationId: management_commands_create_2\n      description: |-\n        Creates and runs a management command job.\n        Expects application/json content type in a following shape:\n        {\n            \"args\": [\u003carg1\u003e, \u003carg2\u003e],\n            \"kwargs: {\u003ckey1\u003e: \u003cval1\u003e, \u003ckey2\u003e: \u003cval2\u003e},\n            \"autostart\": bool\n        }\n        By default, autostart is set to true.\n      parameters:\n      - in: path\n        name: cmd_name\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      tags:\n      - management\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n        required: true\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJobCreate'\n          description: ''\n  /api/v2/management/commands/{cmd_name}/jobs/:\n    get:\n      operationId: management_commands_jobs_list\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: query\n        name: app_name\n        schema:\n          type: string\n      - in: query\n        name: celery_result_id\n        schema:\n          type: string\n          format: uuid\n      - in: path\n        name: cmd_name\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      - in: query\n        name: command\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: status\n        schema:\n          type: string\n          enum:\n          - CREATED\n          - FINISHED\n          - QUEUED\n          - STARTED\n      - in: query\n        name: user\n        schema:\n          type: integer\n      - in: query\n        name: user__username\n        schema:\n          type: string\n      tags:\n      - management\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedManagementCommandJobListList'\n          description: ''\n    post:\n      operationId: management_commands_jobs_create\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: cmd_name\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      tags:\n      - management\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n        required: true\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJobCreate'\n          description: ''\n  /api/v2/management/commands/{cmd_name}/jobs/{id}/:\n    get:\n      operationId: management_commands_jobs_retrieve\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: cmd_name\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this management command job.\n        required: true\n      tags:\n      - management\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJob'\n          description: ''\n  /api/v2/management/commands/{cmd_name}/jobs/{id}/start/:\n    patch:\n      operationId: management_commands_jobs_start_partial_update\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: cmd_name\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this management command job.\n        required: true\n      tags:\n      - management\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJob'\n          description: ''\n  /api/v2/management/commands/{cmd_name}/jobs/{id}/status/:\n    get:\n      operationId: management_commands_jobs_status_retrieve\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: cmd_name\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this management command job.\n        required: true\n      tags:\n      - management\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJob'\n          description: ''\n  /api/v2/management/commands/{cmd_name}/jobs/{id}/stop/:\n    patch:\n      operationId: management_commands_jobs_stop_partial_update\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: cmd_name\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this management command job.\n        required: true\n      tags:\n      - management\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJob'\n          description: ''\n  /api/v2/management/jobs/:\n    get:\n      operationId: management_jobs_list\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: query\n        name: app_name\n        schema:\n          type: string\n      - in: query\n        name: celery_result_id\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: command\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - in: query\n        name: status\n        schema:\n          type: string\n          enum:\n          - CREATED\n          - FINISHED\n          - QUEUED\n          - STARTED\n      - in: query\n        name: user\n        schema:\n          type: integer\n      - in: query\n        name: user__username\n        schema:\n          type: string\n      tags:\n      - management\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedManagementCommandJobListList'\n          description: ''\n    post:\n      operationId: management_jobs_create\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      tags:\n      - management\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ManagementCommandJobCreate'\n        required: true\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJobCreate'\n          description: ''\n  /api/v2/management/jobs/{id}/:\n    get:\n      operationId: management_jobs_retrieve\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this management command job.\n        required: true\n      tags:\n      - management\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJob'\n          description: ''\n  /api/v2/management/jobs/{id}/start/:\n    patch:\n      operationId: management_jobs_start_partial_update\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this management command job.\n        required: true\n      tags:\n      - management\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJob'\n          description: ''\n  /api/v2/management/jobs/{id}/status/:\n    get:\n      operationId: management_jobs_status_retrieve\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this management command job.\n        required: true\n      tags:\n      - management\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJob'\n          description: ''\n  /api/v2/management/jobs/{id}/stop/:\n    patch:\n      operationId: management_jobs_stop_partial_update\n      description: Create, List, Retrieve, Start, Stop and Get Status of a Management\n        Command Job.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this management command job.\n        required: true\n      tags:\n      - management\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedManagementCommandJob'\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementCommandJob'\n          description: ''\n  /api/v2/maps/:\n    get:\n      operationId: maps_list\n      description: API endpoint that allows maps to be viewed or edited.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - maps\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedMapList'\n          description: ''\n    post:\n      operationId: maps_create\n      description: |-\n        Changes in the m2m `maplayers` are committed before object changes.\n        To protect the db, this action is done within an atomic tansation.\n      tags:\n      - maps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Map'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Map'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Map'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n    patch:\n      operationId: maps_partial_update\n      description: API endpoint that allows maps to be viewed or edited.\n      tags:\n      - maps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n  /api/v2/maps/{id}/:\n    get:\n      operationId: maps_retrieve\n      description: API endpoint that allows maps to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - maps\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n    put:\n      operationId: maps_update\n      description: |-\n        Changes in the m2m `maplayers` are committed before object changes.\n        To protect the db, this action is done within an atomic tansation.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - maps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Map'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Map'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Map'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n    patch:\n      operationId: maps_partial_update_2\n      description: API endpoint that allows maps to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - maps\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n  /api/v2/maps/{id}/{field_name}/:\n    get:\n      operationId: maps_retrieve_2\n      description: |-\n        Fetch related object(s), as if sideloaded (used to support\n        link objects).\n\n        This method gets mapped to `/\u003cresource\u003e/\u003cpk\u003e/\u003cfield_name\u003e/` by\n        DynamicRouter for all DynamicRelationField fields. Generally,\n        this method probably shouldn't be overridden.\n\n        An alternative implementation would be to generate reverse queries.\n        For an exploration of that approach, see:\n            https://gist.github.com/ryochiji/54687d675978c7d96503\n      parameters:\n      - in: path\n        name: field_name\n        schema:\n          type: string\n          pattern: ^data$\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - maps\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n  /api/v2/maps/{id}/datasets/:\n    get:\n      operationId: maps_datasets_list\n      description: API endpoint allowing to retrieve the local MapLayers.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - maps\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDatasetList'\n          description: ''\n  /api/v2/maps/{id}/maplayers/:\n    get:\n      operationId: maps_maplayers_list\n      description: API endpoint allowing to retrieve the MapLayers list.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - maps\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedMapLayerList'\n          description: ''\n  /api/v2/owners/:\n    get:\n      operationId: owners_list\n      description: API endpoint that lists all possible owners.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - owners\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedOwnerList'\n          description: ''\n  /api/v2/owners/{id}/:\n    get:\n      operationId: owners_retrieve\n      description: API endpoint that lists all possible owners.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - owners\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Owner'\n          description: ''\n  /api/v2/regions/:\n    get:\n      operationId: regions_list\n      description: API endpoint that lists regions.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - regions\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedRegionList'\n          description: ''\n  /api/v2/regions/{id}/:\n    get:\n      operationId: regions_retrieve\n      description: API endpoint that lists regions.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this region.\n        required: true\n      tags:\n      - regions\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Region'\n          description: ''\n  /api/v2/resource-service/execution-status/{execution_id}:\n    get:\n      operationId: resource_service_execution_status_retrieve\n      description: |-\n        Main dispatcher endpoint to follow an API request status progress\n\n        - GET input: \u003cstr: execution id\u003e\n        - output: \u003cExecutionRequest\u003e\n      parameters:\n      - in: path\n        name: execution_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - resource-service\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n  /api/v2/resources/:\n    get:\n      operationId: resources_list\n      description: API endpoint that allows base resources to be viewed or edited.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResourceBaseList'\n          description: ''\n    post:\n      operationId: resources_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    patch:\n      operationId: resources_partial_update\n      description: API endpoint that allows base resources to be viewed or edited.\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    delete:\n      operationId: resources_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/resources/{id}/:\n    get:\n      operationId: resources_retrieve\n      description: API endpoint that allows base resources to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    put:\n      operationId: resources_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    patch:\n      operationId: resources_partial_update_2\n      description: API endpoint that allows base resources to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    delete:\n      operationId: resources_destroy_2\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/resources/{id}/{field_name}/:\n    get:\n      operationId: resources_retrieve_2\n      description: |-\n        Fetch related object(s), as if sideloaded (used to support\n        link objects).\n\n        This method gets mapped to `/\u003cresource\u003e/\u003cpk\u003e/\u003cfield_name\u003e/` by\n        DynamicRouter for all DynamicRelationField fields. Generally,\n        this method probably shouldn't be overridden.\n\n        An alternative implementation would be to generate reverse queries.\n        For an exploration of that approach, see:\n            https://gist.github.com/ryochiji/54687d675978c7d96503\n      parameters:\n      - in: path\n        name: field_name\n        schema:\n          type: string\n          pattern: ^data$\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n  /api/v2/resources/{id}/copy/:\n    put:\n      operationId: resources_copy_update\n      description: Instructs the Async dispatcher to execute a 'COPY' operation over\n        a valid 'uuid'.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /api/v2/resources/{id}/delete/:\n    delete:\n      operationId: resources_delete_destroy\n      description: Instructs the Async dispatcher to execute a 'DELETE' operation\n        over a valid 'uuid'.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /api/v2/resources/{id}/extra_metadata/:\n    get:\n      operationId: resources_extra_metadata_retrieve\n      description: Get/Update/Delete/Add extra metadata for resource\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    post:\n      operationId: resources_extra_metadata_create\n      description: Get/Update/Delete/Add extra metadata for resource\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    put:\n      operationId: resources_extra_metadata_update\n      description: Get/Update/Delete/Add extra metadata for resource\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    delete:\n      operationId: resources_extra_metadata_destroy\n      description: Get/Update/Delete/Add extra metadata for resource\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/resources/{id}/favorite/:\n    post:\n      operationId: resources_favorite_create\n      description: API endpoint allowing to retrieve the favorite Resources.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedFavoriteList'\n          description: ''\n    delete:\n      operationId: resources_favorite_destroy\n      description: API endpoint allowing to retrieve the favorite Resources.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedFavoriteList'\n          description: ''\n  /api/v2/resources/{id}/permissions/:\n    get:\n      operationId: resources_permissions_retrieve\n      description: \"\\n        Sets an object's the permission levels based on the\\\n        \\ perm_spec JSON.\\n\\n        the mapping looks like:\\n        ```\\n      \\\n        \\  {\\n            'users': {\\n                'AnonymousUser': ['view'],\\n\\\n        \\                \u003cusername\u003e: ['perm1','perm2','perm3'],\\n                \u003cusername2\u003e:\\\n        \\ ['perm1','perm2','perm3']\\n                ...\\n            },\\n       \\\n        \\     'groups': {\\n                \u003cgroupname\u003e: ['perm1','perm2','perm3'],\\n\\\n        \\                \u003cgroupname2\u003e: ['perm1','perm2','perm3'],\\n              \\\n        \\  ...\\n            }\\n        }\\n        ```\\n        \"\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          description: No response body\n    put:\n      operationId: resources_permissions_update\n      description: \"\\n        Sets an object's the permission levels based on the\\\n        \\ perm_spec JSON.\\n\\n        the mapping looks like:\\n        ```\\n      \\\n        \\  {\\n            'users': {\\n                'AnonymousUser': ['view'],\\n\\\n        \\                \u003cusername\u003e: ['perm1','perm2','perm3'],\\n                \u003cusername2\u003e:\\\n        \\ ['perm1','perm2','perm3']\\n                ...\\n            },\\n       \\\n        \\     'groups': {\\n                \u003cgroupname\u003e: ['perm1','perm2','perm3'],\\n\\\n        \\                \u003cgroupname2\u003e: ['perm1','perm2','perm3'],\\n              \\\n        \\  ...\\n            }\\n        }\\n        ```\\n        \"\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PermSpecSerialiazer'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PermSpecSerialiazer'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PermSpecSerialiazer'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          description: No response body\n    patch:\n      operationId: resources_permissions_partial_update\n      description: \"\\n        Sets an object's the permission levels based on the\\\n        \\ perm_spec JSON.\\n\\n        the mapping looks like:\\n        ```\\n      \\\n        \\  {\\n            'users': {\\n                'AnonymousUser': ['view'],\\n\\\n        \\                \u003cusername\u003e: ['perm1','perm2','perm3'],\\n                \u003cusername2\u003e:\\\n        \\ ['perm1','perm2','perm3']\\n                ...\\n            },\\n       \\\n        \\     'groups': {\\n                \u003cgroupname\u003e: ['perm1','perm2','perm3'],\\n\\\n        \\                \u003cgroupname2\u003e: ['perm1','perm2','perm3'],\\n              \\\n        \\  ...\\n            }\\n        }\\n        ```\\n        \"\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPermSpecSerialiazer'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedPermSpecSerialiazer'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedPermSpecSerialiazer'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          description: No response body\n    delete:\n      operationId: resources_permissions_destroy\n      description: \"\\n        Sets an object's the permission levels based on the\\\n        \\ perm_spec JSON.\\n\\n        the mapping looks like:\\n        ```\\n      \\\n        \\  {\\n            'users': {\\n                'AnonymousUser': ['view'],\\n\\\n        \\                \u003cusername\u003e: ['perm1','perm2','perm3'],\\n                \u003cusername2\u003e:\\\n        \\ ['perm1','perm2','perm3']\\n                ...\\n            },\\n       \\\n        \\     'groups': {\\n                \u003cgroupname\u003e: ['perm1','perm2','perm3'],\\n\\\n        \\                \u003cgroupname2\u003e: ['perm1','perm2','perm3'],\\n              \\\n        \\  ...\\n            }\\n        }\\n        ```\\n        \"\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          description: No response body\n  /api/v2/resources/{id}/ratings/:\n    get:\n      operationId: resources_ratings_retrieve\n      description: API endpoint allowing to rate and get overall rating of the Resource.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n    post:\n      operationId: resources_ratings_create\n      description: API endpoint allowing to rate and get overall rating of the Resource.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /api/v2/resources/{id}/set_thumbnail/:\n    put:\n      operationId: resources_set_thumbnail_update\n      description: API endpoint allowing to set thumbnail of the Resource.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /api/v2/resources/{id}/update/:\n    put:\n      operationId: resources_update_update\n      description: Instructs the Async dispatcher to execute a 'UPDATE' operation\n        over a valid 'uuid'.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /api/v2/resources/{resource_id}/set_thumbnail_from_bbox/:\n    post:\n      operationId: resources_set_thumbnail_from_bbox_create\n      description: API endpoint allowing to set the thumbnail url for an existing\n        dataset.\n      parameters:\n      - in: path\n        name: resource_id\n        schema:\n          type: string\n          pattern: ^\\d+$\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /api/v2/resources/approved/:\n    get:\n      operationId: resources_approved_list\n      description: API endpoint allowing to retrieve the approved Resources.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResourceBaseList'\n          description: ''\n  /api/v2/resources/create/{resource_type}/:\n    post:\n      operationId: resources_create_create\n      description: Instructs the Async dispatcher to execute a 'CREATE' operation.\n      parameters:\n      - in: path\n        name: resource_type\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /api/v2/resources/favorites/:\n    get:\n      operationId: resources_favorites_list\n      description: API endpoint allowing to retrieve the favorite Resources.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedFavoriteList'\n          description: ''\n  /api/v2/resources/featured/:\n    get:\n      operationId: resources_featured_list\n      description: API endpoint allowing to retrieve the featured Resources.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResourceBaseList'\n          description: ''\n  /api/v2/resources/ingest/{resource_type}/:\n    post:\n      operationId: resources_ingest_create\n      description: Instructs the Async dispatcher to execute a 'INGEST' operation.\n      parameters:\n      - in: path\n        name: resource_type\n        schema:\n          type: string\n          pattern: ^\\w+$\n        required: true\n      tags:\n      - resources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /api/v2/resources/published/:\n    get:\n      operationId: resources_published_list\n      description: API endpoint allowing to retrieve the published Resources.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResourceBaseList'\n          description: ''\n  /api/v2/resources/resource_types/:\n    get:\n      operationId: resources_resource_types_retrieve\n      description: \"\\n        Returns the list of available ResourceBase polymorphic_ctypes.\\n\\\n        \\n        the mapping looks like:\\n        ```\\n        {\\n            \\\"\\\n        resource_types\\\":[\\n                {\\n                    \\\"name\\\": \\\"layer\\\"\\\n        ,\\n                    \\\"count\\\": \u003cnumber of layers\u003e\\n                },\\n\\\n        \\                {\\n                    \\\"name\\\": \\\"map\\\",\\n             \\\n        \\       \\\"count\\\": \u003cnumber of maps\u003e\\n                },\\n                {\\n\\\n        \\                    \\\"name\\\": \\\"document\\\",\\n                    \\\"count\\\"\\\n        : \u003cnumber of documents\u003e\\n                },\\n                {\\n         \\\n        \\           \\\"name\\\": \\\"geostory\\\",\\n                    \\\"count\\\": \u003cnumber\\\n        \\ of geostories\u003e\\n                }\\n            ]\\n        }\\n        ```\\n\\\n        \\        \"\n      tags:\n      - resources\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBaseTypes'\n          description: ''\n  /api/v2/schema/:\n    get:\n      operationId: schema_retrieve\n      description: |-\n        OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n        - YAML: application/vnd.oai.openapi\n        - JSON: application/vnd.oai.openapi+json\n      parameters:\n      - in: query\n        name: format\n        schema:\n          type: string\n          enum:\n          - json\n          - yaml\n      - in: query\n        name: lang\n        schema:\n          type: string\n          enum:\n          - de-de\n          - en-us\n          - es-es\n          - fr-fr\n          - it-it\n      tags:\n      - schema\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/vnd.oai.openapi:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/yaml:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/vnd.oai.openapi+json:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/v2/tkeywords/:\n    get:\n      operationId: tkeywords_list\n      description: API endpoint that lists Thesaurus keywords.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - tkeywords\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedThesaurusKeywordList'\n          description: ''\n  /api/v2/tkeywords/{id}/:\n    get:\n      operationId: tkeywords_retrieve\n      description: API endpoint that lists Thesaurus keywords.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this thesaurus keyword.\n        required: true\n      tags:\n      - tkeywords\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThesaurusKeyword'\n          description: ''\n  /api/v2/upload-parallelism-limits/:\n    get:\n      operationId: upload_parallelism_limits_list\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - upload-parallelism-limits\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUploadParallelismLimitList'\n          description: ''\n    post:\n      operationId: upload_parallelism_limits_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - upload-parallelism-limits\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadParallelismLimit'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UploadParallelismLimit'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UploadParallelismLimit'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadParallelismLimit'\n          description: ''\n  /api/v2/upload-parallelism-limits/{slug}/:\n    get:\n      operationId: upload_parallelism_limits_retrieve\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: A unique value identifying this upload parallelism limit.\n        required: true\n      tags:\n      - upload-parallelism-limits\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadParallelismLimit'\n          description: ''\n  /api/v2/upload-size-limits/:\n    get:\n      operationId: upload_size_limits_list\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - upload-size-limits\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUploadSizeLimitList'\n          description: ''\n    post:\n      operationId: upload_size_limits_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - upload-size-limits\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadSizeLimit'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UploadSizeLimit'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UploadSizeLimit'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadSizeLimit'\n          description: ''\n  /api/v2/upload-size-limits/{slug}/:\n    get:\n      operationId: upload_size_limits_retrieve\n      description: |-\n        A viewset that can support dynamic API features.\n\n        Attributes:\n          features: A list of features supported by the viewset.\n          meta: Extra data that is added to the response by the DynamicRenderer.\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: A unique value identifying this upload size limit.\n        required: true\n      tags:\n      - upload-size-limits\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadSizeLimit'\n          description: ''\n  /api/v2/uploads/:\n    get:\n      operationId: uploads_list\n      description: API endpoint that allows uploads to be viewed or edited.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - uploads\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUploadList'\n          description: ''\n    post:\n      operationId: uploads_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - uploads\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Upload'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n  /api/v2/uploads/{id}/:\n    get:\n      operationId: uploads_retrieve\n      description: API endpoint that allows uploads to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this upload.\n        required: true\n      tags:\n      - uploads\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n  /api/v2/uploads/upload/:\n    post:\n      operationId: uploads_upload_create\n      description: \"\\n        Starts an upload session based on the Dataset Upload\\\n        \\ Form.\\n\\n        the form params look like:\\n        ```\\n            'csrfmiddlewaretoken':\\\n        \\ self.csrf_token,\\n            'permissions': '{ \\\"users\\\": {\\\"AnonymousUser\\\"\\\n        : [\\\"view_resourcebase\\\"]} , \\\"groups\\\":{}}',\\n            'time': 'false',\\n\\\n        \\            'charset': 'UTF-8',\\n            'base_file': base_file,\\n  \\\n        \\          'dbf_file': dbf_file,\\n            'shx_file': shx_file,\\n    \\\n        \\        'prj_file': prj_file,\\n            'tif_file': tif_file\\n       \\\n        \\ ```\\n        \"\n      tags:\n      - uploads\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Upload'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          description: No response body\n  /api/v2/users/:\n    get:\n      operationId: users_list\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - users\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserProfileList'\n          description: ''\n    post:\n      operationId: users_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    patch:\n      operationId: users_partial_update\n      description: API endpoint that allows users to be viewed or edited.\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfile'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    delete:\n      operationId: users_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - users\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/users/{id}/:\n    get:\n      operationId: users_retrieve\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - users\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    put:\n      operationId: users_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    patch:\n      operationId: users_partial_update_2\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfile'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    delete:\n      operationId: users_destroy_2\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - users\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/users/{id}/groups/:\n    get:\n      operationId: users_groups_list\n      description: API endpoint allowing to retrieve the Groups the user is member\n        of.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - users\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedGroupProfileList'\n          description: ''\n  /api/v2/users/{id}/resources/:\n    get:\n      operationId: users_resources_list\n      description: API endpoint allowing to retrieve the Resources visible to the\n        user.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - users\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResourceBaseList'\n          description: ''\ncomponents:\n  schemas:\n    AccessEnum:\n      enum:\n      - public\n      - public-invite\n      - private\n      type: string\n    BlankEnum:\n      enum:\n      - ''\n    BriefAsynchronousHarvestingSession:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        started:\n          type: string\n          format: date-time\n          readOnly: true\n        updated:\n          type: string\n          format: date-time\n          readOnly: true\n        ended:\n          type: string\n          format: date-time\n          nullable: true\n        total_records_to_process:\n          type: integer\n          readOnly: true\n          description: Number of records being processed in this session\n        records_done:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Number of records that have already been processed\n      required:\n      - id\n      - started\n      - total_records_to_process\n      - updated\n    BriefHarvester:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          description: Harvester name\n          maxLength: 255\n        status:\n          $ref: '#/components/schemas/Status175Enum'\n        remote_url:\n          type: string\n          format: uri\n          description: Base URL of the remote service that is to be harvested\n          maxLength: 200\n        remote_available:\n          type: boolean\n          readOnly: true\n          description: Whether the remote service is known to be available or not\n        scheduling_enabled:\n          type: boolean\n          description: Whether to periodically schedule this harvester to look for\n            resources on the remote service\n        harvesting_session_update_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should new harvesting sessions be automatically\n            scheduled?\n        refresh_harvestable_resources_update_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should new refresh sessions be automatically\n            scheduled?\n        check_availability_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should the remote service be checked\n            for availability?\n        default_owner:\n          type: integer\n        links:\n          type: string\n          readOnly: true\n      required:\n      - id\n      - links\n      - name\n      - remote_available\n      - remote_url\n    Dataset:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        workspace:\n          type: string\n          readOnly: true\n        store:\n          type: string\n          readOnly: true\n        subtype:\n          type: string\n          nullable: true\n          maxLength: 128\n        charset:\n          type: string\n          readOnly: true\n        is_mosaic:\n          type: boolean\n          title: Is mosaic?\n        has_time:\n          type: boolean\n          title: Has time?\n        has_elevation:\n          type: boolean\n          title: Has elevation?\n        time_regex:\n          nullable: true\n          oneOf:\n          - $ref: '#/components/schemas/TimeRegexEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        elevation_regex:\n          type: string\n          nullable: true\n          maxLength: 128\n        featureinfo_custom_template:\n          type: string\n        ows_url:\n          type: string\n          format: uri\n          nullable: true\n          description: The URL of the OWS service providing this layer, if any exists.\n          maxLength: 200\n        ptype:\n          type: string\n          title: P-Type\n          maxLength: 255\n        default_style:\n          type: string\n          readOnly: true\n          nullable: true\n        styles:\n          type: string\n          readOnly: true\n        attribute_set:\n          type: string\n          readOnly: true\n          nullable: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n      required:\n      - alternate\n      - attribute_set\n      - charset\n      - created\n      - default_style\n      - detail_url\n      - download_url\n      - featureinfo_custom_template\n      - is_copyable\n      - last_updated\n      - metadata_author\n      - name\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - processed\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - sourcetype\n      - state\n      - store\n      - styles\n      - thumbnail_url\n      - title\n      - uuid\n      - workspace\n    DatasetList:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        workspace:\n          type: string\n          readOnly: true\n        store:\n          type: string\n          readOnly: true\n        subtype:\n          type: string\n          nullable: true\n          maxLength: 128\n        charset:\n          type: string\n          readOnly: true\n        is_mosaic:\n          type: boolean\n          title: Is mosaic?\n        has_time:\n          type: boolean\n          title: Has time?\n        has_elevation:\n          type: boolean\n          title: Has elevation?\n        time_regex:\n          nullable: true\n          oneOf:\n          - $ref: '#/components/schemas/TimeRegexEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        elevation_regex:\n          type: string\n          nullable: true\n          maxLength: 128\n        featureinfo_custom_template:\n          type: string\n        ptype:\n          type: string\n          title: P-Type\n          maxLength: 255\n        default_style:\n          type: string\n          readOnly: true\n          nullable: true\n        styles:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n      required:\n      - alternate\n      - charset\n      - created\n      - default_style\n      - detail_url\n      - download_url\n      - featureinfo_custom_template\n      - is_copyable\n      - last_updated\n      - metadata_author\n      - name\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - processed\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - sourcetype\n      - state\n      - store\n      - styles\n      - thumbnail_url\n      - title\n      - uuid\n      - workspace\n    Document:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        href:\n          type: string\n          readOnly: true\n        subtype:\n          type: string\n          nullable: true\n          maxLength: 128\n        extension:\n          type: string\n          nullable: true\n          maxLength: 128\n        mime_type:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n      required:\n      - alternate\n      - created\n      - detail_url\n      - download_url\n      - href\n      - is_copyable\n      - last_updated\n      - metadata_author\n      - mime_type\n      - name\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - processed\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - sourcetype\n      - state\n      - thumbnail_url\n      - title\n      - uuid\n    Favorite:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        resource:\n          type: string\n          readOnly: true\n      required:\n      - resource\n    GeoApp:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n      required:\n      - alternate\n      - created\n      - detail_url\n      - download_url\n      - is_copyable\n      - last_updated\n      - metadata_author\n      - name\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - processed\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - sourcetype\n      - state\n      - thumbnail_url\n      - title\n      - uuid\n    GroupProfile:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        title:\n          type: string\n          maxLength: 1000\n        group:\n          type: string\n        slug:\n          type: string\n          maxLength: 1000\n          pattern: ^[-a-zA-Z0-9_]+$\n        logo:\n          type: string\n          format: uri\n        description:\n          type: string\n        email:\n          type: string\n          format: email\n          nullable: true\n          description: Email used to contact one or all group members, such as a mailing\n            list, shared email, or exchange group.\n          maxLength: 254\n        keywords:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        access:\n          allOf:\n          - $ref: '#/components/schemas/AccessEnum'\n          description: 'Public: Any registered user can view and join a public group.\u003cbr\u003ePublic\n            (invite-only):Any registered user can view the group.  Only invited users\n            can join.\u003cbr\u003ePrivate: Registered users cannot see any details about the\n            group, including membership.  Only invited users can join.'\n        categories:\n          type: array\n          items:\n            type: string\n      required:\n      - categories\n      - description\n      - group\n      - keywords\n      - pk\n      - slug\n      - title\n    Harvester:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          description: Harvester name\n          maxLength: 255\n        status:\n          $ref: '#/components/schemas/Status175Enum'\n        remote_url:\n          type: string\n          format: uri\n          description: Base URL of the remote service that is to be harvested\n          maxLength: 200\n        remote_available:\n          type: boolean\n          readOnly: true\n          description: Whether the remote service is known to be available or not\n        scheduling_enabled:\n          type: boolean\n          description: Whether to periodically schedule this harvester to look for\n            resources on the remote service\n        check_availability_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should the remote service be checked\n            for availability?\n        harvesting_session_update_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should new harvesting sessions be automatically\n            scheduled?\n        refresh_harvestable_resources_update_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should new refresh sessions be automatically\n            scheduled?\n        default_owner:\n          type: integer\n        harvester_type:\n          allOf:\n          - $ref: '#/components/schemas/HarvesterTypeEnum'\n          description: Harvester class used to perform harvesting sessions. New harvester\n            types can be added by an admin by changing the main GeoNode `settings.py`\n            file\n        harvester_type_specific_configuration:\n          type: object\n          additionalProperties: {}\n          description: Configuration specific to each harvester type. Please consult\n            GeoNode documentation on harvesting for more info. This field is mandatory,\n            so at the very least an empty object (i.e. {}) must be supplied.\n        last_checked_availability:\n          type: string\n          format: date-time\n          nullable: true\n          description: Last time the remote server was checked for availability\n        last_checked_harvestable_resources:\n          type: string\n          format: date-time\n          nullable: true\n          description: Last time the remote server was checked for harvestable resources\n        last_check_harvestable_resources_message:\n          type: string\n        harvest_new_resources_by_default:\n          type: boolean\n          description: Should new resources be harvested automatically without explicit\n            selection?\n        delete_orphan_resources_automatically:\n          type: boolean\n          description: Orphan resources are those that have previously been created\n            by means of a harvesting operation but that GeoNode can no longer find\n            on the remote service being harvested. Should these resources be deleted\n            from GeoNode automatically? This also applies to when a harvester configuration\n            is deleted, in which case all of the resources that originated from that\n            harvester are now considered to be orphan.\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Date of last update to the harvester configuration.\n        links:\n          type: string\n          readOnly: true\n      required:\n      - id\n      - last_updated\n      - links\n      - name\n      - remote_available\n      - remote_url\n    HarvesterTypeEnum:\n      enum:\n      - geonode.harvesting.harvesters.geonodeharvester.GeonodeUnifiedHarvesterWorker\n      - geonode.harvesting.harvesters.wms.OgcWmsHarvester\n      - geonode.harvesting.harvesters.arcgis.ArcgisHarvesterWorker\n      type: string\n    HierarchicalKeyword:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          maxLength: 100\n        slug:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        path:\n          type: string\n          maxLength: 255\n        depth:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n        numchild:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n      required:\n      - depth\n      - id\n      - name\n      - path\n      - slug\n    ManagementCommandJob:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        command:\n          type: string\n          maxLength: 250\n        app_name:\n          type: string\n          maxLength: 250\n        user:\n          type: integer\n        status:\n          $ref: '#/components/schemas/StatusC7bEnum'\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        start_time:\n          type: string\n          format: date-time\n          nullable: true\n        end_time:\n          type: string\n          format: date-time\n          nullable: true\n        args:\n          type: object\n          additionalProperties: {}\n          title: Positional Arguments\n          description: 'JSON encoded positional arguments (Example: [\"arg1\", \"arg2\"])'\n        kwargs:\n          type: object\n          additionalProperties: {}\n          title: Keyword Arguments\n          description: 'JSON encoded keyword arguments (Example: {\"argument\": \"value\"})'\n        celery_result_id:\n          type: string\n          format: uuid\n          nullable: true\n        output_message:\n          type: string\n          nullable: true\n      required:\n      - app_name\n      - command\n      - created_at\n      - id\n      - user\n    ManagementCommandJobCreate:\n      type: object\n      properties:\n        command:\n          type: string\n          maxLength: 250\n        args:\n          type: object\n          additionalProperties: {}\n          default: []\n        kwargs:\n          type: object\n          additionalProperties: {}\n          default: {}\n        autostart:\n          type: boolean\n          default: true\n      required:\n      - command\n    ManagementCommandJobList:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        command:\n          type: string\n          maxLength: 250\n        app_name:\n          type: string\n          maxLength: 250\n        user:\n          type: integer\n        status:\n          $ref: '#/components/schemas/StatusC7bEnum'\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - app_name\n      - command\n      - created_at\n      - id\n      - user\n    Map:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        urlsuffix:\n          type: string\n          title: Site URL\n          maxLength: 255\n        featuredurl:\n          type: string\n          title: Featured Map URL\n          maxLength: 255\n        maplayers:\n          type: string\n          nullable: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n      required:\n      - alternate\n      - created\n      - detail_url\n      - download_url\n      - is_copyable\n      - last_updated\n      - metadata_author\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - processed\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - sourcetype\n      - state\n      - thumbnail_url\n      - title\n      - uuid\n    MapLayer:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        extra_params:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        current_style:\n          type: string\n          nullable: true\n        dataset:\n          type: string\n          nullable: true\n        name:\n          type: string\n          nullable: true\n      required:\n      - pk\n    NullEnum:\n      enum:\n      - null\n    Owner:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        first_name:\n          type: string\n          maxLength: 150\n        last_name:\n          type: string\n          maxLength: 150\n        avatar:\n          type: string\n          readOnly: true\n        perms:\n          type: string\n          readOnly: true\n      required:\n      - avatar\n      - perms\n      - pk\n      - username\n    PaginatedBriefAsynchronousHarvestingSessionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/BriefAsynchronousHarvestingSession'\n    PaginatedBriefHarvesterList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/BriefHarvester'\n    PaginatedDatasetList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Dataset'\n    PaginatedDatasetListList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatasetList'\n    PaginatedDocumentList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Document'\n    PaginatedFavoriteList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Favorite'\n    PaginatedGeoAppList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoApp'\n    PaginatedGroupProfileList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/GroupProfile'\n    PaginatedHierarchicalKeywordList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/HierarchicalKeyword'\n    PaginatedManagementCommandJobListList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ManagementCommandJobList'\n    PaginatedMapLayerList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/MapLayer'\n    PaginatedMapList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Map'\n    PaginatedOwnerList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Owner'\n    PaginatedRegionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Region'\n    PaginatedResourceBaseList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceBase'\n    PaginatedSimpleMapLayerList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimpleMapLayer'\n    PaginatedSimpleMapList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimpleMap'\n    PaginatedThesaurusKeywordList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ThesaurusKeyword'\n    PaginatedTopicCategoryList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/TopicCategory'\n    PaginatedUploadList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Upload'\n    PaginatedUploadParallelismLimitList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UploadParallelismLimit'\n    PaginatedUploadSizeLimitList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UploadSizeLimit'\n    PaginatedUserProfileList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserProfile'\n    PatchedDataset:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        workspace:\n          type: string\n          readOnly: true\n        store:\n          type: string\n          readOnly: true\n        subtype:\n          type: string\n          nullable: true\n          maxLength: 128\n        charset:\n          type: string\n          readOnly: true\n        is_mosaic:\n          type: boolean\n          title: Is mosaic?\n        has_time:\n          type: boolean\n          title: Has time?\n        has_elevation:\n          type: boolean\n          title: Has elevation?\n        time_regex:\n          nullable: true\n          oneOf:\n          - $ref: '#/components/schemas/TimeRegexEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        elevation_regex:\n          type: string\n          nullable: true\n          maxLength: 128\n        featureinfo_custom_template:\n          type: string\n        ows_url:\n          type: string\n          format: uri\n          nullable: true\n          description: The URL of the OWS service providing this layer, if any exists.\n          maxLength: 200\n        ptype:\n          type: string\n          title: P-Type\n          maxLength: 255\n        default_style:\n          type: string\n          readOnly: true\n          nullable: true\n        styles:\n          type: string\n          readOnly: true\n        attribute_set:\n          type: string\n          readOnly: true\n          nullable: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n    PatchedDocument:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        href:\n          type: string\n          readOnly: true\n        subtype:\n          type: string\n          nullable: true\n          maxLength: 128\n        extension:\n          type: string\n          nullable: true\n          maxLength: 128\n        mime_type:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n    PatchedGeoApp:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        data:\n          type: string\n        name:\n          type: string\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n    PatchedGroupProfile:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        title:\n          type: string\n          maxLength: 1000\n        group:\n          type: string\n        slug:\n          type: string\n          maxLength: 1000\n          pattern: ^[-a-zA-Z0-9_]+$\n        logo:\n          type: string\n          format: uri\n        description:\n          type: string\n        email:\n          type: string\n          format: email\n          nullable: true\n          description: Email used to contact one or all group members, such as a mailing\n            list, shared email, or exchange group.\n          maxLength: 254\n        keywords:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        access:\n          allOf:\n          - $ref: '#/components/schemas/AccessEnum'\n          description: 'Public: Any registered user can view and join a public group.\u003cbr\u003ePublic\n            (invite-only):Any registered user can view the group.  Only invited users\n            can join.\u003cbr\u003ePrivate: Registered users cannot see any details about the\n            group, including membership.  Only invited users can join.'\n        categories:\n          type: array\n          items:\n            type: string\n    PatchedHarvester:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          description: Harvester name\n          maxLength: 255\n        status:\n          $ref: '#/components/schemas/Status175Enum'\n        remote_url:\n          type: string\n          format: uri\n          description: Base URL of the remote service that is to be harvested\n          maxLength: 200\n        remote_available:\n          type: boolean\n          readOnly: true\n          description: Whether the remote service is known to be available or not\n        scheduling_enabled:\n          type: boolean\n          description: Whether to periodically schedule this harvester to look for\n            resources on the remote service\n        check_availability_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should the remote service be checked\n            for availability?\n        harvesting_session_update_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should new harvesting sessions be automatically\n            scheduled?\n        refresh_harvestable_resources_update_frequency:\n          type: integer\n          maximum: 2147483647\n          minimum: 0\n          description: How often (in minutes) should new refresh sessions be automatically\n            scheduled?\n        default_owner:\n          type: integer\n        harvester_type:\n          allOf:\n          - $ref: '#/components/schemas/HarvesterTypeEnum'\n          description: Harvester class used to perform harvesting sessions. New harvester\n            types can be added by an admin by changing the main GeoNode `settings.py`\n            file\n        harvester_type_specific_configuration:\n          type: object\n          additionalProperties: {}\n          description: Configuration specific to each harvester type. Please consult\n            GeoNode documentation on harvesting for more info. This field is mandatory,\n            so at the very least an empty object (i.e. {}) must be supplied.\n        last_checked_availability:\n          type: string\n          format: date-time\n          nullable: true\n          description: Last time the remote server was checked for availability\n        last_checked_harvestable_resources:\n          type: string\n          format: date-time\n          nullable: true\n          description: Last time the remote server was checked for harvestable resources\n        last_check_harvestable_resources_message:\n          type: string\n        harvest_new_resources_by_default:\n          type: boolean\n          description: Should new resources be harvested automatically without explicit\n            selection?\n        delete_orphan_resources_automatically:\n          type: boolean\n          description: Orphan resources are those that have previously been created\n            by means of a harvesting operation but that GeoNode can no longer find\n            on the remote service being harvested. Should these resources be deleted\n            from GeoNode automatically? This also applies to when a harvester configuration\n            is deleted, in which case all of the resources that originated from that\n            harvester are now considered to be orphan.\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Date of last update to the harvester configuration.\n        links:\n          type: string\n          readOnly: true\n    PatchedManagementCommandJob:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        command:\n          type: string\n          maxLength: 250\n        app_name:\n          type: string\n          maxLength: 250\n        user:\n          type: integer\n        status:\n          $ref: '#/components/schemas/StatusC7bEnum'\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        start_time:\n          type: string\n          format: date-time\n          nullable: true\n        end_time:\n          type: string\n          format: date-time\n          nullable: true\n        args:\n          type: object\n          additionalProperties: {}\n          title: Positional Arguments\n          description: 'JSON encoded positional arguments (Example: [\"arg1\", \"arg2\"])'\n        kwargs:\n          type: object\n          additionalProperties: {}\n          title: Keyword Arguments\n          description: 'JSON encoded keyword arguments (Example: {\"argument\": \"value\"})'\n        celery_result_id:\n          type: string\n          format: uuid\n          nullable: true\n        output_message:\n          type: string\n          nullable: true\n    PatchedMap:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        urlsuffix:\n          type: string\n          title: Site URL\n          maxLength: 255\n        featuredurl:\n          type: string\n          title: Featured Map URL\n          maxLength: 255\n        data:\n          type: string\n        maplayers:\n          type: string\n          nullable: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        sourcetype:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n    PatchedPermSpecSerialiazer:\n      type: object\n      description: DREST-compatible baseclass for non-model serializers.\n      properties:\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermSpecFieldSerialiazer'\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermSpecFieldSerialiazer'\n    PatchedResourceBase:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        perms:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        doi:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        restriction_code_type:\n          type: string\n          nullable: true\n        constraints_other:\n          type: string\n        license:\n          type: string\n          nullable: true\n        language:\n          type: string\n        spatial_representation_type:\n          type: string\n          nullable: true\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        data:\n          type: string\n        subtype:\n          type: string\n          nullable: true\n          maxLength: 128\n        sourcetype:\n          type: string\n          readOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        metadata:\n          type: string\n          nullable: true\n        executions:\n          type: string\n          readOnly: true\n        thumbnail_url:\n          type: string\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n    PatchedUserProfile:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        first_name:\n          type: string\n          maxLength: 150\n        last_name:\n          type: string\n          maxLength: 150\n        avatar:\n          type: string\n          readOnly: true\n        perms:\n          type: string\n          readOnly: true\n        is_superuser:\n          type: boolean\n          title: Superuser status\n          description: Designates that this user has all permissions without explicitly\n            assigning them.\n        is_staff:\n          type: boolean\n          title: Staff status\n          description: Designates whether the user can log into this admin site.\n    PermSpecFieldSerialiazer:\n      type: object\n      description: DREST-compatible baseclass for non-model serializers.\n      properties:\n        perm_spec:\n          type: array\n          items: {}\n      required:\n      - perm_spec\n    PermSpecSerialiazer:\n      type: object\n      description: DREST-compatible baseclass for non-model serializers.\n      properties:\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermSpecFieldSerialiazer'\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermSpecFieldSerialiazer'\n      required:\n      - groups\n      - users\n    Region:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        code:\n          type: string\n          maxLength: 50\n        name:\n          type: string\n          maxLength: 255\n        name_en:\n          type: string\n          nullable: true\n          title: Name [en]\n          maxLength: 255\n        bbox_x0:\n          type: string\n          format: decimal\n          pattern: ^\\d{0,15}(?:\\.\\d{0,15})?$\n          nullable: true\n        bbox_x1:\n          type: string\n          format: decimal\n          pattern: ^\\d{0,15}(?:\\.\\d{0,15})?$\n          nullable: true\n        bbox_y0:\n          type: string\n          format: decimal\n          pattern: ^\\d{0,15}(?:\\.\\d{0,15})?$\n          nullable: true\n        bbox_y1:\n          type: string\n          format: decimal\n          pattern: ^\\d{0,15}(?:\\.\\d{0,15})?$\n          nullable: true\n        srid:\n          type: string\n          maxLength: 30\n        lft:\n          type: integer\n          readOnly: true\n        rght:\n          type: integer\n          readOnly: true\n        tree_id:\n          type: integer\n          readOnly: true\n        level:\n          type: integer\n          readOnly: true\n        parent:\n          type: integer\n          nullable: true\n      required:\n      - code\n      - id\n      - level\n      - lft\n      - name\n      - rght\n      - tree_id\n    ResourceBase:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        perms:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        tkeywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        doi:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        restriction_code_type:\n          type: string\n          nullable: true\n        constraints_other:\n          type: string\n        license:\n          type: string\n          nullable: true\n        language:\n          type: string\n        spatial_representation_type:\n          type: string\n          nullable: true\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        state:\n          type: string\n          readOnly: true\n        subtype:\n          type: string\n          nullable: true\n          maxLength: 128\n        sourcetype:\n          type: string\n          readOnly: true\n        is_copyable:\n          type: boolean\n          readOnly: true\n        blob:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n        thumbnail_url:\n          type: string\n          readOnly: true\n        download_url:\n          type: string\n          readOnly: true\n      required:\n      - alternate\n      - created\n      - detail_url\n      - download_url\n      - is_copyable\n      - last_updated\n      - metadata_author\n      - owner\n      - perms\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - processed\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - sourcetype\n      - state\n      - thumbnail_url\n      - title\n      - uuid\n    ResourceBaseTypes:\n      type: object\n      description: DREST-compatible baseclass for non-model serializers.\n      properties:\n        name:\n          type: string\n        count:\n          type: integer\n      required:\n      - count\n      - name\n    SimpleMap:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        title:\n          type: string\n          description: name by which the cited resource is known\n          maxLength: 255\n        detail_url:\n          type: string\n          readOnly: true\n      required:\n      - detail_url\n      - pk\n      - title\n    SimpleMapLayer:\n      type: object\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        name:\n          type: string\n          nullable: true\n        extra_params:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        current_style:\n          type: string\n          nullable: true\n      required:\n      - pk\n    Status175Enum:\n      enum:\n      - ready\n      - updating-harvestable-resources\n      - aborting-update-harvestable-resources\n      - harvesting-resources\n      - aborting-harvesting-resources\n      - checking-availability\n      type: string\n    StatusC7bEnum:\n      enum:\n      - CREATED\n      - QUEUED\n      - STARTED\n      - FINISHED\n      type: string\n    ThesaurusKeyword:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        about:\n          type: string\n          nullable: true\n          maxLength: 255\n        alt_label:\n          type: string\n          nullable: true\n          default: ''\n          maxLength: 255\n        thesaurus:\n          type: integer\n      required:\n      - id\n      - thesaurus\n    TimeRegexEnum:\n      enum:\n      - '[0-9]{8}'\n      - '[0-9]{8}T[0-9]{6}'\n      - '[0-9]{8}T[0-9]{6}Z'\n      type: string\n    TopicCategory:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        identifier:\n          type: string\n          maxLength: 255\n        description:\n          type: string\n        description_en:\n          type: string\n          nullable: true\n          title: Description [en]\n        gn_description:\n          type: string\n          nullable: true\n          title: GeoNode description\n        gn_description_en:\n          type: string\n          nullable: true\n          title: GeoNode description [en]\n        is_choice:\n          type: boolean\n        fa_class:\n          type: string\n          maxLength: 64\n      required:\n      - id\n    Upload:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          nullable: true\n          maxLength: 64\n        date:\n          type: string\n          format: date-time\n        create_date:\n          type: string\n          format: date-time\n        user:\n          type: integer\n          nullable: true\n        state:\n          type: string\n          maxLength: 16\n        progress:\n          type: string\n          readOnly: true\n        complete:\n          type: boolean\n        import_id:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        resume_url:\n          type: string\n          readOnly: true\n        delete_url:\n          type: string\n          readOnly: true\n        import_url:\n          type: string\n          readOnly: true\n        detail_url:\n          type: string\n          readOnly: true\n        uploadfile_set:\n          type: string\n          readOnly: true\n      required:\n      - delete_url\n      - detail_url\n      - id\n      - import_url\n      - progress\n      - resume_url\n      - state\n      - uploadfile_set\n    UploadParallelismLimit:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        slug:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        description:\n          type: string\n          nullable: true\n          maxLength: 255\n        max_number:\n          type: integer\n          maximum: 32767\n          minimum: 0\n          description: The maximum number of parallel uploads (0 to 32767).\n      required:\n      - slug\n    UploadSizeLimit:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        slug:\n          type: string\n          maxLength: 255\n          minLength: 3\n          pattern: ^[-a-zA-Z0-9_]+$\n        description:\n          type: string\n          nullable: true\n          maxLength: 255\n        max_size:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: 0\n          format: int64\n          description: The maximum file size allowed for upload (bytes).\n        max_size_label:\n          type: string\n          readOnly: true\n      required:\n      - max_size_label\n      - slug\n    UserProfile:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        first_name:\n          type: string\n          maxLength: 150\n        last_name:\n          type: string\n          maxLength: 150\n        avatar:\n          type: string\n          readOnly: true\n        perms:\n          type: string\n          readOnly: true\n        is_superuser:\n          type: boolean\n          title: Superuser status\n          description: Designates that this user has all permissions without explicitly\n            assigning them.\n        is_staff:\n          type: boolean\n          title: Staff status\n          description: Designates whether the user can log into this admin site.\n      required:\n      - avatar\n      - perms\n      - pk\n      - username\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: sessionid\n    oauth2:\n      type: oauth2\n      flows: {}\n"
		}
	},
	"Error": "parse: parse spec: paths: /api/v2/management/commands/{cmd_name}/jobs/: post: operation \"management_commands_jobs_create\": requestBody: content: \"multipart/form-data\": parse schema: parse schema: resolve \"#/components/schemas/ManagementCommandJobCreate\": parse schema: property \"args\": parse default: unexpected type: \"object\""
}