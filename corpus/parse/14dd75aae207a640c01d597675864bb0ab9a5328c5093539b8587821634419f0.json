{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Ontologies_GET.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/Ontologies/Ontologies_GET.yaml",
			"byteSize": 1620,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /ontologies:\n    get:\n      summary: Get the Ontologies\n      description: Call to retrieve a list of observation variable ontologies available in the system.\n      parameters:\n      - description: The unique identifier for an ontology definition\n        in: query\n        name: ontologyDbId\n        required: false\n        schema:\n          type: string\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                title: OntologyListResponse\n                type: object\n                properties:\n                  '@context':\n                    $ref: '#/components/schemas/Context'\n                  metadata:\n                    $ref: '#/components/schemas/metadata'\n                  result:\n                    properties:\n                      data:\n                        items:\n                          $ref: '#/components/schemas/Ontology'\n                        type: array\n                    required:\n                    - data\n                    type: object\n                required:\n                - metadata\n                - result\n          description: OK\n          headers: {}\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Ontologies\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /ontologies: get: operation \"\": parameters: parse parameter \"\": resolve \"#/components/parameters/page\" reference: component by reference \"#/components/parameters/page\" not found"
}