{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "reloadly.com-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/reloadly.com-1.0.0-swagger.yaml",
			"byteSize": 65391,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: Reloadly\n  description: \u003e-\n    Reloadly Mobile top up API enables your apps, websites and any other\n    platforms to send mobile credit top ups to over 4.5 billion phones covering\n    600+ mobile operators worldwide.  \n\n    We provide a commission for every operator available. First you will need to create your account if you havenâ€™t done so. \n\n    Also, we suggest you download the Reloadly app to view and play with the user functionalities. This will better help guide you when integrating our APIs.\n\n\n    ## GET STARTED\n\n\n    ### Authentication \u0026 Authorization\n\n\n    -----------------\n\n\n    The Reloadly APIs are HTTP-based RESTful APIs that use OAuth 2.0 protocol for authorization. API request and response bodies are formatted in JSON.\n\n\n    OAuth is an open standard that many companies use to provide secure access to protected resources.\n\n\n    When you create a developer account. Reloadly generates a set of OAuth client ID and secret credentials for your app for both sandbox and live environments. You pass these credentials in the `Authorization` header in the get access token request.\n\n\n    In exchange for these credentials, the Reloadly authorization server issues access tokens called bearer tokens that you use for authorization when you make REST API requests. A bearer token enables you to complete actions on behalf of, and with the approval of the resource owner.\n\n\n    The `access_token` field in the get access token response contains a bearer token, indicated by the `token_type` of `Bearer` :\n\n\n    + Response 200 (application/json)\n\n            {\n                \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik0wWXpRa\",\n                \"scope\": \"\u003cscopes\u003e\",\n                \"expires_in\": \"5184000\",\n                \"token_type\": \"Bearer\"\n            }\n\n    Include this bearer token in API requests in the `Authorization` header with the `Bearer` authentication scheme.\n\n\n    This sample request uses a bearer token to list topup transactions for an user account :\n\n\n    ```curl\n\n    curl -v -X GET https://topups-sandbox.reloadly.com/transactions?page=1\u0026size=3 \\\n        -H \"Accept: application/com.reloadly.topups-v1+json\" \\\n        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik0wWXpRa\" \\\n    ```\n\n\n    Access tokens have a finite lifetime. The `expires_in` field in the \u003ca href=\"#get-access-token-response\"\u003eget access token response\u003c/a\u003e indicates the lifetime, in seconds, of the access token. \n\n    For example, an expiry value of 3600 indicates that the access token expires in one hour from the time the response was generated.\n\n\n    To detect when an access token expires, write code to either :\n\n\n    + Keep track of the `expires_in` value in the token response. The value is expressed in seconds.\n\n\n    + Handle the HTTP `401 Unauthorized` status code and the `TOKEN_EXPIRED` error code in the \u003ca href=\"#error-response-message\"\u003eerror response message\u003c/a\u003e. The API endpoint issues this status code when it detects an expired token.\n\n\n    Before you create another token, re-use the access token until it expires. See the \u003ca href=\"#rate-limiting-guideline\"\u003erate limiting guidelines.\u003c/a\u003e\n\n\n    ### API Requests ###\n\n\n    -----------------\n\n\n    To construct a REST API request, combine these components : \u003cbr /\u003e\u003cbr /\u003e\n\n\n    ###### Component \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Description ######\n\n\n    \u003ctable\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eThe HTTP method\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003eGET\u003c/code\u003e. Requests data from a resource.\u003c/li\u003e\u003cli\u003e\u003ccode\u003ePOST\u003c/code\u003e. Submits data to a resource to process.\u003c/li\u003e\u003cli\u003e\u003ccode\u003ePUT\u003c/code\u003e. Updates a resource.\u003c/li\u003e\u003cli\u003e\u003ccode\u003ePATCH\u003c/code\u003e. Partially updates a resource.\u003c/li\u003e\u003cli\u003e\u003ccode\u003eDELETE\u003c/code\u003e. Deletes a resource.\u003c/li\u003e\u003c/ul\u003e\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eThe\u0026nbsp;URL\u0026nbsp;to\u0026nbsp;the\u0026nbsp;API\u0026nbsp;service\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003e\u003cul\u003e\u003cli\u003eSandbox. \u003ccode\u003ehttps://topups-sandbox.reloadly.com\u003c/code\u003e\u003c/li\u003e\u003cli\u003eLive. \u003ccode\u003ehttps://topups.reloadly.com\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eThe URI to the resource\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThe resource to query, submit data to, update, or delete. For example, \u003ccode\u003e/reports/transactions\u003c/code\u003e.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003e\u003ca href=\"#query-parameters\" pa-marked=\"1\"\u003eQuery parameters\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eOptional. Controls which data appears in the response. Use to filter, limit the size of, and sort the data in an API response.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003e\u003ca href=\"#http-request-headers\" pa-marked=\"1\"\u003eHTTP request headers\u003c/a\u003e\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eIncludes the \u003ccode\u003eAuthorization\u003c/code\u003e header with the access token.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eA JSON request body\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eRequired for most \u003ccode\u003eGET\u003c/code\u003e, \u003ccode\u003ePOST\u003c/code\u003e, \u003ccode\u003ePUT\u003c/code\u003e, and \u003ccode\u003ePATCH\u003c/code\u003e calls.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    ### \u0026nbsp;\u0026nbsp;Query Parameters\n\n\n    For most REST `GET` calls, you can specify one or more optional query parameters on the request URI to filter, limit the size of, and sort the data in an API response. For filter parameters, see the individual `GET` calls.\u003cbr /\u003e\u003cbr /\u003e\n\n\n    To limit, or \u003cem\u003epage\u003c/em\u003e, and sort the data that is returned in some API responses, use these, or similar, query parameters :\n\n\n    \u003e **Note** : Not all pagination parameters are available for all APIs.\u003cbr /\u003e\n\n    \u003ctable\u003e\n\n    \u003cthead\u003e\n\n    \u003ctr\u003e\n\n    \u003cth\u003eParameter\u003c/th\u003e\n\n    \u003cth\u003eType\u003c/th\u003e\n\n    \u003cth\u003eDescription\u003c/th\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/thead\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003ecount\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003einteger\u003c/td\u003e\n\n    \u003ctd\u003eThe number of items to list in the response.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003estartTime\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003einteger\u003c/td\u003e\n\n    \u003ctd\u003eThe start date and time for the range to show in the response, in \u003ca href=\"https://tools.ietf.org/html/rfc3339#section-5.6\" class=\"dx-external-link\" title=\"external link\" target=\"_blank\" rel=\"noopener noreferrer\" pa-marked=\"1\"\u003eInternet date and time format\u003c/a\u003e.\u003ca href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" target=\"_blank\"\u003e (ISO 8601)\u003c/a\u003e For example, \u003ccode\u003estartTime=2018-03-06 00:00:00\u003c/code\u003e.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003eendTime\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003einteger\u003c/td\u003e\n\n    \u003ctd\u003eThe end date and time for the range to show in the response, in \u003ca href=\"https://tools.ietf.org/html/rfc3339#section-5.6\" class=\"dx-external-link\" title=\"external link\" target=\"_blank\" rel=\"noopener noreferrer\" pa-marked=\"1\"\u003eInternet date and time format\u003c/a\u003e.\u003ca href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" target=\"_blank\"\u003e (ISO 8601)\u003c/a\u003e For example, \u003ccode\u003eendTime=2016-03-06 23:59:59\u003c/code\u003e.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003epage\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003einteger\u003c/td\u003e\n\n    \u003ctd\u003eThe zero-relative start index of the entire list of items that are returned in the response. So, the combination of \u003ccode\u003epage=0\u003c/code\u003e and \u003ccode\u003epage_size=20\u003c/code\u003e returns the first 20 items. The combination of \u003ccode\u003epage=20\u003c/code\u003e and \u003ccode\u003epage_size=20\u003c/code\u003e returns the next 20 items.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003einteger\u003c/td\u003e\n\n    \u003ctd\u003eThe number of items to return in the response.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003esortBy\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003estring\u003c/td\u003e\n\n    \u003ctd\u003eSorts the transactions in the response by a specified value, such as the create time or update time.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003esortOrder\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003estring\u003c/td\u003e\n\n    \u003ctd\u003eSorts the items in the response in ascending or descending order.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    ###\n\n\n    -------------------------\n\n\n    For example, the Invoicing API returns details for four invoices beginning with the third invoice and includes the total count of invoices in the response:\u003cbr /\u003e\n\n\n    ```curl\n\n    curl -v -X GET https://sandbox.topups.reloadly.com/transactions?page=1\u0026size=10\u0026startTime=2018-03-01 00:00:00\u0026endTime=2018-03-31 23:59:59 \\\n        -H \"Accept: application/com.reloadly.topups-v1+json\" \\\n        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik0wWXpRa\" \\\n    ```\n\n\n    \u003cbr /\u003e\n\n\n    ### \u0026nbsp;\u0026nbsp;Request Headers\n\n\n    The commonly used HTTP request headers are : \u003cbr /\u003e\n\n\n    \u003ctable\u003e\n        \u003ccolgroup\u003e\u003ccol width=\"33%\"\u003e\n        \u003ccol width=\"67%\"\u003e\n        \u003c/colgroup\u003e\u003cthead\u003e\n            \u003ctr\u003e\n                \u003cth\u003eHeader\u003c/th\u003e\n                \u003cth\u003eDescription\u003c/th\u003e\n            \u003c/tr\u003e\n        \u003c/thead\u003e\n        \u003ctbody\u003e\n            \u003ctr\u003e\n                \u003ctd id=\"accept\"\u003e\u003cstrong\u003eAccept\u003c/strong\u003e\u003c/td\u003e\n                \u003ctd\u003e\n                    \u003cp\u003eRequired for operations with a response body.\u003c/p\u003e\n                    \u003cp\u003eSpecifies the response format. The syntax is:\u003c/p\u003e\n                    \u003cpre class=\"dx-pre-hljs\"\u003e\u003ccode class=\"hljs\"\u003eAccept: application/\u003cvar\u003eformat\u003c/var\u003e\u003c/code\u003e\u003c/pre\u003e\n                    \u003cp\u003eWhere \u003ccode\u003e\u003cvar\u003eformat\u003c/var\u003e\u003c/code\u003e is \u003ccode\u003e\u003cstrong\u003ecom.reloadly.topups-v1+json\u003c/strong\u003e\u003c/code\u003e.\u003c/p\u003e\n                \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n                \u003ctd id=\"authorization\"\u003e\u003cstrong\u003eAuthorization\u003c/strong\u003e\u003c/td\u003e\n                \u003ctd\u003e\n                    \u003cp\u003eRequired to get an access token or make API calls.\u003c/p\u003e\n                    \u003cp\u003eTo \u003ca href=\"/docs/api/overview/#get-an-access-token\" pa-marked=\"1\"\u003eget an access token\u003c/a\u003e, set this header to your \u003ccode\u003eclient_id\u003c/code\u003e and \u003ccode\u003eclient_secret\u003c/code\u003e credentials.\u003c/p\u003e\n                    \u003cblockquote class=\"dx-blockquote-note\"\u003e\u003cstrong\u003eNote:\u003c/strong\u003e If you use cURL, specify \u003ccode\u003e-u \"client_id:secret\"\u003c/code\u003e.\u003c/blockquote\u003e\n                    \u003cp\u003eTo make REST API calls, include the bearer token in the \u003ccode\u003eAuthorization\u003c/code\u003e header with the \u003ccode\u003eBearer\u003c/code\u003e authentication scheme:\u003c/p\u003e\n                    \u003cpre class=\"dx-pre-hljs\"\u003e\u003ccode class=\"hljs\"\u003eAuthorization: Bearer \u003cvar\u003eAccess-Token\u003c/var\u003e\u003c/code\u003e\u003c/pre\u003e\n                \u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n                \u003ctd id=\"content-type\"\u003e\u003cstrong\u003eContent-Type\u003c/strong\u003e\u003c/td\u003e\n                \u003ctd\u003e\n                    \u003cp\u003eRequired for operations with a request body.\u003c/p\u003e\n                    \u003cp\u003eSpecifies the request format. The syntax is:\u003c/p\u003e\n                    \u003cpre class=\"dx-pre-hljs\"\u003e\u003ccode class=\"hljs\"\u003eContent-Type: application/\u003cvar\u003eformat\u003c/var\u003e\u003c/code\u003e\u003c/pre\u003e\n                    \u003cp\u003eWhere \u003ccode\u003e\u003cvar\u003eformat\u003c/var\u003e\u003c/code\u003e is \u003ccode\u003ejson\u003c/code\u003e.\u003c/p\u003e\n                \u003c/td\u003e\n            \u003c/tr\u003e\n        \u003c/tbody\u003e\n    \u003c/table\u003e\n\n\n    ### API Responses ###\n\n\n    -----------------\n\n\n    Reloadly API calls return HTTP status codes. Some API calls also return JSON response bodies that include information about the resource including one or more contextual HATEOAS links. Use these links to request more information about and construct an API flow that is relative to a specific request.\n\n\n    ###\u0026nbsp;\u0026nbsp; HTTP status codes\n\n\n    Each REST API request returns a \u003cstrong\u003e\u003ca href=\"#success\"\u003esuccess\u003c/a\u003e\u003c/strong\u003e or \u003cstrong\u003e\u003ca href=\"#error\"\u003eerror\u003c/a\u003e\u003c/strong\u003e status code.\n\n\n    #### Success\n\n\n    \u003ctable\u003e\n\n    \u003cthead\u003e\n\n    \u003ctr\u003e\n\n    \u003cth style=\"text-align:left\"\u003eStatus code\u003c/th\u003e\n\n    \u003cth style=\"text-align:left\"\u003eDescription\u003c/th\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/thead\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e200 OK\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe request succeeded.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e201 Created\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eA \u003ccode\u003ePOST\u003c/code\u003e method successfully created a resource. If the resource was already created by a previous execution of the same method, for example, the server returns the HTTP \u003ccode\u003e200 OK\u003c/code\u003e status code.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e202 Accepted\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe server accepted the request and will execute it later.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e204 No Content\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe server successfully executed the method but returns no response body.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    ---------------------------\n\n\n    #### Error\n\n\n    In the responses for failed requests, Reloadly returns HTTP \u003cstrong\u003e`4XX`\u003c/strong\u003e or \u003cstrong\u003e`5XX`\u003c/strong\u003e status codes.\u003cbr /\u003e\u003cbr /\u003e\n\n\n    For all errors except Identity errors, Reloadly returns an error response body that includes additional error details in this format:\n\n\n    ```\n\n    {\n      \"timeStamp\": ERROR_TIME_STAMP (numerical),\n      \"message\": \"Account verification failed, invalid or expired token\",\n      \"infoLink\": \"ERROR_DOCUMENTATION_LINK\",\n      \"path\": \"/accounts/verify\",\n      \"errorCode\": \"ERROR_CODE\",\n      \n      // Some types of errors also include a details array:\n      \"details\": [\n        {\n            \"field\": \"FIELD_NAME\",\n            \"issue\": \"PROBLEM_WITH_FIELD\"\n        }\n      ]\n    }\n\n    ```\n\n\n    In the responses, Reloadly returns these HTTP status codes for failed requests:\n\n\n    \u003ctable\u003e\n\n    \u003cthead\u003e\n\n    \u003ctr\u003e\n\n    \u003cth style=\"text-align:left\"\u003eHTTP\u0026nbsp;status\u0026nbsp;code\u003c/th\u003e\n\n    \u003cth style=\"text-align:left\"\u003eTypical error\u0026nbsp;code and error\u0026nbsp;message\u003c/th\u003e\n\n    \u003cth style=\"text-align:left\"\u003eCause\u003c/th\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/thead\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e400 Bad Request\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eINVALID_REQUEST\u003c/code\u003e. Request is not well-formed, syntactically incorrect, or violates schema.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eSee \u003ca href=\"#validation-errors\" pa-marked=\"1\"\u003eValidation errors\u003c/a\u003e. The server could not understand the request. Indicates one of these conditions:\u003cul\u003e\u003cli\u003eThe API cannot convert the payload data to the underlying data type.\u003c/li\u003e\u003cli\u003eThe data is not in the expected data format.\u003c/li\u003e\u003cli\u003eA required field is not available.\u003c/li\u003e\u003cli\u003eA simple data validation error occurred.\u003c/li\u003e\u003c/ul\u003e\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e401 Unauthorized\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eAUTHENTICATION_FAILURE\u003c/code\u003e. Authentication failed due to invalid authentication credentials.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eSee \u003ca href=\"#authentication-errors\" pa-marked=\"1\"\u003eAuthentication errors\u003c/a\u003e. The request requires authentication and the caller did not provide valid credentials.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e403 Forbidden\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eNOT_AUTHORIZED\u003c/code\u003e. Authorization failed due to insufficient permissions.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe client is not authorized to access this resource although it might have valid credentials. For example, the client does not have the correct OAuth 2 scope. Additionally, a business-level authorization error might have occurred. For example, the account holder does not have sufficient funds.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e404 Not Found\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eRESOURCE_NOT_FOUND\u003c/code\u003e. The specified resource does not exist.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe server did not find anything that matches the request URI. Either the URI is incorrect or the resource is not available. For example, no data exists in the database at that key.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e405 Method Not Allowed\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eMETHOD_NOT_SUPPORTED\u003c/code\u003e. The server does not implement the requested HTTP method.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe service does not support the requested HTTP method. For example, \u003ccode\u003ePATCH\u003c/code\u003e.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e406 Not Acceptable\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eMEDIA_TYPE_NOT_ACCEPTABLE\u003c/code\u003e. The server does not implement the media type that would be acceptable to the client.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe server cannot use the client-request media type to return the response payload. For example, this error occurs if the client sends an \u003ccode\u003eAccept: application/xml\u003c/code\u003e request header but the API can generate only an \u003ccode\u003eapplication/json\u003c/code\u003e response.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e415\u003c/code\u003e\u0026nbsp;\u003ccode\u003eUnsupported\u003c/code\u003e\u0026nbsp;\u003ccode\u003eMedia\u003c/code\u003e\u0026nbsp;\u003ccode\u003eType\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eUNSUPPORTED_MEDIA_TYPE\u003c/code\u003e. The server does not support the request payloadâ€™s media type.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe API cannot process the media type of the request payload. For example, this error occurs if the client sends a \u003ccode\u003eContent-Type: application/xml\u003c/code\u003e request header but the API can only accept \u003ccode\u003eapplication/json\u003c/code\u003e request payloads.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e422 Unprocessable Entity\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eUNPROCCESSABLE_ENTITY\u003c/code\u003e. The API cannot complete the requested action, or the request action is semantically incorrect or fails business validation.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe API cannot complete the requested action and might require interaction with APIs or processes outside of the current request. No systemic problems limit the API from completing the request. For example, this error occurs for any business validation errors, including errors that are not usually of the \u003ccode\u003e400\u003c/code\u003e type.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e429 Unprocessable Entity\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eRATE_LIMIT_REACHED\u003c/code\u003e. Too many requests. Blocked due to rate limiting.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe rate limit for the user, application, or token exceeds a predefined value. See \u003ca href=\"https://tools.ietf.org/html/rfc6585\" class=\"dx-external-link\" title=\"external link\" target=\"_blank\" rel=\"noopener noreferrer\" pa-marked=\"1\"\u003eRFC 6585\u003c/a\u003e.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e500 Internal Server Error\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eINTERNAL_SERVER_ERROR\u003c/code\u003e. An internal server error has occurred.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eA system or application error occurred. Although the client appears to provide a correct request, something unexpected occurred on the server.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e503 Service Unavailable\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003e\u003ccode\u003eSERVICE_UNAVAILABLE\u003c/code\u003e. Service Unavailable.\u003c/td\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eThe server cannot handle the request for a service due to temporary maintenance.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    ----------------------\n\n\n    \u003ch4 id=\"validation-errors\"\u003eValidation errors\u003c/h4\u003e\n\n\n    For validation errors, Reloadly returns the HTTP `400 Bad Request` status code.\u003cbr /\u003e\u003cbr /\u003e\n\n\n    To prevent validation errors, ensure that parameters are of the right type and conform to these constraints:\u003cbr /\u003e\u003cbr /\u003e\n\n\n    \u003ctable\u003e\n\n    \u003cthead\u003e\n\n    \u003ctr\u003e\n\n    \u003cth style=\"text-align:left\"\u003eParameter\u0026nbsp;type\u003c/th\u003e\n\n    \u003cth\u003eDescription\u003c/th\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/thead\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eCharacter\u003c/td\u003e\n\n    \u003ctd\u003eNames, addresses, phone numbers, and so on have maximum character limits.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eNumeric\u003c/td\u003e\n\n    \u003ctd\u003eAmounts, ids, and so on must use non-negative numeric values and have required formats. For example, a CVV must be three or four numbers while a credit card number must contain only numbers.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eRequired\u003c/td\u003e\n\n    \u003ctd\u003eMust be included in the request. For example, when you provide credit card information, you must include a postal code for most countries.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd style=\"text-align:left\"\u003eMonetary\u003c/td\u003e\n\n    \u003ctd\u003eMust use the right currency.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    ---------------------\n\n\n    \u003ch4 id=\"authentication-errors\"\u003eAuthentication errors\u003c/h4\u003e\n\n\n    For authentication errors, Reloadly returns the HTTP `401 Unauthorized` status code. See authentication and authorization.\u003cbr /\u003e\u003cbr /\u003e\n\n    Access token-related issues often cause authentication errors.\u003cbr /\u003e\u003cbr /\u003e\n\n    Ensure that the access token is valid and present and not expired.\n\n\n    ###\u0026nbsp;\u0026nbsp; HATEOAS links\n\n\n    Hypermedia as the Engine of Application State (HATEOAS) is a constraint of the REST application architecture that distinguishes it from other network application architectures.\u003cbr /\u003e\u003cbr /\u003e\n\n    This excerpt from a sample response shows an array of HATEOAS links:\u003cbr /\u003e\u003cbr /\u003e\n\n\n    ```\n\n    {  \n      \"links\": [{\n        \"href\": \"https://api.reloadly.com/payments/4\",\n        \"rel\": \"self\",\n        \"method\": \"GET\"\n      }, {\n        \"href\": \"https://api.reloadly.com/payments/4/refund\",\n        \"rel\": \"refund\",\n        \"method\": \"POST\"\n      }]\n    }\n\n    ```\n\n\n    You can use the links in this example, as follow :\n\n\n    - Use the \u003cstrong\u003e`self`\u003c/strong\u003e link to get more information about the request. Combine the method and the target URL to make the call : \n        ```\n        GET https://api.reloadly.com/payments/4\n        ```\n\n    - Use the \u003cstrong\u003e`refund`\u003c/strong\u003e link to request a refund : \n        ```\n        POST https://api.reloadly.com/payments/4/refund\n        ```\n\n    The elements in the \u003cstrong\u003e`link`\u003c/strong\u003e object are :\u003cbr /\u003e\n\n\n    \u003ctable\u003e\n\n    \u003cthead\u003e\n\n    \u003ctr\u003e\n\n    \u003cth\u003eElement\u003c/th\u003e\n\n    \u003cth\u003eRequired\u003c/th\u003e\n\n    \u003cth\u003eDescription\u003c/th\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/thead\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ca href=\"#the-href-element\" pa-marked=\"1\"\u003e\u003ccode\u003ehref\u003c/code\u003e\u003c/a\u003e\u003c/td\u003e\n\n    \u003ctd\u003eRequired\u003c/td\u003e\n\n    \u003ctd\u003eThe target URL.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ca href=\"#the-rel-element\" pa-marked=\"1\"\u003e\u003ccode\u003erel\u003c/code\u003e\u003c/a\u003e\u003c/td\u003e\n\n    \u003ctd\u003eRequired\u003c/td\u003e\n\n    \u003ctd\u003eThe link relationship type.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ca href=\"#the-method-element\" pa-marked=\"1\"\u003e\u003ccode\u003emethod\u003c/code\u003e\u003c/a\u003e\u003c/td\u003e\n\n    \u003ctd\u003eOptional\u003c/td\u003e\n\n    \u003ctd\u003eThe HTTP method. Default is \u003ccode\u003eGET\u003c/code\u003e.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    #### The href element\n\n\n    The \u003cstrong\u003e`href`\u003c/strong\u003e element contains the complete target URL, or link, to use in combination with the HTTP \u003cstrong\u003e`method`\u003c/strong\u003e to make the related call. \u003cstrong\u003e`href`\u003c/strong\u003e is the key HATEOAS component that links a completed call with a subsequent call.\n\n    \u003cbr /\u003e\n\n\n    #### The rel element\n\n\n    The \u003cstrong\u003e`rel`\u003c/strong\u003e element contains the link relationship type, or how the href link relates to the previous call.\n\n    \u003cbr /\u003e\n\n\n    \u003cp\u003eFor a complete list of the link relationship types, see \u003ca href=\"https://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1\" class=\"dx-external-link\" title=\"external link\" target=\"_blank\" rel=\"noopener noreferrer\" pa-marked=\"1\"\u003eLink Relationship Types\u003c/a\u003e.\u003c/p\u003e\n\n\n    \u003cbr /\u003e\n\n\n    #### The method element\n\n\n    Optional. The \u003cstrong\u003e`method`\u003c/strong\u003e element contains an HTTP method. If present, use this method to make a request to the target URL. If absent, the default method is \u003cstrong\u003e`GET`\u003c/strong\u003e.\n\n    \u003cbr /\u003e\u003cbr /\u003e\u003cbr /\u003e\n\n    The HTTP methods are :\u003cbr /\u003e\n\n\n    \u003ctable\u003e\n\n    \u003cthead\u003e\n\n    \u003ctr\u003e\n\n    \u003cth\u003eMethod\u003c/th\u003e\n\n    \u003cth\u003eDescription\u003c/th\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/thead\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003eDELETE\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003eDeletes a resource.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003eGET\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003eShows details for a resource or lists resources.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003ePATCH\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003ePartially updates a resource.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003ePOST\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003eCreates or manages a resource.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003ccode\u003ePUT\u003c/code\u003e\u003c/td\u003e\n\n    \u003ctd\u003eUpdates a resource.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    --------------------------\n\n\n    ### Error Codes\n\n\n    A Reloadly API operation may return multiple error and warning codes : \u003cbr /\u003e\u003cbr /\u003e\n\n\n    ###### Code \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Description ######\n\n\n    \u003ctable\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eTOKEN_EXPIRED\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003e\u003cp\u003e\n\n    Access tokens have a finite lifetime. The expires_in field in the get access token response indicates the lifetime, in seconds, of the access token. For example, an expiry value of 3600 indicates that the access token expires in one hour from the time the response was generated.\u003cbr /\u003e\u003cbr /\u003e\n\n    To detect when an access token expires, write code to either :\n\n\n    + Keep track of the `expires_in` value in the token response. The value is expressed in seconds.\n\n    + Handle the HTTP `401 Unauthorized` status code and the `TOKEN_EXPIRED` error code in the \u003ca href=\"#error-response-message\"\u003eerror response message\u003c/a\u003e. The API endpoint issues this status code when it detects an expired token.\n\n    \u003c/p\u003e\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eCOUNTRY_NOT_SUPPORTED\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003e\u003cp\u003eThe specified country (ISO-2 country code) in the request is currently not supported\u003c/p\u003e\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eINVALID_RECIPIENT_PHONE\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThe specified `recipientPhone` in the request is not valid for the specified country (ISO-2 country code) country\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eINVALID_SENDER_PHONE\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThe specified `senderPhone` in the request is not valid for the specified country (ISO-2 country code) country\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eINVALID_PHONE_NUMBER\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThe specified phone number is not valid\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003ePHONE_RECENTLY_RECHARGED\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eAfter a given phone number has been topuped-up, a delay of 2 minutes has to take place before the same phone number can be topuped-up again.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eCOUNTRY_NOT_SUPPORTED\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThe specified country in the request is currently disabled or not supported\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eOPERATOR_UNAVAILABLE_OR_CURRENTLY_INACTIVE\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThe specified operator is currently disabled or inactive on the platform.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eINACTIVE_ACCOUNT\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eReloadly reserves the right to de-activate a developer account for various reasons. The developer must contact support for more info.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eINVALID_AMOUNT_FOR_OPERATOR\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThe specified topup amounts is not valid for the given operator in the request.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eTOPUP_TRANSACTION_FAILED\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eTopup transactions may failed various reasons. Developer must contact support if they need more details.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eCOULD_NOT_AUTO_DETECT_OPERATOR\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eReloadly platform has the ability to auto-detect mobile carriers/operators for a given phone number, see \u003ca href=\"#auto-detect-operator\" pa-marked=\"1\"\u003eOperator auto-detect\u003c/a\u003e. \n\n    In cases where that's not possible, this error code is returned.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eACCOUNT_NOT_FOUND\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eUser account not found or does not exist.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eMAX_DAILY_TRANSACTION_COUNT_REACHED\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eSome developer account may have a daily transaction count limit. This error code is returned when that occurs\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eMAX_DAILY_TRANSACTION_AMOUNT_REACHED\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eSome developer account may have a daily total transaction amount limit. This error code is returned when that occurs\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eTRANSACTION_CANNOT_BE_PROCESSED_AT_THE_MOMENT\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eTopup transactions may failed various reasons. Developer must contact support if they need more details.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eINVALID_AMOUNT\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eReloadly expects amounts to be numerical.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eINSUFFICIENT_BALANCE\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThis error code is returned when a user attempts an API operation that requires adequate account balance to be available in order to be performed.\n\n    This error code is returned when the user account lack enought balance.\n\n    \u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e\u003cp\u003eOPERATOR_NOT_IN_SERVICE\u003c/p\u003e\u003c/td\u003e\n\n    \u003ctd\u003eThe specified operator in the request is currently disabled, inactive or not in service on the platform.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    \u003cbr /\u003e\u003cbr /\u003e\n\n\n    ### Make Your First Call ###\n\n\n    -----------------\n\n\n    \u003cbr /\u003e\n\n    To make REST API calls, create a Reloadly developer account and get an access token : \u003cbr /\u003e\u003cbr /\u003e\n\n\n    \u003ctable\u003e\n\n    \u003cthead\u003e\n\n    \u003ctr\u003e\n\n    \u003cth\u003e\u003c/th\u003e\n\n    \u003cth\u003e\u003c/th\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/thead\u003e\n\n    \u003ctbody\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e1.\u003c/td\u003e\n\n    \u003ctd\u003e\u003ca href=\"https://www.reloadly.com/login\" target=\"_blank\" pa-marked=\"1\"\u003e\u003cstrong\u003eCreate a developer account\u003c/strong\u003e\u003c/a\u003e \u003c= (click to go there).\u003cbr\u003eWhen you create a developer account, Reloadly generates a set of OAuth credentials.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e2.\u003c/td\u003e\n\n    \u003ctd\u003e\u003ca href=\"#get-an-access-token\" pa-marked=\"1\"\u003e\u003cstrong\u003eGet an access token\u003c/strong\u003e\u003c/a\u003e.\u003cbr\u003ePass the OAuth credentials in a get access token call.\u003cbr\u003eIn response, the Reloadly authorization server issues an access token.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003ctr\u003e\n\n    \u003ctd\u003e3.\u003c/td\u003e\n\n    \u003ctd\u003e\u003ca href=\"#make-rest-api-calls\" pa-marked=\"1\"\u003e\u003cstrong\u003eMake REST API calls\u003c/strong\u003e\u003c/a\u003e.\u003cbr\u003eUse the access token for authentication when you make REST API calls.\u003c/td\u003e\n\n    \u003c/tr\u003e\n\n    \u003c/tbody\u003e\n\n    \u003c/table\u003e\n\n\n    \u003cbr /\u003e\n\n\n    #### Get an access token\n\n\n    \u003cblockquote class=\"dx-blockquote-tip\"\u003e\n\n    \u003cp\u003e\u003cstrong\u003eURLs:\u003c/strong\u003e\u003c/p\u003e\n\n    \u003cul\u003e\n\n    \u003cli\u003e\u003cstrong\u003e`https://auth.reloadly.com/oauth/token`\u003c/strong\u003e\u003c/li\u003e\n\n    \u003c/ul\u003e\n\n    \u003c/blockquote\u003e\u003cbr /\u003e\n\n\n    \u003cp\u003eTo get an access token, you pass your OAuth credentials in a get access token call. To make this call, you can use either cURL on the command line or the Postman app.\u003c/p\u003e\u003cbr /\u003e\n\n\n    \u003cp\u003eIn response, the Reloadly authorization server issues an access token.\u003c/p\u003e\u003cbr /\u003e\n\n\n    \u003cp\u003eRe-use the access token until it expires. See our rate limiting guidelines. When it expires, you can get a new token.\u003c/p\u003e\n\n\n    #### cURL example\n\n\n    \u003cblockquote class=\"dx-blockquote-tip\"\u003e\n\n    \u003cp\u003e\u003cstrong\u003eTips:\u003c/strong\u003e\u003c/p\u003e\n\n    \u003cul\u003e\n\n    \u003cli\u003eIf you use Windows, use a Bash shell to make cURL calls.\u003c/li\u003e\n\n    \u003cli\u003eIf you use a command-line tool other than cURL, set \u003ccode\u003econtent-type\u003c/code\u003e to \u003ccode\u003eapplication/json\u003c/code\u003e.\u003c/li\u003e\n\n    \u003c/ul\u003e\n\n    \u003c/blockquote\u003e\u003cbr /\u003e\n\n\n    \u003cstrong\u003e1.\u003c/strong\u003e Download \u003ca href=\"https://curl.haxx.se/download.html\" target=\"_blank\"\u003ecURL\u003c/a\u003e for your environment.\n\n    \u003cbr /\u003e\u003cbr /\u003e\n\n    \u003cstrong\u003e2.\u003c/strong\u003e From the command line, run this command :\u003cbr /\u003e\u003cbr /\u003e\n\n\n    ```\n\n    curl -d '{\n                \"client_id\":\"YOUR_CLIENT_ID\",\n                \"client_secret\":\"YOUR_CLIENT_SECRET\",\n                \"grant_type\":\"client_credentials\",\n                \"audience\":\"https://topups.reloadly.com\"\n            }' \\\n        -H \"Content-Type: application/json\" \\\n        -X POST https://auth.reloadly.com/oauth/token \\\n    ```\n\n    \u003cbr /\u003e\n\n    Where : \u003cbr /\u003e\n\n    \u003ctable\u003e\n        \u003ccolgroup\u003e\u003ccol width=\"25%\"\u003e\n        \u003ccol width=\"75%\"\u003e\n        \u003c/colgroup\u003e\u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003eThe get access token endpoint.\u003c/td\u003e\n            \u003ctd\u003e\n                \u003ccode\u003ehttps://auth.reloadly.com/oauth/token\u003c/code\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n           \u003ctd\u003e\n              \u003ccode\u003e\u003cvar\u003eclient_id\u003c/var\u003e\u003c/code\u003e\n           \u003c/td\u003e\n           \u003ctd\u003eYour client ID.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n           \u003ctd\u003e\n              \u003ccode\u003e\u003cvar\u003eclient_secret\u003c/var\u003e\u003c/code\u003e\n           \u003c/td\u003e\n           \u003ctd\u003eYour client secret.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n           \u003ctd\u003e\n              \u003ccode\u003e\u003cvar\u003eaudience\u003c/var\u003e\u003c/code\u003e\n           \u003c/td\u003e\n           \u003ctd\u003eThe API you're requesting the access token for. \u003cbr /\u003e Live : \u003ccode\u003ehttps://topups.reloadly.com\u003c/code\u003e \u003cbr /\u003e Sandbox : \u003ccode\u003ehttps://topups-sandbox.reloadly.com\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n           \u003ctd\u003e\u003ccode\u003egrant_type\u003c/code\u003e\u003c/td\u003e\n           \u003ctd\u003eThe grant type. Set to \u003ccode\u003eclient_credentials\u003c/code\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n     \u003c/tbody\u003e\u003c/table\u003e\n    \u003cbr /\u003e\n\n\n    \u003cstrong\u003e3.\u003c/strong\u003e View the \u003ca href=\"#sample-response\"\u003esample response\u003c/a\u003e.\u003cbr /\u003e\u003cbr /\u003e\n\n\n    #### Postman example\n\n    \u003col\u003e\n       \u003cli\u003e\n          \u003cp\u003eDownload the latest version of \u003ca href=\"https://www.getpostman.com/\" class=\"dx-external-link\" title=\"external link\" target=\"_blank\" rel=\"noopener noreferrer\" pa-marked=\"1\"\u003ePostman\u003c/a\u003e for your environment, and open Postman.\u003c/p\u003e\n       \u003c/li\u003e\n       \u003cli\u003e\n           \u003cp\u003eSelect the \u003ccode\u003ePOST\u003c/code\u003e method.\u003c/p\u003e\n       \u003c/li\u003e\n       \u003cli\u003e\n           \u003cp\u003eEnter the \u003ccode\u003ehttps://auth.reloadly.com/oauth/token\u003c/code\u003e request URL.\u003c/p\u003e\n       \u003c/li\u003e\n       \u003cli\u003e\n          \u003cp\u003eOn the \u003cstrong\u003eHeader\u003c/strong\u003e tab, enter \u003cstrong\u003eContent-Type\u003c/strong\u003e under key and \u003cstrong\u003eapplication/json\u003c/strong\u003e as value : \u003c/p\u003e\n          \u003ctable\u003e\n            \u003ccolgroup\u003e\u003ccol width=\"25%\"\u003e\n            \u003ccol width=\"75%\"\u003e\n             \u003c/colgroup\u003e\u003ctbody\u003e\u003ctr\u003e\n                \u003ctd\u003e\u003cstrong\u003ekey\u003c/strong\u003e\u003c/td\u003e\n                \u003ctd\u003eContent-Type\u003c/td\u003e\n             \u003c/tr\u003e\n             \u003ctr\u003e\n                \u003ctd\u003e\u003cstrong\u003evalue\u003c/strong\u003e\u003c/td\u003e\n                \u003ctd\u003eapplication/json\u003c/td\u003e\n             \u003c/tr\u003e\n          \u003c/tbody\u003e\u003c/table\u003e\n       \u003c/li\u003e\n       \u003cli\u003e\n          \u003cp\u003eOn the \u003cstrong\u003eBody\u003c/strong\u003e tab, select \u003cstrong\u003eraw\u003c/strong\u003e and enter this information : \u003c/p\u003e\n        \u003ccode\u003e\n          {\n          \n           \"client_id\": \"YOUR_CLIENT_ID\",\n           \n           \"client_secret\": \"YOUR_CLIENT_SECRET\",\n           \n           \"grant_type\": \"client_credentials\",\n           \n           \"audience\": \"https://topups-sandbox.reloadly.com\"\n          }\n       \u003c/li\u003e\n       \u003cli\u003e\n          \u003cp\u003eClick \u003cstrong\u003eSend\u003c/strong\u003e.\u003c/p\u003e\n       \u003c/li\u003e\n       \u003cli\u003e\n          \u003cp\u003eView the sample response : \u003c/p\u003e\n        \u003ccode\u003e\n         {\n         \n          \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSU\",\n        \n          \"scope\": \"send-topups read-topups-history read-operators read-promotions\",\n        \n          \"expires_in\": 86400,\n        \n          \"token_type\": \"Bearer\"\n         }\n       \u003c/li\u003e\n    \u003c/ol\u003e\n\n\n    Where : \u003cbr /\u003e\n\n    \u003ctable\u003e\n       \u003ccolgroup\u003e\u003ccol width=\"25%\"\u003e\n       \u003ccol width=\"75%\"\u003e\n       \u003c/colgroup\u003e\u003ctbody\u003e\u003ctr\u003e\n          \u003ctd\u003e\n             \u003ccode\u003e\u003cvar\u003eaccess_token\u003c/var\u003e\u003c/code\u003e\n          \u003c/td\u003e\n          \u003ctd\u003eYour access token.\u003c/td\u003e\n       \u003c/tr\u003e\n       \u003ctr\u003e\n          \u003ctd\u003e\u003ccode\u003eexpires_in\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eThe number of seconds after which the token expires. Request another token when the current one expires.\u003c/td\u003e\n       \u003c/tr\u003e\n    \u003c/tbody\u003e\u003c/table\u003e\n\n\n    #### Make REST API Calls\n\n\n    \u003cp\u003eWith a valid access token, you can make REST API calls.\u003c/p\u003e\u003cbr /\u003e\n\n    \u003cp\u003eThis sample call sends a airtime (topup) transaction and uses only the required input parameters. The access token in the call is an OAuth bearer token.\u003c/p\u003e\n\n    \u003cbr /\u003e\n\n    \u003cblockquote class=\"dx-blockquote-note\"\u003e\n\n    \u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e Topups API calls are always made by an `actor`. The actor specifies a bearer token in the \u003ccode\u003eAuthorization: Bearer\u003c/code\u003e request header. A bearer token is an access token that is issued to the actor by an authorization server with the approval of the resource owner. In this case, the actor uses the bearer token to make a topup request.\u003c/p\u003e\n\n    \u003c/blockquote\u003e\n\n\n    ```\n\n    curl -d '{\n              \"recipientPhone\": {\n                \"countryCode\": \"HT\",\n                \"number\": \"50936377111\" //(Note the \"+509\" country dialing code for Haiti)\n              },\n              \"senderPhone\": {\n                \"countryCode\": \"US\",\n                \"number\": \"13059547862\" //(Note the \"+1\" country dialing code for USA)\n              },\n              \"operatorId\": 173,\n              \"amount\": 15,\n              \"customIdentifier\": \"transaction by john@example.com\"\n            }' \\\n        -H \"Accept: application/com.reloadly.topups-v1+json\" \\\n        -H \"Content-Type: application/json\" \\\n        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSU\" \\\n        -X POST https://topups.reloadly.com/topups\n    ```\n\n\n    \u003cbr /\u003e\n\n\n    \u003cblockquote class=\"dx-blockquote-note\"\u003e\n\n    \u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e Phone numbers (`recipientPhone`, `senderPhone`) can be in 2 formats. \n\n    In the example above, the \"+\" sign is not present in front of the country dialing codes (see \u003ca href=\"https://countrycode.org/\"\u003ecountries dialing codes\u003c/a\u003e).\n\n    Our API also accept phone number prefixed with \"+\".\n\n    The following is equivalent to the example above :\n\n    \u003c/p\u003e\n\n    \u003c/blockquote\u003e\n\n\n    ```\n\n    curl -d '{\n              \"recipientPhone\": {\n                \"countryCode\": \"HT\",\n                \"number\": \"+50936377111\" //(Note the \"+509\" country dialing code for Haiti)\n              },\n              \"senderPhone\": {\n                \"countryCode\": \"US\",\n                \"number\": \"+13059547862\" //(Note the \"+1\" country dialing code for USA)\n              },\n              \"operatorId\": 173,\n              \"amount\": 15,\n              \"customIdentifier\": \"transaction by john@example.com\"\n            }' \\\n        -H \"Accept: application/com.reloadly.topups-v1+json\" \\\n        -H \"Content-Type: application/json\" \\\n        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSU\" \\\n        -X POST https://topups.reloadly.com/topups\n    ```\n\n\n    \u003cbr/\u003e\u003cbr /\u003e\u003cbr /\u003e\n\n\n    ## API REFERENCE\n\n\n    \u003cbr /\u003e\n\n\n    ## Topups API ###\n\n\n    -----------------\n\n\n    The Reloadly Topups API is RESTful and uses a JSON data format. The API grants users in more than 100 countries access to its feature set. The API enables users to conduct topup (airtime) transactions, retrieve account data, view international rates, see history and much more.\n\n    \u003cbr /\u003e\u003cbr /\u003e\n\n\n    #### Account Balance (resource group)\n\n\n    --------------------\n\n\n    Use the `/accounts/balance` resource to list account available balance.\n  title: Reloadly Topup\n  version: 1.0.0\n  x-apisguru-categories:\n    - telecom\n  x-logo:\n    url: https://twitter.com/Reloadly/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: apiBlueprint\n      url: https://topupsapi.docs.apiary.io/api-description-document\n      version: 1A\n  x-providerName: reloadly.com\ntags: []\npaths:\n  /accounts/balance:\n    get:\n      description: \"\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    balance: 550.75\n                    currencyCode: USD\n      security:\n        - oauth2: []\n      summary: Retrieve account balance\n      tags: []\n  /countries:\n    get:\n      description: \"\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    - callingCodes:\n                        - \"+93\"\n                      currencyCode: AFN\n                      currencyName: Afghan Afghani\n                      flag: https://s3.amazonaws.com/rld-flags/af.svg\n                      isoName: AF\n                      name: Afghanistan\n                    - callingCodes:\n                        - \"+355\"\n                      currencyCode: ALL\n                      currencyName: Albanian Lek\n                      flag: https://s3.amazonaws.com/rld-flags/al.svg\n                      isoName: AL\n                      name: Albania\n                    - callingCodes:\n                        - \"+213\"\n                      currencyCode: DZD\n                      currencyName: Algerian Dinar\n                      flag: https://s3.amazonaws.com/rld-flags/dz.svg\n                      isoName: DZ\n                      name: Algeria\n                    - callingCodes:\n                        - \"+1684\"\n                      currencyCode: USD\n                      currencyName: US Dollar\n                      flag: https://s3.amazonaws.com/rld-flags/as.svg\n                      isoName: AS\n                      name: American Samoa\n                    - callingCodes:\n                        - \"+244\"\n                      currencyCode: AOA\n                      currencyName: Angolan Kwanza\n                      flag: https://s3.amazonaws.com/rld-flags/ao.svg\n                      isoName: AO\n                      name: Angola\n                    - callingCodes:\n                        - \"+1264\"\n                      currencyCode: XCD\n                      currencyName: East Caribbean Dollar\n                      flag: https://s3.amazonaws.com/rld-flags/ai.svg\n                      isoName: AI\n                      name: Anguilla\n                    - callingCodes:\n                        - \"+1268\"\n                      currencyCode: XCD\n                      currencyName: East Caribbean Dollar\n                      flag: https://s3.amazonaws.com/rld-flags/ag.svg\n                      isoName: AG\n                      name: Antigua and Barbuda\n                    - callingCodes:\n                        - \"+54\"\n                      currencyCode: ARS\n                      currencyName: Argentine Peso\n                      flag: https://s3.amazonaws.com/rld-flags/ar.svg\n                      isoName: AR\n                      name: Argentina\n      security:\n        - oauth2: []\n      summary: List All Supported Countries\n      tags: []\n  /countries/HT:\n    get:\n      description: |-\n        See http://www.nationsonline.org/oneworld/country_code_list.htm\n            - Endpoint : `/countries/{countryIsoCode}`\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    callingCodes:\n                      - \"+509\"\n                    currencyCode: HTG\n                    currencyName: Haitian Gourde\n                    flag: https://s3.amazonaws.com/rld-flags/ht.svg\n                    isoName: HT\n                    name: Haiti\n      security:\n        - oauth2: []\n      summary: Retrieve a country by country ISO code (ISO Alpha-2)\n      tags: []\n  /operators/173:\n    get:\n      description: |-\n        - Endpoint : `/operators/{operatorId}`\n            \u003ch4 id=\"auto-detect-operator\"\u003e\u003c/h4\u003e\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    bundle: false\n                    countryCode: HT\n                    defaultCommissionPercentage: 15\n                    name: Digicel Haiti\n                    operatorId: 173\n                    status: true\n      security:\n        - oauth2: []\n      summary: Retrieve a operator by id\n      tags: []\n  /operators/173/commissions:\n    get:\n      description: \"- Endpoint : `/operators/{operatorId}/commissions`\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    operator:\n                      bundle: false\n                      countryCode: HT\n                      name: Digicel Haiti\n                      operatorId: 173\n                      status: true\n                    percentage: 15\n                    updatedAt: 2018-06-26 03:36:16\n      security:\n        - oauth2: []\n      summary: Retrieve account operator commission by operator id\n      tags: []\n  /operators/auto-detect/phone/+50936377111/country-code/HT?\u0026includeBundles=true:\n    get:\n      description: \u003e-\n        - NOTE: Supports phone number with a \"+\" in front of the country dialing\n        code or without a \"+\" country dialing code.\n                 Example : `+50936377111` or `50936377111` are equivalent\n                           `/operators/auto-detect/phone/{phone}/country-code/{countryIsoCode}?\u0026includeBundles=true`\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    bundle: false\n                    countryCode: HT\n                    defaultCommissionPercentage: 15\n                    name: Digicel Haiti\n                    operatorId: 173\n                    status: true\n      security:\n        - oauth2: []\n      summary: Auto-detect mobile operator for given phone number\n      tags: []\n  /operators/commissions?page=1\u0026size=3:\n    get:\n      description: \"\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    content:\n                      - operator:\n                          bundle: false\n                          countryCode: AF\n                          name: Afghan Wireless Afghanistan\n                          operatorId: 1\n                          status: true\n                        percentage: 10\n                        updatedAt: 2018-06-26 03:36:16\n                      - operator:\n                          bundle: false\n                          countryCode: AF\n                          name: MTN Afghanistan\n                          operatorId: 2\n                          status: true\n                        percentage: 10\n                        updatedAt: 2018-06-26 03:36:16\n                      - operator:\n                          bundle: false\n                          countryCode: AF\n                          name: Etisalat Afghanistan\n                          operatorId: 3\n                          status: true\n                        percentage: 10\n                        updatedAt: 2018-06-26 03:36:16\n                    first: true\n                    last: false\n                    number: 0\n                    numberOfElements: 3\n                    pageable:\n                      offset: 0\n                      pageNumber: 0\n                      pageSize: 3\n                      paged: true\n                      sort:\n                        sorted: false\n                        unsorted: true\n                      unpaged: false\n                    size: 3\n                    sort:\n                      sorted: false\n                      unsorted: true\n                    totalElements: 611\n                    totalPages: 204\n      security:\n        - oauth2: []\n      summary: List All Commissions\n      tags: []\n  /operators/countries/HT:\n    get:\n      description: \"- Endpoint : `/operators/countries/{countryIsoCode}`\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    - bundle: false\n                      countryCode: HT\n                      defaultCommissionPercentage: 15\n                      name: Digicel Haiti\n                      operatorId: 173\n                      status: true\n                    - bundle: false\n                      countryCode: HT\n                      defaultCommissionPercentage: 12\n                      name: Natcom Haiti\n                      operatorId: 174\n                      status: true\n      security:\n        - oauth2: []\n      summary: List available operators by (ISO Alpha-2) country code\n      tags: []\n  /operators?page=1\u0026size=3\u0026suggestedAmounts=true\u0026suggestedAmountsMap=true\u0026includeBundles=true:\n    get:\n      description: \"\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    content:\n                      - bundle: false\n                        countryCode: AF\n                        defaultCommissionPercentage: 10\n                        name: Afghan Wireless Afghanistan\n                        operatorId: 1\n                        status: true\n                      - bundle: false\n                        countryCode: AF\n                        defaultCommissionPercentage: 10\n                        name: MTN Afghanistan\n                        operatorId: 2\n                        status: true\n                      - bundle: false\n                        countryCode: AF\n                        defaultCommissionPercentage: 10\n                        name: Etisalat Afghanistan\n                        operatorId: 3\n                        status: true\n                    first: true\n                    last: false\n                    number: 0\n                    numberOfElements: 3\n                    pageable:\n                      offset: 0\n                      pageNumber: 0\n                      pageSize: 3\n                      paged: true\n                      sort:\n                        sorted: false\n                        unsorted: true\n                      unpaged: false\n                    size: 3\n                    sort:\n                      sorted: false\n                      unsorted: true\n                    totalElements: 609\n                    totalPages: 203\n      security:\n        - oauth2: []\n      summary: List All Operators\n      tags: []\n  /promotions/5:\n    get:\n      description: \"- Endpoint : `/promotions/{promotionId}`\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    denominations: USD 2 and up\n                    description: \"\u003cbr /\u003e- For top ups of USD$2.00 (EUR 5) or more,\n                      customers will receive double bonus 2x + 5 days of\n                      Whatsapp.\u003cbr /\u003e- Validity: 5 days\u003cbr /\u003e- Applies for all\n                      prepaid plans.\u003cbr /\u003e\u003cbr /\u003eT\u0026eacute;rminos y Condiciones\n                      (Spanish version):\u003cbr /\u003e- Por recarfas desde 2 USD (5\n                      \u0026euro;) o m\u0026aacute;s, el destinatario recibir\u0026aacute;\n                      doble bono (2x) + 5 dias de WhatsApp\u003cbr /\u003e- Vigencia 5\n                      d\u0026iacute;as\u0026nbsp;\u003cbr /\u003e- Aplica a todos los planes\n                      prepago\"\n                    endDate: Mon, 02 Jul 2018 04:59:00 +0000\n                    localDenominations: null\n                    operatorId: 114\n                    promotionId: 5\n                    startDate: Mon, 01 Jan 2018 05:00:00 +0000\n                    title: \" Movistar Ecuador From 01 Jan 2018 00:00 To 01 Jul 2018\n                      23:59 (GMT-05:00)\"\n                    title2: Bonus 2x\n      security:\n        - oauth2: []\n      summary: Retrieve topup operator promotion by id\n      tags: []\n  /promotions/operators/129:\n    get:\n      description: \"- Endpoint : `/promotions/operators/{operatorId}`\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    - denominations: USD 10 and up\n                      description: \u003cbr /\u003e- For top ups of $10 or more, customers in El\n                        Salvador receive the top up plus\u0026nbsp;500 MBs + 150\n                        Minutes for USA/CAN for 15 days.\u003cbr /\u003e- The benefits are\n                        applied when the top up is received by the user in El\n                        Salvador.\u003cbr /\u003e- Promotional minutes are valid to call\n                        any phone number in the USA.\u003cbr /\u003e- The promotional\n                        benefits\u0026nbsp;will be available for use during a period\n                        of 360 hours after the top up was received. (15 days)\n                      endDate: Tue, 26 Jun 2018 05:59:00 +0000\n                      localDenominations: null\n                      operatorId: 129\n                      promotionId: 1\n                      startDate: Mon, 25 Jun 2018 06:00:00 +0000\n                      title: \" Tigo El Salvador From 25 Jun 2018 00:00 To 25 Jun 2018\n                        23:59 (GMT-06:00)\"\n                      title2: Get 500 MB and 150 minutes for USA or Canada\n                    - denominations: USD 7 and up\n                      description: \u003cbr /\u003e- For top ups between USD $7 and up, customers\n                        will receive 300 additional MBs + 60 Minutes for\n                        USA/CAN\u003cbr /\u003e- Promotional balance will expire in 5 days\n                      endDate: Tue, 26 Jun 2018 05:59:00 +0000\n                      localDenominations: null\n                      operatorId: 129\n                      promotionId: 6\n                      startDate: Mon, 25 Jun 2018 06:00:00 +0000\n                      title: \" Tigo El Salvador From 25 Jun 2018 00:00 To 25 Jun 2018\n                        23:59 (GMT-06:00)\"\n                      title2: Get 300 MB and 60 minutes for USA or Canada\n                    - denominations: USD 7 and up\n                      description: \u003cbr /\u003e- For top ups between USD $7 and up, customers\n                        will receive 300 additional MBs + 60 Minutes for\n                        USA/CAN\u003cbr /\u003e- Promotional balance will expire in 5 days\n                      endDate: Sat, 30 Jun 2018 05:59:00 +0000\n                      localDenominations: null\n                      operatorId: 129\n                      promotionId: 9\n                      startDate: Fri, 29 Jun 2018 06:00:00 +0000\n                      title: \" Tigo El Salvador From 29 Jun 2018 00:00 To 29 Jun 2018\n                        23:59 (GMT-06:00)\"\n                      title2: Get 300 MB and 60 minutes for USA or Canada\n      security:\n        - oauth2: []\n      summary: Retrieve topup operator promotion by operator id\n      tags: []\n  /promotions?page=1\u0026size=3:\n    get:\n      description: \"\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    content:\n                      - denominations: USD 10 and up\n                        description: \u003cbr /\u003e- For top ups of $10 or more, customers in El\n                          Salvador receive the top up plus\u0026nbsp;500 MBs + 150\n                          Minutes for USA/CAN for 15 days.\u003cbr /\u003e- The benefits\n                          are applied when the top up is received by the user in\n                          El Salvador.\u003cbr /\u003e- Promotional minutes are valid to\n                          call any phone number in the USA.\u003cbr /\u003e- The\n                          promotional benefits\u0026nbsp;will be available for use\n                          during a period of 360 hours after the top up was\n                          received. (15 days)\n                        endDate: Tue, 26 Jun 2018 05:59:00 +0000\n                        localDenominations: null\n                        operatorId: 129\n                        promotionId: 1\n                        startDate: Mon, 25 Jun 2018 06:00:00 +0000\n                        title: \" Tigo El Salvador From 25 Jun 2018 00:00 To 25 Jun\n                          2018 23:59 (GMT-06:00)\"\n                        title2: Get 500 MB and 150 minutes for USA or Canada\n                      - denominations: USD 14 and up\n                        description: \"\u003cbr /\u003e-\u0026nbsp;Calls and SMS to USA, OnNet and ExtNet\n                          calls.\u003cbr /\u003e- Promotional balance expiration date: 30\n                          days\u003cbr /\u003e\u003cbr /\u003eExceptions for promotional\n                          balance:\u0026nbsp;\u003cbr /\u003e- Browsing, purchase of\n                          Paquetigos, Backtones, Give Me Balance\"\n                        endDate: Sun, 01 Jul 2018 05:59:00 +0000\n                        localDenominations: GTQ 100.80 and up\n                        operatorId: 158\n                        promotionId: 2\n                        startDate: Sat, 30 Jun 2018 06:00:00 +0000\n                        title: \" Tigo Guatemala From 30 Jun 2018 00:00 To 30 Jun 2018\n                          23:59 (GMT-06:00)\"\n                        title2: Bonus 3x\n                      - denominations: USD 5 and up\n                        description: \u003cbr /\u003e- For Top Ups of 5 USD (5 EUR) or more,\n                          customers will receive double 2x balance.+ 7 days of\n                          Whatsapp.\u003cbr /\u003e\u003cbr /\u003eT\u0026eacute;rminos y Condiciones\n                          (Spanish version):\u003cbr /\u003e- Por recargas desde 5 USD (5\n                          EUR) o m\u0026aacute;s, el destinatario recibir\u0026aacute;\n                          doble saldo (2x) + 7 dias de WhatsApp.\n                        endDate: Mon, 02 Jul 2018 05:59:00 +0000\n                        localDenominations: CRC 5000 and up\n                        operatorId: 100\n                        promotionId: 3\n                        startDate: Mon, 01 Jan 2018 06:00:00 +0000\n                        title: \" Movistar Costa Rica From 01 Jan 2018 00:00 To 01 Jul\n                          2018 23:59 (GMT-06:00)\"\n                        title2: Bonus 2x\n                    first: true\n                    last: false\n                    number: 0\n                    numberOfElements: 3\n                    pageable:\n                      offset: 0\n                      pageNumber: 0\n                      pageSize: 3\n                      paged: true\n                      sort:\n                        sorted: false\n                        unsorted: true\n                      unpaged: false\n                    size: 3\n                    sort:\n                      sorted: false\n                      unsorted: true\n                    totalElements: 44\n                    totalPages: 15\n      security:\n        - oauth2: []\n      summary: List all topup operators promotions\n      tags: []\n  /topups:\n    post:\n      description: \"- Endpoint : `/topups`\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    countryCode: HT\n                    customIdentifier: transaction by john@example.com\n                    deliveredAmount: 997.2\n                    deliveredAmountCurrencyCode: HTG\n                    operatorId: 173\n                    recipientPhone: \"50936377111\"\n                    requestedAmount: 15\n                    requestedAmountCurrencyCode: USD\n                    senderPhone: \"13059547862\"\n                    transactionDate: 2018-06-26 07:43:36\n                    transactionId: 1\n      security:\n        - oauth2: []\n      summary: Send Topup\n      tags: []\n  /topups/reports/transactions?page=1\u0026size=1\u0026startTime=2018-06-01 00:00:00\u0026endTime=2018-06-26 23:59:59:\n    get:\n      description: \"- Endpoint :\n        `/topups/reports/transactions?page=1\u0026size=1\u0026startTime=2018-06-01\n        00:00:00\u0026endTime=2018-06-26 23:59:59`\"\n      parameters:\n        - description: e.g. application/com.reloadly.topups-v1+json\n          in: header\n          name: Accept\n          required: false\n          example: application/com.reloadly.topups-v1+json\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    content:\n                      - countryCode: HT\n                        customIdentifier: transaction by john@example.com\n                        deliveredAmount: 997.2\n                        deliveredAmountCurrencyCode: HTG\n                        operatorId: 173\n                        recipientPhone: \"50936377111\"\n                        requestedAmount: 15\n                        requestedAmountCurrencyCode: USD\n                        senderPhone: \"13059547862\"\n                        transactionDate: 2018-06-26 07:43:36\n                        transactionId: 1\n                    first: true\n                    last: true\n                    number: 0\n                    numberOfElements: 1\n                    pageable:\n                      offset: 0\n                      pageNumber: 0\n                      pageSize: 100\n                      paged: true\n                      sort:\n                        sorted: true\n                        unsorted: false\n                      unpaged: false\n                    size: 100\n                    sort:\n                      sorted: true\n                      unsorted: false\n                    totalElements: 1\n                    totalPages: 1\n      security:\n        - oauth2: []\n      summary: Retrieve topup transactions\n      tags: []\nservers:\n  - url: https://topups.reloadly.com/\ncomponents:\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: /\n          tokenUrl: /\n          scopes: {}\n  schemas:\n    Account_Balance: {}\n    Commissions_Collection: {}\n    Country_Collection: {}\n    Operators_Collection: {}\n    Promotions_Collection: {}\n    Topup_a_phone: {}\n    Transaction_History: {}\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/reloadly.com-1.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/reloadly.com-1.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /operators/auto-detect/phone/+50936377111/country-code/HT?\u0026includeBundles=true: get: parse path \"/operators/auto-detect/phone/+50936377111/country-code/HT?\u0026includeBundles=true\": path MUST NOT contain a query string"
}