{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hubject/opcp"
		},
		"file": {
			"name": "est.v1.json",
			"size": 0,
			"path": "OPCP-1.0.0/reference/est.v1.json",
			"byteSize": 10985,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"tags\": [\n    {\n      \"name\": \"EST\",\n      \"description\": \"EST interface\"\n    }\n  ],\n  \"info\": {\n    \"title\": \"EST\",\n    \"version\": \"1.0\",\n    \"description\": \"The EST interface receives CSRs from CPOs, MOs, OEMs abd CPSs, signs them and delivers an ISO 15118 leaf certificate. The PKI Gateway/Certificate Manager creates the leaf certificates from the Sub 2 CA of the respective role.\\n\\nThis interface can create leaf certificates for CPOs (SECC Certificate), MOs (Contract Certificate), OEMs (Provisioning Certificate) and CPSs (Provisioning Signing Certificates)\\n\\nAn EST interface is a standard implementation, which is described in the RFC7030. For further information, please see https://tools.ietf.org/html/rfc7030 \\n\\nEach CA in the V2G PKI Service has its own Protocol Gateway handler, which need to be addressed in the URL postfix of the requests. The postfix is displayed below for the default named CAs:\",\n    \"contact\": {\n      \"name\": \"Hubject GmbH\",\n      \"url\": \"https://hubject.com\",\n      \"email\": \"support@pnc.hubject.com\"\n    },\n    \"termsOfService\": \"https://www.hubject.com/pki/\",\n    \"license\": {\n      \"url\": \"https://creativecommons.org/licenses/by-sa/4.0/\",\n      \"name\": \"Attribution-ShareAlike 4.0 International\"\n    }\n  },\n  \"servers\": [],\n  \"paths\": {\n    \"/{ca}/simpleenroll\": {\n      \"post\": {\n        \"summary\": \"simpleEnroll\",\n        \"tags\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/pkcs7\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"description\": \"The response body is the base64 encoded PKCS7 blobb of the certificate\"\n                },\n                \"examples\": {}\n              }\n            },\n            \"headers\": {\n              \"Content-Type\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"application/pkcs7-mime; smime-type=certs-only\"\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"5XX\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"operationId\": \"simpleenroll\",\n        \"description\": \"The Certificate Request Functions are provided for each role. Each entity can get leaf certificates regarding to its role\\n\\n| role | CA  | End Entity ||\\n| ---- | --- |--- |--- |\\n| CPO  | cpo | EVSE Leaf Certificate from V2G PKI | \\n| MO   | mo  | Contract Certificate from V2G PKI| \\n| OEM  | oem | Provisioning Certificate from V2G PKI| \\n| OEM  | veh | Vehicle Certificate from V2G PKI (ISO15118:20)| \\n| CPS  | cps | Provisioning Signing Certificate (CPS) from V2G PKI | \",\n        \"requestBody\": {\n          \"content\": {\n            \"application/pkcs10\": {\n              \"schema\": {\n                \"description\": \"The body is the base64 encoded CSR (Certificate Siging Request).\\n\\n+++Requirements for EVSE Leafs+++\\n\\nWhen `{ca}` path parameter is `cpo`, the CSR CommonName must match to the \u003cEVSID\u003e regex format `^[A-Za-z]{2}[\\\\*]?\\\\w{3}[\\\\*]?[E][\\\\w\\\\*]{1,30}$`. \\n\\nWhere `EVSEID` = `\u003cCountry Code\u003e` `\u003cS\u003e` `\u003cEVSE Operator ID\u003e` `\u003cS\u003e` `\u003cID Type\u003e` `\u003cPower Outlet ID\u003e` \\n\\n `Country Code` = 2 ALPHA two alphanumeric characters \\n\\n `EVSE Operator ID` = 3 (ALPHA / DIGIT) three alphanumeric characters, defined and listed by eMI3 group \\n\\n `ID Type` = “E” one character “E” indicating that this ID represents an “EVSE” \\n\\n `Power Outlet ID` = (ALPHA / DIGIT) *30 (ALPHA / DIGIT / S) sequence of alphanumeric characters or separators \\n\\n `S` = optional separator \\n\\n Reference: ISO 15118-2:2014, Annex H, H.2.1 EVSEID Syntax\",\n                \"type\": \"string\"\n              },\n              \"examples\": {}\n            }\n          },\n          \"description\": \"The Certificate Signing Request\"\n        },\n        \"security\": [\n          {\n            \"CPO\": []\n          },\n          {\n            \"MO_with_V2G_PKI\": []\n          },\n          {\n            \"OEM_with_V2G_PKI\": []\n          },\n          {\n            \"CPS\": []\n          }\n        ]\n      },\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\",\n            \"example\": \"mo\",\n            \"pattern\": \"^(\\\\w+-)?(mo|cpo|oem|cps|veh)$\",\n            \"enum\": [\n              \"mo\",\n              \"cps\",\n              \"oem\",\n              \"cpo\",\n              \"veh\"\n            ]\n          },\n          \"name\": \"ca\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"The Sub-CA identifier the certificate is requested from.\"\n        },\n        {\n          \"schema\": {\n            \"type\": \"string\",\n            \"default\": \"urn:iso:15118:2:2013:MsgDef\",\n            \"enum\": [\n              \"urn:iso:15118:20:2020:MsgDef\",\n              \"urn:iso:15118:2:2013:MsgDef\"\n            ],\n            \"example\": \"urn:iso:15118:2:2013:MsgDef\"\n          },\n          \"in\": \"query\",\n          \"name\": \"xsdMsgDefNamespace\",\n          \"description\": \"specific ISO version\"\n        },\n        {\n          \"schema\": {\n            \"type\": \"string\",\n            \"example\": \"secp521r1\",\n            \"default\": \"secp256r1,secp521r1\",\n            \"enum\": [\n              \"secp256r1\",\n              \"ed448\",\n              \"secp521r1\"\n            ]\n          },\n          \"in\": \"query\",\n          \"name\": \"algorithm\",\n          \"description\": \"define which algorithm shall be used. In urn:iso:15118:2:2013:MsgDef: the default algorithm is secp256r1. In urn:iso:15118:20:2020:MsgDef: the default algorithm is secp521r1  \"\n        }\n      ]\n    },\n    \"/{ca}/cacerts\": {\n      \"get\": {\n        \"summary\": \"Obtaining CA Certificates\",\n        \"tags\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"headers\": {\n              \"content-transfer-encoding\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"base64\"\n              },\n              \"content-type\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"application/pkcs7-mime; smime-type=certs-only\"\n              }\n            },\n            \"content\": {\n              \"application/pkcs10\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"description\": \"The CA certificates\"\n                }\n              },\n              \"application/pkcs7\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"description\": \"The CA certificates\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"5XX\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"operationId\": \"cacerts\",\n        \"parameters\": [\n          {\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"in\": \"header\",\n            \"name\": \"Content-Transfer-Encoding\",\n            \"description\": \"application/pkcs10\",\n            \"required\": true\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"urn:iso:15118:2:2013:MsgDef\",\n              \"enum\": [\n                \"urn:iso:15118:20:2020:MsgDef\",\n                \"urn:iso:15118:2:2013:MsgDef\"\n              ],\n              \"example\": \"urn:iso:15118:2:2013:MsgDef\"\n            },\n            \"in\": \"query\",\n            \"name\": \"xsdMsgDefNamespace\",\n            \"description\": \"specific ISO version\"\n          },\n          {\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"secp521r1\",\n              \"default\": \"secp256r1,secp521r1\",\n              \"enum\": [\n                \"secp256r1\",\n                \"ed448\",\n                \"secp521r1\"\n              ]\n            },\n            \"in\": \"query\",\n            \"name\": \"algorithm\",\n            \"description\": \"define which algorithm shall be used. In urn:iso:15118:2:2013:MsgDef: the default algorithm is secp256r1. In urn:iso:15118:20:2020:MsgDef: the default algorithm is secp521r1  \"\n          }\n        ],\n        \"description\": \"The distribution of CA certificates is provided by role.\\n| role | CA  | Chain||\\n| ---- | --- |--- |--- |\\n| CPO  | cpo | CPO/CPMS from V2G PKI | \\n| MO   | mo  | MO from V2G PKI| \\n| OEM  | oem | Provisioning Certificate chain from V2G PKI| \\n| OEM  | veh | Vehicle Certificate chain from V2G PKI (ISO15118:20)| \\n| CPS  | cps | Provisioning Signing Certificate (CPS) chain from V2G PKI | \",\n        \"security\": [\n          {\n            \"CPO\": []\n          },\n          {\n            \"MO_with_V2G_PKI\": []\n          },\n          {\n            \"OEM_with_V2G_PKI\": []\n          }\n        ]\n      },\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\",\n            \"pattern\": \"^(\\\\w+-)?(mo|cpo|oem|veh|cps)$\",\n            \"example\": \"cpo\",\n            \"enum\": [\n              \"cpo\",\n              \"oem\",\n              \"cps\",\n              \"veh\",\n              \"mo\"\n            ]\n          },\n          \"name\": \"ca\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"The Sub-CA identifier the certificate is requested from. \"\n        }\n      ]\n    }\n  },\n  \"components\": {\n    \"schemas\": {},\n    \"securitySchemes\": {\n      \"CPO\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"\",\n            \"tokenUrl\": \"\",\n            \"refreshUrl\": \"\",\n            \"scopes\": {}\n          }\n        },\n        \"description\": \"OAuth2 is used to grant access to the CPO related endpoint.  \"\n      },\n      \"MO_with_V2G_PKI\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"\",\n            \"tokenUrl\": \"\",\n            \"refreshUrl\": \"\",\n            \"scopes\": {}\n          }\n        },\n        \"description\": \"OAuth2 is used to grant access to the MO related endpoint. \"\n      },\n      \"OEM_with_V2G_PKI\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"\",\n            \"tokenUrl\": \"\",\n            \"refreshUrl\": \"\",\n            \"scopes\": {}\n          }\n        },\n        \"description\": \"OAuth2 is used to grant access to the OEM related endpoint. \"\n      },\n      \"CPS\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"\",\n            \"tokenUrl\": \"\",\n            \"refreshUrl\": \"\",\n            \"scopes\": {}\n          }\n        },\n        \"description\": \"OAuth2 is used to grant access to the CPS Operator related endpoint. \"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/hubject/opcp@2cef9193923116402df54c0d1adb0b1f4d30916e/-/blob/OPCP-1.0.0/reference/est.v1.json",
			"externalURLs": [
				{
					"url": "https://github.com/hubject/opcp/blob/2cef9193923116402df54c0d1adb0b1f4d30916e/OPCP-1.0.0/reference/est.v1.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/{ca}/cacerts\": get: operation \"cacerts\": security: parse security scheme \"CPO\": oauth2: flow \"authorizationCode\": at 273:25: \"tokenUrl\" MUST be in the form of a URL: parse \"\": empty url"
}