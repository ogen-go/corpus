{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GroupePSA/groupepsa.github.io"
		},
		"file": {
			"name": "api-b2b-v3.yaml",
			"size": 0,
			"path": "assets/openapi/api-b2b-v3.yaml",
			"byteSize": 160919,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api-cert.groupe-psa.com/connectedcar/v3'\nsecurity:\n  - BasicAuth: []\n    ClientId: []\ninfo:\n  version: '3.3.0'\n\n  title: Groupe PSA Connected Car B2B API\n  description: |\n    *Business Partner Connected Fleet API*  \n    \n \n    # Introduction\n\n    This is the description of the *Groupe PSA Connected Car V3 B2B API*. \n    This specification is written in **OpenAPI Specification version 3** and can\n    be displayed using [ReDoc](https://github.com/Rebilly/ReDoc) or\n    [Swagger](http://swagger.io).\n      This REST API allows  applications to fetch data from the connected Vehicles data  platform.\n    \n    ---\n    \n    # Authentication\n\n    PSA Connected Car B2B APIs uses the [HTTPS Authentication](https://tools.ietf.org/html/rfc7235) (with provided PSA SSL Certificate) to access to fleet vehicles data.\n    \n    \n    ---\n    \n    # Paging:\n      To make this necessary feature easy to use when retrieving a collection of results, this API uses a token (computed and interpreted by the server only) as a context that contains all necessary information allowing the navigation through pages. \n      Token acts as an ```HTTP COOKIE``` on the client-side, so the server does not keep any cache or session settings to continue paging and keep all request stateless.\n          \n    ---\n        \n    # Errors:\n      Error codes returned by all APIs comply with the standard. Nevertheless, PSA Services (callers) need to have more detailed data structures (even when the answer is not Http-OK) to better categorize the type of error by providing application code, message and debugging code(for investigation purposes). The HTTP code of the response is managed by the protocol itself (in the header).\n        \n    ### These APIS are likely to report the following HTTP code:\n    \n    | \u003cb\u003eCode\u003c/b\u003e  | \u003cb\u003eDescription\u003c/b\u003e  |  \u003cb\u003eCase\u003c/b\u003e |  \n    |---|---|---|\n    | 200  |\u003ci\u003eThe request has succeeded and the resource data has been sent.\u003c/i\u003e|GET APIs.  |\n    | 202  |\u003ci\u003eThe request has been accepted for processing, but not yet acted upon. An id of processing is returned.\u003c/i\u003e|POST/PUT requests:\u003cbr\u003e-Create monitor\u003cbr\u003e-Create Remote callback.| \n    | 204  |\u003ci\u003eThe request has been accepted and there is no additional content\u003c/i\u003e|DELTE APIs:\u003cbr\u003e-Delete monitor.\u003cbr\u003e-Delete remote callback.|\n    |400|\u003ci\u003eRequest cannot be processed due to invalid query parameter value of body content (for POST/PUT verbs)\u003c/i\u003e|ALL APIs.|\n    |401|\u003ci\u003eUnauthorized request due to lack of valid authentication credentials.\u003c/i\u003e|All APIs.|\n    |403|\u003ci\u003eUnauthorized request due to insufficient credentials to grant access.\u003c/i\u003e|All APIs.|\n    |404|\u003ci\u003eTarget resource not found.|All APIs. Even POST, PUT or DELETE if the resource id is unknown.\u003c/i\u003e|\n    |500|\u003ci\u003eUnexpected condition that prevented from fulfilling the request.\u003c/i\u003e|All APIs.|\n\n\n      \n      **Errors are  returned as a generic error response:**\n       * See ```ErrorCodeDefaultResponse``` model.\n       \n    ---\n    \n       \n    # API output:\n      ## Data profile\n       B2B partners need to return vehicle data with an end-user profile. To do this, the data APIs allow to use an end-user profile according to a query parameter named ```profile```.  Remote,  Monitor, Fleets and Vehicles getter APIs are not affected by this parameter.\n     \n      ## Data format\n      \n      **All APIs return data in JSON format. The application who uses them must take into account the evolving character of them and more precisely regarding the schemas of the exposed data. Indeed:**\n      \n      *  The missing of known data fields should not cause an error. \n      *  It should (correctly)  deal with JSON content with unknown properties also. Indeed, data schema extensions should be supported without errors even if they are not used. \n        \n      \n      **for example:**\n      \n      Assuming a given exposed resource with this data schema:\n        \n          \n           data:\n            type: object\n            description: Data model\n            properties:\n              field1:\n                type: string\n              field2:\n                type: number\n             \n      The application should be able to deal with those possible valid JSON contents:\n        \n      \u003e All fields:\n        ```{\n          \"field1\":\"value1\",\n          \"field2\": 1\n        }```\n        \n      \u003e Missing field2:\n        ```{\n          \"field1\":\"value1\"\n        }```        \n\n      \u003e Unknow  field3:\n        ```{\n          \"field1\":\"value1\",\n          \"field3\": 2.5\n        }```\n      \n     \n    ---  \n  license:\n    name: Groupe PSA Licence\n    url: 'https://www.psa-peugeot-citroen.com/'\ntags:\n  - name: Fleet\n    description: To retreive Fleet details and access resources in **batch mode** (without vehicle or trip filtering).\n  - name: Vehicles\n    description: Access to Vehicles details.\n  - name: Trips\n    description: Describe Trips of a Fleet or Vehicle\n  - name: Monitors\n    description: Vehicles monitors.\n  - name: Remote\n    description: Vehicle remote access.\n\npaths:\n  /fleets:\n    get:\n      tags:\n        - Fleet\n      summary: Fleets owned by a partner\n      description: Returns all Fleets owned by a partner. \n      operationId: getFleets\n      parameters:\n        \n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n      responses:\n        200:\n           $ref: '#/components/responses/FleetsSuccessResponse'\n        default:\n          description: Fleet not found\n          $ref: '#/x-fragment/general_error_fragment'\n\n  /fleets/{fid}:\n    get:\n      tags:\n        - Fleet\n      summary: Fleet's information\n      description: Returns the Fleet's information. \n      operationId: getFleet\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n      responses:\n        200:\n          $ref: '#/components/responses/FleetSuccessResponse'\n        default:\n          description: Fleet not found\n          $ref: '#/x-fragment/general_error_fragment'\n \n  /fleets/{fid}/vehicles:\n    get:\n      tags:\n        - Vehicles\n      summary: List of vehicles\n      description: Returns the Vehicles associated with the Fleet.\n      operationId: getVehiclesByDevice\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n        - $ref: '#/components/parameters/locale'\n        - $ref: '#/components/parameters/vinPrefix'\n      responses:\n        200:\n          description: OK\n          content:\n            'application/hal+json ':\n              schema:\n                $ref: '#/components/schemas/Vehicles'\n        default:\n          description: Vehicle not found\n          $ref: '#/x-fragment/general_error_fragment'\n    \n  '/fleets/{fid}/vehicles/{vid}':\n    get:\n      tags:\n        - Vehicles\n      summary: Details of a vehicle.\n      description: Returns detailed information about a Vehicle.\n      operationId: getVehicleByid\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/locale'\n   \n      responses:\n        200:\n          description: OK\n          content:\n            'application/hal+json ':\n              schema:\n                  allOf:\n                      - $ref: '#/components/schemas/VehicleLabel'\n                      - $ref: '#/components/schemas/Vehicle'\n        default:\n          description: Vehicle not found\n          $ref: '#/x-fragment/general_error_fragment'\n  \n  '/fleets/{fid}/vehicles/{vid}/lastPosition':\n    get:\n      tags:\n        - Vehicles\n      summary: Last position identified\n      description: Returns the latest GPS Position of the Vehicle.\n      operationId: getCarLastPosition\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/profile'\n      responses:\n        200:\n          description: Position response\n          content:\n            application/vnd.geo+json:\n              schema:\n                $ref: '#/components/schemas/Position'\n        default:\n          description: Vehicle not found\n          $ref: '#/x-fragment/general_error_fragment'\n          \n  '/fleets/{fid}/vehicles/{vid}/collisions':\n     get:\n        tags:\n            - Vehicles\n        summary: Collisions of a vehicle.\n        description: \u003e-\n            Returns the list of Collisions that occurred for a given vehicle (id)\n            during the timestamp ranges and bounded by an index range.\n        operationId: getVehicleCollision\n        parameters:\n\n            - $ref: '#/components/parameters/fleetId'\n            - $ref: '#/components/parameters/vehicleId'\n            - $ref: '#/components/parameters/profile'\n            - $ref: '#/components/parameters/timestamps'\n            - $ref: '#/components/parameters/indexRange'\n            - $ref: '#/components/parameters/pageSize'\n            - $ref: '#/components/parameters/pageToken'\n        responses:\n            200:\n                $ref: '#/components/responses/CollisionsSuccessResponse'\n            default:\n                $ref: '#/components/responses/CollisionFailedResponse'\n          \n  '/fleets/{fid}/vehicles/{vid}/collisions/{cid}':\n    get:\n     tags:\n       - Vehicles\n     summary: An identified collision that occurred on a vehicle.\n     description: Returns the Collision that matches the vehicle id and the Collision cid.\n     operationId: getVehicleCollisionById\n     parameters:\n\n       - $ref: '#/components/parameters/fleetId'\n       - $ref: '#/components/parameters/vehicleId'\n       - $ref: '#/components/parameters/profile'\n       - $ref: '#/components/parameters/collisionId'\n     responses:\n       200:\n         $ref: '#/components/responses/CollisionsuccessResponse'\n       default:\n         $ref: '#/components/responses/CollisionFailedResponse'\n          \n  '/fleets/{fid}/vehicles/{vid}/maintenance':\n    get:\n      tags:\n        - Vehicles\n      summary: Maintenance details of a vehicle.\n      description: Returns the latest Maintenance information for a Vehicle.\n      operationId: getVehicleMaintenance\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/profile'\n      responses:\n        200:\n          description: Maintenant response\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/Maintenance'\n        default: \n          $ref: '#/x-fragment/general_error_fragment'\n  \n  '/fleets/{fid}/status':\n    get:\n      tags:\n        - Fleet\n      description: Returns the latest vehicles status for a given fleet. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. \n      summary: Fleet Vehicles status.\n      operationId: getFleetStatusList\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n        - $ref: '#/components/parameters/statusExtension'\n      responses:\n        200:\n          $ref: '#/components/responses/StatusSuccessResponses'\n        default:\n          $ref: '#/x-fragment/general_error_fragment'\n          \n  '/fleets/{fid}/maintenances':\n    get:\n      tags:\n        - Fleet\n      description: Returns the latest vehicles maintenance list for a given fleet. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. \n      summary: Fleet Vehicles maintenances.\n      operationId: getFleetMantenanceList\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n      responses:\n        200:\n          $ref: '#/components/responses/MaintenanceSuccessResponses'\n        default:\n          $ref: '#/x-fragment/general_error_fragment'  \n          \n  '/fleets/{fid}/alerts':\n    get:\n      tags:\n        - Fleet\n      description: Returns the vehicles alerts list for a given fleet. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. \n      summary: Fleet Vehicles alerts.\n      operationId: getFleetAlertList\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n      responses:\n        200:\n          $ref: '#/components/responses/AlertsuccessResponses'\n        default:\n          $ref: '#/x-fragment/general_error_fragment'\n  \n  '/fleets/{fid}/alerts/{aid}':\n    get:\n      tags:\n        - Fleet\n      description: Returns information about a specific alert message for a given fleet. \n      summary: Fleet single alert.\n      operationId: getFleetAlertById\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/alertId'        \n      responses:\n        200:\n          $ref: '#/components/responses/AlertsuccessResponse'\n        default:\n          $ref: '#/components/responses/AlertFailedResponse'\n \n  '/fleets/{fid}/vehicles/{vid}/status':\n    get:\n      tags:\n        - Vehicles\n      description: Returns the latest vehicle status.\n      summary: Vehicle status.\n      operationId: getFleetVehicleStatus\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/statusExtension'\n      responses:\n        200:\n          description: Status response\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/Status'\n        default:\n          $ref: '#/x-fragment/general_error_fragment'          \n          \n  '/fleets/{fid}/vehicles/{vid}/alerts':\n    get:\n      tags:\n        - Vehicles\n      summary: Alerts related to a vehicle.\n      description: Returns the latest alert messages for a Vehicle.\n      operationId: getVehicleAlerts\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n      responses:\n        200:\n          $ref: '#/components/responses/AlertsuccessResponses'\n        default:\n          $ref: '#/components/responses/AlertFailedResponse'\n          \n  '/fleets/{fid}/vehicles/{vid}/alerts/{aid}':\n    get:\n      tags:\n        - Vehicles\n      summary: An alert related to a vehicle.\n      description: Returns information about a specific alert messages for a Vehicle.\n      operationId: getFleetVehicleAlertsById\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/alertId'\n      responses:\n        200:\n          $ref: '#/components/responses/AlertsuccessResponse'\n        default:\n          $ref: '#/components/responses/AlertFailedResponse'\n          \n  '/fleets/{fid}/vehicles/{vid}/telemetry':\n    get:\n      tags:\n        - Vehicles\n      summary: Telemetry of vehicle\n      description: \u003e-\n        Returns the latest Telemetry messages that occurred during a selective timestamp-ranges and bounded by an index range.\n      operationId: getTelemetry\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSizeHighFrequency'\n        - $ref: '#/components/parameters/pageToken'\n        - $ref: '#/components/parameters/telemetryType'\n        - $ref: '#/components/parameters/telemetryExtension'\n      responses:\n        200:\n          $ref: '#/components/responses/TelemetrySuccessResponse'\n        default:\n          $ref: '#/components/responses/TelemetryFailedResponse'\n          \n  '/fleets/{fid}/monitors':\n    get:\n      tags:\n        - Monitors\n      summary: Get all monitors of the fleet.\n      description: Returns the list of subscribed Monitors of the fleet.\n      operationId: getFleetMonitors\n      parameters:\n        \n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n        - $ref: '#/components/parameters/fleetId'\n          \n      responses:\n        200:\n          $ref: '#/components/responses/MonitorsuccessResponses'\n        default:\n          $ref: '#/components/responses/MonitorFailedResponse'\n    post:\n      tags:\n        - Monitors\n      summary: Create a new Monitor.\n      description: |\n                    \u003eCreate a Monitor for all Vehicles of the fleet. This is a kind of vehicle monitor that generates an event following the transition state of one of the (monitored) data  of the vehicles. As for example the fuel level, the moving out of a defined geographical area. \n                    \n                    \u003eWhen the trigger occurs, the built event expressed as a JSON object will be sent over the subscribed callback.\n      operationId: createFleetVehicleMonitor\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/MonitorParameter'\n                #DataMonitorParm\n      responses: \n        202:\n          $ref: '#/components/responses/MonitorsuccessPostResponse'\n        default:\n          $ref: '#/components/responses/MonitorFailedResponse'\n          \n  '/fleets/{fid}/monitors/{mid}':\n    put:\n      tags:\n        - Monitors\n      summary: Update an existing Monitor.\n      description: |\n                    Update an existing ```Monitor``` that has been posted (and accepted previously) for this fleet. The monitor object (body) provided should be complete because the aggregation is not supported for the update of the ```monitor```. You can first retrieve this object using the ```GET /monitor/{mid}``` API, then modify it and finally publish it (via this ```PUT API```).\n      operationId: updateFleetVehicleMonitor\n      parameters:\n        - $ref: '#/components/parameters/monitorId'\n        - $ref: '#/components/parameters/fleetId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/MonitorParameter'\n      responses: \n        202:\n          $ref: '#/components/responses/MonitorsuccessPostResponse'\n        default:\n          $ref: '#/components/responses/MonitorFailedResponse'\n    get:\n      tags:\n        - Monitors\n      description: Returns information about a specific Monitor for a given fleet.\n      summary: Get the monitor by monitor Id.\n      operationId: getFleetMonitorsStatusById\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/monitorId'\n      responses:\n        200:\n          $ref: '#/components/responses/MonitorsuccessResponse'\n        default:\n          $ref: '#/components/responses/MonitorFailedResponse'\n    delete:\n      tags:\n        - Monitors\n      summary: Delete an existing Monitor.\n      description: Stop (disable) an existing Monitor.\n      operationId: deleteFleetMonitor\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/monitorId'\n      responses:\n        204:\n          description: Monitor deleted (the response does not include an entity).\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Monitor not found\n \n  '/fleets/{fid}/monitors/{mid}/status': \n    put:\n      x-available: true\n      tags:\n        - Monitors\n      summary: Set a new monitor status.\n      description: |\n                   Set monitor status. \n      operationId: setFleetVehicleMonitorStatus\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/monitorId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/MonitorStatusSetter'\n      responses: #MonitorId\n        202:\n          $ref: '#/components/responses/MonitorsuccessPostResponse'\n        default:\n          $ref: '#/components/responses/MonitorFailedResponse'\n  \n  '/fleets/{fid}/vehicles/{vid}/trips':\n    get:\n      tags:\n        - Trips\n      description: \u003e-\n        This method returns a list of all Trips that a given Vehicle has taken.\n        This will NOT include Trips that have not yet been completed.\n      operationId: getTripsByVehicle\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n      responses:\n        200:\n          $ref: '#/components/responses/TripsSuccessResponses'\n        default:\n          $ref: '#/components/responses/TripFailedResponse'\n\n  '/fleets/{fid}/trips':\n    get:\n      summary: Trips of all vehicles of the fleet. \n      tags:\n        - Fleet\n      description: \u003e-\n        This method returns a list of all Trips. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. \n      operationId: getFleetTrips\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n      responses:\n        200:\n          $ref: '#/components/responses/TripsSuccessResponses'\n        default:\n          $ref: '#/components/responses/TripFailedResponse'\n  \n\n  '/fleets/{fid}/trips/{tid}/collisions':\n    get:\n     tags:\n       - Trips\n     summary: Trips of fleet. \n     description: \u003e-\n       Returns the list of Collisions that occurred during a trip and bounded (optional) by a timestamp ranges and an index range.\n     operationId: getTripCollisionsByTrip\n     parameters:\n\n       - $ref: '#/components/parameters/fleetId'\n       - $ref: '#/components/parameters/pageToken'\n       - $ref: '#/components/parameters/tripId'\n       - $ref: '#/components/parameters/profile'\n       - $ref: '#/components/parameters/timestamps'\n       - $ref: '#/components/parameters/indexRange'\n       - $ref: '#/components/parameters/pageSize'\n     responses:\n       '200':\n         $ref: '#/components/responses/CollisionsSuccessResponse'\n       default:\n         $ref: '#/components/responses/CollisionFailedResponse'\n         \n  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/collisions':\n    get:\n     tags:\n       - Trips\n     summary: Trip's collisions of vehicle. \n     description: \u003e-\n       Returns the list of Collisions of a vehicle that occurred during a trip and bounded (optional) by a timestamp ranges and an index range.\n     operationId: getTripCollisionsByTripAndVehicle\n     parameters:\n\n       - $ref: '#/components/parameters/vehicleId'\n       - $ref: '#/components/parameters/fleetId'\n       - $ref: '#/components/parameters/pageToken'\n       - $ref: '#/components/parameters/tripId'\n       - $ref: '#/components/parameters/timestamps'\n       - $ref: '#/components/parameters/indexRange'\n       - $ref: '#/components/parameters/pageSize'\n     responses:\n       '200':\n         $ref: '#/components/responses/CollisionsSuccessResponse'\n       default:\n         $ref: '#/components/responses/CollisionFailedResponse'\n         \n  '/fleets/{fid}/collisions':\n    get:\n     tags:\n       - Fleet\n     summary: Collisions of all vehicles' fleet.\n     description: \u003e-\n       Returns the list of Collisions that occured on vehicles' fleet. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. \n     operationId: getFleetTripCollisions\n     parameters:\n\n       - $ref: '#/components/parameters/fleetId'\n       - $ref: '#/components/parameters/profile'\n       - $ref: '#/components/parameters/pageToken'\n       - $ref: '#/components/parameters/timestamps'\n       - $ref: '#/components/parameters/indexRange'\n       - $ref: '#/components/parameters/pageSize'      \n     responses:\n       '200':\n         $ref: '#/components/responses/CollisionsSuccessResponse'\n       default:\n         $ref: '#/components/responses/CollisionFailedResponse'\n  \n  '/fleets/{fid}/collisions/{cid}':    \n    get:\n     tags:\n       - Fleet\n     summary: An identified collision that occurred on a fleet.\n     description: \u003e-\n      # Returns the Collision that matches the fleet id and the Collision cid. \n     operationId: getCollisionsById\n     parameters:\n\n       - $ref: '#/components/parameters/fleetId'\n       - $ref: '#/components/parameters/profile'\n       - $ref: '#/components/parameters/collisionId'      \n     responses:\n       '200':\n         $ref: '#/components/responses/CollisionsuccessResponse'\n       default:\n         $ref: '#/components/responses/CollisionFailedResponse' \n\n  '/fleets/{fid}/trips/{tid}':\n    get:\n      tags:\n        - Trips\n      description: \u003e-\n        Gives the Trip that matches the Trip id (tid).\n      operationId: getFleetTripsById\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/profile'\n      responses:\n        200:\n          $ref: '#/components/responses/TripsuccessResponse'\n        default:\n          $ref: '#/components/responses/TripFailedResponse'\n\n  '/fleets/{fid}/vehicles/{vid}/trips/{tid}':\n    get:\n      tags:\n        - Trips\n      description: \u003e-\n        This method returns the Trip that matches the Trip id (tid) a given\n        Vehicle (id) has taken.\n      operationId: getFleetTripByVehicle\n      parameters:\n        \n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/profile'\n      responses:\n        200:\n          $ref: '#/components/responses/TripsuccessResponse'\n        default:\n          $ref: '#/components/responses/TripFailedResponse'\n\n  '/fleets/{fid}/trips/{tid}/alerts':\n    get:\n      tags:\n        - Trips\n      description: \u003e-\n        Returns the alert message list for a given trip.\n      operationId: getFleetTripAlerts\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n        - $ref: '#/components/parameters/profile'\n\n      responses:\n        200:\n          $ref: '#/components/responses/AlertsuccessResponses'\n        default:\n          $ref: '#/components/responses/AlertFailedResponse'  \n\n  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/alerts':\n    get:\n      tags:\n        - Trips\n      description: \u003e-\n        Returns the alert message list for a given vehicle.\n      operationId: getFleetTripAlertByVehicle\n      parameters:\n        \n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageToken'\n        - $ref: '#/components/parameters/profile'\n\n      responses:\n        200:\n          $ref: '#/components/responses/AlertsuccessResponses'\n        default:\n          $ref: '#/components/responses/AlertFailedResponse'\n  \n\n  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/alerts/{aid}':\n    get:\n      tags:\n        - Trips\n      description: \u003e-\n        Returns the alert message list for a given vehicle that occure during a trip.\n      operationId: getFleetTripAlertByVehicleById\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/alertId'\n        - $ref: '#/components/parameters/profile'\n\n      responses:\n        200:\n          $ref: '#/components/responses/AlertsuccessResponse'\n        default:\n          $ref: '#/components/responses/AlertFailedResponse'  \n    \n  '/fleets/{fid}/trips/{tid}/alerts/{aid}':\n    get:\n      tags:\n        - Trips\n      description: \u003e-\n        Returns the alert message for a given trip.\n      operationId: getFleetTripAlertById\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/alertId'\n        - $ref: '#/components/parameters/profile'\n\n      responses:\n        200:\n          $ref: '#/components/responses/AlertsuccessResponse'\n        default:\n          $ref: '#/components/responses/AlertFailedResponse'   \n    \n  '/fleets/{fid}/trips/{tid}/wayPoints':\n    get:\n      tags:\n        - Trips\n      description: Gives the wayPoints for a specified Fleet Trip.\n      operationId: getPathForATrip\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/tolerence'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/pageSizeHighFrequency'\n        - $ref: '#/components/parameters/pageToken'\n      responses:\n        200:\n          description: Path response\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/WayPoints'\n        default:\n          description: wayPoints not found\n  \n  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/wayPoints':\n    get:\n      tags:\n        - Trips\n      description: Gives the Vehicle's wayPoints for a specified Trip.\n      operationId: getPathForTrip\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/tolerence'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/pageSizeHighFrequency'\n        - $ref: '#/components/parameters/pageToken'\n        \n      responses:\n        200:\n          description: Path response\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/WayPoints'\n        default:\n          description: wayPoints not found\n\n  '/fleets/{fid}/trips/{tid}/telemetry':\n    get:\n      summary: Telemetries for of a trip\n      tags:\n        - Trips\n      description: \u003e-\n        Returns the set of Telemetry values that occurred for a  speific Trip (tid) during the timestamp ranges and bounded by\n        an index range.\n      operationId: getFleetTelemetryForTrip\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSizeHighFrequency'\n        - $ref: '#/components/parameters/pageToken'\n        - $ref: '#/components/parameters/telemetryType'\n        - $ref: '#/components/parameters/telemetryExtension'\n      responses:\n        200:\n          $ref: '#/components/responses/TelemetrySuccessResponse'\n        default:\n          $ref: '#/components/responses/TelemetryFailedResponse' \n  \n  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/telemetry':\n    get:\n      summary: Telemetry for vehicle and trip\n      tags:\n        - Trips\n      description: \u003e-\n        Returns the set of Telemetry values that occurred for a given vehicle\n        (id) and a speific Trip (tid) during the timestamp ranges and bounded by\n        an index range.\n      operationId: getTelemetryForTripByVehicle\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/vehicleId'\n        - $ref: '#/components/parameters/tripId'\n        - $ref: '#/components/parameters/profile'\n        - $ref: '#/components/parameters/timestamps'\n        - $ref: '#/components/parameters/indexRange'\n        - $ref: '#/components/parameters/pageSizeHighFrequency'\n        - $ref: '#/components/parameters/pageToken'\n        - $ref: '#/components/parameters/telemetryType'\n        - $ref: '#/components/parameters/telemetryExtension'\n      responses:\n        200:\n          $ref: '#/components/responses/TelemetrySuccessResponse'\n        default:\n          $ref: '#/components/responses/TelemetryFailedResponse'\n  \n  '/fleets/{fid}/remote/callbacks':  \n    get:\n      tags:\n        - Remote\n      summary: Get all remote callbacks of a fleet.\n      description: Returns the list of subscribed remote callback of the fleet.\n      operationId: getFleetRemotes\n      parameters:\n          \n          - $ref: '#/components/parameters/fleetId'\n          - $ref: '#/components/parameters/remoteType'\n          - $ref: '#/components/parameters/indexRange'\n          - $ref: '#/components/parameters/pageSize'\n          - $ref: '#/components/parameters/pageToken'\n          \n      responses:\n        200:\n          $ref: '#/components/responses/RemoteCallbackSuccessResponses' \n        default:\n          $ref: '#/components/responses/RemoteCallbackFailedResponse'\n    #callbackId      \n    post:\n        tags:\n          - Remote\n        summary: Register a new reusable remote callback.\n        description: |\n                     Create a new reusable callback. \n        operationId: setFleetVehicleRemote\n        parameters:\n          \n          - $ref: '#/components/parameters/fleetId'\n        requestBody:\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/RemoteCallbackSubscribe'\n        responses: #MonitorId\n          200:\n            $ref: '#/components/responses/RemoteCallbackSuccessPostResponse'\n          default:\n            $ref: '#/components/responses/RemoteCallbackFailedResponse'      \n            \n  '/fleets/{fid}/remote/callbacks/{cbid}':\n    put:\n        tags:\n          - Remote\n        summary: Update an existing remote callback.\n        description: |\n\n                     Update an existing ```Callback``` that has been posted (and accepted previously) for this fleet. The callback object (body) provided should be complete (aggregation is not supported for the update). This object can be retrieved  using the ```GET /fleets/{fid}/remote/callbacks/{cbid}``` API then modify it and finally publish it (via this ```PUT API```) \n\n        operationId: setFleetVehicleRemoteById\n        parameters:\n          \n          - $ref: '#/components/parameters/fleetId'\n          - $ref: '#/components/parameters/callbackId'\n        requestBody:\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/RemoteCallbackSubscribe'\n        responses: #MonitorId\n          202:\n            $ref: '#/components/responses/RemoteCallbackSuccessPostResponse'\n          default:\n            $ref: '#/components/responses/RemoteCallbackFailedResponse'\n    get:\n      tags:\n        - Remote\n      summary: Get a remote callbacks of a fleet.\n      description: Returns a subscribed remote callback of the fleet by subscribe ID.\n      operationId: getFleetRemotebyId\n      parameters:\n          \n          - $ref: '#/components/parameters/fleetId'\n          - $ref: '#/components/parameters/callbackId'\n          \n      responses:\n        200:\n          $ref: '#/components/responses/RemoteCallbackSuccessResponse' \n        default:\n          $ref: '#/components/responses/RemoteCallbackFailedResponse'\n    delete:\n      tags:\n        - Remote\n      summary: Delete an existing callback.\n      description: Remove an existing callback if and only if there is no pending remote attached to it.\n      operationId: deleteFleetRemote\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/callbackId'\n      responses:\n        204:\n          description: Callback deleted (the response does not include an entity)\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Callback not found\n  \n  '/fleets/{fid}/remote/callbacks/{cbid}/status': \n    put:\n      tags:\n        - Remote\n      summary: Set a remote callback new status.\n      description: |\n                   Set the remote callback status.```Paused``` means that the callback will not post any event.\n      operationId: setFleeRemoteCallbackStatus\n      parameters:\n        \n        - $ref: '#/components/parameters/fleetId'\n        - $ref: '#/components/parameters/callbackId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/RemoteCallbacksStatusSetter'\n      responses: #MonitorId\n        202:\n          $ref: '#/components/responses/RemoteCallbackSuccessPostResponse'\n        default:\n          $ref: '#/components/responses/RemoteCallbackFailedResponse'\n          \n  '/fleets/{fid}/vehicles/{vid}/callbacks/{cbid}/remotes':\n    post:\n      tags:\n        - Remote\n      summary: Send a remote action to a vehicle.\n      description: |\n                     Create a new asynchrone vehicle remote action and request it. \n      operationId: sendRemoteToVhl\n      parameters:\n          \n          - $ref: '#/components/parameters/fleetId'\n          - $ref: '#/components/parameters/vehicleId'\n          - $ref: '#/components/parameters/callbackId'\n      requestBody:\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/Remote'\n      responses: #MonitorId\n          202:\n            $ref: '#/components/responses/RemoteActionsSuccessPostResponse'\n          default:\n            $ref: '#/components/responses/RemoteCallbackFailedResponse'\n  \n    get:\n      tags:\n        - Remote\n      summary: Get all remote action of vehicle and callback.\n      description: Returns the list of action remote requested for vehicle.\n      operationId: getRemoteRequestsForVhl\n      parameters:\n          \n          - $ref: '#/components/parameters/fleetId'\n          - $ref: '#/components/parameters/vehicleId'\n          - $ref: '#/components/parameters/callbackId'\n          - $ref: '#/components/parameters/indexRange'\n          - $ref: '#/components/parameters/pageSize'\n          - $ref: '#/components/parameters/pageToken'\n          \n      responses:\n        200:\n          $ref: '#/components/responses/RemoteActionSuccessResponses' \n        default:\n          $ref: '#/components/responses/RemoteCallbackFailedResponse'\n          \n  '/fleets/{fid}/vehicles/{vid}/callbacks/{cbid}/remotes/{rid}':\n    get:\n      tags:\n        - Remote\n      summary: Get remote action by id.\n      description: Returns the remote action requested for vehicle by ID.\n      operationId: getRemoteRequestForVhlById\n      parameters:\n          \n          - $ref: '#/components/parameters/fleetId'\n          - $ref: '#/components/parameters/vehicleId'\n          - $ref: '#/components/parameters/callbackId'\n          - $ref: '#/components/parameters/remoteId'\n          \n      responses:\n        200:\n          $ref: '#/components/responses/RemoteActionSuccessResponse' \n        default:\n          $ref: '#/components/responses/RemoteCallbackFailedResponse'\n          \n    # RemoteActionSuccessResponse\n\ncomponents:\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    ClientId:\n      name: client_id\n      type: apiKey\n      in: query\n  schemas: \n    Vin:  \n          description: Identifier of a vehicle. **Set when retrieving resource in batch mode**.   \n          type: string\n\n    Alert:\n      allOf: \n        - $ref: '#/components/schemas/CreatedAtField'\n        - $ref: '#/components/schemas/UpdatedAtField' \n        - title: Alert message\n          type: object\n          properties:\n            _links:\n              type: object\n              properties:\n                self:\n                  $ref: '#/components/schemas/Link'\n                vehicle:\n                  $ref: '#/components/schemas/Link'\n                position:\n                  $ref: '#/components/schemas/Link'\n                trips:\n                  $ref: '#/components/schemas/Link'\n            id:\n              type: string\n            vin:\n              $ref: '#/components/schemas/Vin'\n            active:\n              type: boolean\n            type:\n              $ref: '#/components/schemas/AlertMsgEnum'\n            severity:\n              description: |\n                            Alert severity level.\n                            \n                            |Severity|Description|\n                            |:---|:---|\n                            |Information|Better to fix but it is operating accurately.|\n                            |Warning|Should fix it asap.|\n                            |Critical|Starting prohibited without repair.|                           \n              type: string\n              enum: [Information, Warning, Critical]\n            startedAt:\n              type: string\n              format: date-time\n            endAt:\n              type: string\n              format: date-time\n            startPosition:\n              allOf:\n                - $ref: '#/components/schemas/Position'\n                - description: The position (last vehicle known one) where the alert disappear.\n            endPosition:\n              allOf:\n                - $ref: '#/components/schemas/Position'\n                - description: The position (last vehicle known one) where the alert occurs. \n          required: [ id,active,type,updatedAt,startedAt]\n        \n    MonitorStatus:\n      type: string\n      enum: [Running, Paused, Failed]\n      \n    Monitor:\n      allOf:\n        - $ref: '#/components/schemas/CreatedAtField'\n        - title: Monitor\n          description: Monitor state object\n          type: object\n          properties:\n            updatedAt:\n              type: string\n              format: date-time      \n            _links:\n              type: object\n              properties:\n                self:\n                  $ref: '#/components/schemas/Link'\n                fleet:\n                  $ref: '#/components/schemas/Link'\n            monitorId:\n              $ref: '#/components/schemas/MonitorId'\n            monitor:\n              $ref: '#/components/schemas/MonitorParameter'\n            status:\n              $ref: '#/components/schemas/MonitorStatus'\n          required: [status,monitorId,monitor,createdAt,updatedAt]\n\n    \n    CollisionDetails:\n        type : object\n        properties:\n          side:\n            type: string\n            description: \u003e-\n                Indicates the side of the collision\n            enum: [Front, Rear, Lateral]\n          severity:\n            type: string\n            enum: [Minimal, Minor, Major]\n            description: \u003e-\n                Minimal stands for no emergency system activated during the collision.\n                Minor only pretensioner system activated.\n                Major for airbag and prentensioner activation.\n      \n    InfoCollision:\n      type: string\n      enum: [ NoCrash, CrashDetected]\n    CollisionObj:\n     allOf:\n        - title: Collision\n          type: object\n          properties:\n            details:\n                type : array\n                items : \n                  $ref: '#/components/schemas/CollisionDetails'\n           \n    \n    Collision:\n     allOf:\n        - $ref: '#/components/schemas/CreatedAtField'\n        - $ref: '#/components/schemas/CollisionObj'\n        - title: Collision\n          type: object\n          properties:\n            id:\n              type: string\n            vin:\n              $ref: '#/components/schemas/Vin'\n            \n            tippedOver:\n              type: boolean\n              description: \u003e-\n                    Indicates if the car tipped over during the collision.\n                    Warning : This information is applicable only on vehicles equipped with dedicated sensor and is optionnal.\n            pedestrian:\n              type: boolean\n              description: 'Indicates if the collision involve a pedestrian.\n                           *Warning : This information is applicable only on vehicles equipped with dedicated sensor and is optionnal*'\n            updatedAt:\n              type: string\n              format: date-time\n            _links:\n              type: object\n              properties:\n                self:\n                  $ref: '#/components/schemas/Link'\n                vehicle:\n                  $ref: '#/components/schemas/Link'\n                trip:\n                  $ref: '#/components/schemas/Link'\n          required: [ id ]\n           \n    ECoaching:\n      type: object\n      properties:\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/Link'\n            vehicle:\n              $ref: '#/components/schemas/Link'\n            trip:\n              $ref: '#/components/schemas/Link'\n       \n        scores:\n          type: array\n          items:\n              type: object\n              properties:\n                category:\n                  type: string\n                  description: category of the score. Global, ACCELERATION, BREAKING, A/C system, Runing cold engine, Direct Shift Gear, Speed, STT system, ZEV (Zero emission vehicle).\n                  enum: [Global, Acceleration, Break, AirCondioner, ColdEngine, TirePressure, Slope, Speed, StartStop]\n                score:\n                  type: number\n                  format: int\n                  minimum: 0\n                  maximum: 10\n       \n        _embedded:\n          type: object\n  \n    MonitorId:\n      type: string\n      description: Uniq monitor ID returned when the monitor was created succefully.\n  \n    MaintenanceObj:\n     allOf:\n        - type: object\n          properties:\n            createdAt:\n              description: Date when the resource has been created.\n              type: string\n              format: date-time\n        - type: object\n          properties:\n            updatedAt:\n                description: Date when the resource has been updated.\n                type: string\n                format: date-time\n        - description: Expresses next Maintenance details. Such as number of days and the mileage until the next Maintenance. The value is negative if the next maintenance (day or mileage) is already passed. At least one of the following maintenance information will be provided.\n          type: object\n          title: Maintenance\n          properties:\n\n\n            daysBeforeMaintenance:\n              type: integer\n            mileageBeforeMaintenance:\n              type: integer\n            updatedAt:\n              type: string\n              format: date-time\n          required: [updatedAt]\n\n             \n    Maintenance:\n      allOf:\n          - $ref: '#/components/schemas/MaintenanceObj'\n          - title: Maintenance response\n            properties:\n              _links:\n                type: object\n                properties:\n                  self:\n                    $ref: '#/components/schemas/Link'\n                  vehicle:\n                    $ref: '#/components/schemas/Link'\n                  alerts:\n                    $ref: '#/components/schemas/Link'\n              \n              \n            required:\n              - _links\n    \n    Ignition:\n        allOf:\n        - type: object\n          properties:\n              createdAt:\n                description: Date when the resource has been created.\n                type: string\n                format: date-time \n        - $ref: '#/components/schemas/IgnitionBase'\n        \n    IgnitionBase:\n          type: object\n          properties:\n            type:\n                type: string\n                enum: [Stop, StartUp, Start, Free]\n          required: [type,createdAt]     \n\n    VehicleOdometer:\n      allOf : \n        - type: object\n          properties:\n              createdAt:\n                description: Date when the resource has been created.\n                type: string\n                format: date-time\n        - type: object\n          properties:\n            mileage:\n                description: Vehicle mileage expressed in KM.\n                type: number\n    Battery:  \n           allOf:\n              - type: object\n                properties:\n                    createdAt:\n                      description: Date when the resource has been created.\n                      type: string\n                      format: date-time\n              - $ref: '#/components/schemas/BatteryBase'\n              \n    BatteryBase:  \n                description: Describe the car (with combustion engine)  battery status.\n                type: object\n                properties:\n                  voltage:\n                    type: number\n                    description: Auxiliary battery (12V) state of health in %\n                    format: float\n\n    BeltStatus:  \n                type: object\n                description: Seat belt condition.\n                properties:\n                  belt: \n                    description: Belt status. \n                    type: string\n                    enum: [Normal, Omission]\n                  id: \n                    description: Seat identifier.\n                    type: string\n                    enum: [Driver, Passenger]  \n              \n    BaseSafety:  \n                type: object\n                properties:\n                  beltStatus:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/BeltStatus'\n                  autoECallTriggering:\n                    type: string\n                    enum: [NotDetected, Detected]\n                  beltWarning:\n                    deprecated: true\n                    type: string\n                    enum: [Normal, Omission]\n                  eCallTriggeringRequest:\n                    deprecated: true\n                    type: string\n                    enum: [AirbagUnabled, NoRequest, Requested]        \n\n    WipingBladesState:  \n                type: object\n                properties:\n                  active: \n                      description: weither active (true) or not (false).\n                      type: boolean\n                  speed:\n                    description: Wiping speed. This field is present only if active field is set to true.\n                    type: string\n                    enum: [Hight, Low]\n                  \n    Safety:  \n           allOf:\n              - type: object\n                properties:\n                    createdAt:\n                      description: Date when the resource has been created.\n                      type: string\n                      format: date-time\n              - $ref: '#/components/schemas/BaseSafety'               \n    \n    ServiceType:\n          allOf:\n              - type: object\n                properties:\n                    createdAt:\n                      description: Date when the resource has been created.\n                      type: string\n                      format: date-time\n              - type: object\n                properties:\n                  updatedAt:\n                    type: string\n                    format: date-time\n                  type:\n                    type: string\n                    enum: [Electric, Hybrid, Unknown]\n    \n    DoorsState:\n        allOf:\n          - type: object\n            properties:\n              updatedAt:\n                  description: Date when the resource has been updated.\n                  type: string\n                  format: date-time\n          - $ref: '#/components/schemas/DoorsStateBase'\n                        \n    DoorsStateBase:\n            type: object\n            properties:\n                lockedStates:\n                  type: array\n                  description: List of all known doors' states \n                  items:\n                    type: string\n                    enum: [Unlocked, Locked, SuperLocked, DriverDoorUnlocked, CabinDoorsUnlocked, CargoDoorsLocked, CargoDoorsUnlocked, RearDoorsUnlocked, RearDoorsLocked, TrunkLocked, TrunkUnLocked] \n                opening:\n                  type: array\n                  items:\n                    type: object\n                    description: Opening state per door.\n                    properties :\n                      identifier: \n                        type: string\n                        enum: [Driver, Passenger, RearLeft, RearRight, Trunk, RearWindow, RoofWindow]\n                      state:\n                        type: string\n                        enum: [Open, Closed]          \n    Status:\n      allOf: \n        - $ref: '#/components/schemas/CreatedAtField'\n        - $ref: '#/components/schemas/UpdatedAtField'\n        - title: Vehicle status response\n          description: Describe the latest status of the vehicle\n          type: object\n          properties:\n            _links:\n              type: object\n              properties:\n                self:\n                  $ref: '#/components/schemas/Link'\n                vehicle:\n                  $ref: '#/components/schemas/Link'\n                fleet:\n                  $ref: '#/components/schemas/Link'\n            vin:  \n                 $ref: '#/components/schemas/Vin'\n            ignition:\n                  $ref: '#/components/schemas/Ignition'\n            lastPosition:\n                  $ref: '#/components/schemas/Position'\n            preconditioning:\n                  $ref: '#/components/schemas/Preconditioning'\n            energies:\n              type: array\n              items:\n                $ref: '#/components/schemas/Energy'\n            engines:\n              type: array\n              items:\n                $ref: '#/components/schemas/Engine'\n            doorsState:\n                  $ref: '#/components/schemas/DoorsState'\n            privacy:\n                  $ref: '#/components/schemas/Privacy'\n            battery:\n                  $ref: '#/components/schemas/Battery'\n            service:\n                  $ref: '#/components/schemas/ServiceType'\n            safety:  \n                  $ref: '#/components/schemas/Safety'\n            odometer: \n                  $ref: '#/components/schemas/VehicleOdometer'\n            kinetic :\n                  $ref: '#/components/schemas/Kinetic'\n            environment: \n                  $ref: '#/components/schemas/Environment'\n            drivingBehavior:\n                  description: Describe the behavior of the driver\n                  allOf:\n                    - type: object\n                      properties:\n                        updatedAt:\n                            description: Date when the resource has been updated.\n                            type: string\n                            format: date-time\n                    - $ref: '#/components/schemas/DrivingBehaviorBase'\n            lightingSystem:\n                      $ref: '#/components/schemas/LightingSystem'\n            _embedded:\n              type: object\n              properties:\n                extension:\n                  $ref: '#/components/schemas/Extension'\n          required:\n            - _links\n        \n    Privacy:\n      allOf:\n        - type: object\n          properties:\n              createdAt:\n                description: Date when the resource has been created.\n                type: string\n                format: date-time\n        - type: object\n          properties:\n            state:\n              type: string\n              enum: [None, Geolocation, Full]\n                      \n    Geometry:\n      title: Geometry\n      type: object\n      description: \u003e-\n            This object expresses a GeoJSON Point as specified by\n            [rfc7946](https://tools.ietf.org/html/rfc7946#section-3.1.2).\n      properties:\n        coordinates:\n          title: Coordinates\n          description: Geometry coordinates\n      externalDocs:\n        url: 'https://tools.ietf.org/html/rfc7946#section-3.1'\n      required:\n        - coordinates\n        - type\n        \n    Point:\n      allOf:\n        - $ref: '#/components/schemas/Geometry'\n        - title: Point\n        - description: \u003e-\n            This object expresses a GeoJSON Point as specified by\n            [rfc7946](https://tools.ietf.org/html/rfc7946#section-3.1.2).\n        - properties:\n            type:\n                type: string\n                default: Point\n                enum:\n                    - Point\n            coordinates:\n                description: \u003e-\n                    This is a simple 2 (or more) numbers vector used to define Geometry\n                    Point objects.\n                type: array\n                items:\n                    type: number\n                    format: float\n                    minItems: 2\n\n        - required: [type,coordinates]\n        - example: \n            type: Point\n            coordinates:\n              - 5.970338 \n              - -62.536239\n                  \n    Position:\n      allOf:\n        - required:\n            - geometry\n            - properties\n            - type\n          type: object\n          title: Position\n          properties:\n            type:\n              type: string\n              default: Feature\n              enum:\n                - Feature\n            geometry:\n              $ref: '#/components/schemas/Point'\n            properties:\n              allOf : \n                - type: object\n                  properties:\n                    updatedAt:\n                        description: Date when the resource has been updated.\n                        type: string\n                        format: date-time\n                - type: object\n                  properties:\n                      createdAt:\n                        description: Date when the resource has been created.\n                        type: string\n                        format: date-time      \n                - type: object\n                  properties:\n                    vin:\n                      $ref: '#/components/schemas/Vin'\n                    heading:\n                      type: number\n                      format: float\n                      minimum: 0\n                      maximum: 360\n                    signalQuality:\n                      type: number\n                      format: int\n                    type:\n                      type: string\n                      enum:\n                        - Estimated\n                        - Acquire\n    \n    Energy:\n      allOf:\n        - type: object\n          properties:\n            updatedAt:\n                description: Date when the resource has been updated.\n                type: string\n                format: date-time\n        - $ref: '#/components/schemas/EnergyBase'\n\n    EnergyBase:\n      description: Describe vehicle energy supply for thermic, low emission vehicle or both.\n      type: object\n      properties :\n        type:\n          type: string\n          description: Electric and hydrogen type are considered as low emission vehicle whereas fuel is associated to thermic energy.\n          enum: [Fuel, Electric, Hydrogen]\n        level:\n          type: number\n          format: float\n          description: Percentage of remaining energy (Fuel or electric) level. Expressed with a precision of 0.1%.\n          minimum: 0\n          maximum: 100\n        autonomy:\n          description: Vehicle autonomy expressed in km for this energy class.\n          type: integer\n        extension:\n          type: object\n          properties:\n            fuel:\n              description: Specific fuel energy properties.\n              type: object\n              properties:\n                 consumption:\n                     $ref: '#/components/schemas/FuelEnergyConsumption'\n                 consumptions:\n                     $ref: '#/components/schemas/CompositFuelEnergyConsumption'\n            electric:\n              description: Specific electric energy parameters.\n              type: object\n              properties:\n                residual:\n                   $ref: '#/components/schemas/ElectricResidualEnergy'\n                battery:\n                  $ref: '#/components/schemas/EnergyBattery'\n                charging:\n                  $ref: '#/components/schemas/EnergyCharging'\n\n          \n    FuelEnergyConsumption:\n              description: Total consumption for vehicles for thermic vehicle. Deprecated, use consumptions (CompositFuelEnergyConsumption) instand.\n              type: number\n              format: float\n              deprecated: true\n              minimum: 0\n    CompositFuelEnergyConsumption:\n              description: Fuel consumption.\n              type: object\n              properties:\n                total:\n                  description: Total Fuel consumption expressed in L (Liter).\n                  type: number\n                  format: float\n                  minimum: 0\n                instant:\n                  description: Instant Fuel consumption expressed in L/100Km.\n                  type: number\n                  format: float\n    ElectricResidualEnergy:\n                  description: Residual electric energy (Wh)\n                  type: number\n                  format: float\n                  \n    EnergyCharging:\n                  type: object\n                  description: Electric battery capacity and heath\n                  required: [status]\n                  properties:\n                    plugged:\n                      type: boolean\n                    status:\n                      $ref: '#/components/schemas/ChargingStatusEnum'\n                    remainingTime:\n                      description: Remaning time before the battery is fully charged. This duration is expressed using [ISO8601](https://en.wikipedia.org/wiki/ISO_8601#Durations) format.\n                      type: string\n                    chargingRate:\n                      description:  Charging speed (expressed in gained batteryLife per hour -\u003e KM/H).\n                      type: integer\n                      minimum: 0\n                      maximum: 500\n                    chargingMode:\n                        description:  The charging mode; Slow, Quick and No(not charging).\n                        type: string\n                        enum: [ No, Slow, Quick ]\n                    nextDelayedTime:\n                      description:  Duration (as defined in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)) until the next battery charging.\n                      type: string\n                      \n    EnergyBattery:\n              type: object\n              description: Electric charging state.\n              properties:\n                capacity:\n                  description: Electric battery total capacity (expressed in Wh). \n                  type: number\n                  format: float\n                health:\n                  type: object\n                  properties:\n                    capacity:\n                      description:  Health related to battery capacity (expressed in percentage).\n                      type: number\n                      format: int \n                    resistance:\n                      description:  Health related to battery resistance (expressed in percentage).\n                      type: number\n                      format: int\n    \n    Program:\n      type: object\n      description: Describe recurring action.\n      properties:\n        recurrence:\n            description: | \n                      Determines the recurrence of the program. \n                      * None: means no recurrence. \n                      * Daily: repeated over the week. \n            type: string\n            enum: [None, Daily]\n            default: Daily\n        start:\n            type: string\n            description: |\n                          The program start time formatted using the duration format based on [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) with the schema: P[n]Y[n]M[n]DT[n]H[n]M[n]S\n                      \n                          _example_: \n                        \n                          * PT14H30M means 14H and 30Min\n            example : PT14H30M\n        occurence:\n                type: object\n                description: \u003e\n                   The occurrence on the program will spread on days depending on recurrence value.\n                properties:\n                    day:\n                        type: array\n                        items:\n                          type: string\n                          enum: [Mon, Tue, Wed, Thu, Fri, Sat, Sun]\n                required: [day]\n      required: [start]\n\n    PreconditioningProgram:\n      allOf:\n        - $ref: '#/components/schemas/Program'\n        - title: ProconditionProgram\n        - properties:\n            slot:\n              type: integer\n              description: This program number. Can only be used ONE time in the same preconditioning list.\n              minimum: 1\n              maximum: 4\n            enabled:\n                type: boolean\n                description: \u003e \n                          Determines whether this program is enabled or not.\n        - required: [start, enabled, slot, recurrence, occurence]\n        \n    Preconditioning:\n\n      allOf:\n          - type: object\n            properties:\n                createdAt:\n                  description: Date when the resource has been created.\n                  type: string\n                  format: date-time\n          - type: object\n            description: Preconditioning the vehicle for driver and passenger.\n      \n            properties:\n              airConditioning:\n                type : object\n                properties:\n                  status:\n                    description: \u003e \n                      The status of the preconditioning feature.\n                    type: string\n                    enum: [Enabled, Disabled, Finished, Failure]\n                  failureCause:\n                    description: failure cause\n                    type: string\n                    enum: [ Defect, DoorOpened, LowBattery, LowFuelLevel, TooManyUnusedProg ]\n                  programs:\n                    type: array\n                    minItems: 1\n                    maxItems: 4\n                    items:\n                      $ref: '#/components/schemas/PreconditioningProgram'\n            \n             #*  *2018-01-03T12:00:00+01:00/*  known low limit, hight limit = current time.\n            \n          #  *  *R5/2018-01-03T12:00:00Z/P6H* repeate duration 6H interval for 5 times starting at 2018-01-03T12:00:00Z.  \n        \n    Trip:\n      allOf : \n          - $ref: '#/components/schemas/UpdatedAtField'\n          - $ref: '#/components/schemas/CreatedAtField'\n          - title: Trip \n            type: object\n            properties:\n              _links:\n                type: object\n                properties:\n                  self:\n                    $ref: '#/components/schemas/Link'\n                  vehicle:\n                    $ref: '#/components/schemas/Link'\n                  waypoints:\n                    $ref: '#/components/schemas/Link'\n                  alerts:\n                    $ref: '#/components/schemas/Link'\n                  collisions:\n                    $ref: '#/components/schemas/Link'\n                required : [self]\n              id:\n                type: string\n                description: Identifier of a trip\n              vin:\n                $ref: '#/components/schemas/Vin'\n              startedAt:\n                type: string\n                format: date-time\n                description: Date \u0026 Time when the trip started\n              stoppedAt:\n                type: string\n                format: date-time\n                description: Date \u0026 Time when the trip stopped\n              duration:\n                type: string\n                description: Duration in seconds of the trip\n              distance:\n                type: number\n                format: float\n                description: Distance in km of the trip\n              startPosition:\n                $ref: '#/components/schemas/Position'\n              stopPosition:\n                $ref: '#/components/schemas/Position'\n              done:\n                description: Determines whether this trip is finished or not.\n                type: boolean\n              faults:\n                description: The faults of this finished or in progress trip. This means that we lacked data from the vehicle to complete the trip description during one of its step (starting, progressing, or finishing).\n                type: array\n                items:\n                  type: string\n                  enum: [Unstarted, DataLacking, Unfinished]\n            required : [_links, createdAt, id, vin]\n            \n    Fleet:\n      allOf :\n        - $ref: '#/components/schemas/UpdatedAtField'\n        - $ref: '#/components/schemas/CreatedAtField'\n        - title: Fleet Information\n          type: object\n          properties:\n            _links:\n              type: object\n              properties:\n                self:\n                  $ref: '#/components/schemas/Link'\n                vehicles:\n                  $ref: '#/components/schemas/Link'\n                status:\n                  $ref: '#/components/schemas/Link'\n                maintenances:\n                  $ref: '#/components/schemas/Link'\n                alerts:\n                  $ref: '#/components/schemas/Link'\n                trips:\n                  $ref: '#/components/schemas/Link'\n                collisions:\n                  $ref: '#/components/schemas/Link'\n                monitors:\n                  $ref: '#/components/schemas/Link'\n                callbacks:\n                  $ref: '#/components/schemas/Link'\n              required : [self]\n            name:\n              description: Name of the Fleet\n              type: string\n            id:\n              description: The id of the Fleet\n              type: string  \n            description:\n              description: The description of the Fleet\n              type: string\n          required : [_links, id]\n       \n    Vehicle:\n      allOf:\n        - $ref: '#/components/schemas/UpdatedAtField'\n        - $ref: '#/components/schemas/CreatedAtField'\n        - title: Vehicle Information\n          type: object\n          properties:\n            _links:\n              type: object\n              properties:\n                self:\n                  $ref: '#/components/schemas/Link'\n                fleet:\n                  $ref: '#/components/schemas/Link'  \n                lastPosition:\n                  $ref: '#/components/schemas/Link'\n                trips:\n                  $ref: '#/components/schemas/Link'\n                maintenance:\n                  $ref: '#/components/schemas/Link'\n                alerts:\n                  $ref: '#/components/schemas/Link'\n                status:\n                  $ref: '#/components/schemas/Link'\n                telemetry:\n                  $ref: '#/components/schemas/Link'\n                monitors:\n                  $ref: '#/components/schemas/Link'\n                remotes:\n                  $ref: '#/components/schemas/Link'\n                callbacks:\n                  $ref: '#/components/schemas/Link'\n                collisions:\n                  $ref: '#/components/schemas/Link'\n              required : [self]\n            id:\n              type: string\n            vin:\n              description: Serial number of a vehicle\n              type: string\n            brand:\n              description: Brand of a vehicle\n              type: string\n            pictures:\n              description: With the links it's possible to see the pictures of the vehicle \n              type: array\n              minItems: 1\n              maxItems: 12\n              items:\n                $ref: '#/components/schemas/Url' \n          required : [_links]\n          \n    VehicleLabel:\n        properties:\n            label:\n                type: string\n                description: Version of a vehicle\n          \n    CollectionResult:\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/Tab_Links'\n        total:\n          type: integer\n        totalPage:\n          type: integer\n        currentPage:\n          type: integer\n        _embedded:\n          type: object\n      required: [total, totalPage, currentPage, _embedded]\n        \n    Fleets:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - properties:\n            _embedded:\n              type: object\n              properties:\n                fleets:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Fleet'\n                    \n    Alerts:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - properties:\n            _embedded:\n              type: object\n              properties:\n                alerts:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Alert'\n                    \n    Monitors:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - properties:\n            _embedded:\n              type: object\n              properties:\n                monitors:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Monitor'\n                    \n    Collisions:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - properties:\n            _embedded:\n              type: object\n              properties:\n                Collisions:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Collision'\n    \n    WayPoints:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - properties:\n            _embedded:\n              type: object\n              properties:\n                reduced:\n                  description: \u003e\n                      Determines whether this result set (page) has been reduced due to path simplifying (by providing a tolerance factor). \n                       ### Note: \n                       The number of results may be lower than the specified page 'size' due to the applying of the path simplifying after resolving the page result set.\n                  type: boolean\n                  deprecated: true\n                positions:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Position'\n              required:\n                  - positions\n                        \n    Trips:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - description: List of a Trips response\n          properties:\n            _links:\n              $ref: '#/components/schemas/Tab_Links'\n            total:\n              type: integer\n            totalPage:\n              type: integer\n            currentPage:\n              type: integer\n            _embedded:\n              type: object\n              properties:\n                trips:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Trip'\n                \n    MaintenanceList:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - description: List of a Maintenance response\n          properties:\n            _embedded:\n              type: object\n              properties:\n                maintenances:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Maintenance' \n                \n    StatusList:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - description: List of a Status response\n          properties:\n            _embedded:\n              type: object\n              properties:\n                status:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Status'\n                \n    Vehicles:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - title: Vehicle List\n          properties:\n            _embedded:\n              type: object\n              properties:\n                vehicles:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Vehicle'\n                    \n    \n    Attribute:\n            type: object\n            properties:\n              type:\n                type: string\n                enum: [Header, Body, Query]\n                description: |\n                  3 attributes type:\n                  \n                  |Attribute-type|Role|\n                  |----------|-------------|\n                  |Header|-Will be add as http header extension \"x-######:\"|\n                  |Body|-Will be simply add to event body map attribute (see monitor event definition in template document)|\n                  |Query|-Will set as http query parameter when invoking the Webhook|\n                  \n              key:\n                type: string\n              value:\n                oneOf:\n                  - type: string\n                  - type: string\n                    enum: [vin,monitorID,fleetID]\n                    description: |\n                      A value  that will be associated with the provided key as is if expressed as literal value or  contextually valued if prefixed with the dollar sign ($).  \n                      \n                      * Disclaimer: if the var \"vin\" is used as a query parameter, the batchnotify will be no more possible and each event will be sent through a separated request!.\n                      * example: Having a vin=VIN123456, the following attribute set:\n                              ```\"attributes\": [\n                                  {\n                                    \"type\": \"Header\",\n                                    \"key\": \"X-vehicle-id\"\n                                    \"value\":\"$vin\"\n                                  }\n                                ]```\n                        will be valued as http header extension: \n                                \n                        *\"X-vehicle-id: VIN123456\"*\n            required:\n              - key\n              - value  \n              - type\n            example:\n              \n              type: Header\n              key: X-Vehicle_Id\n              value: $vin\n\n    RemoteAttribute:\n      allOf:\n        - $ref: '#/components/schemas/Attribute'\n        - properties:\n              value:\n                oneOf:\n                  - type: string\n                  - type: string\n                    enum: [vin,callbackID,remoteType,fleetID] \n                    description: |\n                      Set of variables that will be contextually valued and used as attribute value. To reference the variable, prefix its name with the dollar sign ($)  \n                      \n                      * Disclaimer: if the var \"vin\" is used as a query parameter, the batchnotify will be no more possible and each event will be sent through a separated request!.\n                      * example: Having a vin=VIN123456, the following attribute set:\n                              ```\"attributes\": [\n                                  {\n                                    \"type\": \"Header\",\n                                    \"key\": \"X-vehicle-id\"\n                                    \"value\":\"$vin\"\n                                  }\n                                ]```\n                        will be valued as http header extension: \n                                \n                        *\"X-vehicle-id: VIN123456\"*          \n        \n\n    RemoteAttributeSet:          \n        type: array\n        description: |\n            Additional attributes-set as key/value pairs wich will be added to the request when sending the event. It can be used as http header enhancement (such as headers can be used as an authentication parameter when posting the event) or simply added to the notification event body (as set of key/values) or finally as additional query parameters.\n        items:\n            $ref: '#/components/schemas/RemoteAttribute'  \n        example:\n            - type: Header\n              key: X-Vehicle_Id\n              value: $vin\n            - type: Query\n              key: X-RemoteType\n              value: $remoteType      \n              \n    AttributeSet:          \n          type: array\n          description: |\n            Additional attributes-set as key/value pairs wich will be added to the request when sending the event. It can be used as http header enhancement (such as headers can be used as an authentication parameter when posting the event) or simply added to the notification event body (as set of key/values) or finally as additional query parameters.\n          items:\n            $ref: '#/components/schemas/Attribute'\n            \n    Webhook:\n      title: Webhook\n      description: Defines the webhook for htp notification .\n      type: object\n      properties:\n        target:\n          $ref: '#/components/schemas/Url'\n        name:\n          type: string\n          description: Webhook name.\n        attributes:\n          $ref: '#/components/schemas/AttributeSet'\n      required:\n        - target\n        - name\n      example:\n        target: https://my.post.callback\n        name: My_Webhook\n        attributes:\n                - type: Header\n                  key: X-Vehicle_Id\n                  value: $vin\n                \n    CallbackSubscribe:\n      description: Callback subscription parameters.\n      type: object\n      properties:\n        retryPolicy:\n          type: object\n          description: The retry policy to apply when notification failed.\n          required: [policy]\n          properties:\n            policy:\n              type: string\n              description: |\n                          Defines the retry rules following a notification failure (ie the return code is not HTTP 2XX for  WebHook mode). ```None``` means with a single try, ```Bounded``` with a limited number of tries and ```Always```  with an infinite number of tries. \n              enum: [None, Bounded, Always]\n            retryNumber:\n                description: Maximum number of attempts (to be used with a retryPolicy set to ```Bounded```).\n                type: integer\n                default: 3\n                minimum: 1\n            retryDelay:\n                description: Time to wait (expressed in seconds) before retrying to push a notification (ignored if retryPolicy is set to ```None```).\n                type: integer\n                default: 10\n                minimum: 1 \n        batchNotify:\n                description: |\n\n                  Notification batch of events defined by a time window and batch size. If this field is not set, the callback will post only one event by call.\n\n                    * **At least, the ```size``` parameter should be provided.**\n                    * **If the time window is not set then the default value will be applied.**\n                type: object\n                properties:\n                  size:\n                    type: number\n                    format: int\n                    description: Batch size (positive value and not zero).\n                  timeWindow:\n                    type: number\n                    format: int\n                    default: 60\n                    minimum: 5\n                    description: Notification batch window size (expressed in seconds).\n                required: [size]\n        callback:\n          type: object\n          properties: \n            webhook:\n              $ref: '#/components/schemas/Webhook'\n          required: [webhook]\n      required: [callback]\n      \n    MonitorCallbackSubscribe:\n      allOf:\n        - $ref: '#/components/schemas/CallbackSubscribe'\n        - description: Monitor Callback subscription parameters.\n          type: object\n          properties:\n            refreshEvent:\n                    description:  Define the period (in sec.) between two refresh events. The refresh-events are sent when the condition of the monitor is satisfied (Trigger -\u003e toggled true). A kind of periodic reminder.\n                    type: number\n                    format: int\n                    minimum: 60\n\n    MonitorStatusSetter:\n      title: MonitorStatusSetter\n      description: MonitorStatusSetter\n      required: [status]\n      properties:\n          status:\n            type: string\n            enum: [Running, Paused]\n    \n    MonitorParameter:\n      title: MonitorParameter\n      description: MonitorParameter\n      properties:\n            label:\n              type: string\n              description: Monitor label (usually its name). \n            subscribeParam:\n              $ref: '#/components/schemas/MonitorCallbackSubscribe'\n            extendedEventParam:\n              type: array\n              items:\n                 enum: [vehicle.doorsState, vehicle.status, vehicle.maintenance,vehicle.position, vehicle.telemetry, vehicle.alerts, vehicle.collisions]\n              description: | \n                            Allow to set extra vehicle data (defined in data model) to add to the monitor event\n                            when publishing. The possible values are :\n                            \n                            \n                            |value|description|Related model |\n                            |----------|:-------------|------:|\n                            |vehicle.doorsState|Latest known door state (timestamped) before the eventDate|DoorState|\n                            |vehicle.status|Latest known vehicle status (timestamped) before the eventDate|Status|\n                            |vehicle.maintenance|Latest known maintenance(timestamped) before the eventDate|Maintenance|\n                            |vehicle.position|Last vehicle position (timestamped) before the eventDate|Position|\n                            |vehicle.telemetry${.TelemetryEnum} |Latest known telemetry (timestamped) before the eventDate filtered with type|Telemetry\n                            |vehicle.alerts|List of active alerts at the eventDate|Alert|\n                            |vehicle.collisions|Latest known collisions before the eventDate|Collision|\n\n                            \n                            * For telemetry extension:  \n                              * The suffix ```${.TelemetryEnum}``` can be selected to refine with telemetry type (from the TelemetryEnum list). This value (with suffix) can be selected **_several times_** to included suitable telemetry messages with the extention.\n                              * Using ```vehicle.telemetry``` without suffix means to include all available telemetries. \n            triggerParam:\n              description: Monitor trigger-param that allows to compound triggers by applying a boolean expression to evaluate them.\n              properties:\n                          triggers:\n                            description: |\n                              Compound monitor triggers (will be evaluated using boolean expresion :```booExp```). At least, ```one``` trigger should be provided and at  most, ```five``` items are accepted.\n                            type: array\n                            minItems: 1\n                            maxItems: 5\n                            items:\n                                $ref: '#/components/schemas/MonitorTrigger'      \n                          boolExp:\n                              type: string\n                              description: |\n                                A boolean expression that allow defining a logical relationship between triggers. Used Operands with this expression should be the names of the defined triggers. \n                                 \n                                  _Note:_ Always ```true``` or Always```false``` expression are prohibited and will result with an http 400 error response.\n                                  \n                                  \n                                Grammar:\n                                ```\n                                exp ::= exp '\u0026' exp\n                                       | exp '|' exp\n                                       | (exp)\n                                       | !exp\n                                ```\n                                \n                                * **example**: having two-zone trigger (two towns) named z1 an z2, one time-trigger (8h00 to 20h00) named t1 and finally three data triggerd named as follow: f(fuel), a(autonomy) , o(odometer).\n                                  \n                                  we can have a boolean expression such as: : ``` ((z1 \u0026 t1) | (z2 \u0026 !t1) | (f \u0026 z1) | (a \u0026 (z1|t))  | (o \u0026 (z1 | z2))) ```\n                              example :\n                                ((z1 \u0026 t1) | (z2 \u0026 !t1) | (f \u0026 z1) | (a \u0026 (z1|t))  | (o \u0026 (z1 | z2)))\n              required: [triggers,boolExp]\n      required: [subscribeParam,triggerParam,label]\n    \n    MonitorRef: \n      allOf:\n        - $ref: '#/components/schemas/CreatedAtField'\n        - type: object\n          description: Monitor creation reference returned when posting a new monitor.\n          required: [monitorId, status, createdAt, updatedAt]\n          properties:\n                updatedAt:\n                  type: string\n                  format: date-time\n                _links:\n                    type: object\n                    properties:\n                      fleet:\n                        $ref: '#/components/schemas/Link'\n                      monitor:\n                        $ref: '#/components/schemas/Link'\n                monitorId:\n                  $ref: '#/components/schemas/MonitorId'\n                status:\n                  $ref: '#/components/schemas/MonitorStatus'\n    \n    MonitorTrigger:\n      title: MonitorTrigger  \n      description: \u003e\n        Monitor trigger.```Only one```of *Zone, Time or Data* is supported at a time. Otherwise it would cause a bad request response.  \n      properties:\n        name: \n          description: 'The trigger name must be uniq and respect the following pattern'\n          pattern: \"\\\"[a-zA-Z]+[._]?[0-9]*\\\"\"\n          type: string\n        zone: \n             $ref: '#/components/schemas/ZoneTrigger'\n        time: \n             $ref: '#/components/schemas/TimeTrigger'\n        data: \n             $ref: '#/components/schemas/DataTrigger'     \n      required: [name]  \n                 \n    ZoneTrigger:\n      title: ZoneTrigger\n      description: Zone Alert parameter object\n      properties:\n            transition:\n              description: \u003e-\n                Zone monitoring type ('In' for monitoring entering zone and 'Out' for monitoring leaving zone),\n              type: string\n              enum:\n                - In\n                - Out\n            place:\n                    description: \u003e-\n                      Circle zone is compound of a center point and a radius.\n                    required:\n                      - center\n                      - radius\n                    properties:\n                      radius:\n                        description: Circle radius (expressed in km)\n                        type: number\n                        format: int\n                      center:\n                        type: object\n                        properties:\n                          longitude:\n                            type: number\n                            format: double\n                          latitude:\n                            type: number\n                            format: double\n                        required: [longitude, latitude]\n      required: [place, transition]\n      example: \n                        transition: Out\n                        place:\n                          radius: 20\n                          center:\n                            longitude: 2.333333\n                            latitude:  48.866667\n    \n    TimeTrigger:\n      title: TimeTrigger\n      description: Temporal monitor for triggering vehicle moving event within a time interval.\n      required: [times]\n      properties:\n            times:\n              type: array\n              items:\n                $ref: '#/components/schemas/BoundedProgram'\n            timeZone: \n              type: string\n              pattern: \\w?/\\w?\n              default: Europe/Paris\n              description: The standard time [zone code](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the region where to apply this time trigger monitor. \n                  This allows to adapt this trigger to the time change according to local (region/country) criteria/rules.\n              example: Europe/Paris\n    \n            \n    DataTrigger:\n      title: DataTrigger\n      description: A monitor for triggering the vehicle data change event.\n      properties:\n        data:\n          description: | \n            The left operand of the trigger function. The following Table details for each operand data its type, the supported operator and the possibly retruned value:\n            \n            |**Data**|**Type**|**Op**|**Value**|\n            |---|---| ---:| ---:|\n            | vehicle.alert | List of value | onChange (at least one)/includedIn/equalsTo | Value (ObjetAlert) |\n            | vehicle.odometer | Integer | equalsTo/greaterThan/lowerThan/ | Value |\n            | vehicle.engines.running (boolean) | Boolean | onChange/equalsTo | Value (true/false) |\n            | vehicle.engines.thermic.oil.temp | Integer | equalsTo/greaterThan/ lowerThan/ | Value |\n            | vehicle.energy.electric.level | Number | equalsTo/greaterThan/ lowerThan/ | Value |\n            | vehicle.energy.electric.autonomy | Number | equalsTo/greaterThan/ lowerThan/ | Value |\n            | vehicle.energy.fuel.level | Number | equalsTo/greaterThan/ lowerThan/ | Value |\n            | vehicle.energy.fuel.autonomy | Number | equalsTo/greaterThan/ lowerThan/ | Value |\n            | vehicle.autonomy (global) | Number | equalsTo/greaterThan/ lowerThan/ | Value |\n            | vehicle.energy.charging.status | Enum(ChargingStatusEnum) | onChange/equalsTo | Value |\n            | vehicle.energy.charging.plugged | Boolean | onChange/equalsTo | Value |\n            | vehicle.doorsState.lockedState | N/A | onChange | Value |\n            | vehicle.doorsState.opening | N/A | onChange | Value |\n            | vehicle.kinetic.moving| Boolean | onChange/equalsTo | Value (true/false) |\n            | vehicle.kinetic.speed | Number | equalsTo/greaterThan/ lowerThan/ | Value |\n            | vehicle.trip (DEPRECATED)| Literal | onChange| Value(IDTRIP) |\n            | vehicle.trip.start| Literal | onChange| Value(IDTRIP) |\n            | vehicle.trip.stop| Literal | onChange| Value(IDTRIP) |\n            | vehicle.maintenance.daysBeforeMaintenance, | Number | equalsTo/ greaterThan/ lowerThan/ | Value |\n            | vehicle.maintenance.mileageBeforeMaintenance| Number | equalsTo/ greaterThan/ lowerThan/ | Value |\n            | vehicle.safety.beltWarning | Enum(beltWarning) | onChange/equalsTo | Value |\n            | environment.air.temp | Number | equalsTo/greaterThan/lowerThan/ | Value |\n            | privacy.state | Enum(Privacy) | equalsTo / onChange/includedIn | Value |\n            | vehicle.drivingBehavior.mode | Enum(drivingBehavior.mode) | equalsTo / onChange/includedIn | Value |\n            | vehicle.collision.side | Enum(collision.side) | equalsTo / includedIn | Value |\n            | vehicle.collision.severity | Enum(collision.severity) | equalsTo / includedIn | Value |\n            | vehicle.safety.autoECallTriggering | Enum(safety.autoECallTriggering) | equalsTo / onChange/includedIn | Value |\n            | vehicle.preconditioning.airConditioning | N/A| onChange | Value |\n\n                        \n            The right operand  (value) argument depends on the type of operation (OP) as following:\n              \n              * onChange: no value because we are monitoring the change between two states (before and after).\n              * includedIn: value must be an array of size\u003e = 1\n              * equalsTo, greaterThan and lowerThan: the value must be an array of size = 1.\n          type: string\n          enum:\n            - vehicle.alert\n            - vehicle.odometer\n            - vehicle.engines.running\n            - vehicle.engines.thermic.oil.temp\n            - vehicle.energy.electric.level\n            - vehicle.energy.electric.autonomy\n            - vehicle.energy.fuel.level\n            - vehicle.energy.fuel.autonomy\n            - vehicle.autonomy\n            - vehicle.energy.charging.status\n            - vehicle.energy.charging.plugged\n            - vehicle.doorsState.lockedState\n            - vehicle.doorsState.opening\n            - vehicle.kinetic.moving\n            - vehicle.kinetic.speed\n            - vehicle.trip\n            - vehicle.trip.start\n            - vehicle.trip.stop\n            - vehicle.maintenance.daysBeforeMaintenance\n            - vehicle.maintenance.mileageBeforeMaintenance\n            - vehicle.safety.beltWarning\n            - environment.air.temp\n            - privacy.state\n            - vehicle.drivingBehavior.mode\n            - vehicle.collision.side\n            - vehicle.collision.severity\n            - vehicle.safety.autoECallTriggering\n            - vehicle.preconditioning.airConditioning\n        op:\n            description: The operator of the trigger function.                          \n            type: string\n            enum: [equalsTo, greaterThan, lowerThan, includedIn, onChange]\n        value:\n            description: |\n              The right operand of the trigger function. It can be a uniq ```value``` or a list of value ```values```. The choice of one or the other depends on ```OP```  which in the case of ```includedIn``` must be a list.\n                * _Disclaimer_: If the op field is not set to ```includeIn``` then only the first item will be used.\n            type: array\n            items:\n              type: string\n      required: [data,op]\n      example:\n        data: vehicle.energy.electric.level\n        op: greaterThan\n        value: [\"75\"]\n\n\n    ##### REMOTE WORK\n    RemoteCallbackSubscribe:\n        allOf:\n          -  $ref: '#/components/schemas/CallbackSubscribe'\n          - description: Remote access callback subscription parameters.\n            type: object\n            properties:\n              label:\n                type: string\n              retryPolicy:\n                type: object\n                description: The retry policy to apply when notification failed.\n                required: [policy]\n                properties:\n                  policy:\n                    type: string\n                    description: |\n                                Defines the retry rules following a notification failure (ie the return code is not HTTP 2XX for  WebHook mode). ```None``` means with a single try, ```Bounded``` with a limited number of tries. \n                    enum: [None, Bounded]\n\n              callback:\n                type: object\n                properties: \n                  webhook:\n                    allOf:\n                      - $ref: '#/components/schemas/Webhook'\n                      - properties:\n                          attributes:\n                            $ref: '#/components/schemas/RemoteAttributeSet'\n              remoteTypes:\n                 $ref: '#/components/schemas/RemoteTypes'\n            required: [remoteTypes]\n    \n    RemoteType:\n          type: string\n          enum: \n            - ThermalPreconditioning\n            - ElectricBatteryChargingRequest\n            - Horn\n            - Doors\n            - Lights\n            - Immobilization\n            - Stolen\n            - WakeUp\n            - Navigation\n    \n\n    RemoteTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/RemoteType'\n        \n\n    RemoteCharging:\n                  type: object\n                  description: Remote electric battery charging action. At least one of the following parameters must be provided.\n                  properties:\n                    nextDelayedTime:\n                      description:  Duration (as defined in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)) until the next battery charging.\n                      type: string\n                    immediate:\n                      type: boolean\n                      default: true\n                      description :  Determines if the charging will start immediately(```true```) or not. Set to \"true\" by default.\n                      \n    RemoteSetStolen:\n                  type: object\n                  description: Remote to set the vehicle in stolen state.\n                  properties:\n                    stolen:\n                      type: boolean\n                      description :  Set, if ```true```, the vehicle as stolen or not (otherwise). \n                  required: [stolen]\n    \n    RemoteLights:\n                  type: object\n                  description: Remote to swith on / off lights.\n                  properties:\n                    on:\n                      type: boolean\n                      description :  Swith, if ```true```, the vehicle lights ON  or OFF (otherwise).   \n                    #duration:\n                      #description : |\n                        #The duration of the lighting if switched on (expressed using  [ISO-8601 Duration spec](https://en.wikipedia.org/wiki/ISO_8601#Durations))\n                          #* minimum: ```PT1S```  _1 sec_.\n                          #* maximum: ```PT2M0S```   _120 sec_.\n                      #type: string\n                      #default: PT10S\n                      #example: PT20S\n                  required: [on]\n    \n    RemoteWakeUp:\n                  type: object\n                  description: Remote to wake up a vehicle (so it can update its data).\n                  properties:\n                    action:\n                      type: string\n                      default: WakeUp\n                      example: WakeUp\n                      items:\n                        enum: [WakeUp]\n\n    RemoteNavigation:\n                  type: object\n                  description: A remote to share GPS positions with the vehicle so it can navigate through those positions by driving from start (1st) to end (last) position. It can include only 9 points + the destination.\n                  properties:\n                    driverApproval:\n                        description: Whether sharing position with vehicle requires driver approval or not.\n                        default: false\n                        type: boolean\n                        deprecated: true\n                    positions:\n                        type: array\n                        minItems: 1\n                        maxItems: 10\n                        items:\n                            $ref: '#/components/schemas/Point'   \n                  required: [positions]\n\n                      \n    RemotePreconditioning:\n      type: object\n      description: Remote preconditioning the vehicle.\n      properties:\n        airConditioning:\n          description: At least one of the parameters must be provided.\n          type : object\n          properties:\n            immediate:\n              type: boolean\n              default: false\n              description :  Determines whether air conditioning will start immediately or not independently if scheduled ```programs``` are set or not. Set to \"false\" by default..\n            programs:\n              description : List of air conditioning programs to schedule on vehicle.\n              type: array\n              items:\n                allOf:\n                  - $ref: '#/components/schemas/Program'\n\n                  - description: | \n                        Air conditioning program to schedule on vehicle. ```Be aware about the action type (see below)```.\n                        \n                          * _Note_:The requirement to have fields provided or not depends on the value of the fields \"actionsType\".indeed, fields are provided when:\n                          \n                              |\u003cb\u003eactionsType\u003c/b\u003e|\u003cb\u003e Mandatories\u003c/b\u003e |\n                              | :------------------: | :-------------------: |\n                              |- Set |\u003cp\u003eslot, enabled, occurence, start\u003c/p\u003e | \n                              |- Delete |slot |\n                           \n                          ## *The field  ```actionsType```is not mandatory and will be set to ```'Set'``` value if not provided.*\n                  - properties: \n                      slot:\n                        type: integer\n                        description: This program number. Can only be used ONE time in the same preconditioning list.\n                        minimum: 1\n                        maximum: 4\n                      enabled:\n                          type: boolean\n                          description: \u003e \n                                    Determines whether this program is enabled or not.\n                  \n\n                      actionsType:\n                        description: | \n                            Action type to apply for this program:\n                            \n                            * Delete: Delete this air conditioning program entry. Need only the slot number of the program to remove.  \n                            * Set: Create a new programe o update it if existing. Need to provide all field correctly set.\n                        type: string\n                        enum: [Delete, Set]\n                        default: Set\n                  - required: [slot] \n          \n    RemoteDoorsState:\n      type: object\n      description: |\n        Remote vehicle door (lock/unlock) state.\n        _Disclaimer_ : \"Forced\" parameter is only applicable to lock the doors and is now deprecated because not applicable to all vehicles. It will be ignored to unlock the doors if set.\n        Some additionnal details will be added in the callback when this parameter is considered.\n\n      properties:\n        state:\n              type: string\n              enum: [Unlocked, Locked]\n        forced:\n              deprecated: true\n              type: boolean\n              \n      required: [state]\n          \n    RemoteHorn:\n      type: object\n      description: Remote vehicle horn activation.\n      properties:\n      #      number:\n      #        type: integer\n      #        description : Number of vehicle horn activations.\n      #        default: 1\n      #        minimum: 1\n      #        maximum: 5\n            state:\n              type: string\n              description : Activate or unactivate this remote horn.\n              enum: [Activated,Unactivated]\n      required: [state]\n      \n    RemoteSetImmobilization:\n      type: object\n      description: Requesting the vehicle for immobilization.\n      properties:\n            activate:\n                type: boolean\n                description :  Set, if ```true```, the vehicle as immobilized or not (otherwise). \n      required: [activate]\n    \n    Remote:\n      type: object\n      description: Remote vehicle activation. ```Only one action``` (horn, precond, door...) is supported at a time.\n      properties:\n        label:\n          type: string\n        preconditioning:\n          $ref: '#/components/schemas/RemotePreconditioning'\n        immobilization:\n          $ref: '#/components/schemas/RemoteSetImmobilization'\n        door:\n          $ref: '#/components/schemas/RemoteDoorsState'\n        horn:\n          $ref: '#/components/schemas/RemoteHorn'\n        charging:\n          $ref: '#/components/schemas/RemoteCharging'\n        stolen: \n          $ref: '#/components/schemas/RemoteSetStolen'\n        lights: \n          $ref: '#/components/schemas/RemoteLights'\n        wakeUp: \n          $ref: '#/components/schemas/RemoteWakeUp'\n        navigation: \n          $ref: '#/components/schemas/RemoteNavigation'\n        \n    CallbackRef: \n      type: object\n      description: Remote callback reference returned when posting/getting a remote callback.\n      properties:\n            _links:\n                type: object\n                properties:\n                  fleet:\n                    $ref: '#/components/schemas/Link'\n                  callback:\n                    $ref: '#/components/schemas/Link'\n            callbackId:\n              $ref: '#/components/schemas/RemoteCallbackId'\n            status:\n              $ref: '#/components/schemas/CallbackStatus'          \n    \n    CallbackStatus:\n      type: string\n      enum: [Running, Paused, Failed]\n      \n    RemoteActionStatus:\n      type: string\n      enum: [Accepted, Failed, Success, AlreadyDone, WakingUpVehicle, CheckingVehicle, SentToVehicle, VehicleBatteryChargeTooLow,TooManyWakeUpsOverMonth]\n   \n    RemoteRef: \n      type: object\n      properties:\n           \n            remoteActionId:\n              $ref: '#/components/schemas/RemoteActionId'\n            status:\n              $ref: '#/components/schemas/RemoteActionStatus'\n            type:\n                  $ref: '#/components/schemas/RemoteType'\n    \n    RemotePostResponse: \n      type: object\n      description: Remote action reference returned when posting a remote action.\n      properties:\n            _links:\n                type: object\n                properties:\n                  fleet:\n                    $ref: '#/components/schemas/Link'\n                  callback:\n                    $ref: '#/components/schemas/Link'\n                  remote:\n                    $ref: '#/components/schemas/Link'\n            remoteActionId:\n              $ref: '#/components/schemas/RemoteActionId'\n            type:\n               $ref: '#/components/schemas/RemoteType'           \n    \n    RemoteEventFeedbackDetail:\n      description: | \n        Additionnal detail in case of success on some specific behavior :\n        \n        |Feature|Description|Behavior|\n        |----------|:-------------|------:|\n        |Lock Doors|Send a lock doors by force|NoCIDBlacklisted if lock is OK but IML not blacklisted, CIDBlacklisted is when the doors are locked and the IML is well blacklisted|\n\n        \n      type: string\n      enum:\n            - NoCIDBlacklisted\n            - CIDBlacklisted\n    \n    \n    RemoteAction: \n      allOf:\n        - $ref: '#/components/schemas/RemoteRef'\n        - description: Remote action with its current state.\n          properties:\n                _links:\n                  type: object\n                  properties:\n                    fleet:\n                      $ref: '#/components/schemas/Link'\n                    callback:\n                      $ref: '#/components/schemas/Link'\n                    self:\n                      $ref: '#/components/schemas/Link'\n                remoteActionId:\n                  $ref: '#/components/schemas/RemoteActionId'\n                remote:\n                  $ref: '#/components/schemas/Remote'\n                status:\n                  $ref: '#/components/schemas/RemoteActionStatus'\n                failureCause:   \n                  $ref: '#/components/schemas/RemoteFailedEventStatus'\n                feedbackDetail:\n                  $ref: '#/components/schemas/RemoteEventFeedbackDetail'\n    \n    RemoteActions:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - properties:\n            _embedded:\n              type: object\n              properties:\n                remoteActions:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/RemoteAction'\n    \n    RemoteCallbackId:\n      type: string\n      description: Uniq remote callback ID returned when the callback was subscribed (created) succefuly.\n    \n    RemoteActionId:\n      type: string\n      description: The uniq remote action  ID returned when the remote action was posted and accepted.\n    \n    RemoteCallback:\n      description: Remote callback state.\n      type: object\n      properties:\n        _links:\n          type: object\n          description: | \n            *Note*: ```remotes``` is a templated link.\n          properties:\n            self:\n              $ref: '#/components/schemas/Link'\n            fleet:\n              $ref: '#/components/schemas/Link'\n            remotes:\n              $ref: '#/components/schemas/Link'\n        id:\n          $ref: '#/components/schemas/RemoteCallbackId'\n        subscribe:\n          $ref: '#/components/schemas/RemoteCallbackSubscribe'\n        status:\n          $ref: '#/components/schemas/CallbackStatus'\n      required: [status,id,subscribe]\n    \n    RemoteCallbacks:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - properties:\n            _embedded:\n              type: object\n              properties:\n                callbacks:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/RemoteCallback'\n    \n    RemoteCallbacksStatusSetter:\n      title: RemoteCallbacksStatusSetter\n      description: Remote Callbacks Status setter used to change the state from running to paused and vice versa. \n      required: [status]\n      properties:\n          status:\n            type: string\n            enum: [Running, Paused]\n            \n            \n    RemoteFailedEventStatus:\n      description: | \n        The failure cause for event with failed status. This field is filled only is failure state. \n         \n      type: string    \n      enum: \n            - GeneralError\n            - VehicleError\n            - WrongCommand\n            - VehicleConnectionTimeout\n            - MissingRights\n            - NotPossibleDueToVehicleBatteryLevel\n            - NotPossibleDueToVehiclePrivacyLevel\n            - TooManyWakeUpsOverMonth\n            - TooManyRequestInShortTime\n            - SameActionInProgress\n            - NotPossibleDueToVehicleStolenState\n            - VehicleInUse\n            - TooManyRequestSent \n            - DoorsOpen\n            - VehicleErrorOrCidInside\n            - CidInside\n            - ExternalChargingSystemError\n            - VehicleChargingSystemError\n            - VehicleIsNotLocked\n            - CanceledByDriver\n    ######\n    \n    Url:\n      type: string\n      description: \u003e-\n        URL format follows [RFC 3986](https://tools.ietf.org/html/rfc3986) and\n        usually looks like this ` scheme://host[:port][/Path] `\n    \n    Link:\n      type: object\n      description: \u003e-\n        A Link Object as defined by [JSONHAL#Link Object](https://tools.ietf.org/html/draft-kelly-json-hal-08#section-5).\n      required:\n        - href\n      properties:\n        href:\n          $ref: '#/components/schemas/Url'\n        templated:\n          type: boolean\n          description: \u003e-\n            SHOULD be true when the Link Object's \"href\" property is an [URI Template](https://tools.ietf.org/html/rfc6570)\n        type:\n          type: string\n          description: \u003e-\n            a hint to indicate the media type expected when dereferencing the\n            target resource.\n        deprecation:\n          allOf:\n            - $ref: '#/components/schemas/Url'\n            - description: \u003e-\n                indicates that the link is to be deprecated (i.e. removed) at a\n                future date.  Its value is a URL that SHOULD provide further\n                information about the deprecation.\n        name:\n          type: string\n        title:\n          type: string\n          description: \u003e-\n            Its value is a string and is intended for labelling the link with a\n            human-readable identifier (as defined by\n            [RFC5988](https://tools.ietf.org/html/rfc5988)).\n        profile:\n          type: string\n          description: \u003e-\n            Its value is a string and is intended for indicating the language of\n            the target resource (as defined by [RFC5988]).\n        hreflang:\n          type: string\n          description: \u003e-\n            Its value is a string which is a URI that hints about the profile\n            (as defined by\n            [I-D.wilde-profile-link](https://tools.ietf.org/html/draft-kelly-json-hal-08#ref-I-D.wilde-profile-link))\n            of the target resource.\n    \n    Tab_Links:\n      description: \u003e\n        [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language#Convention)\n        (Hypertext Application Language) link collection\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/Link'\n        first:\n          $ref: '#/components/schemas/Link'\n        next:\n          $ref: '#/components/schemas/Link'\n        prev:\n          $ref: '#/components/schemas/Link'\n        last:\n          $ref: '#/components/schemas/Link'\n          \n    ChargingStatusEnum:\n      description: status of charging system.\n      type: string\n      enum:  [Disconnected, InProgress, Failure, Stopped, Finished]\n      \n    AlertMsgEnum:\n      type: string   \n      description: MPH alert list \n      enum:\n            - AbsBrakingSystemFault    \n            - ActiveSpoilerFault    \n            - AdBlueFault     \n            - AdBlueFaultStartingImpossible   \n            - AdBlueFaultStartingImpossibleSoon  \n            - AddWasherFluid     \n            - AirbagOrSeatBeltPretensionerOrActiveHoodFailure \n            - AssistanceButtonFault    \n            - AutomaticBrakingDeactivated   \n            - AutomaticHeadlightAdjustmentFault   \n            - BatteryChargeOrElectricalCircuitSystemFailure \n            - BrakingSystemFailure    \n            - ChargingFailure     \n            - CheckTheCenterBrakeLamp    \n            - CollisionDetectionSystemFault   \n            - CollisionMitigationSystemFault   \n            - CoolantLevellow     \n            - DrivingAssistanceSensorBlind   \n            - ElectricTractionSystemFailureLimitSpeed\n            - ElectricTractionSystemFailureStopVehicle\n            - ElectricTractionSystemFault\n            - ElectronicImmobiliserFault    \n            - EmissionSystemOrAdBlueQualityFailueStartingImpossible\n            - EmissionSystemOrAdBlueQualityFailueStartingImpossibleSoon\n            - EmissionSystemOrAdBlueQualityFailure  \n            - EngineFailure     \n            - EngineFault\n            - EngineMisfiringFuel\n            - EngineOilPressureFailure    \n            - EngineTemperatureFailure    \n            - EspAsrSystemFault     \n            - FrontLeftFlashingIndicatorFault   \n            - FrontLeftFogLampsFault     \n            - FrontLeftParkingLampsFault     \n            - FrontRightFlashingIndicatorFault   \n            - FrontRightFogLampsFault     \n            - FrontRightParkingLampsFault     \n            - FuelLevelLow     \n            - GearboxFault     \n            - HeadlightsFault     \n            - InstalledSpareWheelFault   \n            - InterVehicleTimeMeasurementFault  \n            - LaneChangeAssistanceFault     \n            - LaneDepartureWarningSystemFault   \n            - LeftBrakeLampFault  \n            - LeftFrontDoorOpen     \n            - LeftFrontDoorOpenLowSpeed \n            - LeftFrontTirePressurSensorFault   \n            - LeftFrontTirePuncture    \n            - LeftFrontTireUnderInflated    \n            - LeftRearDoorOpen     \n            - LeftRearDoorOpenLowSpeed\n            - LeftRearTirePressurSensorFault   \n            - LeftRearTirePuncture    \n            - LeftRearTireUnderInflated    \n            - LeftReverseLampFault     \n            - OilLevelLow      \n            - ParkAssistSystemFault    \n            - ParkingBrakeOrHillStartSystemFailure  \n            - ParticleFilterAdditiveLevelTooLow   \n            - ParticleFilterFull     \n            - ParticleFilterRegenerating    \n            - PowerSteeringFailure    \n            - PowerSteeringFault    \n            - PreheatingPreventilationDeactivatedBatteryLow \n            - PreheatingPreventilationDeactivatedClockUnset \n            - PreheatingPreventilationDeactivatedFuelLevelLow \n            - RearLeftFlashingIndicatorFault   \n            - RearLeftFogLampsFault     \n            - RearLeftParkingLampsFault     \n            - RearRightFlashingIndicatorFault   \n            - RearRightFogLampsFault     \n            - RearRightParkingLampsFault     \n            - RearWindowOpen     \n            - RearWindowOpenLowSpeed\n            - ReplaceBrakePads     \n            - ReplaceTheRemoteControlBattery   \n            - RetractableRoofMechanismFault   \n            - RightBrakeLampFault     \n            - RightFrontDoorOpenLowSpeed    \n            - RightFrontDoorOpen     \n            - RightFrontTirePressurSensorFault  \n            - RightFrontTirePuncture    \n            - RightFrontTireUnderInflated    \n            - RightRearDoorOpen     \n            - RightRearDoorOpenLowSpeed \n            - RightRearTirePressurSensorFault   \n            - RightRearTirePuncture    \n            - RightRearTireUnderInflated    \n            - RightReverseLampFault     \n            - RiskOfIce     \n            - RoofOperationNotPossibleSpeedUnknown\n            - RoofOperationNotPossibleTooHighTemp\n            - ShiftToPark     \n            - SteeringLockFault     \n            - SuspensionFault     \n            - SuspensionFaultLimitSpeed\n            - SuspensionFaultRepaireVehicle\n            - TireUnderInflationDetectionSystemFault  \n            - TireUnderInflationDetectionSystemFault  \n            - TooManyRoofOperation\n            - TrailerConnectionFault    \n            - TrunkOrHoodOpen     \n            - TrunkOrHoodOpenLowSpeed\n            - WaterInTheDieselFuelFilter  \n        \n    BoundedProgram:\n      allOf:\n        -  $ref: '#/components/schemas/Program'\n        - required: [start, duration]\n          description: \u003e\n           extended program witch specify action duration. The relative start time (to 0h00). \n           \n            # _Note:_ \n              If the selected```recurrence```parameter is set to```None```value then the occurrence paramaeter will be ignored. On the other hand, if this value is equal to```Daily```and the ```occurrence```is not set then it will be considered as all days of the week.\n          properties:\n            duration:\n              description: Duration of the monitor action expressed using [ISO-8601 Duration spec](https://en.wikipedia.org/wiki/ISO_8601#Durations)\n              type: string\n              example: PT04H30M\n            occurence:\n                  type: object\n                  description: \u003e\n                     The occurrence on a bounded program will spread on months, weeks, days depending on recurrence value and ```week``` field.\n                  properties:\n                      day:\n                          type: array\n                          minItems: 1\n                          maxItems: 7\n                          items:\n                            type: string\n                            enum: [Mon, Tue, Wed, Thu, Fri, Sat, Sun]\n                      week:  \n                          description:  occurences over the weeks of the year from w1 to w52 specified in an array unitary or grouped by ranges (w1, w2, w34-w46, w52)\n                          type: array\n                          minItems: 1\n                          maxItems: 52\n                          items:\n                          #week of year : w1, w2 ... w34-w46 ..\n                            type: string\n                            format: '[wW][1-5][0-9]?(-[wW][1-5][0-9]?)?'\n                          example: [w1-w25,w30,w36, w40-w50]\n          example:  \n            recurrence: Daily\n            start: PT8H30M\n            duration: PT7H30M\n            occurence: [Mon,Tue,Thu, Fri]\n                \n\n              \n    indexRange:\n      type: string\n      pattern: \\d+-\\d*\n      default: 0-\n      description: \u003e\n        Range index  used to express the first (offset) and the last results\n        index  to retrieve. With the respect to the regex pattern '\\d+(-\\d*)?',\n        the start of  range is mandatory (use 0 for default).\n\n\n        *Example:*\n\n\n        *  '0-9'  : start=0, end=9    ==\u003e offset=0 and number of items=10\n\n\n        * '5-'    : start =5, no end  ==\u003e start at 5th to the end results.\n    \n    xError:\n      type: object\n      description: Detailed error\n      properties:\n        code:\n          type: integer\n        uuid:\n          type: string\n        message:\n          type: string\n        timestamp:\n          type: string\n      example:\n        code: 40499\n        uuid: 494f61d1-472a-4696-ac3c-2961496c3aaf\n        message: No data availble for such context.\n        timestamp: '2020-01-01T00:00:00.000Z'\n    \n    UpdatedAtField:\n      type: object\n      properties:\n       updatedAt:\n          description: Date when the resource has been updated.\n          type: string\n          format: date-time\n    CreatedAtField:\n      type: object\n      properties:\n          createdAt:\n            description: Date when the resource has been created.\n            type: string\n            format: date-time      \n    \n    EngineAir:\n                              type: object\n                              properties:\n                                temp:\n                                  description: Engine air temperature expressed in Celsius degrees.\n                                  type: number\n                                  format: float\n    EngineLiquid:\n                              type: object\n                              properties:\n                                level:\n                                  description: Engine liquid level expressed in persent.\n                                  type: number\n                                  format: int\n                                temp:\n                                  description: Engine liquid temperature expressed in Celsius degrees.\n                                  type: number\n                                  format: float\n\n    EngineBase:\n          type: object\n          properties:\n                  type:\n                          type: string\n                          default: Thermic\n                          enum:\n                            - Thermic\n                            - Electric\n                  oil:\n                    type: object \n                    deprecated: true\n                    description: deprecated, use extention thermic for such purpose.\n                    properties:\n                      temp:\n                        type: number\n                        format: float\n                  speed:\n                    type: number\n                    description: Engine's speed in RPM\n                    format: float\n                  gmpStatus:\n                    type: string\n                    enum: [NotRunning, Starting, Running, Stopping, Stopped]\n                  extension:\n                    type: object\n                    properties:\n                        thermic:\n                          type: object\n                          properties:\n                            coolant:\n                              allOf:\n                                - description: Engine coolant liquid properties.\n                                - $ref: '#/components/schemas/EngineLiquid'\n                            oil:\n                              allOf:\n                                - description: Engine oil properties.\n                                - $ref: '#/components/schemas/EngineLiquid'\n                            air:\n                              allOf:\n                               - $ref: '#/components/schemas/EngineAir'\n\n    Engine:\n        allOf:\n            - type: object\n              properties:\n                  createdAt:\n                    description: Date when the resource has been created.\n                    type: string\n                    format: date-time\n            - $ref: '#/components/schemas/EngineBase'\n            \n                 \n    Telemetry:\n        allOf:\n            - $ref: '#/components/schemas/CreatedAtField'\n            - type: object\n              properties:\n                _links:\n                  type: object\n                  properties:\n                    self:\n                      $ref: '#/components/schemas/Link'\n                    vehicle:\n                      $ref: '#/components/schemas/Link'\n                    trip:\n                      $ref: '#/components/schemas/Link'\n                privacy:\n                  $ref: '#/components/schemas/Privacy'\n                vehicle:\n                  type: object\n                  properties:\n                    engines:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/EngineBase'\n                    energy:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/EnergyBase'\n                    transmission:\n                      $ref: '#/components/schemas/Transmission'\n                    adas:\n                      $ref: '#/components/schemas/Adas'\n                    lighting:\n                      $ref: '#/components/schemas/LightingBase'\n                    lightingSystem:\n                      $ref: '#/components/schemas/LightingSystemBase'  \n                    ignition:\n                       $ref: '#/components/schemas/IgnitionBase'\n                    doorsState:\n                      $ref: '#/components/schemas/DoorsStateBase'  \n                    battery:\n                      $ref: '#/components/schemas/BatteryBase'\n                    safety:  \n                      $ref: '#/components/schemas/BaseSafety'\n                    wipingBlades:  \n                      $ref: '#/components/schemas/WipingBladesState'  \n                    odometer: \n                        type: object\n                        properties:\n                          mileage:\n                                description: Vehicle mileage expressed in KM.\n                                type: number\n                                format: float\n                    kinetic :\n                        $ref: '#/components/schemas/BasicKinetic'\n                    drivingBehavior:\n                      description: Describe the behavior of the driver\n                      $ref: '#/components/schemas/DrivingBehaviorBase'\n                environment:\n                  $ref: '#/components/schemas/EnvironmentBase'\n                _embedded:\n                  type: object\n                  properties:\n                    extension:\n                       $ref: '#/components/schemas/TelemetryExtension'\n    \n    Telemetries:\n      allOf:\n        - $ref: '#/components/schemas/CollectionResult'\n        - properties:\n            _embedded:\n              type: object\n              properties:\n                telemetries:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Telemetry'\n\n          \n    TelemetryExtensionType:\n      type: array\n      minItems: 1\n      maxItems: 4\n      items:\n        type: string\n        enum:\n          - location\n          - maintenance\n          - odometer\n          - kinetic\n          \n    StatusExtensionType:\n      type: array\n      minItems: 1\n      maxItems: 2\n      items:\n        type: string\n        enum:\n          - odometer\n          - kinetic\n          \n    Extension:\n      type: object\n      description: Additional data set.\n      properties:\n        odometer:\n          $ref: '#/components/schemas/VehicleOdometer'\n        kinetic:\n          $ref: '#/components/schemas/Kinetic'\n    \n    TelemetryExtension:\n        allOf:\n          - description: Additional data set for telemetry.  \n          - properties:\n                odometer: \n                    type: object\n                    properties:\n                      mileage:\n                            description: Vehicle mileage expressed in KM.\n                            type: number\n                            format: float\n                kinetic :\n                      $ref: '#/components/schemas/BasicKinetic'\n                location:\n                      $ref: '#/components/schemas/Position'\n                maintenance:\n                       $ref: '#/components/schemas/MaintenanceObj'                \n                     \n    \n    \n    BasicKinetic:\n            description: |\n                          Everything related to the movement of the vehicle. Speed, acceleration..\n                          \n            properties:\n                acceleration:\n                  type: number\n                  format: float\n                  description:  Vehicle acceleration (expressed in m/s²)\n                speed:\n                  type: number\n                  format: float\n                  description:  Vehicle speed (expressed in m/s)\n                moving:\n                  type: boolean \n    \n    Kinetic:\n        allOf:\n            - type: object\n              properties:\n                  createdAt:\n                    description: Date when the resource has been created.\n                    type: string\n                    format: date-time\n            - $ref: '#/components/schemas/BasicKinetic'\n         \n                  \n    DrivingBehaviorBase:\n        type: object\n        properties:\n            mode:\n                description : Driving mode by driver selection\n                type : string\n                enum:\n                    - Normal\n                    - Sport\n                    - Confort\n                    - Eco\n                    - Sand\n                    - Mud\n                    - Snow\n                    - ZEV\n                    - Hybrid\n                    - ZEVEco\n                    - HybridEco\n                    - EcoPlus\n                    - eAWD\n                    - 4AWD\n                    - ReinforcedLoad\n    \n    Transmission:\n              type: object\n              properties:\n                gearbox:\n                  type: object\n                  properties:\n                    gear:\n                      type: object\n                      properties:\n                        recommended:\n                          type: string\n                          enum:\n                            - None\n                            - Up\n                            - Down\n                            - UpDown\n                    mode:\n                      type: object\n                      properties:\n                        automatic:\n                          type: boolean\n                        sport:\n                          type: boolean\n                        snow:\n                          type: boolean\n                    ratio:\n                      description: Current gear-box ratio.\n                      type: string\n                      enum:\n                            - Ratio1\n                            - Ratio2\n                            - Ratio3\n                            - Ratio4\n                            - Ratio5\n                            - Ratio6\n                            - Ratio7\n                            - Ratio8      \n                            - Neutral\n                            - Reverse\n    \n    Adas:  \n                type: object\n                properties:\n                  parkAssist:\n                    type: object\n                    properties:\n                      front:\n                        type: array\n                        items:\n                          type: string\n                          enum:\n                            - Fault\n                            - DriverInhibition\n                            - Active\n                            - Wait\n                            - OutOfService \n                      rear:\n                        type: array\n                        items:\n                          type: string\n                          enum:\n                            - Fault\n                            - DriverInhibition\n                            - Active\n                            - Wait\n                            - OutOfService \n                  accr:\n                    description: Adaptive Cruise Control Regulation\n                    type: string\n                    enum:\n                      - Activated\n                      - Fault\n                      - Hold\n                      - HoldWithOverSpeeding\n                      - Off\n                      - OverSpeedingByPedalPess\n                      - StandBy\n                  lvv:\n                    type: boolean\n                  rvv:\n                    type: string\n                    enum:\n                      - Off\n                      - Inactive\n                      - Active\n                      - SpeedExceeded\n                      - Disabled\n                      - DisabledBySystem\n                      - MaxSpeedExceed\n                      - SpeedDeltaExceed\n                      - ReducedVisibility\n                      - Learning\n                  aebs:\n                    description: Advanced Emergency Braking System\n                    type: string\n                    enum:\n                      - Off\n                      - Fixed\n                      - OnFlashing\n                  afil:\n                    description: Lane Departure Warning System\n                    type: string\n                    enum: [FlashingFault, FlashingWarning, Off, OnFixed]\n                  artiv:\n                    description: Respect of inter vehicle time assist (ARTIV)\n                    type: string\n                    enum:\n                      - NotSelected\n                      - Selected\n                      - Unavailable\n                    default: Unavailable\n                  bsm:\n                    description: Blink SpotMonitoring\n                    type: string\n                    enum:\n                      - Active\n                      - Inactive\n                      - Disabled\n                      - Fault\n                  esp:\n                    description: Electronic Stability Programme\n                    type: boolean\n                  abs:\n                    description: Anti-lock braking system\n                    type: boolean\n                  fse:\n                    description: Electric brake service\n                    type: boolean\n                  sli:\n                    description: Speed Limit Information\n                    type: integer\n                  rlka:\n                    description: Lane Keeping Assist right\n                    type: string\n                    enum: [Authorized, CorrectionInProgress, NotAuthorized, NotSelected]\n                  lrka:\n                    description: Lane Keeping Assist left\n                    type: string\n                    enum: [Authorized, CorrectionInProgress, NotAuthorized, NotSelected]\n\n    \n    Lights:\n        description: Expresses all light, direction (```Left```, ```Right``` ) and status  (```Off```, ```On```), for a category.\n        type: array\n        items:\n          type: object\n          properties:\n            direction:\n              type: string\n              enum: [Left, Right]\n            status:\n              type: string\n              enum: [Off, On]\n          example:\n            -  \n              - direction:left\n              - position: front\n            -  \n              - direction:left\n              - position: rear \n    LightingSystemBase:\n                description: Expresses the Directional, Fog and the Position vehicle lights.\n                type: object\n                properties:\n                  turn:\n                     $ref: '#/components/schemas/Lights' \n                  fog:\n                     $ref: '#/components/schemas/Lights'\n              \n    LightingSystem:\n                    allOf:\n                      - type: object\n                        properties:\n                            createdAt:\n                              description: Date when the resource has been created.\n                              type: string\n                              format: date-time  \n                      - $ref: '#/components/schemas/LightingSystemBase'     \n                    \n    LightingBase:  \n                type: object\n                description: Depricated lighting system model. Use LightingSystem instead.\n                deprecated: true\n                properties:\n                  turn:\n                    type: array\n                    items:\n                      type: string\n                      enum: [Left, Right]\n                  light:\n                    type: array\n                    items:\n                      type: string\n                      enum: [Front, Rear]\n                  status:\n                    type: array\n                    items:\n                      type: string\n                      enum: [On, Off]\n    Environment: \n              type: object\n              properties:\n                  luminosity:\n                     $ref: '#/components/schemas/Luminosity'\n                  air:\n                     $ref: '#/components/schemas/Air'\n    EnvironmentBase: \n              type: object\n              properties:\n                  luminosity:\n                     $ref: '#/components/schemas/LuminosityBase'\n                  air:\n                     $ref: '#/components/schemas/AirBase'\n    Luminosity:\n                    allOf:\n                      - type: object\n                        properties:\n                            createdAt:\n                              description: Date when the resource has been created.\n                              type: string\n                              format: date-time\n                      - $ref: '#/components/schemas/LuminosityBase'\n    LuminosityBase:\n                    allOf:\n                      - type: object\n                        properties:\n                            createdAt:\n                              description: Date when the resource has been created.\n                              type: string\n                              format: date-time \n                      - type: object\n                        properties:\n                          day:\n                            type: boolean \n    Air:\n                    allOf:\n                      - type: object\n                        properties:\n                            createdAt:\n                              description: Date when the resource has been created.\n                              type: string\n                              format: date-time\n                      - $ref: '#/components/schemas/AirBase'\n    AirBase:\n                        type: object\n                        properties:\n                          temp:\n                            description: Outside air temperature in Celsius degrees\n                            type: number                             \n    TelemetryEnum:\n      type: array\n      minItems: 1\n      maxItems: 10\n      items:\n        type: string\n        enum:\n          - environment\n          - privacy\n          - vehicle\n          - vehicle.adas\n          - vehicle.battery\n          - vehicle.doorsState\n          - vehicle.energies\n          - vehicle.engines\n          - vehicle.ignition\n          - vehicle.lighting\n          - vehicle.safety\n          - vehicle.transmission\n          - vehicle.drivingBehavior\n          \n    DataProfile:\n        type: string\n        enum:\n          - fleet\n          - endUser\n  ############################ PARAMETERS ################################        \n  parameters:  \n    fleetId:\n      name: fid\n      in: path\n      description: Resource is related to this fleet ID only.\n      required: true\n      schema:\n        type: string\n    \n    callbackId:\n      name: cbid\n      description: The remote callback ID.\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '([0-9a-fA-F]|-|_)*'\n    \n    remoteId:\n      name: rid\n      description: The remote action ID.\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '([0-9a-fA-F]|-|_)*'    \n    \n    alertId:\n      name: aid\n      in: path\n      description: id of the alert.\n      required: true\n      schema:\n        type: string\n    \n    monitorId:\n      name: mid\n      in: path\n      description: id of the monitor.\n      required: true\n      schema:\n        type: string\n\n    \n    collisionId:\n      name: cid\n      in: path\n      description: Results will only contain the Collision related to this Collision ID.\n      required: true\n      schema:\n        type: string\n    \n    vehicleId:\n      name: vid\n      in: path\n      description: Resource is related to this Vehicle ID only.\n      required: true\n      schema:\n        type: string\n    \n    vinPrefix:\n      name: vinPrefix\n      in: query\n      description: Allows filtering on VINs that start with the same prefix.\n      schema:\n        type: string    \n     \n    tripId:\n      name: tid\n      in: path\n      required: true\n      description: The ID {tid} of Trip\n      schema:\n        type: string\n    \n    locale:\n      name: locale\n      in: query\n      description: |\n          Locale is used for rendering text according to language and country for. It should match the  REGEX \\w(-\\w)?. For more details about possible standard values, please refer to [locals list](https://en.wikipedia.org/wiki/Language_localisation).\n          \n      required: false\n      schema:\n        type: string\n    \n    timestamps:\n      name: timestamps\n      in: query\n      description: |\n          Array of  **\"timestamp\"** ranges. Results will contain results whose\n          timestamps are included in those date-time ranges (see **timestamp**\n          data  model).**\"timestamp\"** items should be expressed as in\n          '[RFC3339](https://www.ietf.org/rfc/rfc3339.txt)'. Each element of the array \n          expresses a time range (with the pattern ```\\w?/\\w?``` or ```R\\d?/w/w(/w)?```) \n          which is the period between two or more times. The range can be expressed by tw\n          o times Points (start and end *Timestamp*s), by a start\n          *Timestamp* Point and a *Duration* or as a repeating interval. All of them  should be expressed using the [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) and the interval format\n          is based on [ISO8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals)\n          - 'T1/T2' interval time from low limit T1 to hight T2\n          - 'T1/D' interval time from low limit T1 with duration = D ( T2=T1+D)\n          - 'T/' endless range, known start Timestamp but no end Timestamp. The current time  will be used as the high time limit.\n          - '/T' startless range, known end date but no start date. No lower limit will be used to retrieve results.\n          - Rn/T/D/[d]  repeat the interval of D **n** times starting at T using **d** (extension of the standard and not mandatory) as range duration. The default (duration) value of d is 24 H\n          - R/T/D/[d] unbounded number of repetitions starting at T using **d** (extension of the standard and not mandatory) as range duration. The default (duration) value of d is 24 H.\n          - T is a timestamp and D is a duration  as defined in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).\n            - 2018-01-01T09:00:00+01:00/2018-01-01T12:00:00+01:00* known low and hight limits.\n            - *2018-01-03T12:00:00+01:00/P3Y6M4DT12H30M5S*  known low limit, hight limit = start + duration.\n            - *2018-01-03T12:00:00+01:00/*  known low limit, hight limit = current time.\n            - *R5/2018-01-03T12:00:00Z/P6H/P2H* repeate duration 6H wiht interval period of 2H for 5 times starting at 2018-01-03T12:00:00Z.\n      required: false\n      schema:\n        type: array\n        minItems: 1\n        maxItems: 10\n        items:\n          type: string\n          pattern: \\w?/\\w?\n\n         # $ref: '#/components/schemas/TimeRange'\n    \n    pageSize:\n      name: pageSize\n      in: query\n      schema:\n        type: number\n        format: int\n        default: 60\n        minimum: 1\n        maximum: 60\n      required: false\n      description: \u003e-\n        The maximum number of results (for a collection results response) to\n        return per page. When not set, at most 60 results will be returned. \n        The range for this parameter is [1...60]\n        \n        \n    pageSizeHighFrequency:\n      name: pageSize\n      in: query\n      schema:\n        type: number\n        format: int\n        minimum: 1\n        maximum: 2000\n        default: 60\n      required: false\n      description: \u003e-\n        The maximum number of results (for a collection results response) to\n        return per page for high frequency data upload. When not set, at most 60 results will be returned. \n        The range for this parameter is [1...2000]\n    \n    pageToken:\n      name: pageToken\n      in: query\n      schema:\n        type: string\n      required: false\n      description: \u003e-\n        Start-Page marker, this token is used (by the backend) for continuing serving from the previous results page to the next one. (_Disclaimer_:  **It is built and used only by the server**).\n    \n    indexRange:\n      name: indexRange\n      in: query\n      schema:\n        $ref: '#/components/schemas/indexRange'\n      required: false\n      description: \u003e-\n        Results indexes will be included in this range (see **indexRange**\n        model).\n          \n          default: 0-\n\n          example: 0-, 0-5\n    \n    tolerence:\n      name: tolerance\n      description: \u003e\n          Tolerance factor is expressed in length km unit and is used to simplify path by reducing the total number of points by is using Douglas-Peucker algorithm to find a similar curve with fewer points (find more info here: [Ramer_Douglas_Peucker_algorithm](https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm#Algorithm) ).\n      in: query\n      schema:\n        type: number\n        format: float\n        \n    telemetryType:\n      name: type\n      in: query\n      description: \u003e-\n        Results will only contain Telemetry messages of this kind. You can add\n        more than one message type. By default, if no type is selected then all telemetries will be taken ```(the number of elements in this array must be between 1 and 10)```.\n      required: false\n      schema:\n        $ref: '#/components/schemas/TelemetryEnum'\n    \n    statusExtension: \n      name: extension\n      in: query\n      description: \u003e-\n        Additional data set that will be included in embedded field \n        \n         * _Disclaimer_:  ** ```odometer``` and ```kinetic``` are deprecated here and moved inside status object**\n      required: false\n      deprecated: true\n      schema:\n        $ref: '#/components/schemas/StatusExtensionType'  \n  \n    telemetryExtension:\n      name: extension\n      in: query\n      description: \u003e-\n        Additional data set that will be included in embedded field```(the number of elements in this array must be between 1 and 4)```.\n        \n         * _Disclaimer_:  ** ```odometer``` and ```kinetic``` are deprecated here and moved inside telemetry object**\n      required: false\n      schema:\n        $ref: '#/components/schemas/TelemetryExtensionType'    \n    \n\n    remoteType:\n      name: types\n      in: query\n      description: \u003e-\n        Results will contain only the Remote-Callbacks of these types. _If not specified then the whole callbacks are retrieved_.\n      required: false\n      schema:\n        $ref: '#/components/schemas/RemoteTypes'\n    \n    profile:\n      name: profile\n      in: query\n      description: \u003e-\n        Results will contain a relative view of the data depending on the selected profile. Indeed, ```endUser``` will expose only the data available to the end-user as if there were no intermediaries between him and the vehicle (case of B-2-B-2-C). If not specified, this parameter will be set to```fleet```value (deault value).\n        \n         * _Disclaimer_:  Since the```fleet```profile has a larger data scope, selecting```endUser```profile will potentially result in not found status depending on its granted rights and privacy level. \n      required: false\n      schema:\n        $ref: '#/components/schemas/DataProfile'  \n  #TelemetryExtensionType\n  responses:\n    CollisionsuccessResponse:\n      description: Collision response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Collision'\n    \n    CollisionsSuccessResponse:\n      description: A list of Collision\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Collisions'\n    \n    CollisionFailedResponse:\n      description: Collision request error\n      $ref: '#/x-fragment/general_error_fragment'\n    \n    AlertsuccessResponse:\n      description: Alert response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Alert'\n            \n    FleetSuccessResponse:\n      description: Fleet response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Fleet'\n    \n    FleetsSuccessResponse:\n      description: Fleet list response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Fleets'        \n    \n    AlertsuccessResponses:\n      description: A list of alert\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Alerts'\n    \n    AlertFailedResponse:\n      description: Alert request error\n      $ref: '#/x-fragment/general_error_fragment'\n    \n    #MonitorId  \n    MonitorsuccessResponse:\n      description: Monitor response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Monitor'\n    \n    MonitorsuccessStatusResponse:\n      description: Monitor response\n      content:\n        application/hal+json:\n          schema:\n            type: object\n            properties:\n              _links:\n                type: object\n                properties:\n                  self:\n                    $ref: '#/components/schemas/Link'\n                  fleet:\n                    $ref: '#/components/schemas/Link'  \n                  monitor:\n                    $ref: '#/components/schemas/Link'\n                 \n              status:\n                $ref: '#/components/schemas/MonitorStatus'        \n    \n    MonitorsuccessPostResponse:\n      description: Monitor created or updated successfully\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/MonitorRef'        \n    \n    MonitorsuccessResponses:\n      description: A list of Monitors\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Monitors'\n    \n    MonitorFailedResponse:\n      description: Monitor request error\n      $ref: '#/x-fragment/general_error_fragment'\n      \n      \n\n    #######  R E M O T E\n    RemoteCallbackSuccessStatusResponse:\n      description: Monitor response\n      content:\n        application/hal+json:\n          schema:\n            type: object\n            properties:\n              _links:\n                type: object\n                properties:\n                  self:\n                    $ref: '#/components/schemas/Link'\n                  fleet:\n                    $ref: '#/components/schemas/Link'  \n                  monitor:\n                    $ref: '#/components/schemas/Link'\n                 \n              status:\n                $ref: '#/components/schemas/CallbackStatus'        \n    \n    RemoteCallbackSuccessPostResponse:\n      description: Remote callback creation or update success response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/CallbackRef'\n            \n    RemoteActionsSuccessPostResponse:\n      description: Remote action creation success response (accepted).\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/RemotePostResponse'\n        \n    RemoteCallbackSuccessResponse:\n      description: A remote callback.\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/RemoteCallback'\n    \n    RemoteCallbackSuccessResponses:\n      description: A list of subsribed remote callback.\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/RemoteCallbacks'\n            \n    RemoteActionSuccessResponses:\n      description: A list of remote actions.\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/RemoteActions'\n            \n    RemoteActionSuccessResponse:\n      description: A remote action response.\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/RemoteAction'\n    \n    #RemoteActions            \n    RemoteCallbackFailedResponse:\n        description: Remote subscribe request error\n        $ref: '#/x-fragment/general_error_fragment'  \n    ######  R E M O T E\n      \n    TripsuccessResponse:\n      description: Trip response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Trip'\n    \n    TripsSuccessResponses:\n      description: A list of Trip\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Trips'\n            \n    StatusSuccessResponses:\n      description: A list of Status\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/StatusList' \n            \n    MaintenanceSuccessResponses:\n      description: A list of vehicle maintenance\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/MaintenanceList'             \n            \n    TripFailedResponse:\n      description: Trip request error\n      $ref: '#/x-fragment/general_error_fragment'\n    \n    ECoaching200ErroResponse:\n      description: ECoaching response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/ECoaching'\n    \n    ECoachingFailedResponse:\n      description: ECoaching request error\n      $ref: '#/x-fragment/general_error_fragment'\n    \n    TelemetrySuccessResponse:\n      description: Telemetry response\n      content:\n        application/hal+json:\n          schema:\n            $ref: '#/components/schemas/Telemetries'\n    \n    TelemetryFailedResponse:\n       $ref: '#/x-fragment/general_error_fragment'\n\nx-fragment:\n  general_error_fragment:\n    content:\n      application/json:\n        schema:\n          $ref: '#/components/schemas/xError'\n",
			"canonicalURL": "/github.com/GroupePSA/groupepsa.github.io@362f9744774fd676bd99c6d3d1119683d9b4702e/-/blob/assets/openapi/api-b2b-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GroupePSA/groupepsa.github.io/blob/362f9744774fd676bd99c6d3d1119683d9b4702e/assets/openapi/api-b2b-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"LightingBase\": parse schema: property \"status\": parse schema: at 1:42041: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}