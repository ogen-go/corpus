{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tip-initiative/tip-initiative-apis"
		},
		"file": {
			"name": "impressionsSubscription.yaml",
			"size": 0,
			"path": "endpoints/schemas/impressionsSubscription.yaml",
			"byteSize": 5326,
			"content": "openapi: 3.0.0\ninfo:\n  version: 6.0.0\n  title: Impression Subscription & Notification schemas\n  description: Impression Subscription & Notification schemas\n  termsOfService: http://placeholderdomain.io/terms/\n  contact:\n    name: TIP Initiative\n    email: tipinitiative@frontrowadvisory.com\n    url: http://placeholderdomain.io\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\npaths: {}\ncomponents:\n  schemas:\n    BuyerImpressionsSubscription:\n      description: >-\n        Schema supports a notification format that allows the buyer to define the parameters\n        for the impressions payload such as frequency, time span, orders, etc.\n      properties:\n        transactionHeader:\n          $ref: 'commonSchemas.yaml#/components/schemas/TransactionHeader'\n        name:\n          description: Free form text as a name for this subscription\n          type: string\n        mediaOutlets:\n          description: >-\n            Unique list of Media Outlets including the Seller entity and all Content\n            where impressions occurred\n          type: array\n          items:\n            $ref: 'commonSchemas.yaml#/components/schemas/MediaOutlet'\n          minItems: 1\n          uniqueItems: true\n        salesElementHeaders:\n          description: Unique list of SalesElements related to the impression included in the message\n          type: array\n          items:\n            $ref: 'commonSchemas.yaml#/components/schemas/SalesElementHeader'\n          minItems: 1\n        referenceIds:\n          description: >-\n            referenceId must contain a minimum of one item. A list of identifying information\n            regarding order, proposal, and RFP related to the impressions included in the message\n          type: array\n          items:\n            $ref: 'commonSchemas.yaml#/components/schemas/ReferenceId'\n          minItems: 1\n        frequency:\n          $ref: 'commonSchemas.yaml#/components/schemas/Frequency'\n        startDate:\n          oneOf:\n            - $ref: 'commonSchemas.yaml#/components/schemas/DynamicDate'\n            - type: string\n              format: date\n        endDate:\n          oneOf:\n            - $ref: 'commonSchemas.yaml#/components/schemas/DynamicDate'\n            - type: string\n              format: date\n        statSource:\n          description: >-\n            Identifies the originating impressions tracking source if all impressions have the\n            same tracking source. The combination of StatSource and MediaOutlet identifies a\n            unique impression.\n          type: string\n        maxChunkSize:\n          description: Suggestion to limit size of chunks to maxChunkSize in MB\n          type: integer\n      required:\n        - name\n        - transactionHeader\n      xml:\n        name: BuyerImpressionsSubscriptionRequest\n    SellerImpressionsNotification:\n      description: >-\n        Schema supports an asynchronous response to a subscription informing the buyer that\n        a new delivery of Impressions is ready to download\n      properties:\n        transactionHeader:\n          $ref: 'commonSchemas.yaml#/components/schemas/TransactionHeader'\n        mediaOutlets:\n          description: >-\n            Unique list of Media Outlets including the Seller entity and all Content\n            where impressions occurred\n          type: array\n          items:\n            $ref: 'commonSchemas.yaml#/components/schemas/MediaOutlet'\n          minItems: 1\n          uniqueItems: true\n        salesElementHeaders:\n          description: Unique list of SalesElements related to the impression included in the message\n          type: array\n          items:\n            $ref: 'commonSchemas.yaml#/components/schemas/SalesElementHeader'\n          minItems: 1\n          uniqueItems: true\n        referenceIds:\n          description: >-\n            referenceId must contain a minimum of one item. A list of identifying information\n            regarding order, proposal, and RFP related to the impressions included in the message\n          type: array\n          items:\n            $ref: 'commonSchemas.yaml#/components/schemas/ReferenceId'\n          minItems: 1\n        creatives:\n          description: >-\n            List of all creatives delivered against. This object may expand with further\n            metadata about the creative\n          type: array\n          items:\n            $ref: 'commonSchemas.yaml#/components/schemas/Creative'\n          minItems: 1\n        reportDate:\n          $ref: 'commonSchemas.yaml#/components/schemas/DateWindow'\n        statSource:\n          description: >-\n            Identifies the originating impressions tracking source if all impressions have the\n            same tracking source. The combination of StatSource and MediaOutlet identifies a\n            unique impression.\n          type: string\n        filePrefix:\n          description: Prefix for file name collection in the notification\n          type: string\n        chunks:\n          description: Number of chunks associated with the notification\n          type: integer\n      required:\n        - transactionHeader\n        - mediaOutlets\n        - salesElementHeaders\n        - referenceIds\n        - creatives\n        - reportDate\n        - statSource\n        - filePrefix\n        - chunks\n      xml:\n        name: SellerImpressionsNotificationRequest\n",
			"canonicalURL": "/github.com/tip-initiative/tip-initiative-apis@2e3c15b6685f042803acf59e6e5f6c3a0092bcb1/-/blob/endpoints/schemas/impressionsSubscription.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tip-initiative/tip-initiative-apis/blob/2e3c15b6685f042803acf59e6e5f6c3a0092bcb1/endpoints/schemas/impressionsSubscription.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"BuyerImpressionsSubscription\": parse schema: property \"endDate\": at 1:255: parse schema: oneOf: [0]: at 1:265: parse schema: resolve \"commonSchemas.yaml#/components/schemas/DynamicDate\": external \"commonSchemas.yaml\": file: local file reference is not allowed"
}