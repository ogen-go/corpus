{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DSC-ESCOM-IPN/Curso_MEVN"
		},
		"file": {
			"name": "userDocumentation.yml",
			"path": "api/src/documentation/userDocumentation.yml",
			"content": "openapi: 3.0.0\ntags:\n  name: User\n  description: API para interactura con los usuarios\npaths:\n  /user/profile:\n    get:\n      summary: Returns a list of users.\n      tags: [User]\n      operationID: profile\n      parameters:\n        - in: header\n          name: token\n          type: string\n      responses:\n          200:\n            description: Regresa los datos del usuario actual\n  /user/signup:\n    post:\n      summary: Registra al usuario en la API\n      tags: [User]\n      operationID: signup\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userSignIn'\n      responses:\n        200:\n          description: Usuario registrado exitosamente\n        403:\n          description: Las contraseñas no coinciden\n        401:\n          description: El correo ha sido previamente registrado\n  \n  /user/login:\n    post:\n      summary: Autentica al usuario en la API\n      tags: [User]\n      operationID: login\n      requestBody:\n        description: Para poder hacer uso de este endpoint debe existir un usuario previamente registrado\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userLogin'\n      responses:\n        200:\n          description: El usuario ha sido autenticado\n          headers:\n            token:\n              description: El token sera utilizado para interactuar con endpoints protegidos\n              type: string\n        404:\n          description: El email no esta registrado\n        403:\n          description: La contraseña es incorrecta\n  /user/logout:\n    put:\n      summary: Finaliza la sesion actual del usuario\n      tags: [User]\n      operationID: logout\n      parameters:\n        - in: header\n          name: token\n          type: string\n      responses:\n        200:\n          description: Actualiza el token del usuario a null\ncomponents:\n  schemas:\n    serverResponse:\n      type: object\n      properties:\n        server:\n          type: string\n          description: Mensaje del servidor\n    userLogin:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n        password:\n          type: string\n    userSignIn:\n      type: object\n      properties:\n        name:\n          type: string\n        email:\n          type: string\n          format: email\n        password:\n          type: string\n        confirmPassword:\n          type: string\n          description: Debe ser igual a password"
		}
	},
	"Error": "json: cannot unmarshal object into Go struct field Spec.tags of type []ogen.Tag"
}