{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Open-Pix/developers"
		},
		"file": {
			"name": "openpix.yml",
			"size": 0,
			"path": "src/swaggers/openpix.yml",
			"byteSize": 102879,
			"content": "openapi: 3.0.3\ninfo:\n  title: OpenPix\n  description: A OpenPix é uma Plataforma de Gestão de Pagamentos. Para utilizar\n    nossa API você deve\n    acessar  __[https://api.openpix.com.br/](https://api.openpix.com.br/)__ e\n    somente o mesmo. A OpenPix não aceita subdominios para a API.\n  version: 1.0.0\nservers:\n  - url: https://api.openpix.com.br\n    description: Production server\nsecurity:\n  - AppID: []\npaths:\n  '/api/openpix/v1/charge/{id}':\n    delete:\n      tags:\n        - charge\n      summary: Delete a charge\n      parameters:\n        - name: id\n          in: path\n          description:\n            charge ID or correlation ID. You will need URI encoding if your\n            correlation ID has characters outside the ASCII set or reserved\n            characters (%, \\#, /).\n          required: true\n          schema:\n            type: string\n          examples:\n            chargeId:\n              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==\n            correlationID:\n              value: fe7834b4060c488a9b0f89811be5f5cf\n      responses:\n        '200':\n          description: The charge deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  id:\n                    type: string\n                    description: the id previously informed to be found and deleted\n                example:\n                  status: OK\n                  id: fe7834b4060c488a9b0f89811be5f5cf\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    get:\n      tags:\n        - charge\n      summary: Get one charge\n      parameters:\n        - name: id\n          in: path\n          description:\n            charge ID or correlation ID. You will need URI encoding if your\n            correlation ID has characters outside the ASCII set or reserved\n            characters (%, \\#, /).\n          required: true\n          schema:\n            type: string\n          examples:\n            chargeId:\n              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==\n            correlationID:\n              value: fe7834b4060c488a9b0f89811be5f5cf\n      responses:\n        '200':\n          description: The charge retrieve using the given ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  charge:\n                    type: object\n                    $ref: '#/components/schemas/Charge'\n                example:\n                  charge:\n                    status: ACTIVE\n                    customer:\n                      name: Dan\n                      email: email0@example.com\n                      phone: '5511999999999'\n                      taxID:\n                        taxID: '31324227036'\n                        type: BR:CPF\n                    value: 100\n                    comment: good\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    paymentLinkID: 7777-6f71-427a-bf00-241681624586\n                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586\n                    globalID: Q2hhcmdlOjcxOTFmMWIwMjA0NmJmNWY1M2RjZmEwYg==\n                    qrCodeImage: https://api.openpix.dev/openpix/charge/brcode/image/9134e286-6f71-427a-bf00-241681624586.png\n                    brCode:\n                      000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n                    additionalInfo:\n                      - key: Product\n                        value: Pencil\n                      - key: Invoice\n                        value: '18476'\n                      - key: Order\n                        value: '302'\n                    expiresIn: 2592000\n                    expiresDate: 2021-04-01T17:28:51.882Z\n                    createdAt: 2021-03-02T17:28:51.882Z\n                    updatedAt: 2021-03-02T17:28:51.882Z\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/charge:\n    get:\n      tags:\n        - charge\n      summary: Get a list of charges\n      parameters:\n        - in: query\n          name: start\n          schema:\n            $ref: '#/components/schemas/Start'\n        - in: query\n          name: end\n          schema:\n            $ref: '#/components/schemas/End'\n        - name: status\n          in: query\n          schema:\n            type: string\n            enum:\n              - ACTIVE\n              - COMPLETED\n              - EXPIRED\n      responses:\n        '200':\n          description: A list of charges\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  charges:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Charge'\n                  pageInfo:\n                    type: object\n                    properties:\n                      errors:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            message:\n                              type: string\n                            data:\n                              type: object\n                              properties:\n                                skip:\n                                  type: number\n                                limit:\n                                  type: number\n                      skip:\n                        type: number\n                      limit:\n                        type: number\n                      totalCount:\n                        type: number\n                      hasPreviousPage:\n                        type: boolean\n                      hasNextPage:\n                        type: boolean\n                example:\n                  pageInfo:\n                    skip: 0\n                    limit: 10\n                    totalCount: 20\n                    hasPreviousPage: false\n                    hasNextPage: true\n                  charges:\n                    status: ACTIVE\n                    customer:\n                      name: Dan\n                      email: email0@example.com\n                      phone: '5511999999999'\n                      taxID:\n                        taxID: '31324227036'\n                        type: BR:CPF\n                    value: 100\n                    comment: good\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586\n                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586\n                    qrCodeImage: https://api.openpix.dev/openpix/charge/brcode/image/9134e286-6f71-427a-bf00-241681624586.png\n                    brCode:\n                      000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n                    additionalInfo:\n                      - key: Product\n                        value: Pencil\n                      - key: Invoice\n                        value: '18476'\n                      - key: Order\n                        value: '302'\n                    expiresIn: 2592000\n                    expiresDate: 2021-04-01T17:28:51.882Z\n                    createdAt: 2021-03-02T17:28:51.882Z\n                    updatedAt: 2021-03-02T17:28:51.882Z\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    post:\n      tags:\n        - charge\n      summary: Create a new Charge\n      parameters:\n        - in: query\n          name: return_existing\n          description:\n            Make the endpoint idempotent, will return an existent charge if\n            already has a one with the correlationID\n          required: false\n          schema:\n            type: boolean\n          examples:\n            return_existing:\n              value: true\n      description: Endpoint to create a new Charge for a customer\n      requestBody:\n        description: Data to create a new charge\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: '#/components/schemas/ChargePayload'\n            example:\n              correlationID: 9134e286-6f71-427a-bf00-241681624586\n              value: 100\n              comment: good\n              customer:\n                name: Dan\n                taxID: '31324227036'\n                email: email0@example.com\n                phone: '5511999999999'\n              additionalInfo:\n                - key: Product\n                  value: Pencil\n                - key: Invoice\n                  value: '18476'\n                - key: Order\n                  value: '302'\n      responses:\n        '200':\n          description:\n            Charge ID and also the generated Dynamic BR Code to be rendered as\n            a QRCode\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  charge:\n                    $ref: '#/components/schemas/Charge'\n                  correlationID:\n                    type: string\n                  brCode:\n                    type: string\n                example:\n                  charge:\n                    status: ACTIVE\n                    customer:\n                      name: Dan\n                      email: email0@example.com\n                      phone: '5511999999999'\n                      taxID:\n                        taxID: '31324227036'\n                        type: BR:CPF\n                    value: 100\n                    comment: good\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586\n                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586\n                    qrCodeImage: https://api.openpix.dev/openpix/charge/brcode/image/9134e286-6f71-427a-bf00-241681624586.png\n                    expiresIn: 2592000\n                    expiresDate: 2021-04-01T17:28:51.882Z\n                    createdAt: 2021-03-02T17:28:51.882Z\n                    updatedAt: 2021-03-02T17:28:51.882Z\n                    brCode:\n                      000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n                    additionalInfo:\n                      - key: Product\n                        value: Pencil\n                      - key: Invoice\n                        value: '18476'\n                      - key: Order\n                        value: '302'\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/refund/{id}':\n    get:\n      tags:\n        - refund\n      summary: Get one refund\n      parameters:\n        - name: id\n          in: path\n          description: refund ID or correlation ID\n          required: true\n          schema:\n            type: string\n          examples:\n            id:\n              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==\n            correlationID:\n              value: fe7834b4060c488a9b0f89811be5f5cf\n      responses:\n        '200':\n          description: The refund retrieve using the given ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  refund:\n                    type: object\n                    $ref: '#/components/schemas/Refund'\n                example:\n                  refund:\n                    value: 100\n                    correlationID: 7777-6f71-427a-bf00-241681624586\n                    refundId: 11bf5b37e0b842e08dcfdc8c4aefc000\n                    returnIdentification: D09089356202108032000a543e325902\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/refund:\n    get:\n      tags:\n        - refund\n      summary: Get a list of refunds\n      responses:\n        '200':\n          description: A list of refunds\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  refunds:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Refund'\n                  pageInfo:\n                    type: object\n                    properties:\n                      errors:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            message:\n                              type: string\n                            data:\n                              type: object\n                              properties:\n                                skip:\n                                  type: number\n                                limit:\n                                  type: number\n                      skip:\n                        type: number\n                      limit:\n                        type: number\n                      totalCount:\n                        type: number\n                      hasPreviousPage:\n                        type: boolean\n                      hasNextPage:\n                        type: boolean\n                example:\n                  pageInfo:\n                    skip: 0\n                    limit: 10\n                    totalCount: 20\n                    hasPreviousPage: false\n                    hasNextPage: true\n                  refunds:\n                    status: IN_PROCESSING\n                    value: 100\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    refundId: 9134e2866f71427abf00241681624586\n                    time: 2021-03-02T17:28:51.882Z\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    post:\n      tags:\n        - refund\n      summary: Create a new refund\n      description: Endpoint to create a new refund for a customer\n      requestBody:\n        description: Data to create a new refund\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: '#/components/schemas/RefundPayload'\n            example:\n              transactionEndToEndId: 9134e286-6f71-427a-bf00-241681624586\n              correlationID: 9134e286-6f71-427a-bf00-241681624586\n              value: 100\n      responses:\n        '200':\n          description: The created Refund\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  refund:\n                    $ref: '#/components/schemas/Refund'\n                example:\n                  refund:\n                    status: IN_PROCESSING\n                    value: 100\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    refundId: 9134e2866f71427abf00241681624586\n                    time: 2021-03-02T17:28:51.882Z\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/customer/{id}':\n    get:\n      tags:\n        - customer\n      summary: Get one customer\n      parameters:\n        - name: id\n          in: path\n          description: correlation ID\n          required: true\n          schema:\n            type: string\n          examples:\n            correlationID:\n              value: fe7834b4060c488a9b0f89811be5f5cf\n      responses:\n        '200':\n          description: The customer retrieve using the given ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  customer:\n                    type: object\n                    $ref: '#/components/schemas/Customer'\n                example:\n                  customer:\n                    name: Dan\n                    email: email0@example.com\n                    phone: '5511999999999'\n                    taxID:\n                      taxID: '31324227036'\n                      type: BR:CPF\n                    correlationID: fe7834b4060c488a9b0f89811be5f5cf\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/customer:\n    get:\n      tags:\n        - customer\n      summary: Get a list of customers\n      responses:\n        '200':\n          description: A list of customers\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  customers:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Customer'\n                  pageInfo:\n                    type: object\n                    properties:\n                      errors:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            message:\n                              type: string\n                            data:\n                              type: object\n                              properties:\n                                skip:\n                                  type: number\n                                limit:\n                                  type: number\n                      skip:\n                        type: number\n                      limit:\n                        type: number\n                      totalCount:\n                        type: number\n                      hasPreviousPage:\n                        type: boolean\n                      hasNextPage:\n                        type: boolean\n                example:\n                  pageInfo:\n                    skip: 0\n                    limit: 10\n                    totalCount: 20\n                    hasPreviousPage: false\n                    hasNextPage: true\n                  customers:\n                    customer:\n                      name: Dan\n                      email: email0@example.com\n                      phone: '5511999999999'\n                      taxID:\n                        taxID: '31324227036'\n                        type: BR:CPF\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    post:\n      tags:\n        - customer\n      summary: Create a new Customer\n      description: Endpoint to create a new Customer\n      requestBody:\n        description: Data to create a new customer\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: '#/components/schemas/CustomerPayload'\n            example:\n              name: Dan\n              taxID: '31324227036'\n              email: email0@example.com\n              phone: '5511999999999'\n              correlationID: 9134e286-6f71-427a-bf00-241681624586\n      responses:\n        '200':\n          description: Customer ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  customer:\n                    $ref: '#/components/schemas/Customer'\n                example:\n                  customer:\n                    name: Dan\n                    email: email0@example.com\n                    phone: '5511999999999'\n                    taxID:\n                      taxID: '31324227036'\n                      type: BR:CPF\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/transaction/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get a Transaction\n      parameters:\n        - name: id\n          in: path\n          description:\n            you can use the transaction id from openpix or the endToEndId of\n            transaction from bank\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The transaction retrieve using the given ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  transaction:\n                    type: object\n                    $ref: '#/components/schemas/Transaction'\n              example:\n                transaction:\n                  customer:\n                    name: Dan\n                    email: email0@example.com\n                    phone: '5511999999999'\n                    taxID:\n                      taxID: '31324227036'\n                      type: BR:CPF\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                  payer:\n                    name: Dan\n                    email: email0@example.com\n                    phone: '5511999999999'\n                    taxID:\n                      taxID: '31324227036'\n                      type: BR:CPF\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                  charge:\n                    status: ACTIVE\n                    customer: 603f81fcc6bccc24326ffb43\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    createdAt: 2021-03-03T12:33:00.546Z\n                    updatedAt: 2021-03-03T12:33:00.546Z\n                  infoPagador: payer info 0\n                  value: 100\n                  time: 2021-03-03T12:33:00.536Z\n                  transactionID: transactionID\n                  endToEndId: E18236120202012032010s0133872GZA\n                  globalID: UGl4VHJhbnNhY3Rpb246NzE5MWYxYjAyMDQ2YmY1ZjUzZGNmYTBi\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/transaction:\n    parameters:\n      - in: query\n        name: start\n        schema:\n          $ref: '#/components/schemas/Start'\n      - in: query\n        name: end\n        schema:\n          $ref: '#/components/schemas/End'\n      - in: query\n        name: charge\n        description:\n          You can use the charge ID or correlation ID or transaction ID of\n          charge to get a list of transactions related of this transaction\n        schema:\n          type: string\n        example: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA\n      - in: query\n        name: pixQrCode\n        description:\n          You can use the QrCode static ID or correlation ID or identifier\n          field of QrCode static to get a list of QrCode related of this\n          transaction\n        schema:\n          type: string\n        example: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA\n    get:\n      tags:\n        - transactions\n      summary: Get a list of transactions\n      responses:\n        '200':\n          description: A list of transactions\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  transactions:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Transaction'\n                  pageInfo:\n                    type: object\n                    properties:\n                      errors:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            message:\n                              type: string\n                            data:\n                              type: object\n                              properties:\n                                skip:\n                                  type: number\n                                limit:\n                                  type: number\n                      skip:\n                        type: number\n                      limit:\n                        type: number\n                      totalCount:\n                        type: number\n                      hasPreviousPage:\n                        type: boolean\n                      hasNextPage:\n                        type: boolean\n              example:\n                pageInfo:\n                  skip: 0\n                  limit: 10\n                  totalCount: 20\n                  hasPreviousPage: false\n                  hasNextPage: true\n                transactions:\n                  customer:\n                    name: Dan\n                    email: email0@example.com\n                    phone: '5511999999999'\n                    taxID:\n                      taxID: '31324227036'\n                      type: BR:CPF\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                  payer:\n                    name: Dan\n                    email: email0@example.com\n                    phone: '5511999999999'\n                    taxID:\n                      taxID: '31324227036'\n                      type: BR:CPF\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                  charge:\n                    status: ACTIVE\n                    customer: 603f81fcc6bccc24326ffb43\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    createdAt: 2021-03-03T12:33:00.546Z\n                    updatedAt: 2021-03-03T12:33:00.546Z\n                  infoPagador: payer info 0\n                  value: 100\n                  time: 2021-03-03T12:33:00.536Z\n                  transactionID: transactionID\n                  endToEndId: E18236120202012032010s0133872GZA\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/webhook/{id}':\n    delete:\n      tags:\n        - webhook\n      summary: Delete a Webhook\n      description: Endpoint to delete a Webhook\n      parameters:\n        - name: id\n          in: path\n          description: webhook ID\n          required: true\n          schema:\n            type: string\n          examples:\n            webhookID:\n              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==\n            id:\n              value: fe7834b4060c488a9b0f89811be5f5cf\n      responses:\n        '200':\n          description: Webhook ID and also the status code\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  status:\n                    type: string\n  /api/openpix/v1/webhook:\n    get:\n      parameters:\n        - in: query\n          name: url\n          description: You can use the url to filter all webhooks\n          schema:\n            type: string\n          example: https://mycompany.com.br/webhook\n      tags:\n        - webhook\n      summary: Get a list of webhooks\n      responses:\n        '200':\n          description: A list of webhooks\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  webhooks:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Webhook'\n                  pageInfo:\n                    type: object\n                    properties:\n                      errors:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            message:\n                              type: string\n                            data:\n                              type: object\n                              properties:\n                                skip:\n                                  type: number\n                                limit:\n                                  type: number\n                example:\n                  pageInfo:\n                    skip: 0\n                    limit: 100\n                    totalCount: 2\n                    hasPreviousPage: false\n                    hasNextPage: true\n                  webhooks:\n                    - id: V2ViaG9vazo2MDNlYmUxZWRlYjkzNWU4NmQyMmNmMTg=\n                      name: webhookName\n                      url: https://mycompany.com.br/webhook\n                      authorization: openpix\n                      event: OPENPIX:TRANSACTION_RECEIVED\n                      isActive: true\n                      createdAt: 2021-03-02T22:29:10.720Z\n                      updatedAt: 2021-03-02T22:29:10.720Z\n                    - id: V2ViaG9vazo2MDNlYmUxZWRlYjkzNWU4NmQyMmNmOTk=\n                      name: webhookName\n                      url: https://mycompany.com.br/webhook\n                      authorization: openpix\n                      event: OPENPIX:CHARGE_CREATED\n                      isActive: true\n                      createdAt: 2021-03-02T22:29:10.720Z\n                      updatedAt: 2021-03-02T22:29:10.720Z\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    post:\n      tags:\n        - webhook\n      summary: Create a new Webhook\n      description: Endpoint to create a new Webhook\n      requestBody:\n        description: Data to create a new webhook\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                webhook:\n                  type: object\n                  $ref: '#/components/schemas/WebhookPayload'\n              example:\n                webhook:\n                  name: webhookName\n                  url: https://mycompany.com.br/webhook\n                  authorization: openpix\n                  isActive: true\n      responses:\n        '200':\n          description: Webhook created specific event when receives a new pix transaction\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  webhook:\n                    type: object\n                    $ref: '#/components/schemas/Webhook'\n                example:\n                  webhook:\n                    id: V2ViaG9vazo2MDNlYmUxZWRlYjkzNWU4NmQyMmNmMTg=\n                    name: webhookName\n                    url: https://mycompany.com.br/webhook\n                    authorization: openpix\n                    isActive: true\n                    event: OPENPIX:TRANSACTION_RECEIVED\n                    createdAt: 2021-03-02T22:29:10.720Z\n                    updatedAt: 2021-03-02T22:29:10.720Z\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n      callbacks:\n        receivedPix:\n          '{$request.body#/webhook.url}':\n            post:\n              description: \u003e\n                Pix - O callback vai ser acionado sempre que um Pix for recebido\n                enviando uma charge e um pix\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      properties:\n                        charge:\n                          type: object\n                          $ref: '#/components/schemas/Charge'\n                        pix:\n                          type: object\n                          properties:\n                            pixQrCode:\n                              type: object\n                              $ref: '#/components/schemas/PixQrCode'\n                            charge:\n                              type: object\n                              $ref: '#/components/schemas/Charge'\n                            customer:\n                              type: object\n                              $ref: '#/components/schemas/Customer'\n                            payer:\n                              type: object\n                              $ref: '#/components/schemas/Customer'\n                            time:\n                              type: string\n                            value:\n                              type: string\n                            transactionID:\n                              type: string\n                            infoPagador:\n                              type: string\n                            raw:\n                              type: object\n                              properties:\n                                endToEndId:\n                                  type: string\n                                txid:\n                                  type: string\n                                valor:\n                                  type: string\n                                horario:\n                                  type: string\n                                infoPagador:\n                                  type: string\n                        pixQrCode:\n                          type: object\n                      example:\n                        charge:\n                          status: COMPLETED\n                          customer:\n                            name: Julio\n                            email: email0@example.com\n                            phone: '5511999999999'\n                            taxID:\n                              taxID: '31928282008'\n                              type: BR:CPF\n                            correlationID: 9134e286-6f71-427a-bf00-241681624586\n                          correlationID: 9134e286-6f71-427a-bf00-241681624586\n                          transactionID: 9134e2866f71427abf00241681624586\n                          brCode:\n                            000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                            Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n                          createdAt: 2021-03-03T20:49:23.605Z\n                          updatedAt: 2021-03-03T20:49:23.668Z\n                        pix:\n                          pixQrCode: null\n                          charge:\n                            status: COMPLETED\n                            customer: 604002035cce3b60132343cb\n                            correlationID: 9134e286-6f71-427a-bf00-241681624586\n                            brCode:\n                              000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                              Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n                            createdAt: 2021-03-03T21:39:15.831Z\n                            updatedAt: 2021-03-03T21:39:15.896Z\n                          customer:\n                            name: Julio\n                            email: email0@example.com\n                            phone: '5511999999999'\n                            taxID:\n                              taxID: '31928282008'\n                              type: BR:CPF\n                            correlationID: 9134e286-6f71-427a-bf00-241681624586\n                          payer:\n                            name: Julio\n                            email: email0@example.com\n                            phone: '5511999999999'\n                            taxID:\n                              taxID: '31928282008'\n                              type: BR:CPF\n                            correlationID: 9134e286-6f71-427a-bf00-241681624586\n                          time: 2020-09-09T20:15:00.358Z\n                          value: 9999\n                          transactionID: 9134e2866f71427abf00241681624586\n                          infoPagador: conta\n                          raw:\n                            endToEndId: 9134e2866f71427abf00241681624586\n                            txid: 9134e2866f71427abf00241681624586\n                            valor: '99.99'\n                            horario: 2020-09-09T20:15:00.358Z\n                            infoPagador: conta\n                        pixQrCode: null\n              responses:\n                '200':\n                  description: Notificação recebida com sucesso\n        receivedPixDetached:\n          '{$request.body#/webhook.url}':\n            post:\n              description: \u003e\n                Pix Avulso - O callback vai ser acionado sempre que um Pix for\n                recebido devolvendo um pix avulso\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      properties:\n                        charge:\n                          type: object\n                        pix:\n                          type: object\n                          properties:\n                            pixQrCode:\n                              type: object\n                              $ref: '#/components/schemas/PixQrCode'\n                            charge:\n                              type: object\n                              $ref: '#/components/schemas/Charge'\n                            customer:\n                              type: object\n                              $ref: '#/components/schemas/Customer'\n                            payer:\n                              type: object\n                              $ref: '#/components/schemas/Customer'\n                            time:\n                              type: string\n                            value:\n                              type: string\n                            transactionID:\n                              type: string\n                            infoPagador:\n                              type: string\n                            raw:\n                              type: object\n                              properties:\n                                endToEndId:\n                                  type: string\n                                txid:\n                                  type: string\n                                valor:\n                                  type: string\n                                horario:\n                                  type: string\n                                infoPagador:\n                                  type: string\n                        pixQrCode:\n                          type: object\n                      example:\n                        charge: null\n                        pix:\n                          pixQrCode: null\n                          charge: null\n                          customer: null\n                          time: 2020-09-09T20:15:00.358Z\n                          value: 9999\n                          transactionID: 9134e2866f71427abf00241681624586\n                          infoPagador: conta\n                          raw:\n                            endToEndId: 9134e2866f71427abf00241681624586\n                            txid: 9134e2866f71427abf00241681624586\n                            valor: '99.99'\n                            horario: 2020-09-09T20:15:00.358Z\n                            infoPagador: conta\n              responses:\n                '200':\n                  description: Notificação recebida com sucesso\n        receivedPixQrCode:\n          '{$request.body#/webhook.url}':\n            post:\n              description: \u003e\n                Pix QrCode - O callback vai ser acionado sempre que um Pix\n                QrCOde for recebido devolvendo um pix e um pixQrCode\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      properties:\n                        charge:\n                          type: object\n                        pix:\n                          type: object\n                          properties:\n                            pixQrCode:\n                              type: object\n                              $ref: '#/components/schemas/PixQrCode'\n                            charge:\n                              type: object\n                              $ref: '#/components/schemas/Charge'\n                            payer:\n                              type: object\n                              $ref: '#/components/schemas/Customer'\n                            time:\n                              type: string\n                            value:\n                              type: string\n                            transactionID:\n                              type: string\n                            infoPagador:\n                              type: string\n                            raw:\n                              type: object\n                              properties:\n                                endToEndId:\n                                  type: string\n                                txid:\n                                  type: string\n                                valor:\n                                  type: string\n                                horario:\n                                  type: string\n                                infoPagador:\n                                  type: string\n                        pixQrCode:\n                          type: object\n                          $ref: '#/components/schemas/PixQrCode'\n                      example:\n                        charge: null\n                        pix:\n                          pixQrCode:\n                            value: 100\n                            comment: good\n                            correlationID: 9134e286-6f71-427a-bf00-241681624586\n                            identifier: 9134e2866f71427abf00241681624586\n                            paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586\n                            paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586\n                            qrCodeImage: https://api.openpix.dev/openpix/pixQrCode/brcode/image/9134e286-6f71-427a-bf00-241681624586.png\n                            createdAt: 2021-03-02T17:28:51.882Z\n                            updatedAt: 2021-03-02T17:28:51.882Z\n                            brCode:\n                              000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                              Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n                          customer: null\n                          time: 2020-09-09T20:15:00.358Z\n                          value: 9999\n                          transactionID: 9134e2866f71427abf00241681624586\n                          infoPagador: conta\n                          raw:\n                            endToEndId: 9134e2866f71427abf00241681624586\n                            txid: 9134e2866f71427abf00241681624586\n                            valor: '99.99'\n                            horario: 2020-09-09T20:15:00.358Z\n                            infoPagador: conta\n              responses:\n                '200':\n                  description: Notificação recebida com sucesso\n  '/openpix/charge/brcode/image/{:id}.png?size=1024':\n    get:\n      tags:\n        - charge\n      summary: Get an image of Qr Code from a Charge\n      parameters:\n        - in: path\n          name: id\n          description: charge link payment ID\n          required: true\n          schema:\n            type: string\n          examples:\n            paymentLinkID:\n              value: fe7834b4060c488a9b0f89811be5f5cf\n        - in: query\n          name: size\n          description:\n            Size for the image. This size should be between 600 and 4096. if\n            the size parameter was not passed, the default value will be 1024.\n          required: false\n          schema:\n            type: string\n          examples:\n            size:\n              value: 768\n      responses:\n        '200':\n          description: The Qr Code image as MIME type\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/pixQrCode-static/{id}':\n    get:\n      tags:\n        - pixQrCode\n      summary: Get one Pix QrCode\n      parameters:\n        - name: id\n          in: path\n          description: pixQrCode ID, correlation ID or emv identifier\n          required: true\n          schema:\n            type: string\n          examples:\n            pixQrCodeId:\n              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==\n            correlationID:\n              value: fe7834b4060c488a9b0f89811be5f5cf\n            identifier:\n              value: zr7833b4060c488a9b0f89811\n      responses:\n        '200':\n          description: The pixQrCode retrieve using the given ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pixQrCode:\n                    type: object\n                    $ref: '#/components/schemas/PixQrCode'\n                example:\n                  pixQrCode:\n                    name: pix qrcode static\n                    value: 100\n                    comment: pix qrcode static\n                    correlationID: fe7834b4060c488a9b0f89811be5f5cf\n                    identifier: zr7833b4060c488a9b0f89811\n                    paymentLinkID: 7777-6f71-427a-bf00-241681624586\n                    paymentLinkUrl: https://openpix.com.br/pay/fe7834b4060c488a9b0f89811be5f5cf\n                    qrCodeImage: https://api.openpix.dev/openpix/charge/brcode/image/fe7834b4060c488a9b0f89811be5f5cf.png\n                    brCode:\n                      000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n                    createdAt: 2021-03-02T17:28:51.882Z\n                    updatedAt: 2021-03-02T17:28:51.882Z\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/qrcode-static:\n    get:\n      tags:\n        - pixQrCode\n      summary: Get a list of Pix QrCodes\n      responses:\n        '200':\n          description: A list of pixQrCodes\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pixQrCodes:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PixQrCode'\n                  pageInfo:\n                    type: object\n                    properties:\n                      errors:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            message:\n                              type: string\n                            data:\n                              type: object\n                              properties:\n                                skip:\n                                  type: number\n                                limit:\n                                  type: number\n                      skip:\n                        type: number\n                      limit:\n                        type: number\n                      totalCount:\n                        type: number\n                      hasPreviousPage:\n                        type: boolean\n                      hasNextPage:\n                        type: boolean\n                example:\n                  pageInfo:\n                    skip: 0\n                    limit: 10\n                    totalCount: 20\n                    hasPreviousPage: false\n                    hasNextPage: true\n                  pixQrCodes:\n                    name: pix qrcode\n                    value: 100\n                    comment: good\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    identifier: zr7833b4060c488a9b0f89811\n                    paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586\n                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586\n                    qrCodeImage: https://api.openpix.dev/openpix/pixQrCode/brcode/image/9134e286-6f71-427a-bf00-241681624586.png\n                    brCode:\n                      000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n                    createdAt: 2021-03-02T17:28:51.882Z\n                    updatedAt: 2021-03-02T17:28:51.882Z\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    post:\n      tags:\n        - pixQrCode\n      summary: Create a new Pix QrCode Static\n      description: Endpoint to create a new Pix QrCode Static\n      requestBody:\n        description: Data to create a new Pix QrCode Static\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: '#/components/schemas/PixQrCodePayload'\n            example:\n              correlationID: 9134e286-6f71-427a-bf00-241681624586\n              value: 100\n              comment: good\n              identifier: zr7833b4060c488a9b0f89811\n      responses:\n        '200':\n          description:\n            PixQrCode ID and also the generated Dynamic BR Code to be rendered\n            as a QRCode\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pixQrCode:\n                    $ref: '#/components/schemas/PixQrCode'\n                  correlationID:\n                    type: string\n                  brCode:\n                    type: string\n                example:\n                  pixQrCode:\n                    value: 100\n                    comment: good\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    identifier: zr7833b4060c488a9b0f89811\n                    paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586\n                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586\n                    qrCodeImage: https://api.openpix.dev/openpix/pixQrCode/brcode/image/9134e286-6f71-427a-bf00-241681624586.png\n                    createdAt: 2021-03-02T17:28:51.882Z\n                    updatedAt: 2021-03-02T17:28:51.882Z\n                    brCode:\n                      000201010212261060014br.gov.bcb.pix2584http://localhost:5001/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao\n                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/pay/confirm:\n    post:\n      tags:\n        - payment\n      summary: Confirm a Payment\n      description: Endpoint to confirm a payment\n      requestBody:\n        description: Data to confirm a pending payment\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: '#/components/schemas/PayConfirmPayload'\n            example:\n              correlationID: pay1\n      responses:\n        '200':\n          description: Payment destination account information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  payment:\n                    $ref: '#/components/schemas/PayConfirmPayment'\n                example:\n                  payment:\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    destination:\n                      value: 100\n                      status: CONFIRMED\n                      pixKey: c4249323-b4ca-43f2-8139-8232aab09b93\n                      pixKeyType: RANDOM\n                      account:\n                        branch: '1234'\n                        account: '12345'\n                        accountType: ContaCorrente\n                      psp:\n                        id: '1234'\n                        name: Banco de Exemplo\n                        code: '555'\n                      holder:\n                        name: Pessoa Juridica\n                        taxID:\n                          taxID: '1234567890'\n                          type: CNPJ\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/pay/pix-key:\n    post:\n      tags:\n        - payment\n      summary: Init a payment using a Pix Key\n      description: Endpoint to init a payment using a Pix Key\n      requestBody:\n        description: Data to create new payment\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: '#/components/schemas/PayPixKeyPayload'\n            example:\n              pixKey: c4249323-b4ca-43f2-8139-784baab09b93\n              pixKeyType: RANDOM\n              value: 1\n              correlationID: pay1\n      responses:\n        '200':\n          description: Payment destination account information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  payment:\n                    $ref: '#/components/schemas/PaymentPixKey'\n                example:\n                  payment:\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    value: 100\n                    status: PENDING\n                    destination:\n                      pixKey: c4249323-b4ca-43f2-8139-8232aab09b93\n                      pixKeyType: RANDOM\n                      account:\n                        branch: '1234'\n                        account: '12345'\n                        accountType: ContaCorrente\n                      psp:\n                        id: '1234'\n                        name: Banco de Exemplo\n                        code: '555'\n                      holder:\n                        name: Pessoa Juridica\n                        taxID:\n                          taxID: '1234567890'\n                          type: CNPJ\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/pay/qrcode:\n    post:\n      tags:\n        - payment\n      summary: Init a payment using a QRCode\n      description: Endpoint to init a payment using a QRCode\n      requestBody:\n        description: Data to create new payment\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: '#/components/schemas/PayQRCodeload'\n            example:\n              qrcode:\n                00020126580014br.gov.bcb.pix01365fd0bae1-ccf3-4675-a189-c9eaee189bc65204000053039865406100.005802BR5909LOCALHOST6009Sao\n                Paulo62100506doe10063042F24\n              correlationID: pay1\n      responses:\n        '200':\n          description: Payment destination account information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  payment:\n                    $ref: '#/components/schemas/PaymentPixKey'\n                example:\n                  payment:\n                    correlationID: 9134e286-6f71-427a-bf00-241681624586\n                    destination:\n                      value: 100\n                      status: PENDING\n                      pixKey: c4249323-b4ca-43f2-8139-8232aab09b93\n                      pixKeyType: RANDOM\n                      account:\n                        branch: '1234'\n                        account: '12345'\n                        accountType: ContaCorrente\n                      psp:\n                        id: '1234'\n                        name: Banco de Exemplo\n                        code: '555'\n                      holder:\n                        name: Pessoa Juridica\n                        taxID:\n                          taxID: '1234567890'\n                          type: CNPJ\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/giftback/balance/{taxID}':\n    get:\n      tags:\n        - giftback\n      summary: Get Giftback balance of a Customer\n      description: Endpoint to get Giftback balance of a Customer\n      parameters:\n        - name: taxID\n          in: path\n          description: CPF of the Customer\n          required: true\n          schema:\n            type: string\n          example: '3132422703'\n      responses:\n        '200':\n          description: Customer information and balance in cents\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  customer:\n                    type: object\n                    $ref: '#/components/schemas/Customer'\n                  balance:\n                    type: number\n                example:\n                  customer:\n                    name: Dan\n                    email: email0@example.com\n                    phone: '5511999999999'\n                    taxID:\n                      taxID: '31324227036'\n                      type: BR:CPF\n                    correlationID: fe7834b4060c488a9b0f89811be5f5cf\n                  balance: 3400\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/giftback:\n    post:\n      tags:\n        - giftback\n      summary: Give Giftback to a Customer\n      description: Endpoint to give Giftback to a Customer\n      requestBody:\n        description: Data to give Giftback to a Customer\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - taxID\n                - value\n              properties:\n                taxID:\n                  type: string\n                  description: CPF of the Customer\n                value:\n                  type: string\n                  description: Value in cents of this Giftback\n              example:\n                taxID: '31324227036'\n                value: 100\n      responses:\n        '200':\n          description: Customer information and balance in cents\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  customer:\n                    type: object\n                    $ref: '#/components/schemas/Customer'\n                  balance:\n                    type: number\n                example:\n                  customer:\n                    name: Dan\n                    email: email0@example.com\n                    phone: '5511999999999'\n                    taxID:\n                      taxID: '31324227036'\n                      type: BR:CPF\n                    correlationID: fe7834b4060c488a9b0f89811be5f5cf\n                  balance: 3400\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/common/user/v1/users/{id}':\n    delete:\n      tags:\n        - users\n      summary: Delete one user\n      parameters:\n        - name: id\n          in: path\n          description: platform ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The user was deleted successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  user:\n                    type: string\n                    description: user ID that was deleted\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n    get:\n      tags:\n        - users\n      summary: Get one user\n      parameters:\n        - name: id\n          in: path\n          description: platform ID or email or correlation ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The user retrieve using the given ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  user:\n                    type: object\n                    $ref: '#/components/schemas/User'\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                  user:\n                    type: object\n                    $ref: '#/components/schemas/User'\n  /api/common/user/v1/users:\n    get:\n      tags:\n        - users\n      summary: Get a list of users\n      responses:\n        '200':\n          description: A list of users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  users:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/User'\n                  pageInfo:\n                    type: object\n                    properties:\n                      errors:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            message:\n                              type: string\n                            data:\n                              type: object\n                              properties:\n                                skip:\n                                  type: number\n                                limit:\n                                  type: number\n                      skip:\n                        type: number\n                      limit:\n                        type: number\n                      totalCount:\n                        type: number\n                      hasPreviousPage:\n                        type: boolean\n                      hasNextPage:\n                        type: boolean\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n  /api/common/user/v1/update-or-create:\n    post:\n      tags:\n        - users\n      summary: Create or Update multiple users\n      description: Endpoint to create or update multiple users\n      requestBody:\n        description: Data to create or update users\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                users:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/UserPayload'\n      responses:\n        '200':\n          description: A list of all users created/updated and possible errors\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        data:\n                          $ref: '#/components/schemas/UserPayload'\n                        message:\n                          type: string\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/User'\n        '400':\n          description: An error message of missing users\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  message:\n                    type: string\n  /api/openpix/v1/partner/application:\n    post:\n      tags:\n        - partner (request access)\n      summary: Create a new application to some of your preregistration's company.\n      description: \u003e\n        As a partner company, you can create a new application to some of your\n        companies.\n\n        The application should give access to our API to this companies, so they can use\n\n        it too.\n      requestBody:\n        description: The request body to create a pre registration.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                application:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                      description: The name you want to give your application\n                    type:\n                      $ref: '#/components/schemas/ApplicationEnumTypePayload'\n                  required:\n                    - name\n                    - type\n                taxID:\n                  $ref: '#/components/schemas/TaxIDObjectPayload'\n                  required:\n                    - taxID\n                    - type\n            example:\n              application:\n                name: MyAPIAccess\n                type: API\n              taxID:\n                taxID: '65914571000187'\n                type: BR:CNPJ\n      responses:\n        '200':\n          description: \u003e\n            Our \"idempotence output\", if you get this HTTP code, it's an\n            application\n\n            that already has been registered.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  application:\n                    $ref: '#/components/schemas/PartnerApplicationPayload'\n        '201':\n          description: \u003e\n            A new application has been registered. It'll be identified by the\n            name that you give to it\n\n            and by the company that has been referenced.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  application:\n                    $ref: '#/components/schemas/PartnerApplicationPayload'\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        '403':\n          description: You are unauthorized to use this endpoint.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/partner/company/{taxID}':\n    get:\n      tags:\n        - partner (request access)\n      summary: Get an specific preregistration via taxID param.\n      parameters:\n        - name: taxID\n          in: path\n          description: The raw tax ID from the preregistration that you want to get.\n          required: true\n          schema:\n            type: string\n          examples:\n            taxID:\n              value: '60151449000182'\n      responses:\n        '200':\n          description: The preregistration retrieved by the tax ID.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  preRegistration:\n                    type: object\n                    properties:\n                      preRegistration:\n                        $ref: '#/components/schemas/PreRegistrationObjectPayload'\n                      user:\n                        $ref: '#/components/schemas/PreRegistrationUserObject'\n                      company:\n                        $ref: '#/components/schemas/CompanyObjectPayload'\n                      account:\n                        $ref: '#/components/schemas/AccountObjectPayload'\n                    required:\n                      - preRegistration\n                      - user\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/partner/company:\n    get:\n      tags:\n        - partner (request access)\n      summary: Get every preregistration that is managed by you.\n      responses:\n        '200':\n          description: A list with preregistrations.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  preRegistrations:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        preRegistration:\n                          $ref: '#/components/schemas/PreRegistrationObjectPayload'\n                        user:\n                          $ref: '#/components/schemas/PreRegistrationUserObject'\n                        company:\n                          $ref: '#/components/schemas/CompanyObjectPayload'\n                        account:\n                          $ref: '#/components/schemas/AccountObjectPayload'\n                      required:\n                        - preRegistration\n                        - user\n                  pageInfo:\n                    type: object\n                    properties:\n                      errors:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            message:\n                              type: string\n                            data:\n                              type: object\n                              properties:\n                                skip:\n                                  type: number\n                                limit:\n                                  type: number\n                      skip:\n                        type: number\n                      limit:\n                        type: number\n                      totalCount:\n                        type: number\n                      hasPreviousPage:\n                        type: boolean\n                      hasNextPage:\n                        type: boolean\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n    post:\n      tags:\n        - partner (request access)\n      summary: Create a pre registration with a partner reference (your company)\n      description: \u003e\n        As a partner company, you can create a new pre registration referencing\n        your\n\n        company as a partner.\n      requestBody:\n        description: The request body to create a pre registration.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: '#/components/schemas/PreRegistrationPayloadObject'\n            example:\n              preRegistration:\n                name: Example LLC\n                taxID:\n                  taxID: '11111111111111'\n                  type: BR:CNPJ\n                website: examplellc.com\n              user:\n                firstName: John\n                lastName: Doe\n                email: johndoe@examplellc.com\n                phone: '+5511912345678'\n      responses:\n        '200':\n          description: \u003e\n            Payload with a pre registration data.\n\n            Being the taxID our idempotence key, if you do the request with the same taxID multiple times,\n\n            every time you'll receive the same data from our endpoint.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreRegistrationPayloadObject'\n        '201':\n          description: A new preregistration that is related to you has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreRegistrationPayloadObject'\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        '403':\n          description: You are unauthorized to use this endpoint.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/account/{accountId}':\n    get:\n      tags:\n        - account\n      summary: Get an Account\n      parameters:\n        - name: accountId\n          in: path\n          description: ID of the Account\n          required: true\n          schema:\n            type: string\n          example: 6290ccfd42831958a405debc\n      responses:\n        '200':\n          description: The Account retrieve using the given Account ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  account:\n                    type: object\n                    $ref: '#/components/schemas/CompanyBankAccount'\n              example:\n                account:\n                  accountId: 6290ccfd42831958a405debc\n                  isDefault: true\n                  balance:\n                    total: 129430\n                    blocked: 0\n                    available: 129430\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  /api/openpix/v1/account/:\n    get:\n      tags:\n        - account\n      summary: Get a list of Accounts\n      responses:\n        '200':\n          description: A list of Accounts\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  accounts:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CompanyBankAccount'\n              example:\n                accounts:\n                  - accountId: 6290ccfd42831958a405debc\n                    isDefault: true\n                    balance:\n                      total: 129430\n                      blocked: 0\n                      available: 129430\n                  - accountId: 6286b467a7910113577e00ce\n                    isDefault: false\n                    balance:\n                      total: 130\n                      blocked: 100\n                      available: 30\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n  '/api/openpix/v1/account/{accountId}/withdraw':\n    post:\n      tags:\n        - account\n      summary: Withdraw from an Account\n      description:\n        An additional fee may be charged depending on the minimum free\n        withdrawal amount. See more about at\n        https://developers.openpix.com.br/docs/FAQ/faq-virtual-account/#onde-posso-consultar-as-taxas-da-minha-conta-virtual\n      parameters:\n        - name: accountId\n          in: path\n          description: ID of the Account\n          required: true\n          schema:\n            type: string\n          example: 6290ccfd42831958a405debc\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: number\n                  description: Value in cents\n            example:\n              value: 7000\n      responses:\n        '200':\n          description: Withdraw and Acccount information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  withdraw:\n                    type: object\n                    properties:\n                      account:\n                        type: object\n                        $ref: '#/components/schemas/CompanyBankAccount'\n                      transaction:\n                        type: object\n                        $ref: '#/components/schemas/WithdrawTransaction'\n              example:\n                withdraw:\n                  account:\n                    accountId: 6290ccfd42831958a405debc\n                    isDefault: true\n                    balance:\n                      total: 122430\n                      blocked: 0\n                      available: 122430\n                  transaction:\n                    endToEndId: E23114447202205191817cx6VMrbwtw6\n                    transaction: 7000\n        '400':\n          description: An error message\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\ncomponents:\n  schemas:\n    Charge:\n      type: object\n      properties:\n        value:\n          type: number\n        customer:\n          type: object\n          $ref: '#/components/schemas/Customer'\n        comment:\n          type: string\n        brCode:\n          type: string\n          description: EMV BRCode to be rendered as a QRCode\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - COMPLETED\n            - EXPIRED\n        correlationID:\n          type: string\n          description: Your correlation ID to keep track of this charge\n        paymentLinkID:\n          type: string\n          description: Payment Link ID, used on payment link and to retrieve qrcode image\n        paymentLinkUrl:\n          description: Payment Link URL to be shared with customers\n        globalID:\n          description: External ID of this charge\n        transactionID:\n          description:\n            unique uuid used as the txid from Pix into the provider from your\n            openpix account. This field link the charge with the transaction\n            when paid.\n        identifier:\n          type: string\n          description: Custom identifier for EMV\n        qrCodeImage:\n          description: QRCode image link URL\n        additionalInfo:\n          description: Additional info of the charge\n          type: array\n          items:\n            type: object\n            properties:\n              key:\n                description: key of object\n                type: string\n              value:\n                description: value of object\n                type: string\n        pixKey:\n          type: string\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n        expiresIn:\n          type: string\n    ChargePayload:\n      type: object\n      properties:\n        correlationID:\n          type: string\n          description: Your correlation ID to keep track of this charge\n        value:\n          type: number\n          description: Value in cents of this charge\n        comment:\n          type: string\n          description: Comment to be added in infoPagador\n        identifier:\n          type: string\n          description: Custom identifier for EMV\n        expiresIn:\n          type: number\n          description: Expires the charge in seconds (minimum is 15 minutes)\n        customer:\n          type: object\n          description: Payer of this charge\n          properties:\n            name:\n              type: string\n              description: Customer name\n            email:\n              type: string\n              description: Customer email\n            phone:\n              type: string\n              description: Customer phone\n            taxID:\n              type: string\n              description: Customer taxID (CPF or CNPJ)\n        additionalInfo:\n          type: array\n          description: Additional info of the charge\n          items:\n            type: object\n            properties:\n              key:\n                type: string\n                description: key of object\n              value:\n                type: string\n                description: value of object\n      required:\n        - correlationID\n        - value\n    Refund:\n      type: object\n      properties:\n        value:\n          type: number\n        status:\n          type: string\n          enum:\n            - IN_PROCESSING\n            - REFUNDED\n            - NOT_ACCOMPLISHED\n        correlationID:\n          type: string\n          description: Your correlation ID to keep track of this refund\n        refundId:\n          type: string\n          description: Unique refund ID for this pix refund\n        time:\n          type: string\n          description: Time of this refund\n    RefundPayload:\n      type: object\n      properties:\n        value:\n          type: number\n        transactionEndToEndId:\n          type: string\n          description: Your transaction ID, or endToEnd ID, to keep track of this refund\n        correlationID:\n          type: string\n          description: Your correlation ID, unique identifier refund\n    Customer:\n      type: object\n      properties:\n        name:\n          type: string\n        email:\n          type: string\n        phone:\n          type: string\n        taxID:\n          type: object\n          properties:\n            taxID:\n              type: string\n            type:\n              type: string\n        correlationID:\n          type: string\n    CustomerPayload:\n      type: object\n      properties:\n        Customer:\n          type: object\n          properties:\n            name:\n              type: string\n            email:\n              type: string\n            phone:\n              type: string\n            taxID:\n              type: string\n            correlationID:\n              type: string\n          required:\n            - name\n    Transaction:\n      type: object\n      properties:\n        charge:\n          type: object\n          $ref: '#/components/schemas/Charge'\n        value:\n          type: number\n        time:\n          type: string\n        endToEndID:\n          type: string\n        transactionID:\n          type: string\n        infoPagador:\n          type: string\n        endToEndId:\n          type: string\n        customer:\n          type: object\n          $ref: '#/components/schemas/Customer'\n        payer:\n          type: object\n          $ref: '#/components/schemas/Customer'\n        globalID:\n          description: External ID of this transaction\n        pixQrCode:\n          type: object\n          $ref: '#/components/schemas/PixQrCode'\n    WebhookPayload:\n      type: object\n      properties:\n        name:\n          type: number\n        event:\n          type: string\n          description:\n            The event to listen to. If omitted, the webhook will be registered\n            to listen the OPENPIX:TRANSACTION_RECEIVED. Event called when a new\n            pix transactions is received\n          $ref: '#/components/schemas/WebhookEventEnum'\n        url:\n          type: string\n        authorization:\n          type: string\n        isActive:\n          type: boolean\n    Webhook:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: number\n        event:\n          type: string\n          $ref: '#/components/schemas/WebhookEventEnum'\n        url:\n          type: string\n        authorization:\n          type: string\n        isActive:\n          type: boolean\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n    WebhookEventEnum:\n      type: string\n      description: \u003e\n        Available events to register a webhook to listen to. If no one selected\n        anyone the default event will be OPENPIX:TRANSACTION_RECEIVED.\n\n\n        * **OPENPIX:CHARGE_CREATED** - New charge created\n\n        * **OPENPIX:CHARGE_COMPLETED** - Charge completed is when a charge is fully paid\n\n        * **OPENPIX:CHARGE_EXPIRED** - Charge expired is when a charge is not fully paid and expired\n\n        * **OPENPIX:TRANSACTION_RECEIVED** - New PIX transaction received\n\n        * **OPENPIX:TRANSACTION_REFUND_RECEIVED** - New PIX transaction refund received or refunded\n      enum:\n        - OPENPIX:CHARGE_CREATED\n        - OPENPIX:CHARGE_COMPLETED\n        - OPENPIX:CHARGE_EXPIRED\n        - OPENPIX:TRANSACTION_RECEIVED\n        - OPENPIX:TRANSACTION_REFUND_RECEIVED\n    End:\n      type: string\n      format: date-time\n      title: End Date\n      description: End date used in the query. Complies with RFC 3339.\n      example: 2020-12-01T17:00:00Z\n    Start:\n      type: string\n      format: date-time\n      title: Start Date\n      description: Start date used in the query. Complies with RFC 3339.\n      example: 2020-01-01T00:00:00Z\n    PixQrCode:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        comment:\n          type: string\n        identifier:\n          type: string\n          description: Custom identifier for EMV\n        brCode:\n          type: string\n          description: EMV BRCode to be rendered as a Pix QRCode\n        correlationID:\n          type: string\n          description: Your correlation ID to keep track of this pix qrcode\n        paymentLinkID:\n          type: string\n          description: Payment Link ID, used on payment link and to retrieve qrcode image\n        paymentLinkUrl:\n          description: Payment Link URL to be shared with customers\n        qrCodeImage:\n          description: QRCode image link URL\n        createdAt:\n          type: string\n        updatedAt:\n          type: string\n    PixQrCodePayload:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of this pix qrcode\n        correlationID:\n          type: string\n          description: Your correlation ID to keep track of this qrcode\n        value:\n          type: number\n          description: Value in cents of this qrcode\n        comment:\n          type: string\n          description: Comment to be added in infoPagador\n        identifier:\n          type: string\n          description: Custom identifier for EMV\n      required:\n        - name\n        - identifier\n    PayPixKeyPayload:\n      type: object\n      properties:\n        correlationID:\n          type: string\n          description: Your correlation ID to keep track of this payment\n        pixKey:\n          type: string\n          description: Pix Key of destination account\n        pixKeyType:\n          description: Pix Key type of destination account\n          type: string\n          enum:\n            - CPF\n            - CNPJ\n            - EMAIL\n            - PHONE\n            - RANDOM\n        value:\n          description: Value of this payment in cents\n          type: number\n    PayQRCodeload:\n      type: object\n      properties:\n        correlationID:\n          type: string\n          description: Your correlation ID to keep track of this payment\n        qrcode:\n          type: string\n          description: QRCode text content EMV\n        value:\n          description:\n            Value of this payment in cents, it won't be used if QRCode has a\n            predefined value\n          type: number\n    PayConfirmPayload:\n      type: object\n      properties:\n        correlationID:\n          type: string\n          description: Your correlation ID to keep track of this payment\n    DestinationAccount:\n      type: object\n      properties:\n        pixKey:\n          type: string\n          description: Pix Key of this destination account\n        pixKeyType:\n          type: string\n          description: Pix Key type of this destination account\n          enum:\n            - CPF\n            - CNPJ\n            - EMAIL\n            - PHONE\n            - RANDOM\n        account:\n          type: object\n          properties:\n            branch:\n              type: string\n              description: Branch of destination account\n            account:\n              type: string\n              description: Account number of destination account\n            accountType:\n              type: string\n              description: Account type of destination account\n        psp:\n          type: object\n          properties:\n            id:\n              type: string\n              description: Payment Service Provider id\n            name:\n              type: string\n              description: Payment Service Provider name\n            code:\n              type: string\n              description: Payment Service Provider code\n        holder:\n          type: object\n          properties:\n            name:\n              type: string\n              description: Account holder name\n            nameFriendly:\n              type: string\n              description: Account holder name friendly (Nome Fantasia)\n            taxID:\n              type: object\n              properties:\n                taxID:\n                  type: string\n                  description: Tax Identifier (CPF/CNPJ) of account holder\n                type:\n                  type: string\n                  description: Tax Identifier type\n                  enum:\n                    - CPF\n                    - CNPJ\n    PaymentPixKey:\n      type: object\n      properties:\n        correlationID:\n          type: string\n          description: your correlation ID to keep track of this payment\n        value:\n          description: Value of this payment in cents\n          type: number\n        status:\n          type: string\n          description: Payment status\n          enum:\n            - PENDING\n            - CONFIRMED\n        destination:\n          type: object\n          description: account destination info of this pix key\n          $ref: '#/components/schemas/DestinationAccount'\n    PayConfirmPayment:\n      type: object\n      properties:\n        correlationID:\n          type: string\n          description: your correlation ID to keep track of this payment\n        value:\n          description: Value of this payment in cents\n          type: number\n        status:\n          type: string\n          description: Payment status\n          enum:\n            - PENDING\n            - CONFIRMED\n    User:\n      type: object\n      properties:\n        _id:\n          type: string\n        updatedAt:\n          type: string\n        createdAt:\n          type: string\n        nick:\n          type: string\n        taxID:\n          type: string\n        company:\n          type: string\n        phoneNumbers:\n          type: string\n        active:\n          type: string\n        isBlocked:\n          type: string\n        name:\n          type: string\n        manager:\n          type: string\n        roles:\n          type: string\n        roleGroups:\n          type: string\n        emails:\n          type: string\n        lang:\n          type: string\n        journeySchedule:\n          type: string\n        tags:\n          type: string\n        costRevenueCenter:\n          type: string\n        correlationID:\n          type: string\n        gender:\n          type: string\n        birthDate:\n          type: string\n        admissionDate:\n          type: string\n        demissionDate:\n          type: string\n        businessDivision:\n          type: string\n        jobTitle:\n          type: string\n    UserPayload:\n      type: object\n      properties:\n        id:\n          type: string\n        emails:\n          type: array\n          items:\n            type: string\n        taxID:\n          type: string\n        name:\n          type: string\n        nick:\n          type: string\n        gender:\n          type: string\n        tags:\n          type: string\n        correlationID:\n          type: string\n        manager:\n          type: string\n        area:\n          type: string\n        phoneNumbers:\n          type: array\n          items:\n            type: string\n        birthDate:\n          type: string\n          format: date\n        admissionDate:\n          type: string\n          format: date\n        demissionDate:\n          type: string\n          format: date\n        password:\n          type: string\n    ApplicationEnumTypePayload:\n      type: string\n      description:\n        Type of the application that you want to register. Each of this has\n        some kind of permissions.\n      enum:\n        - API\n        - PLUGIN\n        - ORACLE\n    TaxIDObjectPayload:\n      type: object\n      properties:\n        taxID:\n          type: string\n          description:\n            The tax identifier of your account holder. This should be a raw\n            string with only digits.\n        type:\n          type: string\n          enum:\n            - BR:CNPJ\n    PreRegistrationUserObject:\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: \u003e\n            The user's first name.\n\n            If the pre registration has been approved, this will be turn the company's first user first name.\n        lastName:\n          type: string\n          description: \u003e\n            The user's last name.\n\n            If the pre registration has been approved, this will be turn the company's first user last name.\n        email:\n          type: string\n          description: \u003e\n            The user's email.\n\n            It'll be the email that will entered in contact to validate that it's a real person (it's a step to approve the preregistration).\n\n            After approving the preregistration, it'll be the company's user email.\n        phone:\n          type: string\n          description: \u003e\n            The user's phone number, need to be a validated phone number because\n            it'll receive a SMS confirming that is a real person.\n\n            We're accept only values that matches the E.164 standard, that follows this pattern: [+][country code][local phone number].\n      required:\n        - firstName\n        - lastName\n        - email\n        - phone\n    PreRegistrationObject:\n      type: object\n      properties:\n        name:\n          type: string\n          description:\n            The name of this preregistration. It'll be related as your company\n            name too.\n        website:\n          type: string\n          description: A website that is related to this preregistration.\n        taxID:\n          $ref: '#/components/schemas/TaxIDObjectPayload'\n      required:\n        - name\n        - taxID\n    PreRegistrationPayloadObject:\n      type: object\n      properties:\n        preRegistration:\n          $ref: '#/components/schemas/PreRegistrationObject'\n        user:\n          $ref: '#/components/schemas/PreRegistrationUserObject'\n    AccountObjectPayload:\n      type: object\n      properties:\n        clientId:\n          type: string\n          description:\n            The client ID from the company bank account that is related to this\n            preregistration/company.\n    CompanyObjectPayload:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the company that is related to this preregistration.\n        name:\n          type: string\n          description: The name of the company that is related to this preregistration.\n        taxID:\n          $ref: '#/components/schemas/TaxIDObjectPayload'\n    PreRegistrationObjectPayload:\n      type: object\n      properties:\n        name:\n          type: string\n          description:\n            When the preregistration will turn a company, this will be the name\n            of the company that this preregistration is related.\n        taxID:\n          $ref: '#/components/schemas/TaxIDObjectPayload'\n    PartnerApplicationPayload:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name that identifies your application.\n        isActive:\n          type: boolean\n          description: Current status of your application.\n        type:\n          $ref: '#/components/schemas/ApplicationEnumTypePayload'\n        clientId:\n          type: string\n          description: The ID of this client application.\n        clientSecret:\n          type: string\n          description: The secret of this client application.\n    CompanyBankAccount:\n      type: object\n      properties:\n        accountId:\n          type: string\n          description: ID of the Account\n        isDefault:\n          type: boolean\n        balance:\n          type: object\n          properties:\n            total:\n              type: number\n              description: Total amount in cents\n            blocked:\n              type: number\n              description: Blocked amount in cents\n            available:\n              type: number\n              description: Available amount in cents\n    WithdrawTransaction:\n      type: object\n      properties:\n        endToEndId:\n          type: string\n          description: ID of the Withdraw Transaction\n        value:\n          type: string\n  securitySchemes:\n    AppID:\n      type: apiKey\n      in: header\n      name: Authorization\ntags:\n  - name: charge\n    description: |\n      Endpoint to manage Charges\n  - name: customer\n    description: |\n      Endpoint to manage Customer\n  - name: payment\n    description: |\n      Endpoint to init a payment using a Pix Key or QRCode.\u003cbr /\u003e\n  - name: partner (request access)\n    description: |\n      Partners integrate affiliated companies.\u003cbr/\u003e\n      They can register new companies, manage them, and earn money from them.\n",
			"canonicalURL": "/github.com/Open-Pix/developers@7bd9dac5e4c212d6bdff3e58837fc1207e4e2e07/-/blob/src/swaggers/openpix.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Open-Pix/developers/blob/7bd9dac5e4c212d6bdff3e58837fc1207e4e2e07/src/swaggers/openpix.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/openpix/charge/brcode/image/{:id}.png?size=1024\": get: at src/swaggers/openpix.yml:1253:7: parse path \"/openpix/charge/brcode/image/{:id}.png?size=1024\": path MUST NOT contain a query string"
}