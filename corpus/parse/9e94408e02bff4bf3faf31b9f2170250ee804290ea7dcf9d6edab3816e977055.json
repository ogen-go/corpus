{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PacktPublishing/Docker-for-Developers"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "chapter5/src/server/common/api.yml",
			"byteSize": 6187,
			"content": "openapi: 3.0.1\ninfo:\n  title: shipit-clicker\n  description: ShipIt Clicker\n  version: 1.0.0\nservers:\n  - url: /api/v1\ntags:\n  - name: Examples\n    description: Simple example endpoints\n  - name: Specification\n    description: The swagger API specification\npaths:\n  /examples:\n    get:\n      tags:\n        - Examples\n      description: Fetch all examples\n      responses:\n        200:\n          description: Return the example with the specified id\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Example'\n        4XX:\n          description: Example not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        5XX:\n          description: Example not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      tags:\n        - Examples\n      description: Create a new example\n      requestBody:\n        description: an example\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExampleBody'\n        required: true\n      responses:\n        201:\n          description: Return the example with the specified id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Example'\n        4XX:\n          description: Example not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        5XX:\n          description: Example not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /examples/{id}:\n    get:\n      tags:\n        - Examples\n      parameters:\n        - name: id\n          in: path\n          description: The id of the example to retrieve\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: Return the example with the specified id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Example'\n        4XX:\n          description: Example not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        5XX:\n          description: Example not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /games/:\n    post:\n      tags:\n        - Game\n      description: Create or update a new game item\n      requestBody:\n        description: The game item to create or update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GameBody'\n        required: true\n      responses:\n        201:\n          description: Return the newly created game item with the specified id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Game'\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /games/{id}/{element}:\n    get:\n      tags:\n        - Game\n      parameters:\n        - name: id\n          in: path\n          description: The id of the game item to retrieve\n          required: true\n          schema:\n            type: string\n        - name: element\n          in: path\n          description: The element of the game item to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Return the game item with the specified id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Game'\n        4XX:\n          description: Example not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        5XX:\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      tags:\n        - Game\n      description: Increment a game item by a certain amount\n      requestBody:\n        description: The amonunt of the game item to increment\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GameBody'\n        required: true\n      responses:\n        200:\n          description: The increment has been accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Game'\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /spec:\n    get:\n      tags:\n        - Specification\n      responses:\n        200:\n          description: Return the API specification\n          content: {}\ncomponents:\n  schemas:\n    Game:\n      type: object\n      properties:\n        id:\n          type: string\n          example: sample-game\n        element:\n          type: string\n          example: score\n        value:\n          type: integer\n          example: 3\n\n    GameBody:\n      title: Game Body\n      required:\n        - id\n        - element\n        - value\n      type: object\n      properties:\n        id:\n          type: string\n          example: sample-game\n        element:\n          type: string\n          example: score\n        value:\n          type: integer\n          example: 3\n\n    Example:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 3\n        name:\n          type: string\n          example: example 3\n    Error:\n      type: object\n      additionalProperties: true\n\n    ExampleBody:\n      title: example\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n          example: no_stress\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /games/{id}/{element}: patch: parse path \"/games/{id}/{element}\": path parameter not specified: \"id\""
}