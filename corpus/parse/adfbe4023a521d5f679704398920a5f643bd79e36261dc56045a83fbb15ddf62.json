{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Waziup/wazigate-edge"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "www/docs/openapi.yaml",
			"byteSize": 61621,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e-\n    This is the API specication for the [Wazigte Edge](https://github.com/Waziup/wazigate-edge).\n  version: 1.0.0\n  title: Wazigate Edge\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    email: johann.forster@waziup.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Your Gateway\n    description: Local Device Management\n#    externalDocs:\n#      description: Find out more\n#      url: 'http://swagger.io'\n  - name: Devices\n    description: Device Management\n  - name: Sensors\n    description: Sensor Management and Sensor Values\n  - name: Actuators\n    description: Actuator Management and Actuator Values\n  - name: Clouds\n    description: Clouds and Synchronization\n  - name: System\n    description: System Information\npaths:\n\n# Your Gateway ###############################################################\n\n  '/device/id':\n    get:\n      tags:\n        - Your Gateway\n      summary: Your Gateway's ID\n      description: Return the ID of this Gateway. It is generated from the physical MAC Address and is unique for each device.\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ID'\n  '/device':\n    get:\n      tags:\n        - Your Gateway\n      summary: Your Gateway\n      description: Return the local device (gateway).\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n  '/device/name':\n    post:\n      tags:\n        - Your Gateway\n      summary: Change Name\n      description: Change the name of your gateway.\n      requestBody:\n        description: New Name\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n              example: My New Gateay Name\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n  '/sensors':    \n    get:\n      tags:\n        - Your Gateway\n      summary: List Gateway Sensors\n      description: Return a list of sensors for this device.\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items: \n                  $ref: '#/components/schemas/Sensor'\n                example:\n                  - id: \"5da45ed64b9f614d30e93ab3\"\n                    name: \"Tempature Sensor\"\n                    created: \"2019-10-14T11:41:10.814Z\"\n                    time: \"2019-10-14T11:41:10.811Z\"\n                    value: 40.21\n                  - id: \"5da97e3813474778618e2289\"\n                    name: \"Water Level Sensor\"\n                    created: \"2019-10-18T08:56:59.635Z\"\n                    time: \"2019-10-18T08:57:12.250Z\"\n                    value: 0.52\n    post:\n      tags:\n        - Your Gateway\n      summary: Declare a Sensor\n      description: Create a new sensor on this device.\n      requestBody:\n        description: Sensor to be declared. The Sensor ID is not required - the Edge API will generate an ID for you.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                  description: Sensor ID\n                  example: \"201c85cdbda3\"\n                name:\n                  type: string\n                  description: Sensor Name\n                  example: \"Temperature Sensor\"\n      responses:\n        '200':\n          description: Sensor created. The Sensor ID will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ID'\n        '400':\n          description: Bad Request. The sensor could not be created, maybe because a sensor with that ID already exists.\n  '/sensors/{id}':\n    get:\n      tags:\n        - Your Gateway\n      summary: Get a single Sensor\n      description: ''\n      parameters:\n        - name: id\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sensor'\n        '404':\n          description: No sensor with that ID found.\n    delete:\n      tags:\n        - Your Gateway\n      summary: Delete a single Sensor\n      description: ''\n      parameters:\n        - name: id\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: No sensor with that ID found.\n          \n  '/sensors/{id}/value':\n    get:\n      tags:\n        - Your Gateway\n      summary: Last Sensor Value\n      description: Get the last sensor value.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                description: Can be any value - string, number, boolean, array or object.\n                example: 45.20\n        '404':\n          description: No sensor with that ID found.\n    post:\n      tags:\n        - Your Gateway\n      summary: Set a Sensor Value\n      description: Upload a new value for this sensor.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The new sensor value. You can upload either a **value+time** or only a **value** (then the API uses the server time).\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - description: Can be any value - string, number, boolean, array or object.\n                  example: 7.25\n                - type: object\n                  properties:\n                    value:\n                      description: Can be any value - string, number, boolean, array or object.\n                      example: 7.25\n                    time:\n                      type: string\n                      description: Value time\n                      format: date-time\n                      example: \"2019-10-18T08:57:12.250Z\"\n            examples:\n              single:\n                value: 7.2\n                summary: Single value (without time)\n              time:\n                value:\n                  value: 7.25\n                  time: \"2019-10-18T08:57:12.250Z\"\n                summary: Value and Time\n      responses:\n        '200':\n          description: Sensor value created.\n        '400':\n          description: Bad Request. There may be no sensor with that id.\n          \n  '/sensors/{id}/values':\n    get:\n      tags:\n        - Your Gateway\n      summary: Sensor Values\n      description: List sensor values.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: from\n          description: Only values newer (not including) than this time.\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: to\n          description: Only values older (including) than this time.\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: limt\n          description: Maximum number of values to return.\n          schema:\n            type: number\n        - in: query\n          name: size\n          description: Maximum memory size of the response.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    time:\n                      type: string\n                      format: date-time\n                      description: Time this value was recieved.\n                    value: \n                      description: Can be any value - string, number, boolean, array or object.\n                example:\n                  - time: \"2019-05-13T13:00:00\"\n                    value: 7 \n                  - time: \"2019-05-13T13:01:00\"\n                    value: 8 \n                  - time: \"2019-05-13T13:02:00\"\n                    value: 7.5 \n                  - time: \"2019-05-13T13:03:00\"\n                    value: 7\n        '404':\n          description: No sensor with that ID found.\n    post:\n      tags:\n        - Your Gateway\n      summary: Upload multiple Values\n      description: Upload multiple new values for this sensor.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The new sensor values. You can upload either a list of **values+times** or only **values** (then the API uses the server time).\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: array\n                  items:\n                    description: Can be any value - string, number, boolean, array or object.\n                    example: 7.25\n                - type: array\n                  items:\n                    type: object\n                    properties:\n                      value:\n                        description: Can be any value - string, number, boolean, array or object.\n                        example: 7.25\n                      time:\n                        type: string\n                        description: Value time\n                        format: date-time\n                        example: \"2019-10-18T08:57:12.250Z\"\n            examples:\n              single:\n                value:\n                  - 7.2\n                  - 7.9\n                  - 8.1\n                summary: Values only\n              time:\n                value:\n                  - value: 7.25\n                    time: \"2019-10-18T08:57:00.000Z\"\n                  - value: 7.9\n                    time: \"2019-10-18T08:58:00.000Z\"\n                  - value: 8.1\n                    time: \"2019-10-18T08:59:00.000Z\"\n                summary: Value and Time\n      responses:\n        '200':\n          description: Sensor values created.\n        '400':\n          description: Bad Request. There may be no sensor with that id.\n          \n  '/sensors/{id}/meta':\n    post:\n      tags:\n        - Your Gateway\n      summary: Sensor Metadata\n      description: Change this sensors metadata. Metadata can be any object.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: New metadata. Metadata can be any object, so feel free to add new fields to the metadata object.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: true\n              properties:\n                syncInterval:\n                  type: string\n                  example: \"5m30s\"\n                doNotSync:\n                  type: boolean\n                  example: false\n            examples:\n              default:\n                value:\n                  syncInterval: \"5m\"\n                  doNotSync: false\n                summary: Default (5 min sync)\n              oneday:\n                value:\n                  syncInterval: \"24h\"\n                summary: Sync once a day\n              donotsync:\n                value:\n                  doNotSync: true\n                summary: Do not sync\n      responses:\n        '200':\n          description: Metadata updated.\n        '400':\n          description: Bad Request. There may be no sensor with that id.\n          \n  '/actuators':    \n    get:\n      tags:\n        - Your Gateway\n      summary: List Gateway Actuators\n      description: Return a list of actuators for this device.\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items: \n                  $ref: '#/components/schemas/Actuator'\n                example:\n                  - id: \"5da45ed64b9f614d30e93ab3\"\n                    name: \"Volt Level\"\n                    created: \"2019-10-14T11:41:10.814Z\"\n                    time: \"2019-10-14T11:41:10.811Z\"\n                    value: 5.00\n                  - id: \"5da97e3813474778618e2289\"\n                    name: \"LCD Output\"\n                    created: \"2019-10-18T08:56:59.635Z\"\n                    time: \"2019-10-18T08:57:12.250Z\"\n                    value: \"Hello World\"\n    post:\n      tags:\n        - Your Gateway\n      summary: Declare an Actuator\n      description: Create a new actuator on this device.\n      requestBody:\n        description: Actuator to be declared. The Actuator ID is not required - the Edge API will generate an ID for you.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                  description: Actuator ID\n                  example: \"201c85cdbda3\"\n                name:\n                  type: string\n                  description: Actuator Name\n                  example: \"Volt Level\"\n      responses:\n        '200':\n          description: Actuator created. The Actuator ID will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ID'\n        '400':\n          description: Bad Request. The actuator could not be created, maybe because a actuator with that ID already exists.\n          \n  '/actuators/{id}':\n    get:\n      tags:\n        - Your Gateway\n      summary: Get a single Actuator\n      description: ''\n      parameters:\n        - name: id\n          in: path\n          description: ID of the actuator\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n               $ref: '#/components/schemas/Actuator'\n        '404':\n          description: No actuator with that ID found.\n    delete:\n      tags:\n        - Your Gateway\n      summary: Delete a single Actuator\n      description: ''\n      parameters:\n        - name: id\n          in: path\n          description: ID of the actuator\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: No actuator with that ID found.\n         \n  '/actuators/{id}/value':\n    get:\n      tags:\n        - Your Gateway\n      summary: Actuator Value\n      description: Get the actuator value.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the actuator\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                description: Can be any value - string, number, boolean, array or object.\n                example: 45.20\n        '404':\n          description: No atuator with that ID found.\n    post:\n      tags:\n        - Your Gateway\n      summary: Set an Actuator Value\n      description: Change the value of this actuator.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the actuator\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The new actuator value.\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: string\n                - type: object\n                  properties:\n                    value:\n                      description: Can be any value - string, number, boolean, array or object.\n                      example: 45.20\n                    time:\n                      type: string\n                      description: Value time\n                      format: date-time\n                      example: \"2019-10-18T08:57:12.250Z\"\n      responses:\n        '200':\n          description: Actuator value created.\n        '400':\n          description: Bad Request. The actuator could not be created, maybe because a actuator with that ID already exists.\n\n# Devices #######################################################################################################\n\n  '/devices':\n    get:\n      tags:\n        - Devices\n      summary: List all Devices\n      description: Returns a list of all devices.\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Device'\n    post:\n      tags:\n        - Devices\n      summary: Declare a new Device\n      description: Add a new deivce to the list of devices.\n      requestBody:\n        description: Device to be declared. Device and Sensor/Actuator IDs are not required - the Edge API will generate an ID for you.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                  description: Gateway ID\n                  example: \"201c85cdbda3\"\n                name:\n                  type: string\n                  description: Gateway Name\n                  example: My New Gateway\n                sensors:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        description: Sensor ID\n                        example: \"201c85cdbda3\"\n                      name:\n                        type: string\n                        description: Sensor Name\n                        example: \"Temperature Sensor\"\n                  example:\n                    - id: \"5da45ed64b9f614d30e93ab3\"\n                      name: \"Temperature Sensor\"\n                    - id: \"5da97e3813474778618e2289\"\n                      name: \"Water Level Sensor\"\n                actuators:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        description: Actuator ID\n                        example: \"5da9950370942108c65b73c6\"\n                      name:\n                        type: string\n                        description: Actuator Name\n                        example: \"Volt Level\"\n                    \n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ID'\n\n  '/devices/{id}':\n    get:\n      tags:\n        - Devices\n      summary: Get a Device\n      description: This deletes the device, its sensors and actuators. This also removes all stored values of the sensors and actuators.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n        '404':\n          description: No device with that ID found.\n    delete:\n      tags:\n        - Devices\n      summary: Delete a Device\n      description: This deletes the device, its sensors and actuators. This also removes all stored values of the sensors and actuators.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: No device with that ID found.\n          \n  '/devices/{id}/name':\n    post:\n      tags:\n        - Devices\n      summary: Change Device Name\n      description: Change the name of this device.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: new device name\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n              example: \"New Name 2\"\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: No device with that ID found.\n          \n  '/devices/{id}/meta':\n    post:\n      tags:\n        - Devices\n      summary: Change Device Metadata\n      description: Change this devices metadata. Metadata can be any object.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: New metadata. Metadata can be any object, so feel free to add new fields to the metadata object.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: true\n              properties:\n                syncInterval:\n                  type: string\n                  example: \"5m30s\"\n                doNotSync:\n                  type: boolean\n                  example: false\n            examples:\n              default:\n                value:\n                  syncInterval: \"5m\"\n                  doNotSync: false\n                summary: Default (5 min sync)\n              oneday:\n                value:\n                  syncInterval: \"24h\"\n                summary: Sync once a day\n              donotsync:\n                value:\n                  doNotSync: true\n                summary: Do not sync\n      responses:\n        '200':\n          description: Metadata updated.\n        '400':\n          description: Bad Request. There may be no sensor with that id.\n\n# Sensors ######################################################################################################\n\n  '/devices/{deviceID}/sensors':\n    get:\n      tags:\n        - Sensors\n      summary: List Device Sensors\n      description: Return a list of sensors for this device.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items: \n                  $ref: '#/components/schemas/Sensor'\n                example:\n                  - id: \"5da45ed64b9f614d30e93ab3\"\n                    name: \"Tempature Sensor\"\n                    created: \"2019-10-14T11:41:10.814Z\"\n                    time: \"2019-10-14T11:41:10.811Z\"\n                    value: 40.21\n                  - id: \"5da97e3813474778618e2289\"\n                    name: \"Water Level Sensor\"\n                    created: \"2019-10-18T08:56:59.635Z\"\n                    time: \"2019-10-18T08:57:12.250Z\"\n                    value: 0.52\n    post:\n      tags:\n        - Sensors\n      summary: Declare a Sensor\n      description: Create a new sensor on this device.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Sensor to be declared. The Sensor ID is not required - the Edge API will generate an ID for you.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                  description: Sensor ID\n                  example: \"201c85cdbda3\"\n                name:\n                  type: string\n                  description: Sensor Name\n                  example: \"Temperature Sensor\"\n      responses:\n        '200':\n          description: Sensor created. The Sensor ID will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ID'\n        '400':\n          description: Bad Request. The sensor could not be created, maybe because a sensor with that ID already exists.\n\n  '/devices/{deviceID}/sensors/{sensorID}':\n    get:\n      tags:\n        - Sensors\n      summary: Get a single Sensor\n      description: ''\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: sensorID\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sensor'\n        '404':\n          description: No device and sensor with that ID found.\n    delete:\n      tags:\n        - Sensors\n      summary: Delete a Sensor\n      description: This deletes the sensor and all its values.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: sensorID\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: No device with that ID found.\n\n  '/devices/{deviceID}/sensors/{sensorID}/value':\n    get:\n      tags:\n        - Sensors\n      summary: Last Sensor Value\n      description: Get the last sensor value.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: sensorID\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                description: Can be any value - string, number, boolean, array or object.\n                example: 45.20\n        '404':\n          description: No sensor with that ID found.\n    post:\n      tags:\n        - Sensors\n      summary: Set a Sensor Value\n      description: Upload a new value for this sensor.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: sensorID\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The new sensor value. You can upload either a **value+time** or only a **value** (then the API uses the server time).\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - description: Can be any value - string, number, boolean, array or object.\n                  example: 7.25\n                - type: object\n                  properties:\n                    value:\n                      description: Can be any value - string, number, boolean, array or object.\n                      example: 7.25\n                    time:\n                      type: string\n                      description: Value time\n                      format: date-time\n                      example: \"2019-10-18T08:57:12.250Z\"\n            examples:\n              single:\n                value: 7.2\n                summary: Single value (without time)\n              time:\n                value:\n                  value: 7.25\n                  time: \"2019-10-18T08:57:12.250Z\"\n                summary: Value and Time\n      responses:\n        '200':\n          description: Sensor value created.\n        '400':\n          description: Bad Request. There may be no sensor with that id.\n          \n  '/devices/{deviceID}/sensors/{sensorID}/values':\n    get:\n      tags:\n        - Sensors\n      summary: Sensor Values\n      description: List sensor values.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: sensorID\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: from\n          description: Only values newer (not including) than this time.\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: to\n          description: Only values older (including) than this time.\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: limt\n          description: Maximum number of values to return.\n          schema:\n            type: number\n        - in: query\n          name: size\n          description: Maximum memory size of the response.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    time:\n                      type: string\n                      format: date-time\n                      description: Time this value was recieved.\n                    value: \n                      description: Can be any value - string, number, boolean, array or object.\n                example:\n                  - time: \"2019-05-13T13:00:00\"\n                    value: 7 \n                  - time: \"2019-05-13T13:01:00\"\n                    value: 8 \n                  - time: \"2019-05-13T13:02:00\"\n                    value: 7.5 \n                  - time: \"2019-05-13T13:03:00\"\n                    value: 7\n        '404':\n          description: No sensor with that ID found.\n    post:\n      tags:\n        - Sensors\n      summary: Upload multiple Values\n      description: Upload multiple new values for this sensor.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: sensorID\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The new sensor values. You can upload either a list of **values+times** or only **values** (then the API uses the server time).\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: array\n                  items:\n                    description: Can be any value - string, number, boolean, array or object.\n                    example: 7.25\n                - type: array\n                  items:\n                    type: object\n                    properties:\n                      value:\n                        description: Can be any value - string, number, boolean, array or object.\n                        example: 7.25\n                      time:\n                        type: string\n                        description: Value time\n                        format: date-time\n                        example: \"2019-10-18T08:57:12.250Z\"\n            examples:\n              single:\n                value:\n                  - 7.2\n                  - 7.9\n                  - 8.1\n                summary: Values only\n              time:\n                value:\n                  - value: 7.25\n                    time: \"2019-10-18T08:57:00.000Z\"\n                  - value: 7.9\n                    time: \"2019-10-18T08:58:00.000Z\"\n                  - value: 8.1\n                    time: \"2019-10-18T08:59:00.000Z\"\n                summary: Value and Time\n      responses:\n        '200':\n          description: Sensor values created.\n        '400':\n          description: Bad Request. There may be no sensor with that id.\n          \n  '/devices/{deviceID}/sensors/{sensorID}/meta':\n    post:\n      tags:\n        - Sensors\n      summary: Sensor Metadata\n      description: Change this sensors metadata. Metadata can be any object.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: sensorID\n          in: path\n          description: ID of the sensor\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: New metadata. Metadata can be any object, so feel free to add new fields to the metadata object.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: true\n              properties:\n                syncInterval:\n                  type: string\n                  example: \"5m30s\"\n                doNotSync:\n                  type: boolean\n                  example: false\n            examples:\n              default:\n                value:\n                  syncInterval: \"5m\"\n                  doNotSync: false\n                summary: Default (5 min sync)\n              oneday:\n                value:\n                  syncInterval: \"24h\"\n                summary: Sync once a day\n              donotsync:\n                value:\n                  doNotSync: true\n                summary: Do not sync\n      responses:\n        '200':\n          description: Metadata updated.\n        '400':\n          description: Bad Request. There may be no sensor with that id.\n\n# Actuators ####################################################################################################\n\n  '/devices/{deviceID}/actuators':\n    get:\n      tags:\n        - Actuators\n      summary: List Device Actuators\n      description: Return a list of actuators for this device.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items: \n                  $ref: '#/components/schemas/Actuator'\n                example:\n                  - id: \"5da45ed64b9f614d30e93ab3\"\n                    name: \"LCD Display\"\n                    created: \"2019-10-14T11:41:10.814Z\"\n                    time: \"2019-10-14T11:41:10.811Z\"\n                    value: \"Hello World\"\n    post:\n      tags:\n        - Actuators\n      summary: Declare an Actuator\n      description: Create a new actuator on this device.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Actuator to be declared. The Actuator ID is not required - the Edge API will generate an ID for you.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                  description: Actuator ID\n                  example: \"201c85cdbda3\"\n                name:\n                  type: string\n                  description: Sensor Name\n                  example: LCD Display\n      responses:\n        '200':\n          description: Actuator created. The Actuator ID will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ID'\n        '400':\n          description: Bad Request. The actuator could not be created, maybe because an actuator with that ID already exists.\n\n  '/devices/{deviceID}/actuators/{actuatorID}':\n    get:\n      tags:\n        - Actuators\n      summary: Get a single Actuator\n      description: ''\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: actuatorID\n          in: path\n          description: ID of the actuator\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Actuator'\n        '404':\n          description: No device and actuator with that ID found.\n    delete:\n      tags:\n        - Actuators\n      summary: Delete an Actuator\n      description: This deletes the actuator.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: actuatorID\n          in: path\n          description: ID of the actuator\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: No device with that ID found.\n\n  '/devices/{deviceID}/sensors/{actuatorID}/value':\n    get:\n      tags:\n        - Actuators\n      summary: Last Actuator Value\n      description: Get the last actuator value.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: actuatorID\n          in: path\n          description: ID of the actuator\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                description: Can be any value - string, number, boolean, array or object.\n                example: 45.20\n        '404':\n          description: No actuator with that ID found.\n    post:\n      tags:\n        - Actuators\n      summary: Set an Actuator Value\n      description: Upload a new value for this actuator.\n      parameters:\n        - name: deviceID\n          in: path\n          description: ID of the device\n          required: true\n          schema:\n            type: string\n        - name: actuatorID\n          in: path\n          description: ID of the actuator\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The new actuator value. You can upload either a **value+time** or only a **value** (then the API uses the server time).\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - description: Can be any value - string, number, boolean, array or object.\n                  example: 7.25\n                - type: object\n                  properties:\n                    value:\n                      description: Can be any value - string, number, boolean, array or object.\n                      example: 7.25\n                    time:\n                      type: string\n                      description: Value time\n                      format: date-time\n                      example: \"2019-10-18T08:57:12.250Z\"\n            examples:\n              single:\n                value: 7.2\n                summary: Single value (without time)\n              time:\n                value:\n                  value: 7.25\n                  time: \"2019-10-18T08:57:12.250Z\"\n                summary: Value and Time\n      responses:\n        '200':\n          description: Actuator value created.\n        '400':\n          description: Bad Request. There may be no actuator with that id.\n\n# Clouds #######################################################################################################\n\n  '/clouds':\n    get:\n      tags:\n        - Clouds\n      summary: List Clouds\n      description: Return a list of clouds this gateway is synchronizing.\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/Cloud'\n                example:\n                  \"5cebcfa04b9f6119688b3cdc\":\n                    id: \"5cebcfa04b9f6119688b3cdc\"\n                    paused: true\n                    pausing: false\n                    pausing_mqtt: false\n                    rest: \"//api.waziup.io/api/v2\"\n                    mqtt: \"\"\n                    credentials:\n                      username: \"your username\"\n                      token: \"your password\"\n                    statusCode: 0\n                    statusText: \"\"\n    post:\n      tags:\n        - Clouds\n      summary: Declare a Cloud\n      description: Create a new cloud configuration to enable synchronization.\n      requestBody:\n        description: \"Cloud configuration. If `paused: false` then the Gateway will start synchonization immediately.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                  description: Cloud ID\n                  example: \"5cebcfa04b9f6119688b3cdc\"\n                paused:\n                  type: boolean\n                  description: Paused Synchonization\n                  example: true\n                rest:\n                  type: string\n                  description: Waziup Cloud REST address\n                  example: \"//api.waziup.io/api/v2\"\n                mqtt:\n                  type: string\n                  description: Waziup Cloud MQTT address (can be empty)\n                  example: \"\"\n                credentials:\n                  type: object\n                  properties:\n                    username:\n                      type: string\n                      description: Username\n                      example: my username\n                    token:\n                      type: string\n                      description: Password\n                      example: my password\n      responses:\n        '200':\n          description: Sensor created. The Sensor ID will be returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ID'\n        '400':\n          description: Bad Request. The sensor could not be created, maybe because a sensor with that ID already exists.\n    \n  '/clouds/{id}':\n    get:\n      tags:\n        - Clouds\n      summary: Get a Cloud\n      description: \"\"\n      parameters:\n        - name: id\n          in: path\n          description: ID of the cloud\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/Cloud'\n                example:\n                  id: \"5cebcfa04b9f6119688b3cdc\"\n                  paused: true\n                  pausing: false\n                  pausing_mqtt: false\n                  rest: \"//api.waziup.io/api/v2\"\n                  mqtt: \"\"\n                  credentials:\n                    username: \"your username\"\n                    token: \"your password\"\n                  statusCode: 0\n                  statusText: \"\"\n        '404':\n          description: Bad Request. There may be no cloud with that id.\n    delete:\n      tags:\n        - Clouds\n      summary: Remove a Cloud\n      description: \"\"\n      parameters:\n        - name: id\n          in: path\n          description: ID of the cloud\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: Bad Request. There may be no cloud with that id.\n    \n  '/clouds/{id}/paused':\n    post:\n      tags:\n        - Clouds\n      summary: Start \u0026 Stop synchonization\n      description: \"\"\n      parameters:\n        - name: id\n          in: path\n          description: ID of the cloud\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: \"Use `paused: true` to stop synchonization and `paused: false` to start synchonization.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: boolean\n            examples:\n              start:\n                value: true\n                summary: stop synchonization\n              stop:\n                value: false\n                summary: start synchonization\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: Bad Request. There may be no cloud with that id.\n          \n  '/clouds/{id}/credentials':\n    post:\n      tags:\n        - Clouds\n      summary: Change Credentials\n      description: Change your credentials that are used for the synchronization.\n      parameters:\n        - name: id\n          in: path\n          description: ID of the cloud\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: \"Your credentials: Username and password.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  description: Username\n                  example: my username\n                token:\n                  type: string\n                  description: Password\n                  example: my password\n      responses:\n        '200':\n          description: Successful Operation\n        '404':\n          description: Bad Request. There may be no cloud with that id.\n  '/clouds/{id}/status':\n    get:\n      tags:\n        - Clouds\n      summary: Get Sync Status\n      description:\n        Get details about the synchronization status of all entities.\n        \n        \n        You can subscribe to this topic to recieve new statuses in realtime!\n      parameters:\n        - name: id\n          in: path\n          description: ID of the cloud\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                description: Cloud synchronization status.\n                type: array\n                items:\n                  type: object\n                  properties:\n                    entity:\n                      description: Device, Sensor or Actuator\n                      type: object\n                      properties:\n                        device:\n                          type: string\n                        sensor:\n                          type: string\n                        actuator:\n                          type: string\n                    status:\n                      description: Synchronization status\n                      type: object\n                      properties:\n                        action:\n                          type: array\n                          description: \"Required actions: sync, create, modify\"\n                          items:\n                            type: string\n                        remote:\n                          type: string\n                          description: \"Cloud time of the last value\"\n                          format: date-time\n                        sleep:\n                          description: \"Duration this entity accumulates\"\n                          type: integer\n                        wakeup:\n                          type: string\n                          description: \"Time this entity will sync again\"\n                          format: date-time\n                example:\n                  - entity:\n                      device: \"00155d00641b\"\n                      sensor: \"5da45ed64b9f614d30e93ab3\"\n                    status:\n                      action: [\"sync\"]\n                      remote: \"2019-10-25T12:57:00\"\n                      sleep: 300000000000\n                      wakeup: \"2019-10-25T13:00:00\"\n        '404':\n          description: Bad Request. There may be no cloud with that id.\n  '/clouds/{id}/events':\n    get:\n      tags:\n        - Clouds\n      summary: Events\n      description: The events lists holds Events that happend during the synchronization like errors or successes, communication errors, pause \u0026 resume details and more.\n      \n      \n        You can subscribe to this topic to recieve new events in realtime!\n      parameters:\n        - name: id\n          in: path\n          description: ID of the cloud\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation. Codes are taken from HTTP status codes, which means 2XX indicates success, 4XX indicates client (Gateway) errors and 5XX means remote (Cloud) errors. Additional, 0XX indicates network errors.\n            The message text is always a heading and some description text.\n          content:\n            application/json:\n              schema:\n                description: Cloud synchronization status.\n                type: array\n                items:\n                  type: object\n                  properties:\n                    code:\n                      description: Event code\n                      type: integer\n                    msg:\n                      description: Event message or text\n                      type: string\n                    time:\n                      description: Event time\n                      type: string\n                      format: date-time\n                example:\n                  - code: 200\n                    msg: Authentication successfull.\n                    time: \"2019-11-04T08:47:16.9884308+01:00\"\n                  - code: 401\n                    msg: \"Authentication failed.\\n401 \\\"Unauthorized\\\"\"\n                    time: \"2019-11-04T09:05:55.9064228+01:00\"\n                  - code: 205\n                    msg: \"Gateway already registered.\"\n                    time: \"2019-11-04T09:05:55.9602334+01:00\"\n        '404':\n          description: Bad Request. There may be no cloud with that id.\n\n# Apps ##########################################################################################\n\n  '/apps':\n    get:\n      tags:\n        - Apps\n      summary: List Apps\n      description: Apps are docker containers. They can be active (running) or inactive (stopped).\n      parameters:\n        - name: internal\n          in: query\n          description: Include internal apps.\n          required: false\n          schema:\n            type: boolean\n            example: false\n        - name: updates\n          in: query\n          description: Check if a newer app version (a newer image from the Docker Hub) is available. This will query the docker registry.\n          required: false\n          schema:\n            type: boolean\n            example: false\n      responses:\n        '200':\n          description: Successful Operation.\n        '500':\n          description: The was an internal error maybe because the docker daemon did not respond or because there was no internet connection to perform the updates check.\n    post:\n      tags:\n        - Apps\n      summary: Install new Apps\n      description: Fetch the given image from the docker repository. Calling this api will use a `docker pull` internally and create a container from the image.\n      requestBody:\n        description: Image data\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                image:\n                  type: string\n                  description: Image name\n                  example: \"waziup/wazigate-lora:V1.2\"\n      responses:\n        '200':\n          description: Successful Operation.\n        '400':\n          description: There is no image with that name.\n        '500':\n          description: The was an internal error maybe because the docker daemon did not respond or because there was no internet connection to perform this action.\n          \n  '/apps/{name}':\n    parameters:\n      - name: name\n        in: path\n        description: Name of the app.\n        required: true\n        schema:\n          type: string\n          example: \"wazigate-lora\"\n    get:\n      tags:\n        - Apps\n      summary: Get App data\n      description: Apps are docker containers.\n      responses:\n        '200':\n          description: Successful Operation.\n        '404':\n          description: There is no app (Docker Container) with that name.\n    post:\n      tags:\n        - Apps\n      summary: Manage an App, Start \u0026 Stop\n      description: Start or stop an App.\n      parameters:\n        - name: start\n          in: query\n          description: Start an app.\n          required: false\n          schema:\n            type: boolean\n            example: false\n        - name: stop\n          in: query\n          description: Stop an app.\n          required: false\n          schema:\n            type: boolean\n            example: false\n      responses:\n        '200':\n          description: Successful Operation.\n        '404':\n          description: There is no container with that name.\n        '500':\n          description: The was an internal error maybe because the docker daemon did not respond.\n    delete:\n      tags:\n        - Apps\n      summary: Delete an App\n      description: Apps are docker containers. The App must be stopped to perform this operation. This action wil delete the Docker Container and the Docker Image.\n      responses:\n        '200':\n          description: Successful Operation.\n        '404':\n          description: There is no image with that name.\n        '500':\n          description: There was an internal error maybe because the docker daemon did not respond or it refused to delete the container or the image.\n          \n  '/apps/{name}/{path}':\n    parameters:\n      - name: name\n        in: path\n        description: Name of the App.\n        required: true\n        schema:\n          type: string\n          example: \"wazigate-lora\"\n      - name: path\n        in: path\n        description: Proxy path.\n        required: true\n        schema:\n          type: string\n          example: \"index.html\"\n    get:\n      tags:\n        - Apps\n      summary: Apps Proxy\n      description:\n        Get app files through the apps proxy.\n\n        All apps should host a http server that is listening on `WAZIGATE_ADDR` which is a environment variable given to the container. Wazigate-compatible containers are required to expose a `package.json` file on http root level.\n      responses:\n        '200':\n          description: Successful Operation.\n        '404':\n          description: There is no app with that name or the app returned a 404 error.\n        '500':\n          description: The was an internal error.\n      \n      \n# System #######################################################################################################\n\n  '/sys/uptime':\n    get:\n      tags:\n        - System\n      summary: Uptime\n      description: System Uptime\n      responses:\n        '200':\n          description: System Uptime\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"4h23m2.6939534s\"\n      \n#################################################################################################################\n\ncomponents:\n  schemas:\n    ID:\n      type: string\n      example: \"201c85cdbda3\"\n    Sensor:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Sensor ID\n          example: \"201c85cdbda3\"\n        name:\n          type: string\n          description: Sensor Name\n          example: \"Temperature Sensor\"\n        modified:\n          type: string\n          description: Last time the sensor was modified by changing the name.\n          format: date-time\n          example: \"2019-10-14T11:41:10.814Z\"\n        created:\n          type: string\n          description: Time the sensor was created.\n          format: date-time\n          example: \"2019-10-14T11:41:10.814Z\"\n        time:\n          type: string\n          description: Last time a value was recieved.\n          format: date-time\n          example: \"2019-10-14T11:41:10.814Z\"\n        value:\n          description: Can be any value - string, number, boolean, array or object.\n    Actuator:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Actuator ID\n          example: \"201c85cdbda3\"\n        name:\n          type: string\n          description: Actuator Name\n          example: \"Volt Level\"\n        modified:\n          type: string\n          description: Last time the actuator was modified by changing the name.\n          format: date-time\n          example: \"2019-10-14T11:41:10.814Z\"\n        created:\n          type: string\n          description: Time the actuator was created.\n          format: date-time\n          example: \"2019-10-14T11:41:10.814Z\"\n        time:\n          type: string\n          description: Last time a value was recieved.\n          format: date-time\n          example: \"2019-10-14T11:41:10.814Z\"\n        value:\n          description: Can be any value - string, number, boolean, array or object.\n    Device:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Device ID\n          example: \"00155d00641b\"\n        name:\n          type: string\n          description: Device Name\n          example: \"My Gateway\"\n        modified:\n          type: string\n          description: Last time the gateway was modified by changing the name.\n          format: date-time\n          example: \"2019-10-14T11:41:10.814Z\"\n        created:\n          type: string\n          description: Time the gateway was created.\n          format: date-time\n          example: \"2019-10-14T11:41:10.814Z\"\n        sensors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Sensor'\n        actuators:\n          type: array\n          items:\n            $ref: '#/components/schemas/Actuator'\n    Cloud:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Cloud ID\n          example: \"5cebcfa04b9f6119688b3cdc\"\n        paused:\n          type: boolean\n          description: If the Cloud is paused (not synchronizing).\n          example: true\n        pausing:\n          type: boolean\n          description: If the Cloud is about to stop synchronizing.\n          example: false\n        pausing_mqtt:\n          type: boolean\n          description: If the Cloud is about to stop synchronizing via mqtt.\n          example: false\n        rest:\n          type: string\n          description: Waziup Cloud REST address\n          example: \"//api.waziup.io/api/v2\"\n        mqtt:\n          type: string\n          description: Waziup Cloud MQTT address (can be empty)\n          example: \"\"\n        credentials:\n          type: object\n          description: Your Cloud Credentials\n          properties:\n            username:\n              type: string\n              description: Username\n              example: \"my username\"\n            token:\n              type: string\n              description: Password\n              example: \"my password\"\nexternalDocs:\n  description: Find out more about Swagger\n  url: 'http://swagger.io'\n",
			"canonicalURL": "/github.com/Waziup/wazigate-edge@7bb5e7d63476e7b6fa6ed33c5751b2e15b9d674b/-/blob/www/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Waziup/wazigate-edge/blob/7bb5e7d63476e7b6fa6ed33c5751b2e15b9d674b/www/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at www/docs/openapi.yaml:886:3: duplicate path: \"/devices/{deviceID}/sensors/{sensorID}/value\""
}