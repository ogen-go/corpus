{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-containeranalysis-v1alpha1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-containeranalysis-v1alpha1-swagger.yaml",
			"byteSize": 93377,
			"content": "openapi: 3.0.0\nx-hasEquivalentPaths: true\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: An implementation of the Grafeas API, which stores, and enables querying and\n    retrieval of critical metadata about all of your software artifacts.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Container Analysis\n  version: v1alpha1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://containeranalysis.googleapis.com/$discovery/rest?version=v1alpha1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: containeranalysis\nexternalDocs:\n  url: https://cloud.google.com/container-analysis/api/reference/rest/\ntags:\n  - name: projects\n  - name: providers\npaths:\n  \"/v1alpha1/{name}\":\n    delete:\n      description: Deletes the given `Note` from the system.\n      operationId: containeranalysis.providers.notes.delete\n      parameters:\n        - description: |-\n            The name of the note in the form of\n            \"providers/{provider_id}/notes/{NOTE_ID}\"\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\n    get:\n      description: Returns the requested `Note`.\n      operationId: containeranalysis.providers.notes.get\n      parameters:\n        - description: |-\n            The name of the note in the form of\n            \"providers/{provider_id}/notes/{NOTE_ID}\"\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Note\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    patch:\n      description: Updates an existing `Note`.\n      operationId: containeranalysis.providers.notes.patch\n      parameters:\n        - description: |-\n            The name of the note.\n            Should be of the form \"projects/{provider_id}/notes/{note_id}\".\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: The fields to update.\n          in: query\n          name: updateMask\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Note\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Note\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\n  \"/v1alpha1/{name}/notes\":\n    get:\n      description: Lists all `Notes` for a given project.\n      operationId: containeranalysis.providers.notes.list\n      parameters:\n        - description: The filter expression.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: |-\n            The name field will contain the project Id for example:\n            \"providers/{provider_id}\n            @Deprecated\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: Number of notes to return in the list.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: Token to provide to skip to a particular spot in the list.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: 'This field contains the project Id for example:\n            \"projects/{PROJECT_ID}\".'\n          in: query\n          name: parent\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListNotesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: Creates a new `Note`.\n      operationId: containeranalysis.providers.notes.create\n      parameters:\n        - description: |-\n            The name of the project.\n            Should be of the form \"providers/{provider_id}\".\n            @Deprecated\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: The ID to use for this note.\n          in: query\n          name: noteId\n          schema:\n            type: string\n        - description: |-\n            This field contains the project Id for example:\n            \"projects/{project_id}\n          in: query\n          name: parent\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Note\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Note\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\n  \"/v1alpha1/{name}/occurrences\":\n    get:\n      description: |-\n        Lists `Occurrences` referencing the specified `Note`. Use this method to\n        get all occurrences referencing your `Note` across all your customer\n        projects.\n      operationId: containeranalysis.providers.notes.occurrences.list\n      parameters:\n        - description: The filter expression.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: |-\n            The name field will contain the note name for example:\n              \"provider/{provider_id}/notes/{note_id}\"\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: Number of notes to return in the list.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: Token to provide to skip to a particular spot in the list.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListNoteOccurrencesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1alpha1/{parent}/notes\":\n    get:\n      description: Lists all `Notes` for a given project.\n      operationId: containeranalysis.projects.notes.list\n      parameters:\n        - description: The filter expression.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: |-\n            The name field will contain the project Id for example:\n            \"providers/{provider_id}\n            @Deprecated\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Number of notes to return in the list.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: Token to provide to skip to a particular spot in the list.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: 'This field contains the project Id for example:\n            \"projects/{PROJECT_ID}\".'\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListNotesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: Creates a new `Note`.\n      operationId: containeranalysis.projects.notes.create\n      parameters:\n        - description: |-\n            The name of the project.\n            Should be of the form \"providers/{provider_id}\".\n            @Deprecated\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: The ID to use for this note.\n          in: query\n          name: noteId\n          schema:\n            type: string\n        - description: |-\n            This field contains the project Id for example:\n            \"projects/{project_id}\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Note\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Note\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n  \"/v1alpha1/{parent}/occurrences\":\n    get:\n      description: Lists active `Occurrences` for a given project matching the filters.\n      operationId: containeranalysis.projects.occurrences.list\n      parameters:\n        - description: The filter expression.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: The kind of occurrences to filter on.\n          in: query\n          name: kind\n          schema:\n            type: string\n            enum:\n              - KIND_UNSPECIFIED\n              - PACKAGE_VULNERABILITY\n              - BUILD_DETAILS\n              - IMAGE_BASIS\n              - PACKAGE_MANAGER\n              - DEPLOYABLE\n              - DISCOVERY\n              - ATTESTATION_AUTHORITY\n              - UPGRADE\n        - description: |-\n            The name field contains the project Id. For example:\n            \"projects/{project_id}\n            @Deprecated\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Number of occurrences to return in the list.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: Token to provide to skip to a particular spot in the list.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: \"This contains the project Id for example: projects/{project_id}.\"\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListOccurrencesResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Creates a new `Occurrence`. Use this method to create `Occurrences`\n        for a resource.\n      operationId: containeranalysis.projects.occurrences.create\n      parameters:\n        - description: \u003e-\n            The name of the project.  Should be of the form\n            \"projects/{project_id}\".\n\n            @Deprecated\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: 'This field contains the project Id for example:\n            \"projects/{project_id}\"'\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Occurrence\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Occurrence\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n  \"/v1alpha1/{parent}/occurrences:vulnerabilitySummary\":\n    get:\n      description: Gets a summary of the number and severity of occurrences.\n      operationId: containeranalysis.projects.occurrences.getVulnerabilitySummary\n      parameters:\n        - description: The filter expression.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: \"This contains the project Id for example: projects/{project_id}\"\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GetVulnzOccurrencesSummaryResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1alpha1/{parent}/operations\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: Creates a new `Operation`.\n      operationId: containeranalysis.projects.operations.create\n      parameters:\n        - description: The project Id that this operation should be created under.\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateOperationRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n  \"/v1alpha1/{parent}/scanConfigs\":\n    get:\n      description: Lists scan configurations for a project.\n      operationId: containeranalysis.projects.scanConfigs.list\n      parameters:\n        - description: The filter expression.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: The number of items to return.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: The page token to use for the next request.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: \"This containers the project Id i.e.: projects/{project_id}\"\n          in: path\n          name: parent\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListScanConfigsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1alpha1/{resource}:getIamPolicy\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Gets the access control policy for a note or an `Occurrence` resource.\n\n        Requires `containeranalysis.notes.setIamPolicy` or\n\n        `containeranalysis.occurrences.setIamPolicy` permission if the resource is\n\n        a note or occurrence, respectively.\n\n        Attempting to call this method on a resource without the required\n\n        permission will result in a `PERMISSION_DENIED` error. Attempting to call\n\n        this method on a non-existent resource will result in a `NOT_FOUND` error\n\n        if the user has list permission on the project, or a `PERMISSION_DENIED`\n\n        error otherwise. The resource takes the following formats:\n\n        `projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for occurrences and\n\n        projects/{PROJECT_ID}/notes/{NOTE_ID} for notes\n      operationId: containeranalysis.providers.notes.getIamPolicy\n      parameters:\n        - description: \u003e-\n            REQUIRED: The resource for which the policy is being requested.\n\n            See the operation documentation for the appropriate value for this field.\n          in: path\n          name: resource\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetIamPolicyRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Policy\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\n  \"/v1alpha1/{resource}:setIamPolicy\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Sets the access control policy on the specified `Note` or `Occurrence`.\n\n        Requires `containeranalysis.notes.setIamPolicy` or\n\n        `containeranalysis.occurrences.setIamPolicy` permission if the resource is\n\n        a `Note` or an `Occurrence`, respectively.\n\n        Attempting to call this method without these permissions will result in a `\n\n        `PERMISSION_DENIED` error.\n\n        Attempting to call this method on a non-existent resource will result in a\n\n        `NOT_FOUND` error if the user has `containeranalysis.notes.list` permission\n\n        on a `Note` or `containeranalysis.occurrences.list` on an `Occurrence`, or\n\n        a `PERMISSION_DENIED` error otherwise. The resource takes the following\n\n        formats: `projects/{projectid}/occurrences/{occurrenceid}` for occurrences\n\n        and projects/{projectid}/notes/{noteid} for notes\n      operationId: containeranalysis.providers.notes.setIamPolicy\n      parameters:\n        - description: \u003e-\n            REQUIRED: The resource for which the policy is being specified.\n\n            See the operation documentation for the appropriate value for this field.\n          in: path\n          name: resource\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SetIamPolicyRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Policy\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\n  \"/v1alpha1/{resource}:testIamPermissions\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Returns the permissions that a caller has on the specified note or\n\n        occurrence resource. Requires list permission on the project (for example,\n\n        \"storage.objects.list\" on the containing bucket for testing permission of\n\n        an object). Attempting to call this method on a non-existent resource will\n\n        result in a `NOT_FOUND` error if the user has list permission on the\n\n        project, or a `PERMISSION_DENIED` error otherwise. The resource takes the\n\n        following formats: `projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for\n\n        `Occurrences` and `projects/{PROJECT_ID}/notes/{NOTE_ID}` for `Notes`\n      operationId: containeranalysis.providers.notes.testIamPermissions\n      parameters:\n        - description: \u003e-\n            REQUIRED: The resource for which the policy detail is being\n            requested.\n\n            See the operation documentation for the appropriate value for this field.\n          in: path\n          name: resource\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TestIamPermissionsRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/TestIamPermissionsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - providers\nservers:\n  - url: https://containeranalysis.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  requestBodies:\n    Note:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Note\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n  schemas:\n    Artifact:\n      description: Artifact describes a build product.\n      properties:\n        checksum:\n          description: \u003e-\n            Hash or checksum value of a binary, or Docker Registry 2.0 digest of\n            a\n\n            container.\n          type: string\n        id:\n          description: \u003e-\n            Artifact ID, if any; for container images, this will be a URL by\n            digest\n\n            like gcr.io/projectID/imagename@sha256:123456\n          type: string\n        name:\n          description: \u003e-\n            Name of the artifact. This may be the path to a binary or jar file,\n            or in\n\n            the case of a container build, the name used to push the container image to\n\n            Google Container Registry, as presented to `docker push`.\n\n\n            This field is deprecated in favor of the plural `names` field; it continues\n\n            to exist here to allow existing BuildProvenance serialized to json in\n\n            google.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes to\n\n            deserialize back into proto.\n          type: string\n        names:\n          description: \u003e-\n            Related artifact names. This may be the path to a binary or jar\n            file, or in\n\n            the case of a container build, the name used to push the container image to\n\n            Google Container Registry, as presented to `docker push`. Note that a\n\n            single Artifact ID can have multiple names, for example if two tags are\n\n            applied to one image.\n          items:\n            type: string\n          type: array\n      type: object\n    Attestation:\n      description: \u003e-\n        Occurrence that represents a single \"attestation\".  The authenticity of\n        an\n\n        Attestation can be verified using the attached signature. If the verifier\n\n        trusts the public key of the signer, then verifying the signature is\n\n        sufficient to establish trust.  In this circumstance, the\n\n        AttestationAuthority to which this Attestation is attached is primarily\n\n        useful for look-up (how to find this Attestation if you already know the\n\n        Authority and artifact to be verified) and intent (which authority was this\n\n        attestation intended to sign for).\n      properties:\n        pgpSignedAttestation:\n          $ref: \"#/components/schemas/PgpSignedAttestation\"\n      type: object\n    AttestationAuthority:\n      description: \u003e-\n        Note kind that represents a logical attestation \"role\" or\n        \"authority\".  For\n\n        example, an organization might have one `AttestationAuthority` for \"QA\" and\n\n        one for \"build\".  This Note is intended to act strictly as a grouping\n\n        mechanism for the attached Occurrences (Attestations).  This grouping\n\n        mechanism also provides a security boundary, since IAM ACLs gate the ability\n\n        for a principle to attach an Occurrence to a given Note.  It also provides a\n\n        single point of lookup to find all attached Attestation Occurrences, even if\n\n        they don't all live in the same project.\n      properties:\n        hint:\n          $ref: \"#/components/schemas/AttestationAuthorityHint\"\n      type: object\n    AttestationAuthorityHint:\n      description: \u003e-\n        This submessage provides human-readable hints about the purpose of the\n\n        AttestationAuthority.  Because the name of a Note acts as its resource\n\n        reference, it is important to disambiguate the canonical name of the Note\n\n        (which might be a UUID for security purposes) from \"readable\" names more\n\n        suitable for debug output.  Note that these hints should NOT be used to\n\n        look up AttestationAuthorities in security sensitive contexts, such as when\n\n        looking up Attestations to verify.\n      properties:\n        humanReadableName:\n          description: The human readable name of this Attestation Authority, for example\n            \"qa\".\n          type: string\n      type: object\n    Basis:\n      description: |-\n        Basis describes the base image portion (Note) of the DockerImage\n        relationship.  Linked occurrences are derived from this or an\n        equivalent image via:\n          FROM \u003cBasis.resource_url\u003e\n        Or an equivalent reference, e.g. a tag of the resource_url.\n      properties:\n        fingerprint:\n          $ref: \"#/components/schemas/Fingerprint\"\n        resourceUrl:\n          description: |-\n            The resource_url for the resource representing the basis of\n            associated occurrence images.\n          type: string\n      type: object\n    Binding:\n      description: Associates `members` with a `role`.\n      properties:\n        condition:\n          $ref: \"#/components/schemas/Expr\"\n        members:\n          description: \u003e+\n            Specifies the identities requesting access for a Cloud Platform\n            resource.\n\n            `members` can have the following values:\n\n\n            * `allUsers`: A special identifier that represents anyone who is\n               on the internet; with or without a Google account.\n\n            * `allAuthenticatedUsers`: A special identifier that represents anyone\n               who is authenticated with a Google account or a service account.\n\n            * `user:{emailid}`: An email address that represents a specific Google\n               account. For example, `alice@example.com` .\n\n\n            * `serviceAccount:{emailid}`: An email address that represents a service\n               account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n            * `group:{emailid}`: An email address that represents a Google group.\n               For example, `admins@example.com`.\n\n\n            * `domain:{domain}`: The G Suite domain (primary) that represents all the\n               users of that domain. For example, `google.com` or `example.com`.\n\n          items:\n            type: string\n          type: array\n        role:\n          description: |-\n            Role that is assigned to `members`.\n            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\n          type: string\n      type: object\n    BuildDetails:\n      description: Message encapsulating build provenance details.\n      properties:\n        provenance:\n          $ref: \"#/components/schemas/BuildProvenance\"\n        provenanceBytes:\n          description: \u003e-\n            Serialized JSON representation of the provenance, used in generating\n            the\n\n            `BuildSignature` in the corresponding Result. After verifying the\n\n            signature, `provenance_bytes` can be unmarshalled and compared to the\n\n            provenance to confirm that it is unchanged. A base64-encoded string\n\n            representation of the provenance bytes is used for the signature in order\n\n            to interoperate with openssl which expects this format for signature\n\n            verification.\n\n\n            The serialized form is captured both to avoid ambiguity in how the\n\n            provenance is marshalled to json as well to prevent incompatibilities with\n\n            future changes.\n          type: string\n      type: object\n    BuildProvenance:\n      description: \u003e-\n        Provenance of a build. Contains all information needed to verify the\n        full\n\n        details about the build from source to completion.\n      properties:\n        buildOptions:\n          additionalProperties:\n            type: string\n          description: \u003e-\n            Special options applied to this build. This is a catch-all field\n            where\n\n            build providers can enter any desired additional details.\n          type: object\n        builderVersion:\n          description: Version string of the builder at the time this build was executed.\n          type: string\n        builtArtifacts:\n          description: Output of the build.\n          items:\n            $ref: \"#/components/schemas/Artifact\"\n          type: array\n        commands:\n          description: Commands requested by the build.\n          items:\n            $ref: \"#/components/schemas/Command\"\n          type: array\n        createTime:\n          description: Time at which the build was created.\n          format: google-datetime\n          type: string\n        creator:\n          description: \u003e-\n            E-mail address of the user who initiated this build. Note that this\n            was the\n\n            user's e-mail address at the time the build was initiated; this address may\n\n            not represent the same end-user for all time.\n          type: string\n        finishTime:\n          description: Time at which execution of the build was finished.\n          format: google-datetime\n          type: string\n        id:\n          description: Unique identifier of the build.\n          type: string\n        logsBucket:\n          description: Google Cloud Storage bucket where logs were written.\n          type: string\n        projectId:\n          description: ID of the project.\n          type: string\n        sourceProvenance:\n          $ref: \"#/components/schemas/Source\"\n        startTime:\n          description: Time at which execution of the build was started.\n          format: google-datetime\n          type: string\n        triggerId:\n          description: Trigger identifier if the build was triggered automatically; empty\n            if not.\n          type: string\n      type: object\n    BuildSignature:\n      description: Message encapsulating the signature of the verified build.\n      properties:\n        keyId:\n          description: \u003e-\n            An Id for the key used to sign. This could be either an Id for the\n            key\n\n            stored in `public_key` (such as the Id or fingerprint for a PGP key, or the\n\n            CN for a cert), or a reference to an external key (such as a reference to a\n\n            key in Cloud Key Management Service).\n          type: string\n        keyType:\n          description: |-\n            The type of the key, either stored in `public_key` or referenced in\n            `key_id`\n          enum:\n            - KEY_TYPE_UNSPECIFIED\n            - PGP_ASCII_ARMORED\n            - PKIX_PEM\n          type: string\n        publicKey:\n          description: \u003e-\n            Public key of the builder which can be used to verify that the\n            related\n\n            findings are valid and unchanged. If `key_type` is empty, this defaults\n\n            to PEM encoded public keys.\n\n\n            This field may be empty if `key_id` references an external key.\n\n\n            For Cloud Build based signatures, this is a PEM encoded public\n\n            key. To verify the Cloud Build signature, place the contents of\n\n            this field into a file (public.pem). The signature field is base64-decoded\n\n            into its binary representation in signature.bin, and the provenance bytes\n\n            from `BuildDetails` are base64-decoded into a binary representation in\n\n            signed.bin. OpenSSL can then verify the signature:\n\n            `openssl sha256 -verify public.pem -signature signature.bin signed.bin`\n          type: string\n        signature:\n          description: Signature of the related `BuildProvenance`, encoded in a base64\n            string.\n          type: string\n      type: object\n    BuildType:\n      description: |-\n        Note holding the version of the provider's builder and the signature of\n        the provenance message in linked BuildDetails.\n      properties:\n        builderVersion:\n          description: Version of the builder which produced this Note.\n          type: string\n        signature:\n          $ref: \"#/components/schemas/BuildSignature\"\n      type: object\n    Command:\n      description: Command describes a step performed as part of the build pipeline.\n      properties:\n        args:\n          description: Command-line arguments used when executing this Command.\n          items:\n            type: string\n          type: array\n        dir:\n          description: \u003e-\n            Working directory (relative to project source root) used when\n            running\n\n            this Command.\n          type: string\n        env:\n          description: Environment variables set before running this Command.\n          items:\n            type: string\n          type: array\n        id:\n          description: \u003e-\n            Optional unique identifier for this Command, used in wait_for to\n            reference\n\n            this Command as a dependency.\n          type: string\n        name:\n          description: \u003e-\n            Name of the command, as presented on the command line, or if the\n            command is\n\n            packaged as a Docker container, as presented to `docker pull`.\n          type: string\n        waitFor:\n          description: The ID(s) of the Command(s) that this Command depends on.\n          items:\n            type: string\n          type: array\n      type: object\n    CreateOperationRequest:\n      description: Request for creating an operation\n      properties:\n        operation:\n          $ref: \"#/components/schemas/Operation\"\n        operationId:\n          description: The ID to use for this operation.\n          type: string\n      type: object\n    Deployable:\n      description: An artifact that can be deployed in some runtime.\n      properties:\n        resourceUri:\n          description: Resource URI for the artifact being deployed.\n          items:\n            type: string\n          type: array\n      type: object\n    Deployment:\n      description: The period during which some deployable was active in a runtime.\n      properties:\n        address:\n          description: Address of the runtime element hosting this deployment.\n          type: string\n        config:\n          description: Configuration used to create this deployment.\n          type: string\n        deployTime:\n          description: Beginning of the lifetime of this deployment.\n          format: google-datetime\n          type: string\n        platform:\n          description: Platform hosting this deployment.\n          enum:\n            - PLATFORM_UNSPECIFIED\n            - GKE\n            - FLEX\n            - CUSTOM\n          type: string\n        resourceUri:\n          description: \u003e-\n            Output only. Resource URI for the artifact being deployed taken from\n            the\n\n            deployable field with the same name.\n          items:\n            type: string\n          type: array\n        undeployTime:\n          description: End of the lifetime of this deployment.\n          format: google-datetime\n          type: string\n        userEmail:\n          description: Identity of the user that triggered this deployment.\n          type: string\n      type: object\n    Derived:\n      description: \u003e-\n        Derived describes the derived image portion (Occurrence) of the\n\n        DockerImage relationship.  This image would be produced from a Dockerfile\n\n        with FROM \u003cDockerImage.Basis in attached Note\u003e.\n      properties:\n        baseResourceUrl:\n          description: |-\n            Output only. This contains the base image URL for the derived image\n            occurrence.\n          type: string\n        distance:\n          description: \u003e-\n            Output only. The number of layers by which this image differs from\n            the\n\n            associated image basis.\n          format: uint32\n          type: integer\n        fingerprint:\n          $ref: \"#/components/schemas/Fingerprint\"\n        layerInfo:\n          description: \u003e-\n            This contains layer-specific metadata, if populated it has length\n\n            \"distance\" and is ordered with [distance] being the layer immediately\n\n            following the base image and [1] being the final layer.\n          items:\n            $ref: \"#/components/schemas/Layer\"\n          type: array\n      type: object\n    Detail:\n      description: \u003e-\n        Identifies all occurrences of this vulnerability in the package for a\n\n        specific distro/location\n\n        For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2\n      properties:\n        cpeUri:\n          description: \u003e-\n            The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)\n            in\n\n            which the vulnerability manifests.  Examples include distro or storage\n\n            location for vulnerable jar.\n\n            This field can be used as a filter in list requests.\n          type: string\n        description:\n          description: A vendor-specific description of this note.\n          type: string\n        fixedLocation:\n          $ref: \"#/components/schemas/VulnerabilityLocation\"\n        isObsolete:\n          description: \u003e-\n            Whether this Detail is obsolete. Occurrences are expected not to\n            point to\n\n            obsolete details.\n          type: boolean\n        maxAffectedVersion:\n          $ref: \"#/components/schemas/Version\"\n        minAffectedVersion:\n          $ref: \"#/components/schemas/Version\"\n        package:\n          description: |-\n            The name of the package where the vulnerability was found.\n            This field can be used as a filter in list requests.\n          type: string\n        packageType:\n          description: |-\n            The type of package; whether native or non native(ruby gems,\n            node.js packages etc)\n          type: string\n        severityName:\n          description: \"The severity (eg: distro assigned severity) for this vulnerability.\"\n          type: string\n      type: object\n    Discovered:\n      description: Provides information about the scan status of a discovered resource.\n      properties:\n        analysisStatus:\n          description: The status of discovery for the resource.\n          enum:\n            - ANALYSIS_STATUS_UNSPECIFIED\n            - PENDING\n            - SCANNING\n            - FINISHED_SUCCESS\n            - FINISHED_FAILED\n            - FINISHED_UNSUPPORTED\n          type: string\n        analysisStatusError:\n          $ref: \"#/components/schemas/Status\"\n        continuousAnalysis:\n          description: Whether the resource is continuously analyzed.\n          enum:\n            - CONTINUOUS_ANALYSIS_UNSPECIFIED\n            - ACTIVE\n            - INACTIVE\n          type: string\n        cpe:\n          description: The CPE of the resource being scanned.\n          type: string\n        operation:\n          $ref: \"#/components/schemas/Operation\"\n      type: object\n    Discovery:\n      description: \u003e-\n        A note that indicates a type of analysis a provider would perform. This\n        note\n\n        exists in a provider's project. A `Discovery` occurrence is created in a\n\n        consumer's project at the start of analysis. The occurrence's operation will\n\n        indicate the status of the analysis. Absence of an occurrence linked to this\n\n        note for a resource indicates that analysis hasn't started.\n      properties:\n        analysisKind:\n          description: The kind of analysis that is handled by this discovery.\n          enum:\n            - KIND_UNSPECIFIED\n            - PACKAGE_VULNERABILITY\n            - BUILD_DETAILS\n            - IMAGE_BASIS\n            - PACKAGE_MANAGER\n            - DEPLOYABLE\n            - DISCOVERY\n            - ATTESTATION_AUTHORITY\n            - UPGRADE\n          type: string\n      type: object\n    Distribution:\n      description: \u003e-\n        This represents a particular channel of distribution for a given\n        package.\n\n        e.g. Debian's jessie-backports dpkg mirror\n      properties:\n        architecture:\n          description: |-\n            The CPU architecture for which packages in this distribution\n            channel were built\n          enum:\n            - ARCHITECTURE_UNSPECIFIED\n            - X86\n            - X64\n          type: string\n        cpeUri:\n          description: |-\n            The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\n            denoting the package manager version distributing a package.\n          type: string\n        description:\n          description: The distribution channel-specific description of this package.\n          type: string\n        latestVersion:\n          $ref: \"#/components/schemas/Version\"\n        maintainer:\n          description: A freeform string denoting the maintainer of this package.\n          type: string\n        url:\n          description: The distribution channel-specific homepage for this package.\n          type: string\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    Expr:\n      description: |-\n        Represents an expression text. Example:\n\n            title: \"User account presence\"\n            description: \"Determines whether the request has a user account\"\n            expression: \"size(request.user) \u003e 0\"\n      properties:\n        description:\n          description: \u003e-\n            An optional description of the expression. This is a longer text\n            which\n\n            describes the expression, e.g. when hovered over it in a UI.\n          type: string\n        expression:\n          description: |-\n            Textual representation of an expression in\n            Common Expression Language syntax.\n\n            The application context of the containing message determines which\n            well-known feature set of CEL is supported.\n          type: string\n        location:\n          description: \u003e-\n            An optional string indicating the location of the expression for\n            error\n\n            reporting, e.g. a file name and a position in the file.\n          type: string\n        title:\n          description: |-\n            An optional title for the expression, i.e. a short string describing\n            its purpose. This can be used e.g. in UIs which allow to enter the\n            expression.\n          type: string\n      type: object\n    FileHashes:\n      description: |-\n        Container message for hashes of byte content of files, used in Source\n        messages to verify integrity of source input to the build.\n      properties:\n        fileHash:\n          description: Collection of file hashes.\n          items:\n            $ref: \"#/components/schemas/Hash\"\n          type: array\n      type: object\n    Fingerprint:\n      description: A set of properties that uniquely identify a given Docker image.\n      properties:\n        v1Name:\n          description: |-\n            The layer-id of the final layer in the Docker image's v1\n            representation.\n            This field can be used as a filter in list requests.\n          type: string\n        v2Blob:\n          description: The ordered list of v2 blobs that represent a given image.\n          items:\n            type: string\n          type: array\n        v2Name:\n          description: \u003e-\n            Output only. The name of the image's v2 blobs computed via:\n              [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\n            Only the name of the final blob is kept.\n\n            This field can be used as a filter in list requests.\n          type: string\n      type: object\n    GetIamPolicyRequest:\n      description: Request message for `GetIamPolicy` method.\n      properties:\n        options:\n          $ref: \"#/components/schemas/GetPolicyOptions\"\n      type: object\n    GetPolicyOptions:\n      description: Encapsulates settings provided to GetIamPolicy.\n      properties:\n        requestedPolicyVersion:\n          description: \u003e-\n            Optional. The policy format version to be returned.\n\n\n            Valid values are 0, 1, and 3. Requests specifying an invalid value will be\n\n            rejected.\n\n\n            Requests for policies with any conditional bindings must specify version 3.\n\n            Policies without any conditional bindings may specify any valid value or\n\n            leave the field unset.\n          format: int32\n          type: integer\n      type: object\n    GetVulnzOccurrencesSummaryResponse:\n      description: |-\n        A summary of how many vulnz occurrences there are per severity type.\n        counts by groups, or if we should have different summary messages\n        like this.\n      properties:\n        counts:\n          description: A map of how many occurrences were found for each severity.\n          items:\n            $ref: \"#/components/schemas/SeverityCount\"\n          type: array\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1AliasContext:\n      description: An alias to a repo revision.\n      properties:\n        kind:\n          description: The alias kind.\n          enum:\n            - KIND_UNSPECIFIED\n            - FIXED\n            - MOVABLE\n            - OTHER\n          type: string\n        name:\n          description: The alias name.\n          type: string\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext:\n      description: |-\n        A CloudRepoSourceContext denotes a particular revision in a Google Cloud\n        Source Repo.\n      properties:\n        aliasContext:\n          $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1AliasC\\\n            ontext\"\n        repoId:\n          $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1RepoId\"\n        revisionId:\n          description: A revision ID.\n          type: string\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext:\n      description: A SourceContext referring to a Gerrit project.\n      properties:\n        aliasContext:\n          $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1AliasC\\\n            ontext\"\n        gerritProject:\n          description: |-\n            The full project name within the host. Projects may be nested, so\n            \"project/subproject\" is a valid project name. The \"repo name\" is\n            the hostURI/project.\n          type: string\n        hostUri:\n          description: The URI of a running Gerrit instance.\n          type: string\n        revisionId:\n          description: A revision (commit) ID.\n          type: string\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext:\n      description: |-\n        A GitSourceContext denotes a particular revision in a third party Git\n        repository (e.g., GitHub).\n      properties:\n        revisionId:\n          description: Required. Git commit hash.\n          type: string\n        url:\n          description: Git repository URL.\n          type: string\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata:\n      description: |-\n        Metadata for all operations used and required for all operations\n        that created by Container Analysis Providers\n      properties:\n        createTime:\n          description: Output only. The time this operation was created.\n          format: google-datetime\n          type: string\n        endTime:\n          description: Output only. The time that this operation was marked completed or\n            failed.\n          format: google-datetime\n          type: string\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId:\n      description: |-\n        Selects a repo using a Google Cloud Platform project ID (e.g.,\n        winged-cargo-31) and a repo name within that project.\n      properties:\n        projectId:\n          description: The ID of the project.\n          type: string\n        repoName:\n          description: The name of the repo. Leave empty for the default repo.\n          type: string\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1RepoId:\n      description: A unique identifier for a Cloud Repo.\n      properties:\n        projectRepoId:\n          $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1Projec\\\n            tRepoId\"\n        uid:\n          description: A server-assigned, globally unique identifier.\n          type: string\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1SourceContext:\n      description: \u003e-\n        A SourceContext is a reference to a tree of files. A SourceContext\n        together\n\n        with a path point to a unique revision of a single file or directory.\n      properties:\n        cloudRepo:\n          $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1CloudR\\\n            epoSourceContext\"\n        gerrit:\n          $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1Gerrit\\\n            SourceContext\"\n        git:\n          $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1GitSou\\\n            rceContext\"\n        labels:\n          additionalProperties:\n            type: string\n          description: Labels with user defined metadata.\n          type: object\n      type: object\n    Hash:\n      description: Container message for hash values.\n      properties:\n        type:\n          description: The type of hash that was performed.\n          enum:\n            - NONE\n            - SHA256\n          type: string\n        value:\n          description: The hash value.\n          format: byte\n          type: string\n      type: object\n    Installation:\n      description: |-\n        This represents how a particular software package may be installed on\n        a system.\n      properties:\n        location:\n          description: |-\n            All of the places within the filesystem versions of this package\n            have been found.\n          items:\n            $ref: \"#/components/schemas/Location\"\n          type: array\n        name:\n          description: Output only. The name of the installed package.\n          type: string\n      type: object\n    Layer:\n      description: Layer holds metadata specific to a layer of a Docker image.\n      properties:\n        arguments:\n          description: The recovered arguments to the Dockerfile directive.\n          type: string\n        directive:\n          description: The recovered Dockerfile directive used to construct this layer.\n          enum:\n            - DIRECTIVE_UNSPECIFIED\n            - MAINTAINER\n            - RUN\n            - CMD\n            - LABEL\n            - EXPOSE\n            - ENV\n            - ADD\n            - COPY\n            - ENTRYPOINT\n            - VOLUME\n            - USER\n            - WORKDIR\n            - ARG\n            - ONBUILD\n            - STOPSIGNAL\n            - HEALTHCHECK\n            - SHELL\n          type: string\n      type: object\n    ListNoteOccurrencesResponse:\n      description: Response including listed occurrences for a note.\n      properties:\n        nextPageToken:\n          description: Token to receive the next page of notes.\n          type: string\n        occurrences:\n          description: The occurrences attached to the specified note.\n          items:\n            $ref: \"#/components/schemas/Occurrence\"\n          type: array\n      type: object\n    ListNotesResponse:\n      description: Response including listed notes.\n      properties:\n        nextPageToken:\n          description: \u003e-\n            The next pagination token in the list response. It should be used as\n\n            page_token for the following request. An empty value means no more result.\n          type: string\n        notes:\n          description: The occurrences requested\n          items:\n            $ref: \"#/components/schemas/Note\"\n          type: array\n      type: object\n    ListOccurrencesResponse:\n      description: Response including listed active occurrences.\n      properties:\n        nextPageToken:\n          description: |-\n            The next pagination token in the list response. It should be used as\n            `page_token` for the following request. An empty value means no more\n            results.\n          type: string\n        occurrences:\n          description: The occurrences requested.\n          items:\n            $ref: \"#/components/schemas/Occurrence\"\n          type: array\n      type: object\n    ListScanConfigsResponse:\n      description: A list of scan configs for the project.\n      properties:\n        nextPageToken:\n          description: A page token to pass in order to get more scan configs.\n          type: string\n        scanConfigs:\n          description: The set of scan configs.\n          items:\n            $ref: \"#/components/schemas/ScanConfig\"\n          type: array\n      type: object\n    Location:\n      description: |-\n        An occurrence of a particular package installation found within a\n        system's filesystem.\n        e.g. glibc was found in /var/lib/dpkg/status\n      properties:\n        cpeUri:\n          description: |-\n            The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\n            denoting the package manager version distributing a package.\n          type: string\n        path:\n          description: The path from which we gathered that this package/version is\n            installed.\n          type: string\n        version:\n          $ref: \"#/components/schemas/Version\"\n      type: object\n    Note:\n      description: Provides a detailed description of a `Note`.\n      properties:\n        attestationAuthority:\n          $ref: \"#/components/schemas/AttestationAuthority\"\n        baseImage:\n          $ref: \"#/components/schemas/Basis\"\n        buildType:\n          $ref: \"#/components/schemas/BuildType\"\n        createTime:\n          description: \u003e-\n            Output only. The time this note was created. This field can be used\n            as a\n\n            filter in list requests.\n          format: google-datetime\n          type: string\n        deployable:\n          $ref: \"#/components/schemas/Deployable\"\n        discovery:\n          $ref: \"#/components/schemas/Discovery\"\n        expirationTime:\n          description: Time of expiration for this note, null if note does not expire.\n          format: google-datetime\n          type: string\n        kind:\n          description: \u003e-\n            Output only. This explicitly denotes which kind of note is\n            specified. This\n\n            field can be used as a filter in list requests.\n          enum:\n            - KIND_UNSPECIFIED\n            - PACKAGE_VULNERABILITY\n            - BUILD_DETAILS\n            - IMAGE_BASIS\n            - PACKAGE_MANAGER\n            - DEPLOYABLE\n            - DISCOVERY\n            - ATTESTATION_AUTHORITY\n            - UPGRADE\n          type: string\n        longDescription:\n          description: A detailed description of this `Note`.\n          type: string\n        name:\n          description: |-\n            The name of the note in the form\n            \"projects/{provider_project_id}/notes/{NOTE_ID}\"\n          type: string\n        package:\n          $ref: \"#/components/schemas/Package\"\n        relatedUrl:\n          description: URLs associated with this note\n          items:\n            $ref: \"#/components/schemas/RelatedUrl\"\n          type: array\n        shortDescription:\n          description: A one sentence description of this `Note`.\n          type: string\n        updateTime:\n          description: \u003e-\n            Output only. The time this note was last updated. This field can be\n            used as\n\n            a filter in list requests.\n          format: google-datetime\n          type: string\n        upgrade:\n          $ref: \"#/components/schemas/UpgradeNote\"\n        vulnerabilityType:\n          $ref: \"#/components/schemas/VulnerabilityType\"\n      type: object\n    Occurrence:\n      description: \"`Occurrence` includes information about analysis occurrences for an\n        image.\"\n      properties:\n        attestation:\n          $ref: \"#/components/schemas/Attestation\"\n        buildDetails:\n          $ref: \"#/components/schemas/BuildDetails\"\n        createTime:\n          description: Output only. The time this `Occurrence` was created.\n          format: google-datetime\n          type: string\n        deployment:\n          $ref: \"#/components/schemas/Deployment\"\n        derivedImage:\n          $ref: \"#/components/schemas/Derived\"\n        discovered:\n          $ref: \"#/components/schemas/Discovered\"\n        installation:\n          $ref: \"#/components/schemas/Installation\"\n        kind:\n          description: \u003e-\n            Output only. This explicitly denotes which of the `Occurrence`\n            details are\n\n            specified. This field can be used as a filter in list requests.\n          enum:\n            - KIND_UNSPECIFIED\n            - PACKAGE_VULNERABILITY\n            - BUILD_DETAILS\n            - IMAGE_BASIS\n            - PACKAGE_MANAGER\n            - DEPLOYABLE\n            - DISCOVERY\n            - ATTESTATION_AUTHORITY\n            - UPGRADE\n          type: string\n        name:\n          description: |-\n            Output only. The name of the `Occurrence` in the form\n            \"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"\n          type: string\n        noteName:\n          description: |-\n            An analysis note associated with this image, in the form\n            \"providers/{provider_id}/notes/{NOTE_ID}\"\n            This field can be used as a filter in list requests.\n          type: string\n        remediation:\n          description: A description of actions that can be taken to remedy the `Note`\n          type: string\n        resource:\n          $ref: \"#/components/schemas/Resource\"\n        resourceUrl:\n          description: \u003e-\n            The unique URL of the image or the container for which the\n            `Occurrence`\n\n            applies. For example, https://gcr.io/project/image@sha256:foo This field\n\n            can be used as a filter in list requests.\n          type: string\n        updateTime:\n          description: Output only. The time this `Occurrence` was last updated.\n          format: google-datetime\n          type: string\n        upgrade:\n          $ref: \"#/components/schemas/UpgradeOccurrence\"\n        vulnerabilityDetails:\n          $ref: \"#/components/schemas/VulnerabilityDetails\"\n      type: object\n    Operation:\n      description: \u003e-\n        This resource represents a long-running operation that is the result of\n        a\n\n        network API call.\n      properties:\n        done:\n          description: \u003e-\n            If the value is `false`, it means the operation is still in\n            progress.\n\n            If `true`, the operation is completed, and either `error` or `response` is\n\n            available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            Service-specific metadata associated with the operation.  It\n            typically\n\n            contains progress information and common metadata such as create time.\n\n            Some services might not provide such metadata.  Any method that returns a\n\n            long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: \u003e-\n            The server-assigned name, which is only unique within the same\n            service that\n\n            originally returns it. If you use the default HTTP mapping, the\n\n            `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            The normal response of the operation in case of success.  If the\n            original\n\n            method returns no data on success, such as `Delete`, the response is\n\n            `google.protobuf.Empty`.  If the original method is standard\n\n            `Get`/`Create`/`Update`, the response should be the resource.  For other\n\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n\n            is the original method name.  For example, if the original method name\n\n            is `TakeSnapshot()`, the inferred response type is\n\n            `TakeSnapshotResponse`.\n          type: object\n      type: object\n    Package:\n      description: |-\n        This represents a particular package that is distributed over\n        various channels.\n        e.g. glibc (aka libc6) is distributed by many, at various versions.\n      properties:\n        distribution:\n          description: The various channels by which a package is distributed.\n          items:\n            $ref: \"#/components/schemas/Distribution\"\n          type: array\n        name:\n          description: The name of the package.\n          type: string\n      type: object\n    PackageIssue:\n      description: |-\n        This message wraps a location affected by a vulnerability and its\n        associated fix (if one is available).\n      properties:\n        affectedLocation:\n          $ref: \"#/components/schemas/VulnerabilityLocation\"\n        fixedLocation:\n          $ref: \"#/components/schemas/VulnerabilityLocation\"\n        severityName:\n          type: string\n      type: object\n    PgpSignedAttestation:\n      description: \u003e-\n        An attestation wrapper with a PGP-compatible signature.\n\n        This message only supports `ATTACHED` signatures, where the payload that is\n\n        signed is included alongside the signature itself in the same file.\n      properties:\n        contentType:\n          description: \u003e-\n            Type (for example schema) of the attestation payload that was\n            signed.\n\n            The verifier must ensure that the provided type is one that the verifier\n\n            supports, and that the attestation payload is a valid instantiation of that\n\n            type (for example by validating a JSON schema).\n          enum:\n            - CONTENT_TYPE_UNSPECIFIED\n            - SIMPLE_SIGNING_JSON\n          type: string\n        pgpKeyId:\n          description: \u003e-\n            The cryptographic fingerprint of the key used to generate the\n            signature,\n\n            as output by, e.g. `gpg --list-keys`. This should be the version 4, full\n\n            160-bit fingerprint, expressed as a 40 character hexadecimal string. See\n\n            https://tools.ietf.org/html/rfc4880#section-12.2 for details.\n\n            Implementations may choose to acknowledge \"LONG\", \"SHORT\", or other\n\n            abbreviated key IDs, but only the full fingerprint is guaranteed to work.\n\n            In gpg, the full fingerprint can be retrieved from the `fpr` field\n\n            returned when calling --list-keys with --with-colons.  For example:\n\n            ```\n\n            gpg --with-colons --with-fingerprint --force-v4-certs \\\n                --list-keys attester@example.com\n            tru::1:1513631572:0:3:1:5\n\n            pub:...\u003cSNIP\u003e...\n\n            fpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n\n            ```\n\n            Above, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.\n          type: string\n        signature:\n          description: \u003e-\n            The raw content of the signature, as output by GNU Privacy Guard\n            (GPG) or\n\n            equivalent.  Since this message only supports attached signatures, the\n\n            payload that was signed must be attached. While the signature format\n\n            supported is dependent on the verification implementation, currently only\n\n            ASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n\n            `--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n\n            --output=signature.gpg payload.json` will create the signature content\n\n            expected in this field in `signature.gpg` for the `payload.json`\n\n            attestation payload.\n          type: string\n      type: object\n    Policy:\n      description: \u003e-\n        Defines an Identity and Access Management (IAM) policy. It is used to\n\n        specify access control policies for Cloud Platform resources.\n\n\n\n        A `Policy` consists of a list of `bindings`. A `binding` binds a list of\n\n        `members` to a `role`, where the members can be user accounts, Google groups,\n\n        Google domains, and service accounts. A `role` is a named list of permissions\n\n        defined by IAM.\n\n\n        **JSON Example**\n\n            {\n              \"bindings\": [\n                {\n                  \"role\": \"roles/owner\",\n                  \"members\": [\n                    \"user:mike@example.com\",\n                    \"group:admins@example.com\",\n                    \"domain:google.com\",\n                    \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n                  ]\n                },\n                {\n                  \"role\": \"roles/viewer\",\n                  \"members\": [\"user:sean@example.com\"]\n                }\n              ]\n            }\n\n        **YAML Example**\n\n            bindings:\n            - members:\n              - user:mike@example.com\n              - group:admins@example.com\n              - domain:google.com\n              - serviceAccount:my-other-app@appspot.gserviceaccount.com\n              role: roles/owner\n            - members:\n              - user:sean@example.com\n              role: roles/viewer\n\n\n        For a description of IAM and its features, see the\n\n        [IAM developer's guide](https://cloud.google.com/iam/docs).\n      properties:\n        bindings:\n          description: |-\n            Associates a list of `members` to a `role`.\n            `bindings` with no members will result in an error.\n          items:\n            $ref: \"#/components/schemas/Binding\"\n          type: array\n        etag:\n          description: \u003e-\n            `etag` is used for optimistic concurrency control as a way to help\n\n            prevent simultaneous updates of a policy from overwriting each other.\n\n            It is strongly suggested that systems make use of the `etag` in the\n\n            read-modify-write cycle to perform policy updates in order to avoid race\n\n            conditions: An `etag` is returned in the response to `getIamPolicy`, and\n\n            systems are expected to put that etag in the request to `setIamPolicy` to\n\n            ensure that their change will be applied to the same version of the policy.\n\n\n            If no `etag` is provided in the call to `setIamPolicy`, then the existing\n\n            policy is overwritten.\n          format: byte\n          type: string\n        version:\n          description: \u003e-\n            Specifies the format of the policy.\n\n\n            Valid values are 0, 1, and 3. Requests specifying an invalid value will be\n\n            rejected.\n\n\n            Policies with any conditional bindings must specify version 3. Policies\n\n            without any conditional bindings may specify any valid value or leave the\n\n            field unset.\n          format: int32\n          type: integer\n      type: object\n    RelatedUrl:\n      description: Metadata for any related URL information\n      properties:\n        label:\n          description: Label to describe usage of the URL\n          type: string\n        url:\n          description: Specific URL to associate with the note\n          type: string\n      type: object\n    RepoSource:\n      description: |-\n        RepoSource describes the location of the source in a Google Cloud Source\n        Repository.\n      properties:\n        branchName:\n          description: Name of the branch to build.\n          type: string\n        commitSha:\n          description: Explicit commit SHA to build.\n          type: string\n        projectId:\n          description: ID of the project that owns the repo.\n          type: string\n        repoName:\n          description: Name of the repo.\n          type: string\n        tagName:\n          description: Name of the tag to build.\n          type: string\n      type: object\n    Resource:\n      description: |-\n        \n        Resource is an entity that can have metadata. E.g., a Docker image.\n      properties:\n        contentHash:\n          $ref: \"#/components/schemas/Hash\"\n        name:\n          description: The name of the resource. E.g., the name of a Docker image -\n            \"Debian\".\n          type: string\n        uri:\n          description: |-\n            The unique URI of the resource. E.g.,\n            \"https://gcr.io/project/image@sha256:foo\" for a Docker image.\n          type: string\n      type: object\n    ScanConfig:\n      description: Indicates various scans and whether they are turned on or off.\n      properties:\n        createTime:\n          description: Output only. The time this scan config was created.\n          format: google-datetime\n          type: string\n        description:\n          description: Output only. A human-readable description of what the `ScanConfig`\n            does.\n          type: string\n        enabled:\n          description: Indicates whether the Scan is enabled.\n          type: boolean\n        name:\n          description: |-\n            Output only. The name of the ScanConfig in the form\n            “projects/{project_id}/scanConfigs/{scan_config_id}\".\n          type: string\n        updateTime:\n          description: Output only. The time this scan config was last updated.\n          format: google-datetime\n          type: string\n      type: object\n    SetIamPolicyRequest:\n      description: Request message for `SetIamPolicy` method.\n      properties:\n        policy:\n          $ref: \"#/components/schemas/Policy\"\n      type: object\n    SeverityCount:\n      description: The number of occurrences created for a specific severity.\n      properties:\n        count:\n          description: The number of occurrences with the severity.\n          format: int64\n          type: string\n        severity:\n          description: The severity of the occurrences.\n          enum:\n            - SEVERITY_UNSPECIFIED\n            - MINIMAL\n            - LOW\n            - MEDIUM\n            - HIGH\n            - CRITICAL\n          type: string\n      type: object\n    Source:\n      description: Source describes the location of the source used for the build.\n      properties:\n        additionalContexts:\n          description: \u003e-\n            If provided, some of the source code used for the build may be found\n            in\n\n            these locations, in the case where the source repository had multiple\n\n            remotes or submodules. This list will not include the context specified in\n\n            the context field.\n          items:\n            $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1Sour\\\n              ceContext\"\n          type: array\n        artifactStorageSource:\n          $ref: \"#/components/schemas/StorageSource\"\n        context:\n          $ref: \"#/components/schemas/GoogleDevtoolsContaineranalysisV1alpha1Source\\\n            Context\"\n        fileHashes:\n          additionalProperties:\n            $ref: \"#/components/schemas/FileHashes\"\n          description: \u003e-\n            Hash(es) of the build source, which can be used to verify that the\n            original\n\n            source integrity was maintained in the build.\n\n\n            The keys to this map are file paths used as build source and the values\n\n            contain the hash values for those files.\n\n\n            If the build source came in a single package such as a gzipped tarfile\n\n            (.tar.gz), the FileHash will be for the single path to that file.\n          type: object\n        repoSource:\n          $ref: \"#/components/schemas/RepoSource\"\n        storageSource:\n          $ref: \"#/components/schemas/StorageSource\"\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n\n        different programming environments, including REST APIs and RPC APIs. It is\n\n        used by [gRPC](https://github.com/grpc). Each `Status` message contains\n\n        three pieces of data: error code, error message, and error details.\n\n\n        You can find out more about this error model and how to work with it in the\n\n        [API Design Guide](https://cloud.google.com/apis/design/errors).\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    StorageSource:\n      description: |-\n        StorageSource describes the location of the source in an archive file in\n        Google Cloud Storage.\n      properties:\n        bucket:\n          description: |-\n            Google Cloud Storage bucket containing source (see [Bucket Name\n            Requirements]\n            (https://cloud.google.com/storage/docs/bucket-naming#requirements)).\n          type: string\n        generation:\n          description: Google Cloud Storage generation for the object.\n          format: int64\n          type: string\n        object:\n          description: Google Cloud Storage object containing source.\n          type: string\n      type: object\n    TestIamPermissionsRequest:\n      description: Request message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: \u003e-\n            The set of permissions to check for the `resource`. Permissions with\n\n            wildcards (such as '*' or 'storage.*') are not allowed. For more\n\n            information see\n\n            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n          items:\n            type: string\n          type: array\n      type: object\n    TestIamPermissionsResponse:\n      description: Response message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: |-\n            A subset of `TestPermissionsRequest.permissions` that the caller is\n            allowed.\n          items:\n            type: string\n          type: array\n      type: object\n    UpdateOperationRequest:\n      description: Request for updating an existing operation\n      properties:\n        operation:\n          $ref: \"#/components/schemas/Operation\"\n        updateMask:\n          description: The fields to update.\n          format: google-fieldmask\n          type: string\n      type: object\n    UpgradeDistribution:\n      description: \u003e-\n        The Upgrade Distribution represents metadata about the Upgrade for each\n\n        operating system (CPE). Some distributions have additional metadata around\n\n        updates, classifying them into various categories and severities.\n      properties:\n        classification:\n          description: \u003e-\n            The operating system classification of this Upgrade, as specified by\n            the\n\n            upstream operating system upgrade feed.\n          type: string\n        cpeUri:\n          description: \u003e-\n            Required - The specific operating system this metadata applies to.\n            See\n\n            https://cpe.mitre.org/specification/.\n          type: string\n        cve:\n          description: The cve that would be resolved by this upgrade.\n          items:\n            type: string\n          type: array\n        severity:\n          description: The severity as specified by the upstream operating system.\n          type: string\n      type: object\n    UpgradeNote:\n      description: |-\n        An Upgrade Note represents a potential upgrade of a package to a given\n        version. For each package version combination (i.e. bash 4.0, bash 4.1,\n        bash 4.1.2), there will be a Upgrade Note.\n      properties:\n        distributions:\n          description: Metadata about the upgrade for each specific operating system.\n          items:\n            $ref: \"#/components/schemas/UpgradeDistribution\"\n          type: array\n        package:\n          description: Required - The package this Upgrade is for.\n          type: string\n        version:\n          $ref: \"#/components/schemas/Version\"\n      type: object\n    UpgradeOccurrence:\n      description: \u003e-\n        An Upgrade Occurrence represents that a specific resource_url could\n        install a\n\n        specific upgrade. This presence is supplied via local sources (i.e. it is\n\n        present in the mirror and the running system has noticed its availability).\n      properties:\n        distribution:\n          $ref: \"#/components/schemas/UpgradeDistribution\"\n        package:\n          description: Required - The package this Upgrade is for.\n          type: string\n        parsedVersion:\n          $ref: \"#/components/schemas/Version\"\n      type: object\n    Version:\n      description: \u003e-\n        Version contains structured information about the version of the\n        package.\n\n        For a discussion of this in Debian/Ubuntu:\n\n        http://serverfault.com/questions/604541/debian-packages-version-convention\n\n        For a discussion of this in Redhat/Fedora/Centos:\n\n        http://blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/\n      properties:\n        epoch:\n          description: Used to correct mistakes in the version numbering scheme.\n          format: int32\n          type: integer\n        kind:\n          description: |-\n            Distinguish between sentinel MIN/MAX versions and normal versions.\n            If kind is not NORMAL, then the other fields are ignored.\n          enum:\n            - NORMAL\n            - MINIMUM\n            - MAXIMUM\n          type: string\n        name:\n          description: The main part of the version name.\n          type: string\n        revision:\n          description: The iteration of the package build from the above version.\n          type: string\n      type: object\n    VulnerabilityDetails:\n      description: |-\n        Used by Occurrence to point to where the vulnerability exists and how\n        to fix it.\n      properties:\n        cvssScore:\n          description: \u003e-\n            Output only. The CVSS score of this vulnerability. CVSS score is on\n            a\n\n            scale of 0-10 where 0 indicates low severity and 10 indicates high\n\n            severity.\n          format: float\n          type: number\n        effectiveSeverity:\n          description: \u003e-\n            The distro assigned severity for this vulnerability when that is\n\n            available and note provider assigned severity when distro has not yet\n\n            assigned a severity for this vulnerability.\n          enum:\n            - SEVERITY_UNSPECIFIED\n            - MINIMAL\n            - LOW\n            - MEDIUM\n            - HIGH\n            - CRITICAL\n          type: string\n        packageIssue:\n          description: |-\n            The set of affected locations and their fixes (if available) within\n            the associated resource.\n          items:\n            $ref: \"#/components/schemas/PackageIssue\"\n          type: array\n        severity:\n          description: Output only. The note provider assigned Severity of the\n            vulnerability.\n          enum:\n            - SEVERITY_UNSPECIFIED\n            - MINIMAL\n            - LOW\n            - MEDIUM\n            - HIGH\n            - CRITICAL\n          type: string\n        type:\n          description: |-\n            The type of package; whether native or non native(ruby gems,\n            node.js packages etc)\n          type: string\n      type: object\n    VulnerabilityLocation:\n      description: The location of the vulnerability\n      properties:\n        cpeUri:\n          description: \u003e-\n            The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)\n\n            format. Examples include distro or storage location for vulnerable jar.\n\n            This field can be used as a filter in list requests.\n          type: string\n        package:\n          description: The package being described.\n          type: string\n        version:\n          $ref: \"#/components/schemas/Version\"\n      type: object\n    VulnerabilityType:\n      description: VulnerabilityType provides metadata about a security vulnerability.\n      properties:\n        cvssScore:\n          description: The CVSS score for this Vulnerability.\n          format: float\n          type: number\n        details:\n          description: |-\n            All information about the package to specifically identify this\n            vulnerability. One entry per (version range and cpe_uri) the\n            package vulnerability has manifested in.\n          items:\n            $ref: \"#/components/schemas/Detail\"\n          type: array\n        severity:\n          description: Note provider assigned impact of the vulnerability\n          enum:\n            - SEVERITY_UNSPECIFIED\n            - MINIMAL\n            - LOW\n            - MEDIUM\n            - HIGH\n            - CRITICAL\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-containeranalysis-v1alpha1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-containeranalysis-v1alpha1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:59798: duplicate path: \"/v1alpha1/{parent}/notes\""
}