{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "openapi-converter.herokuapp.com-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/openapi-converter.herokuapp.com-1.0.0-swagger.yaml",
			"byteSize": 6370,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: mike.ralphson@gmail.com\n    name: Mike Ralphson\n    url: https://github.com/mermade/swagger2openapi/issues\n  description: Converter and validator for Swagger 2.0 to OpenAPI 3.0.x definitions\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  termsOfService: https://opensource.org/licenses/MIT\n  title: Swagger2OpenAPI Converter\n  version: 1.0.0\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://avatars1.githubusercontent.com/u/15950345?v=3\u0026s=200\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Mermade/openapi-webconverter/master/contract/swagger.json\n      version: \"2.0\"\n  x-providerName: openapi-converter.herokuapp.com\nexternalDocs:\n  url: https://github.com/mermade/openapi-webconverter\nsecurity: []\ntags:\n  - description: Metadata functions\n    name: metadata\n  - description: Conversion functions\n    name: conversion\n  - description: Validation functions\n    name: validation\npaths:\n  /badge:\n    get:\n      description: \"\"\n      operationId: getBadge\n      parameters:\n        - description: The URL to retrieve the OpenAPI 3.0.x definition from\n          in: query\n          name: url\n          required: true\n          example: https://raw.githubusercontent.com/Mermade/openapi-webconverter/master/contract/openapi.json\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"301\":\n          description: Moved\n      summary: Return a redirect to a badge svg file depending on a source definition's\n        validity\n      tags:\n        - validation\n  /convert:\n    get:\n      description: \"\"\n      operationId: convertUrl\n      parameters:\n        - description: The URL to retrieve the OpenAPI 2.0 definition from\n          in: query\n          name: url\n          required: true\n          example: https://raw.githubusercontent.com/Mermade/openapi-webconverter/master/contract/swagger.json\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"200\":\n          description: default\n          content:\n            application/json; charset=utf-8:\n              schema: {}\n            application/x-yaml:\n              schema: {}\n      summary: Convert a Swagger 2.0 definition to OpenAPI 3.0.x from a URL\n      tags:\n        - conversion\n    post:\n      description: \"\"\n      operationId: convert\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                filename:\n                  description: The file to upload and convert\n                  type: string\n                source:\n                  description: The text of a Swagger 2.0 definition to convert\n                  example: |\n                    swagger: 2.0\n                    info:\n                      title: API\n                      version: 1.0.0\n                  type: string\n                validate:\n                  type: string\n                  enum:\n                    - on\n      responses:\n        \"200\":\n          description: default\n          content:\n            application/json; charset=utf-8:\n              schema: {}\n            application/x-yaml:\n              schema: {}\n        \"400\":\n          description: Invalid request\n          content:\n            application/json; charset=utf-8:\n              schema: {}\n            application/x-yaml:\n              schema: {}\n      summary: \"Convert a Swagger 2.0 definition passed in the body to OpenAPI 3.0.x \"\n      tags:\n        - conversion\n  /status:\n    get:\n      description: \"\"\n      operationId: getStatus\n      responses:\n        \"200\":\n          description: default\n          content:\n            application/json; charset=utf-8:\n              schema: {}\n            application/x-yaml:\n              schema: {}\n      summary: Get the status of the API\n      tags:\n        - metadata\n  /validate:\n    get:\n      description: \"\"\n      operationId: validateUrl\n      parameters:\n        - description: The URL to retrieve the OpenAPI 3.0.x definition from\n          in: query\n          name: url\n          required: true\n          example: https://raw.githubusercontent.com/Mermade/openapi-webconverter/master/contract/openapi.json\n          schema:\n            type: string\n            format: uri\n      responses:\n        \"200\":\n          description: default\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/validationResult\"\n            application/x-yaml:\n              schema:\n                $ref: \"#/components/schemas/validationResult\"\n      summary: Validate an OpenAPI 3.0.x definition\n      tags:\n        - validation\n    post:\n      description: \"\"\n      operationId: validate\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                filename:\n                  description: The file to upload and validate\n                  type: string\n                source:\n                  description: The text of an OpenAPI 3.0.x definition to validate\n                  example: |\n                    openapi: 3.0.0\n                    info:\n                      title: API\n                      version: 1.0.0\n                    paths: {}\n                  type: string\n      responses:\n        \"200\":\n          description: default\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/validationResult\"\n            application/x-yaml:\n              schema:\n                $ref: \"#/components/schemas/validationResult\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json; charset=utf-8:\n              schema: {}\n            application/x-yaml:\n              schema: {}\n      summary: Validate an OpenAPI 3.0.x definition supplied in the body of the request\n      tags:\n        - validation\nservers:\n  - url: https://openapi-converter.herokuapp.com/api/v1\n  - url: http://openapi-converter.herokuapp.com/api/v1\ncomponents:\n  schemas:\n    validationResult:\n      properties:\n        openapi:\n          type: string\n      required:\n        - openapi\n      type: object\n"
		}
	},
	"Error": "parse: parse spec: paths: /convert: post: operation \"convert\": requestBody: content: \"multipart/form-data\": parse schema: parse schema: property \"validate\": parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}