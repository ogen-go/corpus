{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "apacta.com-0.0.1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/apacta.com-0.0.1-swagger.yaml",
			"byteSize": 177594,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e-\n    API for a tool to craftsmen used to register working hours, material usage\n    and quality assurance.    \n\n    # Endpoint\n\n    The endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n\n    # Authentication\n\n    URL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n\n    # Pagination\n\n    If the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n\n    # Search/filter\n\n    Is experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n\n    # Ordering\n\n    Is currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n\n    # Associations\n\n    Is currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n\n    # Project Files\n\n    Currently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n\n    # Errors/Exceptions\n\n    ## 422 (Validation)\n\n    Write something about how the `errors` object contains keys with the properties that failes validation like:\n\n    ```\n      {\n          \"success\": false,\n          \"data\": {\n              \"code\": 422,\n              \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n              \"message\": \"A validation error occurred\",\n              \"errorCount\": 1,\n              \"errors\": {\n                  \"contact_types\": [ ## Property name that failed validation\n                      \"Contacts must have at least one contact type\" ## Message with further explanation\n                  ]\n              }\n          }\n      }\n    ```\n\n    ## Code examples\n\n    Running examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n\n    ### Swift\n\n    ```\n      \n    ```\n\n    ### Java\n\n    #### OkHttp\n\n    ```\n      OkHttpClient client = new OkHttpClient();\n      \n      Request request = new Request.Builder()\n        .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n        .get()\n        .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n        .addHeader(\"accept\", \"application/json\")\n        .build();\n      \n      Response response = client.newCall(request).execute();\n    ```\n\n    #### Unirest\n\n    ```\n      HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n        .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n        .header(\"accept\", \"application/json\")\n        .asString();\n    ```\n\n    ### Javascript\n\n    #### Native\n\n    ```\n      var data = null;\n      \n      var xhr = new XMLHttpRequest();\n      xhr.withCredentials = true;\n      \n      xhr.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === 4) {\n          console.log(this.responseText);\n        }\n      });\n      \n      xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n      xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n      xhr.setRequestHeader(\"accept\", \"application/json\");\n      \n      xhr.send(data);\n    ```\n\n    #### jQuery\n\n    ```\n      var settings = {\n        \"async\": true,\n        \"crossDomain\": true,\n        \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n          \"accept\": \"application/json\",\n        }\n      }\n      \n      $.ajax(settings).done(function (response) {\n        console.log(response);\n      });\n    ```\n\n    #### NodeJS (Request)\n\n    ```\n      var request = require(\"request\");\n\n      var options = { method: 'GET',\n        url: 'https://app.apacta.com/api/v1/forms',\n        qs: \n         { extended: 'true',\n           sort: 'Forms.created',\n           direction: 'DESC',\n           include: 'Products,CreatedBy',\n           limit: '5' },\n        headers: \n         { accept: 'application/json',\n           'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n      \n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n      \n        console.log(body);\n      });\n\n    ```\n\n    ### Python 3\n\n    ```\n      import http.client\n      \n      conn = http.client.HTTPSConnection(\"app.apacta.com\")\n      \n      payload = \"\"\n      \n      headers = {\n          'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n          'accept': \"application/json\",\n          }\n      \n      conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n      \n      res = conn.getresponse()\n      data = res.read()\n      \n      print(data.decode(\"utf-8\"))\n    ```\n\n    ### C#\n\n    #### RestSharp\n\n    ```\n      var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n      var request = new RestRequest(Method.GET);\n      request.AddHeader(\"accept\", \"application/json\");\n      request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n      IRestResponse response = client.Execute(request);    \n    ```\n\n    ### Ruby\n\n    ```\n      require 'uri'\n      require 'net/http'\n      \n      url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n      \n      http = Net::HTTP.new(url.host, url.port)\n      http.use_ssl = true\n      http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n      \n      request = Net::HTTP::Get.new(url)\n      request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n      request[\"accept\"] = 'application/json'\n      \n      response = http.request(request)\n      puts response.read_body\n    ```\n\n    ### PHP (HttpRequest)\n\n    ```\n      \u003c?php\n\n      $request = new HttpRequest();\n      $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n      $request-\u003esetMethod(HTTP_METH_GET);\n      \n      $request-\u003esetQueryData(array(\n        'extended' =\u003e 'true',\n        'sort' =\u003e 'Forms.created',\n        'direction' =\u003e 'DESC',\n        'include' =\u003e 'Products,CreatedBy',\n        'limit' =\u003e '5'\n      ));\n      \n      $request-\u003esetHeaders(array(\n        'accept' =\u003e 'application/json',\n        'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n      ));\n      \n      try {\n        $response = $request-\u003esend();\n      \n        echo $response-\u003egetBody();\n      } catch (HttpException $ex) {\n        echo $ex;\n      }\n    ```\n\n    ### Shell (cURL)\n\n    ```\n\n      $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n\n      \n    ```\n  title: Apacta\n  version: 0.0.1\n  x-apisguru-categories:\n    - time_management\n    - project_management\n  x-logo:\n    url: https://twitter.com/apactadk/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: http://apidoc.apacta.com/swagger.yaml\n      version: \"2.0\"\n  x-providerName: apacta.com\ntags:\n  - description: Experimental\n    name: TimeEntries\n  - description: Experimental\n    name: TimeEntryIntervals\n  - description: Experimental\n    name: TimeEntryTypes\n  - description: Experimental\n    name: TimeEntryUnitTypes\n  - description: Experimental\n    name: TimeEntryValueTypes\npaths:\n  /cities:\n    get:\n      parameters:\n        - description: Used to search for a city with specific zip code\n          in: query\n          name: zip_code\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/City\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get list of cities supported in Apacta\n      tags:\n        - Cities\n  \"/cities/{city_id}\":\n    get:\n      parameters:\n        - in: path\n          name: city_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/City\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get details about one city\n      tags:\n        - Cities\n  /clocking_records:\n    get:\n      parameters:\n        - description: Used to search for active clocking records\n          in: query\n          name: active\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/ClockingRecord\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get a list of clocking records\n      tags:\n        - ClockingRecords\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                checkin_latitude:\n                  type: string\n                checkin_longitude:\n                  type: string\n                checkout_latitude:\n                  type: string\n                checkout_longitude:\n                  type: string\n                project_id:\n                  format: uuid\n                  type: string\n              type: object\n        required: true\n      responses:\n        \"201\":\n          description: Successfully added clocking record\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Create clocking record for authenticated user\n      tags:\n        - ClockingRecords\n  /clocking_records/checkout:\n    post:\n      responses:\n        \"201\":\n          description: Successfully checked out\n          content:\n            application/json:\n              schema:\n                properties:\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Checkout active clocking record for authenticated user\n      tags:\n        - ClockingRecords\n  \"/clocking_records/{clocking_record_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: clocking_record_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: string\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete a clocking record\n      tags:\n        - ClockingRecords\n    get:\n      parameters:\n        - in: path\n          name: clocking_record_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/ClockingRecord\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Clocking record not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Details of 1 clocking_record\n      tags:\n        - ClockingRecords\n    put:\n      parameters:\n        - in: path\n          name: clocking_record_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit a clocking record\n      tags:\n        - ClockingRecords\n  /companies:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Company\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get a list of companies\n      tags:\n        - Companies\n  \"/companies/{company_id}\":\n    get:\n      parameters:\n        - in: path\n          name: company_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Company object\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Company\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Company not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Details of 1 company\n      tags:\n        - Companies\n  \"/companies/{company_id}/integration_feature_settings\":\n    get:\n      parameters:\n        - in: path\n          name: company_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/IntegrationFeatureSetting\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get a list of integration feature settings\n      tags:\n        - Companies\n  \"/companies/{company_id}/integration_feature_settings/{integration_feature_setting_id}\":\n    get:\n      parameters:\n        - in: path\n          name: company_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: integration_feature_setting_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/IntegrationFeatureSetting\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: IntegrationFeatureSetting not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show details of 1 integration feature setting\n      tags:\n        - Companies\n  /contact_types:\n    get:\n      parameters:\n        - description: Search for specific identifier value\n          in: query\n          name: identifier\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/ContactType\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get list of contact types supported in Apacta\n      tags:\n        - ContactTypes\n  \"/contact_types/{contact_type_id}\":\n    get:\n      parameters:\n        - in: path\n          name: contact_type_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/ContactType\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get details about one contact type\n      tags:\n        - ContactTypes\n  /contacts:\n    get:\n      parameters:\n        - description: Used to search for a contact with a specific name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Search for values in CVR field\n          in: query\n          name: cvr\n          schema:\n            type: string\n        - description: Search for values in EAN field\n          in: query\n          name: ean\n          schema:\n            type: string\n        - description: Search for values in ERP id field\n          in: query\n          name: erp_id\n          schema:\n            type: string\n        - description: Used to show only contacts with with one specific `ContactType`\n          in: query\n          name: contact_type\n          schema:\n            type: string\n            format: uuid\n        - description: Used to show only contacts with with one specific `City`\n          in: query\n          name: city\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Contact\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get a list of contacts\n      tags:\n        - Contacts\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Contact\"\n      responses:\n        \"201\":\n          description: Successfully added contact\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add a new contact\n      tags:\n        - Contacts\n  \"/contacts/{contact_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: contact_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: string\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete a contact\n      tags:\n        - Contacts\n    get:\n      parameters:\n        - in: path\n          name: contact_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Contact\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Contact not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Details of 1 contact\n      tags:\n        - Contacts\n    put:\n      parameters:\n        - in: path\n          name: contact_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Contact\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit a contact\n      tags:\n        - Contacts\n  /currencies:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Currency\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get list of currencies supported in Apacta\n      tags:\n        - Currencies\n  \"/currencies/{currency_id}\":\n    get:\n      parameters:\n        - in: path\n          name: currency_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Currency\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get details about one currency\n      tags:\n        - Currencies\n  /employee_hours:\n    get:\n      parameters:\n        - description: Date formatted as Y-m-d (2016-06-28)\n          in: query\n          name: date_from\n          required: true\n          schema:\n            type: string\n        - description: Date formatted as Y-m-d (2016-06-28)\n          in: query\n          name: date_to\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    description: One element per form in the period\n                    items:\n                      properties:\n                        form_date:\n                          description: Y-m-d formatted\n                          format: date\n                          type: string\n                        form_id:\n                          format: uuid\n                          type: string\n                        project_name:\n                          type: string\n                        total_hours:\n                          description: The amount of hours in seconds\n                          format: int32\n                          type: integer\n                        working_description:\n                          description: Trimmed at 50 characters\n                          type: string\n                        working_description_full:\n                          description: Full work description (if available)\n                          type: string\n                      type: object\n                    type: array\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Used to retrieve details about the logged in user's hours\n      tags:\n        - EmployeeHours\n  /expense_files:\n    get:\n      parameters:\n        - in: query\n          name: created_by_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: expense_id\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/ExpenseFile\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show list of expense files\n      tags:\n        - ExpenseFiles\n    post:\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                description:\n                  type: string\n              required:\n                - file\n      responses:\n        \"201\":\n          description: Successfully added file\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add file to expense\n      tags:\n        - ExpenseFiles\n  \"/expense_files/{expense_file_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: expense_file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: string\n                    type: array\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete file\n      tags:\n        - ExpenseFiles\n    get:\n      parameters:\n        - in: path\n          name: expense_file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: string\n                    type: array\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show file\n      tags:\n        - ExpenseFiles\n    put:\n      parameters:\n        - in: path\n          name: expense_file_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit file\n      tags:\n        - ExpenseFiles\n  /expense_lines:\n    get:\n      parameters:\n        - in: query\n          name: created_by_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: currency_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: expense_id\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/ExpenseLine\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show list of expense lines\n      tags:\n        - ExpenseLines\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                buying_price:\n                  format: float\n                  type: number\n                currency_id:\n                  format: uuid\n                  type: string\n                expense_id:\n                  format: uuid\n                  type: string\n                quantity:\n                  format: int32\n                  type: integer\n                selling_price:\n                  format: float\n                  type: number\n                text:\n                  maxLength: 255\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add line to expense\n      tags:\n        - ExpenseLines\n  \"/expense_lines/{expense_line_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: expense_line_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/ExpenseLine\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete expense line\n      tags:\n        - ExpenseLines\n    get:\n      parameters:\n        - in: path\n          name: expense_line_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/ExpenseLine\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show expense line\n      tags:\n        - ExpenseLines\n    put:\n      parameters:\n        - in: path\n          name: expense_line_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/ExpenseLine\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit expense line\n      tags:\n        - ExpenseLines\n  /expenses:\n    get:\n      parameters:\n        - in: query\n          name: created_by_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: company_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: contact_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: project_id\n          schema:\n            type: string\n            format: uuid\n        - description: Created after date\n          in: query\n          name: gt_created\n          schema:\n            type: string\n            format: date\n        - description: Created before date\n          in: query\n          name: lt_created\n          schema:\n            type: string\n            format: date\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Expense\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show list of expenses\n      tags:\n        - Expenses\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                contact_id:\n                  format: uuid\n                  type: string\n                currency_id:\n                  format: uuid\n                  type: string\n                delivery_date:\n                  format: date\n                  type: string\n                description:\n                  maxLength: 8192\n                  type: string\n                project_id:\n                  format: uuid\n                  type: string\n                reference:\n                  maxLength: 8192\n                  type: string\n                short_text:\n                  maxLength: 255\n                  type: string\n                supplier_invoice_number:\n                  maxLength: 255\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add line to expense\n      tags:\n        - Expenses\n  \"/expenses/{expense_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: expense_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Expense\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete expense\n      tags:\n        - Expenses\n    get:\n      parameters:\n        - in: path\n          name: expense_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Expense\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show expense\n      tags:\n        - Expenses\n    put:\n      parameters:\n        - in: path\n          name: expense_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Expense\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit expense\n      tags:\n        - Expenses\n  \"/expenses/{expense_id}/original_files\":\n    get:\n      parameters:\n        - in: path\n          name: expense_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show list of all OIOUBL files for the expense\n      tags:\n        - Expense OIOUBL files\n  \"/expenses/{expense_id}/original_files/{file_id}\":\n    get:\n      parameters:\n        - in: path\n          name: expense_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show OIOUBL file\n      tags:\n        - Expense OIOUBL files\n  /form_field_types:\n    get:\n      parameters:\n        - description: Used to filter on the `name` of the form_fields\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Used to filter on the `identifier` of the form_fields\n          in: query\n          name: identifier\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/FormFieldType\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get list of form field types\n      tags:\n        - FormFieldTypes\n  \"/form_field_types/{form_field_type_id}\":\n    get:\n      parameters:\n        - in: path\n          name: form_field_type_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/FormFieldType\"\n                  success:\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get details about single `FormField`\n      tags:\n        - FormFieldTypes\n  /form_fields:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                comment:\n                  maxLength: 8192\n                  type: string\n                content_value:\n                  maxLength: 255\n                  type: string\n                file_id:\n                  format: uuid\n                  type: string\n                form_field_type_id:\n                  format: uuid\n                  type: string\n                form_id:\n                  format: uuid\n                  type: string\n                form_template_field_id:\n                  format: uuid\n                  type: string\n                placement:\n                  format: int32\n                  type: integer\n              type: object\n      responses:\n        \"201\":\n          description: Successfully added field\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add a new field to a `Form`\n      tags:\n        - FormFields\n  \"/form_fields/{form_field_id}\":\n    get:\n      parameters:\n        - in: path\n          name: form_field_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/FormField\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get details about single `FormField`\n      tags:\n        - FormFields\n  /form_templates:\n    get:\n      parameters:\n        - description: Used to filter on the `name` of the form_templates\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Used to filter on the `identifier` of the form_templates\n          in: query\n          name: identifier\n          required: false\n          schema:\n            type: string\n        - description: Used to filter on the `pdf_template_identifier` of the form_templates\n          in: query\n          name: pdf_template_identifier\n          schema:\n            type: string\n        - description: Used to filter on the `description` of the form_templates\n          in: query\n          name: description\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/FormTemplate\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get array of form_templates for your company\n      tags:\n        - FormTemplates\n  \"/form_templates/{form_template_id}\":\n    get:\n      parameters:\n        - in: path\n          name: form_template_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/FormTemplate\"\n                  success:\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View one form template\n      tags:\n        - FormTemplates\n  /forms:\n    get:\n      parameters:\n        - description: Used to have extended details from the forms from the `Form`'s\n            `FormFields`\n          in: query\n          name: extended\n          schema:\n            type: string\n            enum:\n              - true\n              - false\n        - description: Used in conjunction with `date_to` to only show forms within these\n            dates - format like `2016-28-05`\n          in: query\n          name: date_from\n          schema:\n            type: string\n            format: Y-m-d\n        - description: Used in conjunction with `date_from` to only show forms within these\n            dates - format like `2016-28-30`\n          in: query\n          name: date_to\n          schema:\n            type: string\n            format: Y-m-d\n        - description: Used to filter on the `project_id` of the forms\n          in: query\n          name: project_id\n          schema:\n            type: string\n            format: uuid\n        - description: Used to filter on the `created_by_id` of the forms\n          in: query\n          name: created_by_id\n          required: false\n          schema:\n            type: string\n        - description: Used to filter on the `form_template_id` of the forms\n          in: query\n          name: form_template_id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Form\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Retrieve array of forms\n      tags:\n        - Forms\n    post:\n      description: Used to add a form into the system\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                form_template_id:\n                  format: uuid\n                  type: string\n                project_id:\n                  format: uuid\n                  type: string\n              required:\n                - project_id\n                - form_template_id\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add new form\n      tags:\n        - Forms\n  \"/forms/{form_id}\":\n    delete:\n      description: You can only delete the forms that you've submitted yourself\n      parameters:\n        - in: path\n          name: form_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete a form\n      tags:\n        - Forms\n    get:\n      parameters:\n        - in: path\n          name: form_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Form\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View form\n      tags:\n        - Forms\n    put:\n      parameters:\n        - in: path\n          name: form_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit a form\n      tags:\n        - Forms\n  /invoice_lines:\n    get:\n      parameters:\n        - in: query\n          name: invoice_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: product_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: user_id\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: name\n          schema:\n            type: string\n        - in: query\n          name: discount_text\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/InvoiceLine\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View list of invoice lines\n      tags:\n        - InvoiceLines\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/InvoiceLine\"\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add invoice\n      tags:\n        - InvoiceLines\n  \"/invoice_lines/{invoice_line_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: invoice_line_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete invoice line\n      tags:\n        - InvoiceLines\n    get:\n      parameters:\n        - in: path\n          name: invoice_line_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/InvoiceLine\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View invoice line\n      tags:\n        - InvoiceLines\n    put:\n      parameters:\n        - in: path\n          name: invoice_line_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        $ref: \"#/components/requestBodies/InvoiceLine\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit invoice line\n      tags:\n        - InvoiceLines\n  /invoices:\n    get:\n      parameters:\n        - description: Used to filter on the `contact_id` of the invoices\n          in: query\n          name: contact_id\n          schema:\n            type: string\n            format: uuid\n        - description: Used to filter on the `project_id` of the invoices\n          in: query\n          name: project_id\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - description: Used to filter on the `invoice_number` of the invoices\n          in: query\n          name: invoice_number\n          schema:\n            type: string\n        - in: query\n          name: offer_number\n          schema:\n            type: string\n        - in: query\n          name: is_draft\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: is_offer\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: is_locked\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: date_from\n          schema:\n            type: string\n            format: date\n        - in: query\n          name: date_to\n          schema:\n            type: string\n            format: date\n        - in: query\n          name: issued_date\n          schema:\n            type: string\n            format: date\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Invoice\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View list of invoices\n      tags:\n        - Invoices\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                contact_id:\n                  format: uuid\n                  type: string\n                created_or_modified_gte:\n                  format: date\n                  type: string\n                date_from:\n                  format: date\n                  type: string\n                date_to:\n                  format: date\n                  type: string\n                erp_id:\n                  maxLength: 255\n                  type: string\n                erp_payment_term_id:\n                  maxLength: 255\n                  type: string\n                invoice_number:\n                  format: int32\n                  maxLength: 8\n                  type: integer\n                is_draft:\n                  type: boolean\n                is_locked:\n                  type: boolean\n                is_offer:\n                  type: boolean\n                issued_date:\n                  format: date\n                  type: string\n                message:\n                  maxLength: 8192\n                  type: string\n                offer_number:\n                  format: int32\n                  maxLength: 8\n                  type: integer\n                payment_due_date:\n                  format: date\n                  type: string\n                payment_term_id:\n                  format: uuid\n                  type: string\n                project_id:\n                  format: uuid\n                  type: string\n                reference:\n                  maxLength: 255\n                  type: string\n                vat_percent:\n                  format: int32\n                  maxLength: 2\n                  type: integer\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add invoice\n      tags:\n        - Invoices\n  \"/invoices/{invoice_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: invoice_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete invoice\n      tags:\n        - Invoices\n    get:\n      parameters:\n        - in: path\n          name: invoice_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Invoice\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View invoice\n      tags:\n        - Invoices\n    put:\n      parameters:\n        - in: path\n          name: invoice_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                contact_id:\n                  format: uuid\n                  type: string\n                date_from:\n                  format: date\n                  type: string\n                date_to:\n                  format: date\n                  type: string\n                erp_id:\n                  maxLength: 255\n                  type: string\n                erp_payment_term_id:\n                  maxLength: 255\n                  type: string\n                invoice_number:\n                  format: int32\n                  maxLength: 8\n                  type: integer\n                is_draft:\n                  type: boolean\n                is_locked:\n                  type: boolean\n                is_offer:\n                  type: boolean\n                issued_date:\n                  format: date\n                  type: string\n                message:\n                  maxLength: 8192\n                  type: string\n                offer_number:\n                  format: int32\n                  maxLength: 8\n                  type: integer\n                payment_due_date:\n                  format: date\n                  type: string\n                payment_term_id:\n                  format: uuid\n                  type: string\n                project_id:\n                  format: uuid\n                  type: string\n                reference:\n                  maxLength: 255\n                  type: string\n                vat_percent:\n                  format: int32\n                  maxLength: 2\n                  type: integer\n              type: object\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit invoice\n      tags:\n        - Invoices\n  /mass_messages_users:\n    get:\n      parameters:\n        - description: Used to filter on the `is_read` of the mass messages\n          in: query\n          name: is_read\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/MassMessagesUser\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View list of mass messages for specific user\n      tags:\n        - MassMessagesUsers\n  \"/mass_messages_users/{mass_messages_user_id}\":\n    get:\n      parameters:\n        - in: path\n          name: mass_messages_user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/MassMessagesUser\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View mass message\n      tags:\n        - MassMessagesUsers\n    put:\n      parameters:\n        - in: path\n          name: mass_messages_user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit mass message\n      tags:\n        - MassMessagesUsers\n  /materials:\n    get:\n      parameters:\n        - description: Used to filter on the `barcode` of the materials\n          in: query\n          name: barcode\n          required: false\n          schema:\n            type: string\n        - description: Used to filter on the `name` of the materials\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Used to find materials used in specific project by `project_id`\n          in: query\n          name: project_id\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - description: Used to find currently rented materials\n          in: query\n          name: currently_rented\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Material\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View list of all materials\n      tags:\n        - Materials\n  \"/materials/{material_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete material\n      tags:\n        - Materials\n    get:\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Material\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View material\n      tags:\n        - Materials\n    put:\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit material\n      tags:\n        - Materials\n  \"/materials/{material_id}/rentals/\":\n    get:\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/MaterialRental\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show list of rentals for specific material\n      tags:\n        - MaterialRentals\n    post:\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                form_id:\n                  format: uuid\n                  type: string\n                from_date:\n                  format: dateTime\n                  type: string\n                is_invoiced:\n                  format: dateTime\n                  type: string\n                material_id:\n                  format: uuid\n                  type: string\n                project_id:\n                  format: uuid\n                  type: string\n                quantity:\n                  format: float\n                  type: number\n                to_date:\n                  format: dateTime\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add material rental\n      tags:\n        - MaterialRentals\n  \"/materials/{material_id}/rentals/checkout/\":\n    post:\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                form_id:\n                  format: uuid\n                  type: string\n                material_rental_id:\n                  format: uuid\n                  type: string\n                to_date:\n                  format: dateTime\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Checkout material rental\n      tags:\n        - MaterialRentals\n  \"/materials/{material_id}/rentals/{material_rental_id}/\":\n    delete:\n      description: Delete rental for material\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: material_rental_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete material rental\n      tags:\n        - MaterialRentals\n    get:\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: material_rental_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/MaterialRental\"\n                  success:\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show rental foor materi\n      tags:\n        - MaterialRentals\n    post:\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: material_rental_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                barcode:\n                  type: string\n                billing_cysle:\n                  enum:\n                    - hourly\n                    - daily\n                    - weekly\n                  type: string\n                cost_price:\n                  format: float\n                  type: number\n                description:\n                  type: string\n                is_single_usage:\n                  type: boolean\n                name:\n                  type: string\n                selling_price:\n                  format: float\n                  type: number\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add material\n      tags:\n        - Materials\n    put:\n      description: Edit material rental\n      parameters:\n        - in: path\n          name: material_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: material_rental_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit material rental\n      tags:\n        - MaterialRentals\n  /payment_term_types:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/PaymentTermType\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get a list of payment term types\n      tags:\n        - PaymentTermTypes\n  \"/payment_term_types/{payment_term_type_id}\":\n    get:\n      parameters:\n        - in: path\n          name: payment_term_type_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/PaymentTermType\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Details of 1 payment term type\n      tags:\n        - PaymentTermTypes\n  /payment_terms:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/PaymentTerm\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get a list of payment terms\n      tags:\n        - PaymentTerms\n  \"/payment_terms/{payment_term_id}\":\n    get:\n      parameters:\n        - in: path\n          name: payment_term_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/PaymentTerm\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: PaymentTerm not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Details of 1 payment term\n      tags:\n        - PaymentTerms\n  /ping:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    default: ok\n                    type: string\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Check if API is up and API key works\n      tags:\n        - Ping\n  /products:\n    get:\n      parameters:\n        - description: Used to filter on the `name` of the products\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Used to filter on the `product_number` of the products\n          in: query\n          name: product_number\n          schema:\n            type: string\n            format: uuid\n        - description: Used to filter on the `barcode` of the products\n          in: query\n          name: barcode\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Product\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: List products\n      tags:\n        - Products\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                barcode:\n                  maxLength: 255\n                  type: string\n                buying_price:\n                  format: double\n                  type: number\n                description:\n                  maxLength: 8192\n                  type: string\n                erp_id:\n                  maxLength: 255\n                  type: string\n                name:\n                  maxLength: 255\n                  type: string\n                product_number:\n                  maxLength: 255\n                  type: string\n                selling_price:\n                  format: double\n                  type: number\n              required:\n                - name\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add new product\n      tags:\n        - Products\n  \"/products/{product_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: product_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: string\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete a product\n      tags:\n        - Products\n    get:\n      parameters:\n        - in: path\n          name: product_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Product\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View single product\n      tags:\n        - Products\n    put:\n      parameters:\n        - in: path\n          name: product_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit a product\n      tags:\n        - Products\n  /project_statuses:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/ProjectStatus\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get list of project statuses\n      tags:\n        - ProjectStatuses\n  \"/project_statuses/{project_status_id}\":\n    get:\n      parameters:\n        - in: path\n          name: project_status_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/ProjectStatus\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get details about one contact type\n      tags:\n        - ProjectStatuses\n  /projects:\n    get:\n      parameters:\n        - description: Unless this is set to `true` only open projects will be shown\n          in: query\n          name: show_all\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Used to filter on the `contact_id` of the projects\n          in: query\n          name: contact_id\n          schema:\n            type: string\n            format: uuid\n        - description: Used to filter on the `project_status_id` of the projects\n          in: query\n          name: project_status_id\n          schema:\n            type: string\n            format: uuid\n        - description: Used to filter on the `project_status_id` of the projects (match any\n            of the provided values)\n          in: query\n          name: project_status_ids\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              format: uuid\n              type: string\n        - description: Used to search on the `name` of the projects\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Used to search on the `erp_project_id` of the projects\n          in: query\n          name: erp_project_id\n          schema:\n            type: string\n        - description: Used to search on the `erp_task_id` of the projects\n          in: query\n          name: erp_task_id\n          schema:\n            type: string\n        - description: Show projects with start time after than this value\n          in: query\n          name: start_time_gte\n          schema:\n            type: string\n        - description: Show projects with start time before this value\n          in: query\n          name: start_time_lte\n          schema:\n            type: string\n        - description: Show only projects with start time on specific date\n          in: query\n          name: start_time_eq\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/Project\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View list of projects\n      tags:\n        - Projects\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Project\"\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add a project\n      tags:\n        - Projects\n  \"/projects/{project_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: string\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete a project\n      tags:\n        - Projects\n    get:\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Project\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View specific project\n      tags:\n        - Projects\n    put:\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Project\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit a project\n      tags:\n        - Projects\n  \"/projects/{project_id}/files\":\n    get:\n      description: Used to show files uploaded to a project from wall post or form\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: string\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show list of files uploaded to project\n      tags:\n        - Projects\n  \"/projects/{project_id}/files/{file_id}/\":\n    delete:\n      description: Delete file uploaded to a project from wall post or form\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete file\n      tags:\n        - Projects\n    get:\n      description: Show file uploaded to a project from wall post or form\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show file\n      tags:\n        - Projects\n    put:\n      description: Edit file uploaded to a project from wall post or form\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit file\n      tags:\n        - Projects\n  \"/projects/{project_id}/project_files\":\n    get:\n      description: Returns files belonging to the project, not uploaded from wall post or\n        form\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: string\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show list of project files uploaded to project\n      tags:\n        - Projects\n    post:\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n              required:\n                - file\n      responses:\n        \"201\":\n          description: Successfully added project file\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add project file to projects\n      tags:\n        - Projects\n  \"/projects/{project_id}/project_files/{project_file_id}/\":\n    delete:\n      parameters:\n        - in: path\n          name: project_file_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete project file\n      tags:\n        - Projects\n    get:\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: project_file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show project file\n      tags:\n        - Projects\n    put:\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: path\n          name: project_file_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit project file\n      tags:\n        - Projects\n  \"/projects/{project_id}/users/\":\n    get:\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/User\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Show list of users added to project\n      tags:\n        - Projects\n    post:\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                user_id:\n                  format: uuid\n                  type: string\n              required:\n                - user_id\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add user to project\n      tags:\n        - Projects\n  \"/projects/{project_id}/users/{user_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete user from project\n      tags:\n        - Projects\n    get:\n      parameters:\n        - in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/User\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View specific user assigned to project\n      tags:\n        - Projects\n  /stock_locations:\n    get:\n      parameters:\n        - description: Used to filter on the `name` of the stock_locations\n          in: query\n          name: name\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/StockLocation\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: List stock_locations\n      tags:\n        - StockLocations\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  maxLength: 255\n                  type: string\n              required:\n                - name\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add new stock_locations\n      tags:\n        - StockLocations\n  \"/stock_locations/{location_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: location_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete location\n      tags:\n        - StockLocations\n    get:\n      parameters:\n        - in: path\n          name: location_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/StockLocation\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View single location\n      tags:\n        - StockLocations\n    put:\n      parameters:\n        - in: path\n          name: location_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit location\n      tags:\n        - StockLocations\n  /time_entries:\n    get:\n      parameters:\n        - in: query\n          name: user_id\n          schema:\n            type: string\n        - in: query\n          name: form_id\n          schema:\n            type: string\n        - in: query\n          name: project_id\n          schema:\n            type: string\n        - in: query\n          name: gt_from_time\n          schema:\n            type: string\n        - in: query\n          name: lt_from_time\n          schema:\n            type: string\n        - in: query\n          name: gt_to_time\n          schema:\n            type: string\n        - in: query\n          name: lt_to_time\n          schema:\n            type: string\n        - in: query\n          name: lt_sum\n          schema:\n            type: string\n        - in: query\n          name: gt_sum\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/TimeEntry\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: List time entries\n      tags:\n        - TimeEntries\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                form_id:\n                  format: uuid\n                  type: string\n                from_time:\n                  format: dateTime\n                  type: string\n                is_all_day:\n                  type: boolean\n                project_id:\n                  format: uuid\n                  type: string\n                sum:\n                  description: Amount of seconds - should only be included when using\n                    is_all_day, otherwise will be calculated from from_time and\n                    to_time\n                  format: int32\n                  type: integer\n                time_entry_type_id:\n                  format: uuid\n                  type: string\n                to_time:\n                  format: dateTime\n                  type: string\n                user_id:\n                  format: uuid\n                  type: string\n              required:\n                - user_id\n                - time_entry_type_id\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add new time entry\n      tags:\n        - TimeEntries\n  \"/time_entries/{time_entry_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: time_entry_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete time entry\n      tags:\n        - TimeEntries\n    get:\n      parameters:\n        - in: path\n          name: time_entry_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/TimeEntry\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View time entry\n      tags:\n        - TimeEntries\n    put:\n      parameters:\n        - in: path\n          name: time_entry_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit time entry\n      tags:\n        - TimeEntries\n  /time_entry_intervals:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/TimeEntryInterval\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: List possible time entry intervals\n      tags:\n        - TimeEntryIntervals\n  \"/time_entry_intervals/{time_entry_interval_id}\":\n    get:\n      parameters:\n        - in: path\n          name: time_entry_interval_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/TimeEntryInterval\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View time entry interval\n      tags:\n        - TimeEntryIntervals\n  /time_entry_types:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/TimeEntryType\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: List time entries types\n      tags:\n        - TimeEntryTypes\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  maxLength: 8192\n                  type: string\n                name:\n                  maxLength: 255\n                  type: string\n                time_entry_interval_id:\n                  format: uuid\n                  type: string\n                time_entry_value_type_id:\n                  format: uuid\n                  type: string\n              required:\n                - time_entry_interval_id\n                - time_entry_value_type_id\n                - name\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add new time entry type\n      tags:\n        - TimeEntryTypes\n  \"/time_entry_types/{time_entry_type_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: time_entry_type_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete time entry type\n      tags:\n        - TimeEntryTypes\n    get:\n      parameters:\n        - in: path\n          name: time_entry_type_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/TimeEntryType\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View time entry type\n      tags:\n        - TimeEntryTypes\n    put:\n      parameters:\n        - in: path\n          name: time_entry_type_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit time entry type\n      tags:\n        - TimeEntryTypes\n  /time_entry_unit_types:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/TimeEntryUnitType\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: List possible time entry unit types\n      tags:\n        - TimeEntryUnitTypes\n  \"/time_entry_unit_types/{time_entry_unit_type_id}\":\n    get:\n      parameters:\n        - in: path\n          name: time_entry_unit_type_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/TimeEntryUnitType\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View time entry unit type\n      tags:\n        - TimeEntryUnitTypes\n  /time_entry_value_types:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/TimeEntryValueType\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: List possible time entry value types\n      tags:\n        - TimeEntryValueTypes\n  \"/time_entry_value_types/{time_entry_value_type_id}\":\n    get:\n      parameters:\n        - in: path\n          name: time_entry_value_type_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/TimeEntryValueType\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View time entry value type\n      tags:\n        - TimeEntryValueTypes\n  /users:\n    get:\n      parameters:\n        - description: Used to filter on the `first_name` of the users\n          in: query\n          name: first_name\n          required: false\n          schema:\n            type: string\n        - description: Used to filter on the `last_name` of the users\n          in: query\n          name: last_name\n          required: false\n          schema:\n            type: string\n        - description: Used to filter on the `email` of the users\n          in: query\n          name: email\n          schema:\n            type: string\n        - description: Used to filter on the `stock_location_id` of the users\n          in: query\n          name: stock_location_id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/User\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Get list of users in company\n      tags:\n        - Users\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                city_id:\n                  format: uuid\n                  type: string\n                cost_price:\n                  description: Cost of salaries\n                  format: float\n                  type: number\n                email:\n                  format: email\n                  maxLength: 255\n                  type: string\n                extra_price:\n                  description: Additional cost on this employee (pension, vacation etc.)\n                  format: float\n                  type: number\n                first_name:\n                  maxLength: 255\n                  type: string\n                is_active:\n                  type: boolean\n                language_id:\n                  format: uuid\n                  type: string\n                last_name:\n                  maxLength: 255\n                  type: string\n                mobile:\n                  maxLength: 32\n                  type: string\n                mobile_countrycode:\n                  maxLength: 8\n                  type: string\n                password:\n                  format: password\n                  maxLength: 255\n                  type: string\n                phone:\n                  maxLength: 32\n                  type: string\n                phone_countrycode:\n                  maxLength: 8\n                  type: string\n                receive_form_mails:\n                  description: If `true` the employee will receive an email receipt of\n                    every form submitted\n                  type: boolean\n                sale_price:\n                  description: The price this employee costs per hour when working\n                  format: float\n                  type: number\n                street_name:\n                  maxLength: 255\n                  type: string\n              required:\n                - first_name\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add user to company\n      tags:\n        - Users\n  \"/users/{user_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Delete user\n      tags:\n        - Users\n    get:\n      parameters:\n        - in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/User\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View user\n      tags:\n        - Users\n    put:\n      parameters:\n        - in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      type: object\n                    type: array\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Edit user\n      tags:\n        - Users\n  /vendor_products:\n    get:\n      parameters:\n        - description: Used to filter on the `name` of the vendor products\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Used to filter on the `product_number` of the vendor products\n          in: query\n          name: product_number\n          schema:\n            type: string\n            format: uuid\n        - description: Used to filter on the `barcode` of the vendor products\n          in: query\n          name: barcode\n          schema:\n            type: string\n        - description: Used to filter on the `vendor_id` of the vendor products\n          in: query\n          name: vendor_id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/VendorProduct\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: List vendor products\n      tags:\n        - VendorProducts\n  \"/vendor_products/{vendor_product_id}\":\n    get:\n      parameters:\n        - in: path\n          name: vendor_product_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/VendorProduct\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View single vendor product\n      tags:\n        - VendorProducts\n  /wall_comments:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  type: string\n                wall_post_id:\n                  format: uuid\n                  type: string\n              required:\n                - wall_post_id\n                - message\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add wall comment\n      tags:\n        - WallComments\n  \"/wall_comments/{wall_comment_id}\":\n    get:\n      parameters:\n        - in: path\n          name: wall_comment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/WallComment\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View wall comment\n      tags:\n        - WallComments\n  /wall_posts:\n    get:\n      parameters:\n        - in: query\n          name: project_id\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: user_id\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/WallPost\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n        \"401\":\n          description: Not authorized to access project\n        \"404\":\n          description: Project not found\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View list of wall posts\n      tags:\n        - WallPosts\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  type: string\n                project_id:\n                  format: uuid\n                  type: string\n              required:\n                - project_id\n                - message\n              type: object\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      id:\n                        format: uuid\n                        type: string\n                    type: object\n                  success:\n                    default: true\n                    type: boolean\n                type: object\n        \"422\":\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorValidation\"\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: Add a wall post\n      tags:\n        - WallPosts\n  \"/wall_posts/{wall_post_id}\":\n    get:\n      parameters:\n        - in: path\n          name: wall_post_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/WallPost\"\n                  success:\n                    type: boolean\n                type: object\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: View wall post\n      tags:\n        - WallPosts\n  \"/wall_posts/{wall_post_id}/wall_comments\":\n    get:\n      parameters:\n        - in: path\n          name: wall_post_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: \"#/components/schemas/WallComment\"\n                    type: array\n                  pagination:\n                    $ref: \"#/components/schemas/PaginationDetails\"\n                  success:\n                    type: boolean\n                type: object\n        \"401\":\n          description: Not authorized to access project\n        \"404\":\n          description: Wall post not found\n      security:\n        - X-Auth-Token: []\n        - api_key: []\n      summary: See wall comments to a wall post\n      tags:\n        - WallPosts\nservers:\n  - url: https://app.apacta.com/api/v1\ncomponents:\n  requestBodies:\n    InvoiceLine:\n      content:\n        application/json:\n          schema:\n            properties:\n              description:\n                maxLength: 8192\n                type: string\n              discount_percent:\n                format: int32\n                type: integer\n              discount_text:\n                maxLength: 255\n                type: string\n              invoice_id:\n                format: uuid\n                type: string\n              name:\n                maxLength: 2048\n                type: string\n              product_id:\n                format: uuid\n                type: string\n              quantity:\n                format: int32\n                type: integer\n              selling_price:\n                format: float\n                type: number\n              user_id:\n                format: uuid\n                type: string\n            type: object\n    Project:\n      content:\n        application/json:\n          schema:\n            properties:\n              contact_id:\n                format: uuid\n                type: string\n              description:\n                maxLength: 8192\n                type: string\n              erp_project_id:\n                maxLength: 255\n                type: string\n              erp_task_id:\n                maxLength: 255\n                type: string\n              name:\n                maxLength: 255\n                type: string\n              project_status_id:\n                format: uuid\n                type: string\n              start_time:\n                format: datetime\n                type: string\n              street_name:\n                maxLength: 255\n                type: string\n            required:\n              - name\n            type: object\n    Contact:\n      content:\n        application/json:\n          schema:\n            properties:\n              address:\n                description: Street address\n                maxLength: 255\n                type: string\n              city_id:\n                format: uuid\n                type: string\n              contact_types:\n                properties:\n                  _ids:\n                    items:\n                      type: string\n                    type: array\n                type: object\n              cvr:\n                maxLength: 255\n                type: string\n              description:\n                maxLength: 8192\n                type: string\n              email:\n                maxLength: 255\n                type: string\n              erp_id:\n                description: If company has integration to an ERP system, and the contacts\n                  are synchronized, this will be the ERP-systems ID of this\n                  contact\n                maxLength: 255\n                type: string\n              name:\n                maxLength: 255\n                type: string\n              phone:\n                description: Format like eg. `28680133` or `046158971404`\n                maxLength: 32\n                type: string\n              website:\n                maxLength: 255\n                type: string\n            type: object\n  securitySchemes:\n    X-Auth-Token:\n      in: header\n      name: X-Auth-Token\n      type: apiKey\n    api_key:\n      description: Uses the user's API token found from within the control panel in\n        \"settings\" -\u003e \"additional settings\"\n      in: query\n      name: api_token\n      type: apiKey\n  schemas:\n    City:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n        zip_code:\n          maxLength: 11\n          type: integer\n      type: object\n    ClockingRecord:\n      properties:\n        checked_in:\n          format: dateTime\n          type: string\n        checked_out:\n          format: dateTime\n          type: string\n        checkin_latitude:\n          type: string\n        checkin_longitude:\n          type: string\n        checkout_latitude:\n          type: string\n        checkout_longitude:\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        project_id:\n          format: uuid\n          type: string\n        user_id:\n          format: uuid\n          type: string\n      type: object\n    Company:\n      properties:\n        city_id:\n          format: uuid\n          type: string\n        contact_person_id:\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        cvr:\n          maxLength: 255\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        expired:\n          format: date-time\n          type: string\n        file_id:\n          format: uuid\n          type: string\n        id:\n          format: uuid\n          type: string\n        invoice_email:\n          format: email\n          maxLength: 255\n          type: string\n        language_id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n        next_invoice_number:\n          format: int32\n          maxLength: 8\n          type: integer\n        phone:\n          description: Format like eg. `28680133` or `046158971404`\n          maxLength: 32\n          type: string\n        phone_countrycode:\n          description: Format like eg. `45` or `49`\n          maxLength: 3\n          type: string\n        receive_form_mails:\n          format: email\n          maxLength: 255\n          type: string\n        street_name:\n          maxLength: 255\n          type: string\n        vat_percent:\n          format: int32\n          maxLength: 12\n          type: integer\n        website:\n          maxLength: 255\n          type: string\n      type: object\n    Contact:\n      properties:\n        address:\n          description: Street address\n          maxLength: 255\n          type: string\n        city_id:\n          format: uuid\n          type: string\n        company_id:\n          description: Only filled out if this represents another company within Apacta\n            (used for partners)\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        cvr:\n          maxLength: 255\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        email:\n          maxLength: 255\n          type: string\n        erp_id:\n          description: If company has integration to an ERP system, and the contacts are\n            synchronized, this will be the ERP-systems ID of this contact\n          maxLength: 255\n          type: string\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n        phone:\n          description: Format like eg. `28680133` or `046158971404`\n          maxLength: 32\n          type: string\n        website:\n          maxLength: 255\n          type: string\n      type: object\n    ContactType:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          description: One of 3 values\n          enum:\n            - client\n            - partner\n            - supplier\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    Currency:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        currency_sign:\n          maxLength: 8\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          maxLength: 255\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    ErrorNotFound:\n      properties:\n        data:\n          properties:\n            code:\n              description: The HTTP status code\n              type: integer\n            message:\n              default: A validation error occurred\n              description: Error message\n              type: string\n            url:\n              description: The url from which this originated\n              type: string\n          type: object\n        success:\n          default: false\n          type: boolean\n      type: object\n    ErrorValidation:\n      properties:\n        data:\n          properties:\n            code:\n              description: The HTTP status code\n              type: integer\n            errorCount:\n              description: The amount of validation errors\n              type: integer\n            errors:\n              description: Object that contains details information about which properties\n                failed validation and what rules they failed.\n              type: object\n            message:\n              default: A validation error occurred\n              description: Error message\n              type: string\n            url:\n              description: The url from which this originated\n              type: string\n          type: object\n        success:\n          default: false\n          type: boolean\n      type: object\n    Expense:\n      properties:\n        company_id:\n          description: Read-only\n          format: uuid\n          type: string\n        contact_id:\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        currency_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        delivery_date:\n          format: date\n          type: string\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          description: Read-only\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        project_id:\n          format: uuid\n          type: string\n        reference:\n          maxLength: 8192\n          type: string\n        short_text:\n          maxLength: 255\n          type: string\n        supplier_invoice_number:\n          maxLength: 255\n          type: string\n      type: object\n    ExpenseFile:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        expense_id:\n          format: uuid\n          type: string\n        file:\n          description: File's name\n          maxLength: 255\n          type: string\n        file_extension:\n          maxLength: 255\n          type: string\n        file_original_name:\n          maxLength: 255\n          type: string\n        file_size:\n          description: File size in bytes\n          maxLength: 255\n          type: string\n        file_type:\n          description: File's MIME type\n          maxLength: 255\n          type: string\n        file_url:\n          description: Read-only\n          maxLength: 255\n          type: string\n        id:\n          description: Read-only\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n      type: object\n    ExpenseLine:\n      properties:\n        buying_price:\n          format: float\n          type: number\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        currency_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        expense_id:\n          format: uuid\n          type: string\n        id:\n          description: Read-only\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        quantity:\n          format: int32\n          type: integer\n        selling_price:\n          format: float\n          type: number\n        text:\n          maxLength: 255\n          type: string\n      type: object\n    Form:\n      properties:\n        approved_by_id:\n          format: uuid\n          type: string\n        company_id:\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        form_date:\n          format: date\n          type: string\n        form_template_id:\n          format: uuid\n          type: string\n        id:\n          description: Read-only\n          format: uuid\n          type: string\n        is_draft:\n          default: false\n          type: boolean\n        is_invoiced:\n          default: false\n          type: boolean\n        is_shared:\n          default: false\n          type: boolean\n        mass_form_id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        project_id:\n          format: uuid\n          type: string\n      type: object\n    FormField:\n      properties:\n        comment:\n          maxLength: 8192\n          type: string\n        content_value:\n          maxLength: 255\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        file_id:\n          format: uuid\n          type: string\n        form_field_type_id:\n          format: uuid\n          type: string\n        form_id:\n          format: uuid\n          type: string\n        form_template_field_id:\n          format: uuid\n          type: string\n        id:\n          description: Read-only\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        placement:\n          format: int32\n          type: integer\n      type: object\n    FormFieldType:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          description: Read-only\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          description: Read-only\n          format: uuid\n          type: string\n        identifier:\n          maxLength: 255\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    FormTemplate:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        form_category_id:\n          format: uuid\n          type: string\n        form_overview_category_id:\n          format: uuid\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          maxLength: 255\n          type: string\n        is_active:\n          type: boolean\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n        pdf_template_identifier:\n          maxLength: 255\n          type: string\n      type: object\n    IntegrationFeatureSetting:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        default_value:\n          maxLength: 255\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          maxLength: 255\n          type: string\n        integration_feature_id:\n          format: uuid\n          type: string\n        is_custom_setting:\n          type: boolean\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    Invoice:\n      properties:\n        company_id:\n          format: uuid\n          type: string\n        contact_id:\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        currency_id:\n          format: uuid\n          type: string\n        date_from:\n          format: date\n          type: string\n        date_to:\n          format: date\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        erp_id:\n          maxLength: 255\n          type: string\n        erp_payment_term_id:\n          maxLength: 255\n          type: string\n        eu_customer:\n          type: boolean\n        gross_payment:\n          format: float\n          type: number\n        id:\n          format: uuid\n          type: string\n        integration_id:\n          format: uuid\n          type: string\n        invoice_number:\n          format: int32\n          maxLength: 8\n          type: integer\n        is_draft:\n          type: boolean\n        is_locked:\n          type: boolean\n        is_offer:\n          type: boolean\n        issued_date:\n          format: date\n          type: string\n        message:\n          maxLength: 8192\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        net_payment:\n          format: float\n          type: number\n        offer_number:\n          format: int32\n          maxLength: 8\n          type: integer\n        payment_due_date:\n          format: date\n          type: string\n        payment_term_id:\n          format: uuid\n          type: string\n        project_id:\n          format: uuid\n          type: string\n        reference:\n          maxLength: 255\n          type: string\n        vat_percent:\n          format: int32\n          maxLength: 2\n          type: integer\n      type: object\n    InvoiceLine:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        discount_percent:\n          format: int32\n          type: integer\n        discount_text:\n          maxLength: 255\n          type: string\n        id:\n          format: uuid\n          type: string\n        invoice_id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 2048\n          type: string\n        product_id:\n          format: uuid\n          type: string\n        quantity:\n          format: int32\n          type: integer\n        selling_price:\n          format: float\n          type: number\n        user_id:\n          format: uuid\n          type: string\n      type: object\n    MassMessage:\n      properties:\n        company_id:\n          format: uuid\n          type: string\n        content:\n          maxLength: 8192\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n      type: object\n    MassMessagesUser:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        id:\n          format: uuid\n          type: string\n        is_read:\n          type: boolean\n        is_sent_email:\n          type: boolean\n        mass_message:\n          $ref: \"#/components/schemas/MassMessage\"\n        mass_message_id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        user_id:\n          format: uuid\n          type: string\n      type: object\n    Material:\n      properties:\n        barcode:\n          maxLength: 255\n          type: string\n        billing_cycle:\n          maxLength: 255\n          type: string\n        company_id:\n          format: uuid\n          type: string\n        cost_price:\n          format: float\n          type: number\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        is_single_usage:\n          type: boolean\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        name:\n          maxLength: 2048\n          type: string\n        selling_price:\n          format: float\n          type: number\n      type: object\n    MaterialRental:\n      properties:\n        amount:\n          format: float\n          type: number\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        from_date:\n          format: dateTime\n          type: string\n        id:\n          format: uuid\n          type: string\n        is_invoiced:\n          format: dateTime\n          type: string\n        material_id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        project_id:\n          format: uuid\n          type: string\n        quantity:\n          format: float\n          type: number\n        to_date:\n          format: dateTime\n          type: string\n      type: object\n    PaginationDetails:\n      properties:\n        count:\n          type: integer\n        current_page:\n          type: string\n        has_next_page:\n          type: boolean\n        has_prev_page:\n          type: boolean\n        limit:\n          type: integer\n        page_count:\n          type: string\n      type: object\n    PaymentTerm:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        days_of_credit:\n          format: int32\n          maxLength: 11\n          type: integer\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        payment_term_type_id:\n          format: uuid\n          type: string\n      type: object\n    PaymentTermType:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          maxLength: 255\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    Product:\n      properties:\n        barcode:\n          maxLength: 255\n          type: string\n        buying_price:\n          format: double\n          type: number\n        company_id:\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        erp_id:\n          maxLength: 255\n          type: string\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n        product_number:\n          maxLength: 255\n          type: string\n        selling_price:\n          format: double\n          type: number\n      type: object\n    Project:\n      properties:\n        contact_id:\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        erp_project_id:\n          maxLength: 255\n          type: string\n        erp_task_id:\n          maxLength: 255\n          type: string\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n        project_status_id:\n          format: uuid\n          type: string\n        start_time:\n          format: datetime\n          type: string\n        street_name:\n          maxLength: 255\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    ProjectStatus:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          description: One of 3 values\n          enum:\n            - ready_for_billing\n            - open\n            - closed\n          maxLength: 255\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    StockLocation:\n      properties:\n        company_id:\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    TimeEntry:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        form_id:\n          format: uuid\n          type: string\n        from_time:\n          format: dateTime\n          type: string\n        id:\n          format: uuid\n          type: string\n        is_all_day:\n          type: boolean\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        project_id:\n          format: uuid\n          type: string\n        sum:\n          description: Amount of seconds\n          format: int32\n          type: integer\n        time_entry_type_id:\n          format: uuid\n          type: string\n        to_time:\n          format: dateTime\n          type: string\n        user_id:\n          format: uuid\n          type: string\n      type: object\n    TimeEntryInterval:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          maxLength: 255\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    TimeEntryType:\n      properties:\n        company_id:\n          format: uuid\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        name:\n          maxLength: 255\n          type: string\n        time_entry_interval_id:\n          format: uuid\n          type: string\n        time_entry_value_type_id:\n          format: uuid\n          type: string\n      type: object\n    TimeEntryUnitType:\n      properties:\n        abbreviation:\n          maxLength: 255\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          maxLength: 255\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        name:\n          maxLength: 255\n          type: string\n      type: object\n    TimeEntryValueType:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 8192\n          type: string\n        id:\n          format: uuid\n          type: string\n        identifier:\n          maxLength: 255\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        modified_by_id:\n          format: uuid\n          type: string\n        name:\n          maxLength: 255\n          type: string\n        time_entry_unit_type_id:\n          format: uuid\n          type: string\n      type: object\n    User:\n      properties:\n        api_key:\n          format: uuid\n          type: string\n        city_id:\n          format: uuid\n          type: string\n        company_id:\n          format: uuid\n          type: string\n        cost_price:\n          description: Cost of salaries\n          format: float\n          type: number\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        email:\n          format: email\n          maxLength: 255\n          type: string\n        extra_price:\n          description: Additional cost on this employee (pension, vacation etc.)\n          format: float\n          type: number\n        first_name:\n          maxLength: 255\n          type: string\n        full_name:\n          description: READ-ONLY\n          type: string\n        id:\n          format: uuid\n          type: string\n        is_active:\n          type: boolean\n        language_id:\n          format: uuid\n          type: string\n        last_name:\n          maxLength: 255\n          type: string\n        mobile:\n          maxLength: 32\n          type: string\n        mobile_countrycode:\n          maxLength: 8\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        password:\n          format: password\n          maxLength: 255\n          type: string\n        phone:\n          maxLength: 32\n          type: string\n        phone_countrycode:\n          maxLength: 8\n          type: string\n        receive_form_mails:\n          description: If `true` the employee will receive an email receipt of every form\n            submitted\n          type: boolean\n        sale_price:\n          description: The price this employee costs per hour when working\n          format: float\n          type: number\n        street_name:\n          maxLength: 255\n          type: string\n        website:\n          maxLength: 255\n          type: string\n      type: object\n    VendorProduct:\n      properties:\n        barcode:\n          maxLength: 255\n          type: string\n        created:\n          $ref: \"#/components/schemas/created\"\n        created_by_id:\n          format: uuid\n          type: string\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        description:\n          maxLength: 255\n          type: string\n        id:\n          format: uuid\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        name:\n          maxLength: 255\n          type: string\n        price:\n          format: double\n          type: number\n        product_category_number:\n          maxLength: 255\n          type: string\n        product_number:\n          maxLength: 255\n          type: string\n        vendor_id:\n          format: uuid\n          type: string\n      type: object\n    WallComment:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        id:\n          format: uuid\n          type: string\n        message:\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        user_id:\n          maxLength: 255\n          type: string\n        wall_post_id:\n          format: uuid\n          type: string\n      type: object\n    WallPost:\n      properties:\n        created:\n          $ref: \"#/components/schemas/created\"\n        deleted:\n          $ref: \"#/components/schemas/deleted\"\n        id:\n          format: uuid\n          type: string\n        message:\n          type: string\n        modified:\n          $ref: \"#/components/schemas/modified\"\n        project_id:\n          format: uuid\n          type: string\n        user_id:\n          format: uuid\n          type: string\n      type: object\n    created:\n      description: READ-ONLY\n      format: dateTime\n      type: string\n    deleted:\n      description: READ-ONLY - only present if it's an deleted object\n      format: dateTime\n      type: string\n    modified:\n      description: READ-ONLY\n      format: dateTime\n      type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /forms: get: operation \"\": parameters: parse parameter \"extended\": schema: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}