{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aml-org/als"
		},
		"file": {
			"name": "api.json",
			"size": 0,
			"path": "als-structure/shared/src/test/resources/OAS30/operation/api.json",
			"byteSize": 1166,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Sample Pet Store App\",\n    \"version\": \"1.0.1\"\n  },\n  \"paths\": {\n    \"/endpoint1\": {\n      \"summary\": \"aa\",\n      \"description\": \"an endpoint\",\n      \"get\": {\n        \"tags\": [\n          \"a\"\n        ],\n        \"summary\": \"summary\",\n        \"description\": \"an operation\",\n        \"operationId\": \"opId\",\n        \"parameters\": [\n          {\n            \"name\": \"param1\",\n            \"in\": \"query\"\n          },\n          {\n            \"name\": \"param2\",\n            \"in\": \"header\"\n          }\n        ],\n        \"requestBody\": null,\n        \"responses\": {\n          \"200\": null\n        },\n        \"callbacks\": {\n          \"callback\": null\n        },\n        \"security\": null,\n        \"servers\": [\n          {\n            \"url\": \"https://development.gigantic-server.com/v1\",\n            \"description\": \"Development server\"\n          },\n          {\n            \"url\": \"https://staging.gigantic-server.com/v1\",\n            \"description\": \"Staging server\"\n          },\n          {\n            \"url\": \"https://api.gigantic-server.com/v1\",\n            \"description\": \"Production server\"\n          }\n        ]\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/aml-org/als@ac1af3a869edb0598589d85b197c3814d6eb968e/-/blob/als-structure/shared/src/test/resources/OAS30/operation/api.json",
			"externalURLs": [
				{
					"url": "https://github.com/aml-org/als/blob/ac1af3a869edb0598589d85b197c3814d6eb968e/als-structure/shared/src/test/resources/OAS30/operation/api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/endpoint1\": get: operation \"opId\": parameters: parse parameter \"param1\": at 19:11: parameter MUST contain either a schema property, or a content property"
}