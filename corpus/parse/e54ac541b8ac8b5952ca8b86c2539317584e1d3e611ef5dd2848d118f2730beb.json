{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nanovazquez/design-first-api-workshop"
		},
		"file": {
			"name": "vopen-api-3.0.yaml",
			"size": 0,
			"path": "exercises/exercise-1/end/vopen-api-3.0.yaml",
			"byteSize": 5034,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: vOpen API\n  description: The API for the OSS conferences\n\n# Added by API Auto Mocking Plugin\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/nanovazquez/vopen-tech-api-3.0/1.0.0\n\npaths:\n  /editions/{editionId}/speakers:\n    parameters:\n      - $ref: \"#/definitions/editionId\"\n\n    get:\n      summary: Retrieves the speakers\n      responses:\n        200:\n          description: all speakers of the edition\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/definitions/Speaker\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/ErrorResponse\"\n\n  /editions/{editionId}/activities:\n    parameters:\n      - $ref: \"#/definitions/editionId\"\n      - in: query\n        name: type\n        description: The activity type\n        required: false\n        schema:\n          type: string\n          enum: [talk, workshop, keynote, break, lunch, raffle]\n\n    get:\n      summary: Searches for activities of an edition\n      responses:\n        200:\n          description: A list of activities that meet the search criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/definitions/Activity\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/ErrorResponse\"\n\n  /editions/{editionId}/feedback:\n    parameters:\n      - $ref: \"#/definitions/editionId\"\n\n    post:\n      summary: Adds feedback to an activity\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/definitions/FeedbackRequest\"\n      responses:\n        201:\n          description: The Feedback was received\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/Feedback\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/ErrorResponse\"\n\ncomponents:\n  definitions:\n  Speaker:\n    type: object\n    required:\n      - id\n      - name\n      - description\n      - imageUrl\n      - githubAccount\n      - twitterAccount\n    properties:\n      id:\n        type: string\n        format: uuid\n        example: d290f1ee-6c54-4b01-90e6-d701748f0851\n      name:\n        type: string\n        example: John Doe\n      description:\n        type: string\n        example: Node JS Developer\n      imageUrl:\n        type: string\n        format: uri\n        example: http://some.image.com/image.png\n      githubAccount:\n        type: string\n        example: \"@i-am-a-developer\"\n      twitterAccount:\n        type: string\n        example: \"@john-doe\"\n\n  Activity:\n    type: object\n    required:\n      - id\n      - name\n      - type\n    properties:\n      id:\n        type: string\n        format: uuid\n        example: d290f1ee-6c54-4b01-90e6-d701748f0851\n      name:\n        type: string\n        example: Design First APIs with OAS\n      description:\n        type: string\n        example: Workshop to learn how to design APIs with Swagger/OpenAPI\n      type:\n        type: string\n        enum: [talk, workshop, keynote, break, lunch, raffle]\n      speakers:\n        type: array\n        items:\n          $ref: \"#/definitions/Speaker\"\n      startTime:\n        type: string\n        example: \"2018-10-18T19:30:00Z\"\n      endTime:\n        type: string\n        example: \"2018-10-18T20:00Z\"\n\n  Feedback:\n    type: object\n    required:\n      - id\n      - activityId\n      - username\n      - rating\n    properties:\n      id:\n        type: string\n        format: uuid\n        example: d290f1ee-6c54-4b01-90e6-d701748f0851\n      activityId:\n        type: string\n        format: uuid\n        example: d290f1ee-6c54-4b01-90e6-d701748f0851\n      username:\n        type: string\n        example: John Doe\n      rating:\n        type: integer\n        enum: [1, 2, 3, 4, 5]\n\n  FeedbackRequest:\n    type: object\n    properties:\n      activityId:\n        description: The ID of the activity\n        type: string\n        format: uuid\n        required: true\n        example: d290f1ee-6c54-4b01-90e6-d701748f0851\n      username:\n        description: Name of the user\n        type: string\n        required: true\n        example: John Doe\n      rating:\n        description: Rating provided\n        type: integer\n        enum: [1, 2, 3, 4, 5]\n        required: true\n\n  ErrorResponse:\n    description: Response containing an error\n    type: object\n    properties:\n      errorMessage:\n        type: string\n        example: 500 Internal Server Error\n\n  editionId:\n    name: editionId\n    in: path\n    description: Year of the hosted edition\n    required: true\n    type: string\n",
			"canonicalURL": "/github.com/nanovazquez/design-first-api-workshop@b604f395e1a9c1ad56cea6c221c38ac495857cd9/-/blob/exercises/exercise-1/end/vopen-api-3.0.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nanovazquez/design-first-api-workshop/blob/b604f395e1a9c1ad56cea6c221c38ac495857cd9/exercises/exercise-1/end/vopen-api-3.0.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: /editions/{editionId}/activities: parameters: parse parameter \"\": resolve \"#/definitions/editionId\" reference: can't find value for \"definitions/editionId\""
}