{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-streetviewpublish-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-streetviewpublish-v1-swagger.yaml",
			"byteSize": 40300,
			"content": "openapi: 3.0.0\nx-hasEquivalentPaths: true\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: \u003e\n    Publishes 360 photos to Google Maps, along with position, orientation, and\n    connectivity metadata. Apps can offer an interface for positioning,\n    connecting, and uploading user-generated Street View images.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Street View Publish\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - location\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://streetviewpublish.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: streetviewpublish\nexternalDocs:\n  url: https://developers.google.com/streetview/publish/\ntags:\n  - name: photo\n  - name: photos\npaths:\n  /v1/photo:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        After the client finishes uploading the photo with the returned\n\n        UploadRef,\n\n        CreatePhoto\n\n        publishes the uploaded Photo to\n\n        Street View on Google Maps.\n\n\n        Currently, the only way to set heading, pitch, and roll in CreatePhoto is\n\n        through the [Photo Sphere XMP\n\n        metadata](https://developers.google.com/streetview/spherical-metadata) in\n\n        the photo bytes. CreatePhoto ignores the  `pose.heading`, `pose.pitch`,\n\n        `pose.roll`, `pose.altitude`, and `pose.level` fields in Pose.\n\n\n        This method returns the following error codes:\n\n\n        * google.rpc.Code.INVALID_ARGUMENT if the request is malformed or if\n\n        the uploaded photo is not a 360 photo.\n\n        * google.rpc.Code.NOT_FOUND if the upload reference does not exist.\n\n        * google.rpc.Code.RESOURCE_EXHAUSTED if the account has reached the\n\n        storage limit.\n      operationId: streetviewpublish.photo.create\n      requestBody:\n        $ref: \"#/components/requestBodies/Photo\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Photo\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photo\n  \"/v1/photo/{id}\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    put:\n      description: \u003e-\n        Updates the metadata of a Photo, such\n\n        as pose, place association, connections, etc. Changing the pixels of a\n\n        photo is not supported.\n\n\n        Only the fields specified in the\n\n        updateMask\n\n        field are used. If `updateMask` is not present, the update applies to all\n\n        fields.\n\n\n        This method returns the following error codes:\n\n\n        * google.rpc.Code.PERMISSION_DENIED if the requesting user did not\n\n        create the requested photo.\n\n        * google.rpc.Code.INVALID_ARGUMENT if the request is malformed.\n\n        * google.rpc.Code.NOT_FOUND if the requested photo does not exist.\n\n        * google.rpc.Code.UNAVAILABLE if the requested\n\n        Photo is still being indexed.\n      operationId: streetviewpublish.photo.update\n      parameters:\n        - description: Required. A unique identifier for a photo.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            Required. Mask that identifies fields on the photo metadata to\n            update.\n\n            If not present, the old Photo\n\n            metadata is entirely replaced with the\n\n            new Photo metadata in this request.\n\n            The update fails if invalid fields are specified. Multiple fields can be\n\n            specified in a comma-delimited list.\n\n\n            The following fields are valid:\n\n\n            * `pose.heading`\n\n            * `pose.latLngPair`\n\n            * `pose.pitch`\n\n            * `pose.roll`\n\n            * `pose.level`\n\n            * `pose.altitude`\n\n            * `connections`\n\n            * `places`\n\n\n\n            \u003caside class=\"note\"\u003e\u003cb\u003eNote:\u003c/b\u003e When\n\n            updateMask\n\n            contains repeated fields, the entire set of repeated values get replaced\n\n            with the new contents. For example, if\n\n            updateMask\n\n            contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,\n\n            all connections are removed.\u003c/aside\u003e\n          in: query\n          name: updateMask\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Photo\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Photo\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photo\n  \"/v1/photo/{photoId}\":\n    delete:\n      description: |-\n        Deletes a Photo and its metadata.\n\n        This method returns the following error codes:\n\n        * google.rpc.Code.PERMISSION_DENIED if the requesting user did not\n        create the requested photo.\n        * google.rpc.Code.NOT_FOUND if the photo ID does not exist.\n      operationId: streetviewpublish.photo.delete\n      parameters:\n        - description: Required. ID of the Photo.\n          in: path\n          name: photoId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photo\n    get:\n      description: |-\n        Gets the metadata of the specified\n        Photo.\n\n        This method returns the following error codes:\n\n        * google.rpc.Code.PERMISSION_DENIED if the requesting user did not\n        create the requested Photo.\n        * google.rpc.Code.NOT_FOUND if the requested\n        Photo does not exist.\n        * google.rpc.Code.UNAVAILABLE if the requested\n        Photo is still being indexed.\n      operationId: streetviewpublish.photo.get\n      parameters:\n        - description: \u003e-\n            The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\n\n            information, see\n\n            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\n\n            If language_code is unspecified, the user's language preference for Google\n\n            services is used.\n          in: query\n          name: languageCode\n          schema:\n            type: string\n        - description: Required. ID of the Photo.\n          in: path\n          name: photoId\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            Required. Specifies if a download URL for the photo bytes should be\n            returned in the\n\n            Photo response.\n          in: query\n          name: view\n          schema:\n            type: string\n            enum:\n              - BASIC\n              - INCLUDE_DOWNLOAD_URL\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Photo\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photo\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  /v1/photo:startUpload:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Creates an upload session to start uploading photo bytes.  The method\n        uses\n\n        the upload URL of the returned\n\n        UploadRef to upload the bytes for\n\n        the Photo.\n\n\n        In addition to the photo requirements shown in\n\n        https://support.google.com/maps/answer/7012050?hl=en\u0026ref_topic=6275604,\n\n        the photo must meet the following requirements:\n\n\n        * Photo Sphere XMP metadata must be included in the photo medadata. See\n\n        https://developers.google.com/streetview/spherical-metadata for the\n\n        required fields.\n\n        * The pixel size of the photo must meet the size requirements listed in\n\n        https://support.google.com/maps/answer/7012050?hl=en\u0026ref_topic=6275604, and\n\n        the photo must be a full 360 horizontally.\n\n\n        After the upload completes, the method uses\n\n        UploadRef with\n\n        CreatePhoto\n\n        to create the Photo object entry.\n      operationId: streetviewpublish.photo.startUpload\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Empty\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/UploadRef\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photo\n  /v1/photos:\n    get:\n      description: |-\n        Lists all the Photos that belong to\n        the user.\n\n        \u003caside class=\"note\"\u003e\u003cb\u003eNote:\u003c/b\u003e Recently created photos that are still\n        being indexed are not returned in the response.\u003c/aside\u003e\n      operationId: streetviewpublish.photos.list\n      parameters:\n        - description: \u003e-\n            Required. The filter expression. For example:\n            `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.\n\n\n            The only filter supported at the moment is `placeId`.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: \u003e-\n            The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\n\n            information, see\n\n            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\n\n            If language_code is unspecified, the user's language preference for Google\n\n            services is used.\n          in: query\n          name: languageCode\n          schema:\n            type: string\n        - description: \u003e-\n            The maximum number of photos to return.\n\n            `pageSize` must be non-negative. If `pageSize` is zero or is not provided,\n\n            the default page size of 100 is used.\n\n            The number of photos returned in the response may be less than `pageSize`\n\n            if the number of photos that belong to the user is less than `pageSize`.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: |-\n            The\n            nextPageToken\n            value returned from a previous\n            ListPhotos\n            request, if any.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: \u003e-\n            Required. Specifies if a download URL for the photos bytes should be\n            returned in the\n\n            Photos response.\n          in: query\n          name: view\n          schema:\n            type: string\n            enum:\n              - BASIC\n              - INCLUDE_DOWNLOAD_URL\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListPhotosResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photos\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  /v1/photos:batchDelete:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Deletes a list of Photos and their\n        metadata.\n\n        Note that if\n        BatchDeletePhotos\n        fails, either critical fields are missing or there is an authentication\n        error. Even if\n        BatchDeletePhotos\n        succeeds, individual photos in the batch may have failures.\n        These failures are specified in each\n        PhotoResponse.status\n        in\n        BatchDeletePhotosResponse.results.\n        See\n        DeletePhoto\n        for specific failures that can occur per photo.\n      operationId: streetviewpublish.photos.batchDelete\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchDeletePhotosRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/BatchDeletePhotosResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photos\n  /v1/photos:batchGet:\n    get:\n      description: |-\n        Gets the metadata of the specified\n        Photo batch.\n\n        Note that if\n        BatchGetPhotos\n        fails, either critical fields are missing or there is an authentication\n        error. Even if\n        BatchGetPhotos\n        succeeds, individual photos in the batch may have failures.\n        These failures are specified in each\n        PhotoResponse.status\n        in\n        BatchGetPhotosResponse.results.\n        See\n        GetPhoto\n        for specific failures that can occur per photo.\n      operationId: streetviewpublish.photos.batchGet\n      parameters:\n        - description: \u003e-\n            The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\n\n            information, see\n\n            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\n\n            If language_code is unspecified, the user's language preference for Google\n\n            services is used.\n          in: query\n          name: languageCode\n          schema:\n            type: string\n        - description: |-\n            Required. IDs of the Photos. For HTTP\n            GET requests, the URL query parameter should be\n            `photoIds=\u003cid1\u003e\u0026photoIds=\u003cid2\u003e\u0026...`.\n          in: query\n          name: photoIds\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \u003e-\n            Required. Specifies if a download URL for the photo bytes should be\n            returned in the\n\n            Photo response.\n          in: query\n          name: view\n          schema:\n            type: string\n            enum:\n              - BASIC\n              - INCLUDE_DOWNLOAD_URL\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/BatchGetPhotosResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photos\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  /v1/photos:batchUpdate:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: \u003e-\n        Updates the metadata of Photos, such\n\n        as pose, place association, connections, etc. Changing the pixels of photos\n\n        is not supported.\n\n\n        Note that if\n\n        BatchUpdatePhotos\n\n        fails, either critical fields are missing or there is an authentication\n\n        error. Even if\n\n        BatchUpdatePhotos\n\n        succeeds, individual photos in the batch may have failures.\n\n        These failures are specified in each\n\n        PhotoResponse.status\n\n        in\n\n        BatchUpdatePhotosResponse.results.\n\n        See\n\n        UpdatePhoto\n\n        for specific failures that can occur per photo.\n\n\n        Only the fields specified in\n\n        updateMask\n\n        field are used. If `updateMask` is not present, the update applies to all\n\n        fields.\n\n\n        The number of\n\n        UpdatePhotoRequest\n\n        messages in a\n\n        BatchUpdatePhotosRequest\n\n        must not exceed 20.\n\n\n        \u003caside class=\"note\"\u003e\u003cb\u003eNote:\u003c/b\u003e To update\n\n        Pose.altitude,\n\n        Pose.latLngPair has to be\n\n        filled as well. Otherwise, the request will fail.\u003c/aside\u003e\n      operationId: streetviewpublish.photos.batchUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchUpdatePhotosRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/BatchUpdatePhotosResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/streetviewpublish\n          Oauth2c:\n            - https://www.googleapis.com/auth/streetviewpublish\n      tags:\n        - photos\nservers:\n  - url: https://streetviewpublish.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  requestBodies:\n    Photo:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Photo\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/streetviewpublish: Publish and manage your 360 photos on Google Street View\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/streetviewpublish: Publish and manage your 360 photos on Google Street View\n  schemas:\n    BatchDeletePhotosRequest:\n      description: Request to delete multiple Photos.\n      properties:\n        photoIds:\n          description: \u003e-\n            Required. IDs of the Photos. HTTP\n\n            GET requests require the following syntax for the URL query parameter:\n\n            `photoIds=\u003cid1\u003e\u0026photoIds=\u003cid2\u003e\u0026...`.\n          items:\n            type: string\n          type: array\n      type: object\n    BatchDeletePhotosResponse:\n      description: |-\n        Response to batch delete of one or more\n        Photos.\n      properties:\n        status:\n          description: |-\n            The status for the operation to delete a single\n            Photo in the batch request.\n          items:\n            $ref: \"#/components/schemas/Status\"\n          type: array\n      type: object\n    BatchGetPhotosResponse:\n      description: Response to batch get of Photos.\n      properties:\n        results:\n          description: |-\n            List of results for each individual\n            Photo requested, in the same order as\n            the requests in\n            BatchGetPhotos.\n          items:\n            $ref: \"#/components/schemas/PhotoResponse\"\n          type: array\n      type: object\n    BatchUpdatePhotosRequest:\n      description: |-\n        Request to update the metadata of photos.\n        Updating the pixels of photos is not supported.\n      properties:\n        updatePhotoRequests:\n          description: |-\n            Required. List of\n            UpdatePhotoRequests.\n          items:\n            $ref: \"#/components/schemas/UpdatePhotoRequest\"\n          type: array\n      type: object\n    BatchUpdatePhotosResponse:\n      description: |-\n        Response to batch update of metadata of one or more\n        Photos.\n      properties:\n        results:\n          description: |-\n            List of results for each individual\n            Photo updated, in the same order as\n            the request.\n          items:\n            $ref: \"#/components/schemas/PhotoResponse\"\n          type: array\n      type: object\n    Connection:\n      description: A connection is the link from a source photo to a destination photo.\n      properties:\n        target:\n          $ref: \"#/components/schemas/PhotoId\"\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    LatLng:\n      description: \u003e-\n        An object representing a latitude/longitude pair. This is expressed as a\n        pair\n\n        of doubles representing degrees latitude and degrees longitude. Unless\n\n        specified otherwise, this must conform to the\n\n        \u003ca href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\"\u003eWGS84\n\n        standard\u003c/a\u003e. Values must be within normalized ranges.\n      properties:\n        latitude:\n          description: The latitude in degrees. It must be in the range [-90.0, +90.0].\n          format: double\n          type: number\n        longitude:\n          description: The longitude in degrees. It must be in the range [-180.0, +180.0].\n          format: double\n          type: number\n      type: object\n    Level:\n      description: Level information containing level number and its corresponding name.\n      properties:\n        name:\n          description: \u003e-\n            Required. A name assigned to this Level, restricted to 3 characters.\n\n            Consider how the elevator buttons would be labeled for this level if there\n\n            was an elevator.\n          type: string\n        number:\n          description: \u003e-\n            Floor number, used for ordering. 0 indicates the ground level, 1\n            indicates\n\n            the first level above ground level, -1 indicates the first level under\n\n            ground level. Non-integer values are OK.\n          format: double\n          type: number\n      type: object\n    ListPhotosResponse:\n      description: Response to list all photos that belong to a user.\n      properties:\n        nextPageToken:\n          description: \u003e-\n            Token to retrieve the next page of results, or empty if there are no\n            more\n\n            results in the list.\n          type: string\n        photos:\n          description: |-\n            List of photos. The\n            pageSize field\n            in the request determines the number of items returned.\n          items:\n            $ref: \"#/components/schemas/Photo\"\n          type: array\n      type: object\n    Operation:\n      description: \u003e-\n        This resource represents a long-running operation that is the result of\n        a\n\n        network API call.\n      properties:\n        done:\n          description: \u003e-\n            If the value is `false`, it means the operation is still in\n            progress.\n\n            If `true`, the operation is completed, and either `error` or `response` is\n\n            available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            Service-specific metadata associated with the operation.  It\n            typically\n\n            contains progress information and common metadata such as create time.\n\n            Some services might not provide such metadata.  Any method that returns a\n\n            long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: \u003e-\n            The server-assigned name, which is only unique within the same\n            service that\n\n            originally returns it. If you use the default HTTP mapping, the\n\n            `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: \u003e-\n            The normal response of the operation in case of success.  If the\n            original\n\n            method returns no data on success, such as `Delete`, the response is\n\n            `google.protobuf.Empty`.  If the original method is standard\n\n            `Get`/`Create`/`Update`, the response should be the resource.  For other\n\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n\n            is the original method name.  For example, if the original method name\n\n            is `TakeSnapshot()`, the inferred response type is\n\n            `TakeSnapshotResponse`.\n          type: object\n      type: object\n    Photo:\n      description: Photo is used to store 360 photos along with photo metadata.\n      properties:\n        captureTime:\n          description: \u003e-\n            Absolute time when the photo was captured.\n\n            When the photo has no exif timestamp, this is used to set a timestamp in\n\n            the photo metadata.\n          format: google-datetime\n          type: string\n        connections:\n          description: \u003e-\n            Connections to other photos. A connection represents the link from\n            this\n\n            photo to another photo.\n          items:\n            $ref: \"#/components/schemas/Connection\"\n          type: array\n        downloadUrl:\n          description: \u003e-\n            Output only. The download URL for the photo bytes. This field is set\n            only\n\n            when\n\n            GetPhotoRequest.view\n\n            is set to\n\n            PhotoView.INCLUDE_DOWNLOAD_URL.\n          type: string\n        mapsPublishStatus:\n          description: \u003e-\n            Output only. Status in Google Maps, whether this photo was published\n            or\n\n            rejected.\n          enum:\n            - UNSPECIFIED_MAPS_PUBLISH_STATUS\n            - PUBLISHED\n            - REJECTED_UNKNOWN\n          type: string\n        photoId:\n          $ref: \"#/components/schemas/PhotoId\"\n        places:\n          description: Places where this photo belongs.\n          items:\n            $ref: \"#/components/schemas/Place\"\n          type: array\n        pose:\n          $ref: \"#/components/schemas/Pose\"\n        shareLink:\n          description: Output only. The share link for the photo.\n          type: string\n        thumbnailUrl:\n          description: Output only. The thumbnail URL for showing a preview of the given\n            photo.\n          type: string\n        transferStatus:\n          description: Output only. Status of rights transfer on this photo.\n          enum:\n            - TRANSFER_STATUS_UNKNOWN\n            - NEVER_TRANSFERRED\n            - PENDING\n            - COMPLETED\n            - REJECTED\n            - EXPIRED\n            - CANCELLED\n            - RECEIVED_VIA_TRANSFER\n          type: string\n        uploadReference:\n          $ref: \"#/components/schemas/UploadRef\"\n        viewCount:\n          description: Output only. View count of the photo.\n          format: int64\n          type: string\n      type: object\n    PhotoId:\n      description: Identifier for a Photo.\n      properties:\n        id:\n          description: Required. A unique identifier for a photo.\n          type: string\n      type: object\n    PhotoResponse:\n      description: |-\n        Response payload for a single\n        Photo\n        in batch operations including\n        BatchGetPhotos\n        and\n        BatchUpdatePhotos.\n      properties:\n        photo:\n          $ref: \"#/components/schemas/Photo\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n      type: object\n    Place:\n      description: Place metadata for an entity.\n      properties:\n        languageCode:\n          description: \u003e-\n            Output-only. The language_code that the name is localized with. This\n            should\n\n            be the language_code specified in the request, but may be a fallback.\n          type: string\n        name:\n          description: Output-only. The name of the place, localized to the language_code.\n          type: string\n        placeId:\n          description: |-\n            Place identifier, as described in\n            https://developers.google.com/places/place-id.\n          type: string\n      type: object\n    Pose:\n      description: Raw pose measurement for an entity.\n      properties:\n        accuracyMeters:\n          description: \u003e-\n            The estimated horizontal accuracy of this pose in meters with 68%\n\n            confidence (one standard deviation). For example, on Android, this value is\n\n            available from this method:\n\n            https://developer.android.com/reference/android/location/Location#getAccuracy().\n\n            Other platforms have different methods of obtaining similar accuracy\n\n            estimations.\n          format: float\n          type: number\n        altitude:\n          description: |-\n            Altitude of the pose in meters above WGS84 ellipsoid.\n            NaN indicates an unmeasured quantity.\n          format: double\n          type: number\n        heading:\n          description: \u003e-\n            Compass heading, measured at the center of the photo in degrees\n            clockwise\n\n            from North. Value must be \u003e=0 and \u003c360.\n\n            NaN indicates an unmeasured quantity.\n          format: double\n          type: number\n        latLngPair:\n          $ref: \"#/components/schemas/LatLng\"\n        level:\n          $ref: \"#/components/schemas/Level\"\n        pitch:\n          description: \u003e-\n            Pitch, measured at the center of the photo in degrees. Value must be\n            \u003e=-90\n\n            and \u003c= 90. A value of -90 means looking directly down, and a value of 90\n\n            means looking directly up.\n\n            NaN indicates an unmeasured quantity.\n          format: double\n          type: number\n        roll:\n          description: |-\n            Roll, measured in degrees. Value must be \u003e= 0 and \u003c360. A value of 0\n            means level with the horizon.\n            NaN indicates an unmeasured quantity.\n          format: double\n          type: number\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n\n        different programming environments, including REST APIs and RPC APIs. It is\n\n        used by [gRPC](https://github.com/grpc). Each `Status` message contains\n\n        three pieces of data: error code, error message, and error details.\n\n\n        You can find out more about this error model and how to work with it in the\n\n        [API Design Guide](https://cloud.google.com/apis/design/errors).\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    UpdatePhotoRequest:\n      description: |-\n        Request to update the metadata of a\n        Photo. Updating the pixels of a photo\n        is not supported.\n      properties:\n        photo:\n          $ref: \"#/components/schemas/Photo\"\n        updateMask:\n          description: \u003e-\n            Required. Mask that identifies fields on the photo metadata to\n            update.\n\n            If not present, the old Photo\n\n            metadata is entirely replaced with the\n\n            new Photo metadata in this request.\n\n            The update fails if invalid fields are specified. Multiple fields can be\n\n            specified in a comma-delimited list.\n\n\n            The following fields are valid:\n\n\n            * `pose.heading`\n\n            * `pose.latLngPair`\n\n            * `pose.pitch`\n\n            * `pose.roll`\n\n            * `pose.level`\n\n            * `pose.altitude`\n\n            * `connections`\n\n            * `places`\n\n\n\n            \u003caside class=\"note\"\u003e\u003cb\u003eNote:\u003c/b\u003e When\n\n            updateMask\n\n            contains repeated fields, the entire set of repeated values get replaced\n\n            with the new contents. For example, if\n\n            updateMask\n\n            contains `connections` and `UpdatePhotoRequest.photo.connections` is empty,\n\n            all connections are removed.\u003c/aside\u003e\n          format: google-fieldmask\n          type: string\n      type: object\n    UploadRef:\n      description: Upload reference for media files.\n      properties:\n        uploadUrl:\n          description: \u003e-\n            Required. An upload reference should be unique for each user. It\n            follows\n\n            the form:\n\n            \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-streetviewpublish-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-streetviewpublish-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at 1:20282: duplicate path: \"/v1/photo/{photoId}\""
}