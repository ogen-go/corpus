{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/clever-cloud.com/1.0.0/openapi.yaml",
			"byteSize": 169953,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.clever-cloud.com/v2\ninfo:\n  contact:\n    x-twitter: clever_cloud\n  description: Public API for managing Clever-Cloud data and products\n  title: Clever-Cloud API\n  version: 1.0.0\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://twitter.com/clever_cloud/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://www.clever-cloud.com/doc/api/swagger.json\n      version: \"3.0\"\n  x-providerName: clever-cloud.com\npaths:\n  //openapi:\n    get:\n      responses:\n        \"200\":\n          description: The swagger documenting this API in yaml format.\n      tags:\n        - all\n  \"//openapi.{type}\":\n    parameters:\n      - in: path\n        name: type\n        required: true\n        schema:\n          type: string\n  \"/application/{appId}/environment\":\n    get:\n      parameters:\n        - in: query\n          name: token\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      parameters:\n        - in: query\n          name: token\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n  /authorize:\n    post:\n      description: Handled by our API.\n      operationId: postAuthorize\n      responses:\n        \"200\":\n          description: authorize\n      tags:\n        - all\n  /events/event-socket:\n    get:\n      description: 'Retrieve events as they come through a websocket connection. To have authorization, you have to send a `{ \"message_type\": \"oauth\", \"authorization\": \"oauth authorization string\" }` message'\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - events\n  /github:\n    get:\n      operationId: getGithub\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction_Id\"\n          description: startGithub\n      tags:\n        - all\n        - github\n  /github/applications:\n    get:\n      operationId: getGithubApplications\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getGithubApplications\n      tags:\n        - all\n        - applications\n        - github\n  /github/callback:\n    get:\n      operationId: getGithubCallback\n      parameters:\n        - in: query\n          name: code\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: state\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: error\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: error_description\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: error_uri\n          required: false\n          schema:\n            type: string\n        - in: header\n          name: Cookie\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: githubCallback\n      tags:\n        - all\n        - github\n  /github/emails:\n    get:\n      operationId: getGithubEmails\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  type: string\n                type: array\n          description: getGithubEmails\n      tags:\n        - all\n        - github\n  /github/keys:\n    get:\n      operationId: getGithubKeys\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Key\"\n                type: array\n          description: getGithubKeys\n      tags:\n        - all\n        - github\n  /github/link:\n    delete:\n      operationId: deleteGithubLink\n      responses:\n        \"200\":\n          description: unlinkGithub\n      tags:\n        - all\n        - github\n    get:\n      operationId: getGithubLink\n      parameters:\n        - description: From GET /github\n          in: query\n          name: transactionId\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: redirectUrl\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: linkGithub\n      tags:\n        - all\n        - github\n  /github/login:\n    get:\n      operationId: getGithubLogin\n      parameters:\n        - in: query\n          name: redirectUrl\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fromAuthorize\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: githubLogin\n      tags:\n        - all\n        - github\n  /github/redeploy:\n    post:\n      operationId: postGithubRedeploy\n      parameters:\n        - in: header\n          name: User-Agent\n          required: false\n          schema:\n            type: string\n        - in: header\n          name: X-Github-Event\n          required: false\n          schema:\n            type: string\n        - in: header\n          name: X-Hub-Signature\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: redeployApp\n      tags:\n        - all\n        - github\n  /github/signup:\n    get:\n      operationId: getGithubSignup\n      parameters:\n        - in: query\n          name: redirectUrl\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: fromAuthorize\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: githubSignup\n      tags:\n        - all\n        - github\n    post:\n      operationId: postGithubSignup\n      parameters:\n        - in: query\n          name: transactionId\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: otherId\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: otherEmail\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: password\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: autoLink\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: terms\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: finsihGithubSignup\n      tags:\n        - all\n        - github\n  /github/username:\n    get:\n      operationId: getGithubUsername\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                type: string\n          description: getGithubUsername\n      tags:\n        - all\n        - github\n  \"/logs-socket/{appId}\":\n    get:\n      description: WebSocket to get logs for :appID. Optional queryString arg bind_to_es=true to bind WS on log storage and not real time AMQP broker\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n  /logs/drains:\n    get:\n      description: Fetch all the logs drains (ccadmin dedicated route)\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/logs/drains/{drainId}\":\n    put:\n      description: Fetch all the logs drains (ccadmin dedicated route)\n      parameters:\n        - description: Automatically added\n          in: path\n          name: drainId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/logs/logs-chunked/{appId}\":\n    get:\n      description: Retrieve logs as they come through a chunked, never-ending response\n      parameters:\n        - description: Application Id\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n        - description: Tell the user-agent to download the body as a file\n          in: query\n          name: download\n          required: false\n          schema:\n            type: boolean\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/logs/logs-socket/{appId}\":\n    get:\n      description: 'Retrieve logs as they come through a websocket connection. To have authorization, you have to send a `{ \"message_type\": \"oauth\", \"authorization\": \"oauth authorization string\" }` message'\n      parameters:\n        - description: Application Id\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n        - description: Only fetch logs newer than this (ISO-8601 formatted) date\n          in: query\n          name: since\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: A pattern to filter with\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: Only fetch logs emitted by this deployment\n          in: query\n          name: deployment_id\n          required: false\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/logs/{appId}\":\n    get:\n      description: Fetch the logs for a given application\n      parameters:\n        - description: Application Id\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n        - description: Number of lines to return\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: int32\n            type: integer\n        - description: Logs order\n          in: query\n          name: order\n          required: false\n          schema:\n            default: desc\n            enum:\n              - asc\n              - desc\n            type: string\n        - description: Lowest bound for logs date, ISO 8601\n          in: query\n          name: after\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: Highest bounds for logs date, ISO 8601\n          in: query\n          name: before\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: A pattern to filter with\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: Only fetch logs emitted by this deployment\n          in: query\n          name: deployment_id\n          required: false\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/logs/{appId}/drains\":\n    get:\n      description: Fetch the logs drains for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n    post:\n      description: Add a log drain for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/logs/{appId}/drains/:idOrUrl\":\n    delete:\n      description: Delete the logs drain by id or url for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n    get:\n      description: Fetch the logs drain by id or url for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/logs/{appId}/sse\":\n    get:\n      description: Retrieve logs as they come through a sse connection. To have authorization, you have to add `authorization=oAuthAuthorizationString` as query param.\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  /newsfeeds/blog:\n    get:\n      operationId: getNewsfeedsBlog\n      responses:\n        \"200\":\n          description: getBlogFeed\n      tags:\n        - all\n  /newsfeeds/engineering:\n    get:\n      operationId: getNewsfeedEngineering\n      responses:\n        \"200\":\n          description: getEngineeringFeed\n      tags:\n        - all\n  \"/notifications/emailhooks/{ownerId}\":\n    get:\n      description: list created e-mail hooks\n      parameters:\n        - description: Automatically added\n          in: path\n          name: ownerId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n    post:\n      description: create a hook for e-mail notifications\n      parameters:\n        - description: Automatically added\n          in: path\n          name: ownerId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n  \"/notifications/emailhooks/{ownerId}/:id\":\n    delete:\n      description: delete an e-mail hook\n      parameters:\n        - description: Automatically added\n          in: path\n          name: ownerId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n    put:\n      description: edit an e-mail hook\n      parameters:\n        - description: Automatically added\n          in: path\n          name: ownerId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n  /notifications/info/events:\n    get:\n      description: list available events\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - events\n  /notifications/info/webhookformats:\n    get:\n      description: list available webhook formats\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n  \"/notifications/webhooks/{ownerId}\":\n    get:\n      description: list created hooks\n      parameters:\n        - description: Automatically added\n          in: path\n          name: ownerId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n    post:\n      description: create a hook for notifications\n      parameters:\n        - description: Automatically added\n          in: path\n          name: ownerId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n  \"/notifications/webhooks/{ownerId}/:id\":\n    delete:\n      description: delete a hook\n      parameters:\n        - description: Automatically added\n          in: path\n          name: ownerId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n    put:\n      description: edit a hook\n      parameters:\n        - description: Automatically added\n          in: path\n          name: ownerId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n  /oauth/access_token:\n    post:\n      operationId: postOauthAccessToken\n      parameters:\n        - in: query\n          name: oauth_consumer_key\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_signature_method\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_signature\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_timestamp\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_nonce\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_version\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_verifier\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_callback\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_token_secret\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_callback_confirmed\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: postAccessTokenRequest\n      tags:\n        - all\n        - oauth\n  /oauth/access_token_query:\n    post:\n      parameters:\n        - in: query\n          name: oauth_consumer_key\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_signature_method\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_signature\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_timestamp\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_nonce\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_version\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_verifier\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_callback\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_token_secret\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_callback_confirmed\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - oauth\n  /oauth/authorize:\n    get:\n      operationId: getOauthAuthorize\n      parameters:\n        - in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - in: header\n          name: Cookie\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: authorizeForm\n      tags:\n        - all\n        - oauth\n    post:\n      operationId: postOauthAuthorize\n      parameters:\n        - in: query\n          name: almighty\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: access_organisations\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: manage_organisations\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: manage_organisations_services\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: manage_organisations_applications\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: manage_organisations_members\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: access_organisations_bills\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: access_organisations_credit_count\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: access_organisations_consumption_statistics\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: access_personal_information\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: manage_personal_information\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: manage_ssh_keys\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: manage_services\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: manage_applications\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: access_bills\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: access_credit_count\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: access_consumption_statistics\n          required: false\n          schema:\n            type: string\n        - in: header\n          name: Cookie\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: authorizeToken\n      tags:\n        - all\n        - oauth\n  /oauth/request_token:\n    post:\n      operationId: postOauthRequestToken\n      parameters:\n        - in: query\n          name: oauth_consumer_key\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_signature_method\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_signature\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_timestamp\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_nonce\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_version\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_verifier\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_callback\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_token_secret\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_callback_confirmed\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: postReqTokenRequest\n      tags:\n        - all\n        - oauth\n  /oauth/request_token_query:\n    post:\n      parameters:\n        - in: query\n          name: oauth_consumer_key\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_signature_method\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_signature\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_timestamp\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_nonce\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_version\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_verifier\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_callback\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_token_secret\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: oauth_callback_confirmed\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - oauth\n  /oauth/rights:\n    get:\n      operationId: getOauthRights\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Rights\"\n          description: getAvailableRights\n      tags:\n        - all\n        - oauth\n  \"/openapi.{type}\":\n    get:\n      description: Get the swagger for this API as {type}. Type can be either \"yml\" or \"json\".\n      responses:\n        \"200\":\n          description: This API swagger documentation in {type} format.\n      summary: Get the swagger for this API as {type}\n      tags:\n        - all\n    parameters:\n      - in: path\n        name: type\n        required: true\n        schema:\n          type: string\n  /organisations:\n    get:\n      operationId: getOrganisations\n      parameters:\n        - in: query\n          name: user\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Organisation\"\n                type: array\n          description: getUserOrganisations\n      tags:\n        - all\n        - organisations\n    post:\n      operationId: postOrganisations\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeOrganisation\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Organisation\"\n          description: createOrganisation\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}\":\n    delete:\n      operationId: deleteOrganisationsId\n      responses:\n        \"200\":\n          description: deleteOrganisation\n      tags:\n        - all\n        - organisations\n    get:\n      operationId: getOrganisationsId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organisation\"\n          description: getOrganisation\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeOrganisation\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Organisation\"\n          description: editOrganisation\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/addonproviders\":\n    get:\n      operationId: getOrganisationsIdAddonproviders\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Provider\"\n                type: array\n          description: Get all informations about all providers.\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdAddonproviders\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeAddonProvider\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Provider\"\n          description: createProvider\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/addonproviders/{providerId}\":\n    delete:\n      description: Remove a given add-on provider. providerId must be owned by organisation {id}.\n      responses:\n        \"204\":\n          description: If the deletion was successful.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: '{\"type\":\"error\",\"id\":6200,\"message\":\"You do not belong to this organisation so you cannot access it\"}'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: If user has no access to organisation {id} or provider or if there still are add-ons of this provider.\n        \"404\":\n          description: If no such organisation/provider exists.\n      summary: Remove an add-on provider\n      tags:\n        - all\n        - organisations\n    get:\n      operationId: getOrganisationsIdAddonprovidersProviderId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Provider\"\n          description: Get all informations about given provider.\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdAddonprovidersProviderId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeAddonProvider\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Provider\"\n          description: updateProviderInfos\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/addonproviders/{providerId}/features\":\n    get:\n      operationId: getOrganisationsIdAddonprovidersProviderIdFeatures\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Feature\"\n                type: array\n          description: getProviderFeatures\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdAddonprovidersProviderIdFeatures\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WannabeFeature\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Feature\"\n          description: addProviderFeature\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/addonproviders/{providerId}/features/{featureId}\":\n    delete:\n      operationId: deleteOrganisationsIdAddonprovidersProviderIdFeaturesFeatureId\n      responses:\n        \"200\":\n          description: deleteProviderFeature\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: featureId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addonproviders/{providerId}/plans\":\n    get:\n      operationId: getOrganisationsIdAddonprovidersProviderIdPlans\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Plan\"\n                type: array\n          description: getProviderPlans\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdAddonprovidersProviderIdPlans\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabePlan\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n          description: addProviderPlan\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/addonproviders/{providerId}/plans/{planId}\":\n    delete:\n      operationId: deleteOrganisationsIdAddonprovidersProviderIdPlansPlanId\n      responses:\n        \"200\":\n          description: deleteProviderPlan\n      tags:\n        - all\n        - organisations\n    get:\n      operationId: getOrganisationsIdAddonprovidersProviderIdPlansPlanId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n          description: getProviderPlan\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: planId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdAddonprovidersProviderIdPlansPlanId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabePlan\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n          description: editProviderPlan\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}\":\n    delete:\n      operationId: deleteOrganisationsIdAddonprovidersProviderIdPlansPlanIdFeaturesFeatureName\n      responses:\n        \"200\":\n          description: deleteProviderPlanFeature\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: featureName\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: planId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdAddonprovidersProviderIdPlansPlanIdFeaturesFeatureName\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WannabePlanFeature\"\n        required: true\n      responses:\n        \"200\":\n          description: editProviderPlanFeature\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/addonproviders/{providerId}/sso\":\n    get:\n      operationId: getOrganisationsIdAddonsAddonIdSso\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddonProviderSso\"\n          description: getSSOData\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addonproviders/{providerId}/tags\":\n    get:\n      operationId: getOrganisationsIdAddonprovidersProviderIdTags\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  type: string\n                type: array\n          description: getProviderTags\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addonproviders/{providerId}/testers\":\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: providerId\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdAddonprovidersProviderIdTesters\n      responses:\n        \"200\":\n          description: addBetaTester\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/addons\":\n    get:\n      operationId: getOrganisationsIdAddons\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Addon\"\n                type: array\n          description: getAddons\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdAddons\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeAddon\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Addon\"\n          description: provisionAddon\n      tags:\n        - all\n        - addons\n        - organisations\n  \"/organisations/{id}/addons/preorders\":\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeAddon\"\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - addons\n        - organisations\n  \"/organisations/{id}/addons/{addonId}\":\n    delete:\n      operationId: deleteOrganisationsIdAddonsAddonId\n      responses:\n        \"200\":\n          description: deprovisionAddon\n      tags:\n        - all\n        - addons\n        - organisations\n    get:\n      operationId: getOrganisationsIdAddonsAddonId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Addon\"\n          description: getAddon\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdAddonsAddonId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeAddon\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Addon\"\n          description: Update addon information\n      tags:\n        - all\n        - addons\n        - organisations\n  \"/organisations/{id}/addons/{addonId}/applications\":\n    get:\n      operationId: getOrganisationsIdAddonsAddonIdApplications\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getApplicationsLinkedToAddon\n      tags:\n        - all\n        - addons\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addons/{addonId}/env\":\n    get:\n      operationId: getOrganisationsIdAddonsAddonIdEnv\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ListEnv\"\n                type: array\n          description: getAddonEnv\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addons/{addonId}/instances\":\n    get:\n      parameters:\n        - in: query\n          name: deploymentId\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: withDeleted\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: List of instances.\n                items:\n                  $ref: \"#/components/schemas/SupernovaInstanceView\"\n                type: array\n          description: The instance list\n      summary: List instances for this add-on.\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addons/{addonId}/instances/{instanceId}\":\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SupernovaInstanceView\"\n          description: An instance\n      summary: Get a specific instance for {addonId}\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: instanceId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addons/{addonId}/migrations\":\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                       \"id\": \"\u003cUUID\u003e\",\n                       \"addon_id\": \"addon_\u003cuuid\u003e\",\n                       \"kind\": \"SHARED_TO_SHARED|SHARED_TO_DEDICATED|DEDICATED_TO_DEDICATED|DEDICATED_TO_SHARED\",\n                       \"state\": \"??\",\n                       \"hostname\": \"db.hostname\",\n                       \"database\": \"dbname\",\n                       \"port\": 5432,\n                       \"database_user\": \"username\",\n                       \"callback_url\": \"https://api.clever-cloud.com/v2/…\",\n                       \"old_cluster_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n                       \"old_cluster_label\": \"par2-01\",\n                       \"old_instance_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n                       \"old_plan\": \"s\",\n                       \"old_zone\": \"par2\",\n                       \"old_recipient_hostname\": \"postgresql-sdc-par2-clevercloud.services.clever-cloud.com\", \n                       \"new_cluster_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n                       \"new_cluster_label\": \"par2-02\",\n                       \"new_instance_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n                       \"new_plan\": \"m\",\n                       \"new_zone\": \"par3\",\n                       \"new_recipient_hostname\": \"postgresql-sdc-par3-clevercloud.services.clever-cloud.com\", \n                       \"request_date\": \"2018-10-31T10:00:23Z\",\n                       \"last_state_update_date\":  \"2018-10-31T10:00:23Z\",\n                       \"dump_restore_start_date\":  \"2018-10-31T10:00:23Z\",\n                       \"dump_restore_finished_date\":  \"2018-10-31T10:00:23Z\",\n                       \"end_date\":  \"2018-10-31T10:00:23Z\",\n                       \"exit_message\": \"Success\" \n                    }\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AddonMigration\"\n                type: array\n          description: List of migrations\n      summary: Get past migrations from add-on.\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                planId:\n                  description: Id of the new plan. E.g. \"plan_acddc485-79c2-4c6b-a617-c92a06c0cb0b\"\n                  type: string\n                region:\n                  description: New region. E.g. \"EU\", \"US\", \"Par2\"\n                  type: string\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: The output of the POST to the add-on API.\n                type: object\n          description: Migration has started.\n      summary: Start a new add-on migration\n      tags:\n        - all\n        - addons\n        - organisations\n  \"/organisations/{id}/addons/{addonId}/migrations/{migrationId}\":\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddonMigration\"\n          description: The migration object\n      summary: Get a given migration\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: migrationId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addons/{addonId}/sso\":\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Sso\"\n          description: getSSOData\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addons/{addonId}/tags\":\n    get:\n      operationId: getOrganisationsIdAddonsAddonIdTags\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  type: string\n                type: array\n          description: getAddonTags\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/addons/{addonId}/tags/{tag}\":\n    delete:\n      operationId: deleteOrganisationsIdAddonsAddonIdTagsTag\n      responses:\n        \"200\":\n          description: deleteAddonTag\n      tags:\n        - all\n        - addons\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdAddonsAddonIdTagsTag\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: addAddonTag\n      tags:\n        - all\n        - addons\n        - organisations\n  \"/organisations/{id}/applications\":\n    get:\n      operationId: getOrganisationsIdApplications\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getAllApplications\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    post:\n      description: \"Creates an application. If you want to create a Github app, you need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179\"\n      operationId: postOrganisationsIdApplications\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeApplication\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Application\"\n          description: addApplication\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppId\n      responses:\n        \"200\":\n          description: deleteApplication\n      tags:\n        - all\n        - applications\n        - organisations\n    get:\n      operationId: getOrganisationsIdApplicationsAppId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n          description: getApplication\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdApplicationsAppId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeApplication\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Application\"\n          description: editApplication\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/addons\":\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdAddons\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Addon\"\n                type: array\n          description: getAddonsLinkedToApplication\n      tags:\n        - all\n        - addons\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdApplicationsAppIdAddons\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: linkAddonToApplication\n      tags:\n        - all\n        - addons\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/addons/env\":\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdAddonsEnv\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Env\"\n                type: array\n          description: getEnvOfAddonsLinkedToApplication\n      tags:\n        - all\n        - addons\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/addons/{addonId}\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppIdAddonsAddonId\n      responses:\n        \"200\":\n          description: unlinkAddonFromApplication\n      tags:\n        - all\n        - addons\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/branch\":\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/branches\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/buildflavor\":\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/dependencies\":\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdDependencies\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getApplicationDependencies\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/dependencies/env\":\n    get:\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LinkedAppEnv\"\n                type: array\n          description: Get env variables defined by application dependencies\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/dependencies/{dependencyId}\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppIdDependenciesDependencyId\n      responses:\n        \"200\":\n          description: deleteApplicationDependency\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: dependencyId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdApplicationsAppIdDependenciesDependencyId\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: addApplicationDependency\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/dependents\":\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdDependents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getApplicationDependents\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/deployments\":\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdDeployments\n      parameters:\n        - in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: action\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Deployment\"\n                type: array\n          description: getApplicationDeploymentsForOrga\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/deployments/{deploymentId}\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: deploymentId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/deployments/{deploymentId}/instances\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppIdDeploymentsDeploymentIdInstances\n      responses:\n        \"200\":\n          description: getApplicationDeploymentsForOrga\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: deploymentId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/env\":\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdEnv\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ListEnv\"\n                type: array\n          description: getApplicationEnv\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdApplicationsAppIdEnv\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeEnv\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListEnv\"\n          description: editApplicationEnvironment\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/env/{envName}\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppIdEnvEnvName\n      responses:\n        \"200\":\n          description: removeApplicationEnv\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: envName\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdApplicationsAppIdEnvEnvName\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeEnv\"\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListEnv\"\n          description: editApplicationEnv\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/exposed_env\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/instances\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppIdInstances\n      responses:\n        \"200\":\n          description: undeployApplication\n      tags:\n        - all\n        - applications\n        - organisations\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdInstances\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AppInstance\"\n                type: array\n          description: getApplicationInstances\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdApplicationsAppIdInstances\n      parameters:\n        - in: query\n          name: commit\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: redeployApplication\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/instances/{instanceId}\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: instanceId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/tags\":\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdTags\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  type: string\n                type: array\n          description: getApplicationTags\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/tags/{tag}\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppIdTagsTag\n      responses:\n        \"200\":\n          description: deleteApplicationTag\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdApplicationsAppIdTagsTag\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: addApplicationTag\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/vhosts\":\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdVhosts\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Vhost\"\n                type: array\n          description: getVhosts\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/applications/{appId}/vhosts/favourite\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppIdVhostsFavourite\n      responses:\n        \"200\":\n          description: unmarkFavouriteVhost\n      tags:\n        - all\n        - applications\n        - organisations\n    get:\n      operationId: getOrganisationsIdApplicationsAppIdVhostsFavourite\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vhost\"\n          description: getFavouriteVhost\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdApplicationsAppIdVhostsFavourite\n      requestBody:\n        $ref: \"#/components/requestBodies/Vhost\"\n      responses:\n        \"200\":\n          description: markFavouriteVhost\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/applications/{appId}/vhosts/{domain}\":\n    delete:\n      operationId: deleteOrganisationsIdApplicationsAppIdVhostsDomain\n      responses:\n        \"200\":\n          description: removeVhost\n      tags:\n        - all\n        - applications\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: domain\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdApplicationsAppIdVhostsDomain\n      requestBody:\n        $ref: \"#/components/requestBodies/Vhost\"\n      responses:\n        \"200\":\n          description: addVhost\n      tags:\n        - all\n        - applications\n        - organisations\n  \"/organisations/{id}/avatar\":\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    put:\n      description: If you want to upload an image from your computer, send the image in the body of the request without anything else.\n      operationId: putOrganisationsIdAvatar\n      responses:\n        \"200\":\n          description: |-\n            setOrgaAvatar\n            setOrgaAvatarFromSource\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/consumers\":\n    get:\n      operationId: getOrganisationsIdConsumers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Consumer\"\n                type: array\n          description: getConsumers\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdConsumers\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeConsumer\"\n      responses:\n        \"200\":\n          description: createConsumer\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/consumers/{key}\":\n    delete:\n      operationId: deleteOrganisationsIdConsumersKey\n      responses:\n        \"200\":\n          description: deleteConsumer\n      tags:\n        - all\n        - organisations\n    get:\n      operationId: getOrganisationsIdConsumersKey\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Consumer\"\n          description: getConsumer\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdConsumersKey\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeConsumer\"\n      responses:\n        \"200\":\n          description: PUT the same data as in POST.\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/consumers/{key}/secret\":\n    get:\n      operationId: getOrganisationsIdConsumersKeySecret\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Secret\"\n          description: getConsumerSecret\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: key\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/consumptions\":\n    get:\n      operationId: getOrganisationsIdConsumptions\n      parameters:\n        - in: query\n          name: appId\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: to\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Conso\"\n          description: getAmount\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/credits\":\n    get:\n      operationId: getOrganisationsIdCredits\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credits\"\n          description: getAmount\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/deployments\":\n    get:\n      operationId: getOrganisationsIdDeployments\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeploymentSummary\"\n          description: getDeploymentsForAllApps\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/instances\":\n    get:\n      operationId: getOrganisationsIdInstances\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: getInstancesForAllApps\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/members\":\n    get:\n      operationId: getOrganisationsIdMembers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Member\"\n                type: array\n          description: getOrganisationMembers\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdMembers\n      parameters:\n        - in: query\n          name: invitationKey\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeMember\"\n      responses:\n        \"200\":\n          description: addOrganisationMember\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/members/{userId}\":\n    delete:\n      operationId: deleteOrganisationsIdMembersUserId\n      responses:\n        \"200\":\n          description: removeOrganisationMember\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdMembersUserId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeMember\"\n      responses:\n        \"200\":\n          description: editOrganisationMember\n      tags:\n        - all\n        - organisations\n  \"/organisations/{id}/payment-info\":\n    get:\n      operationId: getOrganisationsIdPaymentInfo\n      responses:\n        \"200\":\n          description: getPaymentInfo\n      tags:\n        - all\n        - organisations\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/payments/billings\":\n    get:\n      operationId: getOrganisationsIdPaymentsBillings\n      responses:\n        \"200\":\n          description: getInvoices\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postOrganisationsIdPaymentsBillings\n      responses:\n        \"200\":\n          description: buyDrops\n      tags:\n        - all\n        - organisations\n        - payments\n  \"/organisations/{id}/payments/billings/unpaid\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/payments/billings/{bid}\":\n    delete:\n      operationId: deleteOrganisationsIdPaymentsBillingsBid\n      responses:\n        \"200\":\n          description: deletePurchaseOrder\n      tags:\n        - all\n        - organisations\n        - payments\n    get:\n      operationId: getOrganisationsIdPaymentsBillingsBid\n      responses:\n        \"200\":\n          description: getInvoice\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: bid\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putOrganisationsIdPaymentsBillingsBid\n      responses:\n        \"200\":\n          description: choosePaymentProvider\n      tags:\n        - all\n        - organisations\n        - payments\n  \"/organisations/{id}/payments/billings/{bid}.pdf\":\n    get:\n      operationId: getOrganisationsIdPaymentsBillingsBidPdf\n      parameters:\n        - in: query\n          name: token\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: getPdfInvoice\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: bid\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/payments/fullprice/{price}\":\n    get:\n      operationId: getOrganisationsIdPaymentsFullPricePrice\n      responses:\n        \"200\":\n          description: priceWithTax\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: price\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/payments/methods\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n  \"/organisations/{id}/payments/methods/default\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentData\"\n        required: true\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n  \"/organisations/{id}/payments/methods/{mId}\":\n    delete:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: mId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/payments/monthlyinvoice\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/organisations/{id}/payments/monthlyinvoice/maxcredit\":\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n  \"/organisations/{id}/payments/recurring\":\n    delete:\n      operationId: deleteOrganisationsIdPaymentsRecurring\n      responses:\n        \"200\":\n          description: deleteRecurrentPayment\n      tags:\n        - all\n        - organisations\n        - payments\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - organisations\n        - payments\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  /password_forgotten:\n    get:\n      operationId: getPasswordForgotten\n      responses:\n        \"200\":\n          description: getPasswordForgottenForm\n      tags:\n        - all\n        - password_forgotten\n    post:\n      operationId: postPasswordForgotten\n      parameters:\n        - in: query\n          name: login\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: drop_tokens\n          required: false\n          schema:\n            type: string\n        - in: header\n          name: TesterPass\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: askForPasswordResetViaForm\n      tags:\n        - all\n        - password_forgotten\n  \"/password_forgotten/{key}\":\n    get:\n      operationId: getPasswordForgottenKey\n      responses:\n        \"200\":\n          description: confirmPasswordResetRequest\n      tags:\n        - all\n        - password_forgotten\n    parameters:\n      - in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postPasswordForgottenKey\n      parameters:\n        - in: query\n          name: pass\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: pass2\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: resetPasswordForgotten\n      tags:\n        - all\n        - password_forgotten\n  \"/payments/assets/pay_button/{token}/button.png\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - payments\n    parameters:\n      - in: path\n        name: token\n        required: true\n        schema:\n          type: string\n  \"/payments/coupons/{name}\":\n    get:\n      operationId: getPaymentsCouponsName\n      responses:\n        \"200\":\n          description: getCoupon\n      tags:\n        - all\n        - payments\n    parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n  /payments/providers:\n    get:\n      operationId: getPaymentsProviders\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Payment_Provider\"\n                type: array\n          description: getAvailablePaymentProviders\n      tags:\n        - all\n        - payments\n  /payments/tokens/stripe:\n    get:\n      operationId: getPaymentsTokensStripe\n      responses:\n        \"200\":\n          description: getStripeToken\n      tags:\n        - all\n        - payments\n  \"/payments/{bid}/end/stripe\":\n    parameters:\n      - in: path\n        name: bid\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        \"200\":\n          description: endPaymentWithStripe\n      tags:\n        - all\n        - payments\n  /products/addonproviders:\n    get:\n      operationId: getProductsAddonProviders\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Provider\"\n                type: array\n          description: getAddonProviders\n      tags:\n        - all\n        - products\n  \"/products/addonproviders/{provider_id}\":\n    get:\n      operationId: getProductsAddonProvidersProviderId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Provider\"\n          description: getAddonProvider\n      tags:\n        - all\n        - products\n    parameters:\n      - in: path\n        name: provider_id\n        required: true\n        schema:\n          type: string\n  \"/products/addonproviders/{provider_id}/versions\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - products\n    parameters:\n      - in: path\n        name: provider_id\n        required: true\n        schema:\n          type: string\n  /products/countries:\n    get:\n      operationId: getProductsCountries\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Country\"\n          description: getCountries\n      tags:\n        - all\n        - products\n  /products/countrycodes:\n    get:\n      operationId: getProductsCountrycodes\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Country\"\n          description: getCountryCodes\n      tags:\n        - all\n        - products\n  /products/instances:\n    get:\n      operationId: getProductsInstances\n      parameters:\n        - in: query\n          name: for\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Instance\"\n                type: array\n          description: getAvailableInstances\n      tags:\n        - all\n        - products\n  \"/products/instances/{type}-{version}\":\n    get:\n      operationId: getProductsInstancesTypeVersion\n      parameters:\n        - in: query\n          name: for\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: app\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Instance\"\n          description: getAvailableInstance\n      tags:\n        - all\n        - products\n    parameters:\n      - in: path\n        name: type\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: version\n        required: true\n        schema:\n          type: string\n  /products/mfa_kinds:\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - products\n  /products/packages:\n    get:\n      operationId: getProductsPackages\n      parameters:\n        - in: query\n          name: coupon\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: orgaId\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: currency\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: getAvailablePackages\n      tags:\n        - all\n        - products\n  /products/prices:\n    get:\n      operationId: getProductsPrices\n      responses:\n        \"200\":\n          description: getExchangeRates\n      tags:\n        - all\n        - products\n  /products/zones:\n    get:\n      operationId: getProductsZones\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Zone\"\n                type: array\n          description: getZones\n      tags:\n        - all\n        - products\n  /self:\n    delete:\n      operationId: deleteSelf\n      responses:\n        \"200\":\n          description: deleteUser\n      tags:\n        - all\n        - self\n    get:\n      description: Get information about yourself\n      operationId: getSelf\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: getUser\n      summary: \"\"\n      tags:\n        - all\n        - self\n    put:\n      operationId: putSelf\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeUser\"\n      responses:\n        \"200\":\n          description: editUser\n      tags:\n        - all\n        - self\n  /self/addons:\n    get:\n      description: Get all the addons\n      operationId: getSelfAddons\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Addon\"\n                type: array\n          description: getAddons\n      summary: Addon\n      tags:\n        - all\n        - addons\n        - self\n    post:\n      operationId: postSelfAddons\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeAddon\"\n      responses:\n        \"200\":\n          description: provisionAddon\n      tags:\n        - all\n        - addons\n        - self\n  /self/addons/preorders:\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeAddon\"\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - addons\n        - self\n  \"/self/addons/{addonId}\":\n    delete:\n      operationId: deleteSelfAddonsAddonId\n      responses:\n        \"200\":\n          description: deprovisionAddon\n      tags:\n        - all\n        - addons\n        - self\n    get:\n      description: Get a specific addon\n      operationId: getSelfAddonsAddonId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Addon\"\n          description: getAddon\n      summary: Specific addon\n      tags:\n        - all\n        - addons\n        - self\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfAddonsAddonId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeAddon\"\n      responses:\n        \"200\":\n          description: Update addon informations\n      tags:\n        - all\n        - addons\n        - self\n  \"/self/addons/{addonId}/applications\":\n    get:\n      operationId: getSelfAddonsAddonIdApplications\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getApplicationsLinkedToAddon\n      tags:\n        - all\n        - addons\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/self/addons/{addonId}/env\":\n    get:\n      operationId: getSelfAddonsAddonIdEnv\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ListEnv\"\n                type: array\n          description: getAddonEnv\n      tags:\n        - all\n        - addons\n        - self\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/self/addons/{addonId}/plan\":\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfAddonsAddonIdPlan\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabePlan\"\n      responses:\n        \"200\":\n          description: Update plan of an add-on.\n      tags:\n        - all\n        - addons\n        - self\n  \"/self/addons/{addonId}/sso\":\n    get:\n      operationId: getSelfAddonsAddonIdSso\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Sso\"\n          description: getSSOData\n      tags:\n        - all\n        - addons\n        - self\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/self/addons/{addonId}/tags\":\n    get:\n      operationId: getSelfAddonsAddonIdTags\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  type: string\n                type: array\n          description: getAddonTags\n      tags:\n        - all\n        - addons\n        - self\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/self/addons/{addonId}/tags/{tag}\":\n    delete:\n      operationId: deleteSelfAddonsAddonIdTagsTag\n      responses:\n        \"200\":\n          description: deleteAddonTag\n      tags:\n        - all\n        - addons\n        - self\n    parameters:\n      - in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfAddonsAddonIdTagsTag\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: addAddonTag\n      tags:\n        - all\n        - addons\n        - self\n  /self/applications:\n    get:\n      operationId: getSelfApplications\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getApplications\n      tags:\n        - all\n        - applications\n        - self\n    post:\n      description: \"Creates an application. If you want to create a Github app, you need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179\"\n      operationId: postSelfApplications\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeApplication\"\n      responses:\n        \"200\":\n          description: addApplication\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}\":\n    delete:\n      operationId: deleteSelfApplicationsAppId\n      responses:\n        \"200\":\n          description: deleteApplication\n      tags:\n        - all\n        - applications\n        - self\n    get:\n      operationId: getSelfApplicationsAppId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n          description: getApplication\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfApplicationsAppId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeApplication\"\n      responses:\n        \"200\":\n          description: editApplication\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/addons\":\n    get:\n      operationId: getSelfApplicationsAppIdAddons\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Addon\"\n                type: array\n          description: getAddonsLinkedToApplication\n      tags:\n        - all\n        - addons\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postSelfApplicationsAppIdAddons\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: linkAddonToApplication\n      tags:\n        - all\n        - addons\n        - applications\n        - self\n  \"/self/applications/{appId}/addons/env\":\n    get:\n      operationId: getSelfApplicationsAppIdAddonsEnv\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Env\"\n                type: array\n          description: getEnvOfAddonsLinkedToApplication\n      tags:\n        - all\n        - addons\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/addons/{addonId}\":\n    delete:\n      operationId: deleteSelfApplicationsAppIdAddonsAddonId\n      responses:\n        \"200\":\n          description: unlinkAddonFromApplication\n      tags:\n        - all\n        - addons\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/branch\":\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/branches\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/buildflavor\":\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/dependencies\":\n    get:\n      operationId: getSelfApplicationsAppIdDependencies\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getApplicationDependencies\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/dependencies/env\":\n    get:\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LinkedAppEnv\"\n                type: array\n          description: Get env variables defined by application dependencies\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/dependencies/{dependencyId}\":\n    delete:\n      operationId: deleteSelfApplicationsAppIdDependenciesDependencyId\n      responses:\n        \"200\":\n          description: deleteApplicationDependency\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: dependencyId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: getSelfApplicationsAppIdDependenciesDependencyId\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeApplication\"\n      responses:\n        \"200\":\n          description: addApplicationDependency\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/dependents\":\n    get:\n      operationId: getSelfApplicationsAppIdDependents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getApplicationDependents\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/deployments\":\n    get:\n      operationId: getSelfApplicationsAppIdDeployments\n      parameters:\n        - in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: action\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Deployment\"\n                type: array\n          description: getApplicationDeployments\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/deployments/{deploymentId}\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: deploymentId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/deployments/{deploymentId}/instances\":\n    delete:\n      operationId: deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstances\n      responses:\n        \"200\":\n          description: cancelDeploy\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: deploymentId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/env\":\n    get:\n      operationId: getSelfApplicationsAppIdEnv\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ListEnv\"\n                type: array\n          description: editApplicationEnv\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfApplicationsAppIdEnv\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeEnv\"\n      responses:\n        \"200\":\n          description: editApplicationEnvironment\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/env/{envName}\":\n    delete:\n      operationId: deleteSelfApplicationsAppIdEnvEnvName\n      responses:\n        \"200\":\n          description: removeApplicationEnv\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: envName\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfApplicationsAppIdEnvEnvName\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeEnv\"\n      responses:\n        \"200\":\n          description: editApplicationEnv\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/exposed_env\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/instances\":\n    delete:\n      operationId: deleteSelfApplicationsAppIdInstances\n      responses:\n        \"200\":\n          description: undeployApplication\n      tags:\n        - all\n        - applications\n        - self\n    get:\n      operationId: getSelfApplicationsAppIdInstances\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Instance\"\n                type: array\n          description: getApplicationInstances\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postSelfApplicationsAppIdInstances\n      parameters:\n        - in: query\n          name: commit\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: redeployApplication\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/instances/{instanceId}\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: instanceId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/tags\":\n    get:\n      operationId: getSelfApplicationsAppIdTags\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  type: string\n                type: array\n          description: getApplicationTags\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/tags/{tag}\":\n    delete:\n      operationId: deleteSelfApplicationsAppIdTagsTag\n      responses:\n        \"200\":\n          description: deleteApplicationTag\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfApplicationsAppIdTagsTag\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: addApplicationTag\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/vhosts\":\n    get:\n      operationId: getSelfApplicationsAppIdVhosts\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Vhost\"\n                type: array\n          description: getVhosts\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n  \"/self/applications/{appId}/vhosts/favourite\":\n    delete:\n      operationId: deleteSelfApplicationsAppIdVhostsFavourite\n      responses:\n        \"200\":\n          description: unmarkFavouriteVhost\n      tags:\n        - all\n        - applications\n        - self\n    get:\n      operationId: getSelfApplicationsAppIdVhostsFavourite\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vhost\"\n          description: getFavouriteVhost\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfApplicationsAppIdVhostsFavourite\n      requestBody:\n        $ref: \"#/components/requestBodies/Vhost\"\n      responses:\n        \"200\":\n          description: markFavouriteVhost\n      tags:\n        - all\n        - applications\n        - self\n  \"/self/applications/{appId}/vhosts/{domain}\":\n    delete:\n      operationId: deleteSelfApplicationsAppIdVhostsDomain\n      responses:\n        \"200\":\n          description: removeVhost\n      tags:\n        - all\n        - applications\n        - self\n    parameters:\n      - in: path\n        name: appId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: domain\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfApplicationsAppIdVhostsDomain\n      requestBody:\n        $ref: \"#/components/requestBodies/Vhost\"\n      responses:\n        \"200\":\n          description: addVhost\n      tags:\n        - all\n        - applications\n        - self\n  /self/avatar:\n    put:\n      operationId: putSelfAvatar\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Avatar\"\n        required: true\n      responses:\n        \"200\":\n          description: |-\n            setUserAvatar\n            setUserAvatarFromSource\n      tags:\n        - all\n        - self\n  /self/change_password:\n    put:\n      operationId: putSelfChangePassword\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Change_Password\"\n          description: changeUserPassword\n      tags:\n        - all\n        - self\n  /self/cli_tokens:\n    get:\n      parameters:\n        - in: query\n          name: cli_token\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - self\n  /self/confirmation_email:\n    get:\n      operationId: getSelfConfirmationEmail\n      responses:\n        \"200\":\n          description: getConfirmationEmail\n      tags:\n        - all\n        - self\n  /self/consumers:\n    get:\n      operationId: getSelfConsumers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Consumer\"\n                type: array\n          description: getConsumers\n      tags:\n        - all\n        - self\n    post:\n      operationId: postSelfConsumers\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeConsumer\"\n      responses:\n        \"200\":\n          description: createConsumer\n      tags:\n        - all\n        - self\n  \"/self/consumers/{key}\":\n    delete:\n      operationId: deleteSelfConsumersKey\n      responses:\n        \"200\":\n          description: deleteConsumer\n      tags:\n        - all\n        - self\n    get:\n      operationId: getSelfConsumersKey\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Consumer\"\n          description: getConsumer\n      tags:\n        - all\n        - self\n    parameters:\n      - in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfConsumersKey\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeConsumer\"\n      responses:\n        \"200\":\n          description: PUT same consumer data as in POST.\n      tags:\n        - all\n        - self\n  \"/self/consumers/{key}/secret\":\n    get:\n      operationId: getSelfConsumersKeySecret\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Secret\"\n          description: getConsumerSecret\n      tags:\n        - all\n        - self\n    parameters:\n      - in: path\n        name: key\n        required: true\n        schema:\n          type: string\n  /self/consumptions:\n    get:\n      operationId: getSelfConsumptions\n      parameters:\n        - in: query\n          name: appId\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: to\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Conso\"\n          description: getConsumptions\n      tags:\n        - all\n        - self\n  /self/credits:\n    get:\n      operationId: getSelfCredits\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credits\"\n          description: getAmount\n      tags:\n        - all\n        - self\n  /self/emails:\n    get:\n      operationId: getSelfEmails\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  type: string\n                type: array\n          description: getEmailAddresses\n      tags:\n        - all\n        - self\n  \"/self/emails/{email}\":\n    delete:\n      operationId: deleteSelfEmailsEmail\n      responses:\n        \"200\":\n          description: removeEmailAddress\n      tags:\n        - all\n        - self\n    parameters:\n      - in: path\n        name: email\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfEmailsEmail\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: addEmailAddress\n      tags:\n        - all\n        - self\n  /self/id:\n    get:\n      operationId: getSelfId\n      responses:\n        \"200\":\n          content:\n            \"*/*\":\n              schema:\n                type: string\n          description: getId\n      tags:\n        - all\n        - self\n  /self/instances:\n    get:\n      operationId: getSelfInstances\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Instance\"\n                type: array\n          description: getInstancesForAllApps\n      tags:\n        - all\n        - self\n  /self/keys:\n    get:\n      operationId: getSelfKeys\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Key\"\n                type: array\n          description: getSshKeys\n      tags:\n        - all\n        - self\n  \"/self/keys/{key}\":\n    delete:\n      operationId: deleteSelfKeysKey\n      responses:\n        \"200\":\n          description: removeSshKey\n      tags:\n        - all\n        - self\n    parameters:\n      - in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfKeysKey\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: addSshKey\n      tags:\n        - all\n        - self\n  \"/self/mfa/{kind}\":\n    delete:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - self\n    parameters:\n      - in: path\n        name: kind\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - self\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - self\n  \"/self/mfa/{kind}/backupcodes\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - self\n    parameters:\n      - in: path\n        name: kind\n        required: true\n        schema:\n          type: string\n  \"/self/mfa/{kind}/confirmation\":\n    parameters:\n      - in: path\n        name: kind\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - self\n  /self/payment-info:\n    get:\n      operationId: getSelfPaymentInfo\n      responses:\n        \"200\":\n          description: getPaymentInfo\n      tags:\n        - all\n        - self\n  /self/payments/billings:\n    get:\n      operationId: getSelfPaymentsBillings\n      responses:\n        \"200\":\n          description: getInvoices\n      tags:\n        - all\n        - payments\n        - self\n    post:\n      operationId: postSelfPaymentsBillings\n      responses:\n        \"200\":\n          description: buyDrops\n      tags:\n        - all\n        - payments\n        - self\n  \"/self/payments/billings/{bid}\":\n    delete:\n      operationId: deleteSelfPaymentsBillingsBid\n      responses:\n        \"200\":\n          description: deletePurchaseOrder\n      tags:\n        - all\n        - payments\n        - self\n    get:\n      operationId: getSelfPaymentsBillingsBid\n      responses:\n        \"200\":\n          description: getInvoice\n      tags:\n        - all\n        - payments\n        - self\n    parameters:\n      - in: path\n        name: bid\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putSelfPaymentsBillingsBid\n      responses:\n        \"200\":\n          description: choosePaymentProvider\n      tags:\n        - all\n        - payments\n        - self\n  \"/self/payments/billings/{bid}.pdf\":\n    get:\n      operationId: getSelfPaymentsBillingsBidPdf\n      parameters:\n        - in: query\n          name: token\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: getPdfInvoice\n      tags:\n        - all\n        - payments\n        - self\n    parameters:\n      - in: path\n        name: bid\n        required: true\n        schema:\n          type: string\n  \"/self/payments/fullprice/{price}\":\n    get:\n      operationId: getSelfPaymentsFullpricePrice\n      responses:\n        \"200\":\n          description: priceWithTax\n      tags:\n        - all\n        - payments\n        - self\n    parameters:\n      - in: path\n        name: price\n        required: true\n        schema:\n          type: string\n  /self/payments/methods:\n    get:\n      operationId: getSelfPaymentsMethods\n      responses:\n        \"200\":\n          description: getUserPaymentMethods\n      tags:\n        - all\n        - payments\n        - self\n    post:\n      operationId: postSelfPaymentsMethods\n      responses:\n        \"200\":\n          description: addUserMethod\n      tags:\n        - all\n        - payments\n        - self\n  /self/payments/methods/default:\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - payments\n        - self\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - payments\n        - self\n  \"/self/payments/methods/{mId}\":\n    delete:\n      operationId: deleteSelfPaymentsMethodsMId\n      responses:\n        \"200\":\n          description: deleteUserCard\n      tags:\n        - all\n        - payments\n        - self\n    parameters:\n      - in: path\n        name: mId\n        required: true\n        schema:\n          type: string\n  /self/payments/monthlyinvoice:\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - payments\n        - self\n  /self/payments/monthlyinvoice/maxcredit:\n    put:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - payments\n        - self\n  /self/payments/recurring:\n    delete:\n      operationId: deleteSelfPaymentsRecurring\n      responses:\n        \"200\":\n          description: deleteRecurrentPayment\n      tags:\n        - all\n        - payments\n        - self\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - payments\n        - self\n  /self/payments/tokens/stripe:\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - payments\n        - self\n  /self/tokens:\n    delete:\n      operationId: deleteSelfTokens\n      responses:\n        \"200\":\n          description: revokeAllTokens\n      tags:\n        - all\n        - self\n    get:\n      operationId: getSelfTokens\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Token\"\n                type: array\n          description: getSelfTokens\n      tags:\n        - all\n        - self\n  \"/self/tokens/{token}\":\n    delete:\n      operationId: deleteSelfTokensToken\n      responses:\n        \"200\":\n          description: revokeToken\n      tags:\n        - all\n        - self\n    parameters:\n      - in: path\n        name: token\n        required: true\n        schema:\n          type: string\n  /self/validate_email:\n    get:\n      operationId: getSelfValidateEmail\n      parameters:\n        - in: query\n          name: validationKey\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: validateEmail\n      tags:\n        - all\n        - self\n  /summary:\n    get:\n      operationId: getSummary\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Summary\"\n          description: getSummary\n      tags:\n        - all\n  /users:\n    post:\n      operationId: postUsers\n      parameters:\n        - in: query\n          name: invitationKey\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: addonBetaInvitationKey\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: email\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: pass\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: url_next\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: terms\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/WannabeUser\"\n      responses:\n        \"200\":\n          description: |-\n            createUser\n            createUserFromForm\n      tags:\n        - all\n        - users\n  \"/users/{id}\":\n    get:\n      operationId: getUsersId\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: getUser\n      tags:\n        - all\n        - users\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/users/{id}/applications\":\n    get:\n      operationId: getUsersIdApplications\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: getApplications\n      tags:\n        - all\n        - applications\n        - users\n    parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n  \"/users/{userId}/git-info\":\n    get:\n      operationId: getUsersUserIdGitInfo\n      responses:\n        \"200\":\n          description: getGitInfo\n      tags:\n        - all\n        - users\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n  \"/v3/logs/{appId}\":\n    get:\n      description: Fetch the logs for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/v3/logs/{appId}/drains\":\n    get:\n      description: Fetch the logs drains for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n    post:\n      description: Add a log drain for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/v3/logs/{appId}/drains/:idOrUrl\":\n    delete:\n      description: Delete the logs drain by id or url for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n    get:\n      description: Fetch the logs drain by id or url for a given application\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/v3/logs/{appId}/logs-chunked\":\n    get:\n      description: Retrieve logs as they come through a chunked, never-ending response\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  \"/v3/logs/{appId}/logs-socket\":\n    get:\n      description: 'Retrieve logs as they come through a websocket connection. To have authorization, you have to send a `{ \"message_type\": \"oauth\", \"authorization\": \"oauth authorization string\" }` message'\n      parameters:\n        - description: Automatically added\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: \u003cNo description\u003e\n      tags:\n        - all\n        - logs\n  /vendor//addons:\n    post:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - addons\n        - vendor\n  \"/vendor//apps/{addonId}/logscollector\":\n    get:\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - vendor\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n  /vendor/apps:\n    get:\n      operationId: getVendorApps\n      parameters:\n        - in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Application\"\n                type: array\n          description: listApps\n      tags:\n        - all\n        - vendor\n  \"/vendor/apps/{addonId}\":\n    get:\n      operationId: getVendorAppsAddonId\n      responses:\n        \"200\":\n          description: getApplicationInfo\n      tags:\n        - all\n        - vendor\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: putVendorAppsAddonId\n      responses:\n        \"200\":\n          description: editApplicationConfiguration\n      tags:\n        - all\n        - vendor\n  \"/vendor/apps/{addonId}/consumptions\":\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: postVendorBillingOwnerId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WannabeAddonBilling\"\n        required: true\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - vendor\n  \"/vendor/apps/{addonId}/migration_callback\":\n    parameters:\n      - in: path\n        name: addonId\n        required: true\n        schema:\n          type: string\n    put:\n      parameters:\n        - in: query\n          name: plan_id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: region\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Status 200\n      tags:\n        - all\n        - vendor\ncomponents:\n  requestBodies:\n    Body:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Body\"\n      required: true\n    Vhost:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Vhost\"\n      required: true\n    WannabeAddon:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabeAddon\"\n      required: true\n    WannabeAddonProvider:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabeAddonProvider\"\n      required: true\n    WannabeApplication:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabeApplication\"\n      required: true\n    WannabeConsumer:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabeConsumer\"\n      required: true\n    WannabeEnv:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabeEnv\"\n      required: true\n    WannabeMember:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabeMember\"\n      required: true\n    WannabeOrganisation:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabeOrganisation\"\n      required: true\n    WannabePlan:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabePlan\"\n      required: true\n    WannabeUser:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WannabeUser\"\n      required: true\n  schemas:\n    Addon:\n      description: An addon\n      properties:\n        configKeys:\n          description: Environments variables link to the addon.\n          items:\n            type: string\n          type: array\n        creationDate:\n          description: The creation timestamp of the addon\n          format: date\n          type: string\n        id:\n          description: \"`addon_${uuid}`\"\n          type: string\n        name:\n          type: string\n        plan:\n          $ref: \"#/components/schemas/Plan\"\n        provider:\n          $ref: \"#/components/schemas/Provider\"\n        realId:\n          description: \"`${provider}_${uuid2}`\"\n          type: string\n        region:\n          type: string\n      required:\n        - configKeys\n        - creationDate\n        - id\n        - name\n        - plan\n        - provider\n        - realId\n        - region\n      type: object\n    AddonMigration:\n      example: |-\n        {\n           \"id\": \"\u003cUUID\u003e\",\n           \"addon_id\": \"addon_\u003cuuid\u003e\",\n           \"kind\": \"SHARED_TO_SHARED|SHARED_TO_DEDICATED|DEDICATED_TO_DEDICATED|DEDICATED_TO_SHARED\",\n           \"state\": \"RUNNING|FAILED|RECOVERING|RECOVERED|OK\",\n           \"hostname\": \"db.hostname\",\n           \"database\": \"dbname\",\n           \"port\": 5432,\n           \"database_user\": \"username\",\n           \"callback_url\": \"https://api.clever-cloud.com/v2/…\",\n           \"old_cluster_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n           \"old_cluster_label\": \"par2-01\",\n           \"old_instance_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n           \"old_plan\": \"s\",\n           \"old_zone\": \"par2\",\n           \"old_recipient_hostname\": \"postgresql-sdc-par2-clevercloud.services.clever-cloud.com\", \n           \"new_cluster_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n           \"new_cluster_label\": \"par2-02\",\n           \"new_instance_id\": \"acddc485-79c2-4c6b-a617-c92a06c0cb0b\",\n           \"new_plan\": \"m\",\n           \"new_zone\": \"par3\",\n           \"new_recipient_hostname\": \"postgresql-sdc-par3-clevercloud.services.clever-cloud.com\", \n           \"request_date\": \"2018-10-31T10:00:23Z\",\n           \"last_state_update_date\":  \"2018-10-31T10:00:23Z\",\n           \"dump_restore_start_date\":  \"2018-10-31T10:00:23Z\",\n           \"dump_restore_finished_date\":  \"2018-10-31T10:00:23Z\",\n           \"end_date\":  \"2018-10-31T10:00:23Z\",\n           \"exit_message\": \"Success\" \n        }\n      properties:\n        addon_id:\n          type: string\n        callback_url:\n          type: string\n        database:\n          type: string\n        database_user:\n          type: string\n        dump_restore_finished_date:\n          type: string\n        dump_restore_start_date:\n          type: string\n        end_date:\n          type: string\n        exit_message:\n          type: string\n        hostname:\n          type: string\n        id:\n          type: string\n        kind:\n          type: string\n        last_state_update_date:\n          type: string\n        new_cluster_id:\n          type: string\n        new_cluster_label:\n          type: string\n        new_instance_id:\n          type: string\n        new_plan:\n          type: string\n        new_recipient_hostname:\n          type: string\n        new_zone:\n          type: string\n        old_cluster_id:\n          type: string\n        old_cluster_label:\n          type: string\n        old_instance_id:\n          type: string\n        old_plan:\n          type: string\n        old_recipient_hostname:\n          type: string\n        old_zone:\n          type: string\n        port:\n          type: number\n        request_date:\n          type: string\n        state:\n          type: string\n      type: object\n    AddonProviderSso:\n      properties:\n        macaroon:\n          type: string\n        url:\n          type: string\n      required:\n        - macaroon\n        - url\n      type: object\n    AppInstance:\n      properties:\n        appId:\n          type: string\n        appPort:\n          format: int32\n          type: integer\n        commit:\n          type: string\n        deployNumber:\n          format: int32\n          type: integer\n        flavor:\n          $ref: \"#/components/schemas/Flavor\"\n        id:\n          type: string\n        ip:\n          type: string\n        state:\n          type: string\n      type: object\n    Application:\n      properties:\n        archived:\n          default: false\n          type: boolean\n        branch:\n          type: string\n        buildFlavor:\n          $ref: \"#/components/schemas/Flavor\"\n        cancelOnPush:\n          default: false\n          type: boolean\n        commitId:\n          type: string\n        creationDate:\n          format: date\n          type: string\n        deployUrl:\n          type: string\n        deployment:\n          $ref: \"#/components/schemas/Deployment\"\n        description:\n          type: string\n        favourite:\n          default: false\n          type: boolean\n        homogeneous:\n          default: false\n          type: boolean\n        id:\n          type: string\n        instance:\n          $ref: \"#/components/schemas/Instance\"\n        last_deploy:\n          format: int32\n          type: integer\n        name:\n          type: string\n        ownerId:\n          type: string\n        separateBuild:\n          default: false\n          type: boolean\n        state:\n          type: string\n        stickySessions:\n          default: false\n          type: boolean\n        vhosts:\n          items:\n            $ref: \"#/components/schemas/Vhost\"\n          type: array\n        webhookSecret:\n          type: string\n        webhookUrl:\n          type: string\n        zone:\n          description: \"`par` ou `mtl`\"\n          type: string\n      required:\n        - archived\n        - branch\n        - buildFlavor\n        - cancelOnPush\n        - commitId\n        - creationDate\n        - deployUrl\n        - deployment\n        - description\n        - favourite\n        - homogeneous\n        - id\n        - instance\n        - last_deploy\n        - name\n        - ownerId\n        - separateBuild\n        - state\n        - stickySessions\n        - vhosts\n        - webhookSecret\n        - webhookUrl\n        - zone\n      type: object\n    Avatar:\n      description: If you want to upload an image from your computer, send the image in the body of the request without anything else.\n      properties:\n        source:\n          description: \"\"\n          properties:\n            source:\n              description: github or gravatar\n              type: string\n            value:\n              $ref: \"#/components/schemas/URL\"\n          required:\n            - source\n            - value\n          type: object\n      required:\n        - source\n      type: object\n    Body:\n      properties:\n        body:\n          type: string\n      required:\n        - body\n      type: object\n    Change_Password:\n      properties:\n        newPassword:\n          type: string\n        oldPassword:\n          type: string\n      required:\n        - newPassword\n        - oldPassword\n      type: object\n    Conso:\n      properties:\n        appId:\n          type: string\n        conso:\n          properties:\n            conso:\n              description: One day consumption\n              type: string\n            date:\n              type: string\n          required:\n            - conso\n            - date\n          type: object\n      required:\n        - appId\n        - conso\n      type: object\n    Consumer:\n      properties:\n        baseUrl:\n          type: string\n        description:\n          type: string\n        key:\n          type: string\n        name:\n          type: string\n        picture:\n          type: string\n        rights:\n          $ref: \"#/components/schemas/ConsumerRights\"\n        url:\n          type: string\n      required:\n        - baseUrl\n        - description\n        - name\n        - rights\n        - url\n      type: object\n    ConsumerRights:\n      properties:\n        access_bills:\n          default: false\n          type: boolean\n        access_consumption_statistics:\n          default: false\n          type: boolean\n        access_credit_count:\n          default: false\n          type: boolean\n        access_organisations:\n          default: false\n          type: boolean\n        access_organisations_bills:\n          default: false\n          type: boolean\n        access_organisations_consumption_statistics:\n          default: false\n          type: boolean\n        access_organisations_credit_count:\n          default: false\n          type: boolean\n        access_personal_information:\n          default: false\n          type: boolean\n        almighty:\n          default: false\n          type: boolean\n        manage_applications:\n          default: false\n          type: boolean\n        manage_organisations:\n          default: false\n          type: boolean\n        manage_organisations_applications:\n          default: false\n          type: boolean\n        manage_organisations_members:\n          default: false\n          type: boolean\n        manage_organisations_services:\n          default: false\n          type: boolean\n        manage_personal_information:\n          default: false\n          type: boolean\n        manage_services:\n          default: false\n          type: boolean\n        manage_ssh_keys:\n          default: false\n          type: boolean\n      type: object\n    Country:\n      properties:\n        code:\n          description: Code ISO 3166\n          type: string\n        name:\n          type: string\n      required:\n        - code\n        - name\n      type: object\n    Credits:\n      properties:\n        count:\n          format: float\n          type: number\n        dropPrice:\n          properties:\n            currency:\n              type: string\n            value:\n              format: float\n              type: number\n          required:\n            - currency\n            - value\n          type: object\n        ownerId:\n          type: string\n      required:\n        - count\n        - dropPrice\n        - ownerId\n      type: object\n    Deployment:\n      properties:\n        httpUrl:\n          type: string\n        repoState:\n          type: string\n        shutdownable:\n          default: false\n          type: boolean\n        type:\n          type: string\n        url:\n          type: string\n      required:\n        - repoState\n        - shutdownable\n        - type\n        - url\n      type: object\n    DeploymentSummary:\n      properties:\n        \"{app_id}\":\n          items:\n            $ref: \"#/components/schemas/DeploymentView\"\n          type: array\n      type: object\n    DeploymentView:\n      properties:\n        action:\n          type: string\n        author:\n          properties:\n            id:\n              type: string\n            name:\n              type: string\n          required:\n            - id\n            - name\n          type: object\n        cause:\n          type: string\n        commit:\n          type: string\n        date:\n          format: date\n          type: string\n        id:\n          format: int64\n          type: integer\n        instances:\n          format: int64\n          type: integer\n        state:\n          type: string\n        uuid:\n          type: string\n      required:\n        - action\n        - cause\n        - commit\n        - date\n        - id\n        - instances\n        - state\n        - uuid\n      type: object\n    Env:\n      properties:\n        addon_id:\n          type: string\n        addon_name:\n          type: string\n        env:\n          items:\n            $ref: \"#/components/schemas/WannabeEnv\"\n          type: array\n        provider_id:\n          type: string\n      required:\n        - addon_id\n        - addon_name\n        - env\n        - provider_id\n      type: object\n    Error:\n      example: '{\"id\":6200,\"type\":\"error\",\"message\":\"You do not belong to this organisation so you cannot access it\"}'\n      properties:\n        id:\n          description: Unique numeric id of this error type. Eg. id = 10 is \"Serialization failed\".\n          type: number\n        message:\n          description: Description of the error.\n          type: string\n        type:\n          description: Value should be \"error\"\n          type: string\n      type: object\n    Feature:\n      properties:\n        name:\n          description: The name of the properties\n          type: string\n        type:\n          description: The type of the feature\n          type: string\n        value:\n          description: The value of the feature\n          type: string\n      required:\n        - name\n        - type\n        - value\n      type: object\n    Flavor:\n      properties:\n        available:\n          default: false\n          type: boolean\n        cpus:\n          format: int32\n          type: integer\n        disk:\n          format: int32\n          type: integer\n        mem:\n          format: int32\n          type: integer\n        microservice:\n          default: false\n          type: boolean\n        name:\n          type: string\n        nice:\n          format: double\n          type: number\n        price:\n          format: double\n          type: number\n      required:\n        - cpus\n        - mem\n        - name\n        - price\n      type: object\n    Instance:\n      properties:\n        buildFlavor:\n          $ref: \"#/components/schemas/Flavor\"\n        comingSoon:\n          default: false\n          type: boolean\n        defaultEnv:\n          $ref: \"#/components/schemas/Map\"\n        defaultFlavor:\n          $ref: \"#/components/schemas/Flavor\"\n        deployments:\n          items:\n            type: string\n          type: array\n        description:\n          type: string\n        enabled:\n          default: false\n          type: boolean\n        flavors:\n          items:\n            $ref: \"#/components/schemas/Flavor\"\n          type: array\n        instanceAndVersion:\n          type: string\n        maxAllowedInstances:\n          format: int32\n          type: integer\n        maxFlavor:\n          $ref: \"#/components/schemas/Flavor\"\n        maxInstances:\n          format: int32\n          type: integer\n        minFlavor:\n          $ref: \"#/components/schemas/Flavor\"\n        minInstances:\n          format: int32\n          type: integer\n        name:\n          type: string\n        tags:\n          items:\n            type: string\n          type: array\n        type:\n          type: string\n        variant:\n          $ref: \"#/components/schemas/Variant\"\n        version:\n          type: string\n      required:\n        - defaultEnv\n        - flavors\n        - instanceAndVersion\n        - maxAllowedInstances\n        - maxFlavor\n        - maxInstances\n        - minFlavor\n        - minInstances\n        - type\n        - variant\n        - version\n      type: object\n    Key:\n      properties:\n        fingerprint:\n          type: string\n        key:\n          type: string\n        name:\n          description: \"\"\n          type: string\n      required:\n        - fingerprint\n        - key\n        - name\n      type: object\n    LinkedAppEnv:\n      properties:\n        app_id:\n          type: string\n        app_name:\n          type: string\n        env:\n          items:\n            $ref: \"#/components/schemas/WannabeEnv\"\n          type: array\n      required:\n        - app_id\n        - app_name\n        - env\n      type: object\n    ListEnv:\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n      type: object\n    Map:\n      type: object\n    Member:\n      properties:\n        job:\n          type: string\n        member:\n          properties:\n            avatar:\n              type: string\n            email:\n              type: string\n            id:\n              type: string\n            name:\n              type: string\n          required:\n            - email\n            - id\n          type: object\n        role:\n          type: string\n      required:\n        - job\n        - member\n        - role\n      type: object\n    Organisation:\n      properties:\n        VAT:\n          type: string\n        address:\n          type: string\n        avatar:\n          type: string\n        city:\n          type: string\n        company:\n          type: string\n        country:\n          type: string\n        description:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        vatState:\n          type: string\n        zipcode:\n          type: string\n      required:\n        - VAT\n        - address\n        - avatar\n        - city\n        - company\n        - country\n        - description\n        - id\n        - name\n        - vatState\n        - zipcode\n      type: object\n    PaymentData:\n      properties:\n        deviceData:\n          type: string\n        token:\n          type: string\n        type:\n          enum:\n            - NEW_CARD\n            - EXISTING_CARD\n          type: string\n      required:\n        - token\n        - type\n      type: object\n    Payment_Provider:\n      properties:\n        comingSoon:\n          default: false\n          type: boolean\n        imgUrl:\n          type: string\n        name:\n          type: string\n        title:\n          type: string\n      required:\n        - comingSoon\n        - imgUrl\n        - name\n        - title\n      type: object\n    Plan:\n      properties:\n        features:\n          description: The list of the feature in the addon\n          items:\n            $ref: \"#/components/schemas/Feature\"\n          type: array\n        id:\n          description: \"`plan_${uuid}`\"\n          type: string\n        name:\n          description: Name of the pan\n          type: string\n        price:\n          format: int32\n          type: integer\n        slug:\n          type: string\n      required:\n        - features\n        - id\n        - name\n        - price\n        - slug\n      type: object\n    Provider:\n      description: A provider\n      properties:\n        analyticsId:\n          description: The id of the analytics page link to this addon\n          type: string\n        canUpgrade:\n          default: false\n          description: Can the addon be upgraded\n          type: boolean\n        features:\n          items:\n            $ref: \"#/components/schemas/Feature\"\n          type: array\n        googlePlusName:\n          description: The name of the google + page link to this addon (could be empty)\n          type: string\n        id:\n          description: The id of the provider\n          type: string\n        logoUrl:\n          description: The url of the addon's logo\n          type: string\n        longDesc:\n          description: A less concise description of the addon\n          type: string\n        name:\n          type: string\n        openInNewTab:\n          default: false\n          description: Does the addon panel need to be open in a new tab\n          type: boolean\n        plans:\n          items:\n            $ref: \"#/components/schemas/Plan\"\n          type: array\n        regions:\n          description: The differents regions where the addon is available\n          items:\n            type: string\n          type: array\n        shortDesc:\n          description: A short description of the addon\n          type: string\n        status:\n          description: The status of this addon (RELEASE, BETA, ...)\n          type: string\n        supportEmail:\n          description: The mail to contact in case of issue with this addon\n          type: string\n        twitterName:\n          description: The name of the user to contact on twitter for this addon (could be empty)\n          type: string\n        website:\n          description: The website of the provider. If the addon is developped by clever-cloud, the site is \"http://www.clever-cloud.com/\"\n          type: string\n      required:\n        - analyticsId\n        - canUpgrade\n        - googlePlusName\n        - id\n        - logoUrl\n        - longDesc\n        - name\n        - openInNewTab\n        - regions\n        - shortDesc\n        - status\n        - supportEmail\n        - twitterName\n        - website\n      type: object\n    Rights:\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n      required:\n        - description\n        - name\n      type: object\n    Secret:\n      properties:\n        secret:\n          type: string\n        value:\n          type: string\n      required:\n        - secret\n        - value\n      type: object\n    Sso:\n      properties:\n        email:\n          type: string\n        id:\n          type: string\n        nav-data:\n          type: string\n        timestamp:\n          format: date\n          type: string\n        token:\n          type: string\n        url:\n          type: string\n      required:\n        - email\n        - id\n        - nav-data\n        - timestamp\n        - token\n        - url\n      type: object\n    Summary:\n      properties:\n        organisations:\n          items:\n            properties:\n              addons:\n                items:\n                  properties:\n                    id:\n                      type: string\n                    logoUrl:\n                      type: string\n                    name:\n                      type: string\n                    providerId:\n                      type: string\n                  type: object\n                type: array\n              applications:\n                items:\n                  properties:\n                    archived:\n                      default: false\n                      type: boolean\n                    commit:\n                      type: string\n                    id:\n                      type: string\n                    instanceType:\n                      type: string\n                    instanceVariant:\n                      type: string\n                    name:\n                      type: string\n                    state:\n                      type: string\n                    variantSlug:\n                      type: string\n                  type: object\n                type: array\n              avatar:\n                type: string\n              consumers:\n                items:\n                  properties:\n                    key:\n                      type: string\n                    name:\n                      type: string\n                    picture:\n                      type: string\n                  type: object\n                type: array\n              id:\n                type: string\n              name:\n                type: string\n              providers:\n                items:\n                  type: string\n                type: array\n              role:\n                type: string\n            type: object\n          type: array\n        user:\n          properties:\n            addons:\n              items:\n                properties:\n                  id:\n                    type: string\n                  logoUrl:\n                    type: string\n                  name:\n                    type: string\n                  providerId:\n                    type: string\n                type: object\n              type: array\n            admin:\n              default: false\n              type: boolean\n            applications:\n              items:\n                properties:\n                  archived:\n                    default: false\n                    type: boolean\n                  commit:\n                    type: string\n                  id:\n                    type: string\n                  instanceType:\n                    type: string\n                  instanceVariant:\n                    type: string\n                  name:\n                    type: string\n                  state:\n                    type: string\n                  variantSlug:\n                    type: string\n                type: object\n              type: array\n            avatar:\n              type: string\n            consumers:\n              items:\n                properties:\n                  key:\n                    type: string\n                  name:\n                    type: string\n                  picture:\n                    type: string\n                type: object\n              type: array\n            id:\n              type: string\n            lang:\n              type: string\n            name:\n              type: string\n          required:\n            - addons\n            - admin\n            - applications\n            - avatar\n            - id\n            - lang\n            - name\n          type: object\n      required:\n        - organisations\n        - user\n      type: object\n    SupernovaInstanceView:\n      example: |-\n        {\n          \"uuid\": \"19d21edb-a343-49e7-8aa6-9d87c7e272b8\",\n          \"displayName\": \"Sizzling spewpa\",\n          \"appId\": \"app_2b5ad0bb-4bd7-4180-80b9-0459e98364f3\",\n          \"ownerId\": \"orga_0d221ceb-1b50-4994-a8d9-babb3cceef02\",\n          \"flavor\": {\n            \"name\": \"nano\",\n            \"mem\": 512,\n            \"cpus\": 1,\n            \"price\": 0.1431844215\n          },\n          \"ip\": \"65.10.142.94\",\n          \"appPort\": 18605,\n          \"zabbixPort\": 28605,\n          \"sshPort\": 48605,\n          \"hv\": \"hv-par2-049\",\n          \"image\": \"java-20181029\",\n          \"state\": \"UP\",\n          \"commitId\": \"43a4ba1726e26f039654dcd3916f61c612802947\",\n          \"deployNumber\": 107,\n          \"deployId\": \"deployment_cad0cf75-38e2-4dc8-b1be-ea869862bb69\",\n          \"source\": \"apps\",\n          \"zone\": \"par\",\n          \"internalIP\": \"10.6.123.92\",\n          \"createdAt\": 1540921810532,\n          \"instanceNumber\": 0\n        }\n      properties:\n        appId:\n          description: Identifier of running app/add-on\n          type: string\n        appPort:\n          description: Port of the HV that's redirected to 8080 on VM\n          type: number\n        commitId:\n          type: string\n        createdAt:\n          description: Integer unix timestamp\n          type: number\n        deployId:\n          type: string\n        deployNumber:\n          type: number\n        displayName:\n          description: Generated PokéName. This name is generated from the uuid.\n          type: string\n        flavor:\n          description: 'The instance \"flavor\": memory, cpu, disk size…'\n          properties:\n            cpus:\n              type: number\n            mem:\n              type: number\n            name:\n              description: Name of flavor. For indication only.\n              type: string\n            price:\n              type: number\n          type: object\n        hv:\n          description: String name of hv.\n          type: string\n        image:\n          description: Base system image. E.g. java-20181030, node-20180912…\n          type: string\n        instanceNumber:\n          type: number\n        internalIP:\n          type: string\n        ip:\n          description: Public IP of the HV\n          type: string\n        ownerId:\n          description: Identifier of the owner of the app/add-on running\n          type: string\n        source:\n          description: Who/what started this instance? E.g. \"app\", \"cli\"\n          type: string\n        sshPort:\n          description: Port of the HV that's redirected to 22 on VM\n          type: number\n        state:\n          type: string\n        uuid:\n          type: string\n        zabbixPort:\n          description: Port of the HV that's redirected to 10050 on VM\n          type: number\n        zone:\n          type: string\n      required:\n        - appPort\n        - flavor\n        - hv\n        - image\n        - ip\n        - source\n        - uuid\n        - zabbixPort\n      type: object\n    Token:\n      properties:\n        consumer:\n          $ref: \"#/components/schemas/Consumer\"\n        creationDate:\n          format: int32\n          type: integer\n        lastUtilisation:\n          type: string\n        rights:\n          $ref: \"#/components/schemas/Rights\"\n        token:\n          type: string\n      required:\n        - consumer\n        - creationDate\n        - lastUtilisation\n        - rights\n        - token\n      type: object\n    Transaction_Id:\n      description: A simple transaction id\n      properties:\n        transactionId:\n          description: The transaction Id\n          type: string\n      required:\n        - transactionId\n      type: object\n    URL:\n      description: Must be a valid HTTP URL\n      properties:\n        url:\n          type: string\n      required:\n        - url\n      type: object\n    User:\n      description: A user representation\n      properties:\n        address:\n          description: The address of the user\n          type: string\n        admin:\n          default: false\n          description: Is the user an administrator ?\n          type: boolean\n        avatar:\n          description: The location of the user's avatar\n          type: string\n        canPay:\n          default: false\n          description: Does the user can pay ?\n          type: boolean\n        city:\n          description: The city of the user\n          type: string\n        country:\n          description: The country of the user\n          type: string\n        creationDate:\n          description: The creation timestamp of the user\n          format: int64\n          type: integer\n        email:\n          description: The email of the user\n          type: string\n        emailValidated:\n          default: false\n          description: Does the user email is validate\n          type: boolean\n        hasPassword:\n          default: false\n          type: boolean\n        id:\n          description: \"The id of the user : `user_${uuid}`\"\n          type: string\n        lang:\n          description: The lang of the user\n          type: string\n        name:\n          description: The name of the user\n          type: string\n        oauthApps:\n          description: The list of token oauth\n          items:\n            type: string\n          type: array\n        phone:\n          description: The phone of the user\n          type: string\n        preferredMFA:\n          type: string\n        zipcode:\n          description: The zipcode of the user\n          type: string\n      required:\n        - address\n        - admin\n        - avatar\n        - canPay\n        - city\n        - country\n        - creationDate\n        - email\n        - emailValidated\n        - id\n        - lang\n        - name\n        - oauthApps\n        - phone\n        - zipcode\n      type: object\n    Variant:\n      properties:\n        deployType:\n          type: string\n        id:\n          type: string\n        logo:\n          type: string\n        name:\n          type: string\n        slug:\n          type: string\n      required:\n        - deployType\n        - id\n        - logo\n        - name\n        - slug\n      type: object\n    Vhost:\n      properties:\n        fqdn:\n          type: string\n      required:\n        - fqdn\n      type: object\n    WannabeAddon:\n      properties:\n        name:\n          type: string\n        payment:\n          $ref: \"#/components/schemas/PaymentData\"\n        plan:\n          type: string\n        providerId:\n          description: \"\"\n          type: string\n        region:\n          type: string\n      required:\n        - name\n        - payment\n        - plan\n        - providerId\n        - region\n      type: object\n    WannabeAddonBilling:\n      properties:\n        cost:\n          format: double\n          type: number\n      required:\n        - cost\n      type: object\n    WannabeAddonProvider:\n      properties:\n        api:\n          $ref: \"#/components/schemas/WannabeAddonProviderAPI\"\n        id:\n          type: string\n        name:\n          type: string\n      required:\n        - api\n        - id\n        - name\n      type: object\n    WannabeAddonProviderAPI:\n      properties:\n        config_vars:\n          items:\n            type: string\n          type: array\n        password:\n          type: string\n        production:\n          $ref: \"#/components/schemas/WannabeAddonProviderAPIUrl\"\n        regions:\n          items:\n            type: string\n          type: array\n        sso_salt:\n          type: string\n        test:\n          $ref: \"#/components/schemas/WannabeAddonProviderAPIUrl\"\n      required:\n        - config_vars\n        - password\n        - sso_salt\n      type: object\n    WannabeAddonProviderAPIUrl:\n      properties:\n        base_url:\n          type: string\n        sso_url:\n          type: string\n      required:\n        - base_url\n        - sso_url\n      type: object\n    WannabeApplication:\n      properties:\n        archived:\n          default: false\n          type: boolean\n        cancelOnPush:\n          default: false\n          type: boolean\n        deploy:\n          type: string\n        description:\n          type: string\n        enabled:\n          default: false\n          type: boolean\n        favourite:\n          default: false\n          type: boolean\n        homogeneous:\n          default: false\n          type: boolean\n        instanceType:\n          type: string\n        instanceVariant:\n          type: string\n        instanceVersion:\n          type: string\n        maxFlavor:\n          type: string\n        maxInstances:\n          format: int32\n          type: integer\n        minFlavor:\n          type: string\n        minInstances:\n          format: int32\n          type: integer\n        name:\n          type: string\n        oauthApp:\n          $ref: \"#/components/schemas/WannabeOauthApp\"\n        oauthAppId:\n          type: string\n        oauthService:\n          type: string\n        separateBuild:\n          default: false\n          type: boolean\n        shutdownable:\n          default: false\n          type: boolean\n        stickySessions:\n          default: false\n          type: boolean\n        tags:\n          items:\n            type: string\n          type: array\n        zone:\n          type: string\n      required:\n        - deploy\n        - enabled\n        - maxInstances\n        - minInstances\n        - name\n        - zone\n      type: object\n    WannabeConsumer:\n      properties:\n        baseUrl:\n          $ref: \"#/components/schemas/URL\"\n        description:\n          type: string\n        name:\n          type: string\n        picture:\n          description: \"\"\n          type: string\n        rights:\n          properties:\n            activated:\n              default: false\n              type: boolean\n            right:\n              type: string\n          required:\n            - activated\n            - right\n          type: object\n        url:\n          $ref: \"#/components/schemas/URL\"\n      required:\n        - baseUrl\n        - name\n        - rights\n        - url\n      type: object\n    WannabeEnv:\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n      required:\n        - name\n        - value\n      type: object\n    WannabeFeature:\n      properties:\n        name:\n          type: string\n        type:\n          description: BOOLEAN, INTERVAL, FILESIZE, NUMBER, PERCENTAGE\n          type: string\n      required:\n        - name\n        - type\n      type: object\n    WannabeMember:\n      properties:\n        email:\n          type: string\n        job:\n          type: string\n        role:\n          type: string\n      required:\n        - email\n        - role\n      type: object\n    WannabeOauthApp:\n      properties:\n        name:\n          type: string\n        owner:\n          type: string\n      type: object\n    WannabeOrganisation:\n      properties:\n        VAT:\n          type: string\n        address:\n          description: The address of the organisation.\n          type: string\n        city:\n          description: The city of the organisation.\n          type: string\n        company:\n          description: The company's name of the organisation.\n          type: string\n        country:\n          description: The country of the organisation.\n          type: string\n        description:\n          description: The description of the organisation.\n          type: string\n        name:\n          description: The name of the organisation.\n          type: string\n        zipcode:\n          description: The zipcode of the city's organisation.\n          type: string\n      required:\n        - description\n        - name\n      type: object\n    WannabePlan:\n      properties:\n        features:\n          items:\n            $ref: \"#/components/schemas/WannabePlanFeature\"\n          type: array\n        name:\n          type: string\n        price:\n          format: int64\n          type: integer\n        slug:\n          type: string\n      required:\n        - features\n        - name\n        - price\n        - slug\n      type: object\n    WannabePlanFeature:\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        value:\n          type: string\n      required:\n        - name\n        - type\n        - value\n      type: object\n    WannabeUser:\n      description: \"\"\n      properties:\n        address:\n          type: string\n        city:\n          type: string\n        country:\n          type: string\n        email:\n          description: \"\"\n          type: string\n        lang:\n          type: string\n        name:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        terms:\n          default: false\n          type: boolean\n        zipcode:\n          type: string\n      required:\n        - email\n        - password\n        - terms\n      type: object\n    Zone:\n      properties:\n        correspondingRegion:\n          type: string\n        internal:\n          default: false\n          type: boolean\n        name:\n          type: string\n      required:\n        - correspondingRegion\n        - internal\n        - name\n      type: object\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@d7b17ce5bf6b5ed79e49d8b536171707a426d788/-/blob/APIs/clever-cloud.com/1.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/d7b17ce5bf6b5ed79e49d8b536171707a426d788/APIs/clever-cloud.com/1.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"//openapi\": get: at 1:28659: parse path \"//openapi\": path MUST be relative"
}