{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/skalena/openbankingBR"
		},
		"file": {
			"name": "openapi-v3.yaml",
			"size": 0,
			"path": "apache-fineract/openapi-v3.yaml",
			"byteSize": 348176,
			"content": "openapi: 3.0.1\ninfo:\n  title: Fineract by Skalena\n  description: 'Apache Fineract is a secure, multi-tenanted microfinance platform. '\n  termsOfService: https://demo.openmf.org/api-docs/apiLive.htm\n  contact:\n    name: https://skalena.finance\n  version: 1.0.0\nservers:\n- url: https://skalena-api.brazilsouth.cloudapp.azure.com:8443/fineract-provider/api/v1\ntags:\n- name: Periodic Accrual Accounting\n- name: Accounting Closure\n- name: Mapping Financial Activities to Accounts\n- name: General Ledger Account\n- name: Journal Entries\n- name: Provisioning Entries\n- name: Accounting Rules\n- name: Batch API\n- name: Audits\n- name: Maker Checker (or 4-eye) functionality\n- name: Account number format\n- name: Cache\n- name: SMS Campaigns\n- name: Code Values\n- name: Codes\n- name: External Services\n- name: Global Configuration\n- name: CreditBureau Configuration\n- name: Data Tables\n- name: Entity-Datatable Checks\n- name: Reports\n- name: Run Reports\n- name: Documents\n- name: DomainNameapiv1{entity}{entityId}images\n- name: DomainNameapiv1entitytoentitymapping\n- name: Hooks\n- name: Scheduler\n- name: MIFOSX-BATCH JOBS\n- name: Report Mailing Jobs\n- name: List Report Mailing Job History\n- name: Authentication HTTP Basic\n- name: Fetch authenticated user details\n- name: SMS\n- name: Likelihood\n- name: Poverty Line\n- name: Survey\n- name: Mix Report\n- name: Mix Taxonomy\n- name: Mix Mapping\n- name: Holidays\n- name: Currency\n- name: officetransactions\n- name: Offices\n- name: Provisioning Category\n- name: Provisioning Criteria\n- name: Staff\n- name: cashiers\n- name: Teller Cash Management\n- name: cashiersjournal\n- name: Working days\n- name: Clients Address\n- name: Client Charges\n- name: Client Identifier Api\n- name: Client Transaction\n- name: Client Api\n- name: SPM API - LookUp Table\n- name: SPM - Scorecards\n- name: SPM - Serveys\n- name: User Generated Documents\n- name: Password preferences\n- name: Permissions\n- name: Roles\n- name: Users\npaths:\n  /runaccruals:\n    post:\n      tags:\n      - Periodic Accrual Accounting\n      summary: Executes Periodic Accrual Accounting\n      description: |\n        Mandatory Fields\n\n        tillDate\n      operationId: executePeriodicAccrualAccounting\n      requestBody:\n        description: \"Request Body\\n\\nField Descriptions: \\ntillDate: \\nwhich specifies\\\n          \\ periodic accruals should happen till the given Date\"\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/runaccrualsRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content: {}\n      x-codegen-request-body-name: body\n  /glclosures:\n    get:\n      tags:\n      - Accounting Closure\n      summary: List Accounting closures\n      description: |-\n        Example Requests:\n\n        glclosures\n      operationId: retrieveAllClosures\n      parameters:\n      - name: officeId\n        in: query\n        description: officeId\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetGLClosureResponse'\n    post:\n      tags:\n      - Accounting Closure\n      summary: Create an Accounting Closure\n      description: |-\n        Mandatory Fields\n        officeId,closingDate\n      operationId: createGLClosure\n      requestBody:\n        description: Request Body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostGLCLosuresRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostGlClosuresResponse'\n      x-codegen-request-body-name: body\n  /glclosures/{glClosureId}:\n    get:\n      tags:\n      - Accounting Closure\n      summary: Retrieve an Accounting Closure\n      description: |-\n        Example Requests:\n\n        glclosures/1\n\n\n        /glclosures/1?fields=officeName,closingDate\n      operationId: retreiveClosure\n      parameters:\n      - name: glClosureId\n        in: path\n        description: glClosureId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetGLClosureResponse'\n    put:\n      tags:\n      - Accounting Closure\n      summary: Update an Accounting closure\n      description: Once an accounting closure is created, only the comments associated\n        with it may be edited\n      operationId: updateGLClosure\n      parameters:\n      - name: glClosureId\n        in: path\n        description: glClosureId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Request body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutGlClosuresRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutGlClosuresResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Accounting Closure\n      summary: Delete an accounting closure\n      description: 'Note: Only the latest accounting closure associated with a branch\n        may be deleted.'\n      operationId: deleteGLClosure\n      parameters:\n      - name: glClosureId\n        in: path\n        description: glclosureId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteGlClosuresResponse'\n  /financialactivityaccounts:\n    get:\n      tags:\n      - Mapping Financial Activities to Accounts\n      summary: List Financial Activities to Accounts Mappings\n      description: |-\n        Example Requests:\n\n        financialactivityaccounts\n      operationId: retrieveAll\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'\n    post:\n      tags:\n      - Mapping Financial Activities to Accounts\n      summary: Create a new Financial Activity to Accounts Mapping\n      description: |-\n        Mandatory Fields\n        financialActivityId, glAccountId\n      operationId: createGLAccount\n      requestBody:\n        description: Request body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostFinancialActivityAccountsResponse'\n      x-codegen-request-body-name: body\n  /financialactivityaccounts/{mappingId}:\n    get:\n      tags:\n      - Mapping Financial Activities to Accounts\n      summary: |\n        Retrieve a Financial Activity to Account Mapping\n      description: |-\n        Example Requests:\n\n        financialactivityaccounts/1\n      operationId: retreive\n      parameters:\n      - name: mappingId\n        in: path\n        description: mappingId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'\n    put:\n      tags:\n      - Mapping Financial Activities to Accounts\n      summary: Update a Financial Activity to Account Mapping\n      description: \"the API updates the Ledger account linked to a Financial Activity\\\n        \\ \\n\"\n      operationId: updateGLAccount\n      parameters:\n      - name: mappingId\n        in: path\n        description: mappingId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: Request body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutFinancialActivityAccountsResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Mapping Financial Activities to Accounts\n      summary: Delete a Financial Activity to Account Mapping\n      operationId: deleteGLAccount\n      parameters:\n      - name: mappingId\n        in: path\n        description: mappingId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteFinancialActivityAccountsResponse'\n  /financialactivityaccounts/template:\n    get:\n      tags:\n      - Mapping Financial Activities to Accounts\n      operationId: retrieveTemplate\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /glaccounts/template:\n    get:\n      tags:\n      - General Ledger Account\n      summary: Retrieve GL Accounts Template\n      description: \"This is a convenience resource. It can be useful when building\\\n        \\ maintenance user interface screens for client applications. The template\\\n        \\ data returned consists of any or all of:\\n\\nField Defaults\\nAllowed Value\\\n        \\ Lists\\nExample Request:\\n\\nglaccounts/template\\nglaccounts/template?type=1\\n\\\n        \\ntype is optional and integer value from 1 to 5.\\n\\n1.Assets \\n2.Liabilities\\\n        \\ \\n3.Equity \\n4.Income \\n5.Expenses\"\n      operationId: retrieveNewAccountDetails\n      parameters:\n      - name: type\n        in: query\n        description: type\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetGLAccountsTemplateResponse'\n  /glaccounts:\n    get:\n      tags:\n      - General Ledger Account\n      summary: List General Ledger Accounts\n      description: |-\n        ARGUMENTS\n        type Integer optional manualEntriesAllowed boolean optional usage Integer optional disabled boolean optional parentId Long optional tagId Long optional\n        Example Requests:\n\n        glaccounts\n\n\n        glaccounts?type=1\u0026manualEntriesAllowed=true\u0026usage=1\u0026disabled=false\n\n        glaccounts?fetchRunningBalance=true\n      operationId: retrieveAllAccounts\n      parameters:\n      - name: type\n        in: query\n        description: type\n        schema:\n          type: integer\n          format: int32\n      - name: searchParam\n        in: query\n        description: searchParam\n        schema:\n          type: string\n      - name: usage\n        in: query\n        description: usage\n        schema:\n          type: integer\n          format: int32\n      - name: manualEntriesAllowed\n        in: query\n        description: manualEntriesAllowed\n        schema:\n          type: boolean\n      - name: disabled\n        in: query\n        description: disabled\n        schema:\n          type: boolean\n      - name: fetchRunningBalance\n        in: query\n        description: fetchRunningBalance\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetGLAccountsResponse'\n    post:\n      tags:\n      - General Ledger Account\n      summary: Create a General Ledger Account\n      description: \"Note: You may optionally create Hierarchical Chart of Accounts\\\n        \\ by using the \\\"parentId\\\" property of an Account\\nMandatory Fields: \\nname,\\\n        \\ glCode, type, usage and manualEntriesAllowed\"\n      operationId: createGLAccountPost\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostGLAccountsRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostGLAccountsResponse'\n      x-codegen-request-body-name: body\n  /glaccounts/{glAccountId}:\n    get:\n      tags:\n      - General Ledger Account\n      summary: Retrieve a General Ledger Account\n      description: |-\n        Example Requests:\n\n        glaccounts/1\n\n\n        glaccounts/1?template=true\n\n\n        glaccounts/1?fields=name,glCode\n\n\n        glaccounts/1?fetchRunningBalance=true\n      operationId: retreiveAccount\n      parameters:\n      - name: glAccountId\n        in: path\n        description: glAccountId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: fetchRunningBalance\n        in: query\n        description: fetchRunningBalance\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetGLAccountsResponse'\n    put:\n      tags:\n      - General Ledger Account\n      summary: Update an Accounting closure\n      description: |+\n        Once an accounting closure is created, only the comments associated with it may be edited\n\n      operationId: updateGLAccountPut\n      parameters:\n      - name: glAccountId\n        in: path\n        description: glAccountId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutGLAccountsRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutGLAccountsResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - General Ledger Account\n      summary: Delete an accounting closure\n      description: 'Note: Only the latest accounting closure associated with a branch\n        may be deleted.'\n      operationId: deleteGLAccountDelete\n      parameters:\n      - name: glAccountId\n        in: path\n        description: glAccountId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteGLAccountsRequest'\n  /journalentries/{journalEntryId}:\n    get:\n      tags:\n      - Journal Entries\n      summary: Retrieve a single Entry\n      description: |-\n        Example Requests:\n\n        journalentries/1\n\n\n\n        journalentries/1?fields=officeName,glAccountId,entryType,amount\n\n        journalentries/1?runningBalance=true\n\n        journalentries/1?transactionDetails=true\n      operationId: retreiveJournalEntryById\n      parameters:\n      - name: journalEntryId\n        in: path\n        description: journalEntryId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: runningBalance\n        in: query\n        description: runningBalance\n        schema:\n          type: boolean\n      - name: transactionDetails\n        in: query\n        description: transactionDetails\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JournalEntryData'\n  /journalentries:\n    get:\n      tags:\n      - Journal Entries\n      summary: List Journal Entries\n      description: |-\n        The list capability of journal entries can support pagination and sorting.\n\n        Example Requests:\n\n        journalentries\n\n        journalentries?transactionId=PB37X8Y21EQUY4S\n\n        journalentries?officeId=1\u0026manualEntriesOnly=true\u0026fromDate=1 July 2013\u0026toDate=15 July 2013\u0026dateFormat=dd MMMM yyyy\u0026locale=en\n\n        journalentries?fields=officeName,glAccountName,transactionDate\n\n        journalentries?offset=10\u0026limit=50\n\n        journalentries?orderBy=transactionId\u0026sortOrder=DESC\n\n        journalentries?runningBalance=true\n\n        journalentries?transactionDetails=true\n\n        journalentries?loanId=12\n\n        journalentries?savingsId=24\n      operationId: retrieveAllGet\n      parameters:\n      - name: officeId\n        in: query\n        description: officeId\n        schema:\n          type: integer\n          format: int64\n      - name: glAccountId\n        in: query\n        description: glAccountId\n        schema:\n          type: integer\n          format: int64\n      - name: manualEntriesOnly\n        in: query\n        description: manualEntriesOnly\n        schema:\n          type: boolean\n      - name: fromDate\n        in: query\n        description: fromDate\n        schema:\n          type: string\n      - name: toDate\n        in: query\n        description: toDate\n        schema:\n          type: string\n      - name: transactionId\n        in: query\n        description: transactionId\n        schema:\n          type: string\n      - name: entityType\n        in: query\n        description: entityType\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        description: orderBy\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: sortOrder\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: locale\n        schema:\n          type: string\n      - name: dateFormat\n        in: query\n        description: dateFormat\n        schema:\n          type: string\n      - name: loanId\n        in: query\n        description: loanId\n        schema:\n          type: integer\n          format: int64\n      - name: savingsId\n        in: query\n        description: savingsId\n        schema:\n          type: integer\n          format: int64\n      - name: runningBalance\n        in: query\n        description: runningBalance\n        schema:\n          type: boolean\n      - name: transactionDetails\n        in: query\n        description: transactionDetails\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JournalEntryData'\n    post:\n      tags:\n      - Journal Entries\n      summary: Create \"Balanced\" Journal Entries\n      description: \"Note: A Balanced (simple) Journal entry would have atleast one\\\n        \\ \\\"Debit\\\" and one \\\"Credit\\\" entry whose amounts are equal \\nCompound Journal\\\n        \\ entries may have \\\"n\\\" debits and \\\"m\\\" credits where both \\\"m\\\" and \\\"\\\n        n\\\" are greater than 0 and the net sum or all debits and credits are equal\\\n        \\ \\n\\n\\nMandatory Fields\\nofficeId, transactionDate\\n\\n\\ncredits- glAccountId,\\\n        \\ amount, comments\\n\\n \\ndebits-  glAccountId, amount, comments\\n\\n \\nOptional\\\n        \\ Fields\\npaymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber,\\\n        \\ bankNumber\"\n      operationId: createGLJournalEntry\n      parameters:\n      - name: command\n        in: query\n        description: command\n        schema:\n          type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JournalEntryCommand'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostJournalEntriesResponse'\n      x-codegen-request-body-name: body\n  /journalentries/{transactionId}:\n    post:\n      tags:\n      - Journal Entries\n      summary: Update Running balances for Journal Entries\n      description: \"This API calculates the running balances for office. If office\\\n        \\ ID not provided this API calculates running balances for all offices. \\n\\\n        Mandatory Fields\\nofficeId\"\n      operationId: createReversalJournalEntry\n      parameters:\n      - name: transactionId\n        in: path\n        description: transactionId\n        required: true\n        schema:\n          type: string\n      - name: command\n        in: query\n        description: command\n        schema:\n          type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostJournalEntriesTransactionIdRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostJournalEntriesTransactionIdResponse'\n      x-codegen-request-body-name: body\n  /journalentries/provisioning:\n    get:\n      tags:\n      - Journal Entries\n      operationId: retrieveJournalEntries\n      parameters:\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: entryId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /journalentries/openingbalance:\n    get:\n      tags:\n      - Journal Entries\n      operationId: retrieveOpeningBalance\n      parameters:\n      - name: officeId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: currencyCode\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /provisioningentries:\n    get:\n      tags:\n      - Provisioning Entries\n      summary: List all Provisioning Entries\n      operationId: retrieveAllProvisioningEntries\n      parameters:\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProvisioningEntryData'\n    post:\n      tags:\n      - Provisioning Entries\n      summary: Create new Provisioning Entries\n      description: |-\n        Creates a new Provisioning Entries\n\n        Mandatory Fields\n        date\n        dateFormat\n        locale\n        Optional Fields\n        createjournalentries\n      operationId: createProvisioningEntries\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostProvisioningEntriesRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostProvisioningEntriesResponse'\n      x-codegen-request-body-name: body\n  /provisioningentries/{entryId}:\n    get:\n      tags:\n      - Provisioning Entries\n      summary: Retrieves a Provisioning Entry\n      description: Returns the details of a generated Provisioning Entry.\n      operationId: retrieveProvisioningEntry\n      parameters:\n      - name: entryId\n        in: path\n        description: entryId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisioningEntryData'\n    post:\n      tags:\n      - Provisioning Entries\n      summary: Recreates Provisioning Entry\n      description: Recreates Provisioning Entry | createjournalentry.\n      operationId: modifyProvisioningEntry\n      parameters:\n      - name: entryId\n        in: path\n        description: entryId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        description: |-\n          command=createjournalentry\n          command=recreateprovisioningentry\n        schema:\n          type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutProvisioningEntriesRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutProvisioningEntriesResponse'\n      x-codegen-request-body-name: body\n  /provisioningentries/entries:\n    get:\n      tags:\n      - Provisioning Entries\n      operationId: retrieveProviioningEntries\n      parameters:\n      - name: entryId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: officeId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: productId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: categoryId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoanProductProvisioningEntryData'\n  /accountingrules:\n    get:\n      tags:\n      - Accounting Rules\n      summary: Retrieve Accounting Rules\n      description: |-\n        Returns the list of defined accounting rules.\n\n        Example Requests:\n\n        accountingrules\n      operationId: retrieveAllAccountingRules\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetAccountRulesResponse'\n    post:\n      tags:\n      - Accounting Rules\n      summary: Create/Define a Accounting rule\n      description: |-\n        Define a new Accounting rule.\n\n        Mandatory Fields\n        name, officeId,\n        accountToDebit OR debitTags,\n        accountToCredit OR creditTags.\n\n        Optional Fields\n        description\n      operationId: createAccountingRule\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostAccountingRulesRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostAccountingRulesResponse'\n      x-codegen-request-body-name: body\n  /accountingrules/{accountingRuleId}:\n    get:\n      tags:\n      - Accounting Rules\n      summary: Retrieve a Accounting rule\n      description: |-\n        Returns the details of a defined Accounting rule.\n\n        Example Requests:\n\n        accountingrules/1\n      operationId: retreiveAccountingRule\n      parameters:\n      - name: accountingRuleId\n        in: path\n        description: accountingRuleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountingRuleData'\n    put:\n      tags:\n      - Accounting Rules\n      summary: Update a Accounting Rule\n      description: Updates the details of a Accounting rule.\n      operationId: updateAccountingRule\n      parameters:\n      - name: accountingRuleId\n        in: path\n        description: accountingRuleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutAccountingRulesRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutAccountingRulesResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Accounting Rules\n      summary: Delete a Accounting Rule\n      description: Deletes a Accounting rule.\n      operationId: deleteAccountingRule\n      parameters:\n      - name: accountingRuleId\n        in: path\n        description: accountingRuleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAccountingRulesResponse'\n  /accountingrules/template:\n    get:\n      tags:\n      - Accounting Rules\n      summary: Retrieve Accounting Rule Details Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n        Field Defaults\n        Allowed Value Lists\n        Example Request:\n\n        accountingrules/template\n      operationId: retrieveTemplateGet\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountRulesTemplateResponse'\n  /batches:\n    post:\n      tags:\n      - Batch API\n      summary: Batch requests in a single transaction\n      description: |-\n        The Apache Fineract Batch API is also capable of executing all the requests in a single transaction, by setting a Query Parameter, \"enclosingTransaction=true\". So, if one or more of the requests in a batch returns an erroneous response all of the Data base transactions made by other successful requests will be rolled back.\n\n        If there has been a rollback in a transaction then a single response will be provided, with a '400' status code and a body consisting of the error details of the first failed request.\n      operationId: handleBatchRequests\n      parameters:\n      - name: enclosingTransaction\n        in: query\n        description: enclosingTransaction\n        schema:\n          type: boolean\n          default: false\n      requestBody:\n        description: request body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostBatchesRequest'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponse'\n      x-codegen-request-body-name: body\n  /audits/{auditId}:\n    get:\n      tags:\n      - Audits\n      summary: Retrieve an Audit Entry\n      description: |-\n        Example Requests:\n\n        audits/20\n        audits/20?fields=madeOnDate,maker,processingResult\n      operationId: retrieveAuditEntry\n      parameters:\n      - name: auditId\n        in: path\n        description: auditId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMakerCheckerResponse'\n  /audits/searchtemplate:\n    get:\n      tags:\n      - Audits\n      summary: Audit Search Template\n      description: |-\n        This is a convenience resource. It can be useful when building an Audit Search UI. \"appUsers\" are data scoped to the office/branch the requestor is associated with.\n\n        Example Requests:\n\n        audits/searchtemplate\n        audits/searchtemplate?fields=actionNames\n      operationId: retrieveAuditSearchTemplate\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'\n  /audits:\n    get:\n      tags:\n      - Audits\n      summary: List Audits\n      description: |-\n        Get a 200 list of audits that match the criteria supplied and sorted by audit id in descending order, and are within the requestors' data scope. Also it supports pagination and sorting\n\n        Example Requests:\n\n        audits\n\n        audits?fields=madeOnDate,maker,processingResult\n\n        audits?makerDateTimeFrom=2013-03-25 08:00:00\u0026makerDateTimeTo=2013-04-04 18:00:00\n\n        audits?officeId=1\n\n        audits?officeId=1\u0026includeJson=true\n      operationId: retrieveAuditEntries\n      parameters:\n      - name: actionName\n        in: query\n        description: actionName\n        schema:\n          type: string\n      - name: entityName\n        in: query\n        description: entityName\n        schema:\n          type: string\n      - name: resourceId\n        in: query\n        description: resourceId\n        schema:\n          type: integer\n          format: int64\n      - name: makerId\n        in: query\n        description: makerId\n        schema:\n          type: integer\n          format: int64\n      - name: makerDateTimeFrom\n        in: query\n        description: makerDateTimeFrom\n        schema:\n          type: string\n      - name: makerDateTimeTo\n        in: query\n        description: makerDateTimeTo\n        schema:\n          type: string\n      - name: checkerId\n        in: query\n        description: checkerId\n        schema:\n          type: integer\n          format: int64\n      - name: checkerDateTimeFrom\n        in: query\n        description: checkerDateTimeFrom\n        schema:\n          type: string\n      - name: checkerDateTimeTo\n        in: query\n        description: checkerDateTimeTo\n        schema:\n          type: string\n      - name: processingResult\n        in: query\n        description: processingResult\n        schema:\n          type: integer\n          format: int32\n      - name: officeId\n        in: query\n        description: officeId\n        schema:\n          type: integer\n          format: int32\n      - name: groupId\n        in: query\n        description: groupId\n        schema:\n          type: integer\n          format: int32\n      - name: clientId\n        in: query\n        description: clientId\n        schema:\n          type: integer\n          format: int32\n      - name: loanid\n        in: query\n        description: loanid\n        schema:\n          type: integer\n          format: int32\n      - name: savingsAccountId\n        in: query\n        description: savingsAccountId\n        schema:\n          type: integer\n          format: int32\n      - name: paged\n        in: query\n        description: paged\n        schema:\n          type: boolean\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        description: orderBy\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: sortOrder\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetMakerCheckerResponse'\n  /makercheckers/searchtemplate:\n    get:\n      tags:\n      - Maker Checker (or 4-eye) functionality\n      summary: Maker Checker Search Template\n      description: |-\n        This is a convenience resource. It can be useful when building a Checker Inbox UI. \"appUsers\" are data scoped to the office/branch the requestor is associated with. \"actionNames\" and \"entityNames\" returned are those that the requestor has Checker approval permissions for.\n\n        Example Requests:\n\n        makercheckers/searchtemplate\n        makercheckers/searchtemplate?fields=entityNames\n      operationId: retrieveAuditSearchTemplateGet\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'\n  /makercheckers:\n    get:\n      tags:\n      - Maker Checker (or 4-eye) functionality\n      summary: List Maker Checker Entries\n      description: |-\n        Get a list of entries that can be checked by the requestor that match the criteria supplied.\n\n        Example Requests:\n\n        makercheckers\n\n        makercheckers?fields=madeOnDate,maker,processingResult\n\n        makercheckers?makerDateTimeFrom=2013-03-25 08:00:00\u0026makerDateTimeTo=2013-04-04 18:00:00\n\n        makercheckers?officeId=1\n\n        makercheckers?officeId=1\u0026includeJson=true\n      operationId: retrieveCommands\n      parameters:\n      - name: actionName\n        in: query\n        description: actionName\n        schema:\n          type: string\n      - name: entityName\n        in: query\n        description: entityName\n        schema:\n          type: string\n      - name: resourceId\n        in: query\n        description: resourceId\n        schema:\n          type: integer\n          format: int64\n      - name: makerId\n        in: query\n        description: makerId\n        schema:\n          type: integer\n          format: int64\n      - name: makerDateTimeFrom\n        in: query\n        description: makerDateTimeFrom\n        schema:\n          type: string\n      - name: makerDateTimeTo\n        in: query\n        description: makerDateTimeTo\n        schema:\n          type: string\n      - name: officeId\n        in: query\n        description: officeId\n        schema:\n          type: integer\n          format: int32\n      - name: groupId\n        in: query\n        description: groupId\n        schema:\n          type: integer\n          format: int32\n      - name: clientId\n        in: query\n        description: clientId\n        schema:\n          type: integer\n          format: int32\n      - name: loanid\n        in: query\n        description: loanid\n        schema:\n          type: integer\n          format: int32\n      - name: savingsAccountId\n        in: query\n        description: savingsAccountId\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetMakerCheckerResponse'\n  /makercheckers/{auditId}:\n    post:\n      tags:\n      - Maker Checker (or 4-eye) functionality\n      summary: Approve Maker Checker Entry | Reject Maker Checker Entry\n      operationId: approveMakerCheckerEntry\n      parameters:\n      - name: auditId\n        in: path\n        description: auditId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        description: command\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostMakerCheckersResponse'\n    delete:\n      tags:\n      - Maker Checker (or 4-eye) functionality\n      summary: Delete Maker Checker Entry\n      operationId: deleteMakerCheckerEntry\n      parameters:\n      - name: auditId\n        in: path\n        description: auditId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostMakerCheckersResponse'\n  /accountnumberformats:\n    get:\n      tags:\n      - Account number format\n      summary: List Account number formats\n      description: |-\n        Example Requests:\n\n        accountnumberformats\n\n\n        accountnumberformats?fields=accountType,prefixType\n      operationId: retrieveAllGetNumberFormats\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'\n    post:\n      tags:\n      - Account number format\n      summary: Create an Account number format\n      description: |-\n        Note: You may associate a single Account number format for a given account type\n        Mandatory Fields for Account number formats\n        accountType\n      operationId: create\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostAccountNumberFormatsRequest'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostAccountNumberFormatsResponse'\n      x-codegen-request-body-name: body\n  /accountnumberformats/{accountNumberFormatId}:\n    get:\n      tags:\n      - Account number format\n      summary: Retrieve an Account number format\n      description: |-\n        Example Requests:\n\n        accountnumberformats/1\n\n\n        accountnumberformats/1?template=true\n\n\n        accountnumberformats/1?fields=accountType,prefixType\n      operationId: retrieveOne\n      parameters:\n      - name: accountNumberFormatId\n        in: path\n        description: accountNumberFormatId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'\n    put:\n      tags:\n      - Account number format\n      summary: Update an Account number format\n      operationId: update\n      parameters:\n      - name: accountNumberFormatId\n        in: path\n        description: accountNumberFormatId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutAccountNumberFormatsRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutAccountNumberFormatsResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Account number format\n      summary: Delete an Account number format\n      description: 'Note: Account numbers created while this format was active would\n        remain unchanged.'\n      operationId: delete\n      parameters:\n      - name: accountNumberFormatId\n        in: path\n        description: accountNumberFormatId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAccountNumberFormatsResponse'\n  /accountnumberformats/template:\n    get:\n      tags:\n      - Account number format\n      summary: Retrieve Account number format Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n        Field Defaults\n        Allowed Value Lists\n\n        Example Request:\n\n        accountnumberformats/template\n      operationId: retrieveTemplateGetFormat\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccountNumberFormatsResponseTemplate'\n  /caches:\n    get:\n      tags:\n      - Cache\n      summary: Retrieve Cache Types\n      description: |-\n        Returns the list of caches.\n\n        Example Requests:\n\n        caches\n      operationId: retrieveAllCaches\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetCachesResponse'\n    put:\n      tags:\n      - Cache\n      summary: Switch Cache\n      description: Switches the cache to chosen one.\n      operationId: switchCache\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutCachesRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutCachesResponse'\n      x-codegen-request-body-name: body\n  /smscampaigns:\n    get:\n      tags:\n      - SMS Campaigns\n      summary: List SMS Campaigns\n      description: |-\n        Example Requests:\n\n        smscampaigns\n      operationId: retrieveAllCampaigns\n      parameters:\n      - name: sqlSearch\n        in: query\n        schema:\n          type: string\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    post:\n      tags:\n      - SMS Campaigns\n      summary: Create a SMS Campaign\n      description: |-\n        Mandatory Fields\n        campaignName, campaignType, triggerType, providerId, runReportId, message\n\n        Mandatory Fields for Cash based on selected report id\n        paramValue in json format\n      operationId: createCampaign\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommandWrapper'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /smscampaigns/{resourceId}:\n    get:\n      tags:\n      - SMS Campaigns\n      summary: Retrieve a SMS Campaign\n      description: |\n        Example Requests:\n\n        smscampaigns/1\n      operationId: retrieveCampaign\n      parameters:\n      - name: resourceId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /smscampaigns/{campaignId}:\n    put:\n      tags:\n      - SMS Campaigns\n      summary: Update a Campaign\n      operationId: updateCampaign\n      parameters:\n      - name: campaignId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommandWrapper'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n    post:\n      tags:\n      - SMS Campaigns\n      summary: SMS Campaign\n      description: Activates | Deactivates | Reactivates\n      operationId: handleCommands\n      parameters:\n      - name: campaignId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    delete:\n      tags:\n      - SMS Campaigns\n      summary: Delete a SMS Campaign\n      description: 'Note: Only closed SMS Campaigns can be deleted'\n      operationId: deleteSMS\n      parameters:\n      - name: campaignId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            '*/*':\n              schema:\n                type: string\n  /smscampaigns/template:\n    get:\n      tags:\n      - SMS Campaigns\n      summary: Retrieve a SMS Campaign\n      description: |-\n        Example Requests:\n\n        smscampaigns/1\n\n\n        smscampaigns/1?template=true\n\n\n        smscampaigns/template\n      operationId: template\n      responses:\n        200:\n          description: successful operation\n          content:\n            '*/*':\n              schema:\n                type: string\n  /smscampaigns/preview:\n    post:\n      tags:\n      - SMS Campaigns\n      operationId: preview\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /codes/{codeId}/codevalues:\n    get:\n      tags:\n      - Code Values\n      summary: List Code Values\n      description: |-\n        Returns the list of Code Values for a given Code\n\n        Example Requests:\n\n        codes/1/codevalues\n      operationId: retrieveAllCodeValues\n      parameters:\n      - name: codeId\n        in: path\n        description: codeId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: A List of Given response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetCodeValuesDataResponse'\n    post:\n      tags:\n      - Code Values\n      summary: Create a Code Value\n      operationId: createCodeValue\n      parameters:\n      - name: codeId\n        in: path\n        description: codeId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostCodeValuesDataRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostCodeValueDataResponse'\n      x-codegen-request-body-name: body\n  /codes/{codeId}:\n    get:\n      tags:\n      - Codes\n      summary: Retrieve a Code\n      description: |-\n        Returns the details of a Code.\n\n        Example Requests:\n\n        codes/1\n      operationId: retrieveCode\n      parameters:\n      - name: codeId\n        in: path\n        description: codeId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetCodesResponse'\n    put:\n      tags:\n      - Codes\n      summary: Update a Code\n      description: Updates the details of a code if it is not system defined.\n      operationId: updateCode\n      parameters:\n      - name: codeId\n        in: path\n        description: codeId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutCodesRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutCodesResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Codes\n      summary: Delete a Code\n      description: Deletes a code if it is not system defined.\n      operationId: deleteCode\n      parameters:\n      - name: codeId\n        in: path\n        description: codeId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteCodesResponse'\n  /externalservice/{servicename}:\n    get:\n      tags:\n      - External Services\n      summary: Retrieve External Services Configuration\n      description: |-\n        Returns a external Service configurations based on the Service Name.\n\n        Service Names supported are S3 and SMTP.\n\n        Example Requests:\n\n        externalservice/SMTP\n      operationId: retrieveOneSMS\n      parameters:\n      - name: servicename\n        in: path\n        description: servicename\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExternalServicesPropertiesData'\n    put:\n      tags:\n      - External Services\n      summary: Update External Service\n      description: \"Updates the external Service Configuration for a Service Name.\\n\\\n        \\nExample: \\n\\nexternalservice/S3\"\n      operationId: updateExternalServiceProperties\n      parameters:\n      - name: servicename\n        in: path\n        description: servicename\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutExternalServiceRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content: {}\n      x-codegen-request-body-name: body\n  /configurations:\n    get:\n      tags:\n      - Global Configuration\n      summary: Retrieve Global Configuration | Retrieve Global Configuration for surveys\n      description: |-\n        Returns the list global enable/disable configurations.\n\n        Example Requests:\n\n        configurations\n\n\n        Returns the list global enable/disable survey configurations.\n\n        Example Requests:\n\n        configurations/survey\n      operationId: retrieveConfiguration\n      parameters:\n      - name: survey\n        in: query\n        description: survey\n        schema:\n          type: boolean\n          default: false\n      responses:\n        200:\n          description: \"List of example \\n response \\nsurveys response   \\ngiven below\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetGlobalConfigurationsResponse'\n  /configurations/{configId}:\n    get:\n      tags:\n      - Global Configuration\n      summary: Retrieve Global Configuration\n      description: |-\n        Returns a global enable/disable configurations.\n\n        Example Requests:\n\n        configurations/1\n      operationId: retrieveOneConf\n      parameters:\n      - name: configId\n        in: path\n        description: configId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetGlobalConfigurationsResponse'\n    put:\n      tags:\n      - Global Configuration\n      summary: Update Global Configuration\n      description: Updates an enable/disable global configuration item.\n      operationId: updateConfiguration\n      parameters:\n      - name: configId\n        in: path\n        description: configId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutGlobalConfigurationsRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutGlobalConfigurationsResponse'\n      x-codegen-request-body-name: body\n  /CreditBureauConfiguration/organisationCreditBureau:\n    get:\n      tags:\n      - CreditBureau Configuration\n      operationId: getOrganisationCreditBureau\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    put:\n      tags:\n      - CreditBureau Configuration\n      operationId: updateCreditBureau\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /CreditBureauConfiguration/loanProduct:\n    get:\n      tags:\n      - CreditBureau Configuration\n      operationId: fetchLoanProducts\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /CreditBureauConfiguration/mappings:\n    get:\n      tags:\n      - CreditBureau Configuration\n      operationId: getCreditBureauLoanProductMapping\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    put:\n      tags:\n      - CreditBureau Configuration\n      operationId: updateCreditBureauLoanProductMapping\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /CreditBureauConfiguration/organisationCreditBureau/{organisationCreditBureauId}:\n    post:\n      tags:\n      - CreditBureau Configuration\n      operationId: addOrganisationCreditBureau\n      parameters:\n      - name: organisationCreditBureauId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /CreditBureauConfiguration/mappings/{CreditBureauId}:\n    post:\n      tags:\n      - CreditBureau Configuration\n      operationId: createCreditBureauLoanProductMapping\n      parameters:\n      - name: CreditBureauId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /CreditBureauConfiguration/config/{organisationCreditBureauId}:\n    get:\n      tags:\n      - CreditBureau Configuration\n      operationId: getConfiguration\n      parameters:\n      - name: organisationCreditBureauId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /CreditBureauConfiguration:\n    get:\n      tags:\n      - CreditBureau Configuration\n      operationId: getCreditBureau\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /datatables/{datatableName}:\n    put:\n      tags:\n      - Data Tables\n      summary: Update Data Table\n      description: Modifies fields of a data table. If the apptableName parameter\n        is passed, data table is deregistered and registered with the new application\n        table.\n      operationId: updateDatatable\n      parameters:\n      - name: datatableName\n        in: path\n        description: datatableName\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutDataTablesRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutDataTablesResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Data Tables\n      summary: Delete Data Table\n      description: Deletes a data table and deregisters it from the Apache Fineract\n        Core application table.\n      operationId: deleteDatatable\n      parameters:\n      - name: datatableName\n        in: path\n        description: datatableName\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDataTablesResponse'\n  /datatables:\n    get:\n      tags:\n      - Data Tables\n      summary: List Data Tables\n      description: |-\n        Lists registered data tables and the Apache Fineract Core application table they are registered to.\n\n        ARGUMENTS\n\n        apptable  - optional\n        The Apache Fineract core application table.\n\n        Example Requests:\n\n        datatables?apptable=m_client\n\n\n        datatables\n      operationId: getDatatables\n      parameters:\n      - name: apptable\n        in: query\n        description: apptable\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetDataTablesResponse'\n    post:\n      tags:\n      - Data Tables\n      summary: Create Data Table\n      description: \"Create a new data table and registers it with the Apache Fineract\\\n        \\ Core application table.\\n\\nField Descriptions\\n\\nMandatory - datatableName\\\n        \\ : \\n\\nThe name of the Data Table.\\n\\nMandatory - apptableName\\n\\nApplication\\\n        \\ table name. Must be one of the following:\\n\\nm_client\\n\\nm_group\\n\\nm_loan\\n\\\n        \\nm_office\\n\\nm_saving_account\\n\\nm_product_loan\\n\\nm_savings_product\\n\\n\\\n        Mandatory - columns  \\nAn array of columns in the new Data Table.\\n\\nOptional\\\n        \\ - multiRow\\n\\nAllows to create multiple entries in the Data Table. Optional,\\\n        \\ defaults to false. If this property is not provided Data Table will allow\\\n        \\ only one entry.\\n\\nField Descriptions - columns\\n\\nMandatory - name\\n\\n\\\n        Name of the created column. Can contain only alphanumeric characters, underscores\\\n        \\ and spaces, but cannot start with a number. Cannot start or end with an\\\n        \\ underscore or space.\\n\\nMandatory - type\\n\\nColumn type. Must be one of\\\n        \\ the following:\\n\\nBoolean\\n\\nDate\\n\\nDateTime\\n\\nDecimal\\n\\nDropdown\\n\\n\\\n        \\nNumber\\n\\nString\\n\\nText\\n\\nMandatory [type = Dropdown] - code\\n\\nUsed in\\\n        \\ Code Value fields. Column name becomes: code_cd_name. Mandatory if using\\\n        \\ type Dropdown, otherwise an error is returned.\\n\\nOptional - mandatory\\n\\\n        \\nDetermines whether this column must have a value in every entry. Optional,\\\n        \\ defaults to false.\\n\\nMandatory [type = String] - length\\n\\nLength of the\\\n        \\ text field. Mandatory if type String is used, otherwise an error is returned.\"\n      operationId: createDatatable\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostDataTablesRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostDataTablesResponse'\n      x-codegen-request-body-name: body\n  /datatables/register/{datatable}/{apptable}:\n    post:\n      tags:\n      - Data Tables\n      summary: Register Data Table\n      description: Registers a data table with the Apache Fineract Core application\n        table. This allows the data table to be maintained through the API. In case\n        the datatable is a PPI (survey table), a parameter category should be pass\n        along with the request. The API currently support one category (200)\n      operationId: registerDatatable\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema:\n          type: string\n      - name: apptable\n        in: path\n        description: apptable\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostDataTablesRegisterDatatableAppTable'\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutDataTablesResponse'\n      x-codegen-request-body-name: body\n  /datatables/deregister/{datatable}:\n    post:\n      tags:\n      - Data Tables\n      summary: Deregister Data Table\n      description: Deregisters a data table. It will no longer be available through\n        the API.\n      operationId: deregisterDatatable\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutDataTablesResponse'\n  /datatables/{datatable}:\n    get:\n      tags:\n      - Data Tables\n      summary: Retrieve Data Table Details\n      description: Lists a registered data table details and the Apache Fineract Core\n        application table they are registered to.\n      operationId: getDatatable\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDataTablesResponse'\n  /datatables/{datatable}/{apptableId}:\n    get:\n      tags:\n      - Data Tables\n      summary: Retrieve Entry(s) from Data Table\n      description: \"Gets the entry (if it exists) for data tables that are one to\\\n        \\ one with the application table. \\nGets the entries (if they exist) for data\\\n        \\ tables that are one to many with the application table.\\n\\nNote: The 'fields'\\\n        \\ parameter is not available for datatables.\\n\\nARGUMENTS\\norderoptional Specifies\\\n        \\ the order in which data is returned.genericResultSetoptional, defaults to\\\n        \\ false If 'true' an optimised JSON format is returned suitable for tabular\\\n        \\ display of data. This format is used by the default data tables UI functionality.\\n\\\n        Example Requests:\\n\\ndatatables/extra_client_details/1\\n\\n\\ndatatables/extra_family_details/1?order=`Date\\\n        \\ of Birth` desc\\n\\n\\ndatatables/extra_client_details/1?genericResultSet=true\"\n      operationId: getDatatableGet\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema:\n          type: string\n      - name: apptableId\n        in: path\n        description: apptableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: order\n        in: query\n        description: order\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDataTablesAppTableIdResponse'\n    put:\n      tags:\n      - Data Tables\n      summary: Update Entry in Data Table (One to One)\n      description: Updates the row (if it exists) of the data table.\n      operationId: updateDatatableEntryOnetoOne\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema:\n          type: string\n      - name: apptableId\n        in: path\n        description: apptableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutDataTablesAppTableIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutDataTablesAppTableIdResponse'\n      x-codegen-request-body-name: body\n    post:\n      tags:\n      - Data Tables\n      summary: Create Entry in Data Table\n      description: |-\n        Adds a row to the data table.\n\n        Note that the default datatable UI functionality converts any field name containing spaces to underscores when using the API. This means the field name \"Business Description\" is considered the same as \"Business_Description\". So you shouldn't have both \"versions\" in any data table.\n      operationId: createDatatableEntry\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema:\n          type: string\n      - name: apptableId\n        in: path\n        description: apptableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostDataTablesAppTableIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostDataTablesAppTableIdResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Data Tables\n      summary: Delete Entry(s) in Data Table\n      description: \"Deletes the entry (if it exists) for data tables that are one-to-one\\\n        \\ with the application table. \\nDeletes the entries (if they exist) for data\\\n        \\ tables that are one-to-many with the application table.\"\n      operationId: deleteDatatableEntries\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema:\n          type: string\n      - name: apptableId\n        in: path\n        description: apptableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdResponse'\n  /datatables/{datatable}/{apptableId}/{datatableId}:\n    get:\n      tags:\n      - Data Tables\n      operationId: getDatatableManyEntry\n      parameters:\n      - name: datatable\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: apptableId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: datatableId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: order\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    put:\n      tags:\n      - Data Tables\n      summary: Update Entry in Data Table (One to Many)\n      description: Updates the row (if it exists) of the data table.\n      operationId: updateDatatableEntryOneToMany\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema:\n          type: string\n      - name: apptableId\n        in: path\n        description: apptableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: datatableId\n        in: path\n        description: datatableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Data Tables\n      summary: Delete Entry in Datatable (One to Many)\n      description: |+\n        Deletes the entry (if it exists) for data tables that are one to many with the application table.\n\n      operationId: deleteDatatableEntriesDel\n      parameters:\n      - name: datatable\n        in: path\n        description: datatable\n        required: true\n        schema: {}\n        example: '{}'\n      - name: apptableId\n        in: path\n        description: apptableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: datatableId\n        in: path\n        description: datatableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdDatatableIdResponse'\n  /entityDatatableChecks:\n    get:\n      tags:\n      - Entity-Datatable Checks\n      summary: List Entity-Datatable Checks\n      description: |-\n        The list capability of Entity-Datatable Checks can support pagination.\n\n        OPTIONAL ARGUMENTS\n        offset Integer optional, defaults to 0 Indicates the result from which pagination startslimit Integer optional, defaults to 200 Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit=0, or limit=-1\n        Example Request:\n\n        entityDatatableChecks?offset=0\u0026limit=15\n      operationId: retrieveAllChecks\n      parameters:\n      - name: status\n        in: query\n        description: status\n        schema:\n          type: integer\n          format: int64\n      - name: entity\n        in: query\n        description: entity\n        schema:\n          type: string\n      - name: productId\n        in: query\n        description: productId\n        schema:\n          type: integer\n          format: int64\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetEntityDatatableChecksResponse'\n    post:\n      tags:\n      - Entity-Datatable Checks\n      summary: Create Entity-Datatable Checks\n      description: \"Mandatory Fields : \\nentity, status, datatableName\\n\\nNon-Mandatory\\\n        \\ Fields : \\nproductId\"\n      operationId: createEntityDatatableCheck\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostEntityDatatableChecksTemplateRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostEntityDatatableChecksTemplateResponse'\n      x-codegen-request-body-name: body\n  /entityDatatableChecks/template:\n    get:\n      tags:\n      - Entity-Datatable Checks\n      summary: Retrieve Entity-Datatable Checks Template\n      description: |-\n        This is a convenience resource useful for building maintenance user interface screens for Entity-Datatable Checks applications. The template data returned consists of:\n\n        Allowed Value Lists\n        Example Request:\n\n        entityDatatableChecks/template\n      operationId: getTemplate\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetEntityDatatableChecksTemplateResponse'\n  /reports/{id}:\n    get:\n      tags:\n      - Reports\n      summary: |\n        Retrieve a Report\n      description: |-\n        Example Requests:\n\n        reports/1\n\n\n        reports/1?template=true\n      operationId: retrieveReport\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetReportsResponse'\n    put:\n      tags:\n      - Reports\n      summary: Update a Report\n      description: Only the useReport value can be updated for core reports.\n      operationId: updateReport\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutReportRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutReportResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Reports\n      summary: Delete a Report\n      description: Only non-core reports can be deleted.\n      operationId: deleteReport\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteReportsResponse'\n  /reports:\n    get:\n      tags:\n      - Reports\n      summary: List Reports\n      description: |-\n        Lists all reports and their parameters.\n\n        Example Request:\n\n        reports\n      operationId: retrieveReportList\n      responses:\n        200:\n          description: \"\"\n          content: {}\n    post:\n      tags:\n      - Reports\n      summary: Create a Report\n      operationId: createReport\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostRepostRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostReportsResponse'\n      x-codegen-request-body-name: body\n  /reports/template:\n    get:\n      tags:\n      - Reports\n      summary: Retrieve Report Template\n      description: \"This is a convenience resource. It can be useful when building\\\n        \\ maintenance user interface screens for client applications. The template\\\n        \\ data returned consists of any or all of:\\n\\nField Defaults\\nAllowed Value\\\n        \\ Lists\\n\\nExample Request : \\n\\nreports/template\"\n      operationId: retrieveOfficeTemplate\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetReportsTemplateResponse'\n  /runreports/{reportName}:\n    get:\n      tags:\n      - Run Reports\n      summary: Running a Report\n      description: |-\n        This resource allows you to run and receive output from pre-defined Apache Fineract reports.\n\n        Reports can also be used to provide data for searching and workflow functionality.\n\n        The default output is a JSON formatted \"Generic Resultset\". The Generic Resultset contains Column Heading as well as Data information. However, you can export to CSV format by simply adding \"\u0026exportCSV=true\" to the end of your URL.\n\n        If Pentaho reports have been pre-defined, they can also be run through this resource. Pentaho reports can return HTML, PDF or CSV formats.\n\n        The Apache Fineract reference application uses a JQuery plugin called stretchy reporting which, itself, uses this reports resource to provide a pretty flexible reporting User Interface (UI).\n\n\n\n        Example Requests:\n\n        runreports/Client%20Listing?R_officeId=1\n\n\n        runreports/Client%20Listing?R_officeId=1\u0026exportCSV=true\n\n\n        runreports/OfficeIdSelectOne?R_officeId=1\u0026parameterType=true\n\n\n        runreports/OfficeIdSelectOne?R_officeId=1\u0026parameterType=true\u0026exportCSV=true\n\n\n        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30\u0026R_loanOfficerId=-1\u0026R_officeId=1\u0026R_startDate=2013-04-16\u0026output-type=HTML\u0026R_officeId=1\n\n\n        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30\u0026R_loanOfficerId=-1\u0026R_officeId=1\u0026R_startDate=2013-04-16\u0026output-type=XLS\u0026R_officeId=1\n\n\n        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30\u0026R_loanOfficerId=-1\u0026R_officeId=1\u0026R_startDate=2013-04-16\u0026output-type=CSV\u0026R_officeId=1\n\n\n        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30\u0026R_loanOfficerId=-1\u0026R_officeId=1\u0026R_startDate=2013-04-16\u0026output-type=PDF\u0026R_officeId=1\n      operationId: runReport\n      parameters:\n      - name: reportName\n        in: path\n        description: reportName\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetReportNameResponse'\n            text/csv:\n              schema:\n                $ref: '#/components/schemas/GetReportNameResponse'\n            application/vnd.ms-excel:\n              schema:\n                $ref: '#/components/schemas/GetReportNameResponse'\n            application/pdf:\n              schema:\n                $ref: '#/components/schemas/GetReportNameResponse'\n            text/html:\n              schema:\n                $ref: '#/components/schemas/GetReportNameResponse'\n  /{entityType}/{entityId}/documents:\n    get:\n      tags:\n      - Documents\n      summary: List documents\n      description: |-\n        Example Requests:\n\n        clients/1/documents\n\n        client_identifiers/1/documents\n\n        loans/1/documents?fields=name,description\n      operationId: retreiveAllDocuments\n      parameters:\n      - name: entityType\n        in: path\n        description: entityType\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        description: entityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'\n    post:\n      tags:\n      - Documents\n      summary: Create a Document\n      description: \"Note: A document is created using a Multi-part form upload \\n\\n\\\n        Body Parts\\n\\nname : \\nName or summary of the document\\n\\ndescription : \\n\\\n        Description of the document\\n\\nfile : \\nThe file to be uploaded\\n\\nMandatory\\\n        \\ Fields : \\nfile and description\"\n      operationId: createDocument\n      parameters:\n      - name: entityType\n        in: path\n        description: entityType\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        description: entityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: Content-Length\n        in: header\n        description: Content-Length\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  type: string\n                  description: file\n                  format: binary\n                name:\n                  type: string\n                  description: name\n                description:\n                  type: string\n                  description: description\n      responses:\n        200:\n          description: Not Shown (multi-part form data)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostEntityTypeEntityIdDocumentsResponse'\n  /{entityType}/{entityId}/documents/{documentId}:\n    get:\n      tags:\n      - Documents\n      summary: Retrieve a Document\n      description: |-\n        Example Requests:\n\n        clients/1/documents/1\n\n\n        loans/1/documents/1\n\n\n        client_identifiers/1/documents/1?fields=name,description\n      operationId: getDocument\n      parameters:\n      - name: entityType\n        in: path\n        description: entityType\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        description: entityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: documentId\n        in: path\n        description: documentId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'\n    put:\n      tags:\n      - Documents\n      summary: Update a Document\n      description: \"Note: A document is updated using a Multi-part form upload \\n\\\n        Body Parts\\nname\\nName or summary of the document\\ndescription\\nDescription\\\n        \\ of the document\\nfile\\nThe file to be uploaded\"\n      operationId: updateDocument\n      parameters:\n      - name: entityType\n        in: path\n        description: entityType\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        description: entityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: documentId\n        in: path\n        description: documentId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: Content-Length\n        in: header\n        description: Content-Length\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  type: string\n                  description: file\n                  format: binary\n                name:\n                  type: string\n                  description: name\n                description:\n                  type: string\n                  description: description\n      responses:\n        200:\n          description: Not Shown (multi-part form data)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponse'\n    delete:\n      tags:\n      - Documents\n      summary: Remove a Document\n      operationId: deleteDocument\n      parameters:\n      - name: entityType\n        in: path\n        description: entityType\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        description: entityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: documentId\n        in: path\n        description: documentId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteEntityTypeEntityIdDocumentsResponse'\n  /{entityType}/{entityId}/documents/{documentId}/attachment:\n    get:\n      tags:\n      - Documents\n      summary: Retrieve Binary File associated with Document\n      description: |-\n        Request used to download the file associated with the document\n\n        Example Requests:\n\n        clients/1/documents/1/attachment\n\n\n        loans/1/documents/1/attachment\n      operationId: downloadFile\n      parameters:\n      - name: entityType\n        in: path\n        description: entityType\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        description: entityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: documentId\n        in: path\n        description: documentId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: 'Not Shown: The corresponding Binary file'\n          content: {}\n  /{entity}/{entityId}/images:\n    get:\n      tags:\n      - DomainNameapiv1{entity}{entityId}images\n      operationId: downloadClientImage\n      parameters:\n      - name: entity\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: maxWidth\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: maxHeight\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: output\n        in: query\n        schema:\n          type: string\n      responses:\n        default:\n          description: successful operation\n          content: {}\n    put:\n      tags:\n      - DomainNameapiv1{entity}{entityId}images\n      operationId: updateClientImage\n      parameters:\n      - name: entity\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: Content-Length\n        in: header\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    post:\n      tags:\n      - DomainNameapiv1{entity}{entityId}images\n      operationId: addNewClientImage\n      parameters:\n      - name: entity\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n          text/html:\n            schema:\n              type: string\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - DomainNameapiv1{entity}{entityId}images\n      operationId: deleteClientImage\n      parameters:\n      - name: entity\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: entityId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /entitytoentitymapping/{mapId}/{fromId}/{toId}:\n    get:\n      tags:\n      - DomainNameapiv1entitytoentitymapping\n      operationId: getEntityToEntityMappings\n      parameters:\n      - name: mapId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: fromId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: toId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /entitytoentitymapping/{mapId}:\n    get:\n      tags:\n      - DomainNameapiv1entitytoentitymapping\n      operationId: retrieveOneMapping\n      parameters:\n      - name: mapId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    put:\n      tags:\n      - DomainNameapiv1entitytoentitymapping\n      operationId: updateMap\n      parameters:\n      - name: mapId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - DomainNameapiv1entitytoentitymapping\n      operationId: deleteMapping\n      parameters:\n      - name: mapId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /entitytoentitymapping:\n    get:\n      tags:\n      - DomainNameapiv1entitytoentitymapping\n      operationId: retrieveAllEntityMapping\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /entitytoentitymapping/{relId}:\n    post:\n      tags:\n      - DomainNameapiv1entitytoentitymapping\n      operationId: createMap\n      parameters:\n      - name: relId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /hooks:\n    get:\n      tags:\n      - Hooks\n      summary: Retrieve Hooks\n      description: |-\n        Returns the list of hooks.\n\n        Example Requests:\n\n        hooks\n      operationId: retrieveHooks\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetHookResponse'\n    post:\n      tags:\n      - Hooks\n      summary: Create a Hook\n      description: |-\n        The following parameters can be passed for the creation of a hook :-\n\n        name - string - Required. The name of the template that is being called. (See /hooks/template for the list of valid hook names.)\n\n        isActive - boolean - Determines whether the hook is actually triggered.\n\n        events - array - Determines what events the hook is triggered for.\n\n        config - hash - Required. Key/value pairs to provide settings for this hook. These settings vary between the templates.\n\n        templateId - Optional. The UGD template ID associated with the same entity (client or loan).\n      operationId: createHook\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostHookRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostHookResponse'\n      x-codegen-request-body-name: body\n  /hooks/{hookId}:\n    get:\n      tags:\n      - Hooks\n      summary: Retrieve a Hook\n      description: |-\n        Returns the details of a Hook.\n\n        Example Requests:\n\n        hooks/1\n      operationId: retrieveHook\n      parameters:\n      - name: hookId\n        in: path\n        description: hookId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetHookResponse'\n    put:\n      tags:\n      - Hooks\n      summary: Update a Hook\n      description: Updates the details of a hook.\n      operationId: updateHook\n      parameters:\n      - name: hookId\n        in: path\n        description: hookId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutHookRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutHookResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Hooks\n      summary: Delete a Hook\n      description: Deletes a hook.\n      operationId: deleteHook\n      parameters:\n      - name: hookId\n        in: path\n        description: hookId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteHookResponse'\n  /hooks/template:\n    get:\n      tags:\n      - Hooks\n      summary: Retrieve Hooks Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n        Field Defaults\n        Allowed Value Lists\n        Example Request:\n\n        hooks/template\n      operationId: templateGetAll\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetHookTemplateResponse'\n  /scheduler:\n    get:\n      tags:\n      - Scheduler\n      summary: Retrieve Scheduler Status\n      description: |-\n        Returns the scheduler status.\n\n        Example Requests:\n\n        scheduler\n      operationId: retrieveStatus\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSchedulerResponse'\n    post:\n      tags:\n      - Scheduler\n      summary: Activate Scheduler Jobs | Suspend Scheduler Jobs\n      description: Activates the scheduler job service. | Suspends the scheduler job\n        service.\n      operationId: changeSchedulerStatus\n      parameters:\n      - name: command\n        in: query\n        description: command\n        schema:\n          type: string\n      responses:\n        200:\n          description: |-\n            POST :  scheduler?command=start\n\n\n            POST : scheduler?command=stop\n          content: {}\n  /jobs/{jobId}/runhistory:\n    get:\n      tags:\n      - MIFOSX-BATCH JOBS\n      summary: Retrieve Job Run History\n      description: |-\n        Example Requests:\n\n        jobs/5/runhistory?offset=0\u0026limit=200\n      operationId: retrieveHistory\n      parameters:\n      - name: jobId\n        in: path\n        description: jobId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        description: orderBy\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: sortOrder\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetJobsJobIDJobRunHistoryResponse'\n  /jobs/{jobId}:\n    get:\n      tags:\n      - MIFOSX-BATCH JOBS\n      summary: Retrieve a Job\n      description: |-\n        Returns the details of a Job.\n\n        Example Requests:\n\n        jobs/5\n      operationId: retrieveOneJob\n      parameters:\n      - name: jobId\n        in: path\n        description: jobId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetJobsResponse'\n    put:\n      tags:\n      - MIFOSX-BATCH JOBS\n      summary: Update a Job\n      description: Updates the details of a job.\n      operationId: updateJobDetail\n      parameters:\n      - name: jobId\n        in: path\n        description: jobId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutJobsJobsIDRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content: {}\n      x-codegen-request-body-name: body\n    post:\n      tags:\n      - MIFOSX-BATCH JOBS\n      summary: Run a Job\n      description: Manually Execute Specific Job.\n      operationId: executeJob\n      parameters:\n      - name: jobId\n        in: path\n        description: jobId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        description: command\n        schema:\n          type: string\n      responses:\n        200:\n          description: 'POST: jobs/1?command=executeJob'\n          content: {}\n  /jobs:\n    get:\n      tags:\n      - MIFOSX-BATCH JOBS\n      summary: Retrieve Scheduler Jobs\n      description: |-\n        Returns the list of jobs.\n\n        Example Requests:\n\n        jobs\n      operationId: retrieveAllJobs\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetJobsResponse'\n  /reportmailingjobs:\n    get:\n      tags:\n      - Report Mailing Jobs\n      summary: List Report Mailing Jobs\n      description: |-\n        Example Requests:\n\n        reportmailingjobs\n      operationId: retrieveAllReportMailingJobs\n      parameters:\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        description: orderBy\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: sortOrder\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetReportMailingJobsResponse'\n    post:\n      tags:\n      - Report Mailing Jobs\n      summary: Create a Report Mailing Job\n      description: |-\n        Mandatory Fields: name, startDateTime, stretchyReportId, emailRecipients, emailSubject, emailMessage, emailAttachmentFileFormatId, recurrence, isActive\n\n        Optional Fields: description, stretchyReportParamMap\n      operationId: createReportMailingJob\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostReportMailingJobsRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostReportMailingJobsResponse'\n      x-codegen-request-body-name: body\n  /reportmailingjobs/{entityId}:\n    get:\n      tags:\n      - Report Mailing Jobs\n      summary: Retrieve a Report Mailing Job\n      description: |-\n        Example Requests:\n\n        reportmailingjobs/1\n\n\n        reportmailingjobs/1?template=true\n      operationId: retrieveReportMailingJob\n      parameters:\n      - name: entityId\n        in: path\n        description: entityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetReportMailingJobsResponse'\n    put:\n      tags:\n      - Report Mailing Jobs\n      summary: |\n        Update a Report Mailing Job\n      operationId: updateReportMailingJob\n      parameters:\n      - name: entityId\n        in: path\n        description: entityId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutReportMailingJobsRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutReportMailingJobsResponse'\n      x-codegen-request-body-name: body\n  /reportmailingjobs/template:\n    get:\n      tags:\n      - Report Mailing Jobs\n      summary: Retrieve Report Mailing Job Details Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for report mailing job applications. The template data returned consists of any or all of:\n\n        Field Defaults\n        Allowed Value Lists\n        Example Request:\n\n        reportmailingjobs/template\n      operationId: retrieveReportMailingJobTemplate\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetReportMailingJobsTemplate'\n  /reportmailingjobrunhistory:\n    get:\n      tags:\n      - List Report Mailing Job History\n      summary: List Report Mailing Job History\n      description: |-\n        The list capability of report mailing job history can support pagination and sorting.\n\n        Example Requests:\n\n        reportmailingjobrunhistory/1\n      operationId: retrieveAllByReportMailingJobId\n      parameters:\n      - name: reportMailingJobId\n        in: query\n        description: reportMailingJobId\n        schema:\n          type: integer\n          format: int64\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        description: orderBy\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: sortOrder\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportMailingJobRunHistoryData'\n  /authentication:\n    post:\n      tags:\n      - Authentication HTTP Basic\n      summary: Verify authentication\n      description: Authenticates the credentials provided and returns the set roles\n        and permissions allowed.\n      operationId: authenticate\n      parameters:\n      - name: username\n        in: query\n        description: username\n        schema:\n          type: string\n      - name: password\n        in: query\n        description: password\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostAuthenticationResponse'\n        400:\n          description: Unauthenticated. Please login\n          content: {}\n  /userdetails:\n    get:\n      tags:\n      - Fetch authenticated user details\n      summary: |\n        Fetch authenticated user details\n      description: checks the Authentication and returns the set roles and permissions\n        allowed.\n      operationId: fetchAuthenticatedUserData\n      parameters:\n      - name: access_token\n        in: query\n        description: access_token\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUserDetailsResponse'\n  /sms/{campaignId}/messageByStatus:\n    get:\n      tags:\n      - SMS\n      operationId: retrieveAllSmsByStatus\n      parameters:\n      - name: campaignId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: status\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: fromDate\n        in: query\n        schema:\n          type: string\n      - name: toDate\n        in: query\n        schema:\n          type: string\n      - name: locale\n        in: query\n        schema:\n          type: string\n      - name: dateFormat\n        in: query\n        schema:\n          type: string\n      - name: sqlSearch\n        in: query\n        schema:\n          type: string\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /sms:\n    get:\n      tags:\n      - SMS\n      operationId: retrieveAllSMS\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    post:\n      tags:\n      - SMS\n      operationId: createSMS\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /sms/{resourceId}:\n    get:\n      tags:\n      - SMS\n      operationId: retrieveOneSMSID\n      parameters:\n      - name: resourceId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    put:\n      tags:\n      - SMS\n      operationId: updateSMS\n      parameters:\n      - name: resourceId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - SMS\n      operationId: deleteSMSID\n      parameters:\n      - name: resourceId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n\n  /povertyLine/{ppiName}:\n    get:\n      tags:\n      - Poverty Line\n      operationId: retrieveAllpovertyLine\n      parameters:\n      - name: ppiName\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /povertyLine/{ppiName}/{likelihoodId}:\n    get:\n      tags:\n      - Poverty Line\n      operationId: retrieveAllpovertyLineGet\n      parameters:\n      - name: ppiName\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: likelihoodId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /survey/{surveyName}/{apptableId}:\n    post:\n      tags:\n      - Survey\n      summary: Create an entry in the survey table\n      description: \"Insert and entry in a survey table (full fill the survey).\\n\\n\\\n        Refer Link for sample Body:  [ https://demo.openmf.org/api-docs/apiLive.htm#survey_create\\\n        \\ ] \"\n      operationId: createDatatableEntryPost\n      parameters:\n      - name: surveyName\n        in: path\n        description: surveyName\n        required: true\n        schema:\n          type: string\n      - name: apptableId\n        in: path\n        description: apptableId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostSurveySurveyNameApptableIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostSurveySurveyNameApptableIdResponse'\n      x-codegen-request-body-name: body\n  /survey/{surveyName}/{clientId}/{fulfilledId}:\n    delete:\n      tags:\n      - Survey\n      operationId: deleteDatatableEntriesSurvey\n      parameters:\n      - name: surveyName\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: fulfilledId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /survey:\n    get:\n      tags:\n      - Survey\n      summary: Retrieve surveys\n      description: Retrieve surveys. This allows to retrieve the list of survey tables\n        registered .\n      operationId: retrieveSurveys\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetSurveyResponse'\n  /survey/{surveyName}:\n    get:\n      tags:\n      - Survey\n      summary: Retrieve survey\n      description: Lists a registered survey table details and the Apache Fineract\n        Core application table they are registered to.\n      operationId: retrieveSurvey\n      parameters:\n      - name: surveyName\n        in: path\n        description: surveyName\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSurveyResponse'\n  /survey/{surveyName}/{clientId}:\n    get:\n      tags:\n      - Survey\n      operationId: getClientSurveyOverview\n      parameters:\n      - name: surveyName\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /survey/{surveyName}/{clientId}/{entryId}:\n    get:\n      tags:\n      - Survey\n      operationId: getSurveyEntry\n      parameters:\n      - name: surveyName\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: entryId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /survey/register/{surveyName}/{apptable}:\n    put:\n      tags:\n      - Survey\n      operationId: register\n      parameters:\n      - name: surveyName\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: apptable\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /mixreport:\n    get:\n      tags:\n      - Mix Report\n      operationId: retrieveXBRLReport\n      parameters:\n      - name: startDate\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: endDate\n        in: query\n        schema:\n          type: string\n          format: date-time\n      - name: currency\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: string\n  /mixtaxonomy:\n    get:\n      tags:\n      - Mix Taxonomy\n      operationId: retrieveAllMixTaxonomy\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /mixmapping:\n    get:\n      tags:\n      - Mix Mapping\n      operationId: retrieveTaxonomyMapping\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    put:\n      tags:\n      - Mix Mapping\n      operationId: updateTaxonomyMapping\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /holidays/{holidayId}:\n    get:\n      tags:\n      - Holidays\n      summary: Retrieve a Holiday\n      description: |-\n        Example Requests:\n\n        holidays/1\n      operationId: retrieveOneHoliday\n      parameters:\n      - name: holidayId\n        in: path\n        description: holidayId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetHolidaysResponse'\n    put:\n      tags:\n      - Holidays\n      summary: Update a Holiday\n      description: If a holiday is in pending state (created and not activated) then\n        all fields are allowed to modify. Once holidays become active only name and\n        descriptions are allowed to modify.\n      operationId: updateHoliday\n      parameters:\n      - name: holidayId\n        in: path\n        description: holidayId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutHolidaysHolidayIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutHolidaysHolidayIdResponse'\n      x-codegen-request-body-name: body\n    post:\n      tags:\n      - Holidays\n      summary: Activate a Holiday\n      description: |-\n        Always Holidays are created in pending state. This API allows to activate a holiday.\n\n        Only the active holidays are considered for rescheduling the loan repayment.\n      operationId: handleCommandsHoliday\n      parameters:\n      - name: holidayId\n        in: path\n        description: holidayId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        description: command\n        schema:\n          type: string\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostHolidaysHolidayIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostHolidaysHolidayIdResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Holidays\n      summary: Delete a Holiday\n      description: This API allows to delete a holiday. This is a soft delete the\n        deleted holiday status is marked as deleted.\n      operationId: deleteHoliday\n      parameters:\n      - name: holidayId\n        in: path\n        description: holidayId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteHolidaysHolidayIdResponse'\n  /holidays:\n    get:\n      tags:\n      - Holidays\n      summary: List Holidays\n      description: |-\n        Example Requests:\n\n        holidays?officeId=1\n      operationId: retrieveAllHolidays\n      parameters:\n      - name: officeId\n        in: query\n        description: officeId\n        schema:\n          type: integer\n          format: int64\n      - name: fromDate\n        in: query\n        description: fromDate\n        schema:\n          type: string\n      - name: toDate\n        in: query\n        description: toDate\n        schema:\n          type: string\n      - name: locale\n        in: query\n        description: locale\n        schema:\n          type: string\n      - name: dateFormat\n        in: query\n        description: dateFormat\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetHolidaysResponse'\n    post:\n      tags:\n      - Holidays\n      summary: Create a Holiday\n      description: 'Mandatory Fields: name, description, fromDate, toDate, repaymentsRescheduledTo,\n        offices'\n      operationId: createNewHoliday\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostHolidaysRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostHolidaysResponse'\n      x-codegen-request-body-name: body\n  /currencies:\n    get:\n      tags:\n      - Currency\n      summary: Retrieve Currency Configuration\n      description: |-\n        Returns the list of currencies permitted for use AND the list of currencies not selected (but available for selection).\n\n        Example Requests:\n\n        currencies\n\n\n        currencies?fields=selectedCurrencyOptions\n      operationId: retrieveCurrencies\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetCurrenciesResponse'\n    put:\n      tags:\n      - Currency\n      summary: Update Currency Configuration\n      description: Updates the list of currencies permitted for use.\n      operationId: updateCurrencies\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutCurrenciesRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutCurrenciesResponse'\n      x-codegen-request-body-name: body\n  /officetransactions:\n    get:\n      tags:\n      - officetransactions\n      operationId: retrieveOfficeTransactions\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    post:\n      tags:\n      - officetransactions\n      operationId: transferMoneyFrom\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /officetransactions/template:\n    get:\n      tags:\n      - officetransactions\n      operationId: newOfficeTransactionDetails\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /officetransactions/{transactionId}:\n    delete:\n      tags:\n      - officetransactions\n      operationId: deleteOfficeTransactions\n      parameters:\n      - name: transactionId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /offices/template:\n    get:\n      tags:\n      - Offices\n      summary: Retrieve Office Details Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n        Field Defaults\n        Allowed Value Lists\n        Example Request:\n\n        offices/template\n      operationId: retrieveOfficeTemplateGet\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOfficesTemplateResponse'\n  /offices:\n    get:\n      tags:\n      - Offices\n      summary: List Offices\n      description: |-\n        Example Requests:\n\n        offices\n\n\n        offices?fields=id,name,openingDate\n      operationId: retrieveOffices\n      parameters:\n      - name: includeAllOffices\n        in: query\n        description: includeAllOffices\n        schema:\n          type: boolean\n          default: false\n      - name: orderBy\n        in: query\n        description: orderBy\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: sortOrder\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetOfficesResponse'\n    post:\n      tags:\n      - Offices\n      summary: Create an Office\n      description: |-\n        Mandatory Fields\n        name, openingDate, parentId\n      operationId: createOffice\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostOfficesRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostOfficesResponse'\n      x-codegen-request-body-name: body\n  /offices/{officeId}:\n    get:\n      tags:\n      - Offices\n      summary: Retrieve an Office\n      description: |-\n        Example Requests:\n\n        offices/1\n\n\n        offices/1?template=true\n\n\n        offices/1?fields=id,name,parentName\n      operationId: retreiveOffice\n      parameters:\n      - name: officeId\n        in: path\n        description: officeId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOfficesResponse'\n    put:\n      tags:\n      - Offices\n      summary: Update Office\n      operationId: updateOffice\n      parameters:\n      - name: officeId\n        in: path\n        description: officeId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutOfficesOfficeIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutOfficesOfficeIdResponse'\n      x-codegen-request-body-name: body\n  /provisioningcategory:\n    get:\n      tags:\n      - Provisioning Category\n      operationId: retrieveAllProvisionCategory\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n    post:\n      tags:\n      - Provisioning Category\n      operationId: createProvisioningCategory\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n  /provisioningcategory/{categoryId}:\n    put:\n      tags:\n      - Provisioning Category\n      operationId: updateProvisioningCategory\n      parameters:\n      - name: categoryId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Provisioning Category\n      operationId: deleteProvisioningCategory\n      parameters:\n      - name: categoryId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /provisioningcriteria/{criteriaId}:\n    get:\n      tags:\n      - Provisioning Criteria\n      summary: Retrieves a Provisioning Criteria\n      description: Retrieves a Provisioning Criteria\n      operationId: retrieveProvisioningCriteria\n      parameters:\n      - name: criteriaId\n        in: path\n        description: criteriaId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetProvisioningCriteriaCriteriaIdResponse'\n    put:\n      tags:\n      - Provisioning Criteria\n      summary: Updates a new Provisioning Criteria\n      description: |-\n        Updates a new Provisioning Criteria\n\n        Optional Fields\n        criteriaName, loanProducts, provisioningcriteria\n      operationId: updateProvisioningCriteria\n      parameters:\n      - name: criteriaId\n        in: path\n        description: criteriaId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutProvisioningCriteriaRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutProvisioningCriteriaResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Provisioning Criteria\n      summary: Deletes Provisioning Criteria\n      description: Deletes Provisioning Criteria\n      operationId: deleteProvisioningCriteria\n      parameters:\n      - name: criteriaId\n        in: path\n        description: criteriaId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteProvisioningCriteriaResponse'\n  /provisioningcriteria:\n    get:\n      tags:\n      - Provisioning Criteria\n      summary: Retrieves all created Provisioning Criterias\n      description: Retrieves all created Provisioning Criterias\n      operationId: retrieveAllProvisioningCriterias\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetProvisioningCriteriaResponse'\n    post:\n      tags:\n      - Provisioning Criteria\n      summary: Create a new Provisioning Criteria\n      description: \"Creates a new Provisioning Criteria\\n\\nMandatory Fields: \\ncriteriaName\\n\\\n        provisioningcriteria\\n\\nOptional Fields: \\nloanProducts\"\n      operationId: createProvisioningCriteria\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostProvisioningCriteriaRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostProvisioningCriteriaResponse'\n      x-codegen-request-body-name: body\n  /provisioningcriteria/template:\n    get:\n      tags:\n      - Provisioning Criteria\n      operationId: retrieveTemplateProvision\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /staff:\n    get:\n      tags:\n      - Staff\n      summary: Retrieve Staff\n      description: |-\n        Returns the list of staff members.\n\n        Example Requests:\n\n        staff\n\n\n\n\n        Retrieve a Staff by status\n\n        Returns the details of a Staff based on status.\n\n        By default it Returns all the ACTIVE Staff.\n\n        If status=INACTIVE, then it returns all INACTIVE Staff.\n\n        and for status=ALL, it Returns both ACTIVE and INACTIVE Staff.\n\n        Example Requests:\n\n        staff?status=active\n      operationId: retrieveStaff\n      parameters:\n      - name: sqlSearch\n        in: query\n        description: sqlSearch\n        schema:\n          type: string\n      - name: officeId\n        in: query\n        description: officeId\n        schema:\n          type: integer\n          format: int64\n      - name: staffInOfficeHierarchy\n        in: query\n        description: staffInOfficeHierarchy\n        schema:\n          type: boolean\n          default: false\n      - name: loanOfficersOnly\n        in: query\n        description: loanOfficersOnly\n        schema:\n          type: boolean\n          default: false\n      - name: status\n        in: query\n        description: status\n        schema:\n          type: string\n          default: active\n      responses:\n        200:\n          description: GET https://DomainName/api/v1/staff?status={ACTIVE|INACTIVE|ALL}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStaffResponse'\n    post:\n      tags:\n      - Staff\n      summary: Create a staff member\n      description: \"Creates a staff member.\\n\\nMandatory Fields: \\nofficeId, firstname,\\\n        \\ lastname\\n\\nOptional Fields: \\nisLoanOfficer, isActive\"\n      operationId: createStaff\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostStaffRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostStaffResponse'\n      x-codegen-request-body-name: body\n  /staff/{staffId}:\n    get:\n      tags:\n      - Staff\n      summary: Retrieve a Staff Member\n      description: |-\n        Returns the details of a Staff Member.\n\n        Example Requests:\n\n        staff/1\n      operationId: retreiveStaff\n      parameters:\n      - name: staffId\n        in: path\n        description: staffId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStaffResponse'\n    put:\n      tags:\n      - Staff\n      summary: Update a Staff Member\n      description: Updates the details of a staff member.\n      operationId: updateStaff\n      parameters:\n      - name: staffId\n        in: path\n        description: staffId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutStaffRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutStaffResponse'\n      x-codegen-request-body-name: body\n  /cashiers:\n    get:\n      tags:\n      - cashiers\n      operationId: getCashierData\n      parameters:\n      - name: officeId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: tellerId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: staffId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: date\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /tellers:\n    get:\n      tags:\n      - Teller Cash Management\n      summary: List all tellers\n      description: Retrieves list tellers\n      operationId: getTellerData\n      parameters:\n      - name: officeId\n        in: query\n        description: officeId\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetTellersResponse'\n    post:\n      tags:\n      - Teller Cash Management\n      summary: Create teller\n      description: |-\n        Mandatory Fields\n        Teller name, OfficeId, Description, Start Date, Status\n        Optional Fields\n        End Date\n      operationId: createTeller\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostTellersRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostTellersResponse'\n      x-codegen-request-body-name: body\n  /tellers/{tellerId}:\n    get:\n      tags:\n      - Teller Cash Management\n      summary: Retrieve tellers\n      operationId: findTeller\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTellersResponse'\n    put:\n      tags:\n      - Teller Cash Management\n      summary: Update teller\n      operationId: updateTeller\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutTellersRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutTellersResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Teller Cash Management\n      operationId: deleteTeller\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /tellers/{tellerId}/cashiers:\n    get:\n      tags:\n      - Teller Cash Management\n      summary: List Cashiers\n      operationId: getCashierDataTellers\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: fromdate\n        in: query\n        description: fromdate\n        schema:\n          type: string\n      - name: todate\n        in: query\n        description: todate\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTellersTellerIdCashiersResponse'\n    post:\n      tags:\n      - Teller Cash Management\n      summary: Create Cashiers\n      description: \"Mandatory Fields: \\nCashier/staff, Fromm Date, To Date, Full Day\\\n        \\ or From time and To time\\n\\n\\n\\nOptional Fields: \\nDescription/Notes\"\n      operationId: createCashier\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostTellersTellerIdCashiersRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostTellersTellerIdCashiersResponse'\n      x-codegen-request-body-name: body\n  /tellers/{tellerId}/cashiers/{cashierId}:\n    get:\n      tags:\n      - Teller Cash Management\n      summary: Retrieve a cashier\n      operationId: findCashierData\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: path\n        description: cashierId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashierIdResponse'\n    put:\n      tags:\n      - Teller Cash Management\n      summary: Update Cashier\n      operationId: updateCashier\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: path\n        description: cashierId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Teller Cash Management\n      summary: Delete Cashier\n      operationId: deleteCashier\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: path\n        description: cashierId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTellersTellerIdCashiersCashierIdResponse'\n  /tellers/{tellerId}/cashiers/template:\n    get:\n      tags:\n      - Teller Cash Management\n      summary: Find Cashiers\n      operationId: getCashierTemplate\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTellersTellerIdCashiersTemplateResponse'\n  /tellers/{tellerId}/cashiers/{cashierId}/allocate:\n    post:\n      tags:\n      - Teller Cash Management\n      summary: Allocate Cash To Cashier\n      description: \"Mandatory Fields: \\nDate, Amount, Currency, Notes/Comments\"\n      operationId: allocateCashToCashier\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: path\n        description: cashierId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          text/html:\n            schema:\n              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateResponse'\n      x-codegen-request-body-name: body\n  /tellers/{tellerId}/cashiers/{cashierId}/settle:\n    post:\n      tags:\n      - Teller Cash Management\n      summary: Settle Cash From Cashier\n      description: |-\n        Mandatory Fields\n        Date, Amount, Currency, Notes/Comments\n      operationId: settleCashFromCashier\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: path\n        description: cashierId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          text/html:\n            schema:\n              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleResponse'\n      x-codegen-request-body-name: body\n  /tellers/{tellerId}/cashiers/{cashierId}/transactions:\n    get:\n      tags:\n      - Teller Cash Management\n      summary: Retrieve Cashier Transaction\n      operationId: getTransactionsForCashier\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: path\n        description: cashierId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: currencyCode\n        in: query\n        description: currencyCode\n        schema:\n          type: string\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        description: orderBy\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: sortOrder\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsResponse'\n  /tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions:\n    get:\n      tags:\n      - Teller Cash Management\n      summary: Transactions Wtih Summary For Cashier\n      operationId: getTransactionsWtihSummaryForCashier\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: path\n        description: cashierId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: currencyCode\n        in: query\n        description: currencyCode\n        schema:\n          type: string\n      - name: offset\n        in: query\n        description: offset\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        description: limit\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        description: orderBy\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: sortOrder\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse'\n  /tellers/{tellerId}/cashiers/{cashierId}/transactions/template:\n    get:\n      tags:\n      - Teller Cash Management\n      summary: Retrieve Cashier Transaction Template\n      operationId: getCashierTxnTemplate\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: path\n        description: cashierId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse'\n  /tellers/{tellerId}/transactions:\n    get:\n      tags:\n      - Teller Cash Management\n      operationId: getTransactionData\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: dateRange\n        in: query\n        description: dateRange\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /tellers/{tellerId}/transactions/{transactionId}:\n    get:\n      tags:\n      - Teller Cash Management\n      operationId: findTransactionData\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: transactionId\n        in: path\n        description: transactionId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /tellers/{tellerId}/journals:\n    get:\n      tags:\n      - Teller Cash Management\n      operationId: getJournalData\n      parameters:\n      - name: tellerId\n        in: path\n        description: tellerId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: query\n        description: cashierId\n        schema:\n          type: integer\n          format: int64\n      - name: dateRange\n        in: query\n        description: dateRange\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /cashiersjournal:\n    get:\n      tags:\n      - cashiersjournal\n      operationId: getJournalDataCashier\n      parameters:\n      - name: officeId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: tellerId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: cashierId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: dateRange\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /workingdays/template:\n    get:\n      tags:\n      - Working days\n      summary: Working Days Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for working days.\n\n        Example Request:\n\n        workingdays/template\n      operationId: templateWorkingDays\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWorkingDaysTemplateResponse'\n  /workingdays:\n    get:\n      tags:\n      - Working days\n      summary: List Working days\n      description: |-\n        Example Requests:\n\n        workingdays\n      operationId: retrieveAllWorkingDays\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetWorkingDaysResponse'\n    put:\n      tags:\n      - Working days\n      summary: Update a Working Day\n      description: |-\n        Mandatory Fields\n        recurrence,repaymentRescheduleType,extendTermForDailyRepayments,locale\n      operationId: updateWorkingDays\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutWorkingDaysRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutWorkingDaysResponse'\n      x-codegen-request-body-name: body\n  /client/{clientid}/addresses:\n    get:\n      tags:\n      - Clients Address\n      summary: List all addresses for a Client\n      description: |-\n        Example Requests:\n\n        client/1/addresses\n\n\n        clients/1/addresses?status=false,true\u0026\u0026type=1,2,3\n      operationId: getAddresses\n      parameters:\n      - name: status\n        in: query\n        schema:\n          type: string\n      - name: type\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: clientid\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddressData'\n    put:\n      tags:\n      - Clients Address\n      summary: update an address for a Client\n      description: |-\n        All the address fields can be updated by using update client address API\n\n        Mandatory Fields\n        type and addressId\n      operationId: UpdateClientAddress\n      parameters:\n      - name: clientid\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n    post:\n      tags:\n      - Clients Address\n      summary: Create an address for a Client\n      description: \"Mandatory Fields : \\ntype and clientId\"\n      operationId: AddClientAddress\n      parameters:\n      - name: type\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: clientid\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n      x-codegen-request-body-name: body\n  /client/addresses/template:\n    get:\n      tags:\n      - Clients Address\n      operationId: getAddressesTemplate\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /clients/{clientId}/charges/{chargeId}:\n    get:\n      tags:\n      - Client Charges\n      summary: Retrieve a Client Charge\n      description: |-\n        Example Requests:\n        clients/1/charges/1\n\n\n        clients/1/charges/1?fields=name,id\n      operationId: retrieveClientCharge\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: chargeId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientChargeData'\n    post:\n      tags:\n      - Client Charges\n      summary: Pay a Client Charge\n      description: |\n        Mandatory Fields\n        transactionDate and amount \"Pay either a part of or the entire due amount for a charge.(command=paycharge)\n\n        Waive a Client Charge\n\n\n        This API provides the facility of waiving off the remaining amount on a client charge (command=waive)\n      operationId: payOrWaiveClientCharge\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: chargeId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Client Charges\n      summary: Delete a Client Charge\n      description: 'Deletes a Client Charge on which no transactions have taken place\n        (either payments or waivers). '\n      operationId: deleteClientCharge\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: chargeId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n  /clients/{clientId}/charges:\n    get:\n      tags:\n      - Client Charges\n      summary: List Client Charges\n      description: |-\n        The list capability of client charges supports pagination.Example Requests:\n        clients/1/charges\n\n        clients/1/charges?offset=0\u0026limit=5\n      operationId: retrieveAllClientCharges\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: chargeStatus\n        in: query\n        schema:\n          type: string\n          default: all\n      - name: pendingPayment\n        in: query\n        schema:\n          type: boolean\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientCharge'\n    post:\n      tags:\n      - Client Charges\n      summary: Add Client Charge\n      description: \" This API associates a Client charge with an implicit Client account\\n\\\n        Mandatory Fields : \\nchargeId and dueDate  \\nOptional Fields : \\namount\"\n      operationId: applyClientCharge\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n  /clients/{clientId}/identifiers:\n    get:\n      tags:\n      - Client Identifier Api\n      summary: List all Identifiers for a Client\n      description: |-\n        Example Requests:\n        clients/1/identifiers\n\n\n        clients/1/identifiers?fields=documentKey,documentType,description\n      operationId: retrieveAllClientIdentifiers\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientIdentifierData'\n    post:\n      tags:\n      - Client Identifier Api\n      summary: Create an Identifier for a Client\n      description: \"Mandatory Fields\\ndocumentKey, documentTypeId \"\n      operationId: createClientIdentifier\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n  /clients/{clientId}/identifiers/{identifierId}:\n    get:\n      tags:\n      - Client Identifier Api\n      summary: Retrieve a Client Identifier\n      description: |-\n        Example Requests:\n        clients/1/identifier/2\n\n\n        clients/1/identifier/2?template=true\n\n        clients/1/identifiers/2?fields=documentKey,documentType,description\n      operationId: retrieveClientIdentifiers\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: identifierId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientIdentifierData'\n    put:\n      tags:\n      - Client Identifier Api\n      summary: Update a Client Identifier\n      operationId: updateClientIdentifer\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: identifierId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n    delete:\n      tags:\n      - Client Identifier Api\n      summary: Delete a Client Identifier\n      operationId: deleteClientIdentifier\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: identifierId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n  /clients/{clientId}/transactions:\n    get:\n      tags:\n      - Client Transaction\n      summary: List Client Transactions\n      description: \"The list capability of client transaction can support pagination.\\n\\\n        \\nMandatory Arguments : offset\\n    Integer Mandatory, defaults to 0 \\n  \\\n        \\  Indicates the result from which pagination starts\\nlimit\\n    Integer Mandatory,\\\n        \\ defaults to 200 \\n    Restricts the size of results returned. To override\\\n        \\ the default and return all entries you must explicitly pass a non-positive\\\n        \\ integer value for limit e.g. limit=0, or limit=-1\\n\\n\\n\\nExample Requests:\\n\\\n        clients/189/transactions\\nclients/189/transactions?offset=10\u0026limit=50\"\n      operationId: retrieveAllClientTransactions\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientTransactionData'\n  /clients/{clientId}/transactions/{transactionId}:\n    get:\n      tags:\n      - Client Transaction\n      summary: Retrieve a Client Transaction\n      description: |-\n        Example Requests:\n        clients/1/transactions/1\n\n\n        clients/1/transactions/1?fields=id,officeName\n      operationId: retrieveClientTransaction\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: transactionId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientTransactionData'\n    post:\n      tags:\n      - Client Transaction\n      summary: Undo a Client Transaction\n      operationId: undoClientTransaction\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: transactionId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n  /clients/{clientId}/accounts:\n    get:\n      tags:\n      - Client Api\n      summary: Retrieve client accounts overview\n      description: \"An example of how a loan portfolio summary can be provided. This\\\n        \\ is requested in a specific use case of the community application.\\nIt is\\\n        \\ quite reasonable to add resources like this to simplify User Interface development.\\n\\\n        \\nExample Requests:\\n \\nclients/1/accounts\\n\\nclients/1/accounts?fields=loanAccounts,savingsAccounts\"\n      operationId: retrieveAssociatedAccounts\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountSummaryCollectionData'\n        400:\n          description: Bad Request\n          content: {}\n  /clients:\n    get:\n      tags:\n      - Client Api\n      summary: List Clients\n      description: |-\n        Example Requests:\n\n        clients\n\n        clients?fields=displayName,officeName,timeline\n\n        clients?offset=10\u0026limit=50\n\n        clients?orderBy=displayName\u0026sortOrder=DESC\n      operationId: retrieveAllClients\n      parameters:\n      - name: sqlSearch\n        in: query\n        schema:\n          type: string\n      - name: officeId\n        in: query\n        schema:\n          type: integer\n          format: int64\n      - name: externalId\n        in: query\n        schema:\n          type: string\n      - name: displayName\n        in: query\n        schema:\n          type: string\n      - name: firstName\n        in: query\n        schema:\n          type: string\n      - name: lastName\n        in: query\n        schema:\n          type: string\n      - name: underHierarchy\n        in: query\n        schema:\n          type: string\n      - name: offset\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n      - name: orderBy\n        in: query\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n      - name: orphansOnly\n        in: query\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientData'\n    post:\n      tags:\n      - Client Api\n      summary: Create a Client\n      description: |-\n        Note:\n        1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).\n\n        2.If address is enable(enable-address=true), then additional field called address has to be passed.\n      operationId: createClient\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClientData'\n        required: true\n      responses:\n        200:\n          description: Successfully Client Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n      x-codegen-request-body-name: body\n  /clients/{clientId}:\n    get:\n      tags:\n      - Client Api\n      summary: Retrieve a Client\n      description: |-\n        Example Requests:\n\n        clients/1\n\n\n        clients/1?template=true\n\n\n        clients/1?fields=id,displayName,officeName\n      operationId: retrieveOneClient\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: staffInSelectedOfficeOnly\n        in: query\n        schema:\n          type: boolean\n          default: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientData'\n    put:\n      tags:\n      - Client Api\n      summary: Update a Client\n      description: |-\n        You can update any of the basic attributes of a client (but not its associations) using this API.\n\n        Changing the relationship between a client and its office is not supported through this API. An API specific to handling transfers of clients between offices is available for the same.\n\n        The relationship between a client and a group must be removed through the Groups API.\n      operationId: updateClient\n      parameters:\n      - name: clientId\n        in: path\n        description: ClientId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClientData'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n      x-codegen-request-body-name: body\n    post:\n      tags:\n      - Client Api\n      summary: 'Activate a Client | Close a Client | Reject a Client | Withdraw a\n        Client | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client\n        | Assign a Staff | Unassign a Staff | Update Default Savings Account | Propose\n        a Client Transfer | Withdraw a Client Transfer | Reject a Client Transfer\n        | Accept a Client Transfer | Propose and Accept a Client Transfer | '\n      description: |2\n\n        [Reject a Client] Mandatory Fields : rejectionDate, rejectionReasonId\n\n        [Withdraw a Client] Mandatory Fields : withdrawalDate, withdrawalReasonId\n\n        [Reactivate a Client] Mandatory Fields : reactivationDate\n\n        [UndoReject a Client] Mandatory Fields : reopenedDate\n\n        [UndoWithdraw a Client]Mandatory Fields :  reopenedDate\n      operationId: activate\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Client Api\n      summary: Delete a Client\n      description: If a client is in Pending state, you are allowed to Delete it.\n        The delete is a 'hard delete' and cannot be recovered from. Once clients become\n        active or have loans or savings associated with them, you cannot delete the\n        client but you may Close the client if they have left the program.\n      operationId: deleteClient\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n  /clients/template:\n    get:\n      tags:\n      - Client Api\n      summary: Retrieve Client Details Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n        Field Defaults\n        Allowed Value ListsExample Request:\n\n        clients/template\n      operationId: retrieveTemplateClient\n      parameters:\n      - name: officeId\n        in: query\n        description: optional\n        schema:\n          type: integer\n          format: int64\n      - name: commandParam\n        in: query\n        description: optional If commandParam=close retrieves all closureReasons which\n          are associated with \"ClientClosureReason\" value.\n        schema:\n          type: string\n          default: \"false\"\n      - name: staffInSelectedOfficeOnly\n        in: query\n        description: optional Defaults to false if not provided. If staffInSelectedOfficeOnly=true\n          only staff who are associated with the selected branch are returned.\n        schema:\n          type: boolean\n          default: false\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientData'\n  /surveys/{surveyId}/lookuptables:\n    get:\n      tags:\n      - SPM API - LookUp Table\n      summary: List all Lookup Table entries\n      description: List all Lookup Table entries for a survey.\n      operationId: fetchLookupTables\n      parameters:\n      - name: surveyId\n        in: path\n        description: Enter surveyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LookupTableData'\n    post:\n      tags:\n      - SPM API - LookUp Table\n      summary: Create a Lookup Table entry\n      description: |-\n        Add a new netry to a survey.\n\n        Mandatory Fields\n        key, score, validFrom, validTo\n      operationId: createLookupTable\n      parameters:\n      - name: surveyId\n        in: path\n        description: Enter surveyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LookupTableData'\n        required: false\n      responses:\n        200:\n          description: OK\n          content: {}\n      x-codegen-request-body-name: body\n  /surveys/{surveyId}/lookuptables/{key}:\n    get:\n      tags:\n      - SPM API - LookUp Table\n      summary: Retrieve a Lookup Table entry\n      description: Retrieve a Lookup Table entry for a survey.\n      operationId: findLookupTable\n      parameters:\n      - name: surveyId\n        in: path\n        description: Enter surveyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: key\n        in: path\n        description: Enter key\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LookupTableData'\n  /surveys/{surveyId}/scorecards:\n    get:\n      tags:\n      - SPM - Scorecards\n      summary: List all Scorecard entries\n      description: List all Scorecard entries for a survey.\n      operationId: findBySurvey\n      parameters:\n      - name: surveyId\n        in: path\n        description: Enter surveyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Scorecard'\n    post:\n      tags:\n      - SPM - Scorecards\n      summary: Create a Scorecard entry\n      description: |-\n        Add a new netry to a survey.\n\n        Mandatory Fields\n        clientId, createdOn, questionId, responseId, staffId\n      operationId: createScorecard\n      parameters:\n      - name: surveyId\n        in: path\n        description: Enter surveyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScorecardData'\n        required: false\n      responses:\n        200:\n          description: OK\n          content: {}\n      x-codegen-request-body-name: body\n  /surveys/{surveyId}/scorecards/clients/{clientId}:\n    get:\n      tags:\n      - SPM - Scorecards\n      operationId: findBySurveyClient\n      parameters:\n      - name: surveyId\n        in: path\n        description: Enter surveyId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: clientId\n        in: path\n        description: Enter clientId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScorecardData'\n  /surveys/{id}:\n    get:\n      tags:\n      - SPM - Serveys\n      summary: Retrieve a Survey\n      operationId: findSurvey\n      parameters:\n      - name: id\n        in: path\n        description: Enter id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SurveyData'\n    delete:\n      tags:\n      - SPM - Serveys\n      summary: Deactivate Survey\n      operationId: deactivateSurvey\n      parameters:\n      - name: id\n        in: path\n        description: Enter id\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: OK\n          content: {}\n  /surveys:\n    get:\n      tags:\n      - SPM - Serveys\n      summary: List all Surveys\n      operationId: fetchActiveSurveys\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SurveyData'\n    post:\n      tags:\n      - SPM - Serveys\n      summary: Create a Survey\n      description: |-\n        Adds a new survey to collect client related data.\n\n        Mandatory Fields\n\n        countryCode, key, name, questions, responses, sequenceNo, text, value\n      operationId: createSurvey\n      requestBody:\n        description: Create survey\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SurveyData'\n        required: false\n      responses:\n        200:\n          description: OK\n          content: {}\n      x-codegen-request-body-name: body\n  /templates/{templateId}:\n    get:\n      tags:\n      - User Generated Documents\n      summary: Retrieve a UGD\n      description: |-\n        Example Requests:\n\n        templates/1\n      operationId: retrieveOneTemplateGet\n      parameters:\n      - name: templateId\n        in: path\n        description: templateId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTemplatesTemplateIdResponse'\n    put:\n      tags:\n      - User Generated Documents\n      summary: Update a UGD\n      operationId: saveTemplate\n      parameters:\n      - name: templateId\n        in: path\n        description: templateId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutTemplatesTemplateIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutTemplatesTemplateIdResponse'\n      x-codegen-request-body-name: body\n    post:\n      tags:\n      - User Generated Documents\n      operationId: mergeTemplate\n      parameters:\n      - name: templateId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: successful operation\n          content:\n            text/html:\n              schema:\n                type: string\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - User Generated Documents\n      summary: Delete a UGD\n      operationId: deleteTemplate\n      parameters:\n      - name: templateId\n        in: path\n        description: templateId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTemplatesTemplateIdResponse'\n  /templates/{templateId}/template:\n    get:\n      tags:\n      - User Generated Documents\n      operationId: getTemplateByTemplate\n      parameters:\n      - name: templateId\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /templates/template:\n    get:\n      tags:\n      - User Generated Documents\n      summary: Retrieve UGD Details Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for UGDs. The UGD data returned consists of any or all of:\n\n        ARGUMENTS\n        name String entity String type String text String optional mappers Mapper optional\n        Example Request:\n\n        templates/template\n      operationId: templatesGetAllReq\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTemplatesTemplateResponse'\n  /templates:\n    get:\n      tags:\n      - User Generated Documents\n      summary: Retrieve all UGDs\n      description: |-\n        Example Requests:\n\n        templates\n\n        It is also possible to get specific UGDs by entity and type:\n\n        templates?type=0\u0026entity=0\n        [Entity: Id]\n\n\n\n\n\n        client: 0, loan: 1\n\n        [Type: Id]\n\n\n\n        Document: 0, E-Mail (not yet): 1,  SMS: 2\n      operationId: retrieveAllTemplatesGetStar\n      parameters:\n      - name: typeId\n        in: query\n        description: typeId\n        schema:\n          type: integer\n          format: int32\n          default: -1\n      - name: entityId\n        in: query\n        description: entityId\n        schema:\n          type: integer\n          format: int32\n          default: -1\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTemplatesResponse'\n    post:\n      tags:\n      - User Generated Documents\n      summary: Add a UGD\n      description: |-\n        Adds a new UGD.\n\n        Mandatory Fields\n        name\n\n\n\n        Example Requests:\n\n        templates/1\n      operationId: createTemplate\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostTemplatesRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostTemplatesResponse'\n      x-codegen-request-body-name: body\n  /passwordpreferences:\n    get:\n      tags:\n      - Password preferences\n      operationId: retrieve\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'\n    put:\n      tags:\n      - Password preferences\n      summary: Update password preferences\n      operationId: updatePassPref\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutPasswordPreferencesTemplateRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content: {}\n      x-codegen-request-body-name: body\n  /passwordpreferences/template:\n    get:\n      tags:\n      - Password preferences\n      summary: List Application Password validation policies\n      description: |-\n        ARGUMENTS\n        Example Requests:\n\n        passwordpreferences\n      operationId: templatePassword\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'\n  /permissions:\n    get:\n      tags:\n      - Permissions\n      summary: List Application Permissions\n      description: |-\n        ARGUMENTS\n        makerCheckerableoptional, Values are true, false. Default is false.\n        If makerCheckerable=false or not supplied then a list of application permissions is returned. The \"selected\" attribute is always true in this case.\n\n        If makerCheckerable=true then the \"selected\" attribute shows whether the permission is enabled for Maker Check functionality.\n\n        Note: Each Apache Fineract transaction is associated with a permission.\n\n        Example Requests:\n\n        permissions\n\n\n        permissions?makerCheckerable=true\n\n\n        permissions?fields=grouping,code\n      operationId: retrieveAllPermissions\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetPermissionsResponse'\n    put:\n      tags:\n      - Permissions\n      summary: Enable/Disable Permissions for Maker Checker\n      operationId: updatePermissionsDetails\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutPermissionsRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandProcessingResult'\n      x-codegen-request-body-name: body\n  /roles:\n    get:\n      tags:\n      - Roles\n      summary: List Roles\n      description: |-\n        Example Requests:\n\n        roles\n\n\n        roles?fields=name\n      operationId: retrieveAllRoles\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetRolesResponse'\n    post:\n      tags:\n      - Roles\n      summary: Create a New Role\n      description: |-\n        Mandatory Fields\n        name, description\n      operationId: createRole\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostRolesRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostRolesResponse'\n      x-codegen-request-body-name: body\n  /roles/{roleId}:\n    get:\n      tags:\n      - Roles\n      summary: Retrieve a Role\n      description: |-\n        Example Requests:\n\n        roles/1\n\n\n        roles/1?fields=name\n      operationId: retrieveRole\n      parameters:\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRolesRoleIdResponse'\n    put:\n      tags:\n      - Roles\n      summary: Update a Role\n      operationId: updateRole\n      parameters:\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutRolesRoleIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutRolesRoleIdResponse'\n      x-codegen-request-body-name: body\n    post:\n      tags:\n      - Roles\n      summary: Enable Role | Disable Role\n      description: |-\n        Description : Enable role in case role is disabled. | Disable the role in case role is not associated with any users.\n\n\n\n\n\n        Example Request:   https://DomainName/api/v1/roles/{roleId}?command=enable\n\n\n\n\n\n        https://DomainName/api/v1/roles/{roleId}?command=disable\n      operationId: actionsOnRoles\n      parameters:\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: command\n        in: query\n        description: command\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostRolesRoleIdResponse'\n    delete:\n      tags:\n      - Roles\n      summary: Delete a Role\n      description: 'Description : Delete the role in case role is not associated with\n        any users.'\n      operationId: deleteRole\n      parameters:\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRolesRoleIdResponse'\n  /roles/{roleId}/permissions:\n    get:\n      tags:\n      - Roles\n      summary: Retrieve a Role's Permissions\n      description: |-\n        Example Requests:\n\n        roles/1/permissions\n      operationId: retrieveRolePermissions\n      parameters:\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponse'\n    put:\n      tags:\n      - Roles\n      summary: Update a Role's Permissions\n      operationId: updateRolePermissions\n      parameters:\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutRolesRoleIdPermissionsRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutRolesRoleIdPermissionsResponse'\n      x-codegen-request-body-name: body\n  /users/template:\n    get:\n      tags:\n      - Users\n      summary: Retrieve User Details Template\n      description: |-\n        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n        Field Defaults\n        Allowed Value Lists\n        Example Request:\n\n        users/template\n      operationId: templateUsersGet\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUsersTemplateResponse'\n  /users:\n    get:\n      tags:\n      - Users\n      summary: Retrieve list of users\n      description: |-\n        Example Requests:\n\n        users\n\n\n        users?fields=id,username,email,officeName\n      operationId: retrieveAllUsers\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetUsersResponse'\n    post:\n      tags:\n      - Users\n      summary: Create a User\n      description: \"Adds new application user.\\n\\nNote: Password information is not\\\n        \\ required (or processed). Password details at present are auto-generated\\\n        \\ and then sent to the email account given (which is why it can take a few\\\n        \\ seconds to complete).\\n\\nMandatory Fields: \\nusername, firstname, lastname,\\\n        \\ email, officeId, roles, sendPasswordToEmail\\n\\nOptional Fields: \\nstaffId,passwordNeverExpires,isSelfServiceUser,clients\"\n      operationId: createUser\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostUsersRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostUsersResponse'\n      x-codegen-request-body-name: body\n  /users/{userId}:\n    get:\n      tags:\n      - Users\n      summary: Retrieve a User\n      description: |-\n        Example Requests:\n\n        users/1\n\n\n        users/1?template=true\n\n\n        users/1?fields=username,officeName\n      operationId: retrieveOneUser\n      parameters:\n      - name: userId\n        in: path\n        description: userId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUsersUserIdResponse'\n    put:\n      tags:\n      - Users\n      summary: Update a User\n      description: When updating a password you must provide the repeatPassword parameter\n        also.\n      operationId: updateUser\n      parameters:\n      - name: userId\n        in: path\n        description: userId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutUsersUserIdRequest'\n        required: true\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutUsersUserIdResponse'\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Users\n      summary: Delete a User\n      description: Removes the user and the associated roles and permissions.\n      operationId: deleteUser\n      parameters:\n      - name: userId\n        in: path\n        description: userId\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteUsersUserIdResponse'\ncomponents:\n  schemas:\n    runaccrualsRequest:\n      required:\n      - tillDate\n      type: object\n      properties:\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd MMMM yyyy\n        tillDate:\n          type: string\n          example: 04 June 2014\n    GetGLClosureResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 7\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        closingDate:\n          type: string\n          format: date\n        deleted:\n          type: boolean\n          example: false\n        createdDate:\n          type: string\n          format: date\n        lastUpdatedDate:\n          type: string\n          format: date\n        createdByUserId:\n          type: integer\n          format: int64\n          example: 1\n        createdByUsername:\n          type: string\n          example: mifos\n        lastUpdatedByUserId:\n          type: integer\n          format: int64\n          example: 1\n        lastUpdatedByUsername:\n          type: string\n          example: mifos\n        comments:\n          type: string\n          example: closed\n    PostGlClosuresResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 9\n    PostGLCLosuresRequest:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        closingDate:\n          type: string\n          format: date\n        comments:\n          type: string\n          example: The accountants are heading for a carribean vacation\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd MMMM yyyy\n    PutGlClosuresResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 9\n        comments:\n          type: string\n          example: All transactions verified by Johnny Cash\n    PutGlClosuresRequest:\n      type: object\n      properties:\n        comments:\n          type: string\n          example: All transactions verified by Johnny Cash\n    DeleteGlClosuresResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 9\n    PostFinancialActivityAccountsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostFinancialActivityAccountsRequest:\n      type: object\n      properties:\n        financialActivityId:\n          type: integer\n          format: int64\n          example: 200\n        glAccountId:\n          type: integer\n          format: int64\n          example: 2\n    PutFinancialActivityAccountsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        comments:\n          $ref: '#/components/schemas/PutFinancialActivityAccountscommentsSwagger'\n    PutFinancialActivityAccountscommentsSwagger:\n      type: object\n      properties:\n        glAccountId:\n          type: integer\n          format: int64\n          example: 1\n    DeleteFinancialActivityAccountsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    EnumOptionData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        code:\n          type: string\n        value:\n          type: string\n    FinancialActivityData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        mappedGLAccountType:\n          type: string\n          enum:\n          - ASSET\n          - LIABILITY\n          - EQUITY\n          - INCOME\n          - EXPENSE\n    GLAccountData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        glCode:\n          type: string\n        type:\n          $ref: '#/components/schemas/EnumOptionData'\n        typeId:\n          type: integer\n          format: int32\n    GetFinancialActivityAccountsResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        financialActivityData:\n          $ref: '#/components/schemas/FinancialActivityData'\n        glAccountData:\n          $ref: '#/components/schemas/GLAccountData'\n    CodeValueData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        active:\n          type: boolean\n        mandatory:\n          type: boolean\n    GetGLAccountsTemplateResponse:\n      type: object\n      properties:\n        disabled:\n          type: boolean\n          example: false\n        manualEntriesAllowed:\n          type: boolean\n          example: true\n        type:\n          $ref: '#/components/schemas/EnumOptionData'\n        usage:\n          $ref: '#/components/schemas/EnumOptionData'\n        accountTypeOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        usageOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        assetHeaderAccountOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/GLAccountData'\n        liabilityHeaderAccountOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/GLAccountData'\n        equityHeaderAccountOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/GLAccountData'\n        expenseHeaderAccountOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/GLAccountData'\n        allowedAssetsTagOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CodeValueData'\n        allowedLiabilitiesTagOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CodeValueData'\n        allowedEquityTagOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CodeValueData'\n        allowedIncomeTagOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CodeValueData'\n        allowedExpensesTagOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CodeValueData'\n    GetGLAccountsResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 16\n        name:\n          type: string\n          example: Cash\n        parentId:\n          type: integer\n          format: int64\n          example: 1\n        glCode:\n          type: string\n          example: \"100001\"\n        disabled:\n          type: boolean\n          example: false\n        manualEntriesAllowed:\n          type: boolean\n          example: true\n        type:\n          $ref: '#/components/schemas/EnumOptionData'\n        usage:\n          $ref: '#/components/schemas/EnumOptionData'\n        description:\n          type: string\n          example: Desc\n        nameDecorated:\n          type: string\n          example: '....Cash'\n        tagId:\n          $ref: '#/components/schemas/CodeValueData'\n        organizationRunningBalance:\n          type: integer\n          format: int64\n          example: 118437\n    PostGLAccountsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int32\n          example: 22\n    PostGLAccountsRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Cash at Bangalore\n        glCode:\n          type: string\n          example: \"100001\"\n        manualEntriesAllowed:\n          type: boolean\n          example: true\n        type:\n          type: string\n          example: \"1\"\n        tagId:\n          type: string\n          example: \"10\"\n        parentId:\n          type: integer\n          format: int64\n          example: 1\n        usage:\n          $ref: '#/components/schemas/EnumOptionData'\n        description:\n          type: string\n          example: Desc\n    PutGLAccountsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int32\n          example: 1\n        changes:\n          $ref: '#/components/schemas/PutGLAccountsResponsechangesSwagger'\n    PutGLAccountsResponsechangesSwagger:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Cash at Bangalore\n    PutGLAccountsRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Cash at Bangalore\n    DeleteGLAccountsRequest:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int32\n          example: 1\n    JournalEntryData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        officeId:\n          type: integer\n          format: int64\n        glAccountId:\n          type: integer\n          format: int64\n        glAccountType:\n          $ref: '#/components/schemas/EnumOptionData'\n        entryType:\n          $ref: '#/components/schemas/EnumOptionData'\n        amount:\n          type: number\n        transactionId:\n          type: string\n    PostJournalEntriesResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          description: \"1\"\n          format: int64\n        transactionId:\n          type: string\n          description: RS9MCISID4WK1ZM\n    JournalEntryCommand:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n        transactionDate:\n          type: string\n          format: date\n        comments:\n          type: string\n        referenceNumber:\n          type: string\n        accountingRuleId:\n          type: integer\n          format: int64\n        credits:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'\n        debits:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'\n    SingleDebitOrCreditEntryCommand:\n      type: object\n      properties:\n        glAccountId:\n          type: integer\n          format: int64\n        amount:\n          type: number\n        comments:\n          type: string\n        parametersPassedInRequest:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        commentsChanged:\n          type: boolean\n        glAmountChanged:\n          type: boolean\n        glAccountIdChanged:\n          type: boolean\n    PostJournalEntriesTransactionIdResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          description: \"1\"\n          format: int64\n    PostJournalEntriesTransactionIdRequest:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          description: \"1\"\n          format: int64\n    PostProvisioningEntriesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostProvisioningEntriesRequest:\n      type: object\n      properties:\n        date:\n          type: string\n          example: 16 October 2015\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd MMMM yyyy\n        createjournalentries:\n          type: string\n          example: \"true\"\n        provisioningentry:\n          type: string\n        entries:\n          type: string\n    PutProvisioningEntriesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PutProvisioningEntriesRequest:\n      type: object\n      properties:\n        command:\n          type: string\n          example: recreateprovisioningentry\n    ProvisioningEntryData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        createdDate:\n          type: string\n          format: date-time\n    LoanProductProvisioningEntryData:\n      type: object\n      properties:\n        historyId:\n          type: integer\n          format: int64\n        officeId:\n          type: integer\n          format: int64\n        currencyCode:\n          type: string\n        productId:\n          type: integer\n          format: int64\n        categoryId:\n          type: integer\n          format: int64\n        overdueInDays:\n          type: integer\n          format: int64\n        percentage:\n          type: number\n        liablityAccount:\n          type: integer\n          format: int64\n        expenseAccount:\n          type: integer\n          format: int64\n        criteriaId:\n          type: integer\n          format: int64\n        outstandingBalance:\n          type: number\n    AccountingTagRuleData:\n      type: object\n      properties:\n        tag:\n          $ref: '#/components/schemas/CodeValueData'\n    GetAccountRulesResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        officeId:\n          type: integer\n          format: int64\n        officeName:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        systemDefined:\n          type: boolean\n        allowMultipleDebitEntries:\n          type: boolean\n        allowMultipleCreditEntries:\n          type: boolean\n        creditTags:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountingTagRuleData'\n        debitTags:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountingTagRuleData'\n    AccountingRuleData:\n      type: object\n      properties:\n        creditTags:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountingTagRuleData'\n        debitTags:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountingTagRuleData'\n    PostAccountingRulesResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostAccountingRulesRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: test\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        accountToDebit:\n          type: integer\n          format: int64\n          example: 21\n        accountToCredit:\n          type: integer\n          format: int64\n          example: 9\n        description:\n          type: string\n          example: Employee salary\n    PutAccountingRulesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        changes:\n          $ref: '#/components/schemas/PutAccountingRulesResponsechangesSwagger'\n    PutAccountingRulesResponsechangesSwagger:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Employee Salary posting rule\n    PutAccountingRulesRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Employee Salary posting rule\n    DeleteAccountingRulesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    GetAccountRulesTemplateResponse:\n      type: object\n      properties:\n        systemDefined:\n          type: boolean\n          example: false\n        allowedOffices:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfficeData'\n        allowedAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/GLAccountData'\n    OfficeData:\n      type: object\n      properties:\n        hierarchy:\n          type: string\n    BatchResponse:\n      type: object\n      properties:\n        requestId:\n          type: integer\n          format: int64\n        statusCode:\n          type: integer\n          format: int32\n        headers:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Header'\n        body:\n          type: string\n    Header:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n    PostBatchesRequest:\n      type: object\n      properties:\n        requestId:\n          type: integer\n          format: int64\n          example: 1\n        relativeUrl:\n          type: string\n          example: clients\n        method:\n          type: string\n          example: POST\n        headers:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Header'\n        reference:\n          type: integer\n          format: int64\n          example: 1\n        body:\n          $ref: '#/components/schemas/PostBodyRequestSwagger'\n    PostBodyRequestSwagger:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        firstname:\n          type: string\n          example: '\"Petra\"'\n        lastname:\n          type: string\n          example: '\"Yton\"'\n        externalId:\n          type: string\n          example: '\"ex_externalId1\"'\n        dateFormat:\n          type: string\n          example: '\"dd MMMM yyyy\"'\n        locale:\n          type: string\n          example: '\"en\"'\n        active:\n          type: boolean\n          example: true\n        activationDate:\n          type: string\n          example: '\"04 March 2009\"'\n        submittedOnDate:\n          type: string\n          example: '\"04 March 2009\"'\n    GetMakerCheckerResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        actionName:\n          type: string\n        entityName:\n          type: string\n        resourceId:\n          type: integer\n          format: int64\n        subresourceId:\n          type: integer\n          format: int64\n        maker:\n          type: string\n        madeOnDate:\n          type: string\n          format: date-time\n        checker:\n          type: string\n        checkedOnDate:\n          type: string\n          format: date-time\n        processingResult:\n          type: string\n        commandAsJson:\n          type: string\n        officeName:\n          type: string\n        groupLevelName:\n          type: string\n        groupName:\n          type: string\n        clientName:\n          type: string\n        loanAccountNo:\n          type: string\n        savingsAccountNo:\n          type: string\n        clientId:\n          type: integer\n          format: int64\n        loanId:\n          type: integer\n          format: int64\n        url:\n          type: string\n    AppUserData:\n      type: object\n      properties:\n        selfServiceUser:\n          type: boolean\n    GetMakerCheckersSearchTemplateResponse:\n      type: object\n      properties:\n        appUsers:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppUserData'\n        actionNames:\n          type: array\n          items:\n            type: string\n        entityNames:\n          type: array\n          items:\n            type: string\n        processingResults:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProcessingResultLookup'\n    ProcessingResultLookup:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        processingResult:\n          type: string\n    PostMakerCheckersResponse:\n      type: object\n      properties:\n        auditId:\n          type: integer\n          format: int64\n          example: 1\n    GetAccountNumberFormatsIdResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 2\n        accountType:\n          $ref: '#/components/schemas/EnumOptionData'\n        prefixType:\n          $ref: '#/components/schemas/EnumOptionData'\n    GetAccountNumberFormatsResponseTemplate:\n      type: object\n      properties:\n        accountTypeOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        prefixTypeOptions:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/EnumOptionData'\n    PutAccountNumberFormatsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 2\n        changes:\n          $ref: '#/components/schemas/PutAccountNumberFormatschangesSwagger'\n    PutAccountNumberFormatschangesSwagger:\n      type: object\n      properties:\n        prefixType:\n          type: integer\n          format: int64\n    PutAccountNumberFormatsRequest:\n      type: object\n      properties:\n        prefixType:\n          type: integer\n          format: int64\n          example: 1\n    DeleteAccountNumberFormatsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 2\n    PostAccountNumberFormatsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n    PostAccountNumberFormatsRequest:\n      type: object\n      properties:\n        accountType:\n          type: integer\n          format: int64\n          example: 1\n        prefixType:\n          type: integer\n          format: int64\n          example: 101\n    PutCachechangesSwagger:\n      type: object\n      properties:\n        cacheType:\n          type: integer\n          format: int64\n          example: 2\n    PutCachesResponse:\n      type: object\n      properties:\n        cacheType:\n          $ref: '#/components/schemas/PutCachechangesSwagger'\n    PutCachesRequest:\n      type: object\n      properties:\n        cacheType:\n          type: integer\n          format: int64\n          example: 2\n    GetCachesResponse:\n      type: object\n      properties:\n        cacheType:\n          $ref: '#/components/schemas/EnumOptionData'\n        enabled:\n          type: boolean\n    CommandWrapper:\n      type: object\n      properties:\n        groupId:\n          type: integer\n          format: int64\n        clientId:\n          type: integer\n          format: int64\n        loanId:\n          type: integer\n          format: int64\n        savingsId:\n          type: integer\n          format: int64\n        entityName:\n          type: string\n        taskPermissionName:\n          type: string\n        entityId:\n          type: integer\n          format: int64\n        subentityId:\n          type: integer\n          format: int64\n        href:\n          type: string\n        json:\n          type: string\n        transactionId:\n          type: string\n        productId:\n          type: integer\n          format: int64\n        creditBureauId:\n          type: integer\n          format: int64\n        organisationCreditBureauId:\n          type: integer\n          format: int64\n        create:\n          type: boolean\n        createDatatable:\n          type: boolean\n        deleteDatatable:\n          type: boolean\n        updateDatatable:\n          type: boolean\n        datatableResource:\n          type: boolean\n        deleteOneToOne:\n          type: boolean\n        deleteMultiple:\n          type: boolean\n        updateOneToOne:\n          type: boolean\n        updateMultiple:\n          type: boolean\n        registerDatatable:\n          type: boolean\n        noteResource:\n          type: boolean\n        cacheResource:\n          type: boolean\n        updateOperation:\n          type: boolean\n        delete:\n          type: boolean\n        deleteOperation:\n          type: boolean\n        surveyResource:\n          type: boolean\n        registerSurvey:\n          type: boolean\n        fullFilSurvey:\n          type: boolean\n        workingDaysResource:\n          type: boolean\n        passwordPreferencesResource:\n          type: boolean\n        permissionResource:\n          type: boolean\n        userResource:\n          type: boolean\n        currencyResource:\n          type: boolean\n        loanDisburseDetailResource:\n          type: boolean\n        updateDisbursementDate:\n          type: boolean\n        update:\n          type: boolean\n    GetCodeValuesDataResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Passport\n        description:\n          type: string\n          example: Passport information\n        position:\n          type: integer\n          format: int32\n          example: 0\n    PostCodeValueDataResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n    PostCodeValuesDataRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Passport\n        description:\n          type: string\n          example: Passport information\n        position:\n          type: integer\n          format: int32\n          example: 0\n    PutCodeValueDataResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n        changes:\n          $ref: '#/components/schemas/PutCodeValuechangesSwagger'\n    PutCodeValuechangesSwagger:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Passport\n        description:\n          type: string\n          example: Passport information\n        position:\n          type: integer\n          format: int32\n          example: 0\n    PutCodeValuesDataRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Passport\n        description:\n          type: string\n          example: Passport information\n        position:\n          type: integer\n          format: int32\n          example: 0\n    DeleteCodeValueDataResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n    GetCodesResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Education\n        systemDefined:\n          type: boolean\n          example: true\n    PostCodesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n    PostCodesRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: MyNewCode\n    PutCodesApichangesSwagger:\n      type: object\n      properties:\n        name:\n          type: string\n          example: MyNewCode(changed)\n    PutCodesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n        changes:\n          $ref: '#/components/schemas/PutCodesApichangesSwagger'\n    PutCodesRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: MyNewCode(changed)\n    DeleteCodesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n    PutExternalServiceRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          example: test@mifos.org\n        password:\n          type: string\n          example: XXXX\n    ExternalServicesPropertiesData:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n    GetGlobalConfigurationsResponse:\n      type: object\n      properties:\n        globalConfiguration:\n          type: array\n          items:\n            $ref: '#/components/schemas/GlobalConfigurationPropertyData'\n    GlobalConfigurationPropertyData:\n      type: object\n      properties:\n        name:\n          type: string\n        enabled:\n          type: boolean\n        value:\n          type: integer\n          format: int64\n        dateValue:\n          type: string\n          format: date-time\n        id:\n          type: integer\n          format: int64\n        description:\n          type: string\n        trapDoor:\n          type: boolean\n    PutGlobalConfigurationsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n        changes:\n          $ref: '#/components/schemas/PutGlobalConfigurationsResponsechangesSwagger'\n    PutGlobalConfigurationsResponsechangesSwagger:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n    PutGlobalConfigurationsRequest:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n        value:\n          type: integer\n          format: int64\n          example: 2\n    PutDataTablesResponse:\n      type: object\n      properties:\n        resourceIdentifier:\n          type: string\n          example: extra_client_details\n    PutDataTablesRequest:\n      type: object\n      properties:\n        appTableName:\n          type: string\n          example: m_client\n        dropColumns:\n          type: array\n          items:\n            $ref: '#/components/schemas/PutDataTablesRequestDropColumns'\n        addColumns:\n          type: array\n          items:\n            $ref: '#/components/schemas/PutDataTablesRequestAddColumns'\n        ChangeColumns:\n          type: array\n          items:\n            $ref: '#/components/schemas/PutDataTablesRequestChangeColumns'\n    PutDataTablesRequestAddColumns:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Question\n        type:\n          type: string\n          example: Dropdown\n        code:\n          type: string\n          example: Gender\n        mandatory:\n          type: boolean\n          example: true\n    PutDataTablesRequestChangeColumns:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Question\n        newName:\n          type: string\n          example: Question 2\n        code:\n          type: string\n          example: Gender\n        newCode:\n          type: string\n          example: Gender2\n        mandatory:\n          type: boolean\n          example: true\n    PutDataTablesRequestDropColumns:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Gender_cd_Question\n    GetDataTablesResponse:\n      type: object\n      properties:\n        appTableName:\n          type: string\n          example: m_client\n        datatableName:\n          type: string\n          example: extra_client_details\n        column:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResultsetColumnHeaderData'\n    ResultsetColumnHeaderData:\n      type: object\n      properties:\n        columnName:\n          type: string\n        columnType:\n          type: string\n        columnLength:\n          type: integer\n          format: int64\n        columnDisplayType:\n          type: string\n        columnCode:\n          type: string\n        dateDisplayType:\n          type: boolean\n        dateTimeDisplayType:\n          type: boolean\n        integerDisplayType:\n          type: boolean\n        decimalDisplayType:\n          type: boolean\n        booleanDisplayType:\n          type: boolean\n        codeValueDisplayType:\n          type: boolean\n        codeLookupDisplayType:\n          type: boolean\n        string:\n          type: boolean\n        mandatory:\n          type: boolean\n        optional:\n          type: boolean\n    PostDataTablesResponse:\n      type: object\n      properties:\n        resourceIdentifier:\n          type: string\n          example: extra_client_details\n    PostDataTablesRequest:\n      type: object\n      properties:\n        applicationTableName:\n          type: string\n          example: m_client\n        registeredTableName:\n          type: string\n          example: extra_client_details\n        multiRow:\n          type: boolean\n          example: true\n        columnHeaderData:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResultsetColumnHeaderData'\n    DeleteDataTablesResponse:\n      type: object\n      properties:\n        resourceIdentifier:\n          type: string\n          example: extra_client_details\n    PostDataTablesRegisterDatatableAppTable:\n      type: object\n    GetDataTablesAppTableIdResponse:\n      type: object\n      properties:\n        columnHeaders:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResultsetColumnHeaderData'\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResultsetRowData'\n    ResultsetRowData:\n      type: object\n      properties:\n        row:\n          type: array\n          items:\n            type: string\n    PostDataTablesAppTableIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostDataTablesAppTableIdRequest:\n      type: object\n      properties:\n        BusinessDescription:\n          type: string\n          example: Livestock sales\n        Comment:\n          type: string\n          example: First comment made\n        Education_cv:\n          type: string\n          example: Primary\n        Gender_cd:\n          type: integer\n          format: int64\n          example: 6\n        HighestRatePaid:\n          type: number\n          format: double\n          example: 8.5\n        NextVisit:\n          type: string\n          example: 01 October 2012\n        YearsinBusiness:\n          type: integer\n          format: int64\n          example: 5\n        dateFormat:\n          type: string\n          example: dd MMMM yyyy\n        locale:\n          type: string\n          example: en\n    PutDataTablesAppTableIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        changes:\n          $ref: '#/components/schemas/PutDataTablesAppTableIdResponseChanges'\n    PutDataTablesAppTableIdResponseChanges:\n      type: object\n      properties:\n        BusinessDescription:\n          type: string\n          example: Livestock sales updated\n    PutDataTablesAppTableIdRequest:\n      type: object\n      properties:\n        BusinessDescription:\n          type: string\n          example: Livestock sales updated\n    PutDataTablesAppTableIdDatatableIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PutDataTablesAppTableIdDatatableIdRequest:\n      type: object\n      properties:\n        DateOfBirth:\n          type: string\n          example: 01 June 1982\n        Education_cdHighest:\n          type: integer\n          format: int64\n          example: 5\n        Name:\n          type: string\n          example: June\n        OtherNotes:\n          type: string\n          example: More notes\n        PointsScore:\n          type: integer\n          format: int64\n          example: 20\n        dateFormat:\n          type: string\n          example: dd MMMM yyyy\n        locale:\n          type: string\n          example: en\n    DeleteDataTablesDatatableAppTableIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    DeleteDataTablesDatatableAppTableIdDatatableIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    DeleteEntityDatatableChecksTemplateResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostEntityDatatableChecksTemplateResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostEntityDatatableChecksTemplateRequest:\n      type: object\n      properties:\n        entity:\n          type: string\n          example: m_loan\n        status:\n          type: integer\n          format: int64\n          example: 100\n        datatableName:\n          type: string\n          example: Additional Details\n        productId:\n          type: integer\n          format: int64\n          example: 1\n    GetEntityDatatableChecksResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        entity:\n          type: string\n        status:\n          $ref: '#/components/schemas/EnumOptionData'\n        datatableName:\n          type: string\n        systemDefined:\n          type: boolean\n        order:\n          type: integer\n          format: int64\n        productId:\n          type: integer\n          format: int64\n        productName:\n          type: string\n    AppUser:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        email:\n          type: string\n        username:\n          type: string\n        firstname:\n          type: string\n        lastname:\n          type: string\n        password:\n          type: string\n        accountNonExpired:\n          type: boolean\n        accountNonLocked:\n          type: boolean\n        credentialsNonExpired:\n          type: boolean\n        enabled:\n          type: boolean\n        deleted:\n          type: boolean\n        office:\n          $ref: '#/components/schemas/Office'\n        staff:\n          $ref: '#/components/schemas/Staff'\n        roles:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Role'\n        lastTimePasswordUpdated:\n          type: string\n          format: date-time\n        passwordNeverExpires:\n          type: boolean\n        appUserClientMappings:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/AppUserClientMapping'\n        authorities:\n          type: array\n          items:\n            $ref: '#/components/schemas/GrantedAuthority'\n        selfServiceUser:\n          type: boolean\n        staffId:\n          type: integer\n          format: int64\n        staffDisplayName:\n          type: string\n        notEnabled:\n          type: boolean\n        new:\n          type: boolean\n    AppUserClientMapping:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        client:\n          $ref: '#/components/schemas/Client'\n        new:\n          type: boolean\n    Charge:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        amount:\n          type: number\n        currencyCode:\n          type: string\n        chargeTimeType:\n          type: integer\n          format: int32\n        chargeCalculation:\n          type: integer\n          format: int32\n        chargePaymentMode:\n          type: integer\n          format: int32\n        feeInterval:\n          type: integer\n          format: int32\n        penalty:\n          type: boolean\n        active:\n          type: boolean\n        deleted:\n          type: boolean\n        minCap:\n          type: number\n        maxCap:\n          type: number\n        account:\n          $ref: '#/components/schemas/GLAccount'\n        taxGroup:\n          $ref: '#/components/schemas/TaxGroup'\n        feeOnMonthDay:\n          $ref: '#/components/schemas/MonthDay'\n        savingsCharge:\n          type: boolean\n        annualFee:\n          type: boolean\n        monthlyFee:\n          type: boolean\n        overdueInstallment:\n          type: boolean\n        allowedLoanChargeTime:\n          type: boolean\n        allowedClientChargeTime:\n          type: boolean\n        allowedSavingsChargeTime:\n          type: boolean\n        loanCharge:\n          type: boolean\n        clientCharge:\n          type: boolean\n        allowedSavingsChargeCalculationType:\n          type: boolean\n        allowedClientChargeCalculationType:\n          type: boolean\n        percentageOfApprovedAmount:\n          type: boolean\n        percentageOfDisbursementAmount:\n          type: boolean\n        disbursementCharge:\n          type: boolean\n        new:\n          type: boolean\n    ChargeData:\n      type: object\n      properties:\n        penalty:\n          type: boolean\n        overdueInstallmentCharge:\n          type: boolean\n    Chronology:\n      type: object\n      properties:\n        zone:\n          $ref: '#/components/schemas/DateTimeZone'\n    Client:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        office:\n          $ref: '#/components/schemas/Office'\n        transferToOffice:\n          $ref: '#/components/schemas/Office'\n        image:\n          $ref: '#/components/schemas/Image'\n        status:\n          type: integer\n          format: int32\n        firstname:\n          type: string\n        middlename:\n          type: string\n        lastname:\n          type: string\n        displayName:\n          type: string\n        externalId:\n          type: string\n        staff:\n          $ref: '#/components/schemas/Staff'\n        groups:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Group'\n        accountNumberRequiresAutoGeneration:\n          type: boolean\n        closureDate:\n          type: string\n          format: date\n        withdrawalDate:\n          type: string\n          format: date\n        submittedOnDate:\n          type: string\n          format: date\n        legalForm:\n          type: integer\n          format: int32\n        reopenedDate:\n          type: string\n          format: date\n        active:\n          type: boolean\n        closed:\n          type: boolean\n        rejected:\n          type: boolean\n        rejectedDate:\n          type: string\n          format: date\n        notActive:\n          type: boolean\n        pending:\n          type: boolean\n        withdrawn:\n          type: boolean\n        transferInProgress:\n          type: boolean\n        transferOnHold:\n          type: boolean\n        transferInProgressOrOnHold:\n          type: boolean\n        notPending:\n          type: boolean\n        activationLocalDate:\n          type: string\n          format: date\n        officeJoiningLocalDate:\n          type: string\n          format: date\n        notStaff:\n          type: boolean\n        new:\n          type: boolean\n    CurrencyData:\n      type: object\n    DatatableCheckStatusData:\n      type: object\n    DatatableChecksData:\n      type: object\n    DateTimeField:\n      type: object\n      properties:\n        durationField:\n          $ref: '#/components/schemas/DurationField'\n        minimumValue:\n          type: integer\n          format: int32\n        maximumValue:\n          type: integer\n          format: int32\n        leapDurationField:\n          $ref: '#/components/schemas/DurationField'\n        rangeDurationField:\n          $ref: '#/components/schemas/DurationField'\n        lenient:\n          type: boolean\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/DateTimeFieldType'\n        supported:\n          type: boolean\n    DateTimeFieldType:\n      type: object\n      properties:\n        rangeDurationType:\n          $ref: '#/components/schemas/DurationFieldType'\n        durationType:\n          $ref: '#/components/schemas/DurationFieldType'\n        name:\n          type: string\n    DateTimeZone:\n      type: object\n      properties:\n        fixed:\n          type: boolean\n        id:\n          type: string\n    DurationField:\n      type: object\n      properties:\n        precise:\n          type: boolean\n        unitMillis:\n          type: integer\n          format: int64\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/DurationFieldType'\n        supported:\n          type: boolean\n    DurationFieldType:\n      type: object\n      properties:\n        name:\n          type: string\n    FloatingRate:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        floatingRatePeriods:\n          type: array\n          items:\n            $ref: '#/components/schemas/FloatingRatePeriod'\n        createdBy:\n          $ref: '#/components/schemas/AppUser'\n        modifiedBy:\n          $ref: '#/components/schemas/AppUser'\n        createdOn:\n          type: string\n          format: date-time\n        modifiedOn:\n          type: string\n          format: date-time\n        active:\n          type: boolean\n        baseLendingRate:\n          type: boolean\n        new:\n          type: boolean\n    FloatingRatePeriod:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        fromDate:\n          type: string\n          format: date-time\n        interestRate:\n          type: number\n        createdBy:\n          $ref: '#/components/schemas/AppUser'\n        modifiedBy:\n          $ref: '#/components/schemas/AppUser'\n        createdOn:\n          type: string\n          format: date-time\n        modifiedOn:\n          type: string\n          format: date-time\n        active:\n          type: boolean\n        floatingRatesId:\n          $ref: '#/components/schemas/FloatingRate'\n        differentialToBaseLendingRate:\n          type: boolean\n        new:\n          type: boolean\n    FundData:\n      type: object\n    GLAccount:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        children:\n          type: array\n          items:\n            $ref: '#/components/schemas/GLAccount'\n        name:\n          type: string\n        glCode:\n          type: string\n        disabled:\n          type: boolean\n        manualEntriesAllowed:\n          type: boolean\n        type:\n          type: integer\n          format: int32\n        usage:\n          type: integer\n          format: int32\n        headerAccount:\n          type: boolean\n        detailAccount:\n          type: boolean\n        new:\n          type: boolean\n    GetEntityDatatableChecksTemplateResponse:\n      type: object\n      properties:\n        entities:\n          type: array\n          items:\n            type: string\n        statusClient:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatatableCheckStatusData'\n        statusGroup:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatatableCheckStatusData'\n        statusSavings:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatatableCheckStatusData'\n        statusLoans:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatatableCheckStatusData'\n        datatables:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatatableChecksData'\n        loanProductDatas:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoanProductData'\n        savingsProductDatas:\n          type: array\n          items:\n            $ref: '#/components/schemas/SavingsProductData'\n    GrantedAuthority:\n      type: object\n      properties:\n        authority:\n          type: string\n    Group:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        office:\n          $ref: '#/components/schemas/Office'\n        staff:\n          $ref: '#/components/schemas/Staff'\n        parent:\n          $ref: '#/components/schemas/Group'\n        groupLevel:\n          $ref: '#/components/schemas/GroupLevel'\n        clientMembers:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Client'\n        submittedOnDate:\n          type: string\n          format: date\n        accountNumberRequiresAutoGeneration:\n          type: boolean\n        active:\n          type: boolean\n        closed:\n          type: boolean\n        activeClientMembers:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Client'\n        childGroup:\n          type: boolean\n        notActive:\n          type: boolean\n        pending:\n          type: boolean\n        transferInProgress:\n          type: boolean\n        transferOnHold:\n          type: boolean\n        group:\n          type: boolean\n        center:\n          type: boolean\n        transferInProgressOrOnHold:\n          type: boolean\n        notPending:\n          type: boolean\n        activationLocalDate:\n          type: string\n          format: date\n        new:\n          type: boolean\n    GroupLevel:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        parentId:\n          type: integer\n          format: int64\n        superParent:\n          type: boolean\n        levelName:\n          type: string\n        recursable:\n          type: boolean\n        group:\n          type: boolean\n        center:\n          type: boolean\n        new:\n          type: boolean\n    Image:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        location:\n          type: string\n        storageType:\n          type: integer\n          format: int32\n        new:\n          type: boolean\n    LoanProduct:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        shortName:\n          type: string\n        loanProductRelatedDetail:\n          $ref: '#/components/schemas/LoanProductRelatedDetail'\n        includeInBorrowerCycle:\n          type: boolean\n        startDate:\n          type: string\n          format: date\n        closeDate:\n          type: string\n          format: date\n        externalId:\n          type: string\n        minimumDaysBetweenDisbursalAndFirstRepayment:\n          type: integer\n          format: int32\n        productInterestRecalculationDetails:\n          $ref: '#/components/schemas/LoanProductInterestRecalculationDetails'\n        loanProductGuaranteeDetails:\n          $ref: '#/components/schemas/LoanProductGuaranteeDetails'\n        principalThresholdForLastInstallment:\n          type: number\n        installmentAmountInMultiplesOf:\n          type: integer\n          format: int32\n        floatingRates:\n          $ref: '#/components/schemas/LoanProductFloatingRates'\n        currency:\n          $ref: '#/components/schemas/MonetaryCurrency'\n        accountingType:\n          type: integer\n          format: int32\n        accrualBasedAccountingEnabled:\n          type: boolean\n        minNominalInterestRatePerPeriod:\n          type: number\n        maxNominalInterestRatePerPeriod:\n          type: number\n        minNumberOfRepayments:\n          type: integer\n          format: int32\n        maxNumberOfRepayments:\n          type: integer\n          format: int32\n        repaymentStrategy:\n          $ref: '#/components/schemas/LoanTransactionProcessingStrategy'\n        loanProductCharges:\n          type: array\n          items:\n            $ref: '#/components/schemas/Charge'\n        loanProductConfigurableAttributes:\n          $ref: '#/components/schemas/LoanProductConfigurableAttributes'\n        principalAmount:\n          $ref: '#/components/schemas/Money'\n        minPrincipalAmount:\n          $ref: '#/components/schemas/Money'\n        maxPrincipalAmount:\n          $ref: '#/components/schemas/Money'\n        arrearsBasedOnOriginalSchedule:\n          type: boolean\n        multiDisburseLoan:\n          type: boolean\n        interestRecalculationEnabled:\n          type: boolean\n        numberOfRepayments:\n          type: integer\n          format: int32\n        nominalInterestRatePerPeriod:\n          type: number\n        interestPeriodFrequencyType:\n          type: string\n          enum:\n          - DAYS\n          - WEEKS\n          - MONTHS\n          - YEARS\n          - INVALID\n        linkedToFloatingInterestRate:\n          type: boolean\n        cashBasedAccountingEnabled:\n          type: boolean\n        upfrontAccrualAccountingEnabled:\n          type: boolean\n        accountingDisabled:\n          type: boolean\n        periodicAccrualAccountingEnabled:\n          type: boolean\n        holdGuaranteeFundsEnabled:\n          type: boolean\n        new:\n          type: boolean\n    LoanProductBorrowerCycleVariationData:\n      type: object\n      properties:\n        borrowerCycleNumber:\n          type: integer\n          format: int32\n        paramType:\n          type: string\n          enum:\n          - INVALID\n          - PRINCIPAL\n          - INTERESTRATE\n          - REPAYMENT\n        valueConditionType:\n          type: string\n          enum:\n          - INVALID\n          - EQUAL\n          - GREATERTHAN\n        defaultValue:\n          type: number\n    LoanProductConfigurableAttributes:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        loanProduct:\n          $ref: '#/components/schemas/LoanProduct'\n        amortizationBoolean:\n          type: boolean\n        interestMethodBoolean:\n          type: boolean\n        transactionProcessingStrategyBoolean:\n          type: boolean\n        interestCalcPeriodBoolean:\n          type: boolean\n        arrearsToleranceBoolean:\n          type: boolean\n        repaymentEveryBoolean:\n          type: boolean\n        graceOnPrincipalAndInterestPaymentBoolean:\n          type: boolean\n        graceOnArrearsAgingBoolean:\n          type: boolean\n        new:\n          type: boolean\n    LoanProductData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        description:\n          type: string\n        fundId:\n          type: integer\n          format: int64\n        fundName:\n          type: string\n        currency:\n          $ref: '#/components/schemas/CurrencyData'\n        principal:\n          type: number\n        minPrincipal:\n          type: number\n        maxPrincipal:\n          type: number\n        numberOfRepayments:\n          type: integer\n          format: int32\n        repaymentEvery:\n          type: integer\n          format: int32\n        repaymentFrequencyType:\n          $ref: '#/components/schemas/EnumOptionData'\n        interestRatePerPeriod:\n          type: number\n        interestRateFrequencyType:\n          $ref: '#/components/schemas/EnumOptionData'\n        annualInterestRate:\n          type: number\n        interestRateDifferential:\n          type: number\n        minDifferentialLendingRate:\n          type: number\n        defaultDifferentialLendingRate:\n          type: number\n        maxDifferentialLendingRate:\n          type: number\n        amortizationType:\n          $ref: '#/components/schemas/EnumOptionData'\n        interestType:\n          $ref: '#/components/schemas/EnumOptionData'\n        interestCalculationPeriodType:\n          $ref: '#/components/schemas/EnumOptionData'\n        allowPartialPeriodInterestCalcualtion:\n          type: boolean\n        inArrearsTolerance:\n          type: number\n        transactionProcessingStrategyId:\n          type: integer\n          format: int64\n        transactionProcessingStrategyName:\n          type: string\n        graceOnPrincipalPayment:\n          type: integer\n          format: int32\n        recurringMoratoriumOnPrincipalPeriods:\n          type: integer\n          format: int32\n        graceOnInterestPayment:\n          type: integer\n          format: int32\n        graceOnInterestCharged:\n          type: integer\n          format: int32\n        graceOnArrearsAgeing:\n          type: integer\n          format: int32\n        daysInMonthType:\n          $ref: '#/components/schemas/EnumOptionData'\n        daysInYearType:\n          $ref: '#/components/schemas/EnumOptionData'\n        interestRecalculationData:\n          $ref: '#/components/schemas/LoanProductInterestRecalculationData'\n        principalVariationsForBorrowerCycle:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'\n        interestRateVariationsForBorrowerCycle:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'\n        numberOfRepaymentVariationsForBorrowerCycle:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'\n        fundOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FundData'\n        repaymentFrequencyTypeOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        interestRateFrequencyTypeOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        amortizationTypeOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        interestTypeOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        interestCalculationPeriodTypeOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        chargeOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ChargeData'\n        multiDisburseLoan:\n          type: boolean\n        outstandingLoanBalance:\n          type: number\n        getloanProductConfigurableAttributes:\n          $ref: '#/components/schemas/LoanProductConfigurableAttributes'\n        minimumGapBetweenInstallments:\n          type: integer\n          format: int32\n        maximumGapBetweenInstallments:\n          type: integer\n          format: int32\n        floatingInterestRateCalculationAllowed:\n          type: boolean\n        linkedToFloatingInterestRates:\n          type: boolean\n        variableInstallmentsAllowed:\n          type: boolean\n        compoundingToBePostedAsTransaction:\n          type: boolean\n        interestRecalculationEnabled:\n          type: boolean\n    LoanProductFloatingRates:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        loanProduct:\n          $ref: '#/components/schemas/LoanProduct'\n        floatingRate:\n          $ref: '#/components/schemas/FloatingRate'\n        interestRateDifferential:\n          type: number\n        minDifferentialLendingRate:\n          type: number\n        defaultDifferentialLendingRate:\n          type: number\n        maxDifferentialLendingRate:\n          type: number\n        floatingInterestRateCalculationAllowed:\n          type: boolean\n        new:\n          type: boolean\n    LoanProductGuaranteeDetails:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        mandatoryGuarantee:\n          type: number\n        minimumGuaranteeFromOwnFunds:\n          type: number\n        minimumGuaranteeFromGuarantor:\n          type: number\n        new:\n          type: boolean\n    LoanProductInterestRecalculationData:\n      type: object\n      properties:\n        interestRecalculationCompoundingType:\n          $ref: '#/components/schemas/EnumOptionData'\n        rescheduleStrategyType:\n          $ref: '#/components/schemas/EnumOptionData'\n        recalculationRestFrequencyType:\n          $ref: '#/components/schemas/EnumOptionData'\n        recalculationRestFrequencyInterval:\n          type: integer\n          format: int32\n        recalculationRestFrequencyNthDay:\n          $ref: '#/components/schemas/EnumOptionData'\n        recalculationRestFrequencyWeekday:\n          $ref: '#/components/schemas/EnumOptionData'\n        recalculationRestFrequencyOnDay:\n          type: integer\n          format: int32\n        recalculationCompoundingFrequencyType:\n          $ref: '#/components/schemas/EnumOptionData'\n        recalculationCompoundingFrequencyInterval:\n          type: integer\n          format: int32\n        recalculationCompoundingFrequencyNthDay:\n          $ref: '#/components/schemas/EnumOptionData'\n        recalculationCompoundingFrequencyWeekday:\n          $ref: '#/components/schemas/EnumOptionData'\n        recalculationCompoundingFrequencyOnDay:\n          type: integer\n          format: int32\n        compoundingToBePostedAsTransaction:\n          type: boolean\n    LoanProductInterestRecalculationDetails:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        interestRecalculationCompoundingMethod:\n          type: integer\n          format: int32\n        rescheduleStrategyMethod:\n          type: integer\n          format: int32\n        restFrequencyType:\n          type: string\n          enum:\n          - INVALID\n          - SAME_AS_REPAYMENT_PERIOD\n          - DAILY\n          - WEEKLY\n          - MONTHLY\n        restInterval:\n          type: integer\n          format: int32\n        restFrequencyNthDay:\n          type: integer\n          format: int32\n        restFrequencyWeekday:\n          type: integer\n          format: int32\n        restFrequencyOnDay:\n          type: integer\n          format: int32\n        compoundingFrequencyType:\n          type: string\n          enum:\n          - INVALID\n          - SAME_AS_REPAYMENT_PERIOD\n          - DAILY\n          - WEEKLY\n          - MONTHLY\n        compoundingInterval:\n          type: integer\n          format: int32\n        compoundingFrequencyNthDay:\n          type: integer\n          format: int32\n        compoundingFrequencyWeekday:\n          type: integer\n          format: int32\n        compoundingFrequencyOnDay:\n          type: integer\n          format: int32\n        isCompoundingToBePostedAsTransaction:\n          type: boolean\n        arrearsBasedOnOriginalSchedule:\n          type: boolean\n        new:\n          type: boolean\n    LoanProductRelatedDetail:\n      type: object\n      properties:\n        currency:\n          $ref: '#/components/schemas/MonetaryCurrency'\n        principal:\n          $ref: '#/components/schemas/Money'\n        nominalInterestRatePerPeriod:\n          type: number\n        interestPeriodFrequencyType:\n          type: string\n          enum:\n          - DAYS\n          - WEEKS\n          - MONTHS\n          - YEARS\n          - INVALID\n        annualNominalInterestRate:\n          type: number\n        interestMethod:\n          type: string\n          enum:\n          - DECLINING_BALANCE\n          - FLAT\n          - INVALID\n        interestCalculationPeriodMethod:\n          type: string\n          enum:\n          - DAILY\n          - SAME_AS_REPAYMENT_PERIOD\n          - INVALID\n        allowPartialPeriodInterestCalcualtion:\n          type: boolean\n        repayEvery:\n          type: integer\n          format: int32\n        repaymentPeriodFrequencyType:\n          type: string\n          enum:\n          - DAYS\n          - WEEKS\n          - MONTHS\n          - YEARS\n          - INVALID\n        numberOfRepayments:\n          type: integer\n          format: int32\n        graceOnPrincipalPayment:\n          type: integer\n          format: int32\n        graceOnInterestPayment:\n          type: integer\n          format: int32\n        amortizationMethod:\n          type: string\n          enum:\n          - EQUAL_PRINCIPAL\n          - EQUAL_INSTALLMENTS\n          - INVALID\n        inArrearsTolerance:\n          $ref: '#/components/schemas/Money'\n        graceOnArrearsAgeing:\n          type: integer\n          format: int32\n        arrearsTolerance:\n          type: number\n        interestRecalculationEnabled:\n          type: boolean\n        graceOnDueDate:\n          type: integer\n          format: int32\n    LoanTransactionProcessingStrategy:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        standardStrategy:\n          type: boolean\n        heavensfamilyStrategy:\n          type: boolean\n        earlyPaymentStrategy:\n          type: boolean\n        creocoreStrategy:\n          type: boolean\n        indianRBIStrategy:\n          type: boolean\n        principalInterestPenaltiesFeesOrderStrategy:\n          type: boolean\n        interestPrincipalPenaltiesFeesOrderStrategy:\n          type: boolean\n        new:\n          type: boolean\n    MonetaryCurrency:\n      type: object\n      properties:\n        code:\n          type: string\n        digitsAfterDecimal:\n          type: integer\n          format: int32\n        currencyInMultiplesOf:\n          type: integer\n          format: int32\n    Money:\n      type: object\n      properties:\n        currencyCode:\n          type: string\n        currencyDigitsAfterDecimal:\n          type: integer\n          format: int32\n        amount:\n          type: number\n        currency:\n          $ref: '#/components/schemas/MonetaryCurrency'\n        zero:\n          type: boolean\n        currencyInMultiplesOf:\n          type: integer\n          format: int32\n        amountDefaultedToNullIfZero:\n          type: number\n        lessThanZero:\n          type: boolean\n        greaterThanZero:\n          type: boolean\n    MonthDay:\n      type: object\n      properties:\n        dayOfMonth:\n          type: integer\n          format: int32\n        fieldTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/DateTimeFieldType'\n        monthOfYear:\n          type: integer\n          format: int32\n        chronology:\n          $ref: '#/components/schemas/Chronology'\n        values:\n          type: array\n          items:\n            type: integer\n            format: int32\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/DateTimeField'\n    Office:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        hierarchy:\n          type: string\n        openingLocalDate:\n          type: string\n          format: date\n        new:\n          type: boolean\n    Permission:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        grouping:\n          type: string\n        code:\n          type: string\n        new:\n          type: boolean\n    Role:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        disabled:\n          type: boolean\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n        enabled:\n          type: boolean\n        new:\n          type: boolean\n    SavingsProductData:\n      type: object\n      properties:\n        name:\n          type: string\n        depositAccountType:\n          type: string\n    Staff:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        loanOfficer:\n          type: boolean\n        active:\n          type: boolean\n        image:\n          $ref: '#/components/schemas/Image'\n        notActive:\n          type: boolean\n        notLoanOfficer:\n          type: boolean\n        new:\n          type: boolean\n    TaxComponent:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        createdBy:\n          $ref: '#/components/schemas/AppUser'\n        createdDate:\n          type: string\n          format: date-time\n        lastModifiedBy:\n          $ref: '#/components/schemas/AppUser'\n        lastModifiedDate:\n          type: string\n          format: date-time\n        percentage:\n          type: number\n        debitAccountType:\n          type: integer\n          format: int32\n        debitAcount:\n          $ref: '#/components/schemas/GLAccount'\n        creditAccountType:\n          type: integer\n          format: int32\n        creditAcount:\n          $ref: '#/components/schemas/GLAccount'\n        taxComponentHistories:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/TaxComponentHistory'\n        taxGroupMappings:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/TaxGroupMappings'\n        new:\n          type: boolean\n    TaxComponentHistory:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        createdBy:\n          $ref: '#/components/schemas/AppUser'\n        createdDate:\n          type: string\n          format: date-time\n        lastModifiedBy:\n          $ref: '#/components/schemas/AppUser'\n        lastModifiedDate:\n          type: string\n          format: date-time\n        percentage:\n          type: number\n        new:\n          type: boolean\n    TaxGroup:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        createdBy:\n          $ref: '#/components/schemas/AppUser'\n        createdDate:\n          type: string\n          format: date-time\n        lastModifiedBy:\n          $ref: '#/components/schemas/AppUser'\n        lastModifiedDate:\n          type: string\n          format: date-time\n        name:\n          type: string\n        taxGroupMappings:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/TaxGroupMappings'\n        new:\n          type: boolean\n    TaxGroupMappings:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        createdBy:\n          $ref: '#/components/schemas/AppUser'\n        createdDate:\n          type: string\n          format: date-time\n        lastModifiedBy:\n          $ref: '#/components/schemas/AppUser'\n        lastModifiedDate:\n          type: string\n          format: date-time\n        taxComponent:\n          $ref: '#/components/schemas/TaxComponent'\n        endDate:\n          type: string\n          format: date-time\n        new:\n          type: boolean\n    PutReportResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 132\n        changes:\n          $ref: '#/components/schemas/PutReportResponseChanges'\n    PutReportResponseChanges:\n      type: object\n      properties:\n        reportName:\n          type: string\n          example: Changed New Report\n        reportParameters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportParameterData'\n    ReportParameterData:\n      type: object\n    PutReportRequest:\n      type: object\n      properties:\n        reportName:\n          type: string\n          example: Completely New Report\n        reportParameters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportParameterData'\n    DeleteReportsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 132\n    GetReportsResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        reportName:\n          type: string\n          example: Client Listing\n        reportType:\n          type: string\n          example: Table\n        reportSubType:\n          type: string\n        reportCategory:\n          type: string\n          example: Client\n        description:\n          type: string\n          example: Individual Client Report Lists the small number of defined fields\n            on the client table.  Would expect to copy this report and add any one\n            to one additional data for specific tenant needs. Can be run for any size\n            MFI but you expect it only to be run within a branch for larger ones.  Depending\n            on how many columns are displayed, there is probably is a limit of about\n            20/50k clients returned for html display (export to excel doesnt have\n            that client browser/memory impact).\n        reportSql:\n          type: string\n        coreReport:\n          type: boolean\n          example: true\n        useReport:\n          type: boolean\n          example: true\n        reportParameters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportParameterData'\n    GetReportsTemplateResponse:\n      type: object\n      properties:\n        allowedReportTypes:\n          type: array\n          items:\n            type: string\n        allowedReportSubTypes:\n          type: array\n          items:\n            type: string\n        allowedParameters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportParameterData'\n    PostReportsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 132\n    PostRepostRequest:\n      type: object\n      properties:\n        reportName:\n          type: string\n          example: Completely New Report\n        reportType:\n          type: string\n          example: Table\n        reportSubType:\n          type: string\n        reportCategory:\n          type: string\n          example: Loan\n        description:\n          type: string\n          example: Just An Example\n        reportSql:\n          type: string\n          example: select 'very good sql' as AComment\n        reportParameters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReportParameterData'\n    GetReportNameResponse:\n      type: object\n      properties:\n        columnHeaders:\n          $ref: '#/components/schemas/ResultsetColumnHeaderData'\n        row:\n          $ref: '#/components/schemas/ResultsetRowData'\n    GetEntityTypeEntityIdDocumentsResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        parentEntityType:\n          type: string\n          example: clients\n        parentEntityId:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Client Details Form\n        fileName:\n          type: string\n          example: CGAP.pdf\n        size:\n          type: integer\n          format: int64\n          example: 5246719\n        type:\n          type: string\n          example: application/pdf\n        description:\n          type: string\n          example: A signed form signed by new member\n        location:\n          type: string\n        storageType:\n          type: integer\n          format: int32\n    PutEntityTypeEntityIdDocumentsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 3\n        changes:\n          $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'\n        resourceIdentifier:\n          type: string\n          example: \"3\"\n    PutEntityTypeEntityIdDocumentsResponseChangesSwagger:\n      type: object\n    DeleteEntityTypeEntityIdDocumentsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 3\n        changes:\n          $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'\n        resourceIdentifier:\n          type: string\n          example: \"3\"\n    PostEntityTypeEntityIdDocumentsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 3\n        resourceIdentifier:\n          type: string\n          example: \"3\"\n    Event:\n      type: object\n      properties:\n        actionName:\n          type: string\n        entityName:\n          type: string\n    Field:\n      type: object\n      properties:\n        fieldName:\n          type: string\n        fieldValue:\n          type: string\n        fieldType:\n          type: string\n    GetHookResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Web\n        displayName:\n          type: string\n          example: Kremlin\n        isActive:\n          type: boolean\n          example: true\n        createdAt:\n          type: string\n          format: date\n        updatedAt:\n          type: string\n          format: date\n        templateId:\n          type: integer\n          format: int64\n          example: 1\n        templateName:\n          type: string\n          example: My UGD\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        config:\n          type: array\n          items:\n            $ref: '#/components/schemas/Field'\n    PostHookResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n    PostHookRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Web\n        isActive:\n          type: boolean\n          example: true\n        displayName:\n          type: string\n          example: Kremlin\n        templateId:\n          type: integer\n          format: int64\n          example: 1\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        config:\n          type: array\n          items:\n            $ref: '#/components/schemas/Field'\n    PutHookResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n        changes:\n          $ref: '#/components/schemas/PutHookResponseChangesSwagger'\n    PutHookResponseChangesSwagger:\n      type: object\n      properties:\n        displayName:\n          type: string\n          example: Kremlin\n        events:\n          type: array\n          example: \"1\"\n          items:\n            $ref: '#/components/schemas/Event'\n        config:\n          type: array\n          items:\n            $ref: '#/components/schemas/Field'\n    PutHookRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Web\n        isActive:\n          type: boolean\n          example: true\n        displayName:\n          type: string\n          example: Kremlin\n        templateId:\n          type: integer\n          format: int64\n          example: 1\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n        config:\n          type: array\n          items:\n            $ref: '#/components/schemas/Field'\n    DeleteHookResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 4\n    GetHookTemplateResponse:\n      type: object\n      properties:\n        templates:\n          type: array\n          items:\n            $ref: '#/components/schemas/HookTemplateData'\n        groupings:\n          type: array\n          items:\n            $ref: '#/components/schemas/Grouping'\n    Grouping:\n      type: object\n      properties:\n        name:\n          type: string\n    HookTemplateData:\n      type: object\n      properties:\n        serviceId:\n          type: integer\n          format: int64\n    GetSchedulerResponse:\n      type: object\n      properties:\n        active:\n          type: boolean\n          example: true\n    GetJobsJobIDJobRunHistoryResponse:\n      type: object\n      properties:\n        totalFilteredRecords:\n          type: integer\n          format: int32\n          example: 8\n        pageItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/JobDetailHistoryDataSwagger'\n    JobDetailHistoryDataSwagger:\n      type: object\n      properties:\n        version:\n          type: integer\n          format: int64\n          example: 1\n        jobRunStartTime:\n          type: string\n          format: date-time\n        jobRunEndTime:\n          type: string\n          format: date-time\n        status:\n          type: string\n          example: success\n        triggerType:\n          type: string\n          example: cron\n    PutJobsJobsIDRequest:\n      type: object\n      properties:\n        displayName:\n          type: string\n          example: Update loan Summary\n        cronExpression:\n          type: string\n          example: 0 0 22 1/1 * ? *\n        active:\n          type: boolean\n          example: false\n    GetJobsResponse:\n      type: object\n      properties:\n        jobId:\n          type: integer\n          format: int64\n          example: 1\n        displayName:\n          type: string\n          example: Update loan Summary\n        nextRunTime:\n          type: string\n          format: date-time\n        initializingError:\n          type: string\n        cronExpression:\n          type: string\n          example: 0 0 22 1/1 * ? *\n        active:\n          type: boolean\n          example: false\n        currentlyRunning:\n          type: boolean\n          example: false\n        lastRunHistory:\n          $ref: '#/components/schemas/JobDetailHistoryData'\n    JobDetailHistoryData:\n      type: object\n    PostReportMailingJobsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostReportMailingJobsRequest:\n      type: object\n      properties:\n        locale:\n          type: string\n          example: en_GB\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy HH:mm:ss\n        name:\n          type: string\n          example: Client Numbers Report\n        description:\n          type: string\n          example: Client Numbers Report\n        startDateTime:\n          type: string\n          format: date-time\n        stretchyReportId:\n          type: integer\n          format: int64\n          example: 120\n        emailRecipients:\n          type: string\n          example: info@musonisystem.com\n        emailSubject:\n          type: string\n          example: Client Numbers Report\n        emailMessage:\n          type: string\n          example: Client Numbers Report\n        recurrence:\n          type: string\n          example: FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR\n        isActive:\n          type: boolean\n          example: true\n        stretchyReportParamMap:\n          type: string\n          example: '{\"startDate\":\"2016-07-01\",\"endDate\":\"2016-08-02\",\"selectOffice\":\"1\",\"environementUrl\":\"environementUrl\"}'\n    PutReportMailingJobsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        changes:\n          $ref: '#/components/schemas/PutReportMailingJobsResponseChanges'\n    PutReportMailingJobsResponseChanges:\n      type: object\n      properties:\n        startDateTime:\n          type: string\n          format: date-time\n    PutReportMailingJobsRequest:\n      type: object\n      properties:\n        locale:\n          type: string\n          example: en_GB\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy HH:mm:ss\n        startDateTime:\n          type: string\n          format: date-time\n    DeleteReportMailingJobsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    DeleteReportMailingJobsRequest:\n      type: object\n    GetReportMailingJobsResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Client Numbers Report\n        description:\n          type: string\n          example: Client Numbers Report\n        startDateTime:\n          type: string\n          format: date-time\n        recurrence:\n          type: string\n        timeline:\n          $ref: '#/components/schemas/ReportMailingJobTimelineData'\n        emailRecipients:\n          type: string\n          example: info@musonisystem.com\n        emailSubject:\n          type: string\n          example: Client Numbers Report\n        emailMessage:\n          type: string\n          example: Client Numbers Report\n        emailAttachmentFileFormat:\n          $ref: '#/components/schemas/EnumOptionData'\n        stretchyReport:\n          $ref: '#/components/schemas/ReportData'\n        stretchyReportParamMap:\n          type: string\n          example: '{\"startDate\":\"2016-07-01\",\"endDate\":\"2016-08-02\",\"selectOffice\":\"1\",\"environementUrl\":\"environementUrl\"}'\n        nextRunDateTime:\n          type: string\n          format: date-time\n        numberOfRuns:\n          type: integer\n          format: int32\n          example: 0\n        isActive:\n          type: boolean\n          example: true\n        runAsUserId:\n          type: integer\n          format: int64\n          example: 1\n    ReportData:\n      type: object\n    ReportMailingJobTimelineData:\n      type: object\n    GetReportMailingJobsTemplate:\n      type: object\n      properties:\n        isActive:\n          type: boolean\n          example: true\n        emailAttachmentFileFormatOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n        stretchyReportParamDateOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n    ReportMailingJobRunHistoryData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        reportMailingJobId:\n          type: integer\n          format: int64\n        startDateTime:\n          type: string\n          format: date-time\n        endDateTime:\n          type: string\n          format: date-time\n        status:\n          type: string\n        errorMessage:\n          type: string\n        errorLog:\n          type: string\n    PostAuthenticationResponse:\n      type: object\n      properties:\n        username:\n          type: string\n          example: mifos\n        userId:\n          type: integer\n          format: int64\n          example: 1\n        base64EncodedAuthenticationKey:\n          type: string\n          example: bWlmb3M6cGFzc3dvcmQ=\n        authenticated:\n          type: boolean\n          example: true\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        staffId:\n          type: integer\n          format: int64\n          example: 1\n        staffDisplayName:\n          type: string\n          example: Director, Program\n        organisationalRole:\n          $ref: '#/components/schemas/EnumOptionData'\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleData'\n        permissions:\n          type: array\n          example: ALL_FUNCTIONS\n          items:\n            type: string\n    RoleData:\n      type: object\n    GetUserDetailsResponse:\n      type: object\n      properties:\n        username:\n          type: string\n          example: mifos\n        userId:\n          type: integer\n          format: int64\n          example: 1\n        accessToken:\n          type: string\n          example: bWlmb3M6cGFzc3dvcmQ=\n        authenticated:\n          type: boolean\n          example: true\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        staffId:\n          type: integer\n          format: int64\n          example: 1\n        staffDisplayName:\n          type: string\n          example: mifosStaffDisplayName\n        organisationalRole:\n          $ref: '#/components/schemas/EnumOptionData'\n        roles:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleData'\n        permissions:\n          type: array\n          example: ALL_FUNCTIONS\n          items:\n            type: string\n    PostSurveySurveyNameApptableIdResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 2\n        clientId:\n          type: integer\n          format: int64\n          example: 87\n        resourceId:\n          type: integer\n          format: int64\n          example: 87\n    PostSurveySurveyNameApptableIdRequest:\n      type: object\n      properties:\n        ppi_household_members_cd_q1_householdmembers:\n          type: integer\n          format: int64\n          example: 167\n        ppi_highestschool_cd_q2_highestschool:\n          type: integer\n          format: int64\n          example: 174\n        ppi_businessoccupation_cd_q3_businessoccupation:\n          type: integer\n          format: int64\n          example: 180\n        ppi_habitablerooms_cd_q4_habitablerooms:\n          type: integer\n          format: int64\n          example: 184\n        ppi_floortype_cd_q5_floortype:\n          type: integer\n          format: int64\n          example: 188\n        ppi_lightingsource_cd_q6_lightingsource:\n          type: integer\n          format: int64\n          example: 190\n        ppi_irons_cd_q7_irons:\n          type: integer\n          format: int64\n          example: 193\n        ppi_mosquitonets_cd_q8_mosquitonets:\n          type: integer\n          format: int64\n          example: 195\n        ppi_towels_cd_q9_towels:\n          type: integer\n          format: int64\n          example: 198\n        ppi_fryingpans_cd_q10_fryingpans:\n          type: integer\n          format: int64\n          example: 201\n        Date:\n          type: string\n          format: date-time\n        dateFormat:\n          type: string\n          format: date-time\n        locale:\n          type: string\n          example: en_GB\n    GetSurveyResponse:\n      type: object\n      properties:\n        datatableData:\n          $ref: '#/components/schemas/GetSurveyResponseDatatableData'\n        enabled:\n          type: boolean\n          example: false\n    GetSurveyResponseDatatableData:\n      type: object\n      properties:\n        applicationTableName:\n          type: string\n          example: m_client\n        registeredTableName:\n          type: string\n          example: ppi_kenya_2005\n        columnHeaderData:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResultsetColumnHeaderData'\n    PostHolidaysHolidayIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostHolidaysHolidayIdRequest:\n      type: object\n    PostHolidaysResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostHolidaysRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Good Friday\n        description:\n          type: string\n          example: Good Friday\n        dateFormat:\n          type: string\n          example: dd MMMM yyyy\n        locale:\n          type: string\n          example: en\n        fromDate:\n          type: string\n          format: date\n        toDate:\n          type: string\n          format: date\n        repaymentsRescheduledTo:\n          type: string\n          format: date\n        offices:\n          type: array\n          items:\n            $ref: '#/components/schemas/PostHolidaysRequestOffices'\n    PostHolidaysRequestOffices:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n    GetHolidaysResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Good Friday\n        fromDate:\n          type: string\n          format: date\n        toDate:\n          type: string\n          format: date\n        repaymentsRescheduledTo:\n          type: string\n          format: date\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        status:\n          $ref: '#/components/schemas/EnumOptionData'\n    PutHolidaysHolidayIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        changes:\n          $ref: '#/components/schemas/PutHolidaysHolidayIdResponseChanges'\n    PutHolidaysHolidayIdResponseChanges:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Independence day\n        description:\n          type: string\n          example: Holiday for Independence day celebration\n    PutHolidaysHolidayIdRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Independence day\n        description:\n          type: string\n          example: Holiday for Independence day celebration\n    DeleteHolidaysHolidayIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    GetCurrenciesResponse:\n      type: object\n      properties:\n        selectedCurrencyOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CurrencyData'\n        currencyOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CurrencyData'\n    PutCurrenciesResponse:\n      type: object\n      properties:\n        currencies:\n          type: string\n          example: |-\n            [\"KES\",\n                    \"BND\",\n                    \"LBP\",\n                    \"GHC\",\n                    \"USD\",\n                    \"XOF\",\n                    \"AED\",\n                    \"AMD\"]\n    PutCurrenciesRequest:\n      type: object\n      properties:\n        currencies:\n          type: string\n          example: |-\n            [\"KES\",\n                    \"BND\",\n                    \"LBP\",\n                    \"GHC\",\n                    \"USD\",\n                    \"XOF\",\n                    \"AED\",\n                    \"AMD\"]\n    GetOfficesResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Head Office\n        nameDecorated:\n          type: string\n          example: Head Office\n        externalId:\n          type: string\n          example: \"1\"\n        openingDate:\n          type: string\n          format: date\n        hierarchy:\n          type: string\n          example: \".\"\n    GetOfficesTemplateResponse:\n      type: object\n      properties:\n        openingDate:\n          type: string\n          format: date\n        allowedParents:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetOfficesResponse'\n    PostOfficesResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 3\n        resourceId:\n          type: integer\n          format: int64\n          example: 3\n    PostOfficesRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Good Friday\n        dateFormat:\n          type: string\n          example: dd MMMM yyyy\n        locale:\n          type: string\n          example: en\n        openingDate:\n          type: string\n          format: date\n        parentId:\n          type: integer\n          format: int64\n          example: 2\n        externalId:\n          type: string\n          example: SYS54-88\n    PutOfficesOfficeIdResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 3\n        resourceId:\n          type: integer\n          format: int64\n          example: 3\n        changes:\n          $ref: '#/components/schemas/PutOfficesOfficeIdResponseChanges'\n    PutOfficesOfficeIdResponseChanges:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Name is updated\n    PutOfficesOfficeIdRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Name is updated\n    GetProvisioningCriteriaCriteriaIdResponse:\n      type: object\n      properties:\n        criteriaId:\n          type: integer\n          format: int64\n          example: 1\n        criteriaName:\n          type: string\n          example: High Risk Products Criteria\n        createdBy:\n          type: string\n          example: mifos\n        loanProducts:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoanProductData'\n        provisioningcriteria:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'\n    ProvisioningCriteriaDefinitionData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        categoryId:\n          type: integer\n          format: int64\n        categoryName:\n          type: string\n        minAge:\n          type: integer\n          format: int64\n        maxAge:\n          type: integer\n          format: int64\n        provisioningPercentage:\n          type: number\n        liabilityAccount:\n          type: integer\n          format: int64\n        liabilityCode:\n          type: string\n        expenseAccount:\n          type: integer\n          format: int64\n        expenseCode:\n          type: string\n    GetProvisioningCriteriaResponse:\n      type: object\n      properties:\n        criteriaId:\n          type: integer\n          format: int64\n          example: 1\n        criteriaName:\n          type: string\n          example: High Risk Products Criteria\n        createdBy:\n          type: string\n          example: mifos\n    PostProvisioningCriteriaResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostProvisioningCriteriaRequest:\n      type: object\n      properties:\n        criteriaName:\n          type: string\n          example: High Risk Products Criteria\n        loanProducts:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoanProductData'\n        provisioningcriteria:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'\n    PutProvisioningCriteriaResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        changes:\n          $ref: '#/components/schemas/PutProvisioningCriteriaResponseChanges'\n    PutProvisioningCriteriaResponseChanges:\n      type: object\n      properties:\n        criteriaName:\n          type: string\n          example: High Risk Products Criteria\n    PutProvisioningCriteriaRequest:\n      type: object\n      properties:\n        criteriaName:\n          type: string\n          example: High Risk Products Criteria\n        loanProducts:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoanProductData'\n        provisioningcriteria:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'\n    DeleteProvisioningCriteriaResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    GetStaffResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        firstname:\n          type: string\n          example: John\n        lastname:\n          type: string\n          example: Doe\n        displayName:\n          type: string\n          example: Doe, John\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        isLoanOfficer:\n          type: boolean\n          example: true\n        externalId:\n          type: string\n          example: 17H\n        isActive:\n          type: boolean\n          example: false\n        joiningDate:\n          type: string\n          format: date\n    PostStaffResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostStaffRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        firstname:\n          type: string\n          example: John\n        lastname:\n          type: string\n          example: Doe\n        isLoanOfficer:\n          type: boolean\n          example: true\n        externalId:\n          type: string\n          example: 17H\n        mobileNo:\n          type: string\n          example: +353851239876\n        isActive:\n          type: boolean\n          example: true\n        joiningDate:\n          type: string\n          format: date\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd MMMM yyyy\n    PutStaffResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PutStaffRequest:\n      type: object\n      properties:\n        isLoanOfficer:\n          type: boolean\n          example: false\n        externalId:\n          type: string\n          example: 17Hbb\n    GetTellersResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 3\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        debitAccountId:\n          type: integer\n          format: int64\n          example: 0\n        creditAccountId:\n          type: integer\n          format: int64\n          example: 0\n        name:\n          type: string\n          example: Teller3\n        startDate:\n          type: string\n          format: date\n        status:\n          type: string\n          example: ACTIVE\n          enum:\n          - INVALID\n          - PENDING\n          - ACTIVE\n          - INACTIVE\n          - CLOSED\n        officeName:\n          type: string\n          example: Head Office\n    PostTellersResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 5\n    PostTellersRequest:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Teller3\n        description:\n          type: string\n          example: cash handling\n        status:\n          type: string\n          example: ACTIVE\n          enum:\n          - INVALID\n          - PENDING\n          - ACTIVE\n          - INACTIVE\n          - CLOSED\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy\n        startDate:\n          type: string\n          format: date\n    PutTellersResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 5\n        changes:\n          $ref: '#/components/schemas/PutTellersResponseChanges'\n    PutTellersResponseChanges:\n      type: object\n      properties:\n        description:\n          type: string\n          example: teller cash handling\n        endDate:\n          type: string\n          format: date\n        startDate:\n          type: string\n          format: date\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy\n    PutTellersRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Teller3\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        description:\n          type: string\n          example: teller cash handling\n        status:\n          type: string\n          example: ACTIVE\n          enum:\n          - INVALID\n          - PENDING\n          - ACTIVE\n          - INACTIVE\n          - CLOSED\n        endDate:\n          type: string\n          format: date\n        startDate:\n          type: string\n          format: date\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy\n    CashierData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        tellerId:\n          type: integer\n          format: int64\n        officeId:\n          type: integer\n          format: int64\n        staffId:\n          type: integer\n          format: int64\n        description:\n          type: string\n        startDate:\n          type: string\n          format: date-time\n        endDate:\n          type: string\n          format: date-time\n        startTime:\n          type: string\n        endTime:\n          type: string\n        officeName:\n          type: string\n        tellerName:\n          type: string\n        staffName:\n          type: string\n        fullDay:\n          type: boolean\n    GetTellersTellerIdCashiersResponse:\n      type: object\n      properties:\n        tellerId:\n          type: integer\n          format: int64\n          example: 1\n        tellerName:\n          type: string\n          example: Teller1\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        cashiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/CashierData'\n    GetTellersTellerIdCashiersCashierIdResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        tellerId:\n          type: integer\n          format: int64\n          example: 1\n        staffId:\n          type: integer\n          format: int64\n          example: 1\n        description:\n          type: string\n        startDate:\n          type: string\n          format: date\n        endDate:\n          type: string\n          format: date\n        isFullDay:\n          type: boolean\n          example: true\n        startTime:\n          type: string\n        endTime:\n          type: string\n        tellerName:\n          type: string\n          example: Teller1\n        staffName:\n          type: string\n          example: Staff1, Test\n    GetTellersTellerIdCashiersTemplateResponse:\n      type: object\n      properties:\n        tellerId:\n          type: integer\n          format: int64\n          example: 1\n        tellerName:\n          type: string\n          example: Teller1\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        staffOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/StaffData'\n    StaffData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        firstname:\n          type: string\n        lastname:\n          type: string\n        displayName:\n          type: string\n        officeId:\n          type: integer\n          format: int64\n        officeName:\n          type: string\n        joiningDate:\n          type: string\n          format: date\n    PostTellersTellerIdCashiersResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        subResourceId:\n          type: integer\n          format: int64\n          example: 2\n    PostTellersTellerIdCashiersRequest:\n      type: object\n      properties:\n        endDate:\n          type: string\n          format: date\n        description:\n          type: string\n          example: teller cash handling\n        isFullDay:\n          type: boolean\n          example: true\n        staffId:\n          type: integer\n          format: int64\n          example: 3\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy\n        startDate:\n          type: string\n          format: date\n    PutTellersTellerIdCashiersCashierIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        subResourceId:\n          type: integer\n          format: int64\n          example: 2\n        changes:\n          $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponseChanges'\n    PutTellersTellerIdCashiersCashierIdResponseChanges:\n      type: object\n      properties:\n        endDate:\n          type: string\n          format: date\n        description:\n          type: string\n          example: Cashier updated.\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy\n    PutTellersTellerIdCashiersCashierIdRequest:\n      type: object\n      properties:\n        endDate:\n          type: string\n          format: date\n        description:\n          type: string\n          example: Cashier updated.\n        isFullDay:\n          type: boolean\n          example: true\n        staffId:\n          type: integer\n          format: int64\n          example: 1\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy\n        startDate:\n          type: string\n          format: date\n    DeleteTellersTellerIdCashiersCashierIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostTellersTellerIdCashiersCashierIdAllocateResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        subResourceId:\n          type: integer\n          format: int64\n          example: 4\n    PostTellersTellerIdCashiersCashierIdAllocateRequest:\n      type: object\n      properties:\n        currencyCode:\n          type: string\n          example: USD\n        txnAmount:\n          type: number\n          example: 5000.0\n        txnNote:\n          type: string\n          example: allocating cash\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy\n        txnDate:\n          type: string\n          format: date-time\n    PostTellersTellerIdCashiersCashierIdSettleResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        subResourceId:\n          type: integer\n          format: int64\n          example: 5\n    PostTellersTellerIdCashiersCashierIdSettleRequest:\n      type: object\n      properties:\n        currencyCode:\n          type: string\n          example: USD\n        txnAmount:\n          type: number\n          example: 2000.0\n        txnNote:\n          type: string\n          example: cash settlement\n        locale:\n          type: string\n          example: en\n        dateFormat:\n          type: string\n          example: dd-MM-yyyy\n        txnDate:\n          type: string\n          format: date-time\n    CashierTxnType:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        value:\n          type: string\n    GetTellersTellerIdCashiersCashiersIdTransactionsResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 8\n        cashierId:\n          type: integer\n          format: int64\n          example: 15\n        txnType:\n          $ref: '#/components/schemas/CashierTxnType'\n        txnAmount:\n          type: number\n          example: 1000.0\n        txnDate:\n          type: string\n          format: date-time\n        entityId:\n          type: integer\n          format: int64\n          example: 2\n        entityType:\n          type: string\n          example: loans\n        txnNote:\n          type: string\n          example: Disbursement, Loan:2-000000002,Client:1-Test 1\n        createdDate:\n          type: string\n          format: date-time\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        tellerId:\n          type: integer\n          format: int64\n          example: 0\n        cashierName:\n          type: string\n          example: B, Ramesh\n    CashierTransactionData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        cashierId:\n          type: integer\n          format: int64\n        txnType:\n          $ref: '#/components/schemas/CashierTxnType'\n        txnAmount:\n          type: number\n        txnDate:\n          type: string\n          format: date-time\n        entityId:\n          type: integer\n          format: int64\n        entityType:\n          type: string\n        txnNote:\n          type: string\n        createdDate:\n          type: string\n          format: date-time\n        officeId:\n          type: integer\n          format: int64\n        officeName:\n          type: string\n        tellerId:\n          type: integer\n          format: int64\n        tellerName:\n          type: string\n        cashierName:\n          type: string\n        cashierData:\n          $ref: '#/components/schemas/CashierData'\n        startDate:\n          type: string\n          format: date-time\n        endDate:\n          type: string\n          format: date-time\n    GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse:\n      type: object\n      properties:\n        sumCashAllocation:\n          type: number\n          example: 7000.0\n        sumInwardCash:\n          type: number\n          example: 0.0\n        sumOutwardCash:\n          type: number\n          example: 0.0\n        sumCashSettlement:\n          type: number\n          example: 50.0\n        netCash:\n          type: number\n          example: 6950.0\n        officeName:\n          type: string\n          example: Head Office\n        tellerId:\n          type: integer\n          format: int64\n          example: 1\n        tellerName:\n          type: string\n          example: Teller1\n        cashierId:\n          type: integer\n          format: int64\n          example: 1\n        cashierName:\n          type: string\n          example: Staff1, Test\n        cashierTransactions:\n          $ref: '#/components/schemas/PageCashierTransactionData'\n    Page:\n      type: object\n      properties:\n        totalFilteredRecords:\n          type: integer\n          format: int32\n        pageItems:\n          type: array\n          items:\n            type: object\n            properties: {}\n    PageCashierTransactionData:\n      type: object\n      properties:\n        totalFilteredRecords:\n          type: integer\n          format: int32\n        pageItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/CashierTransactionData'\n    GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse:\n      type: object\n      properties:\n        cashierId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        tellerId:\n          type: integer\n          format: int64\n          example: 0\n        tellerName:\n          type: string\n          example: Teller1\n        cashierName:\n          type: string\n          example: Staff1, Test\n        cashierData:\n          $ref: '#/components/schemas/CashierData'\n        startDate:\n          type: string\n          format: date\n        endDate:\n          type: string\n          format: date\n        currencyOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CurrencyData'\n    GetWorkingDaysTemplateResponse:\n      type: object\n      properties:\n        repaymentRescheduleOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumOptionData'\n    GetWorkingDaysResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        recurrence:\n          type: string\n          example: FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR\n        repaymentRescheduleType:\n          $ref: '#/components/schemas/EnumOptionData'\n        extendTermForDailyRepayments:\n          type: boolean\n          example: true\n    PutWorkingDaysResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PutWorkingDaysRequest:\n      type: object\n      properties:\n        recurrence:\n          type: string\n          example: FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR\n        locale:\n          type: string\n          example: en\n        repaymentRescheduleType:\n          $ref: '#/components/schemas/EnumOptionData'\n        extendTermForDailyRepayments:\n          type: boolean\n          example: true\n    AddressData:\n      type: object\n    CommandProcessingResult:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n        groupId:\n          type: integer\n          format: int64\n        clientId:\n          type: integer\n          format: int64\n        loanId:\n          type: integer\n          format: int64\n        savingsId:\n          type: integer\n          format: int64\n        subResourceId:\n          type: integer\n          format: int64\n        transactionId:\n          type: string\n        changes:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        productId:\n          type: integer\n          format: int64\n        rollbackTransaction:\n          type: boolean\n    ClientChargeData:\n      type: object\n    ClientCharge:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        client:\n          $ref: '#/components/schemas/Client'\n        charge:\n          $ref: '#/components/schemas/Charge'\n        chargeTime:\n          type: integer\n          format: int32\n        dueDate:\n          type: string\n          format: date-time\n        chargeCalculation:\n          type: integer\n          format: int32\n        amount:\n          $ref: '#/components/schemas/Money'\n        amountPaid:\n          $ref: '#/components/schemas/Money'\n        amountWaived:\n          $ref: '#/components/schemas/Money'\n        amountWrittenOff:\n          $ref: '#/components/schemas/Money'\n        amountOutstanding:\n          $ref: '#/components/schemas/Money'\n        penaltyCharge:\n          type: boolean\n        paid:\n          type: boolean\n        waived:\n          type: boolean\n        inactivationDate:\n          type: string\n          format: date-time\n        currency:\n          $ref: '#/components/schemas/MonetaryCurrency'\n        active:\n          type: boolean\n        notActive:\n          type: boolean\n        clientId:\n          type: integer\n          format: int64\n        officeId:\n          type: integer\n          format: int64\n        onSpecifiedDueDate:\n          type: boolean\n        dueLocalDate:\n          type: string\n          format: date\n        new:\n          type: boolean\n    ClientIdentifierData:\n      type: object\n    ClientTransactionData:\n      type: object\n    AccountSummaryCollectionData:\n      type: object\n    ClientData:\n      required:\n      - active\n      - address\n      - addressEnabled\n      - middlename\n      - officeId\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        accountNo:\n          type: string\n        externalId:\n          type: string\n        active:\n          type: boolean\n        activationDate:\n          type: string\n          format: date\n        firstname:\n          type: string\n        middlename:\n          type: string\n        lastname:\n          type: string\n        fullname:\n          type: string\n        gender:\n          $ref: '#/components/schemas/CodeValueData'\n        officeId:\n          type: integer\n          format: int64\n        address:\n          $ref: '#/components/schemas/AddressData'\n        isAddressEnabled:\n          type: boolean\n        addressEnabled:\n          type: boolean\n        staff:\n          type: boolean\n    LookupTableData:\n      type: object\n      properties:\n        key:\n          type: string\n        description:\n          type: string\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/LookupTableEntry'\n    LookupTableEntry:\n      type: object\n      properties:\n        valueFrom:\n          type: integer\n          format: int32\n        valueTo:\n          type: integer\n          format: int32\n        score:\n          type: number\n          format: double\n    ScorecardData:\n      type: object\n      properties:\n        userId:\n          type: integer\n          format: int64\n        clientId:\n          type: integer\n          format: int64\n        createdOn:\n          type: string\n          format: date-time\n        scorecardValues:\n          type: array\n          items:\n            $ref: '#/components/schemas/ScorecardValue'\n    ScorecardValue:\n      type: object\n      properties:\n        questionId:\n          type: integer\n          format: int64\n        responseId:\n          type: integer\n          format: int64\n        value:\n          type: integer\n          format: int32\n    Component:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        survey:\n          $ref: '#/components/schemas/Survey'\n        key:\n          type: string\n        text:\n          type: string\n        description:\n          type: string\n        sequenceNo:\n          type: integer\n          format: int32\n        new:\n          type: boolean\n    Question:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        survey:\n          $ref: '#/components/schemas/Survey'\n        responses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Response'\n        componentKey:\n          type: string\n        key:\n          type: string\n        text:\n          type: string\n        description:\n          type: string\n        sequenceNo:\n          type: integer\n          format: int32\n        new:\n          type: boolean\n    Response:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        question:\n          $ref: '#/components/schemas/Question'\n        text:\n          type: string\n        value:\n          type: integer\n          format: int32\n        sequenceNo:\n          type: integer\n          format: int32\n        new:\n          type: boolean\n    Scorecard:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        survey:\n          $ref: '#/components/schemas/Survey'\n        question:\n          $ref: '#/components/schemas/Question'\n        response:\n          $ref: '#/components/schemas/Response'\n        appUser:\n          $ref: '#/components/schemas/AppUser'\n        client:\n          $ref: '#/components/schemas/Client'\n        createdOn:\n          type: string\n          format: date-time\n        value:\n          type: integer\n          format: int32\n        new:\n          type: boolean\n    Survey:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/Component'\n        questions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Question'\n        key:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        countryCode:\n          type: string\n        validFrom:\n          type: string\n          format: date-time\n        validTo:\n          type: string\n          format: date-time\n        new:\n          type: boolean\n    ComponentData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        key:\n          type: string\n        text:\n          type: string\n        description:\n          type: string\n        sequenceNo:\n          type: integer\n          format: int32\n    QuestionData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        responseDatas:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResponseData'\n        componentKey:\n          type: string\n        key:\n          type: string\n        text:\n          type: string\n        description:\n          type: string\n        sequenceNo:\n          type: integer\n          format: int32\n    ResponseData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        text:\n          type: string\n        value:\n          type: integer\n          format: int32\n        sequenceNo:\n          type: integer\n          format: int32\n    SurveyData:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        componentDatas:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentData'\n        questionDatas:\n          type: array\n          items:\n            $ref: '#/components/schemas/QuestionData'\n        key:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        countryCode:\n          type: string\n        validFrom:\n          type: string\n          format: date-time\n        validTo:\n          type: string\n          format: date-time\n    PutTemplatesTemplateIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PutTemplatesTemplateIdRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Text\n        entity:\n          type: integer\n          format: int64\n          example: 1\n        type:\n          type: integer\n          format: int64\n          example: 0\n        text:\n          type: string\n          example: This is a loan for {{loan.clientName}}\n        mappers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TemplateMapper'\n    TemplateMapper:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        mapperorder:\n          type: integer\n          format: int32\n        mapperkey:\n          type: string\n        mappervalue:\n          type: string\n        new:\n          type: boolean\n    DeleteTemplatesTemplateIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    GetTemplatesTemplateResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Text\n        entity:\n          type: integer\n          format: int64\n          example: 1\n        type:\n          type: integer\n          format: int64\n          example: 0\n        text:\n          type: string\n          example: This is a loan for {{loan.clientName}}\n        mappers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TemplateMapper'\n    GetTemplatesResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Text\n        entity:\n          type: integer\n          format: int64\n          example: 1\n        type:\n          type: integer\n          format: int64\n          example: 0\n        text:\n          type: string\n          example: This is a loan for {{loan.clientName}}\n        mappers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TemplateMapper'\n    GetTemplatesTemplateIdResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Text\n        entity:\n          type: integer\n          format: int64\n          example: 1\n        type:\n          type: integer\n          format: int64\n          example: 0\n        text:\n          type: string\n          example: This is a loan for {{loan.clientName}}\n        mappers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TemplateMapper'\n    PostTemplatesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostTemplatesRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Text\n        entity:\n          type: integer\n          format: int64\n          example: 1\n        type:\n          type: integer\n          format: int64\n          example: 0\n        text:\n          type: string\n          example: This is a loan for {{loan.clientName}}\n        mappers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TemplateMapper'\n    GetPasswordPreferencesTemplateResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        description:\n          type: string\n          example: Password must be at least 1 character and not more that 50 characters\n            long\n        active:\n          type: boolean\n          example: true\n        key:\n          type: string\n          example: simple\n    PutPasswordPreferencesTemplateRequest:\n      type: object\n      properties:\n        validationPolicyId:\n          type: integer\n          format: int64\n          example: 1\n    GetPermissionsResponse:\n      type: object\n      properties:\n        grouping:\n          type: string\n          example: authorisation\n        code:\n          type: string\n          example: READ_PERMISSION\n        entityName:\n          type: string\n          example: PERMISSION\n        actionName:\n          type: string\n          example: READ\n        selected:\n          type: boolean\n          example: true\n    PutPermissionsRequest:\n      type: object\n      properties:\n        permissions:\n          type: string\n          example: |-\n            \"CREATE_GUARANTOR\":true,\n                \"CREATE_CLIENT\":true\n    GetRolesResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Super Users\n        description:\n          type: string\n          example: This role provides all application permissions.\n    PostRolesResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PostRolesRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Another Role Name\n        description:\n          type: string\n          example: A description outlining the purpose of this role in relation to\n            the application.\n    GetRolesRoleIdResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Super Users\n        description:\n          type: string\n          example: This role provides all application permissions.\n    PostRolesRoleIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    GetRolesRoleIdPermissionsResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        name:\n          type: string\n          example: Super Users\n        description:\n          type: string\n          example: This role provides all application permissions.\n        permissionUsageData:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponsePermissionData'\n    GetRolesRoleIdPermissionsResponsePermissionData:\n      type: object\n      properties:\n        grouping:\n          type: string\n          example: authorisation\n        code:\n          type: string\n          example: READ_PERMISSION\n        entityName:\n          type: string\n          example: PERMISSION\n        actionName:\n          type: string\n          example: READ\n        selected:\n          type: boolean\n          example: false\n    PostRolesRoleIdPermissionsResponsePermissions:\n      type: object\n      properties:\n        ALL_FUNCTIONS_READ:\n          type: string\n          example: \"true\"\n    PutRolesRoleIdPermissionsResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 8\n        permissions:\n          $ref: '#/components/schemas/PostRolesRoleIdPermissionsResponsePermissions'\n    PutRolesRoleIdPermissionsRequest:\n      type: object\n      properties:\n        permissions:\n          $ref: '#/components/schemas/PostRolesRoleIdPermissionsResponsePermissions'\n    DeleteRolesRoleIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n    PutRolesRoleIdResponse:\n      type: object\n      properties:\n        resourceId:\n          type: integer\n          format: int64\n          example: 1\n        changes:\n          $ref: '#/components/schemas/PutRolesRoleIdResponseChanges'\n    PutRolesRoleIdResponseChanges:\n      type: object\n      properties:\n        description:\n          type: string\n          example: some description(changed)\n    PutRolesRoleIdRequest:\n      type: object\n      properties:\n        description:\n          type: string\n          example: some description(changed)\n    GetUsersTemplateResponse:\n      type: object\n      properties:\n        allowedOffices:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfficeData'\n        availableRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleData'\n    GetUsersResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        username:\n          type: string\n          example: mifos\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        firstname:\n          type: string\n          example: App\n        lastname:\n          type: string\n          example: Administrator\n        email:\n          type: string\n          example: demomfi@mifos.org\n        passwordNeverExpires:\n          type: boolean\n          example: false\n        staff:\n          $ref: '#/components/schemas/StaffData'\n        selectedRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleData'\n    GetUsersUserIdResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 1\n        username:\n          type: string\n          example: mifos\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        officeName:\n          type: string\n          example: Head Office\n        firstname:\n          type: string\n          example: App\n        lastname:\n          type: string\n          example: Administrator\n        email:\n          type: string\n          example: demomfi@mifos.org\n        passwordNeverExpires:\n          type: boolean\n          example: false\n        staff:\n          $ref: '#/components/schemas/StaffData'\n        availableRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleData'\n        selectedRoles:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleData'\n    PutUsersUserIdResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 11\n        changes:\n          $ref: '#/components/schemas/PutUsersUserIdResponseChanges'\n    PutUsersUserIdResponseChanges:\n      type: object\n      properties:\n        firstname:\n          type: string\n          example: Test\n        passwordEncoded:\n          type: string\n          example: abc3326b1bb376351c7baeb4175f5e0504e33aadf6a158474a6d71de1befae51\n    PutUsersUserIdRequest:\n      type: object\n      properties:\n        firstname:\n          type: string\n          example: Test\n        password:\n          type: string\n          example: window75\n        repeatPassword:\n          type: string\n          example: window75\n    DeleteUsersUserIdResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 11\n        changes:\n          $ref: '#/components/schemas/DeleteUsersUserIdResponseChanges'\n    DeleteUsersUserIdResponseChanges:\n      type: object\n    PostUsersResponse:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        resourceId:\n          type: integer\n          format: int64\n          example: 11\n    PostUsersRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          example: newuser\n        firstname:\n          type: string\n          example: Test\n        lastname:\n          type: string\n          example: User\n        email:\n          type: string\n          example: whatever@mifos.org\n        officeId:\n          type: integer\n          format: int64\n          example: 1\n        staffId:\n          type: integer\n          format: int64\n          example: 1\n        Roles:\n          type: string\n          example: '[2,3]'\n        sendPasswordToEmail:\n          type: boolean\n          example: true\n        isSelfServiceUser:\n          type: boolean\n          example: true\n",
			"canonicalURL": "/github.com/skalena/openbankingBR@9d93ae2414e7abb786d2b0648e1f7c2f7129e318/-/blob/apache-fineract/openapi-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/skalena/openbankingBR/blob/9d93ae2414e7abb786d2b0648e1f7c2f7129e318/apache-fineract/openapi-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:151269: duplicate path: \"/datatables/{datatable}\""
}