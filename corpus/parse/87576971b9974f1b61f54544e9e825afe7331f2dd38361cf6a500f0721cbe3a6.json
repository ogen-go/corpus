{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cnizzardini/cakephp-swagger-bake"
		},
		"file": {
			"name": "swagger-with-existing.yml",
			"size": 0,
			"path": "tests/test_app/config/swagger-with-existing.yml",
			"byteSize": 4414,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Bakery\n  license:\n    name: MIT\npaths:\n  /employee-salaries:\n    get:\n      summary: Index method\n      description: 'phpunit test string'\n      tags:\n        - Employee Salaries\n      operationId: 'employeesalaries:index'\n      parameters:\n        - name: page\n          in: query\n          required: false\n          schema:\n            description: ''\n            type: integer\n          deprecated: false\n          allowEmptyValue: false\n        - name: limit\n          in: query\n          required: false\n          schema:\n            description: ''\n            type: integer\n          deprecated: false\n          allowEmptyValue: false\n        - name: sort\n          in: query\n          required: false\n          schema:\n            description: ''\n            type: string\n          deprecated: false\n          allowEmptyValue: false\n        - name: direction\n          in: query\n          required: false\n          schema:\n            description: ''\n            type: string\n          deprecated: false\n          allowEmptyValue: false\n      responses:\n        '200':\n          description: ''\n      deprecated: false\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    Pet:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    EmployeeSalaries:\n      description: Test YML schema cannot be overwritten\n      type: array\n      items:\n        $ref: \"#/components/schemas/EmployeeSalary\"\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n          example: 400\n        message:\n          type: string\n          example: error message here\n      xml:\n        name: response\n# issue: https://github.com/cnizzardini/cakephp-swagger-bake/issues/419\n    Address:\n      type: object\n      properties:\n        city:\n          type: string\n          example: \"Brazzaville\"\n        zone:\n          type: string\n          example: \"Zone 1\"\n    User:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"De claude\"\n        address:\n          $ref: '#/components/schemas/Address'\n# end issue\nsecurity:\n  - BearerAuth: []\n",
			"canonicalURL": "/github.com/cnizzardini/cakephp-swagger-bake@9e2e405966990d67eb2a9cbd8df31faebb4e59e7/-/blob/tests/test_app/config/swagger-with-existing.yml",
			"externalURLs": [
				{
					"url": "https://github.com/cnizzardini/cakephp-swagger-bake/blob/9e2e405966990d67eb2a9cbd8df31faebb4e59e7/tests/test_app/config/swagger-with-existing.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"EmployeeSalaries\": parse schema: item: parse schema: resolve \"#/components/schemas/EmployeeSalary\": find schema: resolve \"#/components/schemas/EmployeeSalary\": can't find value for \"components/schemas/EmployeeSalary\""
}