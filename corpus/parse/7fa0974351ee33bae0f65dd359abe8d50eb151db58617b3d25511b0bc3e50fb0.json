{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rapi-doc/RapiDoc"
		},
		"file": {
			"name": "auth.yaml",
			"size": 0,
			"path": "docs/specs/auth.yaml",
			"byteSize": 4844,
			"content": "openapi: 3.0.1\ninfo:\n  title: Authentication Demo\n  description: Demonstrate various authentication methods supported by RapiDoc\nservers:\n  - url: https://reqres.in/api/\n  - url: https://graph.microsoft.com/V1.0\n    description: Uses OAuth Flows\npaths:\n  /users/{userId}:\n    get:\n      description: One User from reqres.in (No Security)\n      parameters:\n        - in: path\n          name: userId\n          schema:\n            type: integer\n            example: 3\n          required: true\n          description: Numeric ID of the user to get\n  /users:\n    get:\n      description: Users from MS-Active (OAuth Security)\n      security:\n      - ms-oauth:\n  /fake-api-that-need-multiple-security-1:\n    get:\n      description: API that needs 2 API Keys\n      security:\n      - api_key1: []\n        api_key2: []\n  /fake-api-that-need-one-security-out-of-two:\n    get:\n      description: API that any one API Key from the list of 2 \n      security:\n      - api_key1: []\n      - api_key2: []\n  /fake-api-that-need-basic-and-apikey:\n    get:\n      description: API that need API Key and HTTP Basic \n      security:\n      - http-basic: []\n      - http-bearer: []\n  /fake-api-that-with-complex-security:\n    get:\n      description: API with a complex security requirements\n      security:\n      - ms-oauth:\n        - User.ReadBasic.All\n        - Directory.Read.All\n      - http-basic: ['h-scope1', 'h-scope2']\n      - api_key_cookie: []\n      - api_key1: ['a-scope1', 'a-scope2']\n        api_key2: []\ncomponents:\n  securitySchemes:\n    http-basic:\n      type: http\n      scheme: basic\n    http-bearer:\n      type: http\n      scheme: bearer\n    api_key1:\n      type: apiKey\n      name: Authorization\n      in: header\n    api_key2:\n      type: apiKey\n      name: specialKey\n      in: header\n    api_key_cookie:\n      description: API Key that should be sent in cookie\n        authorization filters.\n      type: apiKey\n      name: api_key_cookie\n      in: cookie\n    ms-oauth:\n      type: oauth2\n      description: | \n        ### IMPORTANT !!! \n        Works only when client (`this html`) is served from `http://localhost:8080/...` because the registered client has a redirect url pointing to `http://localhost:8080/examples/oauth-receiver.html`\n\n        In order to experiment with OAuth system you can do the floowing\n        1. Signup with https://portal.azure.com/ if you havent already \n        2. Register an app with Microsoft Azure (Instructions: https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app)\n            - Registering an App will generate a `client-id` and `client-secret`.  Anyone who has this can make calls to the API\n        3. Create some users in MS Active Directory\n        4. Provide permissions to your APP to access MS Graph API which allow you to query the users from MS Active Directory\n\n        **OAUTH FLOWS** - There are 4 different OAuth flows. checkout how various oauth flows utilizes `client-id` and `client-secret`\n        - **Authorization Code**  - Requires `client-id` and `client-secret`\n        - **Client Credentials** - Requires `client-id` and `client-secret`\n        - **Implicit** - Requires only `client-id`\n        - **Password** - Requires `username` and `password` _deprecated in oauth 2.0_\n        ---\n\n      x-client-id: 0801ecad-97a5-4bed-bd5e-0528afecc1d6\n      flows:\n        authorizationCode:\n          authorizationUrl: https://login.microsoftonline.com/546ffd36-88d5-494c-b126-57cc823bb5ea/oauth2/v2.0/authorize\n          tokenUrl: https://login.microsoftonline.com/546ffd36-88d5-494c-b126-57cc823bb5ea/oauth2/v2.0/token\n          scopes:\n            https://graph.microsoft.com/User.ReadBasic.All: Read logged users basic info\n            https://graph.microsoft.com/User.Read.All: Read logged users data\n            https://graph.microsoft.com/Directory.Read.All: Read User list from directory\n        clientCredentials:\n          tokenUrl: https://login.microsoftonline.com/546ffd36-88d5-494c-b126-57cc823bb5ea/oauth2/v2.0/token\n          scopes:\n            https://graph.microsoft.com/User.ReadBasic.All: Read logged users basic info\n            https://graph.microsoft.com/User.Read.All: Read logged users data\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/546ffd36-88d5-494c-b126-57cc823bb5ea/oauth2/v2.0/authorize\n          scopes:\n            https://graph.microsoft.com/User.ReadBasic.All: Read logged users basic info\n            https://graph.microsoft.com/User.Read.All: Read logged users data\n        password:\n          okenUrl: https://login.microsoftonline.com/546ffd36-88d5-494c-b126-57cc823bb5ea/oauth2/v2.0/token\n          scopes:        \n            https://graph.microsoft.com/User.ReadBasic.All: Read logged users basic info\n            https://graph.microsoft.com/User.Read.All: Read logged users data\n",
			"canonicalURL": "/github.com/rapi-doc/RapiDoc@f1eea3a35ccddac47afdb027e2c42afddb087ef2/-/blob/docs/specs/auth.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rapi-doc/RapiDoc/blob/f1eea3a35ccddac47afdb027e2c42afddb087ef2/docs/specs/auth.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/users/{userId}\": at 1:4025: get: at 1:4032: responses: no responses"
}