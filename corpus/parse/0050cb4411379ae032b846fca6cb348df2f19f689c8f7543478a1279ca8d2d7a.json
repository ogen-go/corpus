{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/interuss/dss"
		},
		"file": {
			"name": "injection.yaml",
			"size": 0,
			"path": "interfaces/automated-testing/rid/injection.yaml",
			"byteSize": 6579,
			"content": "openapi: 3.0.2\ninfo:\n  title: Remote ID Test Data Injection\n  version: 0.0.1\n  description: \u003e-\n    This interface is implemented by every Service Provider wishing to be tested by the automated testing framework.\n    The automated testing suite calls this interface to inject flight-related test data into the Service Provider system under test.\npaths:\n  /tests/{test_id}:\n    parameters:\n      -\n        examples:\n          default:\n            value: '2979bd18-7f06-441c-bda6-e82c841c35d6'\n        name: test_id\n        description: \u003e-\n          The ID of the test.\n        schema:\n          type: string\n        in: query\n        required: true\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTestParameters'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeTestResponse'\n          description: Requested test was created successfully.\n        '409':\n          description: Test already exists.\n      operationId: createTest\n      summary: Create test\n      description: \u003e-\n        Request the creation of one or more logical flights based on injection of the provided test data.\n        The host Service Provider's test data injector may modify fields, such as `details.id`, as necessary to work with their system.\n        The host Service Provider's test data injector should modify as few fields as practical, and change modified fields as little as practical.\n        The `injection_id` fields may not be modified.\n      security:\n        - TestAuth:\n            - rid.inject_test_data\n  /tests/{test_id}/{version}:\n    parameters:\n      -\n        examples:\n          default:\n            value: '2979bd18-7f06-441c-bda6-e82c841c35d6'\n        name: test_id\n        description: \u003e-\n          The ID of the test.\n        schema:\n          type: string\n        in: query\n        required: true\n      -\n        name: version\n        description: \u003e-\n          Current version of the test.\n        schema:\n          type: string\n        in: query\n        required: true\n    delete:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTestResponse'\n          description: Requested test was deleted successfully.\n      operationId: deleteTest\n      summary: Delete test\n      description: Remove all injected test data associated with this test from the host Service Provider's system under test.\n      security:\n        - TestAuth:\n            - rid.inject_test_data\ncomponents:\n  schemas:\n    CreateTestParameters:\n      description: 'A complete set of data to be injected into a Service Provider system under test.'\n      required:\n        - requested_flights\n      type: object\n      properties:\n        requested_flights:\n          description: \u003e-\n            One or more logical flights, each containing test data to inject into the system.\n            Elements should be sorted in ascending order of `timestamp`.\n          type: array\n          items:\n            $ref: '#/components/schemas/TestFlight'\n    ChangeTestResponse:\n      description: ''\n      required:\n        - injected_flights\n        - version\n      type: object\n      properties:\n        injected_flights:\n          description: 'The complete set of test data actually injected into the Service Provider system under test.'\n          type: array\n          items:\n            $ref: '#/components/schemas/TestFlight'\n        version:\n          description: Version of test.  Used to delete test.\n          type: string\n          example: 1\n    DeleteTestResponse:\n      description: ''\n      required:\n        - injected_flights\n      type: object\n      properties:\n        injected_flights:\n          description: 'The complete set of test data deleted.'\n          type: array\n          items:\n            $ref: '#/components/schemas/TestFlight'\n    TestFlight:\n      description: 'The set of data to be injected into a Service Provider system under test for a single flight.'\n      required:\n        - injection_id\n        - telemetry\n        - details_responses\n      type: object\n      properties:\n        injection_id:\n          description: 'ID of the injected test flight.  Remains the same regardless of the flight ID/UTM ID reported in the system.'\n          type: string\n          example: 'edb7695f-8737-4b9f-91f8-e2afbb333f41'\n        telemetry:\n          description: \u003e-\n            The set of telemetry data that should be injected into the system for this flight.\n            Each element follows the RIDAircraftState schema from the ASTM remote ID standard.\n          type: array\n          items:\n            $ref: 'https://raw.githubusercontent.com/uastech/standards/astm_rid_1.0/remoteid/canonical.yaml#/components/schemas/RIDAircraftState'\n        details_responses:\n          description: The details of the flight as a function of time.\n          type: array\n          items:\n            $ref: '#/components/schemas/TestFlightDetails'\n    TestFlightDetails:\n      description: The set of data with which the Service Provider system under test should respond when queried for the details of a test flight.\n      required:\n        - effective_after\n        - details\n      type: object\n      properties:\n        effective_after:\n          description: \u003e-\n            The time after which the Service Provider system under test should respond with `details`, unless other `details` with a more recent `effective_after` time (before the current time) are available.\n          type: string\n          format: datetime\n        details:\n          description: \u003e-\n            The details of the flight.\n            Follows the RIDFlightDetails schema from the ASTM remote ID standard.\n          $ref: 'https://raw.githubusercontent.com/uastech/standards/astm_rid_1.0/remoteid/canonical.yaml#/components/schemas/RIDFlightDetails'\n  securitySchemes:\n    TestAuth:\n      flows:\n        clientCredentials:\n          tokenUrl: https://example.com/oauth/token\n          scopes:\n            rid.inject_test_data: \u003e-\n                Client may inject test data into a Service Provider for the purpose of conducting automated tests.\n      type: oauth2\n      description: |-\n        Authorization from, or on behalf of, an authorization authority, augmenting standard remote ID authorization for the purpose of automated testing.\n\nsecurity:\n  - TestAuth:\n      - rid.inject_test_data\n",
			"canonicalURL": "/github.com/interuss/dss@c399b901c89c1761425dda664cfce3d712a5f11b/-/blob/interfaces/automated-testing/rid/injection.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/interuss/dss/blob/c399b901c89c1761425dda664cfce3d712a5f11b/interfaces/automated-testing/rid/injection.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/tests/{test_id}\": put: operation \"createTest\": at 1:3817: parse path \"/tests/{test_id}\": path parameter not specified: \"test_id\""
}