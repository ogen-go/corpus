{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/grafana/grafana"
		},
		"file": {
			"name": "openapi3.json",
			"size": 0,
			"path": "public/openapi3.json",
			"byteSize": 600521,
			"content": "{\n  \"components\": {\n    \"responses\": {\n      \"SMTPNotEnabledError\": {\n        \"description\": \"(empty)\"\n      },\n      \"acceptedResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"AcceptedResponse\"\n      },\n      \"addPermissionResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                },\n                \"permissionId\": {\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"adminCreateUserResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UserIdDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"adminGetSettingsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/SettingsBag\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"adminGetStatsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AdminStats\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"adminGetUserAuthTokensResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/UserToken\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"badRequestError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"BadRequestError is returned when the request is invalid and it cannot be processed.\"\n      },\n      \"calculateDashboardDiffResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"format\": \"uint8\",\n                \"type\": \"integer\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"conflictError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"ConflictError\"\n      },\n      \"contentResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"format\": \"uint8\",\n                \"type\": \"integer\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createCorrelationResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CreateCorrelationResponseBody\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createDashboardSnapshotResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"deleteKey\": {\n                  \"description\": \"Unique key used to delete the snapshot. It is different from the key so that only the creator can delete the snapshot.\",\n                  \"type\": \"string\"\n                },\n                \"deleteUrl\": {\n                  \"type\": \"string\"\n                },\n                \"id\": {\n                  \"description\": \"Snapshot id\",\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"key\": {\n                  \"description\": \"Unique key\",\n                  \"type\": \"string\"\n                },\n                \"url\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createOrUpdateDatasourceResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"datasource\": {\n                  \"$ref\": \"#/components/schemas/DataSource\"\n                },\n                \"id\": {\n                  \"description\": \"ID Identifier of the new data source.\",\n                  \"example\": 65,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"description\": \"Message Message of the deleted dashboard.\",\n                  \"example\": \"Data source added\",\n                  \"type\": \"string\"\n                },\n                \"name\": {\n                  \"description\": \"Name of the new data source.\",\n                  \"example\": \"My Data source\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"name\",\n                \"message\",\n                \"datasource\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createOrgResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"description\": \"Message Message of the created org.\",\n                  \"example\": \"Data source added\",\n                  \"type\": \"string\"\n                },\n                \"orgId\": {\n                  \"description\": \"ID Identifier of the created org.\",\n                  \"example\": 65,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                }\n              },\n              \"required\": [\n                \"orgId\",\n                \"message\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createPlaylistResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Playlist\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createReportResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createRoleResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RoleDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createServiceAccountResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ServiceAccountDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createTeamResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                },\n                \"teamId\": {\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"createTokenResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/NewApiKeyResult\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"dashboardResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DashboardFullWithMeta\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"dashboardVersionResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DashboardVersionMeta\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"dashboardVersionsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/DashboardVersionDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"deleteAlertNotificationChannelResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"ID Identifier of the deleted notification channel.\",\n                  \"example\": 65,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"description\": \"Message Message of the deleted notificatiton channel.\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"message\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"deleteCorrelationResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DeleteCorrelationResponseBody\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"deleteDashboardResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"ID Identifier of the deleted dashboard.\",\n                  \"example\": 65,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"description\": \"Message Message of the deleted dashboard.\",\n                  \"example\": \"Dashboard My Dashboard deleted\",\n                  \"type\": \"string\"\n                },\n                \"title\": {\n                  \"description\": \"Title Title of the deleted dashboard.\",\n                  \"example\": \"My Dashboard\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"title\",\n                \"message\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"deleteDataSourceByNameResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"ID Identifier of the deleted data source.\",\n                  \"example\": 65,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"description\": \"Message Message of the deleted dashboard.\",\n                  \"example\": \"Dashboard My Dashboard deleted\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"message\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"deleteFolderResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"ID Identifier of the deleted folder.\",\n                  \"example\": 65,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"description\": \"Message Message of the deleted folder.\",\n                  \"example\": \"Folder My Folder deleted\",\n                  \"type\": \"string\"\n                },\n                \"title\": {\n                  \"description\": \"Title of the deleted folder.\",\n                  \"example\": \"My Folder\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"title\",\n                \"message\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"folderResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Folder\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"forbiddenError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.\"\n      },\n      \"genericError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"A GenericError is the default error message that is generated.\\nFor certain status codes there are more appropriate error structures.\"\n      },\n      \"getAPIkeyResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ApiKeyDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAccessControlStatusResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Status\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAlertNotificationChannelResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AlertNotification\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAlertNotificationChannelsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/AlertNotification\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAlertNotificationLookupResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/AlertNotificationLookup\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAlertResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/LegacyAlert\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAlertsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/AlertListItemDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAllPermissionseResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DataSourcePermissionsDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAllRolesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/RoleDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAnnotationByIDResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ItemDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAnnotationTagsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/GetAnnotationTagsResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getAnnotationsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ItemDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getCorrelationResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Correlation\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getCorrelationsBySourceUIDResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/Correlation\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getCorrelationsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/Correlation\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getCurrentOrgResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrgDetailsDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getCustomPermissionsReportResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/CustomPermissionsRecordDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getDashboardPermissionsListResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/DashboardACLInfoDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getDashboardSnapshotResponse\": {\n        \"description\": \"(empty)\"\n      },\n      \"getDashboardStatesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/AlertStateInfoDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getDashboardsTagsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/DashboardTagCloudItem\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getDataSourceIDResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"ID Identifier of the data source.\",\n                  \"example\": 65,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                }\n              },\n              \"required\": [\n                \"id\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getDataSourceResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DataSource\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getDataSourcesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/DataSourceList\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getFolderPermissionListResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/DashboardACLInfoDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getFoldersResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/FolderSearchHit\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getHomeDashboardResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/GetHomeDashboardResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getLibraryElementConnectionsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/LibraryElementConnectionsResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getLibraryElementResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/LibraryElementResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getLibraryElementsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/LibraryElementSearchResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getLicenseTokenResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Token\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getOrgByIDResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrgDetailsDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getOrgByNameResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/OrgDetailsDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getOrgUsersForCurrentOrgLookupResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/UserLookupDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getOrgUsersForCurrentOrgResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/OrgUserDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getOrgUsersResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/OrgUserDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getPendingOrgInvitesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/TempUserDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getPlaylistDashboardsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PlaylistDashboardsSlice\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getPlaylistItemsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/PlaylistItemDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getPlaylistResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PlaylistDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getPreferencesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Prefs\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getQueryHistoryDeleteQueryResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/QueryHistoryDeleteQueryResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getQueryHistoryMigrationResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/QueryHistoryMigrationResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getQueryHistoryResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/QueryHistoryResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getQueryHistorySearchResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/QueryHistorySearchResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getQuotaResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/UserQuotaDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getReportResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ConfigDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getReportSettingsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/SettingsDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getReportsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/ConfigDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getRoleResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RoleDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getSharingOptionsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"externalEnabled\": {\n                  \"type\": \"boolean\"\n                },\n                \"externalSnapshotName\": {\n                  \"type\": \"string\"\n                },\n                \"externalSnapshotURL\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getSignedInUserOrgListResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/UserOrgDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getSignedInUserTeamListResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/TeamDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getStatusResponse\": {\n        \"description\": \"(empty)\"\n      },\n      \"getSyncStatusResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ActiveSyncStatusDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getTeamByIDResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/TeamDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getTeamGroupsApiResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/TeamGroupDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getTeamMembersResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/TeamMemberDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getUserAuthTokensResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/UserToken\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getUserOrgListResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/UserOrgDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"getUserTeamsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/TeamDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"helpFlagResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"helpFlags1\": {\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"importDashboardResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ImportDashboardResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"internalServerError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"InternalServerError is a general error indicating something went wrong internally.\"\n      },\n      \"listBuiltinRolesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"additionalProperties\": {\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RoleDTO\"\n                },\n                \"type\": \"array\"\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"listRecordingRulesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/RecordingRuleJSON\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"listRolesResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/RoleDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"listSortOptionsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"description\": {\n                  \"type\": \"string\"\n                },\n                \"displayName\": {\n                  \"type\": \"string\"\n                },\n                \"meta\": {\n                  \"type\": \"string\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"listTokensResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/TokenDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"notFoundError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"NotFoundError is returned when the requested resource was not found.\"\n      },\n      \"okResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/SuccessResponseBody\"\n            }\n          }\n        },\n        \"description\": \"An OKResponse is returned if the request was successful.\"\n      },\n      \"pauseAlertResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"alertId\": {\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"type\": \"string\"\n                },\n                \"state\": {\n                  \"description\": \"Alert result state\\nrequired true\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"alertId\",\n                \"message\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"pauseAlertsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"alertsAffected\": {\n                  \"description\": \"AlertsAffected is the number of the affected alerts.\",\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"type\": \"string\"\n                },\n                \"state\": {\n                  \"description\": \"Alert result state\\nrequired true\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"alertsAffected\",\n                \"message\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"postAPIkeyResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/NewApiKeyResult\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"postAnnotationResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"ID Identifier of the created annotation.\",\n                  \"example\": 65,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"description\": \"Message Message of the created annotation.\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"id\",\n                \"message\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"postDashboardResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"description\": \"ID The unique identifier (id) of the created/updated dashboard.\",\n                  \"example\": \"1\",\n                  \"type\": \"string\"\n                },\n                \"status\": {\n                  \"description\": \"Status status of the response.\",\n                  \"example\": \"success\",\n                  \"type\": \"string\"\n                },\n                \"title\": {\n                  \"description\": \"Slug The slug of the dashboard.\",\n                  \"example\": \"my-dashboard\",\n                  \"type\": \"string\"\n                },\n                \"uid\": {\n                  \"description\": \"UID The unique identifier (uid) of the created/updated dashboard.\",\n                  \"example\": \"nHz3SXiiz\",\n                  \"type\": \"string\"\n                },\n                \"url\": {\n                  \"description\": \"URL The relative URL for accessing the created/updated dashboard.\",\n                  \"example\": \"/d/nHz3SXiiz/my-dashboard\",\n                  \"type\": \"string\"\n                },\n                \"version\": {\n                  \"description\": \"Version The version of the dashboard.\",\n                  \"example\": 2,\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                }\n              },\n              \"required\": [\n                \"status\",\n                \"title\",\n                \"version\",\n                \"id\",\n                \"uid\",\n                \"url\"\n              ],\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"postRenewLicenseTokenResponse\": {\n        \"description\": \"(empty)\"\n      },\n      \"preconditionFailedError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"PreconditionFailedError\"\n      },\n      \"queryMetricsWithExpressionsRespons\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/QueryDataResponse\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"recordingRuleResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/RecordingRuleJSON\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"recordingRuleWriteTargetResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PrometheusRemoteWriteTargetJSON\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"refreshLicenseStatsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ActiveUserStats\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"retrieveServiceAccountResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ServiceAccountDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"searchDashboardSnapshotsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/DashboardSnapshotDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"searchOrgServiceAccountsWithPagingResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/SearchServiceAccountsResult\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"searchOrgsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/OrgDTO\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"searchPlaylistsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/Playlists\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"searchResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HitList\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"searchTeamsResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/SearchTeamQueryResult\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"searchUsersResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/SearchUserQueryResult\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"testAlertResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AlertTestResult\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"trimDashboardResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/TrimDashboardFullWithMeta\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"unauthorisedError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"UnauthorizedError is returned when the request is not authenticated.\"\n      },\n      \"unprocessableEntityError\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ErrorResponseBody\"\n            }\n          }\n        },\n        \"description\": \"UnprocessableEntityError\"\n      },\n      \"updateCorrelationResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UpdateCorrelationResponseBody\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"updatePlaylistResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PlaylistDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"updateServiceAccountResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"id\": {\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"message\": {\n                  \"type\": \"string\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"serviceaccount\": {\n                  \"$ref\": \"#/components/schemas/ServiceAccountProfileDTO\"\n                }\n              },\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      },\n      \"userResponse\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/UserProfileDTO\"\n            }\n          }\n        },\n        \"description\": \"(empty)\"\n      }\n    },\n    \"schemas\": {\n      \"Ack\": {\n        \"type\": \"object\"\n      },\n      \"ActiveSyncStatusDTO\": {\n        \"description\": \"ActiveSyncStatusDTO holds the information for LDAP background Sync\",\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"nextSync\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"prevSync\": {\n            \"$ref\": \"#/components/schemas/SyncResult\"\n          },\n          \"schedule\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActiveUserStats\": {\n        \"properties\": {\n          \"active_admins_and_editors\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"active_users\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"active_viewers\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddBuiltInRoleCommand\": {\n        \"properties\": {\n          \"builtInRole\": {\n            \"enum\": [\n              \"Viewer\",\n              \" Editor\",\n              \" Admin\",\n              \" Grafana Admin\"\n            ],\n            \"type\": \"string\"\n          },\n          \"global\": {\n            \"description\": \"A flag indicating if the assignment is global or not. If set to false, the default org ID of the authenticated user will be used from the request to create organization local assignment. Refer to the Built-in role assignments for more information.\",\n            \"type\": \"boolean\"\n          },\n          \"roleUid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddCommand\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          },\n          \"secondsToLive\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddDataSourceCommand\": {\n        \"description\": \"Also acts as api DTO\",\n        \"properties\": {\n          \"access\": {\n            \"$ref\": \"#/components/schemas/DsAccess\"\n          },\n          \"basicAuth\": {\n            \"type\": \"boolean\"\n          },\n          \"basicAuthUser\": {\n            \"type\": \"string\"\n          },\n          \"database\": {\n            \"type\": \"string\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"jsonData\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secureJsonData\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"type\": \"string\"\n          },\n          \"withCredentials\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddInviteForm\": {\n        \"properties\": {\n          \"loginOrEmail\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          },\n          \"sendEmail\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddOrgUserCommand\": {\n        \"properties\": {\n          \"loginOrEmail\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddPermissionDTO\": {\n        \"properties\": {\n          \"builtinRole\": {\n            \"type\": \"string\"\n          },\n          \"permission\": {\n            \"$ref\": \"#/components/schemas/DsPermissionType\"\n          },\n          \"teamId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddServiceAccountTokenCommand\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secondsToLive\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddTeamMemberCommand\": {\n        \"properties\": {\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddTeamRoleCommand\": {\n        \"properties\": {\n          \"roleUid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AddUserRoleCommand\": {\n        \"properties\": {\n          \"global\": {\n            \"type\": \"boolean\"\n          },\n          \"roleUid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Address\": {\n        \"properties\": {\n          \"address1\": {\n            \"type\": \"string\"\n          },\n          \"address2\": {\n            \"type\": \"string\"\n          },\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"type\": \"string\"\n          },\n          \"zipCode\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AdminCreateUserForm\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AdminStats\": {\n        \"properties\": {\n          \"activeAdmins\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"activeEditors\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"activeSessions\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"activeUsers\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"activeViewers\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"admins\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"alerts\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dailyActiveAdmins\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dailyActiveEditors\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dailyActiveSessions\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dailyActiveUsers\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dailyActiveViewers\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboards\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"datasources\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"editors\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"monthlyActiveUsers\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"orgs\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"playlists\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"snapshots\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"stars\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"tags\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"users\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"viewers\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AdminUpdateUserPasswordForm\": {\n        \"properties\": {\n          \"password\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AdminUpdateUserPermissionsForm\": {\n        \"properties\": {\n          \"isGrafanaAdmin\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Alert\": {\n        \"properties\": {\n          \"activeAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"annotations\": {\n            \"$ref\": \"#/components/schemas/overrideLabels\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/overrideLabels\"\n          },\n          \"state\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"labels\",\n          \"annotations\",\n          \"state\",\n          \"value\"\n        ],\n        \"title\": \"Alert has info for an alert.\",\n        \"type\": \"object\"\n      },\n      \"AlertDiscovery\": {\n        \"properties\": {\n          \"alerts\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Alert\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"alerts\"\n        ],\n        \"title\": \"AlertDiscovery has info for all active alerts.\",\n        \"type\": \"object\"\n      },\n      \"AlertInstancesResponse\": {\n        \"properties\": {\n          \"instances\": {\n            \"description\": \"Instances is an array of arrow encoded dataframes\\neach frame has a single row, and a column for each instance (alert identified by unique labels) with a boolean value (firing/not firing)\",\n            \"items\": {\n              \"items\": {\n                \"format\": \"uint8\",\n                \"type\": \"integer\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertListItemDTO\": {\n        \"properties\": {\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardSlug\": {\n            \"type\": \"string\"\n          },\n          \"dashboardUid\": {\n            \"type\": \"string\"\n          },\n          \"evalData\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"evalDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"executionError\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"newStateDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"panelId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"state\": {\n            \"$ref\": \"#/components/schemas/AlertStateType\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertManager\": {\n        \"properties\": {\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"AlertManager models a configured Alert Manager.\",\n        \"type\": \"object\"\n      },\n      \"AlertManagerNotReady\": {\n        \"type\": \"object\"\n      },\n      \"AlertManagersResult\": {\n        \"properties\": {\n          \"activeAlertManagers\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertManager\"\n            },\n            \"type\": \"array\"\n          },\n          \"droppedAlertManagers\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertManager\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"AlertManagersResult contains the result from querying the alertmanagers endpoint.\",\n        \"type\": \"object\"\n      },\n      \"AlertNotification\": {\n        \"properties\": {\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"disableResolveMessage\": {\n            \"type\": \"boolean\"\n          },\n          \"frequency\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secureFields\": {\n            \"additionalProperties\": {\n              \"type\": \"boolean\"\n            },\n            \"type\": \"object\"\n          },\n          \"sendReminder\": {\n            \"type\": \"boolean\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertNotificationLookup\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertQuery\": {\n        \"properties\": {\n          \"datasourceUid\": {\n            \"description\": \"Grafana data source unique identifier; it should be '-100' for a Server Side Expression operation.\",\n            \"type\": \"string\"\n          },\n          \"model\": {\n            \"description\": \"JSON is the raw JSON query and includes the above properties as well as custom properties.\",\n            \"type\": \"object\"\n          },\n          \"queryType\": {\n            \"description\": \"QueryType is an optional identifier for the type of query.\\nIt can be used to distinguish different types of queries.\",\n            \"type\": \"string\"\n          },\n          \"refId\": {\n            \"description\": \"RefID is the unique identifier of the query, set by the frontend call.\",\n            \"type\": \"string\"\n          },\n          \"relativeTimeRange\": {\n            \"$ref\": \"#/components/schemas/RelativeTimeRange\"\n          }\n        },\n        \"title\": \"AlertQuery represents a single query associated with an alert definition.\",\n        \"type\": \"object\"\n      },\n      \"AlertResponse\": {\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/AlertDiscovery\"\n          },\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"errorType\": {\n            \"$ref\": \"#/components/schemas/ErrorType\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"status\"\n        ],\n        \"type\": \"object\"\n      },\n      \"AlertRuleGroup\": {\n        \"properties\": {\n          \"folderUid\": {\n            \"type\": \"string\"\n          },\n          \"interval\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"rules\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProvisionedAlertRule\"\n            },\n            \"type\": \"array\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertRuleGroupMetadata\": {\n        \"properties\": {\n          \"interval\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertStateInfoDTO\": {\n        \"properties\": {\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"newStateDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"panelId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"state\": {\n            \"$ref\": \"#/components/schemas/AlertStateType\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertStateType\": {\n        \"type\": \"string\"\n      },\n      \"AlertTestCommand\": {\n        \"properties\": {\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"panelId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertTestResult\": {\n        \"properties\": {\n          \"conditionEvals\": {\n            \"type\": \"string\"\n          },\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"firing\": {\n            \"type\": \"boolean\"\n          },\n          \"logs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertTestResultLog\"\n            },\n            \"type\": \"array\"\n          },\n          \"matches\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EvalMatch\"\n            },\n            \"type\": \"array\"\n          },\n          \"state\": {\n            \"$ref\": \"#/components/schemas/AlertStateType\"\n          },\n          \"timeMs\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertTestResultLog\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertingRule\": {\n        \"description\": \"adapted from cortex\",\n        \"properties\": {\n          \"alerts\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Alert\"\n            },\n            \"type\": \"array\"\n          },\n          \"annotations\": {\n            \"$ref\": \"#/components/schemas/overrideLabels\"\n          },\n          \"duration\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"evaluationTime\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"health\": {\n            \"type\": \"string\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/overrideLabels\"\n          },\n          \"lastError\": {\n            \"type\": \"string\"\n          },\n          \"lastEvaluation\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"query\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"description\": \"State can be \\\"pending\\\", \\\"firing\\\", \\\"inactive\\\".\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/RuleType\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"query\",\n          \"health\",\n          \"type\",\n          \"state\",\n          \"annotations\",\n          \"alerts\"\n        ],\n        \"type\": \"object\"\n      },\n      \"AnnotationActions\": {\n        \"properties\": {\n          \"canAdd\": {\n            \"type\": \"boolean\"\n          },\n          \"canDelete\": {\n            \"type\": \"boolean\"\n          },\n          \"canEdit\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AnnotationPermission\": {\n        \"properties\": {\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/AnnotationActions\"\n          },\n          \"organization\": {\n            \"$ref\": \"#/components/schemas/AnnotationActions\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ApiKeyDTO\": {\n        \"properties\": {\n          \"accessControl\": {\n            \"$ref\": \"#/components/schemas/Metadata\"\n          },\n          \"expiration\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ApiRuleNode\": {\n        \"properties\": {\n          \"alert\": {\n            \"type\": \"string\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"expr\": {\n            \"type\": \"string\"\n          },\n          \"for\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"labels\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"record\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Authorization\": {\n        \"properties\": {\n          \"credentials\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"credentials_file\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"Authorization contains HTTP authorization credentials.\",\n        \"type\": \"object\"\n      },\n      \"BasicAuth\": {\n        \"properties\": {\n          \"password\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"password_file\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"BasicAuth contains basic HTTP authentication credentials.\",\n        \"type\": \"object\"\n      },\n      \"BrandingOptionsDTO\": {\n        \"properties\": {\n          \"emailFooterLink\": {\n            \"type\": \"string\"\n          },\n          \"emailFooterMode\": {\n            \"type\": \"string\"\n          },\n          \"emailFooterText\": {\n            \"type\": \"string\"\n          },\n          \"emailLogoUrl\": {\n            \"type\": \"string\"\n          },\n          \"reportLogoUrl\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CalculateDiffTarget\": {\n        \"properties\": {\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"unsavedDashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ChangeUserPasswordCommand\": {\n        \"properties\": {\n          \"newPassword\": {\n            \"type\": \"string\"\n          },\n          \"oldPassword\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ConfFloat64\": {\n        \"description\": \"ConfFloat64 is a float64. It Marshals float64 values of NaN of Inf\\nto null.\",\n        \"format\": \"double\",\n        \"type\": \"number\"\n      },\n      \"Config\": {\n        \"properties\": {\n          \"global\": {\n            \"$ref\": \"#/components/schemas/GlobalConfig\"\n          },\n          \"inhibit_rules\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/InhibitRule\"\n            },\n            \"type\": \"array\"\n          },\n          \"mute_time_intervals\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n            },\n            \"type\": \"array\"\n          },\n          \"route\": {\n            \"$ref\": \"#/components/schemas/Route\"\n          },\n          \"templates\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"Config is the top-level configuration for Alertmanager's config files.\",\n        \"type\": \"object\"\n      },\n      \"ConfigDTO\": {\n        \"description\": \"ConfigDTO is model representation in transfer\",\n        \"properties\": {\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardName\": {\n            \"type\": \"string\"\n          },\n          \"dashboardUid\": {\n            \"type\": \"string\"\n          },\n          \"dashboards\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DashboardDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"enableCsv\": {\n            \"type\": \"boolean\"\n          },\n          \"enableDashboardUrl\": {\n            \"type\": \"boolean\"\n          },\n          \"formats\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Type\"\n            },\n            \"type\": \"array\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"$ref\": \"#/components/schemas/ReportOptionsDTO\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"recipients\": {\n            \"type\": \"string\"\n          },\n          \"replyTo\": {\n            \"type\": \"string\"\n          },\n          \"schedule\": {\n            \"$ref\": \"#/components/schemas/ScheduleDTO\"\n          },\n          \"state\": {\n            \"$ref\": \"#/components/schemas/State\"\n          },\n          \"templateVars\": {\n            \"type\": \"object\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ContactPoints\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/EmbeddedContactPoint\"\n        },\n        \"type\": \"array\"\n      },\n      \"Correlation\": {\n        \"description\": \"Correlation is the model for correlations definitions\",\n        \"properties\": {\n          \"description\": {\n            \"description\": \"Description of the correlation\",\n            \"example\": \"Logs to Traces\",\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"description\": \"Label identifying the correlation\",\n            \"example\": \"My Label\",\n            \"type\": \"string\"\n          },\n          \"sourceUID\": {\n            \"description\": \"UID of the data source the correlation originates from\",\n            \"example\": \"d0oxYRg4z\",\n            \"type\": \"string\"\n          },\n          \"targetUID\": {\n            \"description\": \"UID of the data source the correlation points to\",\n            \"example\": \"PE1C5CBDA0504A6A3\",\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"description\": \"Unique identifier of the correlation\",\n            \"example\": \"50xhMlg9k\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateAlertNotificationCommand\": {\n        \"properties\": {\n          \"disableResolveMessage\": {\n            \"type\": \"boolean\"\n          },\n          \"frequency\": {\n            \"type\": \"string\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secureSettings\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"sendReminder\": {\n            \"type\": \"boolean\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateCorrelationCommand\": {\n        \"description\": \"CreateCorrelationCommand is the command for creating a correlation\",\n        \"properties\": {\n          \"description\": {\n            \"description\": \"Optional description of the correlation\",\n            \"example\": \"Logs to Traces\",\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"description\": \"Optional label identifying the correlation\",\n            \"example\": \"My label\",\n            \"type\": \"string\"\n          },\n          \"targetUID\": {\n            \"description\": \"Target data source UID to which the correlation is created\",\n            \"example\": \"PE1C5CBDA0504A6A3\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateCorrelationResponseBody\": {\n        \"description\": \"CreateCorrelationResponse is the response struct for CreateCorrelationCommand\",\n        \"properties\": {\n          \"message\": {\n            \"example\": \"Correlation created\",\n            \"type\": \"string\"\n          },\n          \"result\": {\n            \"$ref\": \"#/components/schemas/Correlation\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateDashboardSnapshotCommand\": {\n        \"properties\": {\n          \"Result\": {\n            \"$ref\": \"#/components/schemas/DashboardSnapshot\"\n          },\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"deleteKey\": {\n            \"description\": \"Unique key used to delete the snapshot. It is different from the `key` so that only the creator can delete the snapshot. Required if `external` is `true`.\",\n            \"type\": \"string\"\n          },\n          \"expires\": {\n            \"default\": 0,\n            \"description\": \"When the snapshot should expire in seconds in seconds. Default is never to expire.\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"external\": {\n            \"default\": false,\n            \"description\": \"these are passed when storing an external snapshot ref\\nSave the snapshot on an external server rather than locally.\",\n            \"type\": \"boolean\"\n          },\n          \"key\": {\n            \"description\": \"Define the unique key. Required if `external` is `true`.\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"Snapshot name\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"dashboard\"\n        ],\n        \"type\": \"object\"\n      },\n      \"CreateFolderCommand\": {\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateLibraryElementCommand\": {\n        \"description\": \"CreateLibraryElementCommand is the command for adding a LibraryElement\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"ID of the folder where the library element is stored.\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"folderUid\": {\n            \"description\": \"UID of the folder where the library element is stored.\",\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"description\": \"Kind of element to create, Use 1 for library panels or 2 for c.\\nDescription:\\n1 - library panels\\n2 - library variables\",\n            \"enum\": [\n              1,\n              2\n            ],\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"model\": {\n            \"description\": \"The JSON model for the library element.\",\n            \"type\": \"object\"\n          },\n          \"name\": {\n            \"description\": \"Name of the library element.\",\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateOrUpdateConfigCmd\": {\n        \"properties\": {\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardUid\": {\n            \"type\": \"string\"\n          },\n          \"dashboards\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DashboardDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"enableCsv\": {\n            \"type\": \"boolean\"\n          },\n          \"enableDashboardUrl\": {\n            \"type\": \"boolean\"\n          },\n          \"formats\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Type\"\n            },\n            \"type\": \"array\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"$ref\": \"#/components/schemas/ReportOptionsDTO\"\n          },\n          \"recipients\": {\n            \"type\": \"string\"\n          },\n          \"replyTo\": {\n            \"type\": \"string\"\n          },\n          \"schedule\": {\n            \"$ref\": \"#/components/schemas/ScheduleDTO\"\n          },\n          \"state\": {\n            \"$ref\": \"#/components/schemas/State\"\n          },\n          \"templateVars\": {\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateOrgCommand\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreatePlaylistCommand\": {\n        \"properties\": {\n          \"interval\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PlaylistItemDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateQueryInQueryHistoryCommand\": {\n        \"description\": \"CreateQueryInQueryHistoryCommand is the command for adding query history\",\n        \"properties\": {\n          \"datasourceUid\": {\n            \"description\": \"UID of the data source for which are queries stored.\",\n            \"example\": \"PE1C5CBDA0504A6A3\",\n            \"type\": \"string\"\n          },\n          \"queries\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          }\n        },\n        \"required\": [\n          \"queries\"\n        ],\n        \"type\": \"object\"\n      },\n      \"CreateRoleForm\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"global\": {\n            \"type\": \"boolean\"\n          },\n          \"group\": {\n            \"type\": \"string\"\n          },\n          \"hidden\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Permission\"\n            },\n            \"type\": \"array\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateServiceAccountForm\": {\n        \"properties\": {\n          \"isDisabled\": {\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"example\": \"grafana\",\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"example\": \"Admin\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateTeamCommand\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CustomPermissionsRecordDTO\": {\n        \"properties\": {\n          \"customPermissions\": {\n            \"type\": \"string\"\n          },\n          \"granteeName\": {\n            \"type\": \"string\"\n          },\n          \"granteeType\": {\n            \"type\": \"string\"\n          },\n          \"granteeUrl\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isFolder\": {\n            \"type\": \"boolean\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"orgRole\": {\n            \"type\": \"string\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"usersCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardACLInfoDTO\": {\n        \"properties\": {\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"folderId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"inherited\": {\n            \"type\": \"boolean\"\n          },\n          \"isFolder\": {\n            \"type\": \"boolean\"\n          },\n          \"permission\": {\n            \"$ref\": \"#/components/schemas/PermissionType\"\n          },\n          \"permissionName\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"team\": {\n            \"type\": \"string\"\n          },\n          \"teamAvatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"teamEmail\": {\n            \"type\": \"string\"\n          },\n          \"teamId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"userAvatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"userEmail\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"userLogin\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardACLUpdateItem\": {\n        \"properties\": {\n          \"permission\": {\n            \"$ref\": \"#/components/schemas/PermissionType\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          },\n          \"teamId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardDTO\": {\n        \"properties\": {\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/DashboardReportDTO\"\n          },\n          \"reportVariables\": {\n            \"type\": \"object\"\n          },\n          \"timeRange\": {\n            \"$ref\": \"#/components/schemas/TimeRangeDTO\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardFullWithMeta\": {\n        \"properties\": {\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/DashboardMeta\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardMeta\": {\n        \"properties\": {\n          \"annotationsPermissions\": {\n            \"$ref\": \"#/components/schemas/AnnotationPermission\"\n          },\n          \"canAdmin\": {\n            \"type\": \"boolean\"\n          },\n          \"canDelete\": {\n            \"type\": \"boolean\"\n          },\n          \"canEdit\": {\n            \"type\": \"boolean\"\n          },\n          \"canSave\": {\n            \"type\": \"boolean\"\n          },\n          \"canStar\": {\n            \"type\": \"boolean\"\n          },\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"expires\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"folderId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"folderTitle\": {\n            \"type\": \"string\"\n          },\n          \"folderUid\": {\n            \"type\": \"string\"\n          },\n          \"folderUrl\": {\n            \"type\": \"string\"\n          },\n          \"hasAcl\": {\n            \"type\": \"boolean\"\n          },\n          \"isFolder\": {\n            \"type\": \"boolean\"\n          },\n          \"isHome\": {\n            \"type\": \"boolean\"\n          },\n          \"isSnapshot\": {\n            \"type\": \"boolean\"\n          },\n          \"isStarred\": {\n            \"type\": \"boolean\"\n          },\n          \"provisioned\": {\n            \"type\": \"boolean\"\n          },\n          \"provisionedExternalId\": {\n            \"type\": \"string\"\n          },\n          \"publicDashboardAccessToken\": {\n            \"type\": \"string\"\n          },\n          \"publicDashboardEnabled\": {\n            \"type\": \"boolean\"\n          },\n          \"publicDashboardUid\": {\n            \"type\": \"string\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"updatedBy\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardRedirect\": {\n        \"properties\": {\n          \"redirectUri\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardReportDTO\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardSnapshot\": {\n        \"description\": \"DashboardSnapshot model\",\n        \"properties\": {\n          \"Created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"Dashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"DashboardEncrypted\": {\n            \"items\": {\n              \"format\": \"uint8\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"DeleteKey\": {\n            \"type\": \"string\"\n          },\n          \"Expires\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"External\": {\n            \"type\": \"boolean\"\n          },\n          \"ExternalDeleteUrl\": {\n            \"type\": \"string\"\n          },\n          \"ExternalUrl\": {\n            \"type\": \"string\"\n          },\n          \"Id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Key\": {\n            \"type\": \"string\"\n          },\n          \"Name\": {\n            \"type\": \"string\"\n          },\n          \"OrgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"UserId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardSnapshotDTO\": {\n        \"description\": \"DashboardSnapshotDTO without dashboard map\",\n        \"properties\": {\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"expires\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"external\": {\n            \"type\": \"boolean\"\n          },\n          \"externalUrl\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardTagCloudItem\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"term\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardVersionDTO\": {\n        \"properties\": {\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"description\": \"Since we get created by with left join user table, this can be null technically,\\nbut in reality it will always be set, when database is not corrupted.\",\n            \"type\": \"string\"\n          },\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardUid\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"parentVersion\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"restoredFrom\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DashboardVersionMeta\": {\n        \"description\": \"DashboardVersionMeta extends the dashboard version model with the names\\nassociated with the UserIds, overriding the field with the same name from\\nthe DashboardVersion model.\",\n        \"properties\": {\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"parentVersion\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"restoredFrom\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DataLink\": {\n        \"description\": \"DataLink define what\",\n        \"properties\": {\n          \"targetBlank\": {\n            \"type\": \"boolean\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DataResponse\": {\n        \"description\": \"A map of RefIDs (unique query identifiers) to this type makes up the Responses property of a QueryDataResponse.\\nThe Error property is used to allow for partial success responses from the containing QueryDataResponse.\",\n        \"properties\": {\n          \"Error\": {\n            \"description\": \"Error is a property to be set if the the corresponding DataQuery has an error.\",\n            \"type\": \"string\"\n          },\n          \"Frames\": {\n            \"$ref\": \"#/components/schemas/Frames\"\n          }\n        },\n        \"title\": \"DataResponse contains the results from a DataQuery.\",\n        \"type\": \"object\"\n      },\n      \"DataSource\": {\n        \"properties\": {\n          \"access\": {\n            \"$ref\": \"#/components/schemas/DsAccess\"\n          },\n          \"accessControl\": {\n            \"$ref\": \"#/components/schemas/Metadata\"\n          },\n          \"basicAuth\": {\n            \"type\": \"boolean\"\n          },\n          \"basicAuthUser\": {\n            \"type\": \"string\"\n          },\n          \"database\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"jsonData\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"readOnly\": {\n            \"type\": \"boolean\"\n          },\n          \"secureJsonFields\": {\n            \"additionalProperties\": {\n              \"type\": \"boolean\"\n            },\n            \"type\": \"object\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"typeLogoUrl\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"withCredentials\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DataSourceList\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/DataSourceListItemDTO\"\n        },\n        \"type\": \"array\"\n      },\n      \"DataSourceListItemDTO\": {\n        \"properties\": {\n          \"access\": {\n            \"$ref\": \"#/components/schemas/DsAccess\"\n          },\n          \"basicAuth\": {\n            \"type\": \"boolean\"\n          },\n          \"database\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"jsonData\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"readOnly\": {\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"typeLogoUrl\": {\n            \"type\": \"string\"\n          },\n          \"typeName\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DataSourcePermissionRuleDTO\": {\n        \"properties\": {\n          \"builtInRole\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"datasourceId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isManaged\": {\n            \"type\": \"boolean\"\n          },\n          \"permission\": {\n            \"$ref\": \"#/components/schemas/DsPermissionType\"\n          },\n          \"permissionName\": {\n            \"type\": \"string\"\n          },\n          \"team\": {\n            \"type\": \"string\"\n          },\n          \"teamAvatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"teamEmail\": {\n            \"type\": \"string\"\n          },\n          \"teamId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"userAvatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"userEmail\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"userLogin\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DataSourcePermissionsDTO\": {\n        \"properties\": {\n          \"datasourceId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DataSourcePermissionRuleDTO\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DataTopic\": {\n        \"title\": \"DataTopic is used to identify which topic the frame should be assigned to.\",\n        \"type\": \"string\"\n      },\n      \"DateTime\": {\n        \"description\": \"DateTime is a time but it serializes to ISO8601 format with millis\\nIt knows how to read 3 different variations of a RFC3339 date time.\\nMost APIs we encounter want either millisecond or second precision times.\\nThis just tries to make it worry-free.\",\n        \"format\": \"date-time\",\n        \"type\": \"string\"\n      },\n      \"DayOfMonthRange\": {\n        \"properties\": {\n          \"Begin\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"End\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"A DayOfMonthRange is an inclusive range that may have negative Beginning/End values that represent distance from the End of the month Beginning at -1.\",\n        \"type\": \"object\"\n      },\n      \"DeleteCorrelationResponseBody\": {\n        \"properties\": {\n          \"message\": {\n            \"example\": \"Correlation deleted\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DeleteTokenCommand\": {\n        \"properties\": {\n          \"instance\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DiscoveryBase\": {\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"errorType\": {\n            \"$ref\": \"#/components/schemas/ErrorType\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"status\"\n        ],\n        \"type\": \"object\"\n      },\n      \"DsAccess\": {\n        \"type\": \"string\"\n      },\n      \"DsPermissionType\": {\n        \"description\": \"Datasource permission\\nDescription:\\n`0` - No Access\\n`1` - Query\\nEnum: 0,1\",\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n      },\n      \"Duration\": {\n        \"description\": \"A Duration represents the elapsed time between two instants\\nas an int64 nanosecond count. The representation limits the\\nlargest representable duration to approximately 290 years.\",\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n      },\n      \"EmailConfig\": {\n        \"properties\": {\n          \"auth_identity\": {\n            \"type\": \"string\"\n          },\n          \"auth_password\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"auth_secret\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"auth_username\": {\n            \"type\": \"string\"\n          },\n          \"from\": {\n            \"type\": \"string\"\n          },\n          \"headers\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"hello\": {\n            \"type\": \"string\"\n          },\n          \"html\": {\n            \"type\": \"string\"\n          },\n          \"require_tls\": {\n            \"type\": \"boolean\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"smarthost\": {\n            \"$ref\": \"#/components/schemas/HostPort\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"tls_config\": {\n            \"$ref\": \"#/components/schemas/TLSConfig\"\n          },\n          \"to\": {\n            \"description\": \"Email address to notify.\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"EmailConfig configures notifications via mail.\",\n        \"type\": \"object\"\n      },\n      \"EmbeddedContactPoint\": {\n        \"description\": \"EmbeddedContactPoint is the contact point type that is used\\nby grafanas embedded alertmanager implementation.\",\n        \"properties\": {\n          \"disableResolveMessage\": {\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"description\": \"Name is used as grouping key in the UI. Contact points with the\\nsame name will be grouped in the UI.\",\n            \"example\": \"webhook_1\",\n            \"type\": \"string\"\n          },\n          \"provenance\": {\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"alertmanager\",\n              \" dingding\",\n              \" discord\",\n              \" email\",\n              \" googlechat\",\n              \" kafka\",\n              \" line\",\n              \" opsgenie\",\n              \" pagerduty\",\n              \" pushover\",\n              \" sensugo\",\n              \" slack\",\n              \" teams\",\n              \" telegram\",\n              \" threema\",\n              \" victorops\",\n              \" webhook\",\n              \" wecom\"\n            ],\n            \"example\": \"webhook\",\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"description\": \"UID is the unique identifier of the contact point. The UID can be\\nset by the user.\",\n            \"example\": \"my_external_reference\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"settings\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ErrorResponseBody\": {\n        \"properties\": {\n          \"error\": {\n            \"description\": \"Error An optional detailed description of the actual error. Only included if running in developer mode.\",\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"description\": \"a human readable version of the error\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"Status An optional status to denote the cause of the error.\\n\\nFor example, a 412 Precondition Failed error may include additional information of why that error happened.\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"message\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ErrorType\": {\n        \"title\": \"ErrorType models the different API error types.\",\n        \"type\": \"string\"\n      },\n      \"EvalAlertConditionCommand\": {\n        \"description\": \"EvalAlertConditionCommand is the command for evaluating a condition\",\n        \"properties\": {\n          \"condition\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertQuery\"\n            },\n            \"type\": \"array\"\n          },\n          \"now\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"EvalMatch\": {\n        \"properties\": {\n          \"metric\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"value\": {\n            \"$ref\": \"#/components/schemas/Float\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"EvalQueriesPayload\": {\n        \"properties\": {\n          \"data\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertQuery\"\n            },\n            \"type\": \"array\"\n          },\n          \"now\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"EvalQueriesResponse\": {},\n      \"ExtendedReceiver\": {\n        \"properties\": {\n          \"email_configs\": {\n            \"$ref\": \"#/components/schemas/EmailConfig\"\n          },\n          \"grafana_managed_receiver\": {\n            \"$ref\": \"#/components/schemas/PostableGrafanaReceiver\"\n          },\n          \"opsgenie_configs\": {\n            \"$ref\": \"#/components/schemas/OpsGenieConfig\"\n          },\n          \"pagerduty_configs\": {\n            \"$ref\": \"#/components/schemas/PagerdutyConfig\"\n          },\n          \"pushover_configs\": {\n            \"$ref\": \"#/components/schemas/PushoverConfig\"\n          },\n          \"slack_configs\": {\n            \"$ref\": \"#/components/schemas/SlackConfig\"\n          },\n          \"victorops_configs\": {\n            \"$ref\": \"#/components/schemas/VictorOpsConfig\"\n          },\n          \"webhook_configs\": {\n            \"$ref\": \"#/components/schemas/WebhookConfig\"\n          },\n          \"wechat_configs\": {\n            \"$ref\": \"#/components/schemas/WechatConfig\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"FailedUser\": {\n        \"description\": \"FailedUser holds the information of an user that failed\",\n        \"properties\": {\n          \"Error\": {\n            \"type\": \"string\"\n          },\n          \"Login\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Failure\": {\n        \"$ref\": \"#/components/schemas/ResponseDetails\"\n      },\n      \"Field\": {\n        \"description\": \"A Field is essentially a slice of various types with extra properties and methods.\\nSee NewField() for supported types.\\n\\nThe slice data in the Field is a not exported, so methods on the Field are used to to manipulate its data.\",\n        \"properties\": {\n          \"config\": {\n            \"$ref\": \"#/components/schemas/FieldConfig\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/FrameLabels\"\n          },\n          \"name\": {\n            \"description\": \"Name is default identifier of the field. The name does not have to be unique, but the combination\\nof name and Labels should be unique for proper behavior in all situations.\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"Field represents a typed column of data within a Frame.\",\n        \"type\": \"object\"\n      },\n      \"FieldConfig\": {\n        \"properties\": {\n          \"color\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Map values to a display color\\nNOTE: this interface is under development in the frontend... so simple map for now\",\n            \"type\": \"object\"\n          },\n          \"custom\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Panel Specific Values\",\n            \"type\": \"object\"\n          },\n          \"decimals\": {\n            \"format\": \"uint16\",\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"description\": \"Description is human readable field metadata\",\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"description\": \"DisplayName overrides Grafana default naming, should not be used from a data source\",\n            \"type\": \"string\"\n          },\n          \"displayNameFromDS\": {\n            \"description\": \"DisplayNameFromDS overrides Grafana default naming in a better way that allows users to override it easily.\",\n            \"type\": \"string\"\n          },\n          \"filterable\": {\n            \"description\": \"Filterable indicates if the Field's data can be filtered by additional calls.\",\n            \"type\": \"boolean\"\n          },\n          \"interval\": {\n            \"description\": \"Interval indicates the expected regular step between values in the series.\\nWhen an interval exists, consumers can identify \\\"missing\\\" values when the expected value is not present.\\nThe grafana timeseries visualization will render disconnected values when missing values are found it the time field.\\nThe interval uses the same units as the values.  For time.Time, this is defined in milliseconds.\",\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"links\": {\n            \"description\": \"The behavior when clicking on a result\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DataLink\"\n            },\n            \"type\": \"array\"\n          },\n          \"mappings\": {\n            \"$ref\": \"#/components/schemas/ValueMappings\"\n          },\n          \"max\": {\n            \"$ref\": \"#/components/schemas/ConfFloat64\"\n          },\n          \"min\": {\n            \"$ref\": \"#/components/schemas/ConfFloat64\"\n          },\n          \"noValue\": {\n            \"description\": \"Alternative to empty string\",\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"description\": \"Path is an explicit path to the field in the datasource. When the frame meta includes a path,\\nthis will default to `${frame.meta.path}/${field.name}\\n\\nWhen defined, this value can be used as an identifier within the datasource scope, and\\nmay be used as an identifier to update values in a subsequent request\",\n            \"type\": \"string\"\n          },\n          \"thresholds\": {\n            \"$ref\": \"#/components/schemas/ThresholdsConfig\"\n          },\n          \"unit\": {\n            \"description\": \"Numeric Options\",\n            \"type\": \"string\"\n          },\n          \"writeable\": {\n            \"description\": \"Writeable indicates that the datasource knows how to update this value\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"title\": \"FieldConfig represents the display properties for a Field.\",\n        \"type\": \"object\"\n      },\n      \"FindTagsResult\": {\n        \"properties\": {\n          \"tags\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TagsDTO\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"FindTagsResult is the result of a tags search.\",\n        \"type\": \"object\"\n      },\n      \"Float\": {\n        \"description\": \"It does not consider zero values to be null.\\nIt will decode to null, not zero, if null.\",\n        \"properties\": {\n          \"Float64\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"Valid\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"title\": \"Float is a nullable float64.\",\n        \"type\": \"object\"\n      },\n      \"Folder\": {\n        \"properties\": {\n          \"accessControl\": {\n            \"$ref\": \"#/components/schemas/Metadata\"\n          },\n          \"canAdmin\": {\n            \"type\": \"boolean\"\n          },\n          \"canDelete\": {\n            \"type\": \"boolean\"\n          },\n          \"canEdit\": {\n            \"type\": \"boolean\"\n          },\n          \"canSave\": {\n            \"type\": \"boolean\"\n          },\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"hasAcl\": {\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"updatedBy\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"FolderSearchHit\": {\n        \"properties\": {\n          \"accessControl\": {\n            \"$ref\": \"#/components/schemas/Metadata\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Frame\": {\n        \"description\": \"Each Field is well typed by its FieldType and supports optional Labels.\\n\\nA Frame is a general data container for Grafana. A Frame can be table data\\nor time series data depending on its content and field types.\",\n        \"properties\": {\n          \"Fields\": {\n            \"description\": \"Fields are the columns of a frame.\\nAll Fields must be of the same the length when marshalling the Frame for transmission.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            },\n            \"type\": \"array\"\n          },\n          \"Meta\": {\n            \"$ref\": \"#/components/schemas/FrameMeta\"\n          },\n          \"Name\": {\n            \"description\": \"Name is used in some Grafana visualizations.\",\n            \"type\": \"string\"\n          },\n          \"RefID\": {\n            \"description\": \"RefID is a property that can be set to match a Frame to its originating query.\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"Frame is a columnar data structure where each column is a Field.\",\n        \"type\": \"object\"\n      },\n      \"FrameLabels\": {\n        \"additionalProperties\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"Labels are used to add metadata to an object.  The JSON will always be sorted keys\",\n        \"type\": \"object\"\n      },\n      \"FrameMeta\": {\n        \"description\": \"https://github.com/grafana/grafana/blob/master/packages/grafana-data/src/types/data.ts#L11\\nNOTE -- in javascript this can accept any `[key: string]: any;` however\\nthis interface only exposes the values we want to be exposed\",\n        \"properties\": {\n          \"channel\": {\n            \"description\": \"Channel is the path to a stream in grafana live that has real-time updates for this data.\",\n            \"type\": \"string\"\n          },\n          \"custom\": {\n            \"description\": \"Custom datasource specific values.\",\n            \"type\": \"object\"\n          },\n          \"dataTopic\": {\n            \"$ref\": \"#/components/schemas/DataTopic\"\n          },\n          \"executedQueryString\": {\n            \"description\": \"ExecutedQueryString is the raw query sent to the underlying system. All macros and templating\\nhave been applied.  When metadata contains this value, it will be shown in the query inspector.\",\n            \"type\": \"string\"\n          },\n          \"notices\": {\n            \"description\": \"Notices provide additional information about the data in the Frame that\\nGrafana can display to the user in the user interface.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Notice\"\n            },\n            \"type\": \"array\"\n          },\n          \"path\": {\n            \"description\": \"Path is a browsable path on the datasource.\",\n            \"type\": \"string\"\n          },\n          \"pathSeparator\": {\n            \"description\": \"PathSeparator defines the separator pattern to decode a hierarchy. The default separator is '/'.\",\n            \"type\": \"string\"\n          },\n          \"preferredVisualisationType\": {\n            \"$ref\": \"#/components/schemas/VisType\"\n          },\n          \"stats\": {\n            \"description\": \"Stats is an array of query result statistics.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/QueryStat\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/FrameType\"\n          }\n        },\n        \"title\": \"FrameMeta matches:\",\n        \"type\": \"object\"\n      },\n      \"FrameType\": {\n        \"description\": \"A FrameType string, when present in a frame's metadata, asserts that the\\nframe's structure conforms to the FrameType's specification.\\nThis property is currently optional, so FrameType may be FrameTypeUnknown even if the properties of\\nthe Frame correspond to a defined FrameType.\",\n        \"type\": \"string\"\n      },\n      \"Frames\": {\n        \"description\": \"It is the main data container within a backend.DataResponse.\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Frame\"\n        },\n        \"title\": \"Frames is a slice of Frame pointers.\",\n        \"type\": \"array\"\n      },\n      \"GetAnnotationTagsResponse\": {\n        \"properties\": {\n          \"result\": {\n            \"$ref\": \"#/components/schemas/FindTagsResult\"\n          }\n        },\n        \"title\": \"GetAnnotationTagsResponse is a response struct for FindTagsResult.\",\n        \"type\": \"object\"\n      },\n      \"GetHomeDashboardResponse\": {\n        \"allOf\": [\n          {\n            \"properties\": {\n              \"dashboard\": {\n                \"$ref\": \"#/components/schemas/Json\"\n              },\n              \"meta\": {\n                \"$ref\": \"#/components/schemas/DashboardMeta\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          {\n            \"properties\": {\n              \"redirectUri\": {\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          }\n        ],\n        \"title\": \"Get home dashboard response.\"\n      },\n      \"GettableAlertmanagers\": {\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/AlertManagersResult\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableApiAlertingConfig\": {\n        \"properties\": {\n          \"global\": {\n            \"$ref\": \"#/components/schemas/GlobalConfig\"\n          },\n          \"inhibit_rules\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/InhibitRule\"\n            },\n            \"type\": \"array\"\n          },\n          \"muteTimeProvenances\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Provenance\"\n            },\n            \"type\": \"object\"\n          },\n          \"mute_time_intervals\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n            },\n            \"type\": \"array\"\n          },\n          \"receivers\": {\n            \"description\": \"Override with our superset receiver type\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GettableApiReceiver\"\n            },\n            \"type\": \"array\"\n          },\n          \"route\": {\n            \"$ref\": \"#/components/schemas/Route\"\n          },\n          \"templates\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableApiReceiver\": {\n        \"properties\": {\n          \"email_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EmailConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"grafana_managed_receiver_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GettableGrafanaReceiver\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"A unique identifier for this receiver.\",\n            \"type\": \"string\"\n          },\n          \"opsgenie_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OpsGenieConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagerduty_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PagerdutyConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"pushover_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PushoverConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"slack_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SlackConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"sns_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SNSConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"telegram_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TelegramConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"victorops_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/VictorOpsConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"webhook_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/WebhookConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"wechat_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/WechatConfig\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableExtendedRuleNode\": {\n        \"properties\": {\n          \"alert\": {\n            \"type\": \"string\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"expr\": {\n            \"type\": \"string\"\n          },\n          \"for\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"grafana_alert\": {\n            \"$ref\": \"#/components/schemas/GettableGrafanaRule\"\n          },\n          \"labels\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"record\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableGrafanaReceiver\": {\n        \"properties\": {\n          \"disableResolveMessage\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"provenance\": {\n            \"$ref\": \"#/components/schemas/Provenance\"\n          },\n          \"secureFields\": {\n            \"additionalProperties\": {\n              \"type\": \"boolean\"\n            },\n            \"type\": \"object\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableGrafanaReceivers\": {\n        \"properties\": {\n          \"grafana_managed_receiver_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GettableGrafanaReceiver\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableGrafanaRule\": {\n        \"properties\": {\n          \"condition\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertQuery\"\n            },\n            \"type\": \"array\"\n          },\n          \"exec_err_state\": {\n            \"enum\": [\n              \"OK\",\n              \"Alerting\",\n              \"Error\"\n            ],\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"intervalSeconds\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"namespace_id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"namespace_uid\": {\n            \"type\": \"string\"\n          },\n          \"no_data_state\": {\n            \"enum\": [\n              \"Alerting\",\n              \"NoData\",\n              \"OK\"\n            ],\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"provenance\": {\n            \"$ref\": \"#/components/schemas/Provenance\"\n          },\n          \"rule_group\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableNGalertConfig\": {\n        \"properties\": {\n          \"alertmanagers\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"alertmanagersChoice\": {\n            \"enum\": [\n              \"all\",\n              \"internal\",\n              \"external\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableRuleGroupConfig\": {\n        \"properties\": {\n          \"interval\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"rules\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GettableExtendedRuleNode\"\n            },\n            \"type\": \"array\"\n          },\n          \"source_tenants\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GettableStatus\": {\n        \"properties\": {\n          \"cluster\": {\n            \"$ref\": \"#/components/schemas/clusterStatus\"\n          },\n          \"config\": {\n            \"$ref\": \"#/components/schemas/PostableApiAlertingConfig\"\n          },\n          \"uptime\": {\n            \"description\": \"uptime\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"versionInfo\": {\n            \"$ref\": \"#/components/schemas/versionInfo\"\n          }\n        },\n        \"required\": [\n          \"cluster\",\n          \"config\",\n          \"uptime\",\n          \"versionInfo\"\n        ],\n        \"type\": \"object\"\n      },\n      \"GettableUserConfig\": {\n        \"properties\": {\n          \"alertmanager_config\": {\n            \"$ref\": \"#/components/schemas/GettableApiAlertingConfig\"\n          },\n          \"template_file_provenances\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Provenance\"\n            },\n            \"type\": \"object\"\n          },\n          \"template_files\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GlobalConfig\": {\n        \"description\": \"GlobalConfig defines configuration parameters that are valid globally\\nunless overwritten.\",\n        \"properties\": {\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"opsgenie_api_key\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"opsgenie_api_key_file\": {\n            \"type\": \"string\"\n          },\n          \"opsgenie_api_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"pagerduty_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"resolve_timeout\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"slack_api_url\": {\n            \"$ref\": \"#/components/schemas/SecretURL\"\n          },\n          \"slack_api_url_file\": {\n            \"type\": \"string\"\n          },\n          \"smtp_auth_identity\": {\n            \"type\": \"string\"\n          },\n          \"smtp_auth_password\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"smtp_auth_secret\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"smtp_auth_username\": {\n            \"type\": \"string\"\n          },\n          \"smtp_from\": {\n            \"type\": \"string\"\n          },\n          \"smtp_hello\": {\n            \"type\": \"string\"\n          },\n          \"smtp_require_tls\": {\n            \"type\": \"boolean\"\n          },\n          \"smtp_smarthost\": {\n            \"$ref\": \"#/components/schemas/HostPort\"\n          },\n          \"telegram_api_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"victorops_api_key\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"victorops_api_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"wechat_api_corp_id\": {\n            \"type\": \"string\"\n          },\n          \"wechat_api_secret\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"wechat_api_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"HTTPClientConfig\": {\n        \"properties\": {\n          \"authorization\": {\n            \"$ref\": \"#/components/schemas/Authorization\"\n          },\n          \"basic_auth\": {\n            \"$ref\": \"#/components/schemas/BasicAuth\"\n          },\n          \"bearer_token\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"bearer_token_file\": {\n            \"description\": \"The bearer token file for the targets. Deprecated in favour of\\nAuthorization.CredentialsFile.\",\n            \"type\": \"string\"\n          },\n          \"follow_redirects\": {\n            \"description\": \"FollowRedirects specifies whether the client should follow HTTP 3xx redirects.\\nThe omitempty flag is not set, because it would be hidden from the\\nmarshalled configuration when set to false.\",\n            \"type\": \"boolean\"\n          },\n          \"oauth2\": {\n            \"$ref\": \"#/components/schemas/OAuth2\"\n          },\n          \"proxy_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"tls_config\": {\n            \"$ref\": \"#/components/schemas/TLSConfig\"\n          }\n        },\n        \"title\": \"HTTPClientConfig configures an HTTP client.\",\n        \"type\": \"object\"\n      },\n      \"Hit\": {\n        \"properties\": {\n          \"folderId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"folderTitle\": {\n            \"type\": \"string\"\n          },\n          \"folderUid\": {\n            \"type\": \"string\"\n          },\n          \"folderUrl\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isStarred\": {\n            \"type\": \"boolean\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"sortMeta\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"sortMetaName\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/HitType\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"HitList\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Hit\"\n        },\n        \"type\": \"array\"\n      },\n      \"HitType\": {\n        \"type\": \"string\"\n      },\n      \"HostPort\": {\n        \"properties\": {\n          \"Host\": {\n            \"type\": \"string\"\n          },\n          \"Port\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"HostPort represents a \\\"host:port\\\" network address.\",\n        \"type\": \"object\"\n      },\n      \"ImportDashboardInput\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"pluginId\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"ImportDashboardInput definition of input parameters when importing a dashboard.\",\n        \"type\": \"object\"\n      },\n      \"ImportDashboardRequest\": {\n        \"properties\": {\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"folderId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"folderUid\": {\n            \"type\": \"string\"\n          },\n          \"inputs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ImportDashboardInput\"\n            },\n            \"type\": \"array\"\n          },\n          \"overwrite\": {\n            \"type\": \"boolean\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"pluginId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"ImportDashboardRequest request object for importing a dashboard.\",\n        \"type\": \"object\"\n      },\n      \"ImportDashboardResponse\": {\n        \"properties\": {\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"folderId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"imported\": {\n            \"type\": \"boolean\"\n          },\n          \"importedRevision\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"importedUri\": {\n            \"type\": \"string\"\n          },\n          \"importedUrl\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"pluginId\": {\n            \"type\": \"string\"\n          },\n          \"removed\": {\n            \"type\": \"boolean\"\n          },\n          \"revision\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"ImportDashboardResponse response object returned when importing a dashboard.\",\n        \"type\": \"object\"\n      },\n      \"InclusiveRange\": {\n        \"properties\": {\n          \"Begin\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"End\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"InclusiveRange is used to hold the Beginning and End values of many time interval components.\",\n        \"type\": \"object\"\n      },\n      \"InhibitRule\": {\n        \"description\": \"InhibitRule defines an inhibition rule that mutes alerts that match the\\ntarget labels if an alert matching the source labels exists.\\nBoth alerts have to have a set of labels being equal.\",\n        \"properties\": {\n          \"equal\": {\n            \"$ref\": \"#/components/schemas/LabelNames\"\n          },\n          \"source_match\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"SourceMatch defines a set of labels that have to equal the given\\nvalue for source alerts. Deprecated. Remove before v1.0 release.\",\n            \"type\": \"object\"\n          },\n          \"source_match_re\": {\n            \"$ref\": \"#/components/schemas/MatchRegexps\"\n          },\n          \"source_matchers\": {\n            \"$ref\": \"#/components/schemas/Matchers\"\n          },\n          \"target_match\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"TargetMatch defines a set of labels that have to equal the given\\nvalue for target alerts. Deprecated. Remove before v1.0 release.\",\n            \"type\": \"object\"\n          },\n          \"target_match_re\": {\n            \"$ref\": \"#/components/schemas/MatchRegexps\"\n          },\n          \"target_matchers\": {\n            \"$ref\": \"#/components/schemas/Matchers\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"InspectType\": {\n        \"format\": \"int64\",\n        \"title\": \"InspectType is a type for the Inspect property of a Notice.\",\n        \"type\": \"integer\"\n      },\n      \"ItemDTO\": {\n        \"properties\": {\n          \"alertId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"alertName\": {\n            \"type\": \"string\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardUID\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"newState\": {\n            \"type\": \"string\"\n          },\n          \"panelId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"prevState\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"time\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"timeEnd\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"updated\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Json\": {\n        \"type\": \"object\"\n      },\n      \"Label\": {\n        \"properties\": {\n          \"Name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"Label is a key/value pair of strings.\",\n        \"type\": \"object\"\n      },\n      \"LabelName\": {\n        \"description\": \"A LabelName is a key for a LabelSet or Metric.  It has a value associated\\ntherewith.\",\n        \"type\": \"string\"\n      },\n      \"LabelNames\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/LabelName\"\n        },\n        \"title\": \"LabelNames is a sortable LabelName slice. In implements sort.Interface.\",\n        \"type\": \"array\"\n      },\n      \"LabelSet\": {\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/LabelValue\"\n        },\n        \"description\": \"A LabelSet is a collection of LabelName and LabelValue pairs.  The LabelSet\\nmay be fully-qualified down to the point where it may resolve to a single\\nMetric in the data store or not.  All operations that occur within the realm\\nof a LabelSet can emit a vector of Metric entities to which the LabelSet may\\nmatch.\",\n        \"type\": \"object\"\n      },\n      \"LabelValue\": {\n        \"title\": \"A LabelValue is an associated value for a LabelName.\",\n        \"type\": \"string\"\n      },\n      \"Labels\": {\n        \"description\": \"Labels is a sorted set of labels. Order has to be guaranteed upon\\ninstantiation.\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Label\"\n        },\n        \"type\": \"array\"\n      },\n      \"LegacyAlert\": {\n        \"properties\": {\n          \"Created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"DashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"EvalData\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"ExecutionError\": {\n            \"type\": \"string\"\n          },\n          \"For\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"Frequency\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Handler\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Message\": {\n            \"type\": \"string\"\n          },\n          \"Name\": {\n            \"type\": \"string\"\n          },\n          \"NewStateDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"OrgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"PanelId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"Severity\": {\n            \"type\": \"string\"\n          },\n          \"Silenced\": {\n            \"type\": \"boolean\"\n          },\n          \"State\": {\n            \"$ref\": \"#/components/schemas/AlertStateType\"\n          },\n          \"StateChanges\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"Version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"LibraryElementConnectionDTO\": {\n        \"properties\": {\n          \"connectionId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"connectionUid\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/LibraryElementDTOMetaUser\"\n          },\n          \"elementId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"kind\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"LibraryElementConnectionDTO is the frontend DTO for element connections.\",\n        \"type\": \"object\"\n      },\n      \"LibraryElementConnectionsResponse\": {\n        \"properties\": {\n          \"result\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryElementConnectionDTO\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"LibraryElementConnectionsResponse is a response struct for an array of LibraryElementConnectionDTO.\",\n        \"type\": \"object\"\n      },\n      \"LibraryElementDTO\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"folderId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"folderUid\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"kind\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/LibraryElementDTOMeta\"\n          },\n          \"model\": {\n            \"type\": \"object\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"LibraryElementDTO is the frontend DTO for entities.\",\n        \"type\": \"object\"\n      },\n      \"LibraryElementDTOMeta\": {\n        \"properties\": {\n          \"connectedDashboards\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/LibraryElementDTOMetaUser\"\n          },\n          \"folderName\": {\n            \"type\": \"string\"\n          },\n          \"folderUid\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"updatedBy\": {\n            \"$ref\": \"#/components/schemas/LibraryElementDTOMetaUser\"\n          }\n        },\n        \"title\": \"LibraryElementDTOMeta is the meta information for LibraryElementDTO.\",\n        \"type\": \"object\"\n      },\n      \"LibraryElementDTOMetaUser\": {\n        \"properties\": {\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"LibraryElementDTOMetaUser is the meta information for user that creates/changes the library element.\",\n        \"type\": \"object\"\n      },\n      \"LibraryElementResponse\": {\n        \"properties\": {\n          \"result\": {\n            \"$ref\": \"#/components/schemas/LibraryElementDTO\"\n          }\n        },\n        \"title\": \"LibraryElementResponse is a response struct for LibraryElementDTO.\",\n        \"type\": \"object\"\n      },\n      \"LibraryElementSearchResponse\": {\n        \"properties\": {\n          \"result\": {\n            \"$ref\": \"#/components/schemas/LibraryElementSearchResult\"\n          }\n        },\n        \"title\": \"LibraryElementSearchResponse is a response struct for LibraryElementSearchResult.\",\n        \"type\": \"object\"\n      },\n      \"LibraryElementSearchResult\": {\n        \"properties\": {\n          \"elements\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LibraryElementDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"page\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"perPage\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"totalCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"LibraryElementSearchResult is the search result for entities.\",\n        \"type\": \"object\"\n      },\n      \"MassDeleteAnnotationsCmd\": {\n        \"properties\": {\n          \"annotationId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardUID\": {\n            \"type\": \"string\"\n          },\n          \"panelId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MatchRegexps\": {\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/Regexp\"\n        },\n        \"title\": \"MatchRegexps represents a map of Regexp.\",\n        \"type\": \"object\"\n      },\n      \"MatchType\": {\n        \"format\": \"int64\",\n        \"title\": \"MatchType is an enum for label matching types.\",\n        \"type\": \"integer\"\n      },\n      \"Matcher\": {\n        \"properties\": {\n          \"Name\": {\n            \"type\": \"string\"\n          },\n          \"Type\": {\n            \"$ref\": \"#/components/schemas/MatchType\"\n          },\n          \"Value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"Matcher models the matching of a label.\",\n        \"type\": \"object\"\n      },\n      \"Matchers\": {\n        \"description\": \"Matchers is a slice of Matchers that is sortable, implements Stringer, and\\nprovides a Matches method to match a LabelSet against all Matchers in the\\nslice. Note that some users of Matchers might require it to be sorted.\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Matcher\"\n        },\n        \"type\": \"array\"\n      },\n      \"MessageTemplate\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"provenance\": {\n            \"$ref\": \"#/components/schemas/Provenance\"\n          },\n          \"template\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MessageTemplateContent\": {\n        \"properties\": {\n          \"template\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MessageTemplates\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/MessageTemplate\"\n        },\n        \"type\": \"array\"\n      },\n      \"Metadata\": {\n        \"additionalProperties\": {\n          \"type\": \"boolean\"\n        },\n        \"description\": \"Metadata contains user accesses for a given resource\\nEx: map[string]bool{\\\"create\\\":true, \\\"delete\\\": true}\",\n        \"type\": \"object\"\n      },\n      \"MetricRequest\": {\n        \"properties\": {\n          \"debug\": {\n            \"type\": \"boolean\"\n          },\n          \"from\": {\n            \"description\": \"From Start time in epoch timestamps in milliseconds or relative using Grafana time units.\",\n            \"example\": \"now-1h\",\n            \"type\": \"string\"\n          },\n          \"publicDashboardAccessToken\": {\n            \"type\": \"string\"\n          },\n          \"queries\": {\n            \"description\": \"queries.refId – Specifies an identifier of the query. Is optional and default to “A”.\\nqueries.datasourceId – Specifies the data source to be queried. Each query in the request must have an unique datasourceId.\\nqueries.maxDataPoints - Species maximum amount of data points that dashboard panel can render. Is optional and default to 100.\\nqueries.intervalMs - Specifies the time interval in milliseconds of time series. Is optional and defaults to 1000.\",\n            \"example\": [\n              {\n                \"datasource\": {\n                  \"uid\": \"PD8C576611E62080A\"\n                },\n                \"format\": \"table\",\n                \"intervalMs\": 86400000,\n                \"maxDataPoints\": 1092,\n                \"rawSql\": \"SELECT 1 as valueOne, 2 as valueTwo\",\n                \"refId\": \"A\"\n              }\n            ],\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Json\"\n            },\n            \"type\": \"array\"\n          },\n          \"to\": {\n            \"description\": \"To End time in epoch timestamps in milliseconds or relative using Grafana time units.\",\n            \"example\": \"now\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"from\",\n          \"to\",\n          \"queries\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MigrateQueriesToQueryHistoryCommand\": {\n        \"description\": \"MigrateQueriesToQueryHistoryCommand is the command used for migration of old queries into query history\",\n        \"properties\": {\n          \"queries\": {\n            \"description\": \"Array of queries to store in query history.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/QueryToMigrate\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MonthRange\": {\n        \"properties\": {\n          \"Begin\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"End\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"A MonthRange is an inclusive range between [1, 12] where 1 = January.\",\n        \"type\": \"object\"\n      },\n      \"MultiStatus\": {\n        \"type\": \"object\"\n      },\n      \"MuteTimeInterval\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"time_intervals\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TimeInterval\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"MuteTimeInterval represents a named set of time intervals for which a route should be muted.\",\n        \"type\": \"object\"\n      },\n      \"MuteTimings\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n        },\n        \"type\": \"array\"\n      },\n      \"NamespaceConfigResponse\": {\n        \"additionalProperties\": {\n          \"items\": {\n            \"$ref\": \"#/components/schemas/GettableRuleGroupConfig\"\n          },\n          \"type\": \"array\"\n        },\n        \"type\": \"object\"\n      },\n      \"NavLink\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"target\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"NavbarPreference\": {\n        \"properties\": {\n          \"savedItems\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NavLink\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"NewApiKeyResult\": {\n        \"properties\": {\n          \"id\": {\n            \"example\": 1,\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"key\": {\n            \"example\": \"glsa_yscW25imSKJIuav8zF37RZmnbiDvB05G_fcaaf58a\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"example\": \"grafana\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"NotFound\": {\n        \"type\": \"object\"\n      },\n      \"Notice\": {\n        \"properties\": {\n          \"inspect\": {\n            \"$ref\": \"#/components/schemas/InspectType\"\n          },\n          \"link\": {\n            \"description\": \"Link is an optional link for display in the user interface and can be an\\nabsolute URL or a path relative to Grafana's root url.\",\n            \"type\": \"string\"\n          },\n          \"severity\": {\n            \"$ref\": \"#/components/schemas/NoticeSeverity\"\n          },\n          \"text\": {\n            \"description\": \"Text is freeform descriptive text for the notice.\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"Notice provides a structure for presenting notifications in Grafana's user interface.\",\n        \"type\": \"object\"\n      },\n      \"NoticeSeverity\": {\n        \"format\": \"int64\",\n        \"title\": \"NoticeSeverity is a type for the Severity property of a Notice.\",\n        \"type\": \"integer\"\n      },\n      \"NotificationTestCommand\": {\n        \"properties\": {\n          \"disableResolveMessage\": {\n            \"type\": \"boolean\"\n          },\n          \"frequency\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secureSettings\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"sendReminder\": {\n            \"type\": \"boolean\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"NotifierConfig\": {\n        \"properties\": {\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"title\": \"NotifierConfig contains base options common across all notifier configurations.\",\n        \"type\": \"object\"\n      },\n      \"OAuth2\": {\n        \"properties\": {\n          \"TLSConfig\": {\n            \"$ref\": \"#/components/schemas/TLSConfig\"\n          },\n          \"client_id\": {\n            \"type\": \"string\"\n          },\n          \"client_secret\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"client_secret_file\": {\n            \"type\": \"string\"\n          },\n          \"endpoint_params\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"scopes\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"token_url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"OAuth2 is the oauth2 client configuration.\",\n        \"type\": \"object\"\n      },\n      \"ObjectMatchers\": {\n        \"$ref\": \"#/components/schemas/Matchers\"\n      },\n      \"OpsGenieConfig\": {\n        \"properties\": {\n          \"actions\": {\n            \"type\": \"string\"\n          },\n          \"api_key\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"api_key_file\": {\n            \"type\": \"string\"\n          },\n          \"api_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"details\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"entity\": {\n            \"type\": \"string\"\n          },\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"note\": {\n            \"type\": \"string\"\n          },\n          \"priority\": {\n            \"type\": \"string\"\n          },\n          \"responders\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OpsGenieConfigResponder\"\n            },\n            \"type\": \"array\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"source\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"string\"\n          },\n          \"update_alerts\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"title\": \"OpsGenieConfig configures notifications via OpsGenie.\",\n        \"type\": \"object\"\n      },\n      \"OpsGenieConfigResponder\": {\n        \"properties\": {\n          \"id\": {\n            \"description\": \"One of those 3 should be filled.\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"description\": \"team, user, escalation, schedule etc.\",\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"OrgDTO\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"OrgDetailsDTO\": {\n        \"properties\": {\n          \"address\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"OrgUserDTO\": {\n        \"properties\": {\n          \"accessControl\": {\n            \"additionalProperties\": {\n              \"type\": \"boolean\"\n            },\n            \"type\": \"object\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"isDisabled\": {\n            \"type\": \"boolean\"\n          },\n          \"lastSeenAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"lastSeenAtAge\": {\n            \"type\": \"string\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"role\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PagerdutyConfig\": {\n        \"properties\": {\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"client\": {\n            \"type\": \"string\"\n          },\n          \"client_url\": {\n            \"type\": \"string\"\n          },\n          \"component\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"details\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"group\": {\n            \"type\": \"string\"\n          },\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"images\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PagerdutyImage\"\n            },\n            \"type\": \"array\"\n          },\n          \"links\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PagerdutyLink\"\n            },\n            \"type\": \"array\"\n          },\n          \"routing_key\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"service_key\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"severity\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          }\n        },\n        \"title\": \"PagerdutyConfig configures notifications via PagerDuty.\",\n        \"type\": \"object\"\n      },\n      \"PagerdutyImage\": {\n        \"description\": \"PagerdutyImage is an image\",\n        \"properties\": {\n          \"alt\": {\n            \"type\": \"string\"\n          },\n          \"href\": {\n            \"type\": \"string\"\n          },\n          \"src\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PagerdutyLink\": {\n        \"description\": \"PagerdutyLink is a link\",\n        \"properties\": {\n          \"href\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PatchAnnotationsCmd\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"time\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"timeEnd\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PatchLibraryElementCommand\": {\n        \"description\": \"PatchLibraryElementCommand is the command for patching a LibraryElement\",\n        \"properties\": {\n          \"folderId\": {\n            \"description\": \"ID of the folder where the library element is stored.\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"folderUid\": {\n            \"description\": \"UID of the folder where the library element is stored.\",\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"description\": \"Kind of element to create, Use 1 for library panels or 2 for c.\\nDescription:\\n1 - library panels\\n2 - library variables\",\n            \"enum\": [\n              1,\n              2\n            ],\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"model\": {\n            \"description\": \"The JSON model for the library element.\",\n            \"type\": \"object\"\n          },\n          \"name\": {\n            \"description\": \"Name of the library element.\",\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"description\": \"Version of the library element you are updating.\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PatchPrefsCmd\": {\n        \"properties\": {\n          \"homeDashboardId\": {\n            \"default\": 0,\n            \"description\": \"The numerical :id of a favorited dashboard\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"homeDashboardUID\": {\n            \"type\": \"string\"\n          },\n          \"locale\": {\n            \"type\": \"string\"\n          },\n          \"navbar\": {\n            \"$ref\": \"#/components/schemas/NavbarPreference\"\n          },\n          \"queryHistory\": {\n            \"$ref\": \"#/components/schemas/QueryHistoryPreference\"\n          },\n          \"theme\": {\n            \"enum\": [\n              \"light\",\n              \"dark\"\n            ],\n            \"type\": \"string\"\n          },\n          \"timezone\": {\n            \"enum\": [\n              \"utc\",\n              \"browser\"\n            ],\n            \"type\": \"string\"\n          },\n          \"weekStart\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PatchQueryCommentInQueryHistoryCommand\": {\n        \"description\": \"PatchQueryCommentInQueryHistoryCommand is the command for updating comment for query in query history\",\n        \"properties\": {\n          \"comment\": {\n            \"description\": \"Updated comment\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PauseAlertCommand\": {\n        \"properties\": {\n          \"alertId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"paused\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PauseAllAlertsCommand\": {\n        \"properties\": {\n          \"paused\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Permission\": {\n        \"properties\": {\n          \"action\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"scope\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"Permission is the model for access control permissions.\",\n        \"type\": \"object\"\n      },\n      \"PermissionDenied\": {\n        \"type\": \"object\"\n      },\n      \"PermissionType\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n      },\n      \"Playlist\": {\n        \"description\": \"Playlist model\",\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"interval\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PlaylistDTO\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"interval\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PlaylistItemDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PlaylistDashboard\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"order\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PlaylistDashboardsSlice\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/PlaylistDashboard\"\n        },\n        \"type\": \"array\"\n      },\n      \"PlaylistItemDTO\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"order\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"playlistid\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Playlists\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Playlist\"\n        },\n        \"type\": \"array\"\n      },\n      \"Point\": {\n        \"properties\": {\n          \"T\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"V\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          }\n        },\n        \"title\": \"Point represents a single data point for a given timestamp.\",\n        \"type\": \"object\"\n      },\n      \"PostAnnotationsCmd\": {\n        \"properties\": {\n          \"dashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"dashboardUID\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"panelId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"time\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"timeEnd\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"text\"\n        ],\n        \"type\": \"object\"\n      },\n      \"PostGraphiteAnnotationsCmd\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"object\"\n          },\n          \"what\": {\n            \"type\": \"string\"\n          },\n          \"when\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableApiAlertingConfig\": {\n        \"properties\": {\n          \"global\": {\n            \"$ref\": \"#/components/schemas/GlobalConfig\"\n          },\n          \"inhibit_rules\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/InhibitRule\"\n            },\n            \"type\": \"array\"\n          },\n          \"mute_time_intervals\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n            },\n            \"type\": \"array\"\n          },\n          \"receivers\": {\n            \"description\": \"Override with our superset receiver type\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PostableApiReceiver\"\n            },\n            \"type\": \"array\"\n          },\n          \"route\": {\n            \"$ref\": \"#/components/schemas/Route\"\n          },\n          \"templates\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableApiReceiver\": {\n        \"properties\": {\n          \"email_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EmailConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"grafana_managed_receiver_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PostableGrafanaReceiver\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"A unique identifier for this receiver.\",\n            \"type\": \"string\"\n          },\n          \"opsgenie_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OpsGenieConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagerduty_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PagerdutyConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"pushover_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PushoverConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"slack_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SlackConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"sns_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SNSConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"telegram_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TelegramConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"victorops_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/VictorOpsConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"webhook_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/WebhookConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"wechat_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/WechatConfig\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableExtendedRuleNode\": {\n        \"properties\": {\n          \"alert\": {\n            \"type\": \"string\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"expr\": {\n            \"type\": \"string\"\n          },\n          \"for\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"grafana_alert\": {\n            \"$ref\": \"#/components/schemas/PostableGrafanaRule\"\n          },\n          \"labels\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"record\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableGrafanaReceiver\": {\n        \"properties\": {\n          \"disableResolveMessage\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secureSettings\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableGrafanaReceivers\": {\n        \"properties\": {\n          \"grafana_managed_receiver_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PostableGrafanaReceiver\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableGrafanaRule\": {\n        \"properties\": {\n          \"condition\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertQuery\"\n            },\n            \"type\": \"array\"\n          },\n          \"exec_err_state\": {\n            \"enum\": [\n              \"OK\",\n              \"Alerting\",\n              \"Error\"\n            ],\n            \"type\": \"string\"\n          },\n          \"no_data_state\": {\n            \"enum\": [\n              \"Alerting\",\n              \"NoData\",\n              \"OK\"\n            ],\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableNGalertConfig\": {\n        \"properties\": {\n          \"alertmanagers\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"alertmanagersChoice\": {\n            \"enum\": [\n              \"all\",\n              \"internal\",\n              \"external\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableRuleGroupConfig\": {\n        \"properties\": {\n          \"interval\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"rules\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PostableExtendedRuleNode\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PostableUserConfig\": {\n        \"properties\": {\n          \"alertmanager_config\": {\n            \"$ref\": \"#/components/schemas/PostableApiAlertingConfig\"\n          },\n          \"template_files\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Prefs\": {\n        \"properties\": {\n          \"homeDashboardId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"homeDashboardUID\": {\n            \"type\": \"string\"\n          },\n          \"locale\": {\n            \"type\": \"string\"\n          },\n          \"navbar\": {\n            \"$ref\": \"#/components/schemas/NavbarPreference\"\n          },\n          \"queryHistory\": {\n            \"$ref\": \"#/components/schemas/QueryHistoryPreference\"\n          },\n          \"theme\": {\n            \"type\": \"string\"\n          },\n          \"timezone\": {\n            \"type\": \"string\"\n          },\n          \"weekStart\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PrometheusRemoteWriteTargetJSON\": {\n        \"properties\": {\n          \"data_source_uid\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"remote_write_path\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Provenance\": {\n        \"type\": \"string\"\n      },\n      \"ProvisionedAlertRule\": {\n        \"properties\": {\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"example\": {\n              \"runbook_url\": \"https://supercoolrunbook.com/page/13\"\n            },\n            \"type\": \"object\"\n          },\n          \"condition\": {\n            \"example\": \"A\",\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"example\": [\n              {\n                \"datasourceUid\": \"-100\",\n                \"model\": {\n                  \"conditions\": [\n                    {\n                      \"evaluator\": {\n                        \"params\": [\n                          0,\n                          0\n                        ],\n                        \"type\": \"gt\"\n                      },\n                      \"operator\": {\n                        \"type\": \"and\"\n                      },\n                      \"query\": {\n                        \"params\": []\n                      },\n                      \"reducer\": {\n                        \"params\": [],\n                        \"type\": \"avg\"\n                      },\n                      \"type\": \"query\"\n                    }\n                  ],\n                  \"datasource\": {\n                    \"type\": \"__expr__\",\n                    \"uid\": \"__expr__\"\n                  },\n                  \"expression\": \"1 == 1\",\n                  \"hide\": false,\n                  \"intervalMs\": 1000,\n                  \"maxDataPoints\": 43200,\n                  \"refId\": \"A\",\n                  \"type\": \"math\"\n                },\n                \"queryType\": \"\",\n                \"refId\": \"A\",\n                \"relativeTimeRange\": {\n                  \"from\": 0,\n                  \"to\": 0\n                }\n              }\n            ],\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertQuery\"\n            },\n            \"type\": \"array\"\n          },\n          \"execErrState\": {\n            \"enum\": [\n              \"Alerting\",\n              \"Error\",\n              \"OK\"\n            ],\n            \"type\": \"string\"\n          },\n          \"folderUID\": {\n            \"example\": \"project_x\",\n            \"type\": \"string\"\n          },\n          \"for\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"labels\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"example\": {\n              \"team\": \"sre-team-1\"\n            },\n            \"type\": \"object\"\n          },\n          \"noDataState\": {\n            \"enum\": [\n              \"Alerting\",\n              \"NoData\",\n              \"OK\"\n            ],\n            \"type\": \"string\"\n          },\n          \"orgID\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"provenance\": {\n            \"$ref\": \"#/components/schemas/Provenance\"\n          },\n          \"ruleGroup\": {\n            \"example\": \"eval_group_1\",\n            \"maxLength\": 190,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"example\": \"Always firing\",\n            \"maxLength\": 190,\n            \"minLength\": 1,\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"orgID\",\n          \"folderUID\",\n          \"ruleGroup\",\n          \"title\",\n          \"condition\",\n          \"data\",\n          \"noDataState\",\n          \"execErrState\",\n          \"for\"\n        ],\n        \"type\": \"object\"\n      },\n      \"PushoverConfig\": {\n        \"properties\": {\n          \"expire\": {\n            \"$ref\": \"#/components/schemas/duration\"\n          },\n          \"html\": {\n            \"type\": \"boolean\"\n          },\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"priority\": {\n            \"type\": \"string\"\n          },\n          \"retry\": {\n            \"$ref\": \"#/components/schemas/duration\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"sound\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"url_title\": {\n            \"type\": \"string\"\n          },\n          \"user_key\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryDataResponse\": {\n        \"description\": \"It is the return type of a QueryData call.\",\n        \"properties\": {\n          \"Responses\": {\n            \"$ref\": \"#/components/schemas/Responses\"\n          }\n        },\n        \"title\": \"QueryDataResponse contains the results from a QueryDataRequest.\",\n        \"type\": \"object\"\n      },\n      \"QueryHistoryDTO\": {\n        \"properties\": {\n          \"comment\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"createdBy\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"datasourceUid\": {\n            \"type\": \"string\"\n          },\n          \"queries\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"starred\": {\n            \"type\": \"boolean\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryHistoryDeleteQueryResponse\": {\n        \"description\": \"QueryHistoryDeleteQueryResponse is the response struct for deleting a query from query history\",\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryHistoryMigrationResponse\": {\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"starredCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"totalCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryHistoryPreference\": {\n        \"properties\": {\n          \"homeTab\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryHistoryResponse\": {\n        \"description\": \"QueryHistoryResponse is a response struct for QueryHistoryDTO\",\n        \"properties\": {\n          \"result\": {\n            \"$ref\": \"#/components/schemas/QueryHistoryDTO\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryHistorySearchResponse\": {\n        \"properties\": {\n          \"result\": {\n            \"$ref\": \"#/components/schemas/QueryHistorySearchResult\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryHistorySearchResult\": {\n        \"properties\": {\n          \"page\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"perPage\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"queryHistory\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/QueryHistoryDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"totalCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryStat\": {\n        \"description\": \"The embedded FieldConfig's display name must be set.\\nIt corresponds to the QueryResultMetaStat on the frontend (https://github.com/grafana/grafana/blob/master/packages/grafana-data/src/types/data.ts#L53).\",\n        \"properties\": {\n          \"color\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Map values to a display color\\nNOTE: this interface is under development in the frontend... so simple map for now\",\n            \"type\": \"object\"\n          },\n          \"custom\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Panel Specific Values\",\n            \"type\": \"object\"\n          },\n          \"decimals\": {\n            \"format\": \"uint16\",\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"description\": \"Description is human readable field metadata\",\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"description\": \"DisplayName overrides Grafana default naming, should not be used from a data source\",\n            \"type\": \"string\"\n          },\n          \"displayNameFromDS\": {\n            \"description\": \"DisplayNameFromDS overrides Grafana default naming in a better way that allows users to override it easily.\",\n            \"type\": \"string\"\n          },\n          \"filterable\": {\n            \"description\": \"Filterable indicates if the Field's data can be filtered by additional calls.\",\n            \"type\": \"boolean\"\n          },\n          \"interval\": {\n            \"description\": \"Interval indicates the expected regular step between values in the series.\\nWhen an interval exists, consumers can identify \\\"missing\\\" values when the expected value is not present.\\nThe grafana timeseries visualization will render disconnected values when missing values are found it the time field.\\nThe interval uses the same units as the values.  For time.Time, this is defined in milliseconds.\",\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"links\": {\n            \"description\": \"The behavior when clicking on a result\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DataLink\"\n            },\n            \"type\": \"array\"\n          },\n          \"mappings\": {\n            \"$ref\": \"#/components/schemas/ValueMappings\"\n          },\n          \"max\": {\n            \"$ref\": \"#/components/schemas/ConfFloat64\"\n          },\n          \"min\": {\n            \"$ref\": \"#/components/schemas/ConfFloat64\"\n          },\n          \"noValue\": {\n            \"description\": \"Alternative to empty string\",\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"description\": \"Path is an explicit path to the field in the datasource. When the frame meta includes a path,\\nthis will default to `${frame.meta.path}/${field.name}\\n\\nWhen defined, this value can be used as an identifier within the datasource scope, and\\nmay be used as an identifier to update values in a subsequent request\",\n            \"type\": \"string\"\n          },\n          \"thresholds\": {\n            \"$ref\": \"#/components/schemas/ThresholdsConfig\"\n          },\n          \"unit\": {\n            \"description\": \"Numeric Options\",\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"writeable\": {\n            \"description\": \"Writeable indicates that the datasource knows how to update this value\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"title\": \"QueryStat is used for storing arbitrary statistics metadata related to a query and its result, e.g. total request time, data processing time.\",\n        \"type\": \"object\"\n      },\n      \"QueryToMigrate\": {\n        \"properties\": {\n          \"comment\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"datasourceUid\": {\n            \"type\": \"string\"\n          },\n          \"queries\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"starred\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Receiver\": {\n        \"properties\": {\n          \"email_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EmailConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"A unique identifier for this receiver.\",\n            \"type\": \"string\"\n          },\n          \"opsgenie_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OpsGenieConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagerduty_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PagerdutyConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"pushover_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PushoverConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"slack_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SlackConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"sns_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SNSConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"telegram_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TelegramConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"victorops_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/VictorOpsConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"webhook_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/WebhookConfig\"\n            },\n            \"type\": \"array\"\n          },\n          \"wechat_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/WechatConfig\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"Receiver configuration provides configuration on how to contact a receiver.\",\n        \"type\": \"object\"\n      },\n      \"RecordingRuleJSON\": {\n        \"description\": \"RecordingRuleJSON is the external representation of a recording rule\",\n        \"properties\": {\n          \"active\": {\n            \"type\": \"boolean\"\n          },\n          \"count\": {\n            \"type\": \"boolean\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"dest_data_source_uid\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"interval\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"prom_name\": {\n            \"type\": \"string\"\n          },\n          \"queries\": {\n            \"items\": {\n              \"additionalProperties\": {\n                \"type\": \"object\"\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"range\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"target_ref_id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Regexp\": {\n        \"description\": \"A Regexp is safe for concurrent use by multiple goroutines,\\nexcept for configuration methods, such as Longest.\",\n        \"title\": \"Regexp is the representation of a compiled regular expression.\",\n        \"type\": \"object\"\n      },\n      \"RelativeTimeRange\": {\n        \"description\": \"RelativeTimeRange is the per query start and end time\\nfor requests.\",\n        \"properties\": {\n          \"from\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"to\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ReportEmailDTO\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"emails\": {\n            \"description\": \"Comma-separated list of emails to which to send the report to.\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"description\": \"Send the report to the emails specified in the report. Required if emails is not present.\",\n            \"format\": \"int64\",\n            \"type\": \"string\"\n          },\n          \"useEmailsFromReport\": {\n            \"description\": \"Send the report to the emails specified in the report. Required if emails is not present.\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ReportOptionsDTO\": {\n        \"properties\": {\n          \"layout\": {\n            \"type\": \"string\"\n          },\n          \"orientation\": {\n            \"type\": \"string\"\n          },\n          \"timeRange\": {\n            \"$ref\": \"#/components/schemas/TimeRangeDTO\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ResponseDetails\": {\n        \"properties\": {\n          \"msg\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Responses\": {\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/DataResponse\"\n        },\n        \"description\": \"The QueryData method the QueryDataHandler method will set the RefId\\nproperty on the DataResponses' frames based on these RefIDs.\",\n        \"title\": \"Responses is a map of RefIDs (Unique Query ID) to DataResponses.\",\n        \"type\": \"object\"\n      },\n      \"RestoreDashboardVersionCommand\": {\n        \"properties\": {\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RevokeAuthTokenCmd\": {\n        \"properties\": {\n          \"authTokenId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RoleDTO\": {\n        \"properties\": {\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"delegatable\": {\n            \"type\": \"boolean\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"group\": {\n            \"type\": \"string\"\n          },\n          \"hidden\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Permission\"\n            },\n            \"type\": \"array\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"updated\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Route\": {\n        \"description\": \"A Route is a node that contains definitions of how to handle alerts. This is modified\\nfrom the upstream alertmanager in that it adds the ObjectMatchers property.\",\n        \"properties\": {\n          \"continue\": {\n            \"type\": \"boolean\"\n          },\n          \"group_by\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"group_interval\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"group_wait\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"match\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Deprecated. Remove before v1.0 release.\",\n            \"type\": \"object\"\n          },\n          \"match_re\": {\n            \"$ref\": \"#/components/schemas/MatchRegexps\"\n          },\n          \"matchers\": {\n            \"$ref\": \"#/components/schemas/Matchers\"\n          },\n          \"mute_time_intervals\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"object_matchers\": {\n            \"$ref\": \"#/components/schemas/ObjectMatchers\"\n          },\n          \"provenance\": {\n            \"$ref\": \"#/components/schemas/Provenance\"\n          },\n          \"receiver\": {\n            \"type\": \"string\"\n          },\n          \"repeat_interval\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"routes\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Route\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Rule\": {\n        \"description\": \"adapted from cortex\",\n        \"properties\": {\n          \"evaluationTime\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"health\": {\n            \"type\": \"string\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/overrideLabels\"\n          },\n          \"lastError\": {\n            \"type\": \"string\"\n          },\n          \"lastEvaluation\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"query\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/RuleType\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"query\",\n          \"health\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RuleDiscovery\": {\n        \"properties\": {\n          \"groups\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RuleGroup\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"groups\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RuleGroup\": {\n        \"properties\": {\n          \"evaluationTime\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"file\": {\n            \"type\": \"string\"\n          },\n          \"interval\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"lastEvaluation\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"rules\": {\n            \"description\": \"In order to preserve rule ordering, while exposing type (alerting or recording)\\nspecific properties, both alerting and recording rules are exposed in the\\nsame array.\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertingRule\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"file\",\n          \"rules\",\n          \"interval\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RuleGroupConfigResponse\": {\n        \"properties\": {\n          \"interval\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"rules\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GettableExtendedRuleNode\"\n            },\n            \"type\": \"array\"\n          },\n          \"source_tenants\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RuleResponse\": {\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/RuleDiscovery\"\n          },\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"errorType\": {\n            \"$ref\": \"#/components/schemas/ErrorType\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"status\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RuleType\": {\n        \"title\": \"RuleType models the type of a rule.\",\n        \"type\": \"string\"\n      },\n      \"SNSConfig\": {\n        \"properties\": {\n          \"api_url\": {\n            \"type\": \"string\"\n          },\n          \"attributes\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"phone_number\": {\n            \"type\": \"string\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"sigv4\": {\n            \"$ref\": \"#/components/schemas/SigV4Config\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"target_arn\": {\n            \"type\": \"string\"\n          },\n          \"topic_arn\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Sample\": {\n        \"properties\": {\n          \"Metric\": {\n            \"$ref\": \"#/components/schemas/Labels\"\n          },\n          \"T\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"V\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          }\n        },\n        \"title\": \"Sample is a single sample belonging to a metric.\",\n        \"type\": \"object\"\n      },\n      \"SaveDashboardCommand\": {\n        \"properties\": {\n          \"UpdatedAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"folderId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"folderUid\": {\n            \"type\": \"string\"\n          },\n          \"isFolder\": {\n            \"type\": \"boolean\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"overwrite\": {\n            \"type\": \"boolean\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ScheduleDTO\": {\n        \"properties\": {\n          \"day\": {\n            \"type\": \"string\"\n          },\n          \"dayOfMonth\": {\n            \"type\": \"string\"\n          },\n          \"endDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"frequency\": {\n            \"type\": \"string\"\n          },\n          \"hour\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"intervalAmount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"intervalFrequency\": {\n            \"type\": \"string\"\n          },\n          \"minute\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"startDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"timeZone\": {\n            \"type\": \"string\"\n          },\n          \"workdaysOnly\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SearchServiceAccountsResult\": {\n        \"description\": \"swagger: model\",\n        \"properties\": {\n          \"page\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"perPage\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"serviceAccounts\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceAccountDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"totalCount\": {\n            \"description\": \"It can be used for pagination of the user list\\nE.g. if totalCount is equal to 100 users and\\nthe perpage parameter is set to 10 then there are 10 pages of users.\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SearchTeamQueryResult\": {\n        \"properties\": {\n          \"page\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"perPage\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"teams\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TeamDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"totalCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SearchUserQueryResult\": {\n        \"properties\": {\n          \"page\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"perPage\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"totalCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"users\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/UserSearchHitDTO\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Secret\": {\n        \"title\": \"Secret special type for storing secrets.\",\n        \"type\": \"string\"\n      },\n      \"SecretURL\": {\n        \"$ref\": \"#/components/schemas/URL\"\n      },\n      \"ServiceAccountDTO\": {\n        \"description\": \"swagger: model\",\n        \"properties\": {\n          \"accessControl\": {\n            \"additionalProperties\": {\n              \"type\": \"boolean\"\n            },\n            \"example\": {\n              \"serviceaccounts:delete\": true,\n              \"serviceaccounts:read\": true,\n              \"serviceaccounts:write\": true\n            },\n            \"type\": \"object\"\n          },\n          \"avatarUrl\": {\n            \"example\": \"/avatar/85ec38023d90823d3e5b43ef35646af9\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isDisabled\": {\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"login\": {\n            \"example\": \"sa-grafana\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"example\": \"grafana\",\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"example\": 1,\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"role\": {\n            \"example\": \"Viewer\",\n            \"type\": \"string\"\n          },\n          \"tokens\": {\n            \"example\": 0,\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ServiceAccountProfileDTO\": {\n        \"properties\": {\n          \"accessControl\": {\n            \"additionalProperties\": {\n              \"type\": \"boolean\"\n            },\n            \"type\": \"object\"\n          },\n          \"avatarUrl\": {\n            \"example\": \"/avatar/8ea890a677d6a223c591a1beea6ea9d2\",\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"example\": \"2022-03-21T14:35:33Z\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"example\": 2,\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isDisabled\": {\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"login\": {\n            \"example\": \"sa-grafana\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"example\": \"test\",\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"example\": 1,\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"role\": {\n            \"example\": \"Editor\",\n            \"type\": \"string\"\n          },\n          \"teams\": {\n            \"example\": [],\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"tokens\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"updatedAt\": {\n            \"example\": \"2022-03-21T14:35:33Z\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SetUserRolesCommand\": {\n        \"properties\": {\n          \"global\": {\n            \"type\": \"boolean\"\n          },\n          \"includeHidden\": {\n            \"type\": \"boolean\"\n          },\n          \"roleUids\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SettingsBag\": {\n        \"additionalProperties\": {\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          },\n          \"type\": \"object\"\n        },\n        \"type\": \"object\"\n      },\n      \"SettingsDTO\": {\n        \"properties\": {\n          \"branding\": {\n            \"$ref\": \"#/components/schemas/BrandingOptionsDTO\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SigV4Config\": {\n        \"description\": \"SigV4Config is the configuration for signing remote write requests with\\nAWS's SigV4 verification process. Empty values will be retrieved using the\\nAWS default credentials chain.\",\n        \"properties\": {\n          \"AccessKey\": {\n            \"type\": \"string\"\n          },\n          \"Profile\": {\n            \"type\": \"string\"\n          },\n          \"Region\": {\n            \"type\": \"string\"\n          },\n          \"RoleARN\": {\n            \"type\": \"string\"\n          },\n          \"SecretKey\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SlackAction\": {\n        \"description\": \"See https://api.slack.com/docs/message-attachments#action_fields and https://api.slack.com/docs/message-buttons\\nfor more information.\",\n        \"properties\": {\n          \"confirm\": {\n            \"$ref\": \"#/components/schemas/SlackConfirmationField\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"style\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"SlackAction configures a single Slack action that is sent with each notification.\",\n        \"type\": \"object\"\n      },\n      \"SlackConfig\": {\n        \"properties\": {\n          \"actions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SlackAction\"\n            },\n            \"type\": \"array\"\n          },\n          \"api_url\": {\n            \"$ref\": \"#/components/schemas/SecretURL\"\n          },\n          \"api_url_file\": {\n            \"type\": \"string\"\n          },\n          \"callback_id\": {\n            \"type\": \"string\"\n          },\n          \"channel\": {\n            \"description\": \"Slack channel override, (like #other-channel or @username).\",\n            \"type\": \"string\"\n          },\n          \"color\": {\n            \"type\": \"string\"\n          },\n          \"fallback\": {\n            \"type\": \"string\"\n          },\n          \"fields\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SlackField\"\n            },\n            \"type\": \"array\"\n          },\n          \"footer\": {\n            \"type\": \"string\"\n          },\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"icon_emoji\": {\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"type\": \"string\"\n          },\n          \"image_url\": {\n            \"type\": \"string\"\n          },\n          \"link_names\": {\n            \"type\": \"boolean\"\n          },\n          \"mrkdwn_in\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"pretext\": {\n            \"type\": \"string\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"short_fields\": {\n            \"type\": \"boolean\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"thumb_url\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"title_link\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"SlackConfig configures notifications via Slack.\",\n        \"type\": \"object\"\n      },\n      \"SlackConfirmationField\": {\n        \"description\": \"SlackConfirmationField protect users from destructive actions or particularly distinguished decisions\\nby asking them to confirm their button click one more time.\\nSee https://api.slack.com/docs/interactive-message-field-guide#confirmation_fields for more information.\",\n        \"properties\": {\n          \"dismiss_text\": {\n            \"type\": \"string\"\n          },\n          \"ok_text\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SlackField\": {\n        \"description\": \"Each field must contain a title, value, and optionally, a boolean value to indicate if the field\\nis short enough to be displayed next to other fields designated as short.\\nSee https://api.slack.com/docs/message-attachments#fields for more information.\",\n        \"properties\": {\n          \"short\": {\n            \"type\": \"boolean\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"SlackField configures a single Slack field that is sent with each notification.\",\n        \"type\": \"object\"\n      },\n      \"SmtpNotEnabled\": {\n        \"$ref\": \"#/components/schemas/ResponseDetails\"\n      },\n      \"State\": {\n        \"type\": \"string\"\n      },\n      \"Status\": {\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Success\": {\n        \"$ref\": \"#/components/schemas/ResponseDetails\"\n      },\n      \"SuccessResponseBody\": {\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SyncResult\": {\n        \"properties\": {\n          \"Elapsed\": {\n            \"$ref\": \"#/components/schemas/Duration\"\n          },\n          \"FailedUsers\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FailedUser\"\n            },\n            \"type\": \"array\"\n          },\n          \"MissingUserIds\": {\n            \"items\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"Started\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"UpdatedUserIds\": {\n            \"items\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"title\": \"SyncResult holds the result of a sync with LDAP. This gives us information on which users were updated and how.\",\n        \"type\": \"object\"\n      },\n      \"TLSConfig\": {\n        \"properties\": {\n          \"ca_file\": {\n            \"description\": \"The CA cert to use for the targets.\",\n            \"type\": \"string\"\n          },\n          \"cert_file\": {\n            \"description\": \"The client cert file for the targets.\",\n            \"type\": \"string\"\n          },\n          \"insecure_skip_verify\": {\n            \"description\": \"Disable target certificate validation.\",\n            \"type\": \"boolean\"\n          },\n          \"key_file\": {\n            \"description\": \"The client key file for the targets.\",\n            \"type\": \"string\"\n          },\n          \"server_name\": {\n            \"description\": \"Used to verify the hostname for the targets.\",\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"TLSConfig configures the options for TLS connections.\",\n        \"type\": \"object\"\n      },\n      \"TagsDTO\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"TagsDTO is the frontend DTO for Tag.\",\n        \"type\": \"object\"\n      },\n      \"TeamDTO\": {\n        \"properties\": {\n          \"accessControl\": {\n            \"additionalProperties\": {\n              \"type\": \"boolean\"\n            },\n            \"type\": \"object\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"memberCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"permission\": {\n            \"$ref\": \"#/components/schemas/PermissionType\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TeamGroupDTO\": {\n        \"properties\": {\n          \"groupId\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"teamId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TeamGroupMapping\": {\n        \"properties\": {\n          \"groupId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TeamMemberDTO\": {\n        \"properties\": {\n          \"auth_module\": {\n            \"type\": \"string\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"labels\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"permission\": {\n            \"$ref\": \"#/components/schemas/PermissionType\"\n          },\n          \"teamId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TelegramConfig\": {\n        \"properties\": {\n          \"api_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"chat\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"disable_notifications\": {\n            \"type\": \"boolean\"\n          },\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"parse_mode\": {\n            \"type\": \"string\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"token\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          }\n        },\n        \"title\": \"TelegramConfig configures notifications via Telegram.\",\n        \"type\": \"object\"\n      },\n      \"TempUserDTO\": {\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\"\n          },\n          \"createdOn\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"emailSent\": {\n            \"type\": \"boolean\"\n          },\n          \"emailSentOn\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"invitedByEmail\": {\n            \"type\": \"string\"\n          },\n          \"invitedByLogin\": {\n            \"type\": \"string\"\n          },\n          \"invitedByName\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/TempUserStatus\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TempUserStatus\": {\n        \"type\": \"string\"\n      },\n      \"TestReceiverConfigResult\": {\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TestReceiverResult\": {\n        \"properties\": {\n          \"grafana_managed_receiver_configs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TestReceiverConfigResult\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TestReceiversConfigAlertParams\": {\n        \"properties\": {\n          \"annotations\": {\n            \"$ref\": \"#/components/schemas/LabelSet\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/LabelSet\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TestReceiversConfigBodyParams\": {\n        \"properties\": {\n          \"alert\": {\n            \"$ref\": \"#/components/schemas/TestReceiversConfigAlertParams\"\n          },\n          \"receivers\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PostableApiReceiver\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TestReceiversResult\": {\n        \"properties\": {\n          \"alert\": {\n            \"$ref\": \"#/components/schemas/TestReceiversConfigAlertParams\"\n          },\n          \"notified_at\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"receivers\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TestReceiverResult\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TestRulePayload\": {\n        \"properties\": {\n          \"expr\": {\n            \"example\": \"(node_filesystem_avail_bytes{fstype!=\\\"\\\",job=\\\"integrations/node_exporter\\\"} node_filesystem_size_bytes{fstype!=\\\"\\\",job=\\\"integrations/node_exporter\\\"} * 100 \\u003c 5 and node_filesystem_readonly{fstype!=\\\"\\\",job=\\\"integrations/node_exporter\\\"} == 0)\",\n            \"type\": \"string\"\n          },\n          \"grafana_condition\": {\n            \"$ref\": \"#/components/schemas/EvalAlertConditionCommand\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TestRuleResponse\": {\n        \"properties\": {\n          \"alerts\": {\n            \"$ref\": \"#/components/schemas/Vector\"\n          },\n          \"grafana_alert_instances\": {\n            \"$ref\": \"#/components/schemas/AlertInstancesResponse\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Threshold\": {\n        \"description\": \"Threshold a single step on the threshold list\",\n        \"properties\": {\n          \"color\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"$ref\": \"#/components/schemas/ConfFloat64\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ThresholdsConfig\": {\n        \"description\": \"ThresholdsConfig setup thresholds\",\n        \"properties\": {\n          \"mode\": {\n            \"$ref\": \"#/components/schemas/ThresholdsMode\"\n          },\n          \"steps\": {\n            \"description\": \"Must be sorted by 'value', first value is always -Infinity\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Threshold\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ThresholdsMode\": {\n        \"description\": \"ThresholdsMode absolute or percentage\",\n        \"type\": \"string\"\n      },\n      \"TimeInterval\": {\n        \"description\": \"TimeInterval describes intervals of time. ContainsTime will tell you if a golang time is contained\\nwithin the interval.\",\n        \"properties\": {\n          \"days_of_month\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DayOfMonthRange\"\n            },\n            \"type\": \"array\"\n          },\n          \"months\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MonthRange\"\n            },\n            \"type\": \"array\"\n          },\n          \"times\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TimeRange\"\n            },\n            \"type\": \"array\"\n          },\n          \"weekdays\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/WeekdayRange\"\n            },\n            \"type\": \"array\"\n          },\n          \"years\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/YearRange\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TimeRange\": {\n        \"description\": \"For example, 4:00PM to End of the day would Begin at 1020 and End at 1440.\",\n        \"properties\": {\n          \"EndMinute\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"StartMinute\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"TimeRange represents a range of minutes within a 1440 minute day, exclusive of the End minute. A day consists of 1440 minutes.\",\n        \"type\": \"object\"\n      },\n      \"TimeRangeDTO\": {\n        \"properties\": {\n          \"from\": {\n            \"type\": \"string\"\n          },\n          \"to\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Token\": {\n        \"properties\": {\n          \"account\": {\n            \"type\": \"string\"\n          },\n          \"company\": {\n            \"type\": \"string\"\n          },\n          \"details_url\": {\n            \"type\": \"string\"\n          },\n          \"exp\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"iat\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"included_users\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"iss\": {\n            \"type\": \"string\"\n          },\n          \"jti\": {\n            \"type\": \"string\"\n          },\n          \"lexp\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"lic_exp_warn_days\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"lid\": {\n            \"type\": \"string\"\n          },\n          \"limit_by\": {\n            \"type\": \"string\"\n          },\n          \"max_concurrent_user_sessions\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"nbf\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"prod\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/TokenStatus\"\n          },\n          \"sub\": {\n            \"type\": \"string\"\n          },\n          \"tok_exp_warn_days\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"trial\": {\n            \"type\": \"boolean\"\n          },\n          \"trial_exp\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"update_days\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"usage_billing\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TokenDTO\": {\n        \"properties\": {\n          \"created\": {\n            \"example\": \"2022-03-23T10:31:02Z\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"expiration\": {\n            \"example\": \"2022-03-23T10:31:02Z\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"hasExpired\": {\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"example\": 1,\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isRevoked\": {\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"lastUsedAt\": {\n            \"example\": \"2022-03-23T10:31:02Z\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"example\": \"grafana\",\n            \"type\": \"string\"\n          },\n          \"secondsUntilExpiration\": {\n            \"example\": 0,\n            \"format\": \"double\",\n            \"type\": \"number\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TokenStatus\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n      },\n      \"TrimDashboardCommand\": {\n        \"properties\": {\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TrimDashboardFullWithMeta\": {\n        \"properties\": {\n          \"dashboard\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"meta\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Type\": {\n        \"type\": \"string\"\n      },\n      \"URL\": {\n        \"description\": \"The general form represented is:\\n\\n[scheme:][//[userinfo@]host][/]path[?query][#fragment]\\n\\nURLs that do not start with a slash after the scheme are interpreted as:\\n\\nscheme:opaque[?query][#fragment]\\n\\nNote that the Path field is stored in decoded form: /%47%6f%2f becomes /Go/.\\nA consequence is that it is impossible to tell which slashes in the Path were\\nslashes in the raw URL and which were %2f. This distinction is rarely important,\\nbut when it is, the code should use RawPath, an optional field which only gets\\nset if the default encoding is different from Path.\\n\\nURL's String method uses the EscapedPath method to obtain the path. See the\\nEscapedPath method for more details.\",\n        \"properties\": {\n          \"ForceQuery\": {\n            \"type\": \"boolean\"\n          },\n          \"Fragment\": {\n            \"type\": \"string\"\n          },\n          \"Host\": {\n            \"type\": \"string\"\n          },\n          \"Opaque\": {\n            \"type\": \"string\"\n          },\n          \"Path\": {\n            \"type\": \"string\"\n          },\n          \"RawFragment\": {\n            \"type\": \"string\"\n          },\n          \"RawPath\": {\n            \"type\": \"string\"\n          },\n          \"RawQuery\": {\n            \"type\": \"string\"\n          },\n          \"Scheme\": {\n            \"type\": \"string\"\n          },\n          \"User\": {\n            \"$ref\": \"#/components/schemas/Userinfo\"\n          }\n        },\n        \"title\": \"A URL represents a parsed URL (technically, a URI reference).\",\n        \"type\": \"object\"\n      },\n      \"UpdateAlertNotificationCommand\": {\n        \"properties\": {\n          \"disableResolveMessage\": {\n            \"type\": \"boolean\"\n          },\n          \"frequency\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secureSettings\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"sendReminder\": {\n            \"type\": \"boolean\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateAlertNotificationWithUidCommand\": {\n        \"properties\": {\n          \"disableResolveMessage\": {\n            \"type\": \"boolean\"\n          },\n          \"frequency\": {\n            \"type\": \"string\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secureSettings\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"sendReminder\": {\n            \"type\": \"boolean\"\n          },\n          \"settings\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateAnnotationsCmd\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"time\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"timeEnd\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateCorrelationCommand\": {\n        \"description\": \"UpdateCorrelationCommand is the command for updating a correlation\",\n        \"properties\": {\n          \"description\": {\n            \"description\": \"Optional description of the correlation\",\n            \"example\": \"Logs to Traces\",\n            \"type\": \"string\"\n          },\n          \"label\": {\n            \"description\": \"Optional label identifying the correlation\",\n            \"example\": \"My label\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateCorrelationResponseBody\": {\n        \"properties\": {\n          \"message\": {\n            \"example\": \"Correlation updated\",\n            \"type\": \"string\"\n          },\n          \"result\": {\n            \"$ref\": \"#/components/schemas/Correlation\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateDashboardACLCommand\": {\n        \"properties\": {\n          \"items\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DashboardACLUpdateItem\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateDataSourceCommand\": {\n        \"description\": \"Also acts as api DTO\",\n        \"properties\": {\n          \"access\": {\n            \"$ref\": \"#/components/schemas/DsAccess\"\n          },\n          \"basicAuth\": {\n            \"type\": \"boolean\"\n          },\n          \"basicAuthUser\": {\n            \"type\": \"string\"\n          },\n          \"database\": {\n            \"type\": \"string\"\n          },\n          \"isDefault\": {\n            \"type\": \"boolean\"\n          },\n          \"jsonData\": {\n            \"$ref\": \"#/components/schemas/Json\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"secureJsonData\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"withCredentials\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateFolderCommand\": {\n        \"properties\": {\n          \"overwrite\": {\n            \"type\": \"boolean\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateOrgAddressForm\": {\n        \"properties\": {\n          \"address1\": {\n            \"type\": \"string\"\n          },\n          \"address2\": {\n            \"type\": \"string\"\n          },\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"type\": \"string\"\n          },\n          \"zipcode\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateOrgForm\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateOrgQuotaCmd\": {\n        \"properties\": {\n          \"limit\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"target\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateOrgUserCommand\": {\n        \"properties\": {\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdatePlaylistCommand\": {\n        \"properties\": {\n          \"interval\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PlaylistItemDTO\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdatePrefsCmd\": {\n        \"properties\": {\n          \"homeDashboardId\": {\n            \"default\": 0,\n            \"description\": \"The numerical :id of a favorited dashboard\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"homeDashboardUID\": {\n            \"type\": \"string\"\n          },\n          \"locale\": {\n            \"type\": \"string\"\n          },\n          \"navbar\": {\n            \"$ref\": \"#/components/schemas/NavbarPreference\"\n          },\n          \"queryHistory\": {\n            \"$ref\": \"#/components/schemas/QueryHistoryPreference\"\n          },\n          \"theme\": {\n            \"enum\": [\n              \"light\",\n              \"dark\"\n            ],\n            \"type\": \"string\"\n          },\n          \"timezone\": {\n            \"enum\": [\n              \"utc\",\n              \"browser\"\n            ],\n            \"type\": \"string\"\n          },\n          \"weekStart\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateRoleCommand\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"global\": {\n            \"type\": \"boolean\"\n          },\n          \"group\": {\n            \"type\": \"string\"\n          },\n          \"hidden\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Permission\"\n            },\n            \"type\": \"array\"\n          },\n          \"version\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateServiceAccountForm\": {\n        \"properties\": {\n          \"isDisabled\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateTeamCommand\": {\n        \"properties\": {\n          \"Email\": {\n            \"type\": \"string\"\n          },\n          \"Id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateTeamMemberCommand\": {\n        \"properties\": {\n          \"permission\": {\n            \"$ref\": \"#/components/schemas/PermissionType\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateUserCommand\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"theme\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateUserQuotaCmd\": {\n        \"properties\": {\n          \"limit\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"target\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserIdDTO\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserLookupDTO\": {\n        \"properties\": {\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserOrgDTO\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"role\": {\n            \"enum\": [\n              \"Viewer\",\n              \"Editor\",\n              \"Admin\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserProfileDTO\": {\n        \"properties\": {\n          \"accessControl\": {\n            \"additionalProperties\": {\n              \"type\": \"boolean\"\n            },\n            \"type\": \"object\"\n          },\n          \"authLabels\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isDisabled\": {\n            \"type\": \"boolean\"\n          },\n          \"isExternal\": {\n            \"type\": \"boolean\"\n          },\n          \"isGrafanaAdmin\": {\n            \"type\": \"boolean\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"theme\": {\n            \"type\": \"string\"\n          },\n          \"updatedAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserQuotaDTO\": {\n        \"properties\": {\n          \"limit\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"target\": {\n            \"type\": \"string\"\n          },\n          \"used\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserSearchHitDTO\": {\n        \"properties\": {\n          \"authLabels\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"isAdmin\": {\n            \"type\": \"boolean\"\n          },\n          \"isDisabled\": {\n            \"type\": \"boolean\"\n          },\n          \"lastSeenAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"lastSeenAtAge\": {\n            \"type\": \"string\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserToken\": {\n        \"description\": \"UserToken represents a user token\",\n        \"properties\": {\n          \"AuthToken\": {\n            \"type\": \"string\"\n          },\n          \"AuthTokenSeen\": {\n            \"type\": \"boolean\"\n          },\n          \"ClientIp\": {\n            \"type\": \"string\"\n          },\n          \"CreatedAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"Id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"PrevAuthToken\": {\n            \"type\": \"string\"\n          },\n          \"RevokedAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"RotatedAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"SeenAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"UnhashedToken\": {\n            \"type\": \"string\"\n          },\n          \"UpdatedAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"UserAgent\": {\n            \"type\": \"string\"\n          },\n          \"UserId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Userinfo\": {\n        \"description\": \"The Userinfo type is an immutable encapsulation of username and\\npassword details for a URL. An existing Userinfo value is guaranteed\\nto have a username set (potentially empty, as allowed by RFC 2396),\\nand optionally a password.\",\n        \"type\": \"object\"\n      },\n      \"ValidationError\": {\n        \"properties\": {\n          \"msg\": {\n            \"example\": \"error message\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ValueMapping\": {\n        \"description\": \"ValueMapping allows mapping input values to text and color\",\n        \"type\": \"object\"\n      },\n      \"ValueMappings\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/ValueMapping\"\n        },\n        \"type\": \"array\"\n      },\n      \"Vector\": {\n        \"description\": \"Vector is basically only an alias for model.Samples, but the\\ncontract is that in a Vector, all Samples have the same timestamp.\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Sample\"\n        },\n        \"type\": \"array\"\n      },\n      \"VictorOpsConfig\": {\n        \"properties\": {\n          \"api_key\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"api_key_file\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"api_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"custom_fields\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"entity_display_name\": {\n            \"type\": \"string\"\n          },\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"message_type\": {\n            \"type\": \"string\"\n          },\n          \"monitoring_tool\": {\n            \"type\": \"string\"\n          },\n          \"routing_key\": {\n            \"type\": \"string\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"state_message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"VictorOpsConfig configures notifications via VictorOps.\",\n        \"type\": \"object\"\n      },\n      \"VisType\": {\n        \"title\": \"VisType is used to indicate how the data should be visualized in explore.\",\n        \"type\": \"string\"\n      },\n      \"WebhookConfig\": {\n        \"properties\": {\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"max_alerts\": {\n            \"description\": \"MaxAlerts is the maximum number of alerts to be sent per webhook message.\\nAlerts exceeding this threshold will be truncated. Setting this to 0\\nallows an unlimited number of alerts.\",\n            \"format\": \"uint64\",\n            \"type\": \"integer\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          }\n        },\n        \"title\": \"WebhookConfig configures notifications via a generic webhook.\",\n        \"type\": \"object\"\n      },\n      \"WechatConfig\": {\n        \"properties\": {\n          \"agent_id\": {\n            \"type\": \"string\"\n          },\n          \"api_secret\": {\n            \"$ref\": \"#/components/schemas/Secret\"\n          },\n          \"api_url\": {\n            \"$ref\": \"#/components/schemas/URL\"\n          },\n          \"corp_id\": {\n            \"type\": \"string\"\n          },\n          \"http_config\": {\n            \"$ref\": \"#/components/schemas/HTTPClientConfig\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"message_type\": {\n            \"type\": \"string\"\n          },\n          \"send_resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"to_party\": {\n            \"type\": \"string\"\n          },\n          \"to_tag\": {\n            \"type\": \"string\"\n          },\n          \"to_user\": {\n            \"type\": \"string\"\n          }\n        },\n        \"title\": \"WechatConfig configures notifications via Wechat.\",\n        \"type\": \"object\"\n      },\n      \"WeekdayRange\": {\n        \"properties\": {\n          \"Begin\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"End\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"A WeekdayRange is an inclusive range between [0, 6] where 0 = Sunday.\",\n        \"type\": \"object\"\n      },\n      \"YearRange\": {\n        \"properties\": {\n          \"Begin\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"End\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"A YearRange is a positive inclusive range.\",\n        \"type\": \"object\"\n      },\n      \"alert\": {\n        \"description\": \"Alert alert\",\n        \"properties\": {\n          \"generatorURL\": {\n            \"description\": \"generator URL\\nFormat: uri\",\n            \"format\": \"uri\",\n            \"type\": \"string\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/labelSet\"\n          }\n        },\n        \"required\": [\n          \"labels\"\n        ],\n        \"type\": \"object\"\n      },\n      \"alertGroup\": {\n        \"description\": \"AlertGroup alert group\",\n        \"properties\": {\n          \"alerts\": {\n            \"description\": \"alerts\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/gettableAlert\"\n            },\n            \"type\": \"array\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/labelSet\"\n          },\n          \"receiver\": {\n            \"$ref\": \"#/components/schemas/receiver\"\n          }\n        },\n        \"required\": [\n          \"alerts\",\n          \"labels\",\n          \"receiver\"\n        ],\n        \"type\": \"object\"\n      },\n      \"alertGroups\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/alertGroup\"\n        },\n        \"type\": \"array\"\n      },\n      \"alertStatus\": {\n        \"description\": \"AlertStatus alert status\",\n        \"properties\": {\n          \"inhibitedBy\": {\n            \"description\": \"inhibited by\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"silencedBy\": {\n            \"description\": \"silenced by\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"state\": {\n            \"description\": \"state\",\n            \"enum\": [\n              \"[unprocessed active suppressed]\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"inhibitedBy\",\n          \"silencedBy\",\n          \"state\"\n        ],\n        \"type\": \"object\"\n      },\n      \"alertmanagerConfig\": {\n        \"description\": \"AlertmanagerConfig alertmanager config\",\n        \"properties\": {\n          \"original\": {\n            \"description\": \"original\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"original\"\n        ],\n        \"type\": \"object\"\n      },\n      \"alertmanagerStatus\": {\n        \"description\": \"AlertmanagerStatus alertmanager status\",\n        \"properties\": {\n          \"cluster\": {\n            \"$ref\": \"#/components/schemas/clusterStatus\"\n          },\n          \"config\": {\n            \"$ref\": \"#/components/schemas/alertmanagerConfig\"\n          },\n          \"uptime\": {\n            \"description\": \"uptime\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"versionInfo\": {\n            \"$ref\": \"#/components/schemas/versionInfo\"\n          }\n        },\n        \"required\": [\n          \"cluster\",\n          \"config\",\n          \"uptime\",\n          \"versionInfo\"\n        ],\n        \"type\": \"object\"\n      },\n      \"clusterStatus\": {\n        \"description\": \"ClusterStatus cluster status\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"name\",\n            \"type\": \"string\"\n          },\n          \"peers\": {\n            \"description\": \"peers\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/peerStatus\"\n            },\n            \"type\": \"array\"\n          },\n          \"status\": {\n            \"description\": \"status\",\n            \"enum\": [\n              \"[ready settling disabled]\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"status\"\n        ],\n        \"type\": \"object\"\n      },\n      \"duration\": {\n        \"$ref\": \"#/components/schemas/Duration\"\n      },\n      \"gettableAlert\": {\n        \"properties\": {\n          \"annotations\": {\n            \"$ref\": \"#/components/schemas/labelSet\"\n          },\n          \"endsAt\": {\n            \"description\": \"ends at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"fingerprint\": {\n            \"description\": \"fingerprint\",\n            \"type\": \"string\"\n          },\n          \"generatorURL\": {\n            \"description\": \"generator URL\\nFormat: uri\",\n            \"format\": \"uri\",\n            \"type\": \"string\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/labelSet\"\n          },\n          \"receivers\": {\n            \"description\": \"receivers\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/receiver\"\n            },\n            \"type\": \"array\"\n          },\n          \"startsAt\": {\n            \"description\": \"starts at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/alertStatus\"\n          },\n          \"updatedAt\": {\n            \"description\": \"updated at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"labels\",\n          \"annotations\",\n          \"endsAt\",\n          \"fingerprint\",\n          \"receivers\",\n          \"startsAt\",\n          \"status\",\n          \"updatedAt\"\n        ],\n        \"type\": \"object\"\n      },\n      \"gettableAlerts\": {\n        \"description\": \"GettableAlerts gettable alerts\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/gettableAlert\"\n        },\n        \"type\": \"array\"\n      },\n      \"gettableSilence\": {\n        \"properties\": {\n          \"comment\": {\n            \"description\": \"comment\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"description\": \"created by\",\n            \"type\": \"string\"\n          },\n          \"endsAt\": {\n            \"description\": \"ends at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"description\": \"id\",\n            \"type\": \"string\"\n          },\n          \"matchers\": {\n            \"$ref\": \"#/components/schemas/matchers\"\n          },\n          \"startsAt\": {\n            \"description\": \"starts at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/silenceStatus\"\n          },\n          \"updatedAt\": {\n            \"description\": \"updated at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"comment\",\n          \"createdBy\",\n          \"endsAt\",\n          \"matchers\",\n          \"startsAt\",\n          \"id\",\n          \"status\",\n          \"updatedAt\"\n        ],\n        \"type\": \"object\"\n      },\n      \"gettableSilences\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/gettableSilence\"\n        },\n        \"type\": \"array\"\n      },\n      \"labelSet\": {\n        \"additionalProperties\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"LabelSet label set\",\n        \"type\": \"object\"\n      },\n      \"matcher\": {\n        \"description\": \"Matcher matcher\",\n        \"properties\": {\n          \"isEqual\": {\n            \"description\": \"is equal\",\n            \"type\": \"boolean\"\n          },\n          \"isRegex\": {\n            \"description\": \"is regex\",\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"description\": \"name\",\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"description\": \"value\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"isRegex\",\n          \"name\",\n          \"value\"\n        ],\n        \"type\": \"object\"\n      },\n      \"matchers\": {\n        \"description\": \"Matchers matchers\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/matcher\"\n        },\n        \"type\": \"array\"\n      },\n      \"overrideLabels\": {\n        \"additionalProperties\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"The custom marshaling for labels.Labels ends up doing this anyways.\",\n        \"title\": \"override the labels type with a map for generation.\",\n        \"type\": \"object\"\n      },\n      \"peerStatus\": {\n        \"description\": \"PeerStatus peer status\",\n        \"properties\": {\n          \"address\": {\n            \"description\": \"address\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"name\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"address\",\n          \"name\"\n        ],\n        \"type\": \"object\"\n      },\n      \"postableAlert\": {\n        \"description\": \"PostableAlert postable alert\",\n        \"properties\": {\n          \"annotations\": {\n            \"$ref\": \"#/components/schemas/labelSet\"\n          },\n          \"endsAt\": {\n            \"description\": \"ends at\\nFormat: date-time\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"generatorURL\": {\n            \"description\": \"generator URL\\nFormat: uri\",\n            \"format\": \"uri\",\n            \"type\": \"string\"\n          },\n          \"labels\": {\n            \"$ref\": \"#/components/schemas/labelSet\"\n          },\n          \"startsAt\": {\n            \"description\": \"starts at\\nFormat: date-time\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"labels\"\n        ],\n        \"type\": \"object\"\n      },\n      \"postableAlerts\": {\n        \"description\": \"PostableAlerts postable alerts\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/postableAlert\"\n        },\n        \"type\": \"array\"\n      },\n      \"postableSilence\": {\n        \"properties\": {\n          \"comment\": {\n            \"description\": \"comment\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"description\": \"created by\",\n            \"type\": \"string\"\n          },\n          \"endsAt\": {\n            \"description\": \"ends at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"description\": \"id\",\n            \"type\": \"string\"\n          },\n          \"matchers\": {\n            \"$ref\": \"#/components/schemas/matchers\"\n          },\n          \"startsAt\": {\n            \"description\": \"starts at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"comment\",\n          \"createdBy\",\n          \"endsAt\",\n          \"matchers\",\n          \"startsAt\"\n        ],\n        \"type\": \"object\"\n      },\n      \"receiver\": {\n        \"description\": \"Receiver receiver\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"name\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      },\n      \"silence\": {\n        \"description\": \"Silence silence\",\n        \"properties\": {\n          \"comment\": {\n            \"description\": \"comment\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"description\": \"created by\",\n            \"type\": \"string\"\n          },\n          \"endsAt\": {\n            \"description\": \"ends at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"matchers\": {\n            \"$ref\": \"#/components/schemas/matchers\"\n          },\n          \"startsAt\": {\n            \"description\": \"starts at\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"comment\",\n          \"createdBy\",\n          \"endsAt\",\n          \"matchers\",\n          \"startsAt\"\n        ],\n        \"type\": \"object\"\n      },\n      \"silenceStatus\": {\n        \"description\": \"SilenceStatus silence status\",\n        \"properties\": {\n          \"state\": {\n            \"description\": \"state\",\n            \"enum\": [\n              \"[expired active pending]\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"state\"\n        ],\n        \"type\": \"object\"\n      },\n      \"versionInfo\": {\n        \"description\": \"VersionInfo version info\",\n        \"properties\": {\n          \"branch\": {\n            \"description\": \"branch\",\n            \"type\": \"string\"\n          },\n          \"buildDate\": {\n            \"description\": \"build date\",\n            \"type\": \"string\"\n          },\n          \"buildUser\": {\n            \"description\": \"build user\",\n            \"type\": \"string\"\n          },\n          \"goVersion\": {\n            \"description\": \"go version\",\n            \"type\": \"string\"\n          },\n          \"revision\": {\n            \"description\": \"revision\",\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"description\": \"version\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"branch\",\n          \"buildDate\",\n          \"buildUser\",\n          \"goVersion\",\n          \"revision\",\n          \"version\"\n        ],\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"api_key\": {\n        \"in\": \"header\",\n        \"name\": \"Authorization\",\n        \"type\": \"apiKey\"\n      },\n      \"basic\": {\n        \"scheme\": \"basic\",\n        \"type\": \"http\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"hello@grafana.com\",\n      \"name\": \"Grafana Labs\",\n      \"url\": \"https://grafana.com\"\n    },\n    \"description\": \"The Grafana backend exposes an HTTP API, the same API is used by the frontend to do\\neverything from saving dashboards, creating users and updating data sources.\",\n    \"license\": {\n      \"name\": \"GNU Affero General Public License v3.0\",\n      \"url\": \"https://www.gnu.org/licenses/agpl-3.0.en.html\"\n    },\n    \"title\": \"Grafana HTTP API.\",\n    \"version\": \"0.0.1\"\n  },\n  \"openapi\": \"3.0.3\",\n  \"paths\": {\n    \"/access-control/roles\": {\n      \"get\": {\n        \"description\": \"Gets all existing roles. The response contains all global and organization local roles, for the organization which user is signed in.\\n\\nYou need to have a permission with action `roles:read` and scope `roles:*`.\",\n        \"operationId\": \"listRoles\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"delegatable\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/listRolesResponse\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all roles.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates a new custom role and maps given permissions to that role. Note that roles with the same prefix as Fixed Roles can’t be created.\\n\\nYou need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.\\nFor example, if a user does not have required permissions for creating users, they won’t be able to create a custom role which allows to do that. This is done to prevent escalation of privileges.\",\n        \"operationId\": \"createRole\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateRoleForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"$ref\": \"#/components/responses/createRoleResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create a new custom role.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/access-control/roles/{roleUID}\": {\n      \"delete\": {\n        \"description\": \"Delete a role with the given UID, and it’s permissions. If the role is assigned to a built-in role, the deletion operation will fail, unless force query param is set to true, and in that case all assignments will also be deleted.\\n\\nYou need to have a permission with action `roles:delete` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only delete a custom role with the same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to delete a custom role which allows to do that.\",\n        \"operationId\": \"deleteCustomRole\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"force\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"global\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"roleUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete a custom role.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Get a role for the given UID.\\n\\nYou need to have a permission with action `roles:read` and scope `roles:*`.\",\n        \"operationId\": \"getRole\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"roleUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getRoleResponse\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get a role.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"You need to have a permission with action `roles:write` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only create custom roles with the same, or a subset of permissions which the user has.\",\n        \"operationId\": \"updateRoleWithPermissions\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"roleUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateRoleCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getRoleResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update a custom role.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/access-control/status\": {\n      \"get\": {\n        \"description\": \"Returns an indicator to check if fine-grained access control is enabled or not.\\n\\nYou need to have a permission with action `status:accesscontrol` and scope `services:accesscontrol`.\",\n        \"operationId\": \"getAccessControlStatus\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAccessControlStatusResponse\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get status.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/access-control/teams/{teamId}/roles\": {\n      \"get\": {\n        \"description\": \"You need to have a permission with action `teams.roles:read` and scope `teams:id:\\u003cteam ID\\u003e`.\",\n        \"operationId\": \"listTeamRoles\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"teamId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get team roles.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"You need to have a permission with action `teams.roles:add` and scope `permissions:type:delegate`.\",\n        \"operationId\": \"addTeamRole\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"teamId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddTeamRoleCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add team role.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"You need to have a permission with action `teams.roles:add` and `teams.roles:remove` and scope `permissions:type:delegate` for each.\",\n        \"operationId\": \"setTeamRoles\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"teamId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update team role.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/access-control/teams/{teamId}/roles/{roleUID}\": {\n      \"delete\": {\n        \"description\": \"You need to have a permission with action `teams.roles:remove` and scope `permissions:type:delegate`.\",\n        \"operationId\": \"removeTeamRole\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"roleUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"teamId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Remove team role.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/access-control/users/{userId}/roles\": {\n      \"get\": {\n        \"description\": \"Lists the roles that have been directly assigned to a given user. The list does not include built-in roles (Viewer, Editor, Admin or Grafana Admin), and it does not include roles that have been inherited from a team.\\n\\nYou need to have a permission with action `users.roles:read` and scope `users:id:\\u003cuser ID\\u003e`.\",\n        \"operationId\": \"listUserRoles\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAllRolesResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"List roles assigned to a user.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Assign a role to a specific user. For bulk updates consider Set user role assignments.\\n\\nYou need to have a permission with action `users.roles:add` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only assign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign a role which will allow to do that. This is done to prevent escalation of privileges.\",\n        \"operationId\": \"addUserRole\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddUserRoleCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add a user role assignment.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Update the user’s role assignments to match the provided set of UIDs. This will remove any assigned roles that aren’t in the request and add roles that are in the set but are not already assigned to the user.\\nIf you want to add or remove a single role, consider using Add a user role assignment or Remove a user role assignment instead.\\n\\nYou need to have a permission with action `users.roles:add` and `users.roles:remove` and scope `permissions:type:delegate` for each. `permissions:type:delegate`  scope ensures that users can only assign or unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to assign or unassign a role which will allow to do that. This is done to prevent escalation of privileges.\",\n        \"operationId\": \"setUserRoles\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SetUserRolesCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Set user role assignments.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/access-control/users/{userId}/roles/{roleUID}\": {\n      \"delete\": {\n        \"description\": \"Revoke a role from a user. For bulk updates consider Set user role assignments.\\n\\nYou need to have a permission with action `users.roles:remove` and scope `permissions:type:delegate`. `permissions:type:delegate` scope ensures that users can only unassign roles which have same, or a subset of permissions which the user has. For example, if a user does not have required permissions for creating users, they won’t be able to unassign a role which will allow to do that. This is done to prevent escalation of privileges.\",\n        \"operationId\": \"removeUserRole\",\n        \"parameters\": [\n          {\n            \"description\": \"A flag indicating if the assignment is global or not. If set to false, the default org ID of the authenticated user will be used from the request to remove assignment.\",\n            \"in\": \"query\",\n            \"name\": \"global\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"roleUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Remove a user role assignment.\",\n        \"tags\": [\n          \"access_control\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/admin/ldap-sync-status\": {\n      \"get\": {\n        \"description\": \"You need to have a permission with action `ldap.status:read`.\",\n        \"operationId\": \"getSyncStatus\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getSyncStatusResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Returns the current state of the LDAP background sync integration\",\n        \"tags\": [\n          \"ldap_debug\"\n        ]\n      }\n    },\n    \"/admin/ldap/reload\": {\n      \"post\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.config:reload`.\",\n        \"operationId\": \"reloadLDAPCfg\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Reloads the LDAP configuration.\",\n        \"tags\": [\n          \"admin_ldap\"\n        ]\n      }\n    },\n    \"/admin/ldap/status\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.status:read`.\",\n        \"operationId\": \"getLDAPStatus\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Attempts to connect to all the configured LDAP servers and returns information on whenever they're available or not.\",\n        \"tags\": [\n          \"admin_ldap\"\n        ]\n      }\n    },\n    \"/admin/ldap/sync/{user_id}\": {\n      \"post\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:sync`.\",\n        \"operationId\": \"postSyncUserWithLDAP\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Enables a single Grafana user to be synchronized against LDAP.\",\n        \"tags\": [\n          \"admin_ldap\"\n        ]\n      }\n    },\n    \"/admin/ldap/{user_name}\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `ldap.user:read`.\",\n        \"operationId\": \"getUserFromLDAP\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Finds an user based on a username in LDAP. This helps illustrate how would the particular user be mapped in Grafana when synced.\",\n        \"tags\": [\n          \"admin_ldap\"\n        ]\n      }\n    },\n    \"/admin/pause-all-alerts\": {\n      \"post\": {\n        \"operationId\": \"pauseAllAlerts\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PauseAllAlertsCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/pauseAlertsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Pause/unpause all (legacy) alerts.\",\n        \"tags\": [\n          \"admin\"\n        ]\n      }\n    },\n    \"/admin/provisioning/access-control/reload\": {\n      \"post\": {\n        \"operationId\": \"adminProvisioningReloadAccessControl\",\n        \"responses\": {\n          \"202\": {\n            \"$ref\": \"#/components/responses/acceptedResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          }\n        },\n        \"summary\": \"You need to have a permission with action `provisioning:reload` with scope `provisioners:accesscontrol`.\",\n        \"tags\": [\n          \"access_control_provisioning\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/admin/provisioning/dashboards/reload\": {\n      \"post\": {\n        \"description\": \"Reloads the provisioning config files for dashboards again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:dashboards`.\",\n        \"operationId\": \"adminProvisioningReloadDashboards\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Reload dashboard provisioning configurations.\",\n        \"tags\": [\n          \"admin_provisioning\"\n        ]\n      }\n    },\n    \"/admin/provisioning/datasources/reload\": {\n      \"post\": {\n        \"description\": \"Reloads the provisioning config files for datasources again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:datasources`.\",\n        \"operationId\": \"adminProvisioningReloadDatasources\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Reload datasource provisioning configurations.\",\n        \"tags\": [\n          \"admin_provisioning\"\n        ]\n      }\n    },\n    \"/admin/provisioning/notifications/reload\": {\n      \"post\": {\n        \"description\": \"Reloads the provisioning config files for legacy alert notifiers again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:notifications`.\",\n        \"operationId\": \"adminProvisioningReloadNotifications\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Reload legacy alert notifier provisioning configurations.\",\n        \"tags\": [\n          \"admin_provisioning\"\n        ]\n      }\n    },\n    \"/admin/provisioning/plugins/reload\": {\n      \"post\": {\n        \"description\": \"Reloads the provisioning config files for plugins again. It won’t return until the new provisioned entities are already stored in the database. In case of dashboards, it will stop polling for changes in dashboard files and then restart it with new configurations after returning.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `provisioning:reload` and scope `provisioners:plugin`.\",\n        \"operationId\": \"adminProvisioningReloadPlugins\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Reload plugin provisioning configurations.\",\n        \"tags\": [\n          \"admin_provisioning\"\n        ]\n      }\n    },\n    \"/admin/settings\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `settings:read` and scopes: `settings:*`, `settings:auth.saml:` and `settings:auth.saml:enabled` (property level).\",\n        \"operationId\": \"adminGetSettings\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/adminGetSettingsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Fetch settings.\",\n        \"tags\": [\n          \"admin\"\n        ]\n      }\n    },\n    \"/admin/stats\": {\n      \"get\": {\n        \"description\": \"Only works with Basic Authentication (username and password). See introduction for an explanation.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `server:stats:read`.\",\n        \"operationId\": \"adminGetStats\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/adminGetStatsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Fetch Grafana Stats.\",\n        \"tags\": [\n          \"admin\"\n        ]\n      }\n    },\n    \"/admin/users\": {\n      \"post\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:create`.\\nNote that OrgId is an optional parameter that can be used to assign a new user to a different organization when `auto_assign_org` is set to `true`.\",\n        \"operationId\": \"adminCreateUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AdminCreateUserForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/adminCreateUserResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"412\": {\n            \"$ref\": \"#/components/responses/preconditionFailedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Create new user.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}\": {\n      \"delete\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:delete` and scope `global.users:*`.\",\n        \"operationId\": \"adminDeleteUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Delete global User.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/auth-tokens\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:list` and scope `global.users:*`.\",\n        \"operationId\": \"adminGetUserAuthTokens\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/adminGetUserAuthTokensResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Return a list of all auth tokens (devices) that the user currently have logged in from.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/disable\": {\n      \"post\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:disable` and scope `global.users:1` (userIDScope).\",\n        \"operationId\": \"adminDisableUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Disable user.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/enable\": {\n      \"post\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users:enable` and scope `global.users:1` (userIDScope).\",\n        \"operationId\": \"adminEnableUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Enable user.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/logout\": {\n      \"post\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.logout` and scope `global.users:*`.\",\n        \"operationId\": \"adminLogoutUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Logout user revokes all auth tokens (devices) for the user. User of issued auth tokens (devices) will no longer be logged in and will be required to authenticate again upon next activity.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/password\": {\n      \"put\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.password:update` and scope `global.users:*`.\",\n        \"operationId\": \"adminUpdateUserPassword\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AdminUpdateUserPasswordForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Set password for user.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/permissions\": {\n      \"put\": {\n        \"description\": \"Only works with Basic Authentication (username and password). See introduction for an explanation.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.permissions:update` and scope `global.users:*`.\",\n        \"operationId\": \"adminUpdateUserPermissions\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AdminUpdateUserPermissionsForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Set permissions for user.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/quotas\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:list` and scope `global.users:1` (userIDScope).\",\n        \"operationId\": \"getUserQuota\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQuotaResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Fetch user quota.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/quotas/{quota_target}\": {\n      \"put\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.quotas:update` and scope `global.users:1` (userIDScope).\",\n        \"operationId\": \"updateUserQuota\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"quota_target\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserQuotaCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Update user quota.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/admin/users/{user_id}/revoke-auth-token\": {\n      \"post\": {\n        \"description\": \"Revokes the given auth token (device) for the user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `users.authtoken:update` and scope `global.users:*`.\",\n        \"operationId\": \"adminRevokeUserAuthToken\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RevokeAuthTokenCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Revoke auth token for user.\",\n        \"tags\": [\n          \"admin_users\"\n        ]\n      }\n    },\n    \"/alert-notifications\": {\n      \"get\": {\n        \"description\": \"Returns all notification channels that the authenticated user has permission to view.\",\n        \"operationId\": \"getAlertNotificationChannels\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertNotificationChannelsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all notification channels.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"You can find the full list of [supported notifiers](https://grafana.com/docs/grafana/latest/alerting/old-alerting/notifications/#list-of-supported-notifiers) on the alert notifiers page.\",\n        \"operationId\": \"createAlertNotificationChannel\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateAlertNotificationCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertNotificationChannelResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create notification channel.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      }\n    },\n    \"/alert-notifications/lookup\": {\n      \"get\": {\n        \"description\": \"Returns all notification channels, but with less detailed information. Accessible by any authenticated user and is mainly used by providing alert notification channels in Grafana UI when configuring alert rule.\",\n        \"operationId\": \"getAlertNotificationLookup\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertNotificationLookupResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all notification channels (lookup).\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      }\n    },\n    \"/alert-notifications/test\": {\n      \"post\": {\n        \"description\": \"Sends a test notification to the channel.\",\n        \"operationId\": \"notificationChannelTest\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/NotificationTestCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"412\": {\n            \"$ref\": \"#/components/responses/SMTPNotEnabledError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Test notification channel.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      }\n    },\n    \"/alert-notifications/uid/{notification_channel_uid}\": {\n      \"delete\": {\n        \"description\": \"Deletes an existing notification channel identified by UID.\",\n        \"operationId\": \"deleteAlertNotificationChannelByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"notification_channel_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/deleteAlertNotificationChannelResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete alert notification by UID.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Returns the notification channel given the notification channel UID.\",\n        \"operationId\": \"getAlertNotificationChannelByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"notification_channel_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertNotificationChannelResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get notification channel by UID.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Updates an existing notification channel identified by uid.\",\n        \"operationId\": \"updateAlertNotificationChannelByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"notification_channel_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAlertNotificationWithUidCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertNotificationChannelResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update notification channel by UID.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      }\n    },\n    \"/alert-notifications/{notification_channel_id}\": {\n      \"delete\": {\n        \"description\": \"Deletes an existing notification channel identified by ID.\",\n        \"operationId\": \"deleteAlertNotificationChannel\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"notification_channel_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete alert notification by ID.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Returns the notification channel given the notification channel ID.\",\n        \"operationId\": \"getAlertNotificationChannelByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"notification_channel_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertNotificationChannelResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get notification channel by ID.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Updates an existing notification channel identified by ID.\",\n        \"operationId\": \"updateAlertNotificationChannel\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"notification_channel_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAlertNotificationCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertNotificationChannelResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update notification channel by ID.\",\n        \"tags\": [\n          \"legacy_alerts_notification_channels\"\n        ]\n      }\n    },\n    \"/alerts\": {\n      \"get\": {\n        \"operationId\": \"getAlerts\",\n        \"parameters\": [\n          {\n            \"description\": \"Limit response to alerts in specified dashboard(s). You can specify multiple dashboards.\",\n            \"in\": \"query\",\n            \"name\": \"dashboardId\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"Limit response to alert for a specified panel on a dashboard.\",\n            \"in\": \"query\",\n            \"name\": \"panelId\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Limit response to alerts having a name like this value.\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Return alerts with one or more of the following alert states\",\n            \"in\": \"query\",\n            \"name\": \"state\",\n            \"schema\": {\n              \"enum\": [\n                \"all\",\n                \"no_data\",\n                \"paused\",\n                \"alerting\",\n                \"ok\",\n                \"pending\",\n                \"unknown\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Limit response to X number of alerts.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Limit response to alerts of dashboards in specified folder(s). You can specify multiple folders\",\n            \"in\": \"query\",\n            \"name\": \"folderId\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"Limit response to alerts having a dashboard name like this value./ Limit response to alerts having a dashboard name like this value.\",\n            \"in\": \"query\",\n            \"name\": \"dashboardQuery\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Limit response to alerts of dashboards with specified tags. To do an “AND” filtering with multiple tags, specify the tags parameter multiple times\",\n            \"in\": \"query\",\n            \"name\": \"dashboardTag\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get legacy alerts.\",\n        \"tags\": [\n          \"legacy_alerts\"\n        ]\n      }\n    },\n    \"/alerts/states-for-dashboard\": {\n      \"get\": {\n        \"operationId\": \"getDashboardStates\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"dashboardId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDashboardStatesResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get alert states for a dashboard.\",\n        \"tags\": [\n          \"legacy_alerts\"\n        ]\n      }\n    },\n    \"/alerts/test\": {\n      \"post\": {\n        \"operationId\": \"testAlert\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AlertTestCommand\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/testAlertResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/unprocessableEntityError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Test alert.\",\n        \"tags\": [\n          \"legacy_alerts\"\n        ]\n      }\n    },\n    \"/alerts/{alert_id}\": {\n      \"get\": {\n        \"description\": \"“evalMatches” data in the response is cached in the db when and only when the state of the alert changes (e.g. transitioning from “ok” to “alerting” state).\\nIf data from one server triggers the alert first and, before that server is seen leaving alerting state, a second server also enters a state that would trigger the alert, the second server will not be visible in “evalMatches” data.\",\n        \"operationId\": \"getAlertByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"alert_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAlertResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get alert by ID.\",\n        \"tags\": [\n          \"legacy_alerts\"\n        ]\n      }\n    },\n    \"/alerts/{alert_id}/pause\": {\n      \"post\": {\n        \"operationId\": \"pauseAlert\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"alert_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PauseAlertCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/pauseAlertResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Pause/unpause alert by id.\",\n        \"tags\": [\n          \"legacy_alerts\"\n        ]\n      }\n    },\n    \"/annotations\": {\n      \"get\": {\n        \"description\": \"Starting in Grafana v6.4 regions annotations are now returned in one entity that now includes the timeEnd property.\",\n        \"operationId\": \"getAnnotations\",\n        \"parameters\": [\n          {\n            \"description\": \"Find annotations created after specific epoch datetime in milliseconds.\",\n            \"in\": \"query\",\n            \"name\": \"from\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Find annotations created before specific epoch datetime in milliseconds.\",\n            \"in\": \"query\",\n            \"name\": \"to\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Limit response to annotations created by specific user.\",\n            \"in\": \"query\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Find annotations for a specified alert.\",\n            \"in\": \"query\",\n            \"name\": \"alertId\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Find annotations that are scoped to a specific dashboard\",\n            \"in\": \"query\",\n            \"name\": \"dashboardId\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Find annotations that are scoped to a specific dashboard\",\n            \"in\": \"query\",\n            \"name\": \"dashboardUID\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Find annotations that are scoped to a specific panel\",\n            \"in\": \"query\",\n            \"name\": \"panelId\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Max limit for results returned.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Use this to filter organization annotations. Organization annotations are annotations from an annotation data source that are not connected specifically to a dashboard or panel. You can filter by multiple tags.\",\n            \"in\": \"query\",\n            \"name\": \"tags\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"Return alerts or user created annotations\",\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"enum\": [\n                \"alert\",\n                \"annotation\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Match any or all tags\",\n            \"in\": \"query\",\n            \"name\": \"matchAny\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAnnotationsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Find Annotations.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates an annotation in the Grafana database. The dashboardId and panelId fields are optional. If they are not specified then an organization annotation is created and can be queried in any dashboard that adds the Grafana annotations data source. When creating a region annotation include the timeEnd property.\\nThe format for `time` and `timeEnd` should be epoch numbers in millisecond resolution.\\nThe response for this HTTP request is slightly different in versions prior to v6.4. In prior versions you would also get an endId if you where creating a region. But in 6.4 regions are represented using a single event with time and timeEnd properties.\",\n        \"operationId\": \"postAnnotation\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PostAnnotationsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/postAnnotationResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create Annotation.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      }\n    },\n    \"/annotations/graphite\": {\n      \"post\": {\n        \"description\": \"Creates an annotation by using Graphite-compatible event format. The `when` and `data` fields are optional. If `when` is not specified then the current time will be used as annotation’s timestamp. The `tags` field can also be in prior to Graphite `0.10.0` format (string with multiple tags being separated by a space).\",\n        \"operationId\": \"postGraphiteAnnotation\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PostGraphiteAnnotationsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/postAnnotationResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create Annotation in Graphite format.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      }\n    },\n    \"/annotations/mass-delete\": {\n      \"post\": {\n        \"operationId\": \"massDeleteAnnotations\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MassDeleteAnnotationsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete multiple annotations.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      }\n    },\n    \"/annotations/tags\": {\n      \"get\": {\n        \"description\": \"Find all the event tags created in the annotations.\",\n        \"operationId\": \"getAnnotationTags\",\n        \"parameters\": [\n          {\n            \"description\": \"Tag is a string that you can use to filter tags.\",\n            \"in\": \"query\",\n            \"name\": \"tag\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Max limit for results returned.\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"default\": \"100\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAnnotationTagsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Find Annotations Tags.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      }\n    },\n    \"/annotations/{annotation_id}\": {\n      \"delete\": {\n        \"description\": \"Deletes the annotation that matches the specified ID.\",\n        \"operationId\": \"deleteAnnotationByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"annotation_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete Annotation By ID.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getAnnotationByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"annotation_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAnnotationByIDResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get Annotation by ID.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      },\n      \"patch\": {\n        \"description\": \"Updates one or more properties of an annotation that matches the specified ID.\\nThis operation currently supports updating of the `text`, `tags`, `time` and `timeEnd` properties.\\nThis is available in Grafana 6.0.0-beta2 and above.\",\n        \"operationId\": \"patchAnnotation\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"annotation_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PatchAnnotationsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Patch Annotation.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Updates all properties of an annotation that matches the specified id. To only update certain property, consider using the Patch Annotation operation.\",\n        \"operationId\": \"updateAnnotation\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"annotation_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateAnnotationsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update Annotation.\",\n        \"tags\": [\n          \"annotations\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/alert-rules\": {\n      \"post\": {\n        \"operationId\": \"RoutePostAlertRule\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProvisionedAlertRule\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProvisionedAlertRule\"\n                }\n              }\n            },\n            \"description\": \"ProvisionedAlertRule\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Create a new alert rule.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/alert-rules/{UID}\": {\n      \"delete\": {\n        \"operationId\": \"RouteDeleteAlertRule\",\n        \"parameters\": [\n          {\n            \"description\": \"Alert rule UID\",\n            \"in\": \"path\",\n            \"name\": \"UID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \" The alert rule was deleted successfully.\"\n          }\n        },\n        \"summary\": \"Delete a specific alert rule by UID.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"RouteGetAlertRule\",\n        \"parameters\": [\n          {\n            \"description\": \"Alert rule UID\",\n            \"in\": \"path\",\n            \"name\": \"UID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProvisionedAlertRule\"\n                }\n              }\n            },\n            \"description\": \"ProvisionedAlertRule\"\n          },\n          \"404\": {\n            \"description\": \" Not found.\"\n          }\n        },\n        \"summary\": \"Get a specific alert rule by UID.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"RoutePutAlertRule\",\n        \"parameters\": [\n          {\n            \"description\": \"Alert rule UID\",\n            \"in\": \"path\",\n            \"name\": \"UID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProvisionedAlertRule\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProvisionedAlertRule\"\n                }\n              }\n            },\n            \"description\": \"ProvisionedAlertRule\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Update an existing alert rule.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/contact-points\": {\n      \"get\": {\n        \"operationId\": \"RouteGetContactpoints\",\n        \"parameters\": [\n          {\n            \"description\": \"Filter by name\",\n            \"in\": \"query\",\n            \"name\": \"name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContactPoints\"\n                }\n              }\n            },\n            \"description\": \"ContactPoints\"\n          }\n        },\n        \"summary\": \"Get all the contact points.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"RoutePostContactpoints\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EmbeddedContactPoint\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmbeddedContactPoint\"\n                }\n              }\n            },\n            \"description\": \"EmbeddedContactPoint\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Create a contact point.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/contact-points/{UID}\": {\n      \"delete\": {\n        \"operationId\": \"RouteDeleteContactpoints\",\n        \"parameters\": [\n          {\n            \"description\": \"UID is the contact point unique identifier\",\n            \"in\": \"path\",\n            \"name\": \"UID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \" The contact point was deleted successfully.\"\n          }\n        },\n        \"summary\": \"Delete a contact point.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"RoutePutContactpoint\",\n        \"parameters\": [\n          {\n            \"description\": \"UID is the contact point unique identifier\",\n            \"in\": \"path\",\n            \"name\": \"UID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EmbeddedContactPoint\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Ack\"\n                }\n              }\n            },\n            \"description\": \"Ack\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Update an existing contact point.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/folder/{FolderUID}/rule-groups/{Group}\": {\n      \"get\": {\n        \"operationId\": \"RouteGetAlertRuleGroup\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"FolderUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"Group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AlertRuleGroup\"\n                }\n              }\n            },\n            \"description\": \"AlertRuleGroup\"\n          },\n          \"404\": {\n            \"description\": \" Not found.\"\n          }\n        },\n        \"summary\": \"Get a rule group.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"RoutePutAlertRuleGroup\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"FolderUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"Group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AlertRuleGroup\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AlertRuleGroup\"\n                }\n              }\n            },\n            \"description\": \"AlertRuleGroup\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Update the interval of a rule group.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/mute-timings\": {\n      \"get\": {\n        \"operationId\": \"RouteGetMuteTimings\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MuteTimings\"\n                }\n              }\n            },\n            \"description\": \"MuteTimings\"\n          }\n        },\n        \"summary\": \"Get all the mute timings.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"RoutePostMuteTiming\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n                }\n              }\n            },\n            \"description\": \"MuteTimeInterval\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Create a new mute timing.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/mute-timings/{name}\": {\n      \"delete\": {\n        \"operationId\": \"RouteDeleteMuteTiming\",\n        \"parameters\": [\n          {\n            \"description\": \"Mute timing name\",\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \" The mute timing was deleted successfully.\"\n          }\n        },\n        \"summary\": \"Delete a mute timing.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"RouteGetMuteTiming\",\n        \"parameters\": [\n          {\n            \"description\": \"Mute timing name\",\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n                }\n              }\n            },\n            \"description\": \"MuteTimeInterval\"\n          },\n          \"404\": {\n            \"description\": \" Not found.\"\n          }\n        },\n        \"summary\": \"Get a mute timing.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"RoutePutMuteTiming\",\n        \"parameters\": [\n          {\n            \"description\": \"Mute timing name\",\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MuteTimeInterval\"\n                }\n              }\n            },\n            \"description\": \"MuteTimeInterval\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Replace an existing mute timing.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/policies\": {\n      \"delete\": {\n        \"operationId\": \"RouteResetPolicyTree\",\n        \"responses\": {\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Ack\"\n                }\n              }\n            },\n            \"description\": \"Ack\"\n          }\n        },\n        \"summary\": \"Clears the notification policy tree.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"RouteGetPolicyTree\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Route\"\n                }\n              }\n            },\n            \"description\": \"Route\"\n          }\n        },\n        \"summary\": \"Get the notification policy tree.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"RoutePutPolicyTree\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Route\"\n              }\n            }\n          },\n          \"description\": \"The new notification routing tree to use\",\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Ack\"\n                }\n              }\n            },\n            \"description\": \"Ack\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Sets the notification policy tree.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/templates\": {\n      \"get\": {\n        \"operationId\": \"RouteGetTemplates\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageTemplates\"\n                }\n              }\n            },\n            \"description\": \"MessageTemplates\"\n          },\n          \"404\": {\n            \"description\": \" Not found.\"\n          }\n        },\n        \"summary\": \"Get all message templates.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/api/v1/provisioning/templates/{name}\": {\n      \"delete\": {\n        \"operationId\": \"RouteDeleteTemplate\",\n        \"parameters\": [\n          {\n            \"description\": \"Template Name\",\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \" The template was deleted successfully.\"\n          }\n        },\n        \"summary\": \"Delete a template.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"RouteGetTemplate\",\n        \"parameters\": [\n          {\n            \"description\": \"Template Name\",\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageTemplate\"\n                }\n              }\n            },\n            \"description\": \"MessageTemplate\"\n          },\n          \"404\": {\n            \"description\": \" Not found.\"\n          }\n        },\n        \"summary\": \"Get a message template.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"RoutePutTemplate\",\n        \"parameters\": [\n          {\n            \"description\": \"Template Name\",\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MessageTemplateContent\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageTemplate\"\n                }\n              }\n            },\n            \"description\": \"MessageTemplate\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            },\n            \"description\": \"ValidationError\"\n          }\n        },\n        \"summary\": \"Updates an existing template.\",\n        \"tags\": [\n          \"provisioning\"\n        ]\n      }\n    },\n    \"/auth/keys\": {\n      \"get\": {\n        \"description\": \"Will return auth keys.\",\n        \"operationId\": \"getAPIkeys\",\n        \"parameters\": [\n          {\n            \"description\": \"Show expired keys\",\n            \"in\": \"query\",\n            \"name\": \"includeExpired\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAPIkeyResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get auth keys.\",\n        \"tags\": [\n          \"api_keys\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Will return details of the created API key.\",\n        \"operationId\": \"addAPIkey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/postAPIkeyResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Creates an API key.\",\n        \"tags\": [\n          \"api_keys\"\n        ]\n      }\n    },\n    \"/auth/keys/{id}\": {\n      \"delete\": {\n        \"operationId\": \"deleteAPIkey\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete API key.\",\n        \"tags\": [\n          \"api_keys\"\n        ]\n      }\n    },\n    \"/dashboard/snapshots\": {\n      \"get\": {\n        \"operationId\": \"searchDashboardSnapshots\",\n        \"parameters\": [\n          {\n            \"description\": \"Search Query\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Limit the number of returned results\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"default\": 1000,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/searchDashboardSnapshotsResponse\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"List snapshots.\",\n        \"tags\": [\n          \"snapshots\"\n        ]\n      }\n    },\n    \"/dashboards/calculate-diff\": {\n      \"post\": {\n        \"operationId\": \"calculateDashboardDiff\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"base\": {\n                    \"$ref\": \"#/components/schemas/CalculateDiffTarget\"\n                  },\n                  \"diffType\": {\n                    \"description\": \"The type of diff to return\\nDescription:\\n`basic`\\n`json`\",\n                    \"enum\": [\n                      \"basic\",\n                      \"json\"\n                    ],\n                    \"type\": \"string\"\n                  },\n                  \"new\": {\n                    \"$ref\": \"#/components/schemas/CalculateDiffTarget\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/calculateDashboardDiffResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Perform diff on two dashboards.\",\n        \"tags\": [\n          \"dashboards\"\n        ]\n      }\n    },\n    \"/dashboards/db\": {\n      \"post\": {\n        \"description\": \"Creates a new dashboard or updates an existing dashboard.\",\n        \"operationId\": \"postDashboard\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SaveDashboardCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/postDashboardResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"412\": {\n            \"$ref\": \"#/components/responses/preconditionFailedError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/unprocessableEntityError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create / Update dashboard\",\n        \"tags\": [\n          \"dashboards\"\n        ]\n      }\n    },\n    \"/dashboards/home\": {\n      \"get\": {\n        \"operationId\": \"getHomeDashboard\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getHomeDashboardResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get home dashboard.\",\n        \"tags\": [\n          \"dashboards\"\n        ]\n      }\n    },\n    \"/dashboards/id/{DashboardID}/permissions\": {\n      \"get\": {\n        \"description\": \"Please refer to [updated API](#/dashboard_permissions/getDashboardPermissionsListByUID) instead\",\n        \"operationId\": \"getDashboardPermissionsListByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"DashboardID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDashboardPermissionsListResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Gets all existing permissions for the given dashboard.\",\n        \"tags\": [\n          \"dashboard_permissions\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Please refer to [updated API](#/dashboard_permissions/updateDashboardPermissionsByUID) instead\\n\\nThis operation will remove existing permissions if they’re not included in the request.\",\n        \"operationId\": \"updateDashboardPermissionsByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"DashboardID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDashboardACLCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Updates permissions for a dashboard.\",\n        \"tags\": [\n          \"dashboard_permissions\"\n        ]\n      }\n    },\n    \"/dashboards/id/{DashboardID}/restore\": {\n      \"post\": {\n        \"description\": \"Please refer to [updated API](#/dashboard_versions/restoreDashboardVersionByUID) instead\",\n        \"operationId\": \"restoreDashboardVersionByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"DashboardID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestoreDashboardVersionCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/postDashboardResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Restore a dashboard to a given dashboard version.\",\n        \"tags\": [\n          \"dashboard_versions\"\n        ]\n      }\n    },\n    \"/dashboards/id/{DashboardID}/versions\": {\n      \"get\": {\n        \"description\": \"Please refer to [updated API](#/dashboard_versions/getDashboardVersionsByUID) instead\",\n        \"operationId\": \"getDashboardVersionsByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"DashboardID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/dashboardVersionsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Gets all existing versions for the dashboard.\",\n        \"tags\": [\n          \"dashboard_versions\"\n        ]\n      }\n    },\n    \"/dashboards/id/{DashboardID}/versions/{DashboardVersionID}\": {\n      \"get\": {\n        \"description\": \"Please refer to [updated API](#/dashboard_versions/getDashboardVersionByUID) instead\",\n        \"operationId\": \"getDashboardVersionByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"DashboardID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"DashboardVersionID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/dashboardVersionResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get a specific dashboard version.\",\n        \"tags\": [\n          \"dashboard_versions\"\n        ]\n      }\n    },\n    \"/dashboards/import\": {\n      \"post\": {\n        \"operationId\": \"importDashboard\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ImportDashboardRequest\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/importDashboardResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"412\": {\n            \"$ref\": \"#/components/responses/preconditionFailedError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/unprocessableEntityError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Import dashboard.\",\n        \"tags\": [\n          \"dashboards\"\n        ]\n      }\n    },\n    \"/dashboards/tags\": {\n      \"get\": {\n        \"operationId\": \"getDashboardTags\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDashboardsTagsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all dashboards tags of an organisation.\",\n        \"tags\": [\n          \"dashboards\"\n        ]\n      }\n    },\n    \"/dashboards/trim\": {\n      \"post\": {\n        \"operationId\": \"trimDashboard\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TrimDashboardCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/trimDashboardResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Trim defaults from dashboard.\",\n        \"tags\": [\n          \"dashboards\"\n        ]\n      }\n    },\n    \"/dashboards/uid/{uid}\": {\n      \"delete\": {\n        \"description\": \"Will delete the dashboard given the specified unique identifier (uid).\",\n        \"operationId\": \"deleteDashboardByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/deleteDashboardResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete dashboard by uid.\",\n        \"tags\": [\n          \"dashboards\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Will return the dashboard given the dashboard unique identifier (uid).\",\n        \"operationId\": \"getDashboardByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/dashboardResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get dashboard by uid.\",\n        \"tags\": [\n          \"dashboards\"\n        ]\n      }\n    },\n    \"/dashboards/uid/{uid}/permissions\": {\n      \"get\": {\n        \"operationId\": \"getDashboardPermissionsListByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDashboardPermissionsListResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Gets all existing permissions for the given dashboard.\",\n        \"tags\": [\n          \"dashboard_permissions\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"This operation will remove existing permissions if they’re not included in the request.\",\n        \"operationId\": \"updateDashboardPermissionsByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDashboardACLCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Updates permissions for a dashboard.\",\n        \"tags\": [\n          \"dashboard_permissions\"\n        ]\n      }\n    },\n    \"/dashboards/uid/{uid}/restore\": {\n      \"post\": {\n        \"operationId\": \"restoreDashboardVersionByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RestoreDashboardVersionCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/postDashboardResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Restore a dashboard to a given dashboard version using UID.\",\n        \"tags\": [\n          \"dashboard_versions\"\n        ]\n      }\n    },\n    \"/dashboards/uid/{uid}/versions\": {\n      \"get\": {\n        \"operationId\": \"getDashboardVersionsByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Maximum number of results to return\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Version to start from when returning queries\",\n            \"in\": \"query\",\n            \"name\": \"start\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/dashboardVersionsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Gets all existing versions for the dashboard using UID.\",\n        \"tags\": [\n          \"dashboard_versions\"\n        ]\n      }\n    },\n    \"/dashboards/uid/{uid}/versions/{DashboardVersionID}\": {\n      \"get\": {\n        \"operationId\": \"getDashboardVersionByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"DashboardVersionID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/dashboardVersionResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get a specific dashboard version using UID.\",\n        \"tags\": [\n          \"dashboard_versions\"\n        ]\n      }\n    },\n    \"/datasources\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:read` and scope: `datasources:*`.\",\n        \"operationId\": \"getDataSources\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDataSourcesResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all data sources.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"By defining `password` and `basicAuthPassword` under secureJsonData property\\nGrafana encrypts them securely as an encrypted blob in the database.\\nThe response then lists the encrypted fields under secureJsonFields.\\n\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:create`\",\n        \"operationId\": \"addDataSource\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddDataSourceCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createOrUpdateDatasourceResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create a data source.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/correlations\": {\n      \"get\": {\n        \"operationId\": \"getCorrelations\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getCorrelationsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Gets all correlations.\",\n        \"tags\": [\n          \"correlations\"\n        ]\n      }\n    },\n    \"/datasources/id/{name}\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\",\n        \"operationId\": \"getDataSourceIdByName\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDataSourceIDResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get data source Id by Name.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/name/{name}\": {\n      \"delete\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\",\n        \"operationId\": \"deleteDataSourceByName\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/deleteDataSourceByNameResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete an existing data source by name.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:name:*` and `datasources:name:test_datasource` (single data source).\",\n        \"operationId\": \"getDataSourceByName\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDataSourceResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get a single data source by Name.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/proxy/uid/{uid}/{datasource_proxy_route}\": {\n      \"delete\": {\n        \"description\": \"Proxies all calls to the actual data source.\",\n        \"operationId\": \"datasourceProxyDELETEByUIDcalls\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"datasource_proxy_route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"(empty)\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Data source proxy DELETE calls.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Proxies all calls to the actual data source.\",\n        \"operationId\": \"datasourceProxyGETByUIDcalls\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasource_proxy_route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"(empty)\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Data source proxy GET calls.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined\",\n        \"operationId\": \"datasourceProxyPOSTByUIDcalls\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasource_proxy_route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"DatasourceProxyParam\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"(empty)\"\n          },\n          \"202\": {\n            \"description\": \"(empty)\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Data source proxy POST calls.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/proxy/{id}/{datasource_proxy_route}\": {\n      \"delete\": {\n        \"description\": \"Proxies all calls to the actual data source.\\n\\nPlease refer to [updated API](#/datasources/datasourceProxyDELETEByUIDcalls) instead\",\n        \"operationId\": \"datasourceProxyDELETEcalls\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"datasource_proxy_route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"(empty)\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Data source proxy DELETE calls.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Proxies all calls to the actual data source.\\n\\nPlease refer to [updated API](#/datasources/datasourceProxyGETByUIDcalls) instead\",\n        \"operationId\": \"datasourceProxyGETcalls\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasource_proxy_route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"(empty)\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Data source proxy GET calls.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Proxies all calls to the actual data source. The data source should support POST methods for the specific path and role as defined\\n\\nPlease refer to [updated API](#/datasources/datasourceProxyPOSTByUIDcalls) instead\",\n        \"operationId\": \"datasourceProxyPOSTcalls\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasource_proxy_route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"DatasourceProxyParam\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"(empty)\"\n          },\n          \"202\": {\n            \"description\": \"(empty)\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Data source proxy POST calls.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/uid/{sourceUID}/correlations\": {\n      \"get\": {\n        \"operationId\": \"getCorrelationsBySourceUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"sourceUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getCorrelationsBySourceUIDResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Gets all correlations originating from the given data source.\",\n        \"tags\": [\n          \"correlations\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"createCorrelation\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"sourceUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateCorrelationCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createCorrelationResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add correlation.\",\n        \"tags\": [\n          \"correlations\"\n        ]\n      }\n    },\n    \"/datasources/uid/{sourceUID}/correlations/{correlationUID}\": {\n      \"get\": {\n        \"operationId\": \"getCorrelation\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"sourceUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"correlationUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getCorrelationResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Gets a correlation.\",\n        \"tags\": [\n          \"correlations\"\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"updateCorrelation\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"sourceUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"correlationUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateCorrelationCommand\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/updateCorrelationResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Updates a correlation.\",\n        \"tags\": [\n          \"correlations\"\n        ]\n      }\n    },\n    \"/datasources/uid/{uid}\": {\n      \"delete\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).\",\n        \"operationId\": \"deleteDataSourceByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete an existing data source by UID.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:kLtEtcRGk` (single data source).\",\n        \"operationId\": \"getDataSourceByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDataSourceResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get a single data source by UID.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Similar to creating a data source, `password` and `basicAuthPassword` should be defined under\\nsecureJsonData in order to be stored securely as an encrypted blob in the database. Then, the\\nencrypted fields are listed under secureJsonFields section in the response.\\n\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:uid:*` and `datasources:uid:1` (single data source).\",\n        \"operationId\": \"updateDataSourceByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDataSourceCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createOrUpdateDatasourceResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update an existing data source.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/uid/{uid}/correlations/{correlationUID}\": {\n      \"delete\": {\n        \"operationId\": \"deleteCorrelation\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"correlationUID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/deleteCorrelationResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete a correlation.\",\n        \"tags\": [\n          \"correlations\"\n        ]\n      }\n    },\n    \"/datasources/uid/{uid}/health\": {\n      \"get\": {\n        \"operationId\": \"checkDatasourceHealthWithUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Sends a health check request to the plugin datasource identified by the UID.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/uid/{uid}/resources/{datasource_proxy_route}\": {\n      \"get\": {\n        \"operationId\": \"callDatasourceResourceWithUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasource_proxy_route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Fetch data source resources.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/{datasourceId}/disable-permissions\": {\n      \"post\": {\n        \"description\": \"Disables permissions for the data source with the given id. All existing permissions will be removed and anyone will be able to query the data source.\\n\\nYou need to have a permission with action `datasources.permissions:toggle` and scopes `datasources:*`, `datasources:id:*`, `datasources:id:1` (single data source).\",\n        \"operationId\": \"disablePermissions\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasourceId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createOrUpdateDatasourceResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Disable permissions for a data source.\",\n        \"tags\": [\n          \"datasource_permissions\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/datasources/{datasourceId}/enable-permissions\": {\n      \"post\": {\n        \"description\": \"Enables permissions for the data source with the given id.\\nNo one except Org Admins will be able to query the data source until permissions have been added\\nwhich permit certain users or teams to query the data source.\\n\\nYou need to have a permission with action `datasources.permissions:toggle` and scopes `datasources:*`, `datasources:id:*`, `datasources:id:1` (single data source).\",\n        \"operationId\": \"enablePermissions\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasourceId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createOrUpdateDatasourceResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Enable permissions for a data source.\",\n        \"tags\": [\n          \"datasource_permissions\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/datasources/{datasourceId}/permissions\": {\n      \"get\": {\n        \"description\": \"Gets all existing permissions for the data source with the given id.\\n\\nYou need to have a permission with action `datasources.permissions:read` and scopes `datasources:*`, `datasources:id:*`, `datasources:id:1` (single data source).\",\n        \"operationId\": \"getAllPermissions\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasourceId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getAllPermissionseResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get permissions for a data source.\",\n        \"tags\": [\n          \"datasource_permissions\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"You need to have a permission with action `datasources.permissions:read` and scopes `datasources:*`, `datasources:id:*`, `datasources:id:1` (single data source).\",\n        \"operationId\": \"addPermission\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"teamId\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"builtinRole\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"permission\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"datasourceId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/addPermissionResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add permissions for a data source.\",\n        \"tags\": [\n          \"datasource_permissions\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/datasources/{datasourceId}/permissions/{permissionId}\": {\n      \"delete\": {\n        \"description\": \"Removes the permission with the given permissionId for the data source with the given id.\\n\\nYou need to have a permission with action `datasources.permissions:delete` and scopes `datasources:*`, `datasources:id:*`, `datasources:id:1` (single data source).\",\n        \"operationId\": \"deletePermissions\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasourceId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"permissionId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          }\n        },\n        \"summary\": \"Remove permission for a data source.\",\n        \"tags\": [\n          \"datasource_permissions\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/datasources/{id}\": {\n      \"delete\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:delete` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).\\n\\nPlease refer to [updated API](#/datasources/deleteDataSourceByUID) instead\",\n        \"operationId\": \"deleteDataSourceByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete an existing data source by id.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:read` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).\\n\\nPlease refer to [updated API](#/datasources/getDataSourceByUID) instead\",\n        \"operationId\": \"getDataSourceByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDataSourceResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get a single data source by Id.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Similar to creating a data source, `password` and `basicAuthPassword` should be defined under\\nsecureJsonData in order to be stored securely as an encrypted blob in the database. Then, the\\nencrypted fields are listed under secureJsonFields section in the response.\\n\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:write` and scopes: `datasources:*`, `datasources:id:*` and `datasources:id:1` (single data source).\\n\\nPlease refer to [updated API](#/datasources/updateDataSourceByUID) instead\",\n        \"operationId\": \"updateDataSourceByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDataSourceCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createOrUpdateDatasourceResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update an existing data source by its sequential ID.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/{id}/health\": {\n      \"get\": {\n        \"description\": \"Please refer to [updated API](#/datasources/checkDatasourceHealthWithUID) instead\",\n        \"operationId\": \"checkDatasourceHealthByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Sends a health check request to the plugin datasource identified by the ID.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/datasources/{id}/resources/{datasource_proxy_route}\": {\n      \"get\": {\n        \"description\": \"Please refer to [updated API](#/datasources/callDatasourceResourceWithUID) instead\",\n        \"operationId\": \"callDatasourceResourceByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"datasource_proxy_route\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Fetch data source resources by Id.\",\n        \"tags\": [\n          \"datasources\"\n        ]\n      }\n    },\n    \"/ds/query\": {\n      \"post\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `datasources:query`.\",\n        \"operationId\": \"queryMetricsWithExpressions\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MetricRequest\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/queryMetricsWithExpressionsRespons\"\n          },\n          \"207\": {\n            \"$ref\": \"#/components/responses/queryMetricsWithExpressionsRespons\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"DataSource query metrics with expressions.\",\n        \"tags\": [\n          \"ds\"\n        ]\n      }\n    },\n    \"/folders\": {\n      \"get\": {\n        \"description\": \"Returns all folders that the authenticated user has permission to view.\",\n        \"operationId\": \"getFolders\",\n        \"parameters\": [\n          {\n            \"description\": \"Limit the maximum number of folders to return\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"default\": 1000,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Page index for starting fetching folders\",\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"default\": 1,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getFoldersResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all folders.\",\n        \"tags\": [\n          \"folders\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"createFolder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateFolderCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/folderResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create folder.\",\n        \"tags\": [\n          \"folders\"\n        ]\n      }\n    },\n    \"/folders/id/{folder_id}\": {\n      \"get\": {\n        \"description\": \"Returns the folder identified by id.\",\n        \"operationId\": \"getFolderByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/folderResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get folder by id.\",\n        \"tags\": [\n          \"folders\"\n        ]\n      }\n    },\n    \"/folders/{folder_uid}\": {\n      \"delete\": {\n        \"description\": \"Deletes an existing folder identified by UID along with all dashboards (and their alerts) stored in the folder. This operation cannot be reverted.\",\n        \"operationId\": \"deleteFolder\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"If `true` any Grafana 8 Alerts under this folder will be deleted.\\nSet to `false` so that the request will fail if the folder contains any Grafana 8 Alerts.\",\n            \"in\": \"query\",\n            \"name\": \"forceDeleteRules\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/deleteFolderResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete folder.\",\n        \"tags\": [\n          \"folders\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getFolderByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/folderResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get folder by uid.\",\n        \"tags\": [\n          \"folders\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateFolder\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateFolderCommand\"\n              }\n            }\n          },\n          \"description\": \"To change the unique identifier (uid), provide another one.\\nTo overwrite an existing folder with newer version, set `overwrite` to `true`.\\nProvide the current version to safelly update the folder: if the provided version differs from the stored one the request will fail, unless `overwrite` is `true`.\",\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/folderResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update folder.\",\n        \"tags\": [\n          \"folders\"\n        ]\n      }\n    },\n    \"/folders/{folder_uid}/permissions\": {\n      \"get\": {\n        \"operationId\": \"getFolderPermissionList\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getFolderPermissionListResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Gets all existing permissions for the folder with the given `uid`.\",\n        \"tags\": [\n          \"folder_permissions\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"updateFolderPermissions\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"folder_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateDashboardACLCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Updates permissions for a folder. This operation will remove existing permissions if they’re not included in the request.\",\n        \"tags\": [\n          \"folder_permissions\"\n        ]\n      }\n    },\n    \"/library-elements\": {\n      \"get\": {\n        \"description\": \"Returns a list of all library elements the authenticated user has permission to view.\\nUse the `perPage` query parameter to control the maximum number of library elements returned; the default limit is `100`.\\nYou can also use the `page` query parameter to fetch library elements from any page other than the first one.\",\n        \"operationId\": \"getLibraryElements\",\n        \"parameters\": [\n          {\n            \"description\": \"Part of the name or description searched for.\",\n            \"in\": \"query\",\n            \"name\": \"searchString\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Kind of element to search for.\",\n            \"in\": \"query\",\n            \"name\": \"kind\",\n            \"schema\": {\n              \"enum\": [\n                1,\n                2\n              ],\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Sort order of elements.\",\n            \"in\": \"query\",\n            \"name\": \"sortDirection\",\n            \"schema\": {\n              \"enum\": [\n                \"alpha-asc\",\n                \"alpha-desc\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"A comma separated list of types to filter the elements by\",\n            \"in\": \"query\",\n            \"name\": \"typeFilter\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Element UID to exclude from search results.\",\n            \"in\": \"query\",\n            \"name\": \"excludeUid\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"A comma separated list of folder ID(s) to filter the elements by.\",\n            \"in\": \"query\",\n            \"name\": \"folderFilter\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The number of results per page.\",\n            \"in\": \"query\",\n            \"name\": \"perPage\",\n            \"schema\": {\n              \"default\": 100,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The page for a set of records, given that only perPage records are returned at a time. Numbering starts at 1.\",\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"default\": 1,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getLibraryElementsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all library elements.\",\n        \"tags\": [\n          \"library_elements\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates a new library element.\",\n        \"operationId\": \"createLibraryElement\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateLibraryElementCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getLibraryElementResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create library element.\",\n        \"tags\": [\n          \"library_elements\"\n        ]\n      }\n    },\n    \"/library-elements/name/{library_element_name}\": {\n      \"get\": {\n        \"description\": \"Returns a library element with the given name.\",\n        \"operationId\": \"getLibraryElementByName\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"library_element_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getLibraryElementResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get library element by name.\",\n        \"tags\": [\n          \"library_elements\"\n        ]\n      }\n    },\n    \"/library-elements/{library_element_uid}\": {\n      \"delete\": {\n        \"description\": \"Deletes an existing library element as specified by the UID. This operation cannot be reverted.\\nYou cannot delete a library element that is connected. This operation cannot be reverted.\",\n        \"operationId\": \"deleteLibraryElementByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"library_element_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete library element.\",\n        \"tags\": [\n          \"library_elements\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Returns a library element with the given UID.\",\n        \"operationId\": \"getLibraryElementByUID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"library_element_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getLibraryElementResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get library element by UID.\",\n        \"tags\": [\n          \"library_elements\"\n        ]\n      },\n      \"patch\": {\n        \"description\": \"Updates an existing library element identified by uid.\",\n        \"operationId\": \"updateLibraryElement\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"library_element_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PatchLibraryElementCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getLibraryElementResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"412\": {\n            \"$ref\": \"#/components/responses/preconditionFailedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update library element.\",\n        \"tags\": [\n          \"library_elements\"\n        ]\n      }\n    },\n    \"/library-elements/{library_element_uid}/connections/\": {\n      \"get\": {\n        \"description\": \"Returns a list of connections for a library element based on the UID specified.\",\n        \"operationId\": \"getLibraryElementConnections\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"library_element_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getLibraryElementConnectionsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get library element connections.\",\n        \"tags\": [\n          \"library_elements\"\n        ]\n      }\n    },\n    \"/licensing/check\": {\n      \"get\": {\n        \"operationId\": \"getStatus\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getStatusResponse\"\n          }\n        },\n        \"summary\": \"Check license availability.\",\n        \"tags\": [\n          \"licensing\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/licensing/custom-permissions\": {\n      \"get\": {\n        \"description\": \"You need to have a permission with action `licensing.reports:read`.\",\n        \"operationId\": \"getCustomPermissionsReport\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getCustomPermissionsReportResponse\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get custom permissions report.\",\n        \"tags\": [\n          \"licensing\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/licensing/custom-permissions-csv\": {\n      \"get\": {\n        \"description\": \"You need to have a permission with action `licensing.reports:read`.\",\n        \"operationId\": \"getCustomPermissionsCSV\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getCustomPermissionsReportResponse\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get custom permissions report in CSV format.\",\n        \"tags\": [\n          \"licensing\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/licensing/refresh-stats\": {\n      \"get\": {\n        \"description\": \"You need to have a permission with action `licensing:read`.\",\n        \"operationId\": \"refreshLicenseStats\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/refreshLicenseStatsResponse\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Refresh license stats.\",\n        \"tags\": [\n          \"licensing\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/licensing/token\": {\n      \"delete\": {\n        \"description\": \"Removes the license stored in the Grafana database. Available in Grafana Enterprise v7.4+.\\n\\nYou need to have a permission with action `licensing:delete`.\",\n        \"operationId\": \"deleteLicenseToken\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteTokenCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"202\": {\n            \"$ref\": \"#/components/responses/acceptedResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/unprocessableEntityError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Remove license from database.\",\n        \"tags\": [\n          \"licensing\",\n          \"enterprise\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"You need to have a permission with action `licensing:read`.\",\n        \"operationId\": \"getLicenseToken\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getLicenseTokenResponse\"\n          }\n        },\n        \"summary\": \"Get license token.\",\n        \"tags\": [\n          \"licensing\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"You need to have a permission with action `licensing:update`.\",\n        \"operationId\": \"postLicenseToken\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DeleteTokenCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getLicenseTokenResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          }\n        },\n        \"summary\": \"Create license token.\",\n        \"tags\": [\n          \"licensing\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/licensing/token/renew\": {\n      \"post\": {\n        \"description\": \"Manually ask license issuer for a new token. Available in Grafana Enterprise v7.4+.\\n\\nYou need to have a permission with action `licensing:update`.\",\n        \"operationId\": \"postRenewLicenseToken\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/postRenewLicenseTokenResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          }\n        },\n        \"summary\": \"Manually force license refresh.\",\n        \"tags\": [\n          \"licensing\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/logout/saml\": {\n      \"get\": {\n        \"operationId\": \"getSAMLLogout\",\n        \"responses\": {\n          \"302\": {\n            \"description\": \"(empty)\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"GetLogout initiates single logout process.\",\n        \"tags\": [\n          \"saml\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/org\": {\n      \"get\": {\n        \"operationId\": \"getCurrentOrg\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getCurrentOrgResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get current Organization.\",\n        \"tags\": [\n          \"org\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateCurrentOrg\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateOrgForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update current Organization.\",\n        \"tags\": [\n          \"org\"\n        ]\n      }\n    },\n    \"/org/address\": {\n      \"put\": {\n        \"operationId\": \"updateCurrentOrgAddress\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateOrgAddressForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update current Organization's address.\",\n        \"tags\": [\n          \"org\"\n        ]\n      }\n    },\n    \"/org/invites\": {\n      \"get\": {\n        \"operationId\": \"getPendingOrgInvites\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getPendingOrgInvitesResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get pending invites.\",\n        \"tags\": [\n          \"org_invites\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"addOrgInvite\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddInviteForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"412\": {\n            \"$ref\": \"#/components/responses/SMTPNotEnabledError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add invite.\",\n        \"tags\": [\n          \"org_invites\"\n        ]\n      }\n    },\n    \"/org/invites/{invitation_code}/revoke\": {\n      \"delete\": {\n        \"operationId\": \"revokeInvite\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"invitation_code\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Revoke invite.\",\n        \"tags\": [\n          \"org_invites\"\n        ]\n      }\n    },\n    \"/org/preferences\": {\n      \"get\": {\n        \"operationId\": \"getOrgPreferences\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getPreferencesResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get Current Org Prefs.\",\n        \"tags\": [\n          \"org_preferences\"\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"patchOrgPreferences\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PatchPrefsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Patch Current Org Prefs.\",\n        \"tags\": [\n          \"org_preferences\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateOrgPreferences\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdatePrefsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update Current Org Prefs.\",\n        \"tags\": [\n          \"org_preferences\"\n        ]\n      }\n    },\n    \"/org/users\": {\n      \"get\": {\n        \"description\": \"Returns all org users within the current organization. Accessible to users with org admin role.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `org.users:read` with scope `users:*`.\",\n        \"operationId\": \"getOrgUsersForCurrentOrg\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getOrgUsersForCurrentOrgResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all users within the current organization.\",\n        \"tags\": [\n          \"org\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Adds a global user to the current organization.\\n\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `org.users:add` with scope `users:*`.\",\n        \"operationId\": \"addOrgUserToCurrentOrg\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddOrgUserCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add a new user to the current organization.\",\n        \"tags\": [\n          \"org\"\n        ]\n      }\n    },\n    \"/org/users/lookup\": {\n      \"get\": {\n        \"description\": \"Returns all org users within the current organization, but with less detailed information.\\nAccessible to users with org admin role, admin in any folder or admin of any team.\\nMainly used by Grafana UI for providing list of users when adding team members and when editing folder/dashboard permissions.\",\n        \"operationId\": \"getOrgUsersForCurrentOrgLookup\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getOrgUsersForCurrentOrgLookupResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get all users within the current organization (lookup)\",\n        \"tags\": [\n          \"org\"\n        ]\n      }\n    },\n    \"/org/users/{user_id}\": {\n      \"delete\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `org.users:remove` with scope `users:*`.\",\n        \"operationId\": \"removeOrgUserForCurrentOrg\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete user in current organization.\",\n        \"tags\": [\n          \"org\"\n        ]\n      },\n      \"patch\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `org.users.role:update` with scope `users:*`.\",\n        \"operationId\": \"updateOrgUserForCurrentOrg\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateOrgUserCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Updates the given user.\",\n        \"tags\": [\n          \"org\"\n        ]\n      }\n    },\n    \"/orgs\": {\n      \"get\": {\n        \"operationId\": \"searchOrgs\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"default\": 1,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Number of items per page\\nThe totalCount field in the response can be used for pagination list E.g. if totalCount is equal to 100 teams and the perpage parameter is set to 10 then there are 10 pages of teams.\",\n            \"in\": \"query\",\n            \"name\": \"perpage\",\n            \"schema\": {\n              \"default\": 1000,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"If set it will return results where the query value is contained in the name field. Query values with spaces need to be URL encoded.\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/searchOrgsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Search all Organizations.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Only works if [users.allow_org_create](https://grafana.com/docs/grafana/latest/administration/configuration/#allow_org_create) is set.\",\n        \"operationId\": \"createOrg\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateOrgCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createOrgResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create Organization.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      }\n    },\n    \"/orgs/name/{org_name}\": {\n      \"get\": {\n        \"operationId\": \"getOrgByName\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getOrgByNameResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Get Organization by ID.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      }\n    },\n    \"/orgs/{org_id}\": {\n      \"delete\": {\n        \"operationId\": \"deleteOrgByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Delete Organization.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getOrgByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getOrgByIDResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Get Organization by ID.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateOrg\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateOrgForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Update Organization.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      }\n    },\n    \"/orgs/{org_id}/address\": {\n      \"put\": {\n        \"operationId\": \"updateOrgAddress\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateOrgAddressForm\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update Organization's address.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      }\n    },\n    \"/orgs/{org_id}/quotas\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:read` and scope `org:id:1` (orgIDScope).\",\n        \"operationId\": \"getOrgQuota\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQuotaResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Fetch Organization quota.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      }\n    },\n    \"/orgs/{org_id}/quotas/{quota_target}\": {\n      \"put\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, you need to have a permission with action `orgs.quotas:write` and scope `org:id:1` (orgIDScope).\",\n        \"operationId\": \"updateOrgQuota\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"quota_target\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateOrgQuotaCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Update user quota.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      }\n    },\n    \"/orgs/{org_id}/users\": {\n      \"get\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `org.users:read` with scope `users:*`.\",\n        \"operationId\": \"getOrgUsers\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getOrgUsersResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Get Users in Organization.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Adds a global user to the current organization.\\n\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `org.users:add` with scope `users:*`.\",\n        \"operationId\": \"addOrgUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddOrgUserCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add a new user to the current organization.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      }\n    },\n    \"/orgs/{org_id}/users/{user_id}\": {\n      \"delete\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `org.users:remove` with scope `users:*`.\",\n        \"operationId\": \"removeOrgUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete user in current organization.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      },\n      \"patch\": {\n        \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled\\nyou need to have a permission with action: `org.users.role:update` with scope `users:*`.\",\n        \"operationId\": \"updateOrgUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateOrgUserCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update Users in Organization.\",\n        \"tags\": [\n          \"orgs\"\n        ]\n      }\n    },\n    \"/playlists\": {\n      \"get\": {\n        \"operationId\": \"searchPlaylists\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"in:limit\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/searchPlaylistsResponse\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get playlists.\",\n        \"tags\": [\n          \"playlists\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"createPlaylist\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreatePlaylistCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createPlaylistResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create playlist.\",\n        \"tags\": [\n          \"playlists\"\n        ]\n      }\n    },\n    \"/playlists/{uid}\": {\n      \"delete\": {\n        \"operationId\": \"deletePlaylist\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete playlist.\",\n        \"tags\": [\n          \"playlists\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getPlaylist\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getPlaylistResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get playlist.\",\n        \"tags\": [\n          \"playlists\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updatePlaylist\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdatePlaylistCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/updatePlaylistResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update playlist.\",\n        \"tags\": [\n          \"playlists\"\n        ]\n      }\n    },\n    \"/playlists/{uid}/dashboards\": {\n      \"get\": {\n        \"operationId\": \"getPlaylistDashboards\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getPlaylistDashboardsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get playlist dashboards.\",\n        \"tags\": [\n          \"playlists\"\n        ]\n      }\n    },\n    \"/playlists/{uid}/items\": {\n      \"get\": {\n        \"operationId\": \"getPlaylistItems\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getPlaylistItemsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get playlist items.\",\n        \"tags\": [\n          \"playlists\"\n        ]\n      }\n    },\n    \"/query-history\": {\n      \"get\": {\n        \"description\": \"Returns a list of queries in the query history that matches the search criteria.\\nQuery history search supports pagination. Use the `limit` parameter to control the maximum number of queries returned; the default limit is 100.\\nYou can also use the `page` query parameter to fetch queries from any page other than the first one.\",\n        \"operationId\": \"searchQueries\",\n        \"parameters\": [\n          {\n            \"description\": \"List of data source UIDs to search for\",\n            \"in\": \"query\",\n            \"name\": \"datasourceUid\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"Text inside query or comments that is searched for\",\n            \"in\": \"query\",\n            \"name\": \"searchString\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Flag indicating if only starred queries should be returned\",\n            \"in\": \"query\",\n            \"name\": \"onlyStarred\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"Sort method\",\n            \"in\": \"query\",\n            \"name\": \"sort\",\n            \"schema\": {\n              \"default\": \"time-desc\",\n              \"enum\": [\n                \"time-desc\",\n                \"time-asc\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Use this parameter to access hits beyond limit. Numbering starts at 1. limit param acts as page size.\",\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Limit the number of returned results\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"From range for the query history search\",\n            \"in\": \"query\",\n            \"name\": \"from\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"To range for the query history search\",\n            \"in\": \"query\",\n            \"name\": \"to\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQueryHistorySearchResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Query history search.\",\n        \"tags\": [\n          \"query_history\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Adds new query to query history.\",\n        \"operationId\": \"createQuery\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateQueryInQueryHistoryCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQueryHistoryResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add query to query history.\",\n        \"tags\": [\n          \"query_history\"\n        ]\n      }\n    },\n    \"/query-history/migrate\": {\n      \"post\": {\n        \"description\": \"Adds multiple queries to query history.\",\n        \"operationId\": \"migrateQueries\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MigrateQueriesToQueryHistoryCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQueryHistoryMigrationResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Migrate queries to query history.\",\n        \"tags\": [\n          \"query_history\"\n        ]\n      }\n    },\n    \"/query-history/star/{query_history_uid}\": {\n      \"delete\": {\n        \"description\": \"Removes star from query in query history as specified by the UID.\",\n        \"operationId\": \"unstarQuery\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"query_history_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQueryHistoryResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Remove star to query in query history.\",\n        \"tags\": [\n          \"query_history\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Adds star to query in query history as specified by the UID.\",\n        \"operationId\": \"starQuery\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"query_history_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQueryHistoryResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add star to query in query history.\",\n        \"tags\": [\n          \"query_history\"\n        ]\n      }\n    },\n    \"/query-history/{query_history_uid}\": {\n      \"delete\": {\n        \"description\": \"Deletes an existing query in query history as specified by the UID. This operation cannot be reverted.\",\n        \"operationId\": \"deleteQuery\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"query_history_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQueryHistoryDeleteQueryResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete query in query history.\",\n        \"tags\": [\n          \"query_history\"\n        ]\n      },\n      \"patch\": {\n        \"description\": \"Updates comment for query in query history as specified by the UID.\",\n        \"operationId\": \"patchQueryComment\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"query_history_uid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PatchQueryCommentInQueryHistoryCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQueryHistoryResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update comment for query in query history.\",\n        \"tags\": [\n          \"query_history\"\n        ]\n      }\n    },\n    \"/recording-rules\": {\n      \"get\": {\n        \"operationId\": \"listRecordingRules\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/listRecordingRulesResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Lists all rules in the database: active or deleted.\",\n        \"tags\": [\n          \"recording_rules\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"createRecordingRule\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RecordingRuleJSON\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/recordingRuleResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create a recording rule that is then registered and started.\",\n        \"tags\": [\n          \"recording_rules\",\n          \"enterprise\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateRecordingRule\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RecordingRuleJSON\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/recordingRuleResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update the active status of a rule.\",\n        \"tags\": [\n          \"recording_rules\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/recording-rules/test\": {\n      \"post\": {\n        \"operationId\": \"testCreateRecordingRule\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RecordingRuleJSON\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/unprocessableEntityError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Test a recording rule.\",\n        \"tags\": [\n          \"recording_rules\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/recording-rules/writer\": {\n      \"delete\": {\n        \"operationId\": \"deleteRecordingRuleWriteTarget\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete the remote write target.\",\n        \"tags\": [\n          \"recording_rules\",\n          \"enterprise\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Return the prometheus remote write target\",\n        \"operationId\": \"getRecordingRuleWriteTarget\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/recordingRuleWriteTargetResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"tags\": [\n          \"recording_rules\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"It returns a 422 if there is not an existing prometheus data source configured\",\n        \"operationId\": \"createRecordingRuleWriteTarget\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PrometheusRemoteWriteTargetJSON\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/recordingRuleWriteTargetResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/unprocessableEntityError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create a remote write target.\",\n        \"tags\": [\n          \"recording_rules\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/recording-rules/{recordingRuleID}\": {\n      \"delete\": {\n        \"operationId\": \"deleteRecordingRule\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"recordingRuleID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete removes the rule from the registry and stops it.\",\n        \"tags\": [\n          \"recording_rules\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/reports\": {\n      \"get\": {\n        \"description\": \"Available to org admins only and with a valid or expired license\\n\\nYou need to have a permission with action `reports:read` with scope `reports:*`.\",\n        \"operationId\": \"getReports\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getReportsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"List reports.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Available to org admins only and with a valid license.\\n\\nYou need to have a permission with action `reports.admin:create`.\",\n        \"operationId\": \"createReport\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateOrUpdateConfigCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createReportResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Create a report.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/reports/email\": {\n      \"post\": {\n        \"description\": \"Generate and send a report. This API waits for the report to be generated before returning. We recommend that you set the client’s timeout to at least 60 seconds. Available to org admins only and with a valid license.\\n\\nOnly available in Grafana Enterprise v7.0+.\\nThis API endpoint is experimental and may be deprecated in a future release. On deprecation, a migration strategy will be provided and the endpoint will remain functional until the next major release of Grafana.\\n\\nYou need to have a permission with action `reports:send`.\",\n        \"operationId\": \"sendReport\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ReportEmailDTO\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Send a report.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/reports/render/pdf/{dashboardID}\": {\n      \"get\": {\n        \"description\": \"Please refer to [reports enterprise](#/reports/renderReportPDFs) instead. This will be removed in Grafana 10.\",\n        \"operationId\": \"renderReportPDF\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"DashboardID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"dashboardID\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"title\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"variables\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"orientation\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"layout\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/contentResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Render report for dashboard.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/reports/render/pdfs\": {\n      \"get\": {\n        \"description\": \"Available to all users and with a valid license.\",\n        \"operationId\": \"renderReportPDFs\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"dashboardID\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"orientation\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"layout\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/contentResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Render report for multiple dashboards.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/reports/settings\": {\n      \"get\": {\n        \"description\": \"Available to org admins only and with a valid or expired license\\n\\nYou need to have a permission with action `reports.settings:read`x.\",\n        \"operationId\": \"getReportSettings\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getReportSettingsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get settings.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Available to org admins only and with a valid or expired license\\n\\nYou need to have a permission with action `reports.settings:write`xx.\",\n        \"operationId\": \"saveReportSettings\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SettingsDTO\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Save settings.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/reports/test-email\": {\n      \"post\": {\n        \"description\": \"Available to org admins only and with a valid license.\\n\\nYou need to have a permission with action `reports:send`.\",\n        \"operationId\": \"sendTestEmail\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateOrUpdateConfigCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Send test report via email.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/reports/{id}\": {\n      \"delete\": {\n        \"description\": \"Available to org admins only and with a valid or expired license\\n\\nYou need to have a permission with action `reports.delete` with scope `reports:id:\\u003creport ID\\u003e`.\",\n        \"operationId\": \"deleteReport\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete a report.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Available to org admins only and with a valid or expired license\\n\\nYou need to have a permission with action `reports:read` with scope `reports:id:\\u003creport ID\\u003e`.\",\n        \"operationId\": \"getReport\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getReportResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get a report.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Available to org admins only and with a valid or expired license\\n\\nYou need to have a permission with action `reports.admin:write` with scope `reports:id:\\u003creport ID\\u003e`.\",\n        \"operationId\": \"updateReport\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateOrUpdateConfigCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update a report.\",\n        \"tags\": [\n          \"reports\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/saml/acs\": {\n      \"post\": {\n        \"operationId\": \"postACS\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"RelayState\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"(empty)\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"It performs assertion Consumer Service (ACS).\",\n        \"tags\": [\n          \"saml\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/saml/metadata\": {\n      \"get\": {\n        \"operationId\": \"getMetadata\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/contentResponse\"\n          }\n        },\n        \"summary\": \"It exposes the SP (Grafana's) metadata for the IdP's consumption.\",\n        \"tags\": [\n          \"saml\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/saml/slo\": {\n      \"get\": {\n        \"description\": \"There might be two possible requests:\\n1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request.\\n2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana,\\nor in case of IdP-initiated logout.\",\n        \"operationId\": \"getSLO\",\n        \"responses\": {\n          \"302\": {\n            \"description\": \"(empty)\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"It performs Single Logout (SLO) callback.\",\n        \"tags\": [\n          \"saml\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"There might be two possible requests:\\n1. Logout response (callback) when Grafana initiates single logout and IdP returns response to logout request.\\n2. Logout request when another SP initiates single logout and IdP sends logout request to the Grafana,\\nor in case of IdP-initiated logout.\",\n        \"operationId\": \"postSLO\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"SAMLRequest\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"SAMLResponse\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"(empty)\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"It performs Single Logout (SLO) callback.\",\n        \"tags\": [\n          \"saml\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/search\": {\n      \"get\": {\n        \"operationId\": \"search\",\n        \"parameters\": [\n          {\n            \"description\": \"Search Query\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"List of tags to search for\",\n            \"in\": \"query\",\n            \"name\": \"tag\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"Type to search for, dash-folder or dash-db\",\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"enum\": [\n                \"dash-folder\",\n                \"dash-db\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"List of dashboard id’s to search for\",\n            \"in\": \"query\",\n            \"name\": \"dashboardIds\",\n            \"schema\": {\n              \"items\": {\n                \"format\": \"int64\",\n                \"type\": \"integer\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"List of dashboard uid’s to search for\",\n            \"in\": \"query\",\n            \"name\": \"dashboardUIDs\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"List of folder id’s to search in for dashboards\",\n            \"in\": \"query\",\n            \"name\": \"folderIds\",\n            \"schema\": {\n              \"items\": {\n                \"format\": \"int64\",\n                \"type\": \"integer\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"Flag indicating if only starred Dashboards should be returned\",\n            \"in\": \"query\",\n            \"name\": \"starred\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"Limit the number of returned results (max 5000)\",\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Use this parameter to access hits beyond limit. Numbering starts at 1. limit param acts as page size. Only available in Grafana v6.2+.\",\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Set to `Edit` to return dashboards/folders that the user can edit\",\n            \"in\": \"query\",\n            \"name\": \"permission\",\n            \"schema\": {\n              \"default\": \"View\",\n              \"enum\": [\n                \"Edit\",\n                \"View\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Sort method; for listing all the possible sort methods use the search sorting endpoint.\",\n            \"in\": \"query\",\n            \"name\": \"sort\",\n            \"schema\": {\n              \"default\": \"alpha-asc\",\n              \"enum\": [\n                \"alpha-asc\",\n                \"alpha-desc\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/searchResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/unprocessableEntityError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"tags\": [\n          \"search\"\n        ]\n      }\n    },\n    \"/search/sorting\": {\n      \"get\": {\n        \"operationId\": \"listSortOptions\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/listSortOptionsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          }\n        },\n        \"summary\": \"List search sorting options.\",\n        \"tags\": [\n          \"search\"\n        ]\n      }\n    },\n    \"/serviceaccounts\": {\n      \"post\": {\n        \"description\": \"Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation):\\naction: `serviceaccounts:write` scope: `serviceaccounts:*`\\n\\nRequires basic authentication and that the authenticated user is a Grafana Admin.\",\n        \"operationId\": \"createServiceAccount\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateServiceAccountForm\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"$ref\": \"#/components/responses/createServiceAccountResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"# Create service account\",\n        \"tags\": [\n          \"service_accounts\"\n        ]\n      }\n    },\n    \"/serviceaccounts/search\": {\n      \"get\": {\n        \"description\": \"Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation):\\naction: `serviceaccounts:read` scope: `serviceaccounts:*`\",\n        \"operationId\": \"searchOrgServiceAccountsWithPaging\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"Disabled\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"expiredTokens\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"It will return results where the query value is contained in one of the name.\\nQuery values with spaces need to be URL encoded.\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The default value is 1000.\",\n            \"in\": \"query\",\n            \"name\": \"perpage\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"The default value is 1.\",\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/searchOrgServiceAccountsWithPagingResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"# Search service accounts with paging\",\n        \"tags\": [\n          \"service_accounts\"\n        ]\n      }\n    },\n    \"/serviceaccounts/{serviceAccountId}\": {\n      \"delete\": {\n        \"description\": \"Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation):\\naction: `serviceaccounts:delete` scope: `serviceaccounts:id:1` (single service account)\",\n        \"operationId\": \"deleteServiceAccount\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"serviceAccountId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"# Delete service account\",\n        \"tags\": [\n          \"service_accounts\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation):\\naction: `serviceaccounts:read` scope: `serviceaccounts:id:1` (single service account)\",\n        \"operationId\": \"retrieveServiceAccount\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"serviceAccountId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/retrieveServiceAccountResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"# Get single serviceaccount by Id\",\n        \"tags\": [\n          \"service_accounts\"\n        ]\n      },\n      \"patch\": {\n        \"description\": \"Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation):\\naction: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)\",\n        \"operationId\": \"updateServiceAccount\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"serviceAccountId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateServiceAccountForm\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/updateServiceAccountResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"# Update service account\",\n        \"tags\": [\n          \"service_accounts\"\n        ]\n      }\n    },\n    \"/serviceaccounts/{serviceAccountId}/tokens\": {\n      \"get\": {\n        \"description\": \"Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation):\\naction: `serviceaccounts:read` scope: `global:serviceaccounts:id:1` (single service account)\\n\\nRequires basic authentication and that the authenticated user is a Grafana Admin.\",\n        \"operationId\": \"listTokens\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"serviceAccountId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/listTokensResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"# Get service account tokens\",\n        \"tags\": [\n          \"service_accounts\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation):\\naction: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)\",\n        \"operationId\": \"createToken\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"serviceAccountId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddServiceAccountTokenCommand\"\n              }\n            }\n          },\n          \"x-originalParamName\": \"Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createTokenResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"# CreateNewToken adds a token to a service account\",\n        \"tags\": [\n          \"service_accounts\"\n        ]\n      }\n    },\n    \"/serviceaccounts/{serviceAccountId}/tokens/{tokenId}\": {\n      \"delete\": {\n        \"description\": \"Required permissions (See note in the [introduction](https://grafana.com/docs/grafana/latest/developers/http_api/serviceaccount/#service-account-api) for an explanation):\\naction: `serviceaccounts:write` scope: `serviceaccounts:id:1` (single service account)\\n\\nRequires basic authentication and that the authenticated user is a Grafana Admin.\",\n        \"operationId\": \"deleteToken\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"tokenId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"serviceAccountId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"# DeleteToken deletes service account tokens\",\n        \"tags\": [\n          \"service_accounts\"\n        ]\n      }\n    },\n    \"/snapshot/shared-options\": {\n      \"get\": {\n        \"operationId\": \"getSharingOptions\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getSharingOptionsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          }\n        },\n        \"summary\": \"Get snapshot sharing settings.\",\n        \"tags\": [\n          \"snapshots\"\n        ]\n      }\n    },\n    \"/snapshots\": {\n      \"post\": {\n        \"description\": \"Snapshot public mode should be enabled or authentication is required.\",\n        \"operationId\": \"createDashboardSnapshot\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateDashboardSnapshotCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createDashboardSnapshotResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"When creating a snapshot using the API, you have to provide the full dashboard payload including the snapshot data. This endpoint is designed for the Grafana UI.\",\n        \"tags\": [\n          \"snapshots\"\n        ]\n      }\n    },\n    \"/snapshots-delete/{deleteKey}\": {\n      \"get\": {\n        \"description\": \"Snapshot public mode should be enabled or authentication is required.\",\n        \"operationId\": \"deleteDashboardSnapshotByDeleteKey\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"deleteKey\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete Snapshot by deleteKey.\",\n        \"tags\": [\n          \"snapshots\"\n        ]\n      }\n    },\n    \"/snapshots/{key}\": {\n      \"delete\": {\n        \"operationId\": \"deleteDashboardSnapshot\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete Snapshot by Key.\",\n        \"tags\": [\n          \"snapshots\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getDashboardSnapshot\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getDashboardSnapshotResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get Snapshot by Key.\",\n        \"tags\": [\n          \"snapshots\"\n        ]\n      }\n    },\n    \"/teams\": {\n      \"post\": {\n        \"operationId\": \"createTeam\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateTeamCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/createTeamResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add Team.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      }\n    },\n    \"/teams/search\": {\n      \"get\": {\n        \"operationId\": \"searchTeams\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"default\": 1,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Number of items per page\\nThe totalCount field in the response can be used for pagination list E.g. if totalCount is equal to 100 teams and the perpage parameter is set to 10 then there are 10 pages of teams.\",\n            \"in\": \"query\",\n            \"name\": \"perpage\",\n            \"schema\": {\n              \"default\": 1000,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"If set it will return results where the query value is contained in the name field. Query values with spaces need to be URL encoded.\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/searchTeamsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Team Search With Paging.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      }\n    },\n    \"/teams/{teamId}/groups\": {\n      \"get\": {\n        \"operationId\": \"getTeamGroupsApi\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"teamId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getTeamGroupsApiResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get External Groups.\",\n        \"tags\": [\n          \"sync_team_groups\",\n          \"enterprise\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"addTeamGroupApi\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"teamId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TeamGroupMapping\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add External Group.\",\n        \"tags\": [\n          \"sync_team_groups\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/teams/{teamId}/groups/{groupId}\": {\n      \"delete\": {\n        \"operationId\": \"removeTeamGroupApi\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"teamId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Remove External Group.\",\n        \"tags\": [\n          \"sync_team_groups\",\n          \"enterprise\"\n        ]\n      }\n    },\n    \"/teams/{team_id}\": {\n      \"delete\": {\n        \"operationId\": \"deleteTeamByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Delete Team By ID.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getTeamByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getTeamByIDResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get Team By ID.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateTeam\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateTeamCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/conflictError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update Team.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      }\n    },\n    \"/teams/{team_id}/members\": {\n      \"get\": {\n        \"operationId\": \"getTeamMembers\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getTeamMembersResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get Team Members.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"addTeamMember\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddTeamMemberCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Add Team Member.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      }\n    },\n    \"/teams/{team_id}/members/{user_id}\": {\n      \"delete\": {\n        \"operationId\": \"removeTeamMember\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Remove Member From Team.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateTeamMember\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateTeamMemberCommand\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update Team Member.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      }\n    },\n    \"/teams/{team_id}/preferences\": {\n      \"get\": {\n        \"operationId\": \"getTeamPreferences\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getPreferencesResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get Team Preferences.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateTeamPreferences\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"team_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdatePrefsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update Team Preferences.\",\n        \"tags\": [\n          \"teams\"\n        ]\n      }\n    },\n    \"/user\": {\n      \"get\": {\n        \"description\": \"Get (current authenticated user)\",\n        \"operationId\": \"getSignedInUser\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/userResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateSignedInUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserCommand\"\n              }\n            }\n          },\n          \"description\": \"To change the email, name, login, theme, provide another one.\",\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update signed in User.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/auth-tokens\": {\n      \"get\": {\n        \"description\": \"Return a list of all auth tokens (devices) that the actual user currently have logged in from.\",\n        \"operationId\": \"getUserAuthTokens\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getUserAuthTokensResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Auth tokens of the actual User.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/helpflags/clear\": {\n      \"get\": {\n        \"operationId\": \"clearHelpFlags\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/helpFlagResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Clear user help flag.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/helpflags/{flag_id}\": {\n      \"put\": {\n        \"operationId\": \"setHelpFlag\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"flag_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/helpFlagResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Set user help flag.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/orgs\": {\n      \"get\": {\n        \"description\": \"Return a list of all organizations of the current user.\",\n        \"operationId\": \"getSignedInUserOrgList\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getSignedInUserOrgListResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Organizations of the actual User.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/password\": {\n      \"put\": {\n        \"description\": \"Changes the password for the user.\",\n        \"operationId\": \"changeUserPassword\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ChangeUserPasswordCommand\"\n              }\n            }\n          },\n          \"description\": \"To change the email, name, login, theme, provide another one.\",\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ],\n        \"summary\": \"Change Password.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/preferences\": {\n      \"get\": {\n        \"operationId\": \"getUserPreferences\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getPreferencesResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get user preferences.\",\n        \"tags\": [\n          \"user_preferences\"\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"patchUserPreferences\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PatchPrefsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Patch user preferences.\",\n        \"tags\": [\n          \"user_preferences\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Omitting a key (`theme`, `homeDashboardId`, `timezone`) will cause the current value to be replaced with the system default value.\",\n        \"operationId\": \"updateUserPreferences\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdatePrefsCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update user preferences.\",\n        \"tags\": [\n          \"user_preferences\"\n        ]\n      }\n    },\n    \"/user/quotas\": {\n      \"get\": {\n        \"operationId\": \"getUserQuotas\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getQuotaResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Fetch user quota.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/revoke-auth-token\": {\n      \"post\": {\n        \"description\": \"Revokes the given auth token (device) for the actual user. User of issued auth token (device) will no longer be logged in and will be required to authenticate again upon next activity.\",\n        \"operationId\": \"revokeUserAuthToken\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RevokeAuthTokenCmd\"\n              }\n            }\n          },\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Revoke an auth token of the actual User.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/stars/dashboard/{dashboard_id}\": {\n      \"delete\": {\n        \"description\": \"Deletes the starring of the given Dashboard for the actual user.\",\n        \"operationId\": \"unstarDashboard\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"dashboard_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Unstar a dashboard.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Stars the given Dashboard for the actual user.\",\n        \"operationId\": \"starDashboard\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"dashboard_id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Star a dashboard.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/teams\": {\n      \"get\": {\n        \"description\": \"Return a list of all teams that the current user is member of.\",\n        \"operationId\": \"getSignedInUserTeamList\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getSignedInUserTeamListResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Teams that the actual User is member of.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/user/using/{org_id}\": {\n      \"post\": {\n        \"description\": \"Switch user context to the given organization.\",\n        \"operationId\": \"userSetUsingOrg\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"org_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/badRequestError\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Switch user context for signed in user.\",\n        \"tags\": [\n          \"signed_in_user\"\n        ]\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"description\": \"Returns all users that the authenticated user has permission to view, admin permission required.\",\n        \"operationId\": \"searchUsers\",\n        \"parameters\": [\n          {\n            \"description\": \"Limit the maximum number of users to return per page\",\n            \"in\": \"query\",\n            \"name\": \"perpage\",\n            \"schema\": {\n              \"default\": 1000,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Page index for starting fetching users\",\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"default\": 1,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/searchUsersResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get users.\",\n        \"tags\": [\n          \"users\"\n        ]\n      }\n    },\n    \"/users/lookup\": {\n      \"get\": {\n        \"operationId\": \"getUserByLoginOrEmail\",\n        \"parameters\": [\n          {\n            \"description\": \"loginOrEmail of the user\",\n            \"in\": \"query\",\n            \"name\": \"loginOrEmail\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/userResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get user by login or email.\",\n        \"tags\": [\n          \"users\"\n        ]\n      }\n    },\n    \"/users/search\": {\n      \"get\": {\n        \"operationId\": \"searchUsersWithPaging\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/searchUsersResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get users with paging.\",\n        \"tags\": [\n          \"users\"\n        ]\n      }\n    },\n    \"/users/{user_id}\": {\n      \"get\": {\n        \"operationId\": \"getUserByID\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/userResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get user by id.\",\n        \"tags\": [\n          \"users\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Update the user identified by id.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUserCommand\"\n              }\n            }\n          },\n          \"description\": \"To change the email, name, login, theme, provide another one.\",\n          \"required\": true,\n          \"x-originalParamName\": \"body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/okResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Update user.\",\n        \"tags\": [\n          \"users\"\n        ]\n      }\n    },\n    \"/users/{user_id}/orgs\": {\n      \"get\": {\n        \"description\": \"Get organizations for user identified by id.\",\n        \"operationId\": \"getUserOrgList\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getUserOrgListResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get organizations for user.\",\n        \"tags\": [\n          \"users\"\n        ]\n      }\n    },\n    \"/users/{user_id}/teams\": {\n      \"get\": {\n        \"description\": \"Get teams for user identified by id.\",\n        \"operationId\": \"getUserTeams\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"user_id\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/getUserTeamsResponse\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/unauthorisedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/forbiddenError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/notFoundError\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/internalServerError\"\n          }\n        },\n        \"summary\": \"Get teams for user.\",\n        \"tags\": [\n          \"users\"\n        ]\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"basic\": []\n    },\n    {\n      \"api_key\": []\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"/api\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.\",\n      \"name\": \"datasources\"\n    },\n    {\n      \"description\": \"Folders are identified by the identifier (id) and the unique identifier (uid).\\nThe identifier (id) of a folder is an auto-incrementing numeric value and is only unique per Grafana install.\\nThe unique identifier (uid) of a folder can be used for uniquely identify folders between multiple Grafana installs. It’s automatically generated if not provided when creating a folder. The uid allows having consistent URLs for accessing folders and when syncing folders between multiple Grafana installs. This means that changing the title of a folder will not break any bookmarked links to that folder.\\nThe uid can have a maximum length of 40 characters.\\n\\nThe General folder (id=0) is special and is not part of the Folder API which means that you cannot use this API for retrieving information about the General folder.\",\n      \"name\": \"folders\"\n    },\n    {\n      \"description\": \"Permissions with `folderId=-1` are the default permissions for users with the Viewer and Editor roles. Permissions can be set for a user, a team or a role (Viewer or Editor). Permissions cannot be set for Admins - they always have access to everything.\",\n      \"name\": \"folder_permissions\"\n    },\n    {\n      \"description\": \"The Admin HTTP API does not currently work with an API Token. API Tokens are currently only linked to an organization and an organization role. They cannot be given the permission of server admin, only users can be given that permission. So in order to use these API calls you will have to use Basic Auth and the Grafana user must have the Grafana Admin permission. (The default admin user is called admin and has permission to use this API.)\",\n      \"name\": \"admin\"\n    },\n    {\n      \"description\": \"You can use the Alerting API to get information about legacy dashboard alerts and their states but this API cannot be used to modify the alert. To create new alerts or modify them you need to update the dashboard JSON that contains the alerts.\\nThis topic is relevant for the legacy dashboard alerts only.\\nYou can find Grafana 8 alerts API specification details [here](https://editor.swagger.io/?url=https://raw.githubusercontent.com/grafana/grafana/main/pkg/services/ngalert/api/tooling/post.json).\",\n      \"name\": \"legacy_alerts\"\n    },\n    {\n      \"description\": \"The identifier (id) of a notification channel is an auto-incrementing numeric value and is only unique per Grafana install.\\nThe unique identifier (uid) of a notification channel can be used for uniquely identify a notification channel between multiple Grafana installs. It’s automatically generated if not provided when creating a notification channel. The uid allows having consistent URLs for accessing notification channels and when syncing notification channels between multiple Grafana installations, refer to alert notification channel provisioning.\\nThe uid can have a maximum length of 40 characters.\",\n      \"name\": \"legacy_alerts_notification_channels\"\n    },\n    {\n      \"description\": \"Grafana Annotations feature released in Grafana 4.6. Annotations are saved in the Grafana database (sqlite, mysql or postgres). Annotations can be organization annotations that can be shown on any dashboard by configuring an annotation data source - they are filtered by tags. Or they can be tied to a panel on a dashboard and are then only shown on that panel.\",\n      \"name\": \"annotations\"\n    },\n    {\n      \"description\": \"The identifier (ID) of a library element is an auto-incrementing numeric value that is unique per Grafana install.\\nThe unique identifier (UID) of a library element uniquely identifies library elements between multiple Grafana installs. It’s automatically generated unless you specify it during library element creation. The UID provides consistent URLs for accessing library elements and when syncing library elements between multiple Grafana installs.\\nThe maximum length of a UID is 40 characters.\",\n      \"name\": \"library_elements\"\n    },\n    {\n      \"description\": \"The identifier (ID) of a query in query history is an auto-incrementing numeric value that is unique per Grafana install.\\nThe unique identifier (UID) of a query history uniquely identifies queries in query history between multiple Grafana installs. It’s automatically generated. The UID provides consistent URLs for accessing queries in query history.\",\n      \"name\": \"query_history\"\n    },\n    {\n      \"description\": \"The Admin Organizations HTTP API does not currently work with an API Token. API Tokens are currently only linked to an organization and an organization role. They cannot be given the permission of server admin, only users can be given that permission. So in order to use these API calls you will have to use Basic Auth and the Grafana user must have the Grafana Admin permission (The default admin user is called `admin` and has permission to use this API).\",\n      \"name\": \"orgs\"\n    },\n    {\n      \"description\": \"If you are running Grafana Enterprise and have Fine-grained access control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.\",\n      \"name\": \"org\"\n    },\n    {\n      \"description\": \"This API can be used to create/update/delete Teams and to add/remove users to Teams. All actions require that the user has the Admin role for the organization.\",\n      \"name\": \"teams\"\n    },\n    {\n      \"description\": \"This API can be used to enable, disable, list, add and remove permissions for a data source.\\nPermissions can be set for a user or a team. Permissions cannot be set for Admins - they always have access to everything.\\nThis is only available in Grafana Enterprise\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.\",\n      \"name\": \"datasource_permissions\"\n    },\n    {\n      \"description\": \"These are only available in Grafana Enterprise\",\n      \"name\": \"enterprise\"\n    },\n    {\n      \"description\": \"The API can be used to create, update, get and list roles, and create or remove built-in role assignments. To use the API, you would need to enable fine-grained access control.\\nThis only available in Grafana Enterprise.\\nThe API does not currently work with an API Token. So in order to use these API endpoints you will have to use Basic auth.\",\n      \"name\": \"access_control\"\n    },\n    {\n      \"description\": \"Licensing is only available in Grafana Enterprise. Read more about Grafana Enterprise.\\nIf you are running Grafana Enterprise and have Fine-grained access control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.\",\n      \"name\": \"licensing\"\n    },\n    {\n      \"description\": \"This API allows you to interact programmatically with the Reporting feature.\\nReporting is only available in Grafana Enterprise. Read more about Grafana Enterprise.\\nIf you have Fine-grained access Control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.\",\n      \"name\": \"reports\"\n    },\n    {\n      \"description\": \"Grafana Alerting Alertmanager-compatible endpoints\",\n      \"name\": \"alertmanager\"\n    },\n    {\n      \"description\": \"Grafana Alerting endpoints for managing rules\",\n      \"name\": \"ruler\"\n    },\n    {\n      \"description\": \"Grafana Alerting testing endpoints\",\n      \"name\": \"testing\"\n    },\n    {\n      \"description\": \"Grafana Alerting Prometheus-compatible endpoints\",\n      \"name\": \"prometheus\"\n    },\n    {\n      \"description\": \"If you are running Grafana Enterprise, for some endpoints you'll need to have specific permissions. Refer to [Role-based access control permissions](https://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/custom-role-actions-scopes/) for more information.\",\n      \"name\": \"service_accounts\"\n    }\n  ]\n}",
			"canonicalURL": "/github.com/grafana/grafana@15de96286a65792e0e9ddf4faf9e17626634f60e/-/blob/public/openapi3.json",
			"externalURLs": [
				{
					"url": "https://github.com/grafana/grafana/blob/15de96286a65792e0e9ddf4faf9e17626634f60e/public/openapi3.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at 15155:5: duplicate path: \"/datasources/uid/{uid}/correlations/{correlationUID}\""
}