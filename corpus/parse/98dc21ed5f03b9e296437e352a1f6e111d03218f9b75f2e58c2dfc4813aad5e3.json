{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codingsoo/REST_Go"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "services/genome-nexus/openapi.yaml",
			"byteSize": 67468,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e-\n    This page shows how to use HTTP requests to access the Genome Nexus API.\n    There are more high level clients available in Python, R, JavaScript,\n    TypeScript and various other languages as well as a command line client to\n    annotate MAF and VCF. See https://docs.genomenexus.org/api.\n\n\n    Aside from programmatic clients there are web based tools to annotate variants, see https://docs.genomenexus.org/tools.\n\n     We currently only provide long-term support for the '/annotation' endpoint. The other endpoints might change.\n  title: Genome Nexus API\n  version: \"2.0\"\ntags:\n  - name: info-controller\n    description: Info Controller\n  - name: pdb-controller\n    description: PDB Controller\n  - name: annotation-controller\n    description: Annotation Controller\n  - name: ptm-controller\n    description: PTM Controller\n  - name: pfam-controller\n    description: PFAM Controller\n  - name: ensembl-controller\n    description: Ensembl Controller\npaths:\n  /annotation:\n    post:\n      tags:\n        - annotation-controller\n      summary: Retrieves VEP annotation for the provided list of variants\n      operationId: fetchVariantAnnotationPOST\n      parameters:\n        - name: isoformOverrideSource\n          in: query\n          description: Isoform override source. For example uniprot\n          required: false\n          schema:\n            type: string\n        - name: token\n          in: query\n          description: Map of tokens. For example             {\"source1\":\"put-your-token1-here\",\"source2\":\"put-your-token2-here\"}\n          required: false\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: \"Comma separated list of fields to include (case-sensitive!). Forexample: hotspots\"\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: List of variants. For example [\"X:g.66937331T\u003eA\",\"17:g.41242962_41242963insGA\"] (GRCh37) or [\"1:g.182712A\u003eC\", \"2:g.265023C\u003eT\", \"3:g.319781del\", \"19:g.110753dup\", \"1:g.1385015_1387562del\"] (GRCh38)\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VariantAnnotation\"\n  /annotation/dbsnp/:\n    post:\n      tags:\n        - annotation-controller\n      summary: Retrieves VEP annotation for the provided list of dbSNP ids\n      operationId: fetchVariantAnnotationByIdPOST\n      parameters:\n        - name: isoformOverrideSource\n          in: query\n          description: Isoform override source. For example uniprot\n          required: false\n          schema:\n            type: string\n        - name: token\n          in: query\n          description: Map of tokens. For example {\"source1\":\"put-your-token1-here\",\"source2\":\"put-your-token2-here\"}\n          required: false\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: \"Comma separated list of fields to include (case-sensitive!). For\n            example: annotation_summary\"\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VariantAnnotation\"\n  \"/annotation/dbsnp/{variantId}\":\n    get:\n      tags:\n        - annotation-controller\n      summary: Retrieves VEP annotation for the give dbSNP id\n      operationId: fetchVariantAnnotationByIdGET\n      parameters:\n        - name: variantId\n          in: path\n          description: dbSNP id. For example rs116035550.\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: isoformOverrideSource\n          in: query\n          description: Isoform override source. For example uniprot\n          required: false\n          schema:\n            type: string\n        - name: token\n          in: query\n          description: Map of tokens. For example {\"source1\":\"put-your-token1-here\",\"source2\":\"put-your-token2-here\"}\n          required: false\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: \"Comma separated list of fields to include (case-sensitive!). For\n            example: annotation_summary\"\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VariantAnnotation\"\n  /annotation/genomic:\n    post:\n      tags:\n        - annotation-controller\n      summary: Retrieves VEP annotation for the provided list of genomic locations\n      operationId: fetchVariantAnnotationByGenomicLocationPOST\n      parameters:\n        - name: isoformOverrideSource\n          in: query\n          description: Isoform override source. For example uniprot\n          required: false\n          schema:\n            type: string\n        - name: token\n          in: query\n          description: Map of tokens. For example {\"source1\":\"put-your-token1-here\",\"source2\":\"put-your-token2-here\"}\n          required: false\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: \"Comma separated list of fields to include (case-sensitive!). For\n            example: hotspots\"\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: List of Genomic Locations\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VariantAnnotation\"\n  \"/annotation/genomic/{genomicLocation}\":\n    get:\n      tags:\n        - annotation-controller\n      summary: Retrieves VEP annotation for the provided genomic location\n      operationId: fetchVariantAnnotationByGenomicLocationGET\n      parameters:\n        - name: genomicLocation\n          in: path\n          description: A genomic location. For example 7,140453136,140453136,A,T\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: isoformOverrideSource\n          in: query\n          description: Isoform override source. For example uniprot\n          required: false\n          schema:\n            type: string\n        - name: token\n          in: query\n          description: Map of tokens. For example {\"source1\":\"put-your-token1-here\",\"source2\":\"put-your-token2-here\"}\n          required: false\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: \"Comma separated list of fields to include (case-sensitive!). For\n            example: hotspots\"\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VariantAnnotation\"\n  \"/annotation/{variant}\":\n    get:\n      tags:\n        - annotation-controller\n      summary: Retrieves VEP annotation for the provided variant\n      operationId: fetchVariantAnnotationGET\n      parameters:\n        - name: variant\n          in: path\n          description: Variant. For example 17:g.41242962_41242963insGA\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: isoformOverrideSource\n          in: query\n          description: Isoform override source. For example uniprot\n          required: false\n          schema:\n            type: string\n        - name: token\n          in: query\n          description: Map of tokens. For example {\"source1\":\"put-your-token1-here\",\"source2\":\"put-your-token2-here\"}\n          required: false\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: \"Comma separated list of fields to include (case-sensitive!). For\n            example: hotspots\"\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VariantAnnotation\"\n  /ensembl/canonical-gene/entrez:\n    post:\n      tags:\n        - ensembl-controller\n      summary: Retrieves canonical Ensembl Gene ID by Entrez Gene Ids\n      operationId: fetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: List of Entrez Gene Ids. For example [\"23140\",\"26009\",\"100131879\"]\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/EnsemblGene\"\n  \"/ensembl/canonical-gene/entrez/{entrezGeneId}\":\n    get:\n      tags:\n        - ensembl-controller\n      summary: Retrieves Ensembl canonical gene id by Entrez Gene Id\n      operationId: fetchCanonicalEnsemblGeneIdByEntrezGeneIdGET\n      parameters:\n        - name: entrezGeneId\n          in: path\n          description: An Entrez Gene Id. For example 23140\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnsemblGene\"\n  /ensembl/canonical-gene/hgnc:\n    post:\n      tags:\n        - ensembl-controller\n      summary: Retrieves canonical Ensembl Gene ID by Hugo Symbols\n      operationId: fetchCanonicalEnsemblGeneIdByHugoSymbolsPOST\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/EnsemblGene\"\n  \"/ensembl/canonical-gene/hgnc/{hugoSymbol}\":\n    get:\n      tags:\n        - ensembl-controller\n      summary: Retrieves Ensembl canonical gene id by Hugo Symbol\n      operationId: fetchCanonicalEnsemblGeneIdByHugoSymbolGET\n      parameters:\n        - name: hugoSymbol\n          in: path\n          description: A Hugo Symbol. For example TP53\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnsemblGene\"\n  /ensembl/canonical-transcript/hgnc:\n    post:\n      tags:\n        - ensembl-controller\n      summary: Retrieves Ensembl canonical transcripts by Hugo Symbols\n      operationId: fetchCanonicalEnsemblTranscriptsByHugoSymbolsPOST\n      parameters:\n        - name: isoformOverrideSource\n          in: query\n          description: Isoform override source. For example uniprot\n          required: false\n          schema:\n            type: string\n            default: uniprot\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/EnsemblTranscript\"\n  \"/ensembl/canonical-transcript/hgnc/{hugoSymbol}\":\n    get:\n      tags:\n        - ensembl-controller\n      summary: Retrieves Ensembl canonical transcript by Hugo Symbol\n      operationId: fetchCanonicalEnsemblTranscriptByHugoSymbolGET\n      parameters:\n        - name: hugoSymbol\n          in: path\n          description: A Hugo Symbol. For example TP53\n          required: true\n          example: abc\n          schema:\n            type: string\n        - name: isoformOverrideSource\n          in: query\n          description: Isoform override source. For example uniprot\n          required: false\n          schema:\n            type: string\n            default: uniprot\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnsemblTranscript\"\n  /ensembl/transcript:\n    get:\n      tags:\n        - ensembl-controller\n      summary: Retrieves Ensembl Transcripts by protein ID, and gene ID. Retrieves all\n        transcripts in case no query parameter provided\n      operationId: fetchEnsemblTranscriptsGET\n      parameters:\n        - name: geneId\n          in: query\n          description: An Ensembl gene ID. For example ENSG00000136999\n          required: false\n          schema:\n            type: string\n        - name: proteinId\n          in: query\n          description: An Ensembl protein ID. For example ENSP00000439985\n          required: false\n          schema:\n            type: string\n        - name: hugoSymbol\n          in: query\n          description: A Hugo Symbol For example ARF5\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/EnsemblTranscript\"\n    post:\n      tags:\n        - ensembl-controller\n      summary: Retrieves Ensembl Transcripts by Ensembl transcript IDs, hugo Symbols,\n        protein IDs, or gene IDs\n      operationId: fetchEnsemblTranscriptsByEnsemblFilterPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnsemblFilter\"\n        description: List of Ensembl transcript IDs. For example [\"ENST00000361390\", \"ENST00000361453\", \"ENST00000361624\" OR List of Hugo Symbols. For example [\"TP53\", \"PIK3CA\", \"BRCA1\"] OR List of Ensembl protein IDs. For example [\"ENSP00000439985\", \"ENSP00000478460\",\"ENSP00000346196\" OR List of Ensembl gene IDs. For example \"ENSG00000136999\", \"ENSG00000272398\", \"ENSG00000198695\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/EnsemblTranscript\"\n  \"/ensembl/transcript/{transcriptId}\":\n    get:\n      tags:\n        - ensembl-controller\n      summary: Retrieves the transcript by an Ensembl transcript ID\n      operationId: fetchEnsemblTranscriptByTranscriptIdGET\n      parameters:\n        - name: transcriptId\n          in: path\n          description: An Ensembl transcript ID. For example ENST00000361390\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnsemblTranscript\"\n  /ensembl/xrefs:\n    get:\n      tags:\n        - ensembl-controller\n      summary: Perform lookups of Ensembl identifiers and retrieve their external\n        references in other databases\n      operationId: fetchGeneXrefsGET\n      parameters:\n        - name: accession\n          in: query\n          description: Ensembl gene accession. For example ENSG00000169083\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/GeneXref\"\n  /pdb/header:\n    post:\n      tags:\n        - pdb-controller\n      summary: Retrieves PDB header info by a PDB id\n      operationId: fetchPdbHeaderPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: List of pdb ids, for example [\"1a37\",\"1a4o\"]\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PdbHeader\"\n  \"/pdb/header/{pdbId}\":\n    get:\n      tags:\n        - pdb-controller\n      summary: Retrieves PDB header info by a PDB id\n      operationId: fetchPdbHeaderGET\n      parameters:\n        - name: pdbId\n          in: path\n          description: PDB id, for example 1a37\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PdbHeader\"\n  /pfam/domain:\n    post:\n      tags:\n        - pfam-controller\n      summary: Retrieves PFAM domains by PFAM domain accession IDs\n      operationId: fetchPfamDomainsByPfamAccessionPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n        description: List of PFAM domain accession IDs. For example\n          [\"PF02827\",\"PF00093\",\"PF15276\"]\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PfamDomain\"\n  \"/pfam/domain/{pfamAccession}\":\n    get:\n      tags:\n        - pfam-controller\n      summary: Retrieves a PFAM domain by a PFAM domain ID\n      operationId: fetchPfamDomainsByAccessionGET\n      parameters:\n        - name: pfamAccession\n          in: path\n          description: A PFAM domain accession ID. For example PF02827\n          required: true\n          example: abc\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PfamDomain\"\n  /ptm/experimental:\n    get:\n      tags:\n        - ptm-controller\n      summary: Retrieves PTM entries by Ensembl Transcript ID\n      operationId: fetchPostTranslationalModificationsGET\n      parameters:\n        - name: ensemblTranscriptId\n          in: query\n          description: Ensembl Transcript ID. For example ENST00000646891\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PostTranslationalModification\"\n    post:\n      tags:\n        - ptm-controller\n      summary: Retrieves PTM entries by Ensembl Transcript IDs\n      operationId: fetchPostTranslationalModificationsByPtmFilterPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PtmFilter\"\n        description: List of Ensembl transcript IDs. For example [\"ENST00000420316\",\n          \"ENST00000646891\", \"ENST00000371953\"]\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PostTranslationalModification\"\n  /version:\n    get:\n      tags:\n        - info-controller\n      summary: Retrieve Genome Nexus Version\n      operationId: fetchVersionGET\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Version\"\nservers:\n  - url: http://localhost:50110/\ncomponents:\n  schemas:\n    AlleleCount:\n      type: object\n      required:\n        - ac\n        - ac_afr\n        - ac_amr\n        - ac_asj\n        - ac_eas\n        - ac_fin\n        - ac_nfe\n        - ac_oth\n        - ac_sas\n      properties:\n        ac:\n          type: integer\n          format: int32\n        ac_afr:\n          type: integer\n          format: int32\n        ac_amr:\n          type: integer\n          format: int32\n        ac_asj:\n          type: integer\n          format: int32\n        ac_eas:\n          type: integer\n          format: int32\n        ac_fin:\n          type: integer\n          format: int32\n        ac_nfe:\n          type: integer\n          format: int32\n        ac_oth:\n          type: integer\n          format: int32\n        ac_sas:\n          type: integer\n          format: int32\n    AlleleFrequency:\n      type: object\n      required:\n        - af\n        - af_afr\n        - af_amr\n        - af_asj\n        - af_eas\n        - af_fin\n        - af_nfe\n        - af_oth\n        - af_sas\n      properties:\n        af:\n          type: number\n          format: double\n        af_afr:\n          type: number\n          format: double\n        af_amr:\n          type: number\n          format: double\n        af_asj:\n          type: number\n          format: double\n        af_eas:\n          type: number\n          format: double\n        af_fin:\n          type: number\n          format: double\n        af_nfe:\n          type: number\n          format: double\n        af_oth:\n          type: number\n          format: double\n        af_sas:\n          type: number\n          format: double\n    AlleleNumber:\n      type: object\n      required:\n        - an\n        - an_afr\n        - an_amr\n        - an_asj\n        - an_eas\n        - an_fin\n        - an_nfe\n        - an_oth\n        - an_sas\n      properties:\n        an:\n          type: integer\n          format: int32\n        an_afr:\n          type: integer\n          format: int32\n        an_amr:\n          type: integer\n          format: int32\n        an_asj:\n          type: integer\n          format: int32\n        an_eas:\n          type: integer\n          format: int32\n        an_fin:\n          type: integer\n          format: int32\n        an_nfe:\n          type: integer\n          format: int32\n        an_oth:\n          type: integer\n          format: int32\n        an_sas:\n          type: integer\n          format: int32\n    Alleles:\n      type: object\n      properties:\n        allele:\n          type: string\n          description: allele\n    ArticleAbstract:\n      type: object\n      properties:\n        abstract:\n          type: string\n        link:\n          type: string\n    Citations:\n      type: object\n      properties:\n        abstracts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ArticleAbstract\"\n        pmids:\n          type: array\n          items:\n            type: string\n    ClinVar:\n      type: object\n      properties:\n        alleleId:\n          type: integer\n          format: int32\n          description: allele_id\n        alt:\n          type: string\n          description: alt\n        chrom:\n          type: string\n          description: chrom\n        cytogenic:\n          type: string\n          description: cytogenic\n        gene:\n          $ref: \"#/components/schemas/Gene\"\n        hg19:\n          $ref: \"#/components/schemas/Hg19\"\n        hg38:\n          $ref: \"#/components/schemas/Hg38\"\n        hgvs:\n          $ref: \"#/components/schemas/Hgvs\"\n        license:\n          type: string\n          description: license\n        rcv:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Rcv\"\n        variantId:\n          type: integer\n          format: int32\n          description: variant_id\n    Clinvar:\n      type: object\n      properties:\n        alternateAllele:\n          type: string\n        chromosome:\n          type: string\n        clinicalSignificance:\n          type: string\n        clinvarId:\n          type: integer\n          format: int32\n        conflictingClinicalSignificance:\n          type: string\n        endPosition:\n          type: integer\n          format: int32\n        referenceAllele:\n          type: string\n        startPosition:\n          type: integer\n          format: int32\n    ClinvarAnnotation:\n      type: object\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/Clinvar\"\n    ColocatedVariant:\n      type: object\n      required:\n        - gnomad_afr_allele\n        - gnomad_afr_maf\n        - gnomad_eas_allele\n        - gnomad_eas_maf\n        - gnomad_nfe_allele\n        - gnomad_nfe_maf\n      properties:\n        dbSnpId:\n          type: string\n        gnomad_nfe_allele:\n          type: string\n          description: GnomAD Non-Finnish European Allele\n        gnomad_nfe_maf:\n          type: string\n          description: GnomAD Non-Finnish European MAF\n        gnomad_afr_allele:\n          type: string\n          description: GnomAD African/African American Allele\n        gnomad_afr_maf:\n          type: string\n          description: GnomAD African/African American MAF\n        gnomad_eas_allele:\n          type: string\n          description: GnomAD East Asian Allele\n        gnomad_eas_maf:\n          type: string\n          description: GnomAD East Asian MAF\n    Cosmic:\n      type: object\n      properties:\n        alt:\n          type: string\n          description: alt\n        chrom:\n          type: string\n          description: chrom\n        cosmicId:\n          type: string\n          description: cosmic_id\n        hg19:\n          $ref: \"#/components/schemas/Hg19\"\n        license:\n          type: string\n          description: _license\n        mutFreq:\n          type: number\n          format: double\n          description: mut_freq\n        mutNt:\n          type: string\n          description: mut_nt\n        ref:\n          type: string\n          description: ref\n        tumorSite:\n          type: string\n          description: tumor_site\n    CountByTumorType:\n      type: object\n      properties:\n        tumorType:\n          type: string\n          description: Tumor Type\n        tumorTypeCount:\n          type: integer\n          format: int32\n          description: Sample count for Tumor Type\n        variantCount:\n          type: integer\n          format: int32\n          description: Variant count for Tumor Type\n    Dbsnp:\n      type: object\n      properties:\n        _class:\n          type: string\n          description: class\n        alleleOrigin:\n          type: string\n          description: allele_origin\n        alleles:\n          type: array\n          description: alleles\n          items:\n            $ref: \"#/components/schemas/Alleles\"\n        alt:\n          type: string\n          description: alt\n        chrom:\n          type: string\n          description: chrom\n        dbsnpBuild:\n          type: integer\n          format: int32\n          description: dbsnp_build\n        flags:\n          type: array\n          description: flags\n          items:\n            type: string\n        hg19:\n          $ref: \"#/components/schemas/Hg19\"\n        license:\n          type: string\n          description: _license\n        ref:\n          type: string\n          description: ref\n        rsid:\n          type: string\n          description: rsid\n        validated:\n          type: boolean\n          example: false\n          description: validated\n        varSubtype:\n          type: string\n          description: var_subtype\n        vartype:\n          type: string\n          description: vartype\n    Drug:\n      type: object\n      properties:\n        drugName:\n          type: string\n        ncitCode:\n          type: string\n        synonyms:\n          type: array\n          items:\n            type: string\n        uuid:\n          type: string\n    EnsemblFilter:\n      type: object\n      properties:\n        geneIds:\n          type: array\n          description: List of Ensembl gene IDs. For example [\"ENSG00000136999\",\n            \"ENSG00000272398\", \"ENSG00000198695\"]\n          items:\n            type: string\n        hugoSymbols:\n          type: array\n          description: List of Hugo Symbols. For example [\"TP53\", \"PIK3CA\", \"BRCA1\"]\n          items:\n            type: string\n        proteinIds:\n          type: array\n          description: List of Ensembl protein IDs. For example [\"ENSP00000439985\",\n            \"ENSP00000478460\", \"ENSP00000346196\"]\n          items:\n            type: string\n        transcriptIds:\n          type: array\n          description: List of Ensembl transcript IDs. For example [\"ENST00000361390\",\n            \"ENST00000361453\", \"ENST00000361624\"]\n          items:\n            type: string\n    EnsemblGene:\n      type: object\n      required:\n        - geneId\n        - hugoSymbol\n      properties:\n        geneId:\n          type: string\n          description: Ensembl gene id\n        hugoSymbol:\n          type: string\n          description: Approved Hugo symbol\n        synonyms:\n          type: array\n          description: Hugo symbol synonyms\n          items:\n            type: string\n        previousSymbols:\n          type: array\n          description: Previous Hugo symbols\n          items:\n            type: string\n        entrezGeneId:\n          type: string\n          description: Entrez Gene Id\n    EnsemblTranscript:\n      type: object\n      required:\n        - geneId\n        - proteinId\n        - transcriptId\n      properties:\n        uniprotId:\n          type: string\n        transcriptId:\n          type: string\n          description: Ensembl transcript id\n        geneId:\n          type: string\n          description: Ensembl gene id\n        proteinId:\n          type: string\n          description: Ensembl protein id\n        proteinLength:\n          type: integer\n          format: int32\n          description: Length of protein\n        pfamDomains:\n          type: array\n          description: Pfam domains\n          items:\n            $ref: \"#/components/schemas/PfamDomainRange\"\n        hugoSymbols:\n          type: array\n          description: Hugo symbols\n          items:\n            type: string\n        refseqMrnaId:\n          type: string\n          description: RefSeq mRNA ID\n        ccdsId:\n          type: string\n          description: Consensus CDS (CCDS) ID\n        exons:\n          type: array\n          description: Exon information\n          items:\n            $ref: \"#/components/schemas/Exon\"\n        utrs:\n          type: array\n          description: UTR information\n          items:\n            $ref: \"#/components/schemas/UntranslatedRegion\"\n    Exon:\n      type: object\n      required:\n        - exonEnd\n        - exonId\n        - exonStart\n        - rank\n        - strand\n        - version\n      properties:\n        exonId:\n          type: string\n          description: Exon id\n        exonStart:\n          type: integer\n          format: int32\n          description: Start position of exon\n        exonEnd:\n          type: integer\n          format: int32\n          description: End position of exon\n        rank:\n          type: integer\n          format: int32\n          description: Number of exon in transcript\n        strand:\n          type: integer\n          format: int32\n          description: Strand exon is on, -1 for - and 1 for +\n        version:\n          type: integer\n          format: int32\n          description: Exon version\n    Gene:\n      type: object\n      properties:\n        geneId:\n          type: string\n          description: geneid\n        symbol:\n          type: string\n          description: symbol\n    GeneXref:\n      type: object\n      required:\n        - db_display_name\n        - dbname\n        - description\n        - display_id\n        - primary_id\n        - version\n      properties:\n        db_display_name:\n          type: string\n          description: Database display name\n        dbname:\n          type: string\n          description: Database name\n        description:\n          type: string\n          description: Description\n        display_id:\n          type: string\n          description: Display id\n        ensemblGeneId:\n          type: string\n        info_text:\n          type: string\n          description: Database info text\n        info_types:\n          type: string\n          description: Database info type\n        primary_id:\n          type: string\n          description: Primary id\n        synonyms:\n          type: array\n          description: Synonyms\n          items:\n            type: string\n        version:\n          type: string\n          description: Version\n    GeneralPopulationStats:\n      type: object\n      properties:\n        counts:\n          $ref: \"#/components/schemas/SignalPopulationStats\"\n        frequencies:\n          $ref: \"#/components/schemas/SignalPopulationStats\"\n    GenomicLocation:\n      type: object\n      required:\n        - chromosome\n        - end\n        - referenceAllele\n        - start\n        - variantAllele\n      properties:\n        chromosome:\n          type: string\n          description: Chromosome\n        start:\n          type: integer\n          format: int32\n          description: Start Position\n        end:\n          type: integer\n          format: int32\n          description: End Position\n        referenceAllele:\n          type: string\n          description: Reference Allele\n        variantAllele:\n          type: string\n          description: Variant Allele\n    Gnomad:\n      type: object\n      properties:\n        alleleCount:\n          $ref: \"#/components/schemas/AlleleCount\"\n        alleleFrequency:\n          $ref: \"#/components/schemas/AlleleFrequency\"\n        alleleNumber:\n          $ref: \"#/components/schemas/AlleleNumber\"\n        homozygotes:\n          $ref: \"#/components/schemas/Homozygotes\"\n    Hg19:\n      type: object\n      properties:\n        end:\n          type: integer\n          format: int32\n          description: end\n        start:\n          type: integer\n          format: int32\n          description: start\n    Hg38:\n      type: object\n      properties:\n        end:\n          type: string\n          description: end\n        start:\n          type: string\n          description: start\n    Hgvs:\n      type: object\n      properties:\n        coding:\n          type: array\n          items:\n            type: string\n        genomic:\n          type: array\n          items:\n            type: string\n    Homozygotes:\n      type: object\n      required:\n        - hom\n        - hom_afr\n        - hom_amr\n        - hom_asj\n        - hom_eas\n        - hom_fin\n        - hom_nfe\n        - hom_oth\n        - hom_sas\n      properties:\n        hom:\n          type: integer\n          format: int32\n        hom_afr:\n          type: integer\n          format: int32\n        hom_amr:\n          type: integer\n          format: int32\n        hom_asj:\n          type: integer\n          format: int32\n        hom_eas:\n          type: integer\n          format: int32\n        hom_fin:\n          type: integer\n          format: int32\n        hom_nfe:\n          type: integer\n          format: int32\n        hom_oth:\n          type: integer\n          format: int32\n        hom_sas:\n          type: integer\n          format: int32\n    Hotspot:\n      type: object\n      properties:\n        hugoSymbol:\n          type: string\n          description: Hugo gene symbol\n        inframeCount:\n          type: integer\n          format: int32\n          description: Inframe mutation count\n        missenseCount:\n          type: integer\n          format: int32\n          description: Missense mutation count\n        residue:\n          type: string\n          description: Hotspot residue\n        spliceCount:\n          type: integer\n          format: int32\n          description: Splice mutation count\n        transcriptId:\n          type: string\n          description: Ensembl Transcript Id\n        truncatingCount:\n          type: integer\n          format: int32\n          description: Truncation mutation count\n        tumorCount:\n          type: integer\n          format: int32\n          description: Tumor count\n        type:\n          type: string\n          description: Hotspot type\n    HotspotAnnotation:\n      type: object\n      properties:\n        annotation:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Hotspot\"\n        license:\n          type: string\n    HrdScore:\n      type: object\n      properties:\n        fractionLoh:\n          type: number\n          format: double\n          description: Median HRD Fraction LOH\n        lst:\n          type: number\n          format: double\n          description: Median HRD LST\n        ntelomericAi:\n          type: number\n          format: double\n          description: Median HRD ntelomeric AI\n    Implication:\n      type: object\n      properties:\n        alterations:\n          type: array\n          items:\n            type: string\n        description:\n          type: string\n        levelOfEvidence:\n          type: string\n          enum:\n            - LEVEL_0\n            - LEVEL_1\n            - LEVEL_2\n            - LEVEL_2A\n            - LEVEL_2B\n            - LEVEL_3A\n            - LEVEL_3B\n            - LEVEL_4\n            - LEVEL_R1\n            - LEVEL_R2\n            - LEVEL_R3\n            - LEVEL_Px1\n            - LEVEL_Px2\n            - LEVEL_Px3\n            - LEVEL_Dx1\n            - LEVEL_Dx2\n            - LEVEL_Dx3\n            - NO\n        tumorType:\n          $ref: \"#/components/schemas/TumorType\"\n    IndicatorQueryResp:\n      type: object\n      properties:\n        alleleExist:\n          type: boolean\n          example: false\n        dataVersion:\n          type: string\n        diagnosticImplications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Implication\"\n        diagnosticSummary:\n          type: string\n        geneExist:\n          type: boolean\n          example: false\n        geneSummary:\n          type: string\n        highestDiagnosticImplicationLevel:\n          type: string\n          enum:\n            - LEVEL_0\n            - LEVEL_1\n            - LEVEL_2\n            - LEVEL_2A\n            - LEVEL_2B\n            - LEVEL_3A\n            - LEVEL_3B\n            - LEVEL_4\n            - LEVEL_R1\n            - LEVEL_R2\n            - LEVEL_R3\n            - LEVEL_Px1\n            - LEVEL_Px2\n            - LEVEL_Px3\n            - LEVEL_Dx1\n            - LEVEL_Dx2\n            - LEVEL_Dx3\n            - NO\n        highestPrognosticImplicationLevel:\n          type: string\n          enum:\n            - LEVEL_0\n            - LEVEL_1\n            - LEVEL_2\n            - LEVEL_2A\n            - LEVEL_2B\n            - LEVEL_3A\n            - LEVEL_3B\n            - LEVEL_4\n            - LEVEL_R1\n            - LEVEL_R2\n            - LEVEL_R3\n            - LEVEL_Px1\n            - LEVEL_Px2\n            - LEVEL_Px3\n            - LEVEL_Dx1\n            - LEVEL_Dx2\n            - LEVEL_Dx3\n            - NO\n        highestResistanceLevel:\n          type: string\n          enum:\n            - LEVEL_0\n            - LEVEL_1\n            - LEVEL_2\n            - LEVEL_2A\n            - LEVEL_2B\n            - LEVEL_3A\n            - LEVEL_3B\n            - LEVEL_4\n            - LEVEL_R1\n            - LEVEL_R2\n            - LEVEL_R3\n            - LEVEL_Px1\n            - LEVEL_Px2\n            - LEVEL_Px3\n            - LEVEL_Dx1\n            - LEVEL_Dx2\n            - LEVEL_Dx3\n            - NO\n        highestSensitiveLevel:\n          type: string\n          enum:\n            - LEVEL_0\n            - LEVEL_1\n            - LEVEL_2\n            - LEVEL_2A\n            - LEVEL_2B\n            - LEVEL_3A\n            - LEVEL_3B\n            - LEVEL_4\n            - LEVEL_R1\n            - LEVEL_R2\n            - LEVEL_R3\n            - LEVEL_Px1\n            - LEVEL_Px2\n            - LEVEL_Px3\n            - LEVEL_Dx1\n            - LEVEL_Dx2\n            - LEVEL_Dx3\n            - NO\n        hotspot:\n          type: boolean\n          example: false\n        lastUpdate:\n          type: string\n        mutationEffect:\n          $ref: \"#/components/schemas/MutationEffectResp\"\n        oncogenic:\n          type: string\n        otherSignificantResistanceLevels:\n          type: array\n          items:\n            type: string\n            enum:\n              - LEVEL_0\n              - LEVEL_1\n              - LEVEL_2\n              - LEVEL_2A\n              - LEVEL_2B\n              - LEVEL_3A\n              - LEVEL_3B\n              - LEVEL_4\n              - LEVEL_R1\n              - LEVEL_R2\n              - LEVEL_R3\n              - LEVEL_Px1\n              - LEVEL_Px2\n              - LEVEL_Px3\n              - LEVEL_Dx1\n              - LEVEL_Dx2\n              - LEVEL_Dx3\n              - NO\n        otherSignificantSensitiveLevels:\n          type: array\n          items:\n            type: string\n            enum:\n              - LEVEL_0\n              - LEVEL_1\n              - LEVEL_2\n              - LEVEL_2A\n              - LEVEL_2B\n              - LEVEL_3A\n              - LEVEL_3B\n              - LEVEL_4\n              - LEVEL_R1\n              - LEVEL_R2\n              - LEVEL_R3\n              - LEVEL_Px1\n              - LEVEL_Px2\n              - LEVEL_Px3\n              - LEVEL_Dx1\n              - LEVEL_Dx2\n              - LEVEL_Dx3\n              - NO\n        prognosticImplications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Implication\"\n        prognosticSummary:\n          type: string\n        query:\n          $ref: \"#/components/schemas/Query\"\n        treatments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/IndicatorQueryTreatment\"\n        tumorTypeSummary:\n          type: string\n        variantExist:\n          type: boolean\n          example: false\n        variantSummary:\n          type: string\n        vus:\n          type: boolean\n          example: false\n    IndicatorQueryTreatment:\n      type: object\n      properties:\n        abstracts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ArticleAbstract\"\n        alterations:\n          type: array\n          items:\n            type: string\n        approvedIndications:\n          type: array\n          items:\n            type: string\n        description:\n          type: string\n        drugs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Drug\"\n        fdaApproved:\n          type: boolean\n          example: false\n        level:\n          type: string\n          enum:\n            - LEVEL_0\n            - LEVEL_1\n            - LEVEL_2\n            - LEVEL_2A\n            - LEVEL_2B\n            - LEVEL_3A\n            - LEVEL_3B\n            - LEVEL_4\n            - LEVEL_R1\n            - LEVEL_R2\n            - LEVEL_R3\n            - LEVEL_Px1\n            - LEVEL_Px2\n            - LEVEL_Px3\n            - LEVEL_Dx1\n            - LEVEL_Dx2\n            - LEVEL_Dx3\n            - NO\n        levelAssociatedCancerType:\n          $ref: \"#/components/schemas/TumorType\"\n        pmids:\n          type: array\n          items:\n            type: string\n    IntegerRange:\n      type: object\n      properties:\n        end:\n          type: integer\n          format: int32\n        start:\n          type: integer\n          format: int32\n    IntergenicConsequences:\n      type: object\n      required:\n        - consequenceTerms\n        - impact\n        - variantAllele\n      properties:\n        impact:\n          type: string\n          description: impact\n        variantAllele:\n          type: string\n          description: variant_allele\n        consequenceTerms:\n          type: array\n          description: consequence_terms\n          items:\n            type: string\n    MainType:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        tumorForm:\n          type: string\n          enum:\n            - SOLID\n            - LIQUID\n      description: OncoTree Cancer Type\n    MutationAssessor:\n      type: object\n      required:\n        - input\n      properties:\n        codonStartPosition:\n          type: string\n          description: Codon start position\n        cosmicCount:\n          type: integer\n          format: int32\n          description: Number of mutations in COSMIC for this protein\n        functionalImpact:\n          type: string\n          description: Functional impact\n        functionalImpactScore:\n          type: number\n          format: double\n          description: Functional impact score\n        hgvs:\n          type: string\n        hugoSymbol:\n          type: string\n          description: Hugo gene symbol\n        input:\n          type: string\n          description: User-input variants\n        mappingIssue:\n          type: string\n          description: Mapping issue info\n        msaGaps:\n          type: number\n          format: double\n          description: Portion of gaps in variant position in multiple sequence alignment\n        msaHeight:\n          type: integer\n          format: int32\n          description: Number of diverse sequences in multiple sequence alignment\n            (identical or highly similar sequences filtered out)\n        msaLink:\n          type: string\n          description: Link to multiple sequence alignment\n        pdbLink:\n          type: string\n          description: Link to 3d structure browser\n        referenceGenomeVariant:\n          type: string\n          description: Reference genome variant\n        referenceGenomeVariantType:\n          type: string\n          description: Reference genome variant type\n        refseqId:\n          type: string\n          description: Refseq protein ID\n        refseqPosition:\n          type: integer\n          format: int32\n          description: Variant position in Refseq protein, can be different from the one in\n            Uniprot\n        refseqResidue:\n          type: string\n          description: Reference residue in Refseq protein, can be different from the one\n            in Uniprot\n        snpCount:\n          type: integer\n          format: int32\n          description: Number of SNPs in dbSNP for this protein\n        uniprotId:\n          type: string\n          description: Uniprot protein accession ID\n        uniprotPosition:\n          type: integer\n          format: int32\n          description: Variant position in Uniprot protein, can be different from the one\n            in Refseq\n        uniprotResidue:\n          type: string\n          description: Reference residue in Uniprot protein, can be different from the one\n            in Refseq\n        variant:\n          type: string\n          description: Amino acid substitution\n        variantConservationScore:\n          type: number\n          format: double\n          description: Variant conservation score\n        variantSpecificityScore:\n          type: number\n          format: double\n          description: Variant specificity score\n    MutationAssessorAnnotation:\n      type: object\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/MutationAssessor\"\n        license:\n          type: string\n    MutationEffectResp:\n      type: object\n      properties:\n        citations:\n          $ref: \"#/components/schemas/Citations\"\n        description:\n          type: string\n        knownEffect:\n          type: string\n    Mutdb:\n      type: object\n      properties:\n        alt:\n          type: string\n          description: alt\n        chrom:\n          type: string\n          description: chrom\n        cosmicId:\n          type: string\n          description: cosmic_id\n        hg19:\n          $ref: \"#/components/schemas/Hg19\"\n        mutpredScore:\n          type: number\n          format: double\n          description: mutpred_score\n        ref:\n          type: string\n          description: ref\n        rsid:\n          type: string\n          description: rsid\n        uniprotId:\n          type: string\n          description: uniprot_id\n    MyVariantInfo:\n      type: object\n      properties:\n        clinVar:\n          $ref: \"#/components/schemas/ClinVar\"\n        cosmic:\n          $ref: \"#/components/schemas/Cosmic\"\n        dbsnp:\n          $ref: \"#/components/schemas/Dbsnp\"\n        gnomadExome:\n          $ref: \"#/components/schemas/Gnomad\"\n        gnomadGenome:\n          $ref: \"#/components/schemas/Gnomad\"\n        hgvs:\n          type: string\n          description: hgvs\n        mutdb:\n          $ref: \"#/components/schemas/Mutdb\"\n        query:\n          type: string\n        snpeff:\n          $ref: \"#/components/schemas/Snpeff\"\n        variant:\n          type: string\n          description: variant\n        vcf:\n          $ref: \"#/components/schemas/Vcf\"\n        version:\n          type: integer\n          format: int32\n          description: version\n    MyVariantInfoAnnotation:\n      type: object\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/MyVariantInfo\"\n        license:\n          type: string\n    NucleotideContext:\n      type: object\n      required:\n        - seq\n      properties:\n        hgvs:\n          type: string\n        id:\n          type: string\n        molecule:\n          type: string\n        query:\n          type: string\n        seq:\n          type: string\n          description: Nucleotide context sequence\n    NucleotideContextAnnotation:\n      type: object\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/NucleotideContext\"\n        license:\n          type: string\n    OncokbAnnotation:\n      type: object\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/IndicatorQueryResp\"\n        license:\n          type: string\n    PdbHeader:\n      type: object\n      required:\n        - pdbId\n        - title\n      properties:\n        compound:\n          type: object\n        pdbId:\n          type: string\n          description: PDB id\n        source:\n          type: object\n        title:\n          type: string\n          description: PDB description\n    PfamDomain:\n      type: object\n      required:\n        - name\n        - pfamAccession\n      properties:\n        description:\n          type: string\n          description: PFAM domain description\n        name:\n          type: string\n          description: PFAM domain name\n        pfamAccession:\n          type: string\n          description: PFAM domain accession\n    PfamDomainRange:\n      type: object\n      required:\n        - pfamDomainEnd\n        - pfamDomainId\n        - pfamDomainStart\n      properties:\n        pfamDomainId:\n          type: string\n          description: Pfam domain id\n        pfamDomainStart:\n          type: integer\n          format: int32\n          description: Pfam domain start amino acid\n        pfamDomainEnd:\n          type: integer\n          format: int32\n          description: Pfam domain end amino acid\n    PostTranslationalModification:\n      type: object\n      properties:\n        ensemblTranscriptIds:\n          type: array\n          items:\n            type: string\n        position:\n          type: integer\n          format: int32\n        pubmedIds:\n          type: array\n          items:\n            type: string\n        sequence:\n          type: string\n        type:\n          type: string\n        uniprotAccession:\n          type: string\n        uniprotEntry:\n          type: string\n    PtmAnnotation:\n      type: object\n      properties:\n        annotation:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: \"#/components/schemas/PostTranslationalModification\"\n        license:\n          type: string\n    PtmFilter:\n      type: object\n      properties:\n        transcriptIds:\n          type: array\n          description: List of Ensembl transcript IDs. For example [\"ENST00000361390\",\n            \"ENST00000361453\", \"ENST00000361624\"]\n          items:\n            type: string\n    Query:\n      type: object\n      properties:\n        alteration:\n          type: string\n        alterationType:\n          type: string\n        consequence:\n          type: string\n        entrezGeneId:\n          type: integer\n          format: int32\n        hgvs:\n          type: string\n        hugoSymbol:\n          type: string\n        id:\n          type: string\n        proteinEnd:\n          type: integer\n          format: int32\n        proteinStart:\n          type: integer\n          format: int32\n        svType:\n          type: string\n          enum:\n            - DELETION\n            - TRANSLOCATION\n            - DUPLICATION\n            - INSERTION\n            - INVERSION\n            - FUSION\n            - UNKNOWN\n        tumorType:\n          type: string\n        type:\n          type: string\n    Rcv:\n      type: object\n      properties:\n        accession:\n          type: string\n          description: accession\n        clinicalSignificance:\n          type: string\n          description: clinical_significance\n        origin:\n          type: string\n          description: origin\n        preferredName:\n          type: string\n          description: preferred_name\n    SignalAnnotation:\n      type: object\n      properties:\n        annotation:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SignalMutation\"\n        license:\n          type: string\n    SignalMutation:\n      type: object\n      properties:\n        biallelicCountsByTumorType:\n          type: array\n          description: Biallelic Counts by Tumor Type\n          items:\n            $ref: \"#/components/schemas/CountByTumorType\"\n        chromosome:\n          type: string\n          description: Chromosome\n        countsByTumorType:\n          type: array\n          description: Counts by Tumor Type\n          items:\n            $ref: \"#/components/schemas/CountByTumorType\"\n        endPosition:\n          type: integer\n          format: int64\n          description: End Position\n        generalPopulationStats:\n          $ref: \"#/components/schemas/GeneralPopulationStats\"\n        hugoGeneSymbol:\n          type: string\n          description: Hugo Gene Symbol\n        mskExperReview:\n          type: boolean\n          example: false\n          description: Msk Expert Review\n        mutationStatus:\n          type: string\n          description: Mutation Status\n        overallNumberOfGermlineHomozygous:\n          type: integer\n          format: int32\n        pathogenic:\n          type: string\n          description: Pathogenic\n        penetrance:\n          type: string\n          description: Penetrance\n        qcPassCountsByTumorType:\n          type: array\n          description: QC Pass Counts by Tumor Type\n          items:\n            $ref: \"#/components/schemas/CountByTumorType\"\n        referenceAllele:\n          type: string\n          description: Reference Allele\n        startPosition:\n          type: integer\n          format: int64\n          description: Start Position\n        statsByTumorType:\n          type: array\n          description: Stats By Tumor Type\n          items:\n            $ref: \"#/components/schemas/StatsByTumorType\"\n        variantAllele:\n          type: string\n          description: Variant Allele\n    SignalPopulationStats:\n      type: object\n      properties:\n        afr:\n          type: number\n          format: double\n          description: African/African American\n        asj:\n          type: number\n          format: double\n          description: Ashkenazi Jewish\n        asn:\n          type: number\n          format: double\n          description: Asian\n        eur:\n          type: number\n          format: double\n          description: European\n        impact:\n          type: number\n          format: double\n          description: Impact\n        oth:\n          type: number\n          format: double\n          description: Other\n    Snpeff:\n      type: object\n      properties:\n        license:\n          type: string\n          description: license\n    StatsByTumorType:\n      type: object\n      properties:\n        ageAtDx:\n          type: integer\n          format: int32\n          description: Median Age at Dx\n        fBiallelic:\n          type: number\n          format: double\n          description: Frequency Of Biallelic\n        fCancerTypeCount:\n          type: number\n          format: double\n          description: Frequency Of Cancer Type Count\n        hrdScore:\n          $ref: \"#/components/schemas/HrdScore\"\n        msiScore:\n          type: number\n          format: double\n          description: Msi Score\n        nCancerTypeCount:\n          type: integer\n          format: int32\n          description: Number Of Cancer Type Count\n        numberOfGermlineHomozygous:\n          type: integer\n          format: int32\n          description: Number Of Germline Homozygous Per Tumor Type\n        numberWithSig:\n          type: integer\n          format: int32\n          description: Number of Variants with Signature\n        tmb:\n          type: number\n          format: double\n          description: Median TMB\n        tumorType:\n          type: string\n          description: Tumor Type\n    TranscriptConsequence:\n      type: object\n      required:\n        - transcript_id\n      properties:\n        amino_acids:\n          type: string\n          description: Amino acids\n        canonical:\n          type: string\n          description: Canonical transcript indicator\n        codons:\n          type: string\n          description: Codons\n        consequence_terms:\n          type: array\n          description: List of consequence terms\n          items:\n            type: string\n        exon:\n          type: string\n        gene_id:\n          type: string\n          description: Ensembl gene id\n        gene_symbol:\n          type: string\n          description: Hugo gene symbol\n        hgnc_id:\n          type: string\n          description: HGNC id\n        hgvsc:\n          type: string\n          description: HGVSc\n        hgvsg:\n          type: string\n          description: HGVSg\n        hgvsp:\n          type: string\n          description: HGVSp\n        polyphen_prediction:\n          type: string\n          description: Polyphen Prediction\n        polyphen_score:\n          type: number\n          format: double\n          description: Polyphen Score\n        protein_end:\n          type: integer\n          format: int32\n          description: Protein end position\n        protein_id:\n          type: string\n          description: Ensembl protein id\n        protein_start:\n          type: integer\n          format: int32\n          description: Protein start position\n        refseq_transcript_ids:\n          type: array\n          description: List of RefSeq transcript ids\n          items:\n            type: string\n        sift_prediction:\n          type: string\n          description: Sift Prediction\n        sift_score:\n          type: number\n          format: double\n          description: Sift Score\n        transcript_id:\n          type: string\n          description: Ensembl transcript id\n        uniprotId:\n          type: string\n        variant_allele:\n          type: string\n          description: Variant allele\n    TranscriptConsequenceSummary:\n      type: object\n      required:\n        - transcriptId\n      properties:\n        aminoAcidAlt:\n          type: string\n          description: Alt Amino Acid\n        aminoAcidRef:\n          type: string\n          description: Reference Amino Acid\n        aminoAcids:\n          type: string\n          description: Amino acids change\n        codonChange:\n          type: string\n          description: Codon change\n        consequenceTerms:\n          type: string\n          description: Consequence terms (comma separated)\n        entrezGeneId:\n          type: string\n          description: Entrez gene id\n        exon:\n          type: string\n        hgvsc:\n          type: string\n          description: HGVSc\n        hgvsp:\n          type: string\n          description: HGVSp\n        hgvspShort:\n          type: string\n          description: HGVSp short\n        hugoGeneSymbol:\n          type: string\n          description: Hugo gene symbol\n        polyphenPrediction:\n          type: string\n          description: Polyphen Prediction\n        polyphenScore:\n          type: number\n          format: double\n          description: Polyphen Score\n        proteinPosition:\n          $ref: \"#/components/schemas/IntegerRange\"\n        refSeq:\n          type: string\n          description: RefSeq id\n        siftPrediction:\n          type: string\n          description: Sift Prediction\n        siftScore:\n          type: number\n          format: double\n          description: Sift Score\n        transcriptId:\n          type: string\n          description: Transcript id\n        uniprotId:\n          type: string\n          description: Uniprot ID\n        variantClassification:\n          type: string\n          description: Variant classification\n    TumorType:\n      type: object\n      properties:\n        children:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/TumorType\"\n        code:\n          type: string\n        color:\n          type: string\n        id:\n          type: integer\n          format: int32\n        level:\n          type: integer\n          format: int32\n        mainType:\n          $ref: \"#/components/schemas/MainType\"\n        name:\n          type: string\n        parent:\n          type: string\n        tissue:\n          type: string\n        tumorForm:\n          type: string\n          enum:\n            - SOLID\n            - LIQUID\n      description: OncoTree Detailed Cancer Type\n    UntranslatedRegion:\n      type: object\n      required:\n        - end\n        - start\n        - strand\n        - type\n      properties:\n        type:\n          type: string\n          description: UTR Type\n        start:\n          type: integer\n          format: int32\n          description: Start position of UTR\n        end:\n          type: integer\n          format: int32\n          description: End position of UTR\n        strand:\n          type: integer\n          format: int32\n          description: Strand UTR is on, -1 for - and 1 for +\n    VariantAnnotation:\n      type: object\n      required:\n        - id\n        - intergenic_consequences\n        - originalVariantQuery\n        - variant\n      properties:\n        allele_string:\n          type: string\n          description: \"Allele string (e.g: A/T)\"\n        annotationJSON:\n          type: string\n          description: Annotation data as JSON string\n        annotation_summary:\n          $ref: \"#/components/schemas/VariantAnnotationSummary\"\n        assembly_name:\n          type: string\n          description: NCBI build number\n        clinvar:\n          $ref: \"#/components/schemas/ClinvarAnnotation\"\n        colocatedVariants:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ColocatedVariant\"\n        end:\n          type: integer\n          format: int32\n          description: End position\n        hgvsg:\n          type: string\n        hotspots:\n          $ref: \"#/components/schemas/HotspotAnnotation\"\n        id:\n          type: string\n          description: Variant id\n        intergenic_consequences:\n          type: array\n          description: intergenicConsequences\n          items:\n            $ref: \"#/components/schemas/IntergenicConsequences\"\n        most_severe_consequence:\n          type: string\n          description: Most severe consequence\n        mutation_assessor:\n          $ref: \"#/components/schemas/MutationAssessorAnnotation\"\n        my_variant_info:\n          $ref: \"#/components/schemas/MyVariantInfoAnnotation\"\n        nucleotide_context:\n          $ref: \"#/components/schemas/NucleotideContextAnnotation\"\n        oncokb:\n          $ref: \"#/components/schemas/OncokbAnnotation\"\n        originalVariantQuery:\n          type: string\n          description: Original variant query\n        ptms:\n          $ref: \"#/components/schemas/PtmAnnotation\"\n        seq_region_name:\n          type: string\n          description: Chromosome\n        signalAnnotation:\n          $ref: \"#/components/schemas/SignalAnnotation\"\n        start:\n          type: integer\n          format: int32\n          description: Start position\n        strand:\n          type: integer\n          format: int32\n          description: Strand (negative or positive)\n        successfully_annotated:\n          type: boolean\n          example: false\n          description: Status flag indicating whether variant was succesfully annotated\n        transcript_consequences:\n          type: array\n          description: List of transcripts\n          items:\n            $ref: \"#/components/schemas/TranscriptConsequence\"\n        variant:\n          type: string\n          description: Variant key\n    VariantAnnotationSummary:\n      type: object\n      required:\n        - transcriptConsequenceSummaries\n        - transcriptConsequenceSummary\n        - transcriptConsequences\n        - variant\n      properties:\n        assemblyName:\n          type: string\n          description: Assembly name\n        canonicalTranscriptId:\n          type: string\n          description: Canonical transcript id\n        genomicLocation:\n          $ref: \"#/components/schemas/GenomicLocation\"\n        strandSign:\n          type: string\n          description: Strand (- or +)\n        transcriptConsequenceSummaries:\n          type: array\n          description: All transcript consequence summaries\n          items:\n            $ref: \"#/components/schemas/TranscriptConsequenceSummary\"\n        transcriptConsequenceSummary:\n          $ref: \"#/components/schemas/TranscriptConsequenceSummary\"\n        transcriptConsequences:\n          type: array\n          description: (Deprecated) Transcript consequence summaries (list of one when\n            using annotation/, multiple when using annotation/summary/\n          items:\n            $ref: \"#/components/schemas/TranscriptConsequenceSummary\"\n        variant:\n          type: string\n          description: Variant key\n        variantType:\n          type: string\n          description: Variant type\n    Vcf:\n      type: object\n      properties:\n        alt:\n          type: string\n          description: alt\n        position:\n          type: string\n          description: position\n        ref:\n          type: string\n          description: ref\n    Version:\n      type: object\n      properties:\n        version:\n          type: string\n  requestBodies:\n    fetchCanonicalEnsemblGeneIdByHugoSymbolsPOSTHugosymbols:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n      description: List of Hugo Symbols. For example [\"TP53\",\"PIK3CA\",\"BRCA1\"]\n      required: true",
			"canonicalURL": "/github.com/codingsoo/REST_Go@ed67007a3d9cc852de4c47d395991f602a381c67/-/blob/services/genome-nexus/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codingsoo/REST_Go/blob/ed67007a3d9cc852de4c47d395991f602a381c67/services/genome-nexus/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"OncokbAnnotation\": parse schema: property \"annotation\": at 1:21498: parse schema: resolve \"#/components/schemas/IndicatorQueryResp\": parse schema: property \"diagnosticImplications\": at 1:13321: parse schema: item: at 1:13330: parse schema: resolve \"#/components/schemas/Implication\": parse schema: property \"levelOfEvidence\": at 1:12885: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}