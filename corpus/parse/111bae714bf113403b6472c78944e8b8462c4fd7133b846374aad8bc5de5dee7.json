{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/web3j/web3j-corda"
		},
		"file": {
			"name": "corda-api.json",
			"size": 0,
			"path": "common/src/main/resources/corda-api.json",
			"byteSize": 133068,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"\",\n    \"description\": \"\",\n    \"contact\": {},\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:8080/api/rest\"\n    }\n  ],\n  \"paths\": {\n    \"/network/nodes\": {\n      \"get\": {\n        \"tags\": [\n          \"network\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"host-and-port\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"x500-name\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/io.bluebank.braid.corda.services.SimpleNodeInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/network/nodes/self\": {\n      \"get\": {\n        \"tags\": [\n          \"network\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.bluebank.braid.corda.services.SimpleNodeInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/network/notaries\": {\n      \"get\": {\n        \"tags\": [\n          \"network\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"x500-name\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/vault/vaultQuery\": {\n      \"get\": {\n        \"tags\": [\n          \"vault\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"contract-state-type\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Java class name\",\n              \"example\": \"java.lang.Object\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_Page_net_corda_core_contracts_ContractState\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/vault/vaultQueryBy\": {\n      \"post\": {\n        \"tags\": [\n          \"vault\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"vault\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/io.bluebank.braid.corda.services.vault.VaultQuery\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_Page_net_corda_core_contracts_ContractState\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps\": {\n      \"get\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps/{cordapp}/flows\": {\n      \"get\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [\n          {\n            \"name\": \"cordapp\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Authorise\": {\n      \"post\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"payload\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/generated.net.corda.core.flows.ContractUpgradeFlow_AuthorisePayload\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"empty response\"\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps/corda-core/flows/net.corda.core.flows.ContractUpgradeFlow$Deauthorise\": {\n      \"post\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"payload\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/generated.net.corda.core.flows.ContractUpgradeFlow_DeauthorisePayload\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"empty response\"\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashExitFlow\": {\n      \"post\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"payload\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/generated.net.corda.finance.flows.CashExitFlowPayload\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueAndPaymentFlow\": {\n      \"post\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"payload\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/generated.net.corda.finance.flows.CashIssueAndPaymentFlowPayload\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashIssueFlow\": {\n      \"post\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"payload\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/generated.net.corda.finance.flows.CashIssueFlowPayload\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps/corda-finance-workflows/flows/net.corda.finance.flows.CashPaymentFlow\": {\n      \"post\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"payload\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/generated.net.corda.finance.flows.CashPaymentFlowPayload\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/net.corda.finance.flows.AbstractCashFlow_Result\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cordapps/corda-finance-workflows/flows/net.corda.finance.internal.CashConfigDataFlow\": {\n      \"post\": {\n        \"tags\": [\n          \"cordapps\"\n        ],\n        \"description\": \"\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"payload\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/generated.net.corda.finance.internal.CashConfigDataFlowPayload\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/net.corda.finance.internal.CashConfiguration\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"the server failed to parse the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"the request could not be processed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Error\": {\n        \"required\": [\n          \"message\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"the error message\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"the type of error\"\n          }\n        }\n      },\n      \"io.bluebank.braid.corda.services.SimpleNodeInfo\": {\n        \"required\": [\n          \"addresses\",\n          \"legalIdentities\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"addresses\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.utilities.NetworkHostAndPort\"\n            }\n          },\n          \"legalIdentities\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.identity.AbstractParty\": {\n        \"required\": [\n          \"owningKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"owningKey\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Public Key\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.core.identity.Party\": {\n        \"required\": [\n          \"name\",\n          \"owningKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"CordaX500Name encoded Party\",\n            \"example\": \"O=Bank A, L=London, C=GB\"\n          },\n          \"owningKey\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Public Key\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.core.utilities.NetworkHostAndPort\": {\n        \"required\": [\n          \"host\",\n          \"port\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"host\": {\n            \"type\": \"string\"\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"io.bluebank.braid.corda.serialisation.mixin.ContractStateMixin\": {\n        \"type\": \"object\"\n      },\n      \"io.bluebank.braid.corda.serialisation.mixin.TransactionStateMixin\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.ContractState\"\n          },\n          \"constraint\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.AttachmentConstraint\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.AttachmentConstraint\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.contracts.ContractState\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.contracts.StateAndRef_net_corda_core_contracts_ContractState\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"state\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.TransactionState_net_corda_core_contracts_ContractState\"\n          },\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.StateRef\": {\n        \"required\": [\n          \"index\",\n          \"txhash\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"txhash\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"index\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.TransactionState_net_corda_core_contracts_ContractState\": {\n        \"required\": [\n          \"contract\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.ContractState\"\n          },\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"encumbrance\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"constraint\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.AttachmentConstraint\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.Vault_ConstraintInfo\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"constraint\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.AttachmentConstraint\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.Vault_Page_net_corda_core_contracts_ContractState\": {\n        \"required\": [\n          \"otherResults\",\n          \"stateTypes\",\n          \"states\",\n          \"statesMetadata\",\n          \"totalStatesAvailable\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"states\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateAndRef_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"statesMetadata\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_StateMetadata\"\n            }\n          },\n          \"totalStatesAvailable\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"stateTypes\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"UNCONSUMED\",\n              \"CONSUMED\",\n              \"ALL\"\n            ]\n          },\n          \"otherResults\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.node.services.Vault_StateMetadata\": {\n        \"required\": [\n          \"contractStateClassName\",\n          \"recordedTime\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n          },\n          \"contractStateClassName\": {\n            \"type\": \"string\"\n          },\n          \"recordedTime\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"consumedTime\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"UNCONSUMED\",\n              \"CONSUMED\",\n              \"ALL\"\n            ]\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n          },\n          \"lockId\": {\n            \"type\": \"string\"\n          },\n          \"lockUpdateTime\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"relevancyStatus\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"RELEVANT\",\n              \"NOT_RELEVANT\",\n              \"ALL\"\n            ]\n          },\n          \"constraintInfo\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo\"\n          }\n        }\n      },\n      \"io.bluebank.braid.corda.serialisation.mixin.PageSpecificationMixin\": {\n        \"type\": \"object\"\n      },\n      \"io.bluebank.braid.corda.services.vault.VaultQuery\": {\n        \"required\": [\n          \"contractStateType\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"criteria\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n          },\n          \"paging\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.PageSpecification\"\n          },\n          \"sorting\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.Sort\"\n          },\n          \"contractStateType\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"example\": \"java.lang.Object\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.BaseSort\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"@class\",\n          \"mapping\": {\n            \".ColumnPredicate$AggregateFunction\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_AggregateFunction\",\n            \".ColumnPredicate$Between\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Between\",\n            \".ColumnPredicate$BinaryComparison\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_BinaryComparison\",\n            \".ColumnPredicate$CollectionExpression\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_CollectionExpression\",\n            \".ColumnPredicate$EqualityComparison\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_EqualityComparison\",\n            \".ColumnPredicate$NullExpression\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_NullExpression\",\n            \".ColumnPredicate$Likeness\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Likeness\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_AggregateFunction\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"COUNT\",\n                  \"AVG\",\n                  \"MIN\",\n                  \"MAX\",\n                  \"SUM\"\n                ]\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_Between\": {\n        \"required\": [\n          \"rightFromLiteral\",\n          \"rightToLiteral\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rightToLiteral\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_BinaryComparison\": {\n        \"required\": [\n          \"operator\",\n          \"rightLiteral\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"operator\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"LESS_THAN\",\n                  \"LESS_THAN_OR_EQUAL\",\n                  \"GREATER_THAN\",\n                  \"GREATER_THAN_OR_EQUAL\"\n                ]\n              },\n              \"rightLiteral\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_CollectionExpression\": {\n        \"required\": [\n          \"operator\",\n          \"rightLiteral\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"operator\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"IN\",\n                  \"NOT_IN\",\n                  \"IN_IGNORE_CASE\",\n                  \"NOT_IN_IGNORE_CASE\"\n                ]\n              },\n              \"rightLiteral\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_EqualityComparison\": {\n        \"required\": [\n          \"operator\",\n          \"rightLiteral\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"operator\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"EQUAL\",\n                  \"NOT_EQUAL\",\n                  \"EQUAL_IGNORE_CASE\",\n                  \"NOT_EQUAL_IGNORE_CASE\"\n                ]\n              },\n              \"rightLiteral\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_Instant\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"@class\",\n          \"mapping\": {\n            \".ColumnPredicate$AggregateFunction\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_AggregateFunction\",\n            \".ColumnPredicate$Between\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Between\",\n            \".ColumnPredicate$BinaryComparison\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_BinaryComparison\",\n            \".ColumnPredicate$CollectionExpression\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_CollectionExpression\",\n            \".ColumnPredicate$EqualityComparison\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_EqualityComparison\",\n            \".ColumnPredicate$NullExpression\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_NullExpression\",\n            \".ColumnPredicate$Likeness\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Likeness\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_Likeness\": {\n        \"required\": [\n          \"operator\",\n          \"rightLiteral\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"operator\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"LIKE\",\n                  \"NOT_LIKE\",\n                  \"LIKE_IGNORE_CASE\",\n                  \"NOT_LIKE_IGNORE_CASE\"\n                ]\n              },\n              \"rightLiteral\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_Long\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"@class\",\n          \"mapping\": {\n            \".ColumnPredicate$AggregateFunction\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_AggregateFunction\",\n            \".ColumnPredicate$Between\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Between\",\n            \".ColumnPredicate$BinaryComparison\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_BinaryComparison\",\n            \".ColumnPredicate$CollectionExpression\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_CollectionExpression\",\n            \".ColumnPredicate$EqualityComparison\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_EqualityComparison\",\n            \".ColumnPredicate$NullExpression\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_NullExpression\",\n            \".ColumnPredicate$Likeness\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Likeness\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_NullExpression\": {\n        \"required\": [\n          \"operator\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"operator\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"IS_NULL\",\n                  \"NOT_NULL\"\n                ]\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_Object\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"@class\",\n          \"mapping\": {\n            \".ColumnPredicate$AggregateFunction\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_AggregateFunction\",\n            \".ColumnPredicate$Between\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Between\",\n            \".ColumnPredicate$BinaryComparison\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_BinaryComparison\",\n            \".ColumnPredicate$CollectionExpression\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_CollectionExpression\",\n            \".ColumnPredicate$EqualityComparison\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_EqualityComparison\",\n            \".ColumnPredicate$NullExpression\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_NullExpression\",\n            \".ColumnPredicate$Likeness\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Likeness\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.Column_Object_Object\": {\n        \"required\": [\n          \"declaringClass\",\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"declaringClass\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"example\": \"java.lang.Object\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.CriteriaExpression\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"@class\",\n          \"mapping\": {\n            \".CriteriaExpression$AggregateFunctionExpression\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_AggregateFunctionExpression\",\n            \".CriteriaExpression$BinaryLogical\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_BinaryLogical\",\n            \".CriteriaExpression$ColumnPredicateExpression\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_ColumnPredicateExpression\",\n            \".CriteriaExpression$Not\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_Not\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.CriteriaExpression_AggregateFunctionExpression\": {\n        \"required\": [\n          \"column\",\n          \"predicate\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_net_corda_core_schemas_StatePersistable_Boolean\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"column\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.Column_Object_Object\"\n              },\n              \"predicate\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n              },\n              \"groupByColumns\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.Column_Object_Object\"\n                }\n              },\n              \"orderBy\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"ASC\",\n                  \"DESC\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.CriteriaExpression_BinaryLogical\": {\n        \"required\": [\n          \"left\",\n          \"operator\",\n          \"right\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_Object_Boolean\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"left\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_Object_Boolean\"\n              },\n              \"right\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_Object_Boolean\"\n              },\n              \"operator\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"AND\",\n                  \"OR\"\n                ]\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_net_corda_core_schemas_StatePersistable_Boolean\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.CriteriaExpression_ColumnPredicateExpression\": {\n        \"required\": [\n          \"column\",\n          \"predicate\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"column\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.Column_Object_Object\"\n              },\n              \"predicate\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Object\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_Object_Boolean\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_net_corda_core_schemas_StatePersistable_Boolean\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.CriteriaExpression_Not\": {\n        \"required\": [\n          \"expression\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"expression\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_Object_Boolean\"\n              }\n            }\n          },\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_net_corda_core_schemas_StatePersistable_Boolean\"\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.CriteriaExpression_Object_Boolean\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"@class\",\n          \"mapping\": {\n            \".CriteriaExpression$AggregateFunctionExpression\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_AggregateFunctionExpression\",\n            \".CriteriaExpression$BinaryLogical\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_BinaryLogical\",\n            \".CriteriaExpression$ColumnPredicateExpression\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_ColumnPredicateExpression\",\n            \".CriteriaExpression$Not\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_Not\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.CriteriaExpression_net_corda_core_schemas_StatePersistable_Boolean\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"@class\",\n          \"mapping\": {\n            \".CriteriaExpression$AggregateFunctionExpression\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_AggregateFunctionExpression\",\n            \".CriteriaExpression$BinaryLogical\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_BinaryLogical\",\n            \".CriteriaExpression$ColumnPredicateExpression\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_ColumnPredicateExpression\",\n            \".CriteriaExpression$Not\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_Not\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.PageSpecification\": {\n        \"required\": [\n          \"pageNumber\",\n          \"pageSize\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"pageNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"@class\",\n          \"mapping\": {\n            \".QueryCriteria$VaultQueryCriteria\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_VaultQueryCriteria\",\n            \".QueryCriteria$VaultCustomQueryCriteria\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_VaultCustomQueryCriteria\",\n            \".QueryCriteria$CommonQueryCriteria\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_CommonQueryCriteria\",\n            \".QueryCriteria$LinearStateQueryCriteria\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_LinearStateQueryCriteria\",\n            \".QueryCriteria$FungibleAssetQueryCriteria\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_FungibleAssetQueryCriteria\",\n            \".QueryCriteria$AndComposition\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_AndComposition\",\n            \".QueryCriteria$OrComposition\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_OrComposition\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_AndComposition\": {\n        \"required\": [\n          \"a\",\n          \"b\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"a\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n              },\n              \"b\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n              }\n            }\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_CommonQueryCriteria\": {\n        \"required\": [\n          \"constraintTypes\",\n          \"constraints\",\n          \"relevancyStatus\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"relevancyStatus\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"RELEVANT\",\n              \"NOT_RELEVANT\",\n              \"ALL\"\n            ]\n          },\n          \"constraintTypes\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ALWAYS_ACCEPT\",\n                \"HASH\",\n                \"CZ_WHITELISTED\",\n                \"SIGNATURE\"\n              ]\n            }\n          },\n          \"constraints\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo\"\n            }\n          },\n          \"participants\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"UNCONSUMED\",\n              \"CONSUMED\",\n              \"ALL\"\n            ]\n          },\n          \"contractStateTypes\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Java class name\",\n              \"example\": \"java.lang.Object\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_FungibleAssetQueryCriteria\": {\n        \"required\": [\n          \"constraintTypes\",\n          \"constraints\",\n          \"relevancyStatus\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"participants\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n                }\n              },\n              \"owner\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n                }\n              },\n              \"quantity\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n              },\n              \"issuer\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n                }\n              },\n              \"issuerRef\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n                }\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"UNCONSUMED\",\n                  \"CONSUMED\",\n                  \"ALL\"\n                ]\n              },\n              \"contractStateTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Java class name\",\n                  \"example\": \"java.lang.Object\"\n                }\n              },\n              \"relevancyStatus\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"RELEVANT\",\n                  \"NOT_RELEVANT\",\n                  \"ALL\"\n                ]\n              },\n              \"constraintTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ALWAYS_ACCEPT\",\n                    \"HASH\",\n                    \"CZ_WHITELISTED\",\n                    \"SIGNATURE\"\n                  ]\n                }\n              },\n              \"constraints\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_FungibleStateQueryCriteria\": {\n        \"required\": [\n          \"constraintTypes\",\n          \"constraints\",\n          \"relevancyStatus\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"participants\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n                }\n              },\n              \"quantity\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Long\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"UNCONSUMED\",\n                  \"CONSUMED\",\n                  \"ALL\"\n                ]\n              },\n              \"contractStateTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Java class name\",\n                  \"example\": \"java.lang.Object\"\n                }\n              },\n              \"relevancyStatus\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"RELEVANT\",\n                  \"NOT_RELEVANT\",\n                  \"ALL\"\n                ]\n              },\n              \"constraintTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ALWAYS_ACCEPT\",\n                    \"HASH\",\n                    \"CZ_WHITELISTED\",\n                    \"SIGNATURE\"\n                  ]\n                }\n              },\n              \"constraints\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_LinearStateQueryCriteria\": {\n        \"required\": [\n          \"constraintTypes\",\n          \"constraints\",\n          \"relevancyStatus\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"participants\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n                }\n              },\n              \"uuid\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"format\": \"uuid\"\n                }\n              },\n              \"externalId\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"UNCONSUMED\",\n                  \"CONSUMED\",\n                  \"ALL\"\n                ]\n              },\n              \"contractStateTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Java class name\",\n                  \"example\": \"java.lang.Object\"\n                }\n              },\n              \"relevancyStatus\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"RELEVANT\",\n                  \"NOT_RELEVANT\",\n                  \"ALL\"\n                ]\n              },\n              \"constraintTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ALWAYS_ACCEPT\",\n                    \"HASH\",\n                    \"CZ_WHITELISTED\",\n                    \"SIGNATURE\"\n                  ]\n                }\n              },\n              \"constraints\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_OrComposition\": {\n        \"required\": [\n          \"a\",\n          \"b\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"a\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n              },\n              \"b\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n              }\n            }\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_SoftLockingCondition\": {\n        \"required\": [\n          \"lockIds\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"UNLOCKED_ONLY\",\n              \"LOCKED_ONLY\",\n              \"SPECIFIED\",\n              \"UNLOCKED_AND_SPECIFIED\"\n            ]\n          },\n          \"lockIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_TimeCondition\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"RECORDED\",\n              \"CONSUMED\"\n            ]\n          },\n          \"predicate\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_VaultCustomQueryCriteria\": {\n        \"required\": [\n          \"constraintTypes\",\n          \"constraints\",\n          \"expression\",\n          \"relevancyStatus\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"expression\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.CriteriaExpression_net_corda_core_schemas_StatePersistable_Boolean\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"UNCONSUMED\",\n                  \"CONSUMED\",\n                  \"ALL\"\n                ]\n              },\n              \"contractStateTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Java class name\",\n                  \"example\": \"java.lang.Object\"\n                }\n              },\n              \"relevancyStatus\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"RELEVANT\",\n                  \"NOT_RELEVANT\",\n                  \"ALL\"\n                ]\n              },\n              \"constraintTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ALWAYS_ACCEPT\",\n                    \"HASH\",\n                    \"CZ_WHITELISTED\",\n                    \"SIGNATURE\"\n                  ]\n                }\n              },\n              \"constraints\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo\"\n                }\n              },\n              \"participants\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.QueryCriteria_VaultQueryCriteria\": {\n        \"required\": [\n          \"constraintTypes\",\n          \"constraints\",\n          \"relevancyStatus\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"status\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"UNCONSUMED\",\n                  \"CONSUMED\",\n                  \"ALL\"\n                ]\n              },\n              \"contractStateTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Java class name\",\n                  \"example\": \"java.lang.Object\"\n                }\n              },\n              \"stateRefs\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n                }\n              },\n              \"notary\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n                }\n              },\n              \"softLockingCondition\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_SoftLockingCondition\"\n              },\n              \"timeCondition\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.QueryCriteria_TimeCondition\"\n              },\n              \"relevancyStatus\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"RELEVANT\",\n                  \"NOT_RELEVANT\",\n                  \"ALL\"\n                ]\n              },\n              \"constraintTypes\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ALWAYS_ACCEPT\",\n                    \"HASH\",\n                    \"CZ_WHITELISTED\",\n                    \"SIGNATURE\"\n                  ]\n                }\n              },\n              \"constraints\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_ConstraintInfo\"\n                }\n              },\n              \"participants\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"net.corda.core.node.services.vault.Sort\": {\n        \"required\": [\n          \"columns\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"columns\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.Sort_SortColumn\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.SortAttribute\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.Sort_SortColumn\": {\n        \"required\": [\n          \"direction\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"sortAttribute\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.SortAttribute\"\n          },\n          \"direction\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ASC\",\n              \"DESC\"\n            ]\n          }\n        }\n      },\n      \"net.corda.core.utilities.ByteSequence\": {\n        \"required\": [\n          \"bytes\",\n          \"offset\",\n          \"size\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"_bytes\": {\n            \"type\": \"string\",\n            \"format\": \"binary\",\n            \"writeOnly\": true\n          },\n          \"offset\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bytes\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      },\n      \"net.corda.core.utilities.OpaqueBytes\": {\n        \"required\": [\n          \"bytes\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bytes\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      },\n      \"generated.net.corda.core.flows.ContractUpgradeFlow_AuthorisePayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"stateAndRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateAndRef_Object\"\n          },\n          \"upgradedContractClass\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"example\": \"java.lang.Object\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.StateAndRef_Object\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"state\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.TransactionState_Object\"\n          },\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.TransactionState_Object\": {\n        \"required\": [\n          \"contract\",\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"encumbrance\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"constraint\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.AttachmentConstraint\"\n          }\n        }\n      },\n      \"generated.net.corda.core.flows.ContractUpgradeFlow_DeauthorisePayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"stateRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n          }\n        }\n      },\n      \"io.bluebank.braid.corda.serialisation.mixin.OpaqueBytesMixin\": {\n        \"type\": \"object\"\n      },\n      \"io.bluebank.braid.corda.serialisation.mixin.SerializedBytesMixin\": {\n        \"type\": \"object\"\n      },\n      \"io.bluebank.braid.corda.serialisation.mixin.SignedTransactionMixin\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"txBits\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.serialization.SerializedBytes_net_corda_core_transactions_CoreTransaction\"\n          },\n          \"sigs\": {\n            \"type\": \"array\",\n            \"writeOnly\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.crypto.TransactionSignature\"\n            }\n          },\n          \"cachedTransaction\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.transactions.CoreTransaction\"\n          }\n        }\n      },\n      \"io.bluebank.braid.corda.serialisation.mixin.TimeWindowMixin\": {\n        \"type\": \"object\"\n      },\n      \"io.bluebank.braid.corda.serialisation.mixin.WireTransactionMixin\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.contracts.Command_Object\": {\n        \"required\": [\n          \"signers\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"object\"\n          },\n          \"signers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Public Key\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.contracts.PrivacySalt\": {\n        \"required\": [\n          \"bytes\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bytes\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.TimeWindow\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fromTime\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"untilTime\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"midpoint\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          }\n        }\n      },\n      \"net.corda.core.crypto.DigitalSignature\": {\n        \"required\": [\n          \"bytes\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bytes\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      },\n      \"net.corda.core.crypto.PartialMerkleTree\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"root\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.crypto.PartialMerkleTree_PartialTree\"\n          }\n        }\n      },\n      \"net.corda.core.crypto.PartialMerkleTree_PartialTree\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.crypto.SignatureMetadata\": {\n        \"required\": [\n          \"platformVersion\",\n          \"schemeNumberID\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"platformVersion\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"schemeNumberID\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"net.corda.core.crypto.TransactionSignature\": {\n        \"required\": [\n          \"by\",\n          \"bytes\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bytes\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          },\n          \"by\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Public Key\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"signatureMetadata\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.crypto.SignatureMetadata\"\n          },\n          \"partialMerkleTree\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.crypto.PartialMerkleTree\"\n          }\n        }\n      },\n      \"net.corda.core.serialization.SerializedBytes_net_corda_core_transactions_CoreTransaction\": {\n        \"required\": [\n          \"bytes\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"bytes\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      },\n      \"net.corda.core.transactions.BaseTransaction\": {\n        \"required\": [\n          \"id\",\n          \"inputs\",\n          \"outputStates\",\n          \"outputs\",\n          \"references\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"outputStates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.ContractState\"\n            }\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"references\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"outputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.TransactionState_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.core.transactions.ComponentGroup\": {\n        \"required\": [\n          \"components\",\n          \"groupIndex\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupIndex\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"components\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.transactions.CoreTransaction\": {\n        \"required\": [\n          \"id\",\n          \"inputs\",\n          \"outputStates\",\n          \"outputs\",\n          \"references\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"references\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"networkParametersHash\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"outputStates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.ContractState\"\n            }\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"outputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.TransactionState_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.core.transactions.SignedTransaction\": {\n        \"required\": [\n          \"id\",\n          \"inputs\",\n          \"missingSigners\",\n          \"notaryChangeTransaction\",\n          \"references\",\n          \"sigs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"txBits\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.serialization.SerializedBytes_net_corda_core_transactions_CoreTransaction\"\n          },\n          \"sigs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.crypto.TransactionSignature\"\n            }\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"coreTransaction\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.transactions.CoreTransaction\"\n          },\n          \"tx\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.transactions.WireTransaction\"\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"references\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"networkParametersHash\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"notaryChangeTransaction\": {\n            \"type\": \"boolean\"\n          },\n          \"missingSigners\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Public Key\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.transactions.TraversableTransaction\": {\n        \"required\": [\n          \"attachments\",\n          \"commands\",\n          \"componentGroups\",\n          \"id\",\n          \"inputs\",\n          \"outputStates\",\n          \"outputs\",\n          \"references\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"componentGroups\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.transactions.ComponentGroup\"\n            }\n          },\n          \"attachments\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Secure Hash\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"references\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"outputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.TransactionState_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"commands\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.Command_Object\"\n            }\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"timeWindow\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.TimeWindow\"\n          },\n          \"networkParametersHash\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"outputStates\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.ContractState\"\n            }\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.core.transactions.WireTransaction\": {\n        \"required\": [\n          \"attachments\",\n          \"availableComponentHashes$core\",\n          \"availableComponentNonces$core\",\n          \"commands\",\n          \"groupHashes$core\",\n          \"groupsMerkleRoots$core\",\n          \"id\",\n          \"inputs\",\n          \"outputs\",\n          \"references\",\n          \"requiredSigningKeys\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"privacySalt\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.PrivacySalt\"\n          },\n          \"attachments\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Secure Hash\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          },\n          \"inputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"references\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"outputs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.TransactionState_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"commands\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.Command_Object\"\n            }\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"timeWindow\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.TimeWindow\"\n          },\n          \"networkParametersHash\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"requiredSigningKeys\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Public Key\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          },\n          \"groupHashes$core\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Secure Hash\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          },\n          \"groupsMerkleRoots$core\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Secure Hash\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          },\n          \"availableComponentNonces$core\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"description\": \"Base 58 Encoded Secure Hash\",\n                \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n              }\n            }\n          },\n          \"availableComponentHashes$core\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"description\": \"Base 58 Encoded Secure Hash\",\n                \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n              }\n            }\n          }\n        }\n      },\n      \"net.corda.finance.flows.AbstractCashFlow_Result\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"stx\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.transactions.SignedTransaction\"\n          },\n          \"recipient\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n          }\n        }\n      },\n      \"AmountCurrency\": {\n        \"required\": [\n          \"displayTokenSize\",\n          \"quantity\",\n          \"token\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"description\": \"total amount in minor units\",\n            \"format\": \"int32\",\n            \"example\": 100\n          },\n          \"displayTokenSize\": {\n            \"type\": \"number\",\n            \"example\": 0.01\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"example\": \"GBP\"\n          }\n        }\n      },\n      \"generated.net.corda.finance.flows.CashExitFlowPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"issuerRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n          }\n        }\n      },\n      \"generated.net.corda.finance.flows.CashIssueAndPaymentFlowPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"issueRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n          },\n          \"recipient\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"anonymous\": {\n            \"type\": \"boolean\"\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          }\n        }\n      },\n      \"generated.net.corda.finance.flows.CashIssueFlowPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"issuerBankPartyRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          }\n        }\n      },\n      \"generated.net.corda.finance.flows.CashPaymentFlowPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"recipient\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"anonymous\": {\n            \"type\": \"boolean\"\n          },\n          \"issuerConstraint\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n            }\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          }\n        }\n      },\n      \"net.corda.finance.internal.CashConfiguration\": {\n        \"required\": [\n          \"issuableCurrencies\",\n          \"supportedCurrencies\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"issuableCurrencies\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"3 digit ISO 4217 code of the currency\",\n              \"example\": \"GBP\"\n            }\n          },\n          \"supportedCurrencies\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"3 digit ISO 4217 code of the currency\",\n              \"example\": \"GBP\"\n            }\n          }\n        }\n      },\n      \"generated.net.corda.finance.internal.CashConfigDataFlowPayload\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.context.Actor\": {\n        \"required\": [\n          \"owningLegalIdentity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.Actor_Id\"\n          },\n          \"serviceId\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.AuthServiceId\"\n          },\n          \"owningLegalIdentity\": {\n            \"type\": \"string\",\n            \"description\": \"CordaX500Name encoded Party\",\n            \"example\": \"O=Bank A, L=London, C=GB\"\n          }\n        }\n      },\n      \"net.corda.core.context.Actor_Id\": {\n        \"required\": [\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"net.corda.core.context.AuthServiceId\": {\n        \"required\": [\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"net.corda.core.context.InvocationContext\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"origin\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.InvocationOrigin\"\n          },\n          \"trace\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.Trace\"\n          },\n          \"actor\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.Actor\"\n          },\n          \"externalTrace\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.Trace\"\n          },\n          \"impersonatedActor\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.Actor\"\n          }\n        }\n      },\n      \"net.corda.core.context.InvocationOrigin\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.context.Trace\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"invocationId\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.Trace_InvocationId\"\n          },\n          \"sessionId\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.Trace_SessionId\"\n          }\n        }\n      },\n      \"net.corda.core.context.Trace_InvocationId\": {\n        \"required\": [\n          \"timestamp\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"entityType\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"net.corda.core.context.Trace_SessionId\": {\n        \"required\": [\n          \"timestamp\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"entityType\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"net.corda.core.utilities.Id\": {\n        \"required\": [\n          \"timestamp\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"object\"\n          },\n          \"entityType\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          }\n        }\n      },\n      \"net.corda.core.context.InvocationOrigin_Peer\": {\n        \"required\": [\n          \"party\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"party\": {\n            \"type\": \"string\",\n            \"description\": \"CordaX500Name encoded Party\",\n            \"example\": \"O=Bank A, L=London, C=GB\"\n          }\n        }\n      },\n      \"net.corda.core.context.InvocationOrigin_RPC\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"actor\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.context.Actor\"\n          }\n        }\n      },\n      \"net.corda.core.context.InvocationOrigin_Scheduled\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"scheduledState\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.ScheduledStateRef\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.ScheduledStateRef\": {\n        \"required\": [\n          \"scheduledAt\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n          },\n          \"scheduledAt\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          }\n        }\n      },\n      \"net.corda.core.context.InvocationOrigin_Service\": {\n        \"required\": [\n          \"owningLegalIdentity\",\n          \"serviceClassName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"serviceClassName\": {\n            \"type\": \"string\"\n          },\n          \"owningLegalIdentity\": {\n            \"type\": \"string\",\n            \"description\": \"CordaX500Name encoded Party\",\n            \"example\": \"O=Bank A, L=London, C=GB\"\n          }\n        }\n      },\n      \"net.corda.core.context.InvocationOrigin_Shell\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.contracts.AmountTransfer\": {\n        \"required\": [\n          \"destination\",\n          \"quantityDelta\",\n          \"source\",\n          \"token\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantityDelta\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"destination\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.LinearPointer\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"pointer\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.UniqueIdentifier\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"example\": \"java.lang.Object\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.StatePointer\": {\n        \"required\": [\n          \"pointer\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"example\": \"java.lang.Object\"\n          },\n          \"pointer\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.UniqueIdentifier\": {\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"externalId\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.StaticPointer\": {\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"pointer\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"example\": \"java.lang.Object\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.TransactionState\": {\n        \"required\": [\n          \"contract\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.ContractState\"\n          },\n          \"contract\": {\n            \"type\": \"string\"\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"encumbrance\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"constraint\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.AttachmentConstraint\"\n          }\n        }\n      },\n      \"net.corda.core.flows.AbstractStateReplacementFlow_Proposal\": {\n        \"required\": [\n          \"modification\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"stateRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n          },\n          \"modification\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"net.corda.core.flows.FlowInfo\": {\n        \"required\": [\n          \"appName\",\n          \"flowVersion\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"flowVersion\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"appName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"net.corda.core.crypto.DigitalSignature_WithKey\": {\n        \"required\": [\n          \"by\",\n          \"bytes\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"by\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Public Key\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"bytes\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      },\n      \"net.corda.core.flows.NotarisationPayload\": {\n        \"required\": [\n          \"transaction\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"object\"\n          },\n          \"requestSignature\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.flows.NotarisationRequestSignature\"\n          },\n          \"coreTransaction\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.transactions.CoreTransaction\"\n          },\n          \"signedTransaction\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.transactions.SignedTransaction\"\n          }\n        }\n      },\n      \"net.corda.core.flows.NotarisationRequestSignature\": {\n        \"required\": [\n          \"platformVersion\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"digitalSignature\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.crypto.DigitalSignature_WithKey\"\n          },\n          \"platformVersion\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"net.corda.core.flows.NotarisationRequest\": {\n        \"required\": [\n          \"statesToConsume\",\n          \"transactionId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"statesToConsume\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateRef\"\n            }\n          },\n          \"transactionId\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.core.flows.NotarisationResponse\": {\n        \"required\": [\n          \"signatures\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"signatures\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.crypto.TransactionSignature\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.flows.NotaryError\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.flows.NotaryError_Conflict\": {\n        \"required\": [\n          \"consumedStates\",\n          \"txId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"txId\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"consumedStates\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.flows.StateConsumptionDetails\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.flows.StateConsumptionDetails\": {\n        \"required\": [\n          \"hashOfTransactionId\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"hashOfTransactionId\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"INPUT_STATE\",\n              \"REFERENCE_INPUT_STATE\"\n            ]\n          }\n        }\n      },\n      \"net.corda.core.flows.NotaryError_General\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cause\": {\n            \"$ref\": \"#/components/schemas/Error\"\n          }\n        }\n      },\n      \"net.corda.core.flows.NotaryError_RequestSignatureInvalid\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cause\": {\n            \"$ref\": \"#/components/schemas/Error\"\n          }\n        }\n      },\n      \"net.corda.core.flows.NotaryError_TimeWindowInvalid\": {\n        \"required\": [\n          \"currentTime\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"currentTime\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"txTimeWindow\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.TimeWindow\"\n          }\n        }\n      },\n      \"net.corda.core.flows.NotaryError_TransactionInvalid\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cause\": {\n            \"$ref\": \"#/components/schemas/Error\"\n          }\n        }\n      },\n      \"net.corda.core.flows.NotaryError_WrongNotary\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.flows.WaitTimeUpdate\": {\n        \"required\": [\n          \"waitTime\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"waitTime\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Duration\"\n          }\n        }\n      },\n      \"net.corda.core.identity.PartyAndCertificate\": {\n        \"required\": [\n          \"certPath\",\n          \"certificate\",\n          \"name\",\n          \"owningKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"certPath\": {\n            \"type\": \"string\",\n            \"description\": \"X509 encoded certificate PKI path\",\n            \"format\": \"byte\"\n          },\n          \"certificate\": {\n            \"type\": \"string\",\n            \"description\": \"X509 encoded certificate\",\n            \"format\": \"byte\"\n          },\n          \"party\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"CordaX500Name encoded Party\",\n            \"example\": \"O=Bank A, L=London, C=GB\"\n          },\n          \"owningKey\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Public Key\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.core.node.NodeInfo\": {\n        \"required\": [\n          \"addresses\",\n          \"legalIdentities\",\n          \"legalIdentitiesAndCerts\",\n          \"platformVersion\",\n          \"serial\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"addresses\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.utilities.NetworkHostAndPort\"\n            }\n          },\n          \"legalIdentitiesAndCerts\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.identity.PartyAndCertificate\"\n            }\n          },\n          \"platformVersion\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"serial\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"legalIdentities\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.node.services.NetworkMapCache_MapChange\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"node\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.NodeInfo\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.NetworkMapCache_MapChange_Added\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"node\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.NodeInfo\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.NetworkMapCache_MapChange_Modified\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"node\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.NodeInfo\"\n          },\n          \"previousNode\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.NodeInfo\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.NetworkMapCache_MapChange_Removed\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"node\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.NodeInfo\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.Vault\": {\n        \"required\": [\n          \"states\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"states\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.Vault_Page\": {\n        \"required\": [\n          \"otherResults\",\n          \"stateTypes\",\n          \"states\",\n          \"statesMetadata\",\n          \"totalStatesAvailable\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"states\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateAndRef_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"statesMetadata\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.node.services.Vault_StateMetadata\"\n            }\n          },\n          \"totalStatesAvailable\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"stateTypes\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"UNCONSUMED\",\n              \"CONSUMED\",\n              \"ALL\"\n            ]\n          },\n          \"otherResults\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.node.services.Vault_Update\": {\n        \"required\": [\n          \"consumed\",\n          \"empty\",\n          \"produced\",\n          \"references\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"consumed\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateAndRef_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"produced\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateAndRef_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"flowId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"GENERAL\",\n              \"NOTARY_CHANGE\",\n              \"CONTRACT_UPGRADE\"\n            ]\n          },\n          \"references\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.contracts.StateAndRef_net_corda_core_contracts_ContractState\"\n            }\n          },\n          \"empty\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.AttachmentQueryCriteria\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.AttachmentQueryCriteria_AndComposition\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"a\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria\"\n          },\n          \"b\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.AttachmentQueryCriteria_AttachmentsQueryCriteria\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"uploaderCondition\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_String\"\n          },\n          \"filenameCondition\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_String\"\n          },\n          \"uploadDateCondition\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Instant\"\n          },\n          \"contractClassNamesCondition\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_List_String\"\n          },\n          \"signersCondition\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_List_PublicKey\"\n          },\n          \"isSignedCondition\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Boolean\"\n          },\n          \"versionCondition\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.ColumnPredicate_Integer\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_Boolean\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_Integer\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_List_PublicKey\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_List_String\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.ColumnPredicate_String\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.AttachmentQueryCriteria_OrComposition\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"a\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria\"\n          },\n          \"b\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.AttachmentQueryCriteria\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.AttachmentSort\": {\n        \"required\": [\n          \"columns\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"columns\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.AttachmentSort_AttachmentSortColumn\"\n            }\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.AttachmentSort_AttachmentSortColumn\": {\n        \"required\": [\n          \"direction\",\n          \"sortAttribute\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"sortAttribute\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"INSERTION_DATE\",\n              \"UPLOADER\",\n              \"FILENAME\",\n              \"VERSION\"\n            ]\n          },\n          \"direction\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ASC\",\n              \"DESC\"\n            ]\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.Builder\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.node.services.vault.Column\": {\n        \"required\": [\n          \"declaringClass\",\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"declaringClass\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"example\": \"java.lang.Object\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.SortAttribute_Custom\": {\n        \"required\": [\n          \"entityStateClass\",\n          \"entityStateColumnName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"entityStateClass\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"example\": \"java.lang.Object\"\n          },\n          \"entityStateColumnName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.SortAttribute_Standard\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"attribute\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.node.services.vault.Sort_Attribute\"\n          }\n        }\n      },\n      \"net.corda.core.node.services.vault.Sort_Attribute\": {\n        \"type\": \"object\"\n      },\n      \"net.corda.core.schemas.CommonSchemaV1_FungibleState\": {\n        \"required\": [\n          \"issuerRef\",\n          \"quantity\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"participants\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n            }\n          },\n          \"owner\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"issuer\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n          },\n          \"issuerRef\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          },\n          \"stateRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.schemas.PersistentStateRef\"\n          }\n        }\n      },\n      \"net.corda.core.schemas.PersistentState\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"stateRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.schemas.PersistentStateRef\"\n          }\n        }\n      },\n      \"net.corda.core.schemas.PersistentStateRef\": {\n        \"required\": [\n          \"index\",\n          \"txId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"txId\": {\n            \"type\": \"string\"\n          },\n          \"index\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"net.corda.core.schemas.CommonSchemaV1_LinearState\": {\n        \"required\": [\n          \"uuid\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"participants\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n            }\n          },\n          \"externalId\": {\n            \"type\": \"string\"\n          },\n          \"uuid\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"stateRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.schemas.PersistentStateRef\"\n          }\n        }\n      },\n      \"net.corda.core.transactions.ContractUpgradeFilteredTransaction_FilteredComponent\": {\n        \"required\": [\n          \"nonce\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"component\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n          },\n          \"nonce\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Secure Hash\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.finance.contracts.BusinessCalendar\": {\n        \"required\": [\n          \"holidayDates\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"holidayDates\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"JSR310 encoded time representation of LocalDate\"\n            }\n          }\n        }\n      },\n      \"net.corda.finance.contracts.Commodity\": {\n        \"required\": [\n          \"commodityCode\",\n          \"defaultFractionDigits\",\n          \"displayName\",\n          \"displayTokenSize\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"commodityCode\": {\n            \"type\": \"string\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"defaultFractionDigits\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"displayTokenSize\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"net.corda.finance.contracts.Expression\": {\n        \"required\": [\n          \"expr\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"expr\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"net.corda.finance.contracts.FixOf\": {\n        \"required\": [\n          \"forDay\",\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"forDay\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of LocalDate\"\n          }\n        }\n      },\n      \"net.corda.finance.contracts.Tenor\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Issued\": {\n        \"required\": [\n          \"_productType\",\n          \"issuer\",\n          \"product\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"issuer\": {\n            \"required\": [\n              \"party\",\n              \"reference\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"party\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n              },\n              \"reference\": {\n                \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n              }\n            }\n          },\n          \"product\": {\n            \"type\": \"object\"\n          },\n          \"_productType\": {\n            \"type\": \"string\",\n            \"example\": \"java.util.Currency\"\n          }\n        }\n      },\n      \"net.corda.core.contracts.PartyAndReference\": {\n        \"required\": [\n          \"party\",\n          \"reference\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"party\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n          },\n          \"reference\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n          }\n        }\n      },\n      \"net.corda.core.utilities.NonEmptySet_net_corda_core_contracts_Issued_Object\": {\n        \"uniqueItems\": true,\n        \"required\": [\n          \"empty\",\n          \"size\"\n        ],\n        \"type\": \"array\",\n        \"properties\": {\n          \"elements\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"writeOnly\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Issued\"\n            }\n          },\n          \"empty\": {\n            \"type\": \"boolean\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Issued\"\n        }\n      },\n      \"net.corda.core.utilities.NonEmptySet_net_corda_core_crypto_SecureHash\": {\n        \"uniqueItems\": true,\n        \"required\": [\n          \"empty\",\n          \"size\"\n        ],\n        \"type\": \"array\",\n        \"properties\": {\n          \"elements\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"writeOnly\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Secure Hash\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          },\n          \"empty\": {\n            \"type\": \"boolean\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"items\": {\n          \"type\": \"string\",\n          \"description\": \"Base 58 Encoded Secure Hash\",\n          \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n        }\n      },\n      \"net.corda.finance.contracts.asset.Obligation_Terms\": {\n        \"required\": [\n          \"acceptableContracts\",\n          \"acceptableIssuedProducts\",\n          \"dueBefore\",\n          \"product\",\n          \"timeTolerance\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"acceptableContracts\": {\n            \"uniqueItems\": true,\n            \"required\": [\n              \"empty\",\n              \"size\"\n            ],\n            \"type\": \"array\",\n            \"properties\": {\n              \"elements\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Base 58 Encoded Secure Hash\",\n                  \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n                }\n              },\n              \"empty\": {\n                \"type\": \"boolean\"\n              },\n              \"size\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            },\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Base 58 Encoded Secure Hash\",\n              \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n            }\n          },\n          \"acceptableIssuedProducts\": {\n            \"uniqueItems\": true,\n            \"required\": [\n              \"empty\",\n              \"size\"\n            ],\n            \"type\": \"array\",\n            \"properties\": {\n              \"elements\": {\n                \"uniqueItems\": true,\n                \"type\": \"array\",\n                \"writeOnly\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/Issued\"\n                }\n              },\n              \"empty\": {\n                \"type\": \"boolean\"\n              },\n              \"size\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              }\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Issued\"\n            }\n          },\n          \"dueBefore\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"timeTolerance\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Duration\"\n          },\n          \"product\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"net.corda.finance.flows.AbstractCashFlow_AbstractRequest\": {\n        \"required\": [\n          \"amount\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          }\n        }\n      },\n      \"net.corda.finance.flows.CashExitFlow_ExitRequest\": {\n        \"required\": [\n          \"amount\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"issuerRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n          }\n        }\n      },\n      \"net.corda.finance.flows.CashIssueAndPaymentFlow_IssueAndPaymentRequest\": {\n        \"required\": [\n          \"amount\",\n          \"anonymous\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"issueRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n          },\n          \"recipient\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"anonymous\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"net.corda.finance.flows.CashIssueFlow_IssueRequest\": {\n        \"required\": [\n          \"amount\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"issueRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.utilities.OpaqueBytes\"\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          }\n        }\n      },\n      \"net.corda.finance.flows.CashPaymentFlow_PaymentRequest\": {\n        \"required\": [\n          \"amount\",\n          \"anonymous\",\n          \"issuerConstraint\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"recipient\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"anonymous\": {\n            \"type\": \"boolean\"\n          },\n          \"issuerConstraint\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n            }\n          },\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          }\n        }\n      },\n      \"net.corda.finance.contracts.DealState\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"linearId\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.contracts.UniqueIdentifier\"\n          }\n        }\n      },\n      \"net.corda.finance.flows.TwoPartyDealFlow_AutoOffer\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"notary\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.Party\"\n          },\n          \"dealBeingOffered\": {\n            \"$ref\": \"#/components/schemas/net.corda.finance.contracts.DealState\"\n          }\n        }\n      },\n      \"net.corda.core.identity.AnonymousParty\": {\n        \"required\": [\n          \"owningKey\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"owningKey\": {\n            \"type\": \"string\",\n            \"description\": \"Base 58 Encoded Public Key\",\n            \"example\": \"GfHq2tTVk9z4eXgyUuofmR16H6j7srXt8BCyidKdrZL5JEwFqHgDSuiinbTE\"\n          }\n        }\n      },\n      \"net.corda.finance.flows.TwoPartyDealFlow_Handshake\": {\n        \"required\": [\n          \"payload\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"payload\": {\n            \"type\": \"object\"\n          },\n          \"primaryIdentity\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.AnonymousParty\"\n          },\n          \"secondaryIdentity\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.AnonymousParty\"\n          }\n        }\n      },\n      \"net.corda.finance.flows.TwoPartyTradeFlow_SellerTradeInfo\": {\n        \"required\": [\n          \"price\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"price\": {\n            \"$ref\": \"#/components/schemas/AmountCurrency\"\n          },\n          \"payToIdentity\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.PartyAndCertificate\"\n          }\n        }\n      },\n      \"net.corda.core.schemas.MappedSchema\": {\n        \"required\": [\n          \"mappedTypes\",\n          \"name\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"schemaFamily\": {\n            \"type\": \"string\",\n            \"description\": \"Java class name\",\n            \"writeOnly\": true,\n            \"example\": \"java.lang.Object\"\n          },\n          \"version\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"mappedTypes\": {\n            \"type\": \"object\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"migrationResource\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"net.corda.finance.schemas.CashSchemaV1\": {\n        \"required\": [\n          \"mappedTypes\",\n          \"migrationResource\",\n          \"name\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"migrationResource\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"mappedTypes\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"net.corda.finance.schemas.CashSchemaV1_PersistentCashState\": {\n        \"required\": [\n          \"currency\",\n          \"issuerPartyHash\",\n          \"issuerRef\",\n          \"pennies\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"owner\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.identity.AbstractParty\"\n          },\n          \"pennies\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"currency\": {\n            \"type\": \"string\"\n          },\n          \"issuerPartyHash\": {\n            \"type\": \"string\"\n          },\n          \"issuerRef\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          },\n          \"stateRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.schemas.PersistentStateRef\"\n          }\n        }\n      },\n      \"net.corda.finance.schemas.CommercialPaperSchemaV1\": {\n        \"required\": [\n          \"mappedTypes\",\n          \"migrationResource\",\n          \"name\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"migrationResource\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"mappedTypes\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"net.corda.finance.schemas.CommercialPaperSchemaV1_PersistentCommercialPaperState\": {\n        \"required\": [\n          \"currency\",\n          \"faceValue\",\n          \"faceValueIssuerPartyHash\",\n          \"faceValueIssuerRef\",\n          \"issuancePartyHash\",\n          \"issuanceRef\",\n          \"maturity\",\n          \"ownerHash\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"issuancePartyHash\": {\n            \"type\": \"string\"\n          },\n          \"issuanceRef\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          },\n          \"ownerHash\": {\n            \"type\": \"string\"\n          },\n          \"maturity\": {\n            \"type\": \"string\",\n            \"description\": \"JSR310 encoded time representation of Instant\"\n          },\n          \"faceValue\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"currency\": {\n            \"type\": \"string\"\n          },\n          \"faceValueIssuerPartyHash\": {\n            \"type\": \"string\"\n          },\n          \"faceValueIssuerRef\": {\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          },\n          \"stateRef\": {\n            \"$ref\": \"#/components/schemas/net.corda.core.schemas.PersistentStateRef\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/web3j/web3j-corda@f491b7a21bb8c89d96bf38320c4068ce6351b69d/-/blob/common/src/main/resources/corda-api.json",
			"externalURLs": [
				{
					"url": "https://github.com/web3j/web3j-corda/blob/f491b7a21bb8c89d96bf38320c4068ce6351b69d/common/src/main/resources/corda-api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 718:17: schemas: \"net.corda.finance.contracts.asset.Obligation_Terms\": parse schema: property \"acceptableContracts\": at 4044:34: parse schema: array cannot contain properties"
}