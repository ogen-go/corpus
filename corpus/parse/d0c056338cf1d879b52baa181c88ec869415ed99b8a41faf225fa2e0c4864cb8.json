{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/couchbaselabs/try-cb-java"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "src/main/resources/static/swagger.json",
			"byteSize": 16835,
			"content": "{\n  \"components\": {\n    \"schemas\": {\n      \"Context\": {\n        \"items\": {\n          \"type\": \"string\"\n        },\n        \"type\": \"array\"\n      },\n      \"Error\": {\n        \"properties\": {\n          \"message\": {\n            \"example\": \"An error message\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ResultList\": {\n        \"properties\": {\n          \"context\": {\n            \"$ref\": \"#/components/schemas/Context\"\n          },\n          \"data\": {\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ResultSingleton\": {\n        \"properties\": {\n          \"context\": {\n            \"$ref\": \"#/components/schemas/Context\"\n          },\n          \"data\": {\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"bearer\": {\n        \"bearerFormat\": \"JWT\",\n        \"description\": \"JWT Authorization header using the Bearer scheme.\",\n        \"scheme\": \"bearer\",\n        \"type\": \"http\"\n      }\n    }\n  },\n  \"definitions\": {},\n  \"info\": {\n    \"description\": \"A sample API for getting started with Couchbase Server and the SDK.\",\n    \"termsOfService\": \"\",\n    \"title\": \"Travel Sample API\",\n    \"version\": \"1.0\"\n  },\n  \"openapi\": \"3.0.3\",\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/html\": {\n                \"example\": \"\u003ch1\u003e Travel Sample API \u003c/h1\u003e\"\n              }\n            },\n            \"description\": \"Returns the API index page\"\n          }\n        },\n        \"summary\": \"Returns the index page\"\n      }\n    },\n    \"/api/airports\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"The airport name/code to search for\",\n            \"example\": \"SFO\",\n            \"in\": \"query\",\n            \"name\": \"search\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"context\": [\n                    \"A description of a N1QL operation\"\n                  ],\n                  \"data\": [\n                    {\n                      \"airportname\": \"San Francisco Intl\"\n                    }\n                  ]\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResultList\"\n                }\n              }\n            },\n            \"description\": \"Returns airport data and query context information\"\n          }\n        },\n        \"summary\": \"Returns list of matching airports and the source query\",\n        \"tags\": [\n          \"airports\"\n        ]\n      }\n    },\n    \"/api/flightPaths/{fromloc}/{toloc}\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"Airport name for beginning route\",\n            \"example\": \"San Francisco Intl\",\n            \"in\": \"path\",\n            \"name\": \"fromloc\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Airport name for end route\",\n            \"example\": \"Los Angeles Intl\",\n            \"in\": \"path\",\n            \"name\": \"toloc\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Date of flight departure in `mm/dd/yyyy` format\",\n            \"example\": \"05/24/2021\",\n            \"in\": \"query\",\n            \"name\": \"leave\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"date\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"context\": [\n                    \"N1QL query - scoped to inventory: SELECT faa as fromAirport FROM `travel-sample`.inventory.airport WHERE airportname = $1 UNION SELECT faa as toAirport FROM `travel-sample`.inventory.airport WHERE airportname = $2\"\n                  ],\n                  \"data\": [\n                    {\n                      \"destinationairport\": \"LAX\",\n                      \"equipment\": \"738\",\n                      \"flight\": \"AA331\",\n                      \"flighttime\": 1220,\n                      \"name\": \"American Airlines\",\n                      \"price\": 152.5,\n                      \"sourceairport\": \"SFO\",\n                      \"utc\": \"16:37:00\"\n                    }\n                  ]\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResultList\"\n                }\n              }\n            },\n            \"description\": \"Returns flight data and query context information\"\n          }\n        },\n        \"summary\": \"Return flights information, cost and more for a given flight time and date\",\n        \"tags\": [\n          \"flightPaths\"\n        ]\n      }\n    },\n    \"/api/hotels/{description}/{location}/\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"Hotel description keywords\",\n            \"example\": \"pool\",\n            \"in\": \"path\",\n            \"name\": \"description\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Hotel location\",\n            \"example\": \"San Francisco\",\n            \"in\": \"path\",\n            \"name\": \"location\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"context\": [\n                    \"FTS search - scoped to: inventory.hotel within fields address,city,state,country,name,description\"\n                  ],\n                  \"data\": [\n                    {\n                      \"address\": \"250 Beach St, San Francisco, California, United States\",\n                      \"description\": \"Nice hotel, centrally located (only two blocks from Pier 39). Heated outdoor swimming pool.\",\n                      \"name\": \"Radisson Hotel Fisherman's Wharf\"\n                    },\n                    {\n                      \"address\": \"121 7th St, San Francisco, California, United States\",\n                      \"description\": \"Chain motel with a few more amenities than the typical Best Western; outdoor swimming pool, internet access, cafe on-site, pet friendly.\",\n                      \"name\": \"Best Western Americania\"\n                    }\n                  ]\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResultList\"\n                }\n              }\n            },\n            \"description\": \"Returns hotel data and query context information\"\n          }\n        },\n        \"summary\": \"Find hotels using full text search\",\n        \"tags\": [\n          \"hotels\"\n        ]\n      }\n    },\n    \"/api/tenants/{tenant}/user/login\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"description\": \"Tenant agent name\",\n            \"example\": \"tenant_agent_00\",\n            \"in\": \"path\",\n            \"name\": \"tenant\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"password\": {\n                    \"example\": \"password1\",\n                    \"type\": \"string\"\n                  },\n                  \"user\": {\n                    \"example\": \"user1\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"user\",\n                  \"password\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"context\": [\n                    \"KV get - scoped to tenant_agent_00.users: for password field in document user1\"\n                  ],\n                  \"data\": {\n                    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoibXNfdXNlciJ9.GPs8two_vPVBpdqD7cz_yJ4X6J9yDTi6g7r9eWyAwEM\"\n                  }\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResultSingleton\"\n                }\n              }\n            },\n            \"description\": \"Returns login data and query context information\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            },\n            \"description\": \"Returns an authentication error\"\n          }\n        },\n        \"summary\": \"Login an existing user for a given tenant agent\",\n        \"tags\": [\n          \"tenants\"\n        ]\n      }\n    },\n    \"/api/tenants/{tenant}/user/signup\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"description\": \"Tenant agent name\",\n            \"example\": \"tenant_agent_00\",\n            \"in\": \"path\",\n            \"name\": \"tenant\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"password\": {\n                    \"example\": \"password1\",\n                    \"type\": \"string\"\n                  },\n                  \"user\": {\n                    \"example\": \"user1\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"user\",\n                  \"password\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"context\": [\n                    \"KV insert - scoped to tenant_agent_00.users: document user1\"\n                  ],\n                  \"data\": {\n                    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoibXNfdXNlciJ9.GPs8two_vPVBpdqD7cz_yJ4X6J9yDTi6g7r9eWyAwEM\"\n                  }\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResultSingleton\"\n                }\n              }\n            },\n            \"description\": \"Returns login data and query context information\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            },\n            \"description\": \"Returns a conflict error\"\n          }\n        },\n        \"summary\": \"Signup a new user\",\n        \"tags\": [\n          \"tenants\"\n        ]\n      }\n    },\n    \"/api/tenants/{tenant}/user/{username}/flights\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"description\": \"Tenant agent name\",\n            \"example\": \"tenant_agent_00\",\n            \"in\": \"path\",\n            \"name\": \"tenant\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Username\",\n            \"example\": \"user1\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"context\": [\n                    \"KV get - scoped to tenant_agent_00.user: for 2 bookings in document user1\"\n                  ],\n                  \"data\": [\n                    {\n                      \"date\": \"05/24/2021\",\n                      \"destinationairport\": \"LAX\",\n                      \"equipment\": \"738\",\n                      \"flight\": \"AA655\",\n                      \"flighttime\": 5383,\n                      \"name\": \"American Airlines\",\n                      \"price\": 672.88,\n                      \"sourceairport\": \"SFO\",\n                      \"utc\": \"11:42:00\"\n                    },\n                    {\n                      \"date\": \"05/28/2021\",\n                      \"destinationairport\": \"SFO\",\n                      \"equipment\": \"738\",\n                      \"flight\": \"AA344\",\n                      \"flighttime\": 6081,\n                      \"name\": \"American Airlines\",\n                      \"price\": 760.13,\n                      \"sourceairport\": \"LAX\",\n                      \"utc\": \"20:47:00\"\n                    }\n                  ]\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResultList\"\n                }\n              }\n            },\n            \"description\": \"Returns flight data and query context information\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            },\n            \"description\": \"Returns an authentication error\"\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ],\n        \"summary\": \"List the flights that have been reserved by a user\",\n        \"tags\": [\n          \"tenants\"\n        ]\n      },\n      \"put\": {\n        \"parameters\": [\n          {\n            \"description\": \"Tenant agent name\",\n            \"example\": \"tenant_agent_00\",\n            \"in\": \"path\",\n            \"name\": \"tenant\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Username\",\n            \"example\": \"user1\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"flights\": {\n                    \"example\": [\n                      {\n                        \"date\": \"12/12/2020\",\n                        \"destinationairport\": \"Leonardo Da Vinci International Airport\",\n                        \"flight\": \"12RF\",\n                        \"name\": \"boeing\",\n                        \"price\": 50.0,\n                        \"sourceairport\": \"London (Gatwick)\"\n                      }\n                    ],\n                    \"format\": \"string\",\n                    \"type\": \"array\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"example\": {\n                  \"context\": [\n                    \"KV update - scoped to tenant_agent_00.user: for bookings field in document user1\"\n                  ],\n                  \"data\": {\n                    \"added\": [\n                      {\n                        \"date\": \"12/12/2020\",\n                        \"destinationairport\": \"Leonardo Da Vinci International Airport\",\n                        \"flight\": \"12RF\",\n                        \"name\": \"boeing\",\n                        \"price\": 50.0,\n                        \"sourceairport\": \"London (Gatwick)\"\n                      }\n                    ]\n                  }\n                },\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResultSingleton\"\n                }\n              }\n            },\n            \"description\": \"Returns flight data and query context information\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            },\n            \"description\": \"Returns an authentication error\"\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ],\n        \"summary\": \"Book a new flight for a user\",\n        \"tags\": [\n          \"tenants\"\n        ]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/couchbaselabs/try-cb-java@c80b85ee1eee34b3c29c4b44e61840459fb8f42e/-/blob/src/main/resources/static/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/couchbaselabs/try-cb-java/blob/c80b85ee1eee34b3c29c4b44e61840459fb8f42e/src/main/resources/static/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/hotels/{description}/{location}/\": get: parameters: parse parameter \"description\": at 198:25: path parameters must be required"
}