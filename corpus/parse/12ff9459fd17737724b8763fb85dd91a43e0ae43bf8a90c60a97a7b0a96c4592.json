{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/virtru/tdf-spec"
		},
		"file": {
			"name": "kas-api.yaml",
			"size": 0,
			"path": "api/kas-api.yaml",
			"byteSize": 7815,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Key Access Service\n  termsOfService: https://www.virtru.com/terms-of-service/\n  contact:\n    email: support@virtru.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\nexternalDocs:\n  description: Developer Hub\n  url: https://developer.virtru.com/\n\npaths:\n  \"/\":\n    get:\n      summary: Get the current version\n      description: |\n        This endpoint is for OPS so they have something to ping on to verify\n        that the server hasn't died.\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    example: \"0.0.0\"\n\n  \"/kas_public_key\":\n    get:\n      summary: \"Get the public key for KAS\"\n      description: |\n        This endpoint provides a public key for the private key that the\n        kas has internally.\n      parameters:\n        - name: algorithm\n          description: algorithm type rsa:\u003ckeysize\u003e or ec:\u003ccurvename\u003e\n          in: query\n          schema:\n            default: rsa:2048\n            type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PublicKey\"\n        \"404\":\n          description: Not found\n\n\n  \"/v2/rewrap\":\n    post:\n      summary: Request a rewrap\n      description: |\n        This endpoint performs the primary service of the KAS; to re-wrap\n        data keys as needed to provide access for entities with a TDF that they\n        would like to open.\n      operationId: tdf3_kas_core.web.rewrap.rewrap_v2\n      requestBody:\n        $ref: \"#/components/requestBodies/RewrapV2\"\n      # security:\n      #   - virtruOIDCBearerToken: []\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  metadata:\n                    type: object\n                    default: {}\n                  kasWrappedKey:\n                    type: string\n                    nullable: true\n                  entityWrappedKey:\n                    type: string\n                    nullable: true\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          description: Forbidden\n\n\n  \"/v2/upsert\":\n    post:\n      summary: Request a upsert\n      description: |\n        The upsert service is a proxy to the back-end services that persist\n        policies and keys.\n      requestBody:\n        $ref: \"#/components/requestBodies/UpsertV2\"\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                default: []\n                items: {}\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"403\":\n          description: Forbidden\n\ncomponents:\n  responses:\n    ### Errors\n    BadRequest:\n      description: 400 Bad request\n      content:\n        application/json:\n          schema:\n            properties:\n              detail:\n                type: string\n              status:\n                type: number\n                default: 400\n              title:\n                type: string\n                default: Bad request\n              type:\n                type: string\n                default: about:blank\n    NotFound:\n      description: 404 Not found\n      content:\n        application/json:\n          schema:\n            type: string\n    ServerError:\n      description: Server error\n\n    ### Methods\n    PublicKey:\n      description: Public key response\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PublicKey\"\n    Version:\n      description: Respond with current version\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              version:\n                type: string\n                example: \"0.0.0\"\n\n  requestBodies:\n    RewrapV2:\n      description: RewrapV2 request body\n      required: true\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - type: object\n                required:\n                  - clientPayloadSignature\n                  - keyAccess\n                maxProperties: 5\n                properties:\n                  clientPayloadSignature:\n                    $ref: \"#/components/schemas/AuthToken\"\n                  keyAccess:\n                    $ref: \"#/components/schemas/KeyAccess\"\n                  policy:\n                    $ref: \"#/components/schemas/Policy\"\n                  algorithm:\n                    $ref: \"#/components/schemas/TDF_Algorithm\"\n              - type: object\n                required:\n                  - signedRequestToken\n                maxProperties: 1\n                properties:\n                  signedRequestToken:\n                    $ref: \"#/components/schemas/JWT\"\n    UpsertV2:\n      description: Upsert request body\n      required: true\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - type: object\n                required:\n                  - keyAccess\n                  - policy\n                maxProperties: 4\n                properties:\n                  keyAccess:\n                    $ref: \"#/components/schemas/KeyAccess\"\n                  policy:\n                    $ref: \"#/components/schemas/Policy\"\n              - type: object\n                required:\n                  - signedRequestToken\n\n  schemas:\n    Algorithm:\n      title: The algorithm used to encrypt the ciphertext\n      type: string\n      enum:\n        - AES-256-GCM\n    Aliases:\n      title: Array of userIds\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserId\"\n    AuthToken:\n      $ref: \"#/components/schemas/JWT\"\n    Ciphertext:\n      title: Encrypted object\n      type: string\n    EncryptedMetadata:\n      title: Metadata in encrypted format\n      type: string\n    Exp:\n      title: JWT expiration date\n      type: number\n    IV:\n      title: Initial vector used to encrypt the ciphertext\n      type: string\n    JWT:\n      title: JSON Web token\n      type: string\n      pattern: ^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$\n    KeyAccess:\n      title: Key access object\n      type: object\n      required:\n        - type\n        - url\n        - protocol\n      properties:\n        encryptedMetadata:\n          $ref: \"#/components/schemas/EncryptedMetadata\"\n        policySyncOptions:\n          $ref: \"#/components/schemas/Policy\"\n        policyBinding:\n          $ref: \"#/components/schemas/PolicyBinding\"\n        protocol:\n          type: string\n          enum:\n            - kas\n        type:\n          type: string\n          enum:\n            - remote\n            - remoteWrapped\n            - wrapped\n        url:\n          type: string\n        wrappedKey:\n          $ref: \"#/components/schemas/WrappedKey\"\n    Policy:\n      title: Policy\n      type: string\n    PolicyBinding:\n      title: Policy binding\n      type: string\n    PolicySyncOptions:\n      title: Policy sync options\n      type: object\n      properties:\n        url:\n          type: string\n    PublicKey:\n      title: Public key\n      type: string\n      pattern: '-----BEGIN PUBLIC KEY-----(.|\\s)*-----END PUBLIC KEY-----(\\s)*'\n    UserId:\n      title: User id\n      type: string\n    WrappedKey:\n      title: Wrapped key\n      type: string\n    TDF_Algorithm:\n      description: String to define the type of algorithm the client performing the TDF operations.\n      type: string\n      example: \"ec:secp256r1\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /v2/rewrap: post: operation \"tdf3_kas_core.web.rewrap.rewrap_v2\": responses: 200: content: \"application/json\": schema: parse schema: metadata: parse default: unexpected type: \"object\""
}