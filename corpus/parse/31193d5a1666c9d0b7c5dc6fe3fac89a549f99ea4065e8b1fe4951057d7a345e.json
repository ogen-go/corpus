{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/knuckleswtf/scribe"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tests/Fixtures/openapi.yaml",
			"byteSize": 11844,
			"content": "openapi: 3.0.3\ninfo:\n    title: Laravel\n    description: ''\n    version: 3.9.9\nservers:\n    -\n        url: 'http://localhost'\npaths:\n    /api/withFormDataParams:\n        post:\n            summary: 'Endpoint with body form data parameters.'\n            description: ''\n            parameters:\n                -\n                    in: header\n                    name: Custom-Header\n                    description: ''\n                    example: NotSoCustom\n                    schema:\n                        type: string\n                -\n                    in: header\n                    name: Content-Type\n                    description: ''\n                    example: multipart/form-data\n                    schema:\n                        type: string\n            responses: {  }\n            tags:\n                - 'Group A'\n            requestBody:\n                required: true\n                content:\n                    multipart/form-data:\n                        schema:\n                            type: object\n                            properties:\n                                name:\n                                    type: string\n                                    description: 'Name of image.'\n                                    example: cat.jpg\n                                image:\n                                    type: string\n                                    format: binary\n                                    description: 'The image.'\n                            required:\n                                - name\n                                - image\n            security: []\n    /api/withResponseTag:\n        get:\n            summary: ''\n            description: ''\n            parameters:\n                -\n                    in: header\n                    name: Custom-Header\n                    description: ''\n                    example: NotSoCustom\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"\"\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                example:\n                                    id: 4\n                                    name: banana\n                                    color: red\n                                    weight: '1 kg'\n                                    delicious: true\n                                    responseTag: true\n                                properties:\n                                    id: { type: integer, example: 4 }\n                                    name: { type: string, example: banana }\n                                    color: { type: string, example: red }\n                                    weight: { type: string, example: '1 kg' }\n                                    delicious: { type: boolean, example: true }\n                                    responseTag: { type: boolean, example: true }\n            tags:\n                - 'Group A'\n            security: []\n    /api/withQueryParameters:\n        get:\n            summary: ''\n            description: ''\n            parameters:\n                -\n                    in: query\n                    name: location_id\n                    description: 'The id of the location.'\n                    example: consequatur\n                    required: true\n                    schema:\n                        type: string\n                        description: 'The id of the location.'\n                        example: consequatur\n                -\n                    in: query\n                    name: user_id\n                    description: 'The id of the user.'\n                    example: me\n                    required: true\n                    schema:\n                        type: string\n                        description: 'The id of the user.'\n                        example: me\n                -\n                    in: query\n                    name: page\n                    description: 'The page number.'\n                    example: '4'\n                    required: true\n                    schema:\n                        type: string\n                        description: 'The page number.'\n                        example: '4'\n                -\n                    in: query\n                    name: filters\n                    description: 'The filters.'\n                    example: consequatur\n                    required: false\n                    schema:\n                        type: string\n                        description: 'The filters.'\n                        example: consequatur\n                -\n                    in: query\n                    name: url_encoded\n                    description: 'Used for testing that URL parameters will be URL-encoded where needed.'\n                    example: '+ []\u0026='\n                    required: false\n                    schema:\n                        type: string\n                        description: 'Used for testing that URL parameters will be URL-encoded where needed.'\n                        example: '+ []\u0026='\n                -\n                    in: header\n                    name: Custom-Header\n                    description: ''\n                    example: NotSoCustom\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"\"\n                    content:\n                        'text/plain':\n                            schema:\n                                type: \"string\"\n                                example: \"\"\n            tags:\n                - 'Group A'\n            security: []\n    /api/withAuthTag:\n        get:\n            summary: ''\n            description: ''\n            parameters:\n                -\n                    in: header\n                    name: Custom-Header\n                    description: ''\n                    example: NotSoCustom\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: \"\"\n                    content:\n                        'text/plain':\n                            schema:\n                                type: \"string\"\n                                example: \"\"\n            tags:\n                - 'Group A'\n    '/api/echoesUrlParameters/{param}/{param2}/{param3}/{param4}':\n        get:\n            summary: ''\n            description: ''\n            parameters:\n                -\n                    in: query\n                    name: something\n                    description: ''\n                    example: consequatur\n                    required: false\n                    schema:\n                        type: string\n                        description: ''\n                        example: consequatur\n                -\n                    in: header\n                    name: Custom-Header\n                    description: ''\n                    example: NotSoCustom\n                    schema:\n                        type: string\n            responses:\n                200:\n                    description: ''\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                example:\n                                    param: '4'\n                                    param2: consequatur\n                                    param3: consequatur\n                                    param4: null\n                                properties:\n                                    param: { type: string, example: '4' }\n                                    param2: { type: string, example: consequatur }\n                                    param3: { type: string, example: consequatur }\n                                    param4: { type: string, example: null }\n            tags:\n                - OtherðŸ˜Ž\n            security: []\n        parameters:\n            -\n                in: path\n                name: param\n                description: ''\n                example: '4'\n                required: true\n                schema:\n                    type: string\n            -\n                in: path\n                name: param2\n                description: ''\n                required: true\n                schema:\n                    type: string\n                example: consequatur\n            -\n                in: path\n                name: param3\n                description: 'Optional parameter.'\n                required: true\n                schema:\n                    type: string\n                examples:\n                    omitted:\n                        summary: 'When the value is omitted'\n                        value: ''\n                    present:\n                        summary: 'When the value is present'\n                        value: consequatur\n            -\n                in: path\n                name: param4\n                description: 'Optional parameter.'\n                required: true\n                schema:\n                    type: string\n                examples:\n                    omitted:\n                        summary: 'When the value is omitted'\n                        value: ''\n    /api/withBodyParametersAsArray:\n        post:\n            summary: 'Endpoint with body parameters as array.'\n            description: ''\n            parameters:\n                - in: header\n                  name: Custom-Header\n                  description: ''\n                  example: NotSoCustom\n                  schema:\n                      type: string\n                - in: header\n                  name: Content-Type\n                  description: ''\n                  example: application/json\n                  schema:\n                      type: string\n            responses: {}\n            tags:\n                - Group A\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: array\n                            description: Details.\n                            example:\n                            - first_name: 'John'\n                              last_name: 'Doe'\n                              contacts:\n                              - first_name: Janelle\n                                last_name: MonÃ¡e\n                              roles: [Admin]\n                            items:\n                                type: object\n                                properties:\n                                    first_name: { type: string, description: 'The first name of the user.', example: John }\n                                    last_name: { type: string, description: 'The last name of the user.', example: Doe }\n                                    contacts: { type: array, description: 'Contact info', example: [ [ ] ], items: { type: object, properties: { first_name: { type: string, description: 'The first name of the contact.', example: Janelle }, last_name: { type: string, description: 'The last name of the contact.', example: MonÃ¡e } }, required: [ first_name, last_name ] } }\n                                    roles: { type: array, description: 'The name of the role.', example: [ Admin ], items: { type: string } }\n                                required:\n                                    - first_name\n                                    - last_name\n                                    - contacts\n                                    - roles\n            security: [ ]\ntags:\n    -\n        name: 'Group A'\n        description: ''\n    -\n        name: OtherðŸ˜Ž\n        description: ''\n\n",
			"canonicalURL": "/github.com/knuckleswtf/scribe@23314038867ee468682209ebd58f632b383d0f11/-/blob/tests/Fixtures/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/knuckleswtf/scribe/blob/23314038867ee468682209ebd58f632b383d0f11/tests/Fixtures/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/withBodyParametersAsArray\": post: at 1:3144: responses: no responses"
}