{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/acquia/cli"
		},
		"file": {
			"name": "acsf-spec.yaml",
			"size": 0,
			"path": "assets/acsf-spec.yaml",
			"byteSize": 163567,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Acquia Site Factory REST API'\n  version: 1.0.0\n  description: 'OpenAPI 3.0 specification for Acquia Site Factory REST API'\npaths:\n  /api/v1/users/all/api-keys:\n    delete:\n      summary: 'Regenerate ALL users API keys'\n      description: 'Regenerate ALL users API keys.'\n      x-cli-name: 'api:regenerate-all-keys'\n      operationId: delete_ApiKey_resetKeys\n      responses:\n        200:\n          description: 'ApiKey_resetKeys response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiKey_resetKeysResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/users/{user_id}/api-keys':\n    delete:\n      summary: 'Regenerate a user''s API key'\n      description: 'Regenerate a user''s API key.'\n      x-cli-name: 'api:regenerate-key'\n      operationId: delete_ApiKey_resetUserKeys\n      parameters:\n        -\n          in: path\n          name: user_id\n          description: 'The user ID of the user.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'ApiKey_resetUserKeys response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiKey_resetUserKeysResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/audit:\n    get:\n      summary: 'List audit events'\n      description: 'Gets a list of audit events.'\n      x-cli-name: 'info:audit-events-find'\n      operationId: get_AuditEvent_getAuditEvents\n      parameters:\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 100).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n        -\n          in: query\n          name: order\n          description: 'Either \"ASC\" or \"DESC\".'\n          schema:\n            type: string\n            pattern: ^(ASC|DESC)$\n          required: false\n        -\n          in: query\n          name: source\n          description: 'The source of the event.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: module\n          description: 'The system name of the module.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: scope\n          description: 'The general scope of the changes.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: type\n          description: 'The specific type of changes.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: nid\n          description: 'An associated node ID.'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: uid\n          description: 'The user who made the change.'\n          schema:\n            type: integer\n          required: false\n      responses:\n        200:\n          description: 'AuditEvent_getAuditEvents response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuditEvent_getAuditEventsResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/centralized-role-management:\n    get:\n      summary: 'Get current centralized role management settings.'\n      description: 'Get current centralized role management settings.'\n      x-cli-name: 'roles:get-mgr'\n      operationId: get_CentralizedRoleManagement_executeGetActions\n      responses:\n        200:\n          description: 'CentralizedRoleManagement_executeGetActions response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CentralizedRoleManagement_executeGetActionsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/centralized-role-management/{factory_role}':\n    put:\n      summary: 'Set the centralized role management settings for a given role.'\n      description: 'Set the centralized role management settings for a given role.'\n      x-cli-name: 'roles:set-mgr'\n      operationId: put_CentralizedRoleManagement_executePutActions\n      parameters:\n        -\n          in: path\n          name: factory_role\n          description: 'The site factory role. Currently the only supported ones are \"content_editor\", \"platform_admin\" and \"site_builder\".'\n          schema:\n            type: string\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                site_role:\n                  description: 'The corresponding role on the site.'\n                  type: string\n              required:\n                - site_role\n      responses:\n        200:\n          description: 'CentralizedRoleManagement_executePutActions response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CentralizedRoleManagement_executePutActionsResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Disable the centralized role management settings for a given role.'\n      description: 'Disable the centralized role management settings for a given role.'\n      x-cli-name: 'roles:disable-mgr'\n      operationId: delete_CentralizedRoleManagement_executeDeleteActions\n      parameters:\n        -\n          in: path\n          name: factory_role\n          description: 'The site factory role. Currently the only supported ones are \"content_editor\", \"platform_admin\" and \"site_builder\".'\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: 'CentralizedRoleManagement_executeDeleteActions response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CentralizedRoleManagement_executeDeleteActionsResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/stacks:\n    get:\n      summary: 'Get list of available stacks.'\n      description: 'Fetches the list of available stacks.'\n      x-cli-name: 'info:stacks-find'\n      operationId: get_CodeBases_getCodeBaseNames\n      responses:\n        200:\n          description: 'CodeBases_getCodeBaseNames response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CodeBases_getCodeBaseNamesResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/cronjobs:\n    post:\n      summary: 'Create a new cron job.'\n      description: 'Create a new cron job.'\n      x-cli-name: 'crons:create'\n      operationId: post_CronJobs_createCronJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: 'The cron job name.'\n                  type: string\n                command:\n                  description: 'The command that should be executed.'\n                  type: string\n                interval:\n                  description: 'A unix cron expression.'\n                  type: string\n                sites_affected:\n                  description: 'Possible values: dev-sites - sites without custom domains, prod-sites - sites with custom domains, all'\n                  type: string\n                enabled:\n                  description: 'If the cron should be enabled.'\n                  type: integer\n                thread_percentage:\n                  description: 'The percentage of cron threads that should be used for this cron. Value has to be an integer between 0 and 100.'\n                  type: integer\n                stacks:\n                  description: 'An array of stack ids for which the cron should be enabled.'\n                  type: array\n                  items:\n                    type: integer\n              required:\n                - name\n                - command\n                - interval\n                - sites_affected\n                - enabled\n                - thread_percentage\n                - stacks\n      responses:\n        200:\n          description: 'CronJobs_createCronJob response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CronJobs_createCronJobResponse'\n        400:\n          description: 'bad input parameter'\n    get:\n      summary: 'Get cron jobs. sites_affected: dev-sites(without custom domains)|prod-sites(with custom domains)|all'\n      description: 'Get all cron jobs (paged).'\n      x-cli-name: 'cron:find-jobs'\n      operationId: get_CronJobs_getCronJobs\n      parameters:\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 1000).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n      responses:\n        200:\n          description: 'CronJobs_getCronJobs response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CronJobs_getCronJobsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/cronjobs/{job_id}':\n    put:\n      summary: 'Edit a cron job.'\n      description: 'Edit a cron job.'\n      x-cli-name: 'crons:edit'\n      operationId: put_CronJobs_editCronJob\n      parameters:\n        -\n          in: path\n          name: job_id\n          description: 'Cron job id.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: 'The cron job name.'\n                  type: string\n                command:\n                  description: 'The command that should be executed.'\n                  type: string\n                interval:\n                  description: 'A unix cron expression.'\n                  type: string\n                sites_affected:\n                  description: 'Possible values: dev-sites - sites without custom domains, prod-sites - sites with custom domains, all'\n                  type: string\n                enabled:\n                  description: 'If the cron should be enabled.'\n                  type: integer\n                thread_percentage:\n                  description: 'The percentage of cron threads that should be used for this cron. Value has to be an integer between 0 and 100.'\n                  type: integer\n                stacks:\n                  description: 'An array of stack ids for which the cron should be enabled.'\n                  type: array\n                  items:\n                    type: integer\n              required:\n                - name\n                - command\n                - interval\n                - sites_affected\n                - enabled\n                - thread_percentage\n                - stacks\n      responses:\n        200:\n          description: 'CronJobs_editCronJob response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CronJobs_editCronJobResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Delete a cron job.'\n      description: 'Delete a cron job.'\n      x-cli-name: 'crons:delete'\n      operationId: delete_CronJobs_deleteCronJob\n      parameters:\n        -\n          in: path\n          name: job_id\n          description: 'Cron job id.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'CronJobs_deleteCronJob response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CronJobs_deleteCronJobResponse'\n        400:\n          description: 'bad input parameter'\n    get:\n      summary: 'Get cron job'\n      description: 'Get cron job by its id.'\n      x-cli-name: 'cron:get-job'\n      operationId: get_CronJobs_getCronJob\n      parameters:\n        -\n          in: path\n          name: job_id\n          description: 'Cron job id'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'CronJobs_getCronJob response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CronJobs_getCronJobResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/domains/{node_id}':\n    get:\n      summary: 'Get domains'\n      description: 'Get domains by node ID.'\n      x-cli-name: 'domains:get'\n      operationId: get_Domains_getDomains\n      parameters:\n        -\n          in: path\n          name: node_id\n          description: 'Site node id.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Domains_getDomains response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domains_getDomainsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/domains/status/{domain_name}':\n    get:\n      summary: 'Get domain status'\n      description: 'Get domain status.'\n      x-cli-name: 'domains:get-status'\n      operationId: get_Domains_getDomainStatus\n      parameters:\n        -\n          in: path\n          name: domain_name\n          description: 'The domain name.'\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: 'Domains_getDomainStatus response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domains_getDomainStatusResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/domains/{node_id}/add':\n    post:\n      summary: 'Add domain'\n      description: 'Adds a domain.'\n      x-cli-name: 'domains:add'\n      operationId: post_Domains_addDomain\n      parameters:\n        -\n          in: path\n          name: node_id\n          description: 'Site node id.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain_name:\n                  description: 'The domain name to add.'\n                  type: string\n              required:\n                - domain_name\n      responses:\n        200:\n          description: 'Domains_addDomain response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domains_addDomainResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/domains/{node_id}/remove':\n    post:\n      summary: 'Remove domain'\n      description: 'Removes a domain.'\n      x-cli-name: 'domains:remove'\n      operationId: post_Domains_removeDomain\n      parameters:\n        -\n          in: path\n          name: node_id\n          description: 'Site node id.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain_name:\n                  description: 'The domain name to remove.'\n                  type: string\n              required:\n                - domain_name\n      responses:\n        200:\n          description: 'Domains_removeDomain response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Domains_removeDomainResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/factory-standard-domains:\n    post:\n      summary: 'Backfill the current factory standard domain templates.'\n      description: 'Backfill the current factory standard domain templates.'\n      x-cli-name: 'domains:backfill-std'\n      operationId: post_FactoryStandardDomains_backfillFactoryStandardDomains\n      responses:\n        200:\n          description: 'FactoryStandardDomains_backfillFactoryStandardDomains response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FactoryStandardDomains_backfillFactoryStandardDomainsResponse'\n        400:\n          description: 'bad input parameter'\n    get:\n      summary: 'Get the current factory standard domain templates.'\n      description: 'Get the current factory standard domain templates.'\n      x-cli-name: 'domains:get-std-templates'\n      operationId: get_FactoryStandardDomains_getFactoryStandardDomains\n      responses:\n        200:\n          description: 'FactoryStandardDomains_getFactoryStandardDomains response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FactoryStandardDomains_getFactoryStandardDomainsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/factory-standard-domains/{template_name}':\n    put:\n      summary: 'Set the factory standard domain template.'\n      description: 'Set the factory standard domain template.'\n      x-cli-name: 'domains:set-std-templates'\n      operationId: put_FactoryStandardDomains_setFactoryStandardDomains\n      parameters:\n        -\n          in: path\n          name: template_name\n          description: 'The template name to change. Currently the only supported ones are \"site_prod\", \"site_nonprod\", \"collection_prod\" and \"collection_nonprod\".'\n          schema:\n            type: string\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_template:\n                  description: 'The new template.'\n                  type: array\n                  items:\n                    type: string\n              required:\n                - new_template\n      responses:\n        200:\n          description: 'FactoryStandardDomains_setFactoryStandardDomains response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FactoryStandardDomains_setFactoryStandardDomainsResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Remove the factory standard domain template.'\n      description: 'Remove the factory standard domain template.'\n      x-cli-name: 'domains:remove-std-templates'\n      operationId: delete_FactoryStandardDomains_removeFactoryStandardDomains\n      parameters:\n        -\n          in: path\n          name: template_name\n          description: 'The template name to remove. Currently the only supported ones are \"site_prod\", \"site_nonprod\", \"collection_prod\" and \"collection_nonprod\".'\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: 'FactoryStandardDomains_removeFactoryStandardDomains response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FactoryStandardDomains_removeFactoryStandardDomainsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/groups/{group_id}/members':\n    get:\n      summary: 'List group members'\n      description: 'Get the members of a group.'\n      x-cli-name: 'groups:find-members'\n      operationId: get_Groups_getMembers\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 1000).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n      responses:\n        200:\n          description: 'Groups_getMembers response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_getMembersResponse'\n        400:\n          description: 'bad input parameter'\n    post:\n      summary: 'Add members to a group'\n      description: 'Add members to a group.'\n      x-cli-name: 'groups:add-members'\n      operationId: post_Groups_addMembers\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                uids:\n                  description: 'A single user ID, or an array of user IDs.'\n                  oneOf:\n                    -\n                      type: integer\n                    -\n                      type: array\n                      items:\n                        type: integer\n              required:\n                - uids\n      responses:\n        200:\n          description: 'Groups_addMembers response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_addMembersResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Remove members from a group'\n      description: 'Remove members from a group.'\n      x-cli-name: 'groups:remove-members'\n      operationId: delete_Groups_removeMembers\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: uids\n          description: 'A single user ID, or an array of user IDs.'\n          schema:\n            oneOf:\n              -\n                type: integer\n              -\n                type: array\n                items:\n                  type: integer\n          required: true\n      responses:\n        200:\n          description: 'Groups_removeMembers response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_removeMembersResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/groups/{group_id}':\n    get:\n      summary: 'Get a group'\n      description: 'Get a group by group ID.'\n      x-cli-name: 'groups:get'\n      operationId: get_Groups_getGroupById\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Groups_getGroupById response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_getGroupByIdResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Delete a group'\n      description: 'Delete a site group.'\n      x-cli-name: 'groups:delete'\n      operationId: delete_Groups_deleteGroup\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Groups_deleteGroup response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_deleteGroupResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/groups:\n    get:\n      summary: 'List groups'\n      description: 'Get a list of groups.'\n      x-cli-name: 'groups:find'\n      operationId: get_Groups_getGroups\n      parameters:\n        -\n          in: query\n          name: limit\n          description: 'A positive integer not higher than 100.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n      responses:\n        200:\n          description: 'Groups_getGroups response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_getGroupsResponse'\n        400:\n          description: 'bad input parameter'\n    post:\n      summary: 'Create a group'\n      description: 'Create a site group.'\n      x-cli-name: 'groups:create'\n      operationId: post_Groups_createGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                group_name:\n                  description: 'The name of the site group to create.'\n                  type: string\n                parent_id:\n                  description: 'The parent group ID, if applicable.'\n                  type: integer\n              required:\n                - group_name\n      responses:\n        200:\n          description: 'Groups_createGroup response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_createGroupResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/groups/{group_id}/update':\n    put:\n      summary: 'Edit a group'\n      description: 'Edit a group.'\n      x-cli-name: 'groups:edit'\n      operationId: put_Groups_editGroup\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group ID.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                group_name:\n                  description: 'New name for the group.'\n                  type: string\n              required:\n                - group_name\n      responses:\n        200:\n          description: 'Groups_editGroup response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_editGroupResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/groups/{group_id}/admins':\n    post:\n      summary: 'Make members group admin'\n      description: 'Make members group admin.'\n      x-cli-name: 'groups:make-members-admins'\n      operationId: post_Groups_addAdmins\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                uids:\n                  description: 'A single user ID, or an array of user IDs.'\n                  oneOf:\n                    -\n                      type: integer\n                    -\n                      type: array\n                      items:\n                        type: integer\n              required:\n                - uids\n      responses:\n        200:\n          description: 'Groups_addAdmins response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_addAdminsResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Remove group admin from members'\n      description: 'Remove group admin from members.'\n      x-cli-name: 'groups:remove-admins'\n      operationId: delete_Groups_removeAdmins\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: uids\n          description: 'A single user ID, or an array of user IDs.'\n          schema:\n            oneOf:\n              -\n                type: integer\n              -\n                type: array\n                items:\n                  type: integer\n          required: true\n      responses:\n        200:\n          description: 'Groups_removeAdmins response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_removeAdminsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/groups/{group_id}/sites':\n    post:\n      summary: 'Add site(s) to a site group.'\n      description: 'Add site(s) to a site group.'\n      x-cli-name: 'groups:add-sites'\n      operationId: post_Groups_addSites\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                site_ids:\n                  description: 'Either a single site ID, or an array of site IDs.'\n                  oneOf:\n                    -\n                      type: integer\n                    -\n                      type: array\n                      items:\n                        type: integer\n              required:\n                - site_ids\n      responses:\n        200:\n          description: 'Groups_addSites response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_addSitesResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Remove site(s) from a site group.'\n      description: 'Remove site(s) from a site group.'\n      x-cli-name: 'groups:remove-sites'\n      operationId: delete_Groups_removeSites\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: site_ids\n          description: 'Either a single site ID, or an array of site IDs.'\n          schema:\n            oneOf:\n              -\n                type: integer\n              -\n                type: array\n                items:\n                  type: integer\n          required: true\n      responses:\n        200:\n          description: 'Groups_removeSites response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_removeSitesResponse'\n        400:\n          description: 'bad input parameter'\n    get:\n      summary: 'List sites in a group.'\n      description: 'Get the sites of a group.'\n      x-cli-name: 'groups:find-sites'\n      operationId: get_Groups_getSites\n      parameters:\n        -\n          in: path\n          name: group_id\n          description: 'Group id.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 1000).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n      responses:\n        200:\n          description: 'Groups_getSites response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Groups_getSitesResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/profiles:\n    get:\n      summary: 'List installation profiles.'\n      description: 'List installation profiles.'\n      x-cli-name: 'install-profiles:find'\n      operationId: get_InstallationProfiles_getInstallationProfiles\n      parameters:\n        -\n          in: query\n          name: stack_id\n          description: 'Get only the profiles on the given stack.'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: is_enabled\n          description: 'Get only the enabled/disabled profiles.'\n          schema:\n            type: boolean\n          required: false\n      responses:\n        200:\n          description: 'InstallationProfiles_getInstallationProfiles response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstallationProfiles_getInstallationProfilesResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/profiles/{profile_name}/enable':\n    post:\n      summary: 'Enable installation profile.'\n      description: 'Enable installation profile.'\n      x-cli-name: 'install-profiles:enable'\n      operationId: post_InstallationProfiles_enableProfile\n      parameters:\n        -\n          in: path\n          name: profile_name\n          description: 'The installation profile name.'\n          schema:\n            type: string\n          required: true\n        -\n          in: query\n          name: stack_id\n          description: 'The installation profile''s stack.'\n          schema:\n            type: integer\n          required: false\n      responses:\n        200:\n          description: 'InstallationProfiles_enableProfile response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstallationProfiles_enableProfileResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/profiles/{profile_name}/disable':\n    post:\n      summary: 'Disable installation profile.'\n      description: 'Disable installation profile.'\n      x-cli-name: 'install-profiles:disable'\n      operationId: post_InstallationProfiles_disableProfile\n      parameters:\n        -\n          in: path\n          name: profile_name\n          description: 'The installation profile name.'\n          schema:\n            type: string\n          required: true\n        -\n          in: query\n          name: stack_id\n          description: 'The installation profile''s stack.'\n          schema:\n            type: integer\n          required: false\n      responses:\n        200:\n          description: 'InstallationProfiles_disableProfile response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstallationProfiles_disableProfileResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/profiles/{profile_name}/set_default':\n    post:\n      summary: 'Sets the installation profile as default.'\n      description: 'Sets the installation profile as default.'\n      x-cli-name: 'install-profiles:set-default'\n      operationId: post_InstallationProfiles_setDefault\n      parameters:\n        -\n          in: path\n          name: profile_name\n          description: 'The installation profile name.'\n          schema:\n            type: string\n          required: true\n        -\n          in: query\n          name: stack_id\n          description: 'The installation profile''s stack.'\n          schema:\n            type: integer\n          required: false\n      responses:\n        200:\n          description: 'InstallationProfiles_setDefault response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstallationProfiles_setDefaultResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/dynamic-requests/monthly:\n    get:\n      summary: 'List monthly aggregated dynamic request statistics.'\n      description: 'Gets the monthly aggregated dynamic request statistics.'\n      x-cli-name: 'page-views:aggregated'\n      operationId: get_PageView_getPageViewDataMonthly\n      parameters:\n        -\n          in: query\n          name: stack_id\n          description: 'The stack id for which to fetch the dynamic request statistics. If there is only one stack, this parameter can be omitted.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: start_from\n          description: 'The first date from which to start showing the statistics in the format of YYYY-MM.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: sort_order\n          description: 'The sort order direction. Either asc or desc.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: limit\n          description: 'The number of months to be listed. Maximum value is 120.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 120\n          required: false\n        -\n          in: query\n          name: page\n          description: 'The page number to show in the list.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n      responses:\n        200:\n          description: 'PageView_getPageViewDataMonthly response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PageView_getPageViewDataMonthlyResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/dynamic-requests/monthly/domains:\n    get:\n      summary: 'List monthly dynamic request statistics by domain.'\n      description: 'Gets the monthly dynamic request statistics by domain.'\n      x-cli-name: 'page-views:by-domain'\n      operationId: get_PageView_getPageViewDataMonthlyPerDomain\n      parameters:\n        -\n          in: query\n          name: stack_id\n          description: 'The stack id for which to fetch the dynamic request statistics. If there is only one stack, this parameter can be omitted.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: date\n          description: 'The month in the format of YYYY-MM.'\n          schema:\n            type: string\n          required: true\n        -\n          in: query\n          name: domain_name\n          description: 'Full domain name or a prefix for filtering the results.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: sort_order\n          description: 'The sort order direction. Either asc or desc.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: limit\n          description: 'The number of domains to be listed. (max 100)'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          required: false\n        -\n          in: query\n          name: page\n          description: 'The page number to show in the list.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n      responses:\n        200:\n          description: 'PageView_getPageViewDataMonthlyPerDomain response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PageView_getPageViewDataMonthlyPerDomainResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/pause:\n    post:\n      summary: 'Pause/resume task processing'\n      description: 'Pause or resume task processing.'\n      x-cli-name: 'tasks:pause-all'\n      operationId: post_Pause_pause\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                paused:\n                  description: 'Pauses/resumes the WIP task processing.'\n                  type: boolean\n                reason:\n                  description: 'Brief explanation for pausing workers.'\n                  type: string\n              required:\n                - paused\n      responses:\n        200:\n          description: 'Pause_pause response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pause_pauseResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/pause/{task_id}':\n    post:\n      summary: 'Pause/resume task processing for a specific task'\n      description: 'Pause or resume task processing.'\n      x-cli-name: 'tasks:pause'\n      operationId: post_Pause_pauseTask\n      parameters:\n        -\n          in: path\n          name: task_id\n          description: TaskID.\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                paused:\n                  description: 'Leave the task in paused or unpaused state.'\n                  type: boolean\n                level:\n                  description: 'Pause/unpause just the specified task or all its children (task|family).'\n                  type: string\n                  pattern: ^(task|family)$\n              required:\n                - paused\n      responses:\n        200:\n          description: 'Pause_pauseTask response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pause_pauseTaskResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/ping:\n    get:\n      summary: 'Check service response'\n      description: 'Checks whether the API is responding.'\n      x-cli-name: 'api:ping'\n      operationId: get_Ping_ping\n      responses:\n        200:\n          description: 'Ping_ping response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ping_pingResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/roles:\n    get:\n      summary: 'List roles'\n      description: 'Gets a list of roles.'\n      x-cli-name: 'roles:find'\n      operationId: get_Role_getRoles\n      parameters:\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 100).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n        -\n          in: query\n          name: order\n          description: 'Either \"ASC\" or \"DESC\".'\n          schema:\n            type: string\n            pattern: ^(ASC|DESC)$\n          required: false\n      responses:\n        200:\n          description: 'Role_getRoles response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role_getRolesResponse'\n        400:\n          description: 'bad input parameter'\n    post:\n      summary: 'Create a role'\n      description: 'Create a role.'\n      x-cli-name: 'roles:create'\n      operationId: post_Role_createRole\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: 'The name of the role.'\n                  type: string\n              required:\n                - name\n      responses:\n        200:\n          description: 'Role_createRole response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role_createRoleResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/roles/{role_id}':\n    get:\n      summary: 'Retrieve a role'\n      description: 'Retrieve a role by role ID.'\n      x-cli-name: 'roles:get'\n      operationId: get_Role_getRole\n      parameters:\n        -\n          in: path\n          name: role_id\n          description: 'The role ID of the user role.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Role_getRole response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role_getRoleResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Delete a role'\n      description: 'Delete a role.'\n      x-cli-name: 'roles:delete'\n      operationId: delete_Role_deleteRole\n      parameters:\n        -\n          in: path\n          name: role_id\n          description: 'The role ID of the user role.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Role_deleteRole response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role_deleteRoleResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/roles/{role_id}/update':\n    put:\n      summary: 'Update (rename) a role'\n      description: 'Update (rename) a role.'\n      x-cli-name: 'roles:update'\n      operationId: put_Role_updateRole\n      parameters:\n        -\n          in: path\n          name: role_id\n          description: 'The role ID of the user role.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_name:\n                  description: 'The new name for the user role.'\n                  type: string\n              required:\n                - new_name\n      responses:\n        200:\n          description: 'Role_updateRole response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role_updateRoleResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/sf-info:\n    get:\n      summary: 'Get the version of the Site Factory'\n      description: 'Gets the (release) version the Site Factory is on.'\n      x-cli-name: 'api:factory-version'\n      operationId: get_SfInfo_getSfVersion\n      responses:\n        200:\n          description: 'SfInfo_getSfVersion response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SfInfo_getSfVersionResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/collections:\n    get:\n      summary: 'List site collections'\n      description: 'Gets a list of site collections.'\n      operationId: get_SiteCollections_getCollections\n      parameters:\n        -\n          in: query\n          name: remove_empty\n          description: 'True to only return collections containing active sites.'\n          schema:\n            type: boolean\n          required: false\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 100).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n      responses:\n        200:\n          description: 'SiteCollections_getCollections response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteCollections_getCollectionsResponse'\n        400:\n          description: 'bad input parameter'\n    post:\n      summary: 'Create a site collection'\n      description: 'Create a new site collection.'\n      operationId: post_SiteCollections_createCollection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: 'The name of the new site collection.'\n                  type: string\n                site_ids:\n                  description: 'Either a single site ID, or an array of site IDs.'\n                  oneOf:\n                    -\n                      type: integer\n                    -\n                      type: array\n                      items:\n                        type: integer\n                group_ids:\n                  description: 'Either a single group ID, or an array of group IDs.'\n                  oneOf:\n                    -\n                      type: integer\n                    -\n                      type: array\n                      items:\n                        type: integer\n                internal_domain_prefix:\n                  description: 'The site collection''s internal domain prefix. Uses the \"name\" parameter''s value if not set.'\n                  type: string\n              required:\n                - name\n                - site_ids\n                - group_ids\n      responses:\n        200:\n          description: 'SiteCollections_createCollection response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteCollections_createCollectionResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/collections/{collection_id}':\n    get:\n      summary: 'Site collection details'\n      description: 'Get detailed information about a site collection.'\n      operationId: get_SiteCollections_getCollection\n      parameters:\n        -\n          in: path\n          name: collection_id\n          description: 'Collection ID.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'SiteCollections_getCollection response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteCollections_getCollectionResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Delete a site collection'\n      description: 'Delete a site collection.'\n      operationId: delete_SiteCollections_deleteCollection\n      parameters:\n        -\n          in: path\n          name: collection_id\n          description: 'Collection ID.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'SiteCollections_deleteCollection response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteCollections_deleteCollectionResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/collections/{collection_id}/add':\n    post:\n      summary: 'Add site(s) to a site collection.'\n      description: 'Add site(s) to a site collection.'\n      operationId: post_SiteCollections_addSiteToCollection\n      parameters:\n        -\n          in: path\n          name: collection_id\n          description: 'Collection ID.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                site_ids:\n                  description: 'A site ID or an array of site IDs.'\n                  oneOf:\n                    -\n                      type: integer\n                    -\n                      type: array\n                      items:\n                        type: integer\n              required:\n                - site_ids\n      responses:\n        200:\n          description: 'SiteCollections_addSiteToCollection response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteCollections_addSiteToCollectionResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/collections/{collection_id}/remove':\n    post:\n      summary: 'Remove site(s) from a site collection.'\n      description: 'Remove site(s) from a site collection.'\n      operationId: post_SiteCollections_removeSiteFromCollection\n      parameters:\n        -\n          in: path\n          name: collection_id\n          description: 'Collection ID.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                site_ids:\n                  description: 'A site ID, or an array of site IDs.'\n                  oneOf:\n                    -\n                      type: integer\n                    -\n                      type: array\n                      items:\n                        type: integer\n              required:\n                - site_ids\n      responses:\n        200:\n          description: 'SiteCollections_removeSiteFromCollection response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteCollections_removeSiteFromCollectionResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/collections/{collection_id}/set-primary':\n    post:\n      summary: 'Set the primary site of a site collection.'\n      description: 'Set the primary site of a site collection.'\n      operationId: post_SiteCollections_setPrimarySite\n      parameters:\n        -\n          in: path\n          name: collection_id\n          description: 'Collection ID.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                site_id:\n                  description: 'A single site ID.'\n                  type: integer\n              required:\n                - site_id\n      responses:\n        200:\n          description: 'SiteCollections_setPrimarySite response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteCollections_setPrimarySiteResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/site-guard:\n    get:\n      summary: 'Get current site guard config.'\n      description: 'Get current site guard config.'\n      operationId: get_SiteGuardConfig_getSiteGuardConfig\n      responses:\n        200:\n          description: 'SiteGuardConfig_getSiteGuardConfig response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteGuardConfig_getSiteGuardConfigResponse'\n        400:\n          description: 'bad input parameter'\n    put:\n      summary: 'Enable and set the site guard settings.'\n      description: 'Enable the site guard config.'\n      operationId: put_SiteGuardConfig_setSiteGuardConfig\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message:\n                  description: 'The message which the site guard should output.'\n                  type: string\n                username:\n                  description: 'The username for the site guard.'\n                  type: string\n                password:\n                  description: 'The password for the site guard.'\n                  type: string\n              required:\n                - message\n                - username\n                - password\n      responses:\n        200:\n          description: 'SiteGuardConfig_setSiteGuardConfig response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteGuardConfig_setSiteGuardConfigResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Disable the site guard config.'\n      description: 'Disable the site guard config.'\n      operationId: delete_SiteGuardConfig_removeSiteGuardConfig\n      responses:\n        200:\n          description: 'SiteGuardConfig_removeSiteGuardConfig response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteGuardConfig_removeSiteGuardConfigResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/site-ownership:\n    get:\n      summary: 'Get current site ownership settings.'\n      description: 'Get current site ownership settings.'\n      x-cli-name: 'site-owner:get'\n      operationId: get_SiteOwnership_executeGetActions\n      responses:\n        200:\n          description: 'SiteOwnership_executeGetActions response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteOwnership_executeGetActionsResponse'\n        400:\n          description: 'bad input parameter'\n    put:\n      summary: 'Set the site ownership settings.'\n      description: 'Set the site ownership settings.'\n      x-cli-name: 'site-owner:set'\n      operationId: put_SiteOwnership_executePutActions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  description: 'The default owner username. The user has to have the \"Platform admin\" role.'\n                  type: string\n              required:\n                - username\n      responses:\n        200:\n          description: 'SiteOwnership_executePutActions response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteOwnership_executePutActionsResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Delete the site ownership settings.'\n      description: 'Delete the site ownership settings.'\n      x-cli-name: 'site-owner:delete'\n      operationId: delete_SiteOwnership_executeDeleteActions\n      responses:\n        200:\n          description: 'SiteOwnership_executeDeleteActions response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteOwnership_executeDeleteActionsResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/site-update-priority:\n    get:\n      summary: 'Get current site update priority.'\n      description: 'Get current site update priority.'\n      operationId: get_SiteUpdatePriority_getSiteUpdatePriority\n      responses:\n        200:\n          description: 'SiteUpdatePriority_getSiteUpdatePriority response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteUpdatePriority_getSiteUpdatePriorityResponse'\n        400:\n          description: 'bad input parameter'\n    put:\n      summary: 'Set the site update priority.'\n      description: 'Set the site update priority.'\n      operationId: put_SiteUpdatePriority_setSiteUpdatePriority\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                priority:\n                  description: 'An array of site node ids in the desired update order.'\n                  type: array\n                  items:\n                    type: integer\n              required:\n                - priority\n      responses:\n        200:\n          description: 'SiteUpdatePriority_setSiteUpdatePriority response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteUpdatePriority_setSiteUpdatePriorityResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Reset the site update priority.'\n      description: 'Reset the site update priority.'\n      operationId: delete_SiteUpdatePriority_resetSiteUpdatePriority\n      responses:\n        200:\n          description: 'SiteUpdatePriority_resetSiteUpdatePriority response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SiteUpdatePriority_resetSiteUpdatePriorityResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/sites:\n    get:\n      summary: 'List sites'\n      description: 'Gets a list of sites.'\n      x-cli-name: 'sites:find'\n      operationId: get_Sites_getSites\n      parameters:\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 1000).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n        -\n          in: query\n          name: canary\n          description: 'No value necessary.'\n          schema:\n            type: boolean\n          required: false\n        -\n          in: query\n          name: show_incomplete\n          description: 'Show sites that are incomplete.'\n          schema:\n            type: boolean\n          required: false\n        -\n          in: query\n          name: stack_id\n          description: 'Show sites on a specific stack.'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: domain_contains\n          description: 'Show sites whose domain contains this value.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: domain_not_contains\n          description: 'Show sites whose domain does not contain this value.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: has_custom_domain\n          description: 'Whether to only show sites with custom domains.'\n          schema:\n            type: boolean\n          required: false\n        -\n          in: query\n          name: site_owner\n          description: 'Either a user id or a comma separated list of user ids.'\n          schema:\n            type: array\n            items:\n              type: integer\n          required: false\n        -\n          in: query\n          name: show_custom_domain\n          description: 'Return the first custom domain if the site has one instead of the internal one.'\n          schema:\n            type: boolean\n          required: false\n      responses:\n        200:\n          description: 'Sites_getSites response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_getSitesResponse'\n        400:\n          description: 'bad input parameter'\n    post:\n      summary: 'Create a site'\n      description: 'Create a new site.'\n      x-cli-name: 'sites:create'\n      operationId: post_Sites_createSite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                site_name:\n                  description: 'The new site name.'\n                  type: string\n                group_ids:\n                  description: 'Either a single group ID, or an array of group IDs.'\n                  type: array\n                  items:\n                    type: integer\n                install_profile:\n                  description: 'The install profile to be used to install the site.'\n                  type: string\n                stack_id:\n                  description: 'The stack id where the site should go.'\n                  type: integer\n              required:\n                - site_name\n      responses:\n        200:\n          description: 'Sites_createSite response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_createSiteResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}':\n    get:\n      summary: 'Site details'\n      description: 'Get detailed information about a site.'\n      x-cli-name: 'sites:get'\n      operationId: get_Sites_getSite\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Sites_getSite response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_getSiteResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Site delete'\n      description: 'Delete a site.'\n      x-cli-name: 'sites:delete'\n      operationId: delete_Sites_deleteSite\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Sites_deleteSite response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_deleteSiteResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/duplicate':\n    post:\n      summary: 'Duplicate a site'\n      description: 'Duplicate a site.'\n      x-cli-name: 'sites:duplicate'\n      operationId: post_Sites_duplicateSite\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                site_name:\n                  description: 'The new site name.'\n                  type: string\n                group_ids:\n                  description: 'Either a single group ID, or an array of group IDs.'\n                  type: array\n                  items:\n                    type: integer\n                exact_copy:\n                  description: 'A boolean indicating whether or not to create an exact copy.'\n                  type: boolean\n              required:\n                - site_name\n      responses:\n        200:\n          description: 'Sites_duplicateSite response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_duplicateSiteResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/backup':\n    post:\n      summary: 'Create a site backup'\n      description: 'Create a site backup.'\n      x-cli-name: 'sites:backup'\n      operationId: post_Sites_backupSite\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                label:\n                  description: 'The human-readable description of this backup.'\n                  type: string\n                callback_url:\n                  description: 'The callback URL, which is invoked upon completion.'\n                  type: string\n                callback_method:\n                  description: 'The callback method, \"GET\", or \"POST\". Uses \"POST\" if empty.'\n                  type: string\n                caller_data:\n                  description: 'Data that should be included in the callback, json encoded.'\n                  type: string\n                components:\n                  description: 'Array of components to be included in the backup. The following component names are accepted: codebase, database, public files, private files, themes. When omitting this parameter it will default to a backup with every component.'\n                  type: array\n                  items:\n                    type: string\n      responses:\n        200:\n          description: 'Sites_backupSite response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_backupSiteResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/backups':\n    get:\n      summary: 'List site backups'\n      description: \"List site backups.\\n\\n Note that the results are sorted from newest backup to oldest.\"\n      x-cli-name: 'sites:find-backups'\n      operationId: get_Sites_getSiteBackups\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 100).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n      responses:\n        200:\n          description: 'Sites_getSiteBackups response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_getSiteBackupsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/backups/{backup_id}/url':\n    get:\n      summary: 'Get a temporary site backup URL'\n      description: 'Get temporary site backup URL.'\n      x-cli-name: 'sites:backup-url'\n      operationId: get_Sites_getSiteBackupUrl\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n        -\n          in: path\n          name: backup_id\n          description: 'Backup ID'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: lifetime\n          description: 'The number of seconds the temporary URL is good for.'\n          schema:\n            type: integer\n          required: false\n      responses:\n        200:\n          description: 'Sites_getSiteBackupUrl response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_getSiteBackupUrlResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/backups/{backup_id}':\n    delete:\n      summary: 'Delete a site backup'\n      description: 'Delete a site backup.'\n      x-cli-name: 'sites:delete-backup'\n      operationId: delete_Sites_deleteSiteBackup\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n        -\n          in: path\n          name: backup_id\n          description: 'Backup ID'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: callback_url\n          description: 'The callback URL, which is invoked upon completion.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: callback_method\n          description: 'The callback method, \"GET\", or \"POST\". Uses \"POST\" if empty.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: caller_data\n          description: 'Data that should be included in the callback, json encoded.'\n          schema:\n            type: string\n          required: false\n      responses:\n        200:\n          description: 'Sites_deleteSiteBackup response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_deleteSiteBackupResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/restore':\n    post:\n      summary: 'Restore a site backup'\n      description: 'Restore a site backup.'\n      x-cli-name: 'sites:restore-backup'\n      operationId: post_Sites_restoreSite\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                target_site_id:\n                  description: 'ID of the site to restore the backup onto.'\n                  type: integer\n                backup_id:\n                  description: 'ID of the backup to restore defaults to the most recent.'\n                  type: integer\n                callback_url:\n                  description: 'The callback URL, which is invoked upon completion.'\n                  type: string\n                callback_method:\n                  description: 'The callback method, \"GET\", or \"POST\". Uses \"POST\" if empty.'\n                  type: string\n                caller_data:\n                  description: 'Data that should be included in the callback, json encoded.'\n                  type: string\n                components:\n                  description: 'Array of components to be restored from the backup. The following component names are accepted: database, public files, private files, themes. When omitting this parameter it will default to the backup''s every component.'\n                  type: array\n                  items:\n                    type: string\n      responses:\n        200:\n          description: 'Sites_restoreSite response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_restoreSiteResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/cache-clear':\n    post:\n      summary: 'Clear a site''s caches'\n      description: 'Clear Drupal and Varnish caches for a site.'\n      x-cli-name: 'sites:clear-cache'\n      operationId: post_Sites_clearCaches\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Sites_clearCaches response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sites_clearCachesResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v2/stage:\n    get:\n      summary: 'Retrieve available environments'\n      description: 'Retrieves available environments user can stage to.'\n      x-cli-name: 'stage-v2:find-envs'\n      operationId: get_StageV2_stagingEnvironments\n      responses:\n        200:\n          description: 'StageV2_stagingEnvironments response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StageV2_stagingEnvironmentsResponse'\n        400:\n          description: 'bad input parameter'\n    post:\n      summary: 'Start staging process'\n      description: 'Starts the staging process.'\n      x-cli-name: 'stage-v2:start'\n      operationId: post_StageV2_stage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                to_env:\n                  description: 'Environment to deploy to.'\n                  type: string\n                sites:\n                  description: 'Node IDs of sites to deploy.'\n                  type: array\n                  items:\n                    type: integer\n                wipe_target_environment:\n                  description: 'Use this option to wipe the management console and all stacks on the selected environment before deploying sites.'\n                  type: boolean\n                wipe_stacks:\n                  description: 'Stack ids to wipe. It will be ignored if wipe_target_environment is true.'\n                  type: array\n                  items:\n                    type: integer\n                synchronize_all_users:\n                  description: 'Use this parameter to only stage the user accounts that are required for the provided sites and the related site collections and site groups.'\n                  type: boolean\n                detailed_status:\n                  description: 'Provide a status email for each site as it completes.'\n                  type: boolean\n                skip_site_files:\n                  description: 'Skip copying the staged down sites'' files.'\n                  type: boolean\n                skip_site_files_overwrite:\n                  description: 'File patterns to skip copying during the stage down process. Ignored if skip_site_files is false.'\n                  type: array\n                  items:\n                    type: string\n              required:\n                - to_env\n      responses:\n        200:\n          description: 'StageV2_stage response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StageV2_stageResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/status:\n    get:\n      summary: 'Get service status information'\n      description: 'Get a service status report.'\n      x-cli-name: 'service-status:get'\n      operationId: get_Status_getStatus\n      responses:\n        200:\n          description: 'Status_getStatus response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status_getStatusResponse'\n        400:\n          description: 'bad input parameter'\n    put:\n      summary: 'Modify service status'\n      description: 'Modify the status of the services.'\n      x-cli-name: 'service-status:modify'\n      operationId: put_Status_setStatus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                all:\n                  description: 'on, off, or something strtotime accepts'\n                  type: string\n                site_creation:\n                  description: 'on, off, or something strtotime accepts'\n                  type: string\n                site_duplication:\n                  description: 'on, off, or something strtotime accepts'\n                  type: string\n                domain_management:\n                  description: 'on, off, or something strtotime accepts'\n                  type: string\n                bulk_operations:\n                  description: 'on, off, or something strtotime accepts'\n                  type: string\n      responses:\n        200:\n          description: 'Status_setStatus response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status_setStatusResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/classes/{type}':\n    get:\n      summary: '(Internal use only) Get Task class information.'\n      description: 'Return data about WIP classes'\n      x-cli-name: 'tasks:find-wip-classes'\n      x-internal: true\n      operationId: get_Task_classes\n      parameters:\n        -\n          in: path\n          name: type\n          description: 'Either \"softpaused\" or \"softpause-for-update\"'\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: 'Task_classes response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task_classesResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/tasks:\n    get:\n      summary: '(Internal use only) Get Task information.'\n      description: 'Returns data about WIP tasks.'\n      x-cli-name: 'tasks:get'\n      x-internal: true\n      operationId: get_Task_tasks\n      parameters:\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 100).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n        -\n          in: query\n          name: status\n          description: 'processing, error or not-started'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: class\n          description: 'A WIP class name to filter on.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: group\n          description: 'A WIP group name to filter on.'\n          schema:\n            type: string\n          required: false\n      responses:\n        200:\n          description: 'Task_tasks response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task_tasksResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/tasks/{task_id}/logs':\n    get:\n      summary: '(Internal use only) Get Task log information.'\n      description: 'Returns log entries about WIP tasks.'\n      x-cli-name: 'tasks:log'\n      x-internal: true\n      operationId: get_Task_logs\n      parameters:\n        -\n          in: path\n          name: task_id\n          description: 'Task ID.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: level\n          description: 'The minimum status level to display'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: descendants\n          description: 'Include the logs of all descendant tasks.'\n          schema:\n            type: boolean\n          required: false\n      responses:\n        200:\n          description: 'Task_logs response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task_logsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/tasks/{task_id}':\n    delete:\n      summary: 'Delete tasks from the work pool.'\n      description: 'Delete a task and its descendants.'\n      x-cli-name: 'tasks:delete'\n      operationId: delete_Task_delete\n      parameters:\n        -\n          in: path\n          name: task_id\n          description: 'Task ID.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Task_delete response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task_deleteResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/tasks/{task_id}/terminate':\n    put:\n      summary: 'Terminate tasks in the work pool.'\n      description: 'Terminate a task and its descendants.'\n      x-cli-name: 'tasks:terminate'\n      operationId: put_Task_terminate\n      parameters:\n        -\n          in: path\n          name: task_id\n          description: 'Task ID.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Task_terminate response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task_terminateResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/task-log-settings:\n    get:\n      summary: 'Get current task log settings.'\n      description: 'Get current task log settings.'\n      x-cli-name: 'tasks:get-task-log-settings'\n      operationId: get_TaskLogSettings_getTaskLogSettings\n      responses:\n        200:\n          description: 'TaskLogSettings_getTaskLogSettings response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskLogSettings_getTaskLogSettingsResponse'\n        400:\n          description: 'bad input parameter'\n    put:\n      summary: 'Edit current task log settings.'\n      description: 'Edit task log settings.'\n      x-cli-name: 'tasks:set-task-log-settings'\n      operationId: put_TaskLogSettings_editTaskLogSettings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                wip_log_level:\n                  description: 'Level of Wip log messages to keep on successful completion.'\n                  type: string\n                wip_log_maximum_level:\n                  description: 'The maximum log level that will be written to the log.'\n                  type: string\n      responses:\n        200:\n          description: 'TaskLogSettings_editTaskLogSettings response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskLogSettings_editTaskLogSettingsResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Reset task log settings.'\n      description: 'Reset task log settings.'\n      x-cli-name: 'tasks:reset-task-log-settings'\n      operationId: delete_TaskLogSettings_resetTaskLogSettings\n      responses:\n        200:\n          description: 'TaskLogSettings_resetTaskLogSettings response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskLogSettings_resetTaskLogSettingsResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/theme/deploy-key:\n    get:\n      summary: 'External theme repository deploy key'\n      description: \"Gets the deploy key that needs to be added to external theme repositories.\\n\\n Add this deploy key to your theme repositories, so that the Acquia Cloud\\n Site Factory platform gets access to your repository and is able to deploy\\n updated themes to your sites.\"\n      x-cli-name: 'themes:key'\n      operationId: get_Theme_getThemePublicKey\n      responses:\n        200:\n          description: 'Theme_getThemePublicKey response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Theme_getThemePublicKeyResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/theme/process:\n    post:\n      summary: 'Process theme modifications'\n      description: 'Processes the stored theme change notifications.'\n      x-cli-name: 'themes:process-notifications'\n      operationId: post_Theme_processThemes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                sitegroup_id:\n                  description: 'The ID of a specific sitegroup to process e.g. \"tangle001\".'\n                  type: string\n      responses:\n        200:\n          description: 'Theme_processThemes response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Theme_processThemesResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/external-theme-refresh':\n    post:\n      summary: 'Site external theme refresh'\n      description: 'Refreshes the site''s themes from the external theme repository.'\n      x-cli-name: 'themes:refresh'\n      operationId: post_Theme_refreshSiteExternalThemes\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Theme_refreshSiteExternalThemes response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Theme_refreshSiteExternalThemesResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/sites/{site_id}/external-theme':\n    put:\n      summary: 'Set site external theme'\n      description: 'Sets the site''s external theme data.'\n      x-cli-name: 'themes:link-vcs'\n      operationId: put_Theme_setSiteExternalTheme\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                vcs_url:\n                  description: 'The external theme repository''s url.'\n                  type: string\n                vcs_path:\n                  description: 'The VCS path to use.'\n                  type: string\n              required:\n                - vcs_path\n      responses:\n        200:\n          description: 'Theme_setSiteExternalTheme response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Theme_setSiteExternalThemeResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Delete site external theme'\n      description: 'Deletes the site''s external theme data.'\n      x-cli-name: 'themes:unlink-vcs'\n      operationId: delete_Theme_deleteSiteExternalTheme\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'Theme_deleteSiteExternalTheme response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Theme_deleteSiteExternalThemeResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/theme/notification:\n    post:\n      summary: 'Send a theme notification'\n      description: 'Sends a theme event notification.'\n      x-cli-name: 'themes:send-notification'\n      operationId: post_ThemeNotification_handleNotification\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                scope:\n                  description: 'The scope. Either \"theme\", \"site\", \"group\", or \"global\".'\n                  type: string\n                  pattern: ^(theme|site|group|global)$\n                event:\n                  description: 'The type of theme event. Either \"create\", \"modify\", or \"delete\".'\n                  type: string\n                  pattern: ^(create|modify|delete)$\n                nid:\n                  description: 'The node ID of the related entity (site or group). Not relevant for the \"global\" scope.'\n                  type: integer\n                theme:\n                  description: 'The system name of the theme. Only relevant for \"theme\" scope notifications.'\n                  type: string\n                uid:\n                  description: 'The user id owning the notification and who should get notified if an error occurs during processing.'\n                  type: integer\n              required:\n                - scope\n                - event\n      responses:\n        200:\n          description: 'ThemeNotification_handleNotification response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThemeNotification_handleNotificationResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/site-ownership/{site_id}':\n    post:\n      summary: 'Transfer the site ownership.'\n      description: 'Transfer the site ownership.'\n      x-cli-name: 'site-owner:transfer'\n      operationId: post_TransferSiteOwnership_transferSiteOwner\n      parameters:\n        -\n          in: path\n          name: site_id\n          description: 'Site ID'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  description: 'New owner username to which site needs to be transferred (either username or email field is required).'\n                  type: string\n                email:\n                  description: 'New owner email id to which site needs to be transferred.'\n                  type: string\n                force_transfer:\n                  description: 'Transfer site ownership without mail confirmation from owner and recipient.'\n                  type: boolean\n      responses:\n        200:\n          description: 'TransferSiteOwnership_transferSiteOwner response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferSiteOwnership_transferSiteOwnerResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/update:\n    post:\n      summary: 'Start an update'\n      description: 'Start the update process.'\n      x-cli-name: 'updates:start'\n      operationId: post_Update_update\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                scope:\n                  description: 'Either \"sites\", \"factory\", or \"both\".'\n                  type: string\n                start_time:\n                  description: 'A start time string, parseable by strtotime(). Interpreted as UTC if no timezone is specified.'\n                  type: string\n                sites_ref:\n                  description: 'A VCS ref to deploy to the sites.'\n                  type: string\n                factory_ref:\n                  description: 'A VCS ref to deploy to the Factory.'\n                  type: string\n                sites_type:\n                  description: 'Either \"code\", \"code, db\", or \"code, db, registry\"'\n                  type: string\n                factory_type:\n                  description: 'Either \"code\" or \"code, db\"'\n                  type: string\n                stack_id:\n                  description: 'The stack id to release to.'\n                  type: integer\n                site_update_fail_action:\n                  description: 'Action to be performed on sites when updates fail. Either \"online\" or \"offline\"'\n                  type: string\n                db_update_arguments:\n                  description: 'Custom arguments to supply to the db-update hooks. Space separated alphanumeric characters only.'\n                  type: string\n      responses:\n        200:\n          description: 'Update_update response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Update_updateResponse'\n        400:\n          description: 'bad input parameter'\n    get:\n      summary: 'List updates'\n      description: ''\n      x-cli-name: 'updates:find'\n      operationId: get_Update_updateList\n      responses:\n        200:\n          description: 'Update_updateList response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Update_updateListResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/update/{update_id}/status':\n    get:\n      summary: 'Get update progress'\n      description: 'Gets the status of a running update process.'\n      x-cli-name: 'updates:status'\n      operationId: get_Update_status\n      parameters:\n        -\n          in: path\n          name: update_id\n          description: 'Either int value or ''last''.'\n          schema:\n            oneOf:\n              -\n                type: integer\n              -\n                type: string\n          required: true\n      responses:\n        200:\n          description: 'Update_status response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Update_statusResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/update/pause:\n    post:\n      summary: 'Pause an update'\n      description: 'Pause a running update process.'\n      x-cli-name: 'updates:pause'\n      operationId: post_Update_pauseUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pause:\n                  description: 'leave the task in paused or unpaused state.'\n                  type: boolean\n              required:\n                - pause\n      responses:\n        200:\n          description: 'Update_pauseUpdate response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Update_pauseUpdateResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/users:\n    get:\n      summary: 'List users'\n      description: 'Gets a list of users.'\n      x-cli-name: 'users:find'\n      operationId: get_User_getUsers\n      parameters:\n        -\n          in: query\n          name: limit\n          description: 'A positive integer (max 100).'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          required: false\n        -\n          in: query\n          name: page\n          description: 'A positive integer.'\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n        -\n          in: query\n          name: order\n          description: 'Either \"ASC\" or \"DESC\".'\n          schema:\n            type: string\n            pattern: ^(ASC|DESC)$\n          required: false\n        -\n          in: query\n          name: ids\n          description: 'A comma-separated list of user IDs.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: role_ids\n          description: 'A comma-separated list of role IDs.'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: status\n          description: 'Either \"active\" or \"blocked\".'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: uid_min\n          description: 'First uid value to start with.'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: uid_max\n          description: 'Last uid value to fetch.'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: created_min\n          description: 'Lowest ''created'' value (timestamp).'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: created_max\n          description: 'Highest ''created'' value (timestamp).'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: login_min\n          description: 'Lowest ''login'' value (timestamp).'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: login_max\n          description: 'Highest ''login'' value (timestamp).'\n          schema:\n            type: integer\n          required: false\n        -\n          in: query\n          name: tfa_status\n          description: 'Either \"active\" or \"disabled\".'\n          schema:\n            type: string\n          required: false\n        -\n          in: query\n          name: fields\n          description: 'A comma-separated list of Drupal user fields.'\n          schema:\n            type: string\n          required: false\n      responses:\n        200:\n          description: 'User_getUsers response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User_getUsersResponse'\n        400:\n          description: 'bad input parameter'\n    post:\n      summary: 'Create a user'\n      description: 'Create a user.'\n      x-cli-name: 'users:create'\n      operationId: post_User_createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: 'The name of the user.'\n                  type: string\n                mail:\n                  description: 'The email address of the user.'\n                  type: string\n                pass:\n                  description: 'The user''s password. (Included in the response, if not provided.)'\n                  type: string\n                status:\n                  description: 'The user''s status, either 0 or 1.'\n                  type: integer\n                roles:\n                  description: 'Either a single role name, or an array of role names.'\n                  oneOf:\n                    -\n                      type: string\n                    -\n                      type: array\n                      items:\n                        type: string\n              required:\n                - name\n                - mail\n      responses:\n        200:\n          description: 'User_createUser response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User_createUserResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/users/{user_id}':\n    get:\n      summary: 'Retrieve a user'\n      description: 'Retrieve a user by user ID.'\n      x-cli-name: 'users:get'\n      operationId: get_User_getUser\n      parameters:\n        -\n          in: path\n          name: user_id\n          description: 'The user ID of the user.'\n          schema:\n            type: integer\n          required: true\n        -\n          in: query\n          name: fields\n          description: 'A comma-separated list of fields to retrieve.'\n          schema:\n            type: string\n          required: false\n      responses:\n        200:\n          description: 'User_getUser response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User_getUserResponse'\n        400:\n          description: 'bad input parameter'\n    delete:\n      summary: 'Delete a user'\n      description: 'Delete a user.'\n      x-cli-name: 'users:delete'\n      operationId: delete_User_deleteUser\n      parameters:\n        -\n          in: path\n          name: user_id\n          description: 'The user ID of the user.'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'User_deleteUser response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User_deleteUserResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/users/{user_id}/update':\n    put:\n      summary: 'Update a user'\n      description: 'Update a user.'\n      x-cli-name: 'users:update'\n      operationId: put_User_updateUser\n      parameters:\n        -\n          in: path\n          name: user_id\n          description: 'The user ID of the user.'\n          schema:\n            type: integer\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: 'The name of the user.'\n                  type: string\n                mail:\n                  description: 'The email address of the user.'\n                  type: string\n                pass:\n                  description: 'The user''s password.'\n                  type: string\n                status:\n                  description: 'The user''s status, either 0 or 1.'\n                  type: integer\n                  minimum: 0\n                  maximum: 1\n                roles:\n                  description: 'Single role name, or an array of them.'\n                  oneOf:\n                    -\n                      type: string\n                    -\n                      type: array\n                      items:\n                        type: string\n                tfa_status:\n                  description: 'The user''s TFA status, either 0 or 1.'\n                  type: integer\n                  minimum: 0\n                  maximum: 1\n      responses:\n        200:\n          description: 'User_updateUser response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User_updateUserResponse'\n        400:\n          description: 'bad input parameter'\n  /api/v1/vcs:\n    get:\n      summary: 'List deployable refs'\n      description: 'Get a list of VCS refs.'\n      x-cli-name: 'info:vcs-find'\n      operationId: get_Vcs_getRefs\n      parameters:\n        -\n          in: query\n          name: type\n          description: 'Either \"sites\" or \"factory\". (Note: \"factory\" is restricted to Acquia employees.)'\n          schema:\n            type: string\n          required: true\n        -\n          in: query\n          name: stack_id\n          description: 'The stack id.'\n          schema:\n            type: string\n          required: false\n      responses:\n        200:\n          description: 'Vcs_getRefs response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Vcs_getRefsResponse'\n        400:\n          description: 'bad input parameter'\n  '/api/v1/wip/task/{task_id}/status':\n    get:\n      summary: 'Wip task status'\n      description: 'Gets the status of a Wip task.'\n      x-cli-name: 'tasks:status'\n      operationId: get_WipTaskStatus_getWipTaskStatus\n      parameters:\n        -\n          in: path\n          name: task_id\n          description: 'The Wip task ID'\n          schema:\n            type: integer\n          required: true\n      responses:\n        200:\n          description: 'WipTaskStatus_getWipTaskStatus response'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WipTaskStatus_getWipTaskStatusResponse'\n        400:\n          description: 'bad input parameter'\ncomponents:\n  schemas:\n    ApiKey_resetKeysResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'API keys will be regenerated in a few minutes'\n        server_time:\n          type: string\n          example: '2014-02-16T20:04:12-06:00'\n        task_id:\n          type: integer\n          example: 1234\n    ApiKey_resetUserKeysResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The API key for user 32 was regenerated.'\n        server_time:\n          type: string\n          example: '2014-02-16T20:04:12-06:00'\n    AuditEvent_getAuditEventsResponse_changes:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        message:\n          type: string\n          example: 'Thing changed from @before to @after.'\n        before:\n          type: string\n          example: before_data\n        after:\n          type: string\n          example: after_data\n        type:\n          type: string\n          example: field_name\n        scope:\n          type: string\n          example: context_name\n        module:\n          type: string\n          example: system\n        source:\n          type: string\n          example: 'Factory UI'\n        nid:\n          type: integer\n          example: 123\n        uid:\n          type: integer\n          example: 456\n        timestamp:\n          type: integer\n          example: 1403742194\n    AuditEvent_getAuditEventsResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 1\n        changes:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuditEvent_getAuditEventsResponse_changes'\n    CentralizedRoleManagement_executeGetActionsResponse_content_editor:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: false\n        site_roles:\n          type: array\n          items:\n            type: string\n    CentralizedRoleManagement_executeGetActionsResponse_platform_admin:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n        site_roles:\n          type: array\n          items:\n            type: string\n            example: 'site maintainer'\n    CentralizedRoleManagement_executeGetActionsResponse_site_builder:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: false\n        site_roles:\n          type: array\n          items:\n            type: string\n    CentralizedRoleManagement_executeGetActionsResponse:\n      type: object\n      properties:\n        'content editor':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executeGetActionsResponse_content_editor'\n        'platform admin':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executeGetActionsResponse_platform_admin'\n        'site builder':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executeGetActionsResponse_site_builder'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    CentralizedRoleManagement_executePutActionsResponse_content_editor:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n        site_roles:\n          type: array\n          items:\n            type: string\n            example: newrole\n    CentralizedRoleManagement_executePutActionsResponse_platform_admin:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n        site_roles:\n          type: array\n          items:\n            type: string\n            example: 'site maintainer'\n    CentralizedRoleManagement_executePutActionsResponse_site_builder:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: false\n        site_roles:\n          type: array\n          items:\n            type: string\n    CentralizedRoleManagement_executePutActionsResponse:\n      type: object\n      properties:\n        'content editor':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executePutActionsResponse_content_editor'\n        'platform admin':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executePutActionsResponse_platform_admin'\n        'site builder':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executePutActionsResponse_site_builder'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    CentralizedRoleManagement_executeDeleteActionsResponse_content_editor:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n        site_roles:\n          type: array\n          items:\n            type: string\n            example: newrole\n    CentralizedRoleManagement_executeDeleteActionsResponse_platform_admin:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n        site_roles:\n          type: array\n          items:\n            type: string\n            example: 'site maintainer'\n    CentralizedRoleManagement_executeDeleteActionsResponse_site_builder:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: false\n        site_roles:\n          type: array\n          items:\n            type: string\n    CentralizedRoleManagement_executeDeleteActionsResponse:\n      type: object\n      properties:\n        'content editor':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executeDeleteActionsResponse_content_editor'\n        'platform admin':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executeDeleteActionsResponse_platform_admin'\n        'site builder':\n          $ref: '#/components/schemas/CentralizedRoleManagement_executeDeleteActionsResponse_site_builder'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    CodeBases_getCodeBaseNamesResponse:\n      type: object\n      properties:\n        stacks:\n          type: object\n          additionalProperties:\n            type: string\n    CronJobs_createCronJobResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2021-11-25T13:18:44+00:00'\n        nid:\n          type: integer\n          example: 1234\n        message:\n          type: string\n          example: 'The cron job has been created'\n    CronJobs_editCronJobResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2021-11-25T13:18:44+00:00'\n        message:\n          type: string\n          example: 'The cron job has been saved'\n    CronJobs_deleteCronJobResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2021-11-25T13:18:44+00:00'\n        message:\n          type: string\n          example: 'The cron job has been deleted'\n    CronJobs_getCronJobsResponse_cronjobs:\n      type: object\n      properties:\n        nid:\n          type: integer\n          example: 101\n        name:\n          type: string\n          example: 'cron job 1'\n        stacks:\n          type: array\n          items:\n            type: integer\n            example: 1\n        sites_affected:\n          type: string\n          example: dev-sites\n        interval:\n          type: string\n          example: '14 0,12 * * *'\n        drush_command:\n          type: string\n          example: cron\n        thread_percentage:\n          type: integer\n          example: 60\n    CronJobs_getCronJobsResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2021-11-25T13:18:44+00:00'\n        count:\n          type: integer\n          example: 2\n        cronjobs:\n          type: array\n          items:\n            $ref: '#/components/schemas/CronJobs_getCronJobsResponse_cronjobs'\n    CronJobs_getCronJobResponse:\n      type: object\n      properties:\n        nid:\n          type: integer\n          example: 101\n        name:\n          type: string\n          example: 'cron job 1'\n        stacks:\n          type: array\n          items:\n            type: integer\n            example: 1\n        sites_affected:\n          type: string\n          example: dev-sites\n        interval:\n          type: string\n          example: '14 0,12 * * *'\n        drush_command:\n          type: string\n          example: cron\n        thread_percentage:\n          type: integer\n          example: 60\n    Domains_getDomainsResponse_domains:\n      type: object\n      properties:\n        protected_domains:\n          type: array\n          items:\n            type: string\n            example: site.example.sfdev.acquia-test.co\n        custom_domains:\n          type: array\n          items:\n            type: string\n            example: www.abc.com/def\n    Domains_getDomainsResponse:\n      type: object\n      properties:\n        node_id:\n          type: integer\n          example: 121\n        node_type:\n          type: string\n          example: 'site collection'\n        time:\n          type: string\n          example: '2016-10-28T09:25:26+00:00'\n        domains:\n          $ref: '#/components/schemas/Domains_getDomainsResponse_domains'\n    Domains_getDomainStatusResponse:\n      type: object\n      properties:\n        domain_name:\n          type: string\n          example: www.example.com\n        associated_status:\n          type: string\n          example: registered|registered_unstable|unregistered|unregistered_unstable\n        node_id:\n          type: integer\n          example: 123\n        node_type:\n          type: string\n          example: site\n        stack_id:\n          type: integer\n          example: 1\n        time:\n          type: string\n          example: '2016-10-28T09:25:26+00:00'\n    Domains_addDomainResponse:\n      type: object\n      properties:\n        node_id:\n          type: integer\n          example: 121\n        node_type:\n          type: string\n          example: 'site collection'\n        domain:\n          type: string\n          example: www.domaintoadd.com\n        time:\n          type: string\n          example: '2016-10-28T09:25:26+00:00'\n        added:\n          type: boolean\n          example: true\n        messages:\n          type: array\n          items:\n            type: string\n            example: 'Your domain name was successfully added to the site collection.'\n    Domains_removeDomainResponse:\n      type: object\n      properties:\n        node_id:\n          type: integer\n          example: 121\n        node_type:\n          type: string\n          example: 'site collection'\n        domain:\n          type: string\n          example: www.domaintoremove.com\n        time:\n          type: string\n          example: '2016-10-28T09:25:26+00:00'\n        removed:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'Your domain name has been successfully removed from \u0026lt;site collection name\u0026gt;.'\n    FactoryStandardDomains_backfillFactoryStandardDomainsResponse:\n      type: object\n      properties:\n        task_id:\n          type: integer\n          example: 1234\n        message:\n          type: string\n          example: 'Task has been queued.'\n        time:\n          type: string\n          example: '2022-02-16T08:38:09+00:00'\n    FactoryStandardDomains_getFactoryStandardDomainsResponse:\n      type: object\n      properties:\n        site_prod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename].example.com'\n        site_nonprod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename]-[environment].example.com'\n        collection_prod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename]-collection.example.com'\n        collection_nonprod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename]-[environment]-collection.example.com'\n        time:\n          type: string\n          example: '2022-02-16T08:38:09+00:00'\n    FactoryStandardDomains_setFactoryStandardDomainsResponse:\n      type: object\n      properties:\n        site_prod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename].example.com'\n        site_nonprod:\n          type: array\n          items:\n            type: string\n            example: 'template3-[sitename]-[environment].example.com'\n        collection_prod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename]-collection.example.com'\n        collection_nonprod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename]-[environment]-collection.example.com'\n        time:\n          type: string\n          example: '2022-02-16T08:38:09+00:00'\n    FactoryStandardDomains_removeFactoryStandardDomainsResponse:\n      type: object\n      properties:\n        site_prod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename].example.com'\n        site_nonprod:\n          type: array\n          items:\n            type: string\n            example: 'template3-[sitename]-[environment].example.com'\n        collection_prod:\n          type: array\n          items:\n            type: string\n        collection_nonprod:\n          type: array\n          items:\n            type: string\n            example: 'template1-[sitename]-[environment]-collection.example.com'\n        time:\n          type: string\n          example: '2022-02-16T08:38:09+00:00'\n    Groups_getMembersResponse_members:\n      type: object\n      properties:\n        uid:\n          type: integer\n          example: 101\n        'group owner':\n          type: boolean\n          example: true\n        'group administrator':\n          type: boolean\n          example: true\n    Groups_getMembersResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        group_id:\n          type: integer\n          example: 123\n        count:\n          type: integer\n          example: 3\n        members:\n          type: array\n          items:\n            $ref: '#/components/schemas/Groups_getMembersResponse_members'\n    Groups_getGroupByIdResponse:\n      type: object\n      properties:\n        created:\n          type: integer\n          example: 1399421609\n        group_id:\n          type: integer\n          example: 123\n        group_name:\n          type: string\n          example: mygroup\n        owner:\n          type: string\n          example: user_name\n        owner_id:\n          type: integer\n          example: 456\n        parent_id:\n          type: integer\n          example: 789\n        parent_name:\n          type: string\n          example: parentgroup\n        live_site_count:\n          type: integer\n          example: 1\n        total_site_count:\n          type: integer\n          example: 3\n        status:\n          type: integer\n          example: 1\n    Groups_getGroupsResponse_groups:\n      type: object\n      properties:\n        group_name:\n          type: string\n          example: test\n        group_id:\n          type: integer\n          example: 10002246\n        owner:\n          type: string\n          example: user_name\n        owner_id:\n          type: integer\n          example: 10000461\n        parent_name:\n          type: string\n          example: foo\n        parent_id:\n          type: integer\n          example: 4242\n        status:\n          type: integer\n          example: 1\n        created:\n          type: integer\n          example: 1473142941\n        live_site_count:\n          type: integer\n          example: 1\n        total_site_count:\n          type: integer\n          example: 2\n    Groups_getGroupsResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/Groups_getGroupsResponse_groups'\n    Groups_createGroupResponse:\n      type: object\n      properties:\n        group_id:\n          type: integer\n          example: 123\n        group_name:\n          type: string\n          example: mygroup\n    Groups_editGroupResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        group_id:\n          type: integer\n          example: 123\n    Groups_deleteGroupResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        group_id:\n          type: integer\n          example: 123\n    Groups_addMembersResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        group_id:\n          type: integer\n          example: 123\n        uids_added:\n          type: array\n          items:\n            type: integer\n            example: 66\n    Groups_addAdminsResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        group_id:\n          type: integer\n          example: 123\n        uids_promoted:\n          type: array\n          items:\n            type: integer\n            example: 66\n    Groups_addSitesResponse:\n      type: object\n      properties:\n        group_id:\n          type: integer\n          example: 191\n        name:\n          type: string\n          example: foobargroup\n        time:\n          type: string\n          example: '2020-04-20T10:58:18+00:00'\n        site_ids_added:\n          type: array\n          items:\n            type: integer\n            example: 121\n        message:\n          type: string\n          example: 'One site was successfully added to the site group.'\n        site_ids_skipped:\n          type: array\n          items:\n            type: integer\n            example: 101\n    Groups_removeMembersResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        group_id:\n          type: integer\n          example: 123\n        uids_removed:\n          type: array\n          items:\n            type: integer\n            example: 66\n    Groups_removeAdminsResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        group_id:\n          type: integer\n          example: 123\n        uids_demoted:\n          type: array\n          items:\n            type: integer\n            example: 66\n    Groups_removeSitesResponse:\n      type: object\n      properties:\n        group_id:\n          type: integer\n          example: 191\n        name:\n          type: string\n          example: foobargroup\n        time:\n          type: string\n          example: '2020-04-20T10:58:18+00:00'\n        site_ids_removed:\n          type: array\n          items:\n            type: integer\n            example: 121\n        message:\n          type: string\n          example: 'One site was successfully removed from the site group.'\n        site_ids_skipped:\n          type: array\n          items:\n            type: integer\n            example: 101\n    Groups_getSitesResponse_sites:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 151\n        db_name:\n          type: string\n          example: iade151\n        site:\n          type: string\n          example: site1\n        stack_id:\n          type: integer\n          example: 1\n        domain:\n          type: string\n          example: '{base_url}'\n        groups:\n          type: array\n          items:\n            type: integer\n            example: 91\n        site_collection:\n          type: integer\n          example: 5\n        is_primary:\n          type: boolean\n          example: true\n    Groups_getSitesResponse:\n      type: object\n      properties:\n        time:\n          type: string\n          example: '2021-02-19T12:54:23+00:00'\n        group_id:\n          type: integer\n          example: 101\n        count:\n          type: integer\n          example: 2\n        sites:\n          type: array\n          items:\n            $ref: '#/components/schemas/Groups_getSitesResponse_sites'\n    InstallationProfiles_getInstallationProfilesResponse_profiles:\n      type: object\n      properties:\n        name:\n          type: string\n          example: acquia_acms\n        stack_id:\n          type: integer\n          example: 1\n        enabled:\n          type: boolean\n          example: true\n        rest_api_default:\n          type: boolean\n          example: true\n        description:\n          type: string\n          example: 'Ready-to-use solution designed to help create and publish websites more easily'\n    InstallationProfiles_getInstallationProfilesResponse:\n      type: object\n      properties:\n        profiles:\n          type: array\n          items:\n            $ref: '#/components/schemas/InstallationProfiles_getInstallationProfilesResponse_profiles'\n        count:\n          type: integer\n          example: 4\n        time:\n          type: string\n          example: '1970-01-01T01:02:03+00:00'\n    InstallationProfiles_enableProfileResponse:\n      type: object\n      properties:\n        updated:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'Profile enabled successfully.'\n        profile_name:\n          type: string\n          example: standard\n        stack_id:\n          type: integer\n          example: 1\n        enabled:\n          type: boolean\n          example: true\n        rest_api_default:\n          type: boolean\n          example: true\n        time:\n          type: string\n          example: '1970-01-01T01:02:03+00:00'\n    InstallationProfiles_disableProfileResponse:\n      type: object\n      properties:\n        updated:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'Profile disabled successfully.'\n        profile_name:\n          type: string\n          example: standard\n        stack_id:\n          type: integer\n          example: 1\n        enabled:\n          type: boolean\n          example: false\n        rest_api_default:\n          type: boolean\n          example: false\n        time:\n          type: string\n          example: '1970-01-01T01:02:03+00:00'\n    InstallationProfiles_setDefaultResponse:\n      type: object\n      properties:\n        updated:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'Profile set as default successfully.'\n        profile_name:\n          type: string\n          example: standard\n        stack_id:\n          type: integer\n          example: 1\n        enabled:\n          type: boolean\n          example: true\n        rest_api_default:\n          type: boolean\n          example: true\n        time:\n          type: string\n          example: '1970-01-01T01:02:03+00:00'\n    PageView_getPageViewDataMonthlyResponse_dynamic_requests_2016-10:\n      type: object\n      properties:\n        date:\n          type: string\n          example: 2016-10\n        stack_id:\n          type: integer\n          example: 1\n        total_dynamic_requests:\n          type: integer\n          example: 106\n        2xx_dynamic_requests:\n          type: integer\n          example: 100\n        3xx_dynamic_requests:\n          type: integer\n          example: 3\n        4xx_dynamic_requests:\n          type: integer\n          example: 2\n        5xx_dynamic_requests:\n          type: integer\n          example: 1\n        total_runtime:\n          type: number\n          example: 101.4\n        2xx_runtime:\n          type: integer\n          example: 100\n        3xx_runtime:\n          type: number\n          example: 0.9\n        4xx_runtime:\n          type: number\n          example: 0.4\n        5xx_runtime:\n          type: number\n          example: 0.1\n    PageView_getPageViewDataMonthlyResponse_dynamic_requests:\n      type: object\n      properties:\n        2016-10:\n          $ref: '#/components/schemas/PageView_getPageViewDataMonthlyResponse_dynamic_requests_2016-10'\n    PageView_getPageViewDataMonthlyResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 1\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        most_recent_data:\n          type: string\n          example: '2016-11-23'\n        dynamic_requests:\n          $ref: '#/components/schemas/PageView_getPageViewDataMonthlyResponse_dynamic_requests'\n    PageView_getPageViewDataMonthlyPerDomainResponse_dynamic_requests_domain1.example.com:\n      type: object\n      properties:\n        date:\n          type: string\n          example: 2016-11\n        stack_id:\n          type: integer\n          example: 1\n        total_dynamic_requests:\n          type: integer\n          example: 106\n        2xx_dynamic_requests:\n          type: integer\n          example: 100\n        3xx_dynamic_requests:\n          type: integer\n          example: 3\n        4xx_dynamic_requests:\n          type: integer\n          example: 2\n        5xx_dynamic_requests:\n          type: integer\n          example: 1\n        total_runtime:\n          type: number\n          example: 101.4\n        2xx_runtime:\n          type: integer\n          example: 100\n        3xx_runtime:\n          type: number\n          example: 0.9\n        4xx_runtime:\n          type: number\n          example: 0.4\n        5xx_runtime:\n          type: number\n          example: 0.1\n    PageView_getPageViewDataMonthlyPerDomainResponse_dynamic_requests:\n      type: object\n      properties:\n        domain1.example.com:\n          $ref: '#/components/schemas/PageView_getPageViewDataMonthlyPerDomainResponse_dynamic_requests_domain1.example.com'\n    PageView_getPageViewDataMonthlyPerDomainResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 1\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        most_recent_data:\n          type: string\n          example: '2016-11-23'\n        dynamic_requests:\n          $ref: '#/components/schemas/PageView_getPageViewDataMonthlyPerDomainResponse_dynamic_requests'\n    Pause_pauseResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Task processing has been paused.'\n    Pause_pauseTaskResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Task processing has been paused.'\n        task_id:\n          type: integer\n          example: 123\n        level:\n          type: string\n          example: family\n    Ping_pingResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: pong\n        server_time:\n          type: string\n          example: '2014-02-16T20:04:12-06:00'\n    Role_getRolesResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 4\n        roles:\n          type: object\n          additionalProperties:\n            type: string\n    Role_getRoleResponse:\n      type: object\n      properties:\n        rid:\n          type: integer\n          example: 32\n        name:\n          type: string\n          example: 'platform admin'\n    Role_createRoleResponse:\n      type: object\n      properties:\n        role_id:\n          type: integer\n          example: 16\n        role_name:\n          type: string\n          example: 'content editor'\n    Role_updateRoleResponse:\n      type: object\n      properties:\n        role_id:\n          type: integer\n          example: 32\n        updated:\n          type: boolean\n          example: true\n    Role_deleteRoleResponse:\n      type: object\n      properties:\n        role_id:\n          type: integer\n          example: 76\n        deleted:\n          type: boolean\n          example: true\n    SfInfo_getSfVersionResponse:\n      type: object\n      properties:\n        factory_version:\n          type: string\n          example: 2.59.0\n        time:\n          type: string\n          example: '2017-05-11T18:15:19+00:00'\n    SiteCollections_getCollectionsResponse_collections:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 196\n        name:\n          type: string\n          example: collection2\n        internal_domain:\n          type: string\n          example: domain1.site-factory.com\n        primary_site:\n          type: integer\n          example: 220\n        site_count:\n          type: integer\n          example: 2\n        groups:\n          type: array\n          items:\n            type: integer\n            example: 91\n    SiteCollections_getCollectionsResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 111\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        collections:\n          type: array\n          items:\n            $ref: '#/components/schemas/SiteCollections_getCollectionsResponse_collections'\n    SiteCollections_getCollectionResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 261\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        created:\n          type: integer\n          example: 1489075420\n        owner:\n          type: string\n          example: admin\n        name:\n          type: string\n          example: collection1\n        internal_domain:\n          type: string\n          example: collection1.site-factory.com\n        external_domains:\n          type: array\n          items:\n            type: string\n            example: domain1.site-factory.com\n        groups:\n          type: array\n          items:\n            type: integer\n            example: 91\n        sites:\n          type: array\n          items:\n            type: integer\n            example: 236\n        primary_site:\n          type: integer\n          example: 236\n    SiteCollections_createCollectionResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 191\n        name:\n          type: string\n          example: mycollection\n        time:\n          type: string\n          example: '2016-11-25T13:18:44+00:00'\n        internal_domain:\n          type: string\n          example: mycollecton.site-factory.com\n    SiteCollections_deleteCollectionResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 101\n        time:\n          type: string\n          example: '2016-10-28T09:25:26+00:00'\n        deleted:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'Your site collection was successfully deleted.'\n    SiteCollections_addSiteToCollectionResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 191\n        name:\n          type: string\n          example: foobarcollection\n        time:\n          type: string\n          example: '2017-04-20T10:58:18+00:00'\n        site_ids_added:\n          type: array\n          items:\n            type: integer\n            example: 121\n        added:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'One site was successfully added to the site collection.'\n        warning:\n          type: array\n          items:\n            type: string\n            example: 'The site aabbcc (site ID: 101) is already part of the current site collection.; The site ddeeff (site ID: 126) is already part of the current site collection.'\n        site_ids_skipped:\n          type: array\n          items:\n            type: integer\n            example: 101\n    SiteCollections_removeSiteFromCollectionResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 191\n        name:\n          type: string\n          example: foobarcollection\n        time:\n          type: string\n          example: '2017-04-20T10:58:18+00:00'\n        site_ids_removed:\n          type: array\n          items:\n            type: integer\n            example: 121\n        removed:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'One site was successfully removed from the site collection.'\n    SiteCollections_setPrimarySiteResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 191\n        name:\n          type: string\n          example: foobarcollection\n        time:\n          type: string\n          example: '2017-04-20T10:58:18+00:00'\n        primary_site_id:\n          type: integer\n          example: 101\n        switched:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'It can take a few minutes to switch over to the new primary site.'\n    SiteGuardConfig_getSiteGuardConfigResponse:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n        message:\n          type: string\n          example: 'Please log in'\n        password:\n          type: string\n          example: password1\n        time:\n          type: string\n          example: '2022-03-28T08:46:11+00:00'\n        username:\n          type: string\n          example: test\n    SiteGuardConfig_setSiteGuardConfigResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The configuration options have been saved.'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    SiteGuardConfig_removeSiteGuardConfigResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The configuration options have been saved.'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    SiteOwnership_executeGetActionsResponse:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          example: true\n        uid:\n          type: integer\n          example: 1234\n        username:\n          type: string\n          example: john.doe\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    SiteOwnership_executePutActionsResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The configuration options have been saved.'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    SiteOwnership_executeDeleteActionsResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Site ownership assignment feature has been disabled.'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    SiteUpdatePriority_getSiteUpdatePriorityResponse_priority:\n      type: object\n      properties:\n        371:\n          type: integer\n          example: 3\n        416:\n          type: integer\n          example: 4\n        421:\n          type: integer\n          example: 5\n    SiteUpdatePriority_getSiteUpdatePriorityResponse:\n      type: object\n      properties:\n        priority:\n          $ref: '#/components/schemas/SiteUpdatePriority_getSiteUpdatePriorityResponse_priority'\n        time:\n          type: string\n          example: '2022-03-16T10:03:26+00:00'\n    SiteUpdatePriority_setSiteUpdatePriorityResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The configuration options have been saved.'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    SiteUpdatePriority_resetSiteUpdatePriorityResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Site update priority has been removed.'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    Sites_getSitesResponse_sites:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 191\n        created:\n          type: integer\n          example: 1616611353\n        owner:\n          type: string\n          example: 'John Drupal'\n        site:\n          type: string\n          example: site1\n        db_name:\n          type: string\n          example: bdpref191\n        stack_id:\n          type: integer\n          example: 1\n        domain:\n          type: string\n          example: domain1.site-factory.com\n        groups:\n          type: array\n          items:\n            type: integer\n            example: 91\n        site_collection:\n          oneOf:\n            -\n              type: integer\n            -\n              type: boolean\n        is_primary:\n          type: boolean\n          example: true\n    Sites_getSitesResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 111\n        sites:\n          type: array\n          items:\n            $ref: '#/components/schemas/Sites_getSitesResponse_sites'\n    Sites_getSiteResponse_external_theme:\n      type: object\n      properties:\n        vcs_url:\n          type: string\n          example: 'git@github.com:username/drupal-theme-repo.git'\n        vcs_path:\n          type: string\n          example: master\n    Sites_getSiteResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 123\n        created:\n          type: integer\n          example: 1397483647\n        owner:\n          type: string\n          example: 'John Drupal'\n        site:\n          type: string\n          example: site1\n        stack_id:\n          type: integer\n          example: 1\n        db_name:\n          type: string\n          example: bdpref196\n        domains:\n          type: array\n          items:\n            type: string\n            example: domain1.site-factory.com\n        groups:\n          type: array\n          items:\n            type: integer\n            example: 91\n        part_of_collection:\n          type: boolean\n          example: true\n        is_primary:\n          type: boolean\n          example: true\n        collection_id:\n          type: integer\n          example: 241\n        collection_domains:\n          type: array\n          items:\n            type: string\n            example: domain241.example.com\n        external_theme:\n          $ref: '#/components/schemas/Sites_getSiteResponse_external_theme'\n    Sites_createSiteResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 191\n        site:\n          type: string\n          example: site1\n        domains:\n          type: array\n          items:\n            type: string\n            example: mysite.site-factory.com\n        task_id:\n          type: integer\n          example: 12345\n    Sites_deleteSiteResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 123\n        owner:\n          type: string\n          example: johnsmith\n        site:\n          type: string\n          example: unicorns\n        time:\n          type: string\n          example: '1970-01-01T01:02:03+00:00'\n        task_id:\n          type: integer\n          example: 16\n    Sites_duplicateSiteResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 183\n        site:\n          type: string\n          example: mysite2\n    Sites_backupSiteResponse:\n      type: object\n      properties:\n        task_id:\n          type: integer\n          example: 183\n    Sites_getSiteBackupsResponse_backups:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 6\n        nid:\n          type: integer\n          example: 123\n        status:\n          type: integer\n          example: 1\n        uid:\n          type: integer\n          example: 16\n        timestamp:\n          type: integer\n          example: 1415044083\n        bucket:\n          type: string\n          example: sitefactorybackups\n        directory:\n          type: string\n          example: oldschool\n        file:\n          type: string\n          example: oldschool_91_1415044083.tar.gz\n        label:\n          type: string\n          example: Weekly\n        componentList:\n          type: array\n          items:\n            type: string\n            example: codebase\n        complete:\n          type: boolean\n          example: true\n    Sites_getSiteBackupsResponse:\n      type: object\n      properties:\n        backups:\n          type: array\n          items:\n            $ref: '#/components/schemas/Sites_getSiteBackupsResponse_backups'\n    Sites_getSiteBackupUrlResponse:\n      type: object\n      properties:\n        url:\n          type: string\n          example: 'https://s3.amazonaws.com/sitefactorybackups/site/backup1_101_1415643727.tar.gz?AWSAccessKeyId=AKIAINAAC2EGOVCRW4WA\u0026Expires=1415713064\u0026Signature=pWucd8b6T%2FqzoNewXH6EuTyIr1g%3D'\n        lifetime:\n          type: integer\n          example: 300\n    Sites_deleteSiteBackupResponse:\n      type: object\n      properties:\n        task_id:\n          type: integer\n          example: 16\n    Sites_restoreSiteResponse:\n      type: object\n      properties:\n        task_id:\n          type: integer\n          example: 1024\n    Sites_clearCachesResponse_task_ids:\n      type: object\n      properties:\n        drupal_cache_clear:\n          type: integer\n          example: 1234\n        varnish_cache_clear:\n          type: integer\n          example: 1234\n    Sites_clearCachesResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 123\n        time:\n          type: string\n          example: '2017-05-04T09:25:26+00:00'\n        task_ids:\n          $ref: '#/components/schemas/Sites_clearCachesResponse_task_ids'\n    StageV2_stagingEnvironmentsResponse_environments:\n      type: object\n      properties:\n        test:\n          type: string\n          example: test\n    StageV2_stagingEnvironmentsResponse:\n      type: object\n      properties:\n        environments:\n          $ref: '#/components/schemas/StageV2_stagingEnvironmentsResponse_environments'\n    StageV2_stageResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Staging deployment has been initiated - WIP123.'\n        task_id:\n          type: integer\n          example: 123\n    Status_getStatusResponse:\n      type: object\n      properties:\n        site_creation:\n          type: string\n          example: Disabled\n        site_duplication:\n          type: string\n          example: Enabled\n        domain_management:\n          type: string\n          example: 'Disabled until 2014-02-14T11:52:17-05:00'\n        bulk_operations:\n          type: string\n          example: 'Disabled until 2014-02-14T11:52:17-05:00'\n    Status_setStatusResponse:\n      type: object\n      properties:\n        site_creation:\n          type: string\n          example: ''\n        site_duplication:\n          type: string\n          example: '2022-02-17T05:06:55-08:00'\n        domain_management:\n          type: string\n          example: ''\n        bulk_operations:\n          type: string\n          example: '2022-02-17T05:06:55-08:00'\n    Task_classesResponse:\n      type: array\n      items:\n        type: string\n        example: Acquia\\SfSite\\SiteInstall\n    Task_tasksResponse_item:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '7726'\n        parent:\n          type: string\n          example: '0'\n        name:\n          type: string\n          example: 'CronController 151'\n        group_name:\n          type: string\n          example: CronController\n        priority:\n          type: string\n          example: '2'\n        object_id:\n          type: string\n          example: '7726'\n        status:\n          type: string\n          example: '8'\n        wake:\n          type: string\n          example: '1645143240'\n        added:\n          type: string\n          example: '1645103709'\n        started:\n          type: string\n          example: '1645103715'\n        completed:\n          type: string\n          example: '0'\n        taken:\n          type: string\n          example: '0'\n        lease:\n          type: string\n          example: '301'\n        max_run_time:\n          type: string\n          example: '300'\n        paused:\n          type: string\n          example: '0'\n        concurrency_exceeded:\n          type: string\n          example: '0'\n        error_message:\n          type: string\n          example: ''\n        nid:\n          type: string\n          example: '0'\n        uid:\n          type: string\n          example: '0'\n        class:\n          type: string\n          example: Acquia\\SfCron\\CronController\n    Task_tasksResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/Task_tasksResponse_item'\n    Task_logsResponse_item:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '755096'\n        timestamp:\n          type: string\n          example: '1643297111'\n        object_id:\n          type: string\n          example: '5566'\n        action:\n          type: string\n          example: ''\n        level:\n          type: string\n          example: '7'\n        message:\n          type: string\n          example: '[ded-11|7376] - Task added for object id 5566.'\n        readable:\n          type: string\n          example: '0'\n    Task_logsResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/Task_logsResponse_item'\n    Task_deleteResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Task 123 has been deleted.'\n        time:\n          type: string\n          example: '1970-01-01T00:00:00+00:00'\n        task_id:\n          type: integer\n          example: 123\n    Task_terminateResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Task 123 has been queued for termination.'\n        time:\n          type: string\n          example: '1970-01-01T00:00:00+00:00'\n        task_id:\n          type: integer\n          example: 123\n    TaskLogSettings_getTaskLogSettingsResponse_wip_log_maximum_level:\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'Overall tasks logging level'\n        value:\n          type: string\n          example: trace\n    TaskLogSettings_getTaskLogSettingsResponse_wip_log_level:\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'Successful tasks logging level'\n        value:\n          type: string\n          example: warn\n    TaskLogSettings_getTaskLogSettingsResponse:\n      type: object\n      properties:\n        wip_log_maximum_level:\n          $ref: '#/components/schemas/TaskLogSettings_getTaskLogSettingsResponse_wip_log_maximum_level'\n        wip_log_level:\n          $ref: '#/components/schemas/TaskLogSettings_getTaskLogSettingsResponse_wip_log_level'\n    TaskLogSettings_editTaskLogSettingsResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The configuration options have been saved.'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    TaskLogSettings_resetTaskLogSettingsResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The configuration options have been reset to their default values.'\n        time:\n          type: string\n          example: '2022-01-19T08:38:09+00:00'\n    Theme_getThemePublicKeyResponse:\n      type: object\n      properties:\n        deploy_key:\n          type: string\n          example: 'ssh-rsa...== id_rsa_external_theme'\n        time:\n          type: string\n          example: '2034-05-11T18:15:19+00:00'\n    Theme_processThemesResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The request to process theme notification has been accepted.'\n        sitegroups:\n          type: array\n          items:\n            type: string\n            example: tangle001\n        time:\n          type: string\n          example: '2014-05-02T16:21:25+00:00'\n    Theme_refreshSiteExternalThemesResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 121\n        accepted:\n          type: boolean\n          example: true\n        time:\n          type: string\n          example: '2024-05-11T18:15:19+00:00'\n    Theme_setSiteExternalThemeResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 121\n        vcs_url:\n          type: string\n          example: 'git@github.com:user/repo.git'\n        vcs_path:\n          type: string\n          example: master\n        time:\n          type: string\n          example: '2020-01-09T15:57:24+00:00'\n    Theme_deleteSiteExternalThemeResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 121\n        accepted:\n          type: boolean\n          example: true\n        time:\n          type: string\n          example: '2024-05-11T18:15:19+00:00'\n    ThemeNotification_handleNotificationResponse_notification:\n      type: object\n      properties:\n        scope:\n          type: string\n          example: site\n        event:\n          type: string\n          example: modify\n        nid:\n          type: integer\n          example: 123\n    ThemeNotification_handleNotificationResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'The site.modify notification has been received.'\n        time:\n          type: string\n          example: '2014-02-16T20:04:12-06:00'\n        notification:\n          $ref: '#/components/schemas/ThemeNotification_handleNotificationResponse_notification'\n    TransferSiteOwnership_transferSiteOwnerResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'To transfer your site, please follow the instructions in the e-mail that was sent to site-owner@email.com'\n    Update_updateResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Update initiated.'\n        task_id:\n          type: integer\n          example: 123\n    Update_statusResponse_statuses:\n      type: object\n      properties:\n        not-started:\n          type: integer\n          example: 0\n        in-progress:\n          type: integer\n          example: 0\n        completed:\n          type: string\n          example: '30'\n        warning:\n          type: integer\n          example: 0\n        error:\n          type: integer\n          example: 0\n    Update_statusResponse_docroot_pairs_environment:\n      type: object\n      properties:\n        site:\n          type: string\n          example: test\n        env:\n          type: string\n          example: prod\n        tangle:\n          type: string\n          example: tangle_test\n        type:\n          type: string\n          example: live_env\n    Update_statusResponse_docroot_pairs:\n      type: object\n      properties:\n        environment:\n          $ref: '#/components/schemas/Update_statusResponse_docroot_pairs_environment'\n        total:\n          type: integer\n          example: 30\n        error_percentage:\n          type: integer\n          example: 0\n        completed_percentage:\n          type: integer\n          example: 100\n    Update_statusResponse:\n      type: object\n      properties:\n        statuses:\n          $ref: '#/components/schemas/Update_statusResponse_statuses'\n        message:\n          type: string\n          example: 'Update complete'\n        percentage:\n          type: integer\n          example: 100\n        start_time:\n          type: integer\n          example: 1423862773\n        end_time:\n          type: integer\n          example: 1423865337\n        id:\n          type: integer\n          example: 4726\n        docroot_pairs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Update_statusResponse_docroot_pairs'\n    Update_updateListResponse:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Update_updateListResponse_item'\n    Update_updateListResponse_item:\n      type: object\n      properties:\n        added:\n          type: string\n          example: '1423762615'\n        status:\n          type: string\n          example: '16'\n    Update_pauseUpdateResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: 'Site update processing has been paused.'\n    User_getUsersResponse_users:\n      type: object\n      properties:\n        uid:\n          type: string\n          example: '1'\n        name:\n          type: string\n          example: admin\n        mail:\n          type: string\n          example: admin@example.com\n        created:\n          type: string\n          example: '1431525207'\n        access:\n          type: string\n          example: '1431525447'\n        status:\n          type: string\n          example: blocked\n        tfa_status:\n          type: string\n          example: 'not available'\n        roles:\n          type: object\n          additionalProperties:\n            type: string\n    User_getUsersResponse:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 6\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/User_getUsersResponse_users'\n    User_getUserResponse:\n      type: object\n      properties:\n        uid:\n          type: string\n          example: '32'\n        name:\n          type: string\n          example: Mark\n        mail:\n          type: string\n          example: mark@example.com\n        created:\n          type: string\n          example: '1449070860'\n        login:\n          type: string\n          example: '1449071036'\n        status:\n          type: string\n          example: '1'\n        roles:\n          type: object\n          additionalProperties:\n            type: string\n        tfa_status:\n          type: string\n          example: active\n    User_createUserResponse:\n      type: object\n      properties:\n        user_id:\n          type: integer\n          example: 16\n        user_name:\n          type: string\n          example: Mark\n        user_mail:\n          type: string\n          example: mark@example.com\n        user_status:\n          type: string\n          example: active\n    User_updateUserResponse:\n      type: object\n      properties:\n        user_id:\n          type: integer\n          example: 85\n        updated:\n          type: boolean\n          example: true\n    User_deleteUserResponse:\n      type: object\n      properties:\n        user_id:\n          type: integer\n          example: 76\n        deleted:\n          type: boolean\n          example: true\n    Vcs_getRefsResponse:\n      type: object\n      properties:\n        available:\n          type: array\n          items:\n            type: string\n            example: dev-branch\n        current:\n          type: string\n          example: tags/2.85.0.3085\n    WipTaskStatus_getWipTaskStatusResponse_wip_task:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '476'\n        parent:\n          type: string\n          example: '0'\n        name:\n          type: string\n          example: 'SiteArchive 111'\n        group_name:\n          type: string\n          example: 'SiteArchive customerstack1_01'\n        status:\n          type: string\n          example: '16'\n        status_string:\n          type: string\n          example: Completed\n        added:\n          type: string\n          example: '1475051666'\n        started:\n          type: string\n          example: '1475051667'\n        completed:\n          type: string\n          example: '1475051765'\n        paused:\n          type: string\n          example: '0'\n        error_message:\n          type: string\n          example: ''\n        nid:\n          type: string\n          example: '111'\n        uid:\n          type: string\n          example: '21'\n    WipTaskStatus_getWipTaskStatusResponse:\n      type: object\n      properties:\n        wip_task:\n          $ref: '#/components/schemas/WipTaskStatus_getWipTaskStatusResponse_wip_task'\n        time:\n          type: string\n          example: '2014-05-02T16:21:25+00:00'\n",
			"canonicalURL": "/github.com/acquia/cli@3400cc6d4583f649d0c50b65189836448022b6d7/-/blob/assets/acsf-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/acquia/cli/blob/3400cc6d4583f649d0c50b65189836448022b6d7/assets/acsf-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/v1/groups/{group_id}/admins: delete: operation \"delete_Groups_removeAdmins\": parameters: parse parameter \"uids\": all oneOf schemas must be simple types"
}