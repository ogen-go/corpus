{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GridPlus/phonon-client"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "gui/swagger.yaml",
			"byteSize": 16294,
			"content": "openapi: 3.0.0\ninfo:\n  description: UI frontend api (if that makes any sense)\n  version: 0.0.1\n  title: Phonon-api\nservers:\n  - url: http://localhost:{{.}}\ntags:\n  - name: sessions\n    description: connected card sessions\n  - name: phonons\n    description: phonons on selected card\npaths:\n  /genMock:\n    get:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: mock generated\n  /listSessions:\n    get:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: list of attached card's session info\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SessionStatus\"\n        \"404\":\n          description: No connected cards\n  \"/cards/{sessionID}/init\":\n    post:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: card initialized succesfully\n        \"400\":\n          description: card already initialized\n        \"500\":\n          description: unable to set PIN\n      parameters:\n        - in: path\n          required: true\n          name: sessionID\n          description: sessionID of connected card\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n  \"/cards/{sessionID}/unlock\":\n    post:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: card unlocked\n        \"404\":\n          description: no session with id\n      parameters:\n        - in: path\n          required: true\n          name: sessionID\n          description: sessionID of connected card\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n  \"/cards/{sessionID}/connect\":\n    post:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: Connected to Jumpbox\n        \"404\":\n          description: no session with id\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/connectionStatus\":\n    get:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: connection status returned\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  ConnectionStatus:\n                    type: integer\n                    description:\n                      \"0: unconnected, 1: connectedToBridge, 2: connectedToCard,\n                      3: CardPair1Complete, 4: CardPair2Complete, 5:\n                      CardPairingComplete\"\n        \"500\":\n          description: internal error retrieving connection status\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/connectLocal\":\n    post:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: Ready to pair locally\n        \"404\":\n          description: no session with id\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/pair\":\n    post:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: card Paired\n        \"404\":\n          description: no session with id\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/listPhonons\":\n    get:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: phonons listed\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    KeyIndex:\n                      type: integer\n                    PubKey:\n                      type: string\n                    Value:\n                      type: integer\n                    CurrencyType:\n                      type: integer\n        \"404\":\n          description: no session with id\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/name\":\n    post:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: session name is created\n        \"500\":\n          description: internal error retrieving connection status\n      parameters:\n        - in: path\n          required: true\n          name: sessionID\n          description: sessionID of connected card\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n        description: name of the session to be renammed\n        required: true\n  \"/cards/{sessionID}/phonon/{phononIndex}/setDescriptor\":\n    post:\n      tags:\n        - phonons\n      responses:\n        \"200\":\n          description: Descriptor set properly\n        \"404\":\n          description: Either the session or phonon doesn't exist\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n      - in: path\n        required: true\n        name: phononIndex\n        description: index of phonon to set descriptor on\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/send\":\n    post:\n      tags:\n        - phonons\n      responses:\n        \"200\":\n          description: Phonon sent\n        \"404\":\n          description: Either the session or phonon doesn't exist\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/create\":\n    post:\n      tags:\n        - phonons\n      responses:\n        \"200\":\n          description: created phonon\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  index:\n                    type: integer\n                  pubkey:\n                    type: string\n        \"500\":\n          description: it didn't work\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/redeem\":\n    post:\n      tags:\n        - phonons\n      responses:\n        \"200\":\n          description: phonon successfully redeemed\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RedeemPhononResponse\"\n        \"400\":\n          description: unable to decode request\n        \"500\":\n          description: unable to encode response\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/{phononIndex}/export\":\n    post:\n      tags:\n        - phonons\n      responses:\n        \"200\":\n          description: Descriptor set properly\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  privateKey:\n                    type: string\n        \"404\":\n          description: Either the session or phonon doesn't exist\n        \"500\":\n          description: Could not redeem phonons.\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n      - in: path\n        required: true\n        name: phononIndex\n        description: index of phonon to redeem\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/mineNative\":\n    post:\n      tags:\n        - sessions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                difficulty:\n                  type: integer\n      responses:\n        \"200\":\n          description: Successfully mined a native phonon\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  AttemptId:\n                    type: string\n        \"404\":\n          description: no session with id\n        \"500\":\n          description: Could not start native phonon mining operation\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/mineNative/cancel\":\n    put:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: Successfully cancelled a running mining operation\n        \"404\":\n          description: no active mining operation\n        \"500\":\n          description: There was an issue canceling the mining operation\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/mineNative/status\":\n    get:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: Return the status of a running native phonon mining operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MiningStatus\"\n        \"404\":\n          description: no session with id\n        \"500\":\n          description: unable to get mining status report\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/mineNative/status/{miningSessionID}\":\n    get:\n      tags:\n        - sessions\n      responses:\n        \"200\":\n          description: Return the status of a running native phonon mining operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MiningStatusReport\"\n        \"404\":\n          description: no session with id\n        \"500\":\n          description: unable to get mining status report\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n      - in: path\n        required: true\n        name: miningSessionID\n        description: sessionID of mining operation\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/initDeposit\":\n    post:\n      tags:\n        - phonons\n      summary:\n        initiate a new phonon deposit by creating raw phonons and retrieving\n        their keyIndices, denominations, and addresses\n      responses:\n        \"200\":\n          description: phonons created\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Phonon\"\n        \"400\":\n          description: could not parse request\n        \"404\":\n          description: status not found\n        \"500\":\n          description: could not create necessary phonons\n    parameters:\n      - in: path\n        required: true\n        name: sessionID\n        description: sessionID of connected card\n        schema:\n          type: string\n  \"/cards/{sessionID}/phonon/finalizeDeposit\":\n    post:\n      tags:\n        - phonons\n      summary:\n        finalize a phonon deposit by confirming success or failure of on chain\n        deposit transaction\n      responses:\n        \"200\":\n          description: deposit finalized\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/DepositConfirmation\"\n        \"400\":\n          description: could not parse request\n        \"404\":\n          description: status not found\n        \"500\":\n          description: failed to finalize deposit\n      parameters:\n        - in: path\n          required: true\n          name: sessionID\n          description: sessionID of connected card\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/DepositConfirmation\"\n        description:\n          phonons to be finalized along with status of on chain deposit\n          transaction\n        required: true\n  /logs:\n    post:\n      tags:\n        - logs\n      summary: place to send logs\n      responses:\n        \"200\":\n          description: log logged\n        \"400\":\n          description: log formatted wrong\n        \"500\":\n          description: unable to log log\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n  /checkDenomination:\n    post:\n      tags:\n        - general\n      summary: check denomination before attempting to set on card\n      responses:\n        \"200\":\n          description: valid denomination\n        \"400\":\n          description: unable to determine denomination value\n      requestBody:\n        content:\n          application/text:\n            schema:\n              type: string\n        required: true\ncomponents:\n  requestBodies:\n    Body:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              pin:\n                type: string\n      description: Pin to unlock the card\n      required: true\n  schemas:\n    Phonon:\n      type: object\n      properties:\n        KeyIndex:\n          type: integer\n        PubKey:\n          type: string\n        Address:\n          type: string\n        AddressType:\n          type: integer\n        SchemaVersion:\n          type: integer\n        ExtendedSchemaVersion:\n          type: integer\n        Denomination:\n          type: string\n        CurrencyType:\n          type: integer\n        ChainID:\n          type: integer\n    DepositConfirmation:\n      type: object\n      properties:\n        Phonon:\n          $ref: \"#/components/schemas/Phonon\"\n        ConfirmedOnChain:\n          type: boolean\n        ConfirmedOnCard:\n          type: boolean\n    RedeemPhononResponse:\n      type: object\n      properties:\n        TransactionData:\n          type: string\n        PrivKey:\n          type: string\n        Err:\n          type: string\n    SessionStatus:\n      type: object\n      properties:\n        Name:\n          type: string\n        Initialized:\n          type: boolean\n        TerminalPaired:\n          type: boolean\n        PinVerified:\n          type: boolean\n    MiningStatus:\n      type: object\n      properties:\n        AttemptId:\n          $ref: \"#/components/schemas/MiningStatusReport\"\n    MiningStatusReport:\n      type: object\n      properties:\n        Attempts:\n          type: integer\n        Status:\n          enum:\n            - success\n            - active\n            - cancelled\n            - error\n          description: |\n            Status:\n              * `success` - If the mining operation has succeeded.\n              * `active` - If the mining operation is still active.\n              * `cancelled` - If the mining operation was cancelled.\n              * `error` - If the mining operation has failed.\n        TimeElapsed:\n          type: integer\n        StartTime:\n          type: string\n          format: date-time\n        StopTime:\n          type: string\n          format: date-time\n          nullable: true\n        AverageTime:\n          type: integer\n        KeyIndex:\n          type: string\n        Hash:\n          type: string\n",
			"canonicalURL": "/github.com/GridPlus/phonon-client@9459c2dab5099c8993ebdf13092eb460cf667e4e/-/blob/gui/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GridPlus/phonon-client/blob/9459c2dab5099c8993ebdf13092eb460cf667e4e/gui/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse servers: at 1:12196: invalid path: http://localhost:{{.}}"
}