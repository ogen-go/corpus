{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sgtest/megarepo"
		},
		"file": {
			"name": "apis__authorization.k8s.io__v1_openapi.json",
			"size": 0,
			"path": "kubernetes/api/openapi-spec/v3/apis__authorization.k8s.io__v1_openapi.json",
			"byteSize": 67110,
			"content": "{\n  \"components\": {\n    \"schemas\": {\n      \"io.k8s.api.authorization.v1.LocalSubjectAccessReview\": {\n        \"description\": \"LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.\",\n        \"properties\": {\n          \"apiVersion\": {\n            \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"\n          },\n          \"spec\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReviewSpec\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.\"\n          },\n          \"status\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReviewStatus\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Status is filled in by the server and indicates whether the request is allowed or not\"\n          }\n        },\n        \"required\": [\n          \"spec\"\n        ],\n        \"type\": \"object\",\n        \"x-kubernetes-group-version-kind\": [\n          {\n            \"group\": \"authorization.k8s.io\",\n            \"kind\": \"LocalSubjectAccessReview\",\n            \"version\": \"v1\"\n          }\n        ]\n      },\n      \"io.k8s.api.authorization.v1.NonResourceAttributes\": {\n        \"description\": \"NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface\",\n        \"properties\": {\n          \"path\": {\n            \"description\": \"Path is the URL path of the request\",\n            \"type\": \"string\"\n          },\n          \"verb\": {\n            \"description\": \"Verb is the standard HTTP verb\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"io.k8s.api.authorization.v1.NonResourceRule\": {\n        \"description\": \"NonResourceRule holds information that describes a rule for the non-resource\",\n        \"properties\": {\n          \"nonResourceURLs\": {\n            \"description\": \"NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \\\"*\\\" means all.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"verbs\": {\n            \"description\": \"Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \\\"*\\\" means all.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"verbs\"\n        ],\n        \"type\": \"object\"\n      },\n      \"io.k8s.api.authorization.v1.ResourceAttributes\": {\n        \"description\": \"ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface\",\n        \"properties\": {\n          \"group\": {\n            \"description\": \"Group is the API Group of the Resource.  \\\"*\\\" means all.\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"Name is the name of the resource being requested for a \\\"get\\\" or deleted for a \\\"delete\\\". \\\"\\\" (empty) means all.\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \\\"\\\" (empty) is defaulted for LocalSubjectAccessReviews \\\"\\\" (empty) is empty for cluster-scoped resources \\\"\\\" (empty) means \\\"all\\\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview\",\n            \"type\": \"string\"\n          },\n          \"resource\": {\n            \"description\": \"Resource is one of the existing resource types.  \\\"*\\\" means all.\",\n            \"type\": \"string\"\n          },\n          \"subresource\": {\n            \"description\": \"Subresource is one of the existing resource types.  \\\"\\\" means none.\",\n            \"type\": \"string\"\n          },\n          \"verb\": {\n            \"description\": \"Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \\\"*\\\" means all.\",\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"description\": \"Version is the API Version of the Resource.  \\\"*\\\" means all.\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"io.k8s.api.authorization.v1.ResourceRule\": {\n        \"description\": \"ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.\",\n        \"properties\": {\n          \"apiGroups\": {\n            \"description\": \"APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \\\"*\\\" means all.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"resourceNames\": {\n            \"description\": \"ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \\\"*\\\" means all.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"resources\": {\n            \"description\": \"Resources is a list of resources this rule applies to.  \\\"*\\\" means all in the specified apiGroups.\\n \\\"*/foo\\\" represents the subresource 'foo' for all resources in the specified apiGroups.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"verbs\": {\n            \"description\": \"Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \\\"*\\\" means all.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"verbs\"\n        ],\n        \"type\": \"object\"\n      },\n      \"io.k8s.api.authorization.v1.SelfSubjectAccessReview\": {\n        \"description\": \"SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \\\"in all namespaces\\\".  Self is a special case, because users should always be able to check whether they can perform an action\",\n        \"properties\": {\n          \"apiVersion\": {\n            \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"\n          },\n          \"spec\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Spec holds information about the request being evaluated.  user and groups must be empty\"\n          },\n          \"status\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReviewStatus\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Status is filled in by the server and indicates whether the request is allowed or not\"\n          }\n        },\n        \"required\": [\n          \"spec\"\n        ],\n        \"type\": \"object\",\n        \"x-kubernetes-group-version-kind\": [\n          {\n            \"group\": \"authorization.k8s.io\",\n            \"kind\": \"SelfSubjectAccessReview\",\n            \"version\": \"v1\"\n          }\n        ]\n      },\n      \"io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec\": {\n        \"description\": \"SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set\",\n        \"properties\": {\n          \"nonResourceAttributes\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.NonResourceAttributes\"\n              }\n            ],\n            \"description\": \"NonResourceAttributes describes information for a non-resource access request\"\n          },\n          \"resourceAttributes\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.ResourceAttributes\"\n              }\n            ],\n            \"description\": \"ResourceAuthorizationAttributes describes information for a resource access request\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"io.k8s.api.authorization.v1.SelfSubjectRulesReview\": {\n        \"description\": \"SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.\",\n        \"properties\": {\n          \"apiVersion\": {\n            \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"\n          },\n          \"spec\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Spec holds information about the request being evaluated.\"\n          },\n          \"status\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectRulesReviewStatus\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Status is filled in by the server and indicates the set of actions a user can perform.\"\n          }\n        },\n        \"required\": [\n          \"spec\"\n        ],\n        \"type\": \"object\",\n        \"x-kubernetes-group-version-kind\": [\n          {\n            \"group\": \"authorization.k8s.io\",\n            \"kind\": \"SelfSubjectRulesReview\",\n            \"version\": \"v1\"\n          }\n        ]\n      },\n      \"io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec\": {\n        \"description\": \"SelfSubjectRulesReviewSpec defines the specification for SelfSubjectRulesReview.\",\n        \"properties\": {\n          \"namespace\": {\n            \"description\": \"Namespace to evaluate rules for. Required.\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"io.k8s.api.authorization.v1.SubjectAccessReview\": {\n        \"description\": \"SubjectAccessReview checks whether or not a user or group can perform an action.\",\n        \"properties\": {\n          \"apiVersion\": {\n            \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"\n          },\n          \"spec\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReviewSpec\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Spec holds information about the request being evaluated\"\n          },\n          \"status\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReviewStatus\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"Status is filled in by the server and indicates whether the request is allowed or not\"\n          }\n        },\n        \"required\": [\n          \"spec\"\n        ],\n        \"type\": \"object\",\n        \"x-kubernetes-group-version-kind\": [\n          {\n            \"group\": \"authorization.k8s.io\",\n            \"kind\": \"SubjectAccessReview\",\n            \"version\": \"v1\"\n          }\n        ]\n      },\n      \"io.k8s.api.authorization.v1.SubjectAccessReviewSpec\": {\n        \"description\": \"SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set\",\n        \"properties\": {\n          \"extra\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"default\": \"\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.\",\n            \"type\": \"object\"\n          },\n          \"groups\": {\n            \"description\": \"Groups is the groups you're testing for.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"nonResourceAttributes\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.NonResourceAttributes\"\n              }\n            ],\n            \"description\": \"NonResourceAttributes describes information for a non-resource access request\"\n          },\n          \"resourceAttributes\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.ResourceAttributes\"\n              }\n            ],\n            \"description\": \"ResourceAuthorizationAttributes describes information for a resource access request\"\n          },\n          \"uid\": {\n            \"description\": \"UID information about the requesting user.\",\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"description\": \"User is the user you're testing for. If you specify \\\"User\\\" but not \\\"Groups\\\", then is it interpreted as \\\"What if User were not a member of any groups\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"io.k8s.api.authorization.v1.SubjectAccessReviewStatus\": {\n        \"description\": \"SubjectAccessReviewStatus\",\n        \"properties\": {\n          \"allowed\": {\n            \"default\": false,\n            \"description\": \"Allowed is required. True if the action would be allowed, false otherwise.\",\n            \"type\": \"boolean\"\n          },\n          \"denied\": {\n            \"description\": \"Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.\",\n            \"type\": \"boolean\"\n          },\n          \"evaluationError\": {\n            \"description\": \"EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.\",\n            \"type\": \"string\"\n          },\n          \"reason\": {\n            \"description\": \"Reason is optional.  It indicates why a request was allowed or denied.\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"allowed\"\n        ],\n        \"type\": \"object\"\n      },\n      \"io.k8s.api.authorization.v1.SubjectRulesReviewStatus\": {\n        \"description\": \"SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.\",\n        \"properties\": {\n          \"evaluationError\": {\n            \"description\": \"EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.\",\n            \"type\": \"string\"\n          },\n          \"incomplete\": {\n            \"default\": false,\n            \"description\": \"Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.\",\n            \"type\": \"boolean\"\n          },\n          \"nonResourceRules\": {\n            \"description\": \"NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.\",\n            \"items\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.NonResourceRule\"\n                }\n              ],\n              \"default\": {}\n            },\n            \"type\": \"array\"\n          },\n          \"resourceRules\": {\n            \"description\": \"ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.\",\n            \"items\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.ResourceRule\"\n                }\n              ],\n              \"default\": {}\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"resourceRules\",\n          \"nonResourceRules\",\n          \"incomplete\"\n        ],\n        \"type\": \"object\"\n      },\n      \"io.k8s.apimachinery.pkg.apis.meta.v1.APIResource\": {\n        \"description\": \"APIResource specifies the name of a resource and whether it is namespaced.\",\n        \"properties\": {\n          \"categories\": {\n            \"description\": \"categories is a list of the grouped resources this resource belongs to (e.g. 'all')\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"group\": {\n            \"description\": \"group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\\\".\",\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"default\": \"\",\n            \"description\": \"kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"default\": \"\",\n            \"description\": \"name is the plural name of the resource.\",\n            \"type\": \"string\"\n          },\n          \"namespaced\": {\n            \"default\": false,\n            \"description\": \"namespaced indicates if a resource is namespaced or not.\",\n            \"type\": \"boolean\"\n          },\n          \"shortNames\": {\n            \"description\": \"shortNames is a list of suggested short names of the resource.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"singularName\": {\n            \"default\": \"\",\n            \"description\": \"singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.\",\n            \"type\": \"string\"\n          },\n          \"storageVersionHash\": {\n            \"description\": \"The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.\",\n            \"type\": \"string\"\n          },\n          \"verbs\": {\n            \"description\": \"verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"version\": {\n            \"description\": \"version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\\\".\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"singularName\",\n          \"namespaced\",\n          \"kind\",\n          \"verbs\"\n        ],\n        \"type\": \"object\"\n      },\n      \"io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList\": {\n        \"description\": \"APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.\",\n        \"properties\": {\n          \"apiVersion\": {\n            \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\n            \"type\": \"string\"\n          },\n          \"groupVersion\": {\n            \"default\": \"\",\n            \"description\": \"groupVersion is the group and version this APIResourceList is for.\",\n            \"type\": \"string\"\n          },\n          \"kind\": {\n            \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n            \"type\": \"string\"\n          },\n          \"resources\": {\n            \"description\": \"resources contains the name of the resources and if they are namespaced.\",\n            \"items\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource\"\n                }\n              ],\n              \"default\": {}\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"groupVersion\",\n          \"resources\"\n        ],\n        \"type\": \"object\",\n        \"x-kubernetes-group-version-kind\": [\n          {\n            \"group\": \"\",\n            \"kind\": \"APIResourceList\",\n            \"version\": \"v1\"\n          }\n        ]\n      },\n      \"io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1\": {\n        \"description\": \"FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\\n\\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\\n\\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\",\n        \"type\": \"object\"\n      },\n      \"io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry\": {\n        \"description\": \"ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.\",\n        \"properties\": {\n          \"apiVersion\": {\n            \"description\": \"APIVersion defines the version of this resource that this field set applies to. The format is \\\"group/version\\\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.\",\n            \"type\": \"string\"\n          },\n          \"fieldsType\": {\n            \"description\": \"FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \\\"FieldsV1\\\"\",\n            \"type\": \"string\"\n          },\n          \"fieldsV1\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1\"\n              }\n            ],\n            \"description\": \"FieldsV1 holds the first JSON version format as described in the \\\"FieldsV1\\\" type.\"\n          },\n          \"manager\": {\n            \"description\": \"Manager is an identifier of the workflow managing these fields.\",\n            \"type\": \"string\"\n          },\n          \"operation\": {\n            \"description\": \"Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.\",\n            \"type\": \"string\"\n          },\n          \"subresource\": {\n            \"description\": \"Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.\",\n            \"type\": \"string\"\n          },\n          \"time\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time\"\n              }\n            ],\n            \"description\": \"Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta\": {\n        \"description\": \"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\",\n        \"properties\": {\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"description\": \"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\",\n            \"type\": \"object\"\n          },\n          \"creationTimestamp\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time\"\n              }\n            ],\n            \"default\": {},\n            \"description\": \"CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\\n\\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"\n          },\n          \"deletionGracePeriodSeconds\": {\n            \"description\": \"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"deletionTimestamp\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time\"\n              }\n            ],\n            \"description\": \"DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\\n\\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\"\n          },\n          \"finalizers\": {\n            \"description\": \"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\",\n            \"items\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-kubernetes-patch-strategy\": \"merge\"\n          },\n          \"generateName\": {\n            \"description\": \"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will return a 409.\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\",\n            \"type\": \"string\"\n          },\n          \"generation\": {\n            \"description\": \"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"labels\": {\n            \"additionalProperties\": {\n              \"default\": \"\",\n              \"type\": \"string\"\n            },\n            \"description\": \"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\",\n            \"type\": \"object\"\n          },\n          \"managedFields\": {\n            \"description\": \"ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \\\"ci-cd\\\". The set of fields is always in the version that the workflow used when modifying the object.\",\n            \"items\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry\"\n                }\n              ],\n              \"default\": {}\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\",\n            \"type\": \"string\"\n          },\n          \"ownerReferences\": {\n            \"description\": \"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\",\n            \"items\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference\"\n                }\n              ],\n              \"default\": {}\n            },\n            \"type\": \"array\",\n            \"x-kubernetes-patch-merge-key\": \"uid\",\n            \"x-kubernetes-patch-strategy\": \"merge\"\n          },\n          \"resourceVersion\": {\n            \"description\": \"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n            \"type\": \"string\"\n          },\n          \"selfLink\": {\n            \"description\": \"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\",\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"description\": \"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference\": {\n        \"description\": \"OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.\",\n        \"properties\": {\n          \"apiVersion\": {\n            \"default\": \"\",\n            \"description\": \"API version of the referent.\",\n            \"type\": \"string\"\n          },\n          \"blockOwnerDeletion\": {\n            \"description\": \"If true, AND if the owner has the \\\"foregroundDeletion\\\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \\\"delete\\\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.\",\n            \"type\": \"boolean\"\n          },\n          \"controller\": {\n            \"description\": \"If true, this reference points to the managing controller.\",\n            \"type\": \"boolean\"\n          },\n          \"kind\": {\n            \"default\": \"\",\n            \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"default\": \"\",\n            \"description\": \"Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names\",\n            \"type\": \"string\"\n          },\n          \"uid\": {\n            \"default\": \"\",\n            \"description\": \"UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"apiVersion\",\n          \"kind\",\n          \"name\",\n          \"uid\"\n        ],\n        \"type\": \"object\",\n        \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"io.k8s.apimachinery.pkg.apis.meta.v1.Time\": {\n        \"description\": \"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\",\n        \"format\": \"date-time\",\n        \"type\": \"string\"\n      }\n    },\n    \"securitySchemes\": {\n      \"BearerToken\": {\n        \"description\": \"Bearer Token authentication\",\n        \"in\": \"header\",\n        \"name\": \"authorization\",\n        \"type\": \"apiKey\"\n      }\n    }\n  },\n  \"info\": {\n    \"title\": \"Kubernetes\",\n    \"version\": \"unversioned\"\n  },\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/apis/authorization.k8s.io/v1/\": {\n      \"get\": {\n        \"description\": \"get available resources\",\n        \"operationId\": \"getAuthorizationV1APIResources\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"tags\": [\n          \"authorization_v1\"\n        ]\n      }\n    },\n    \"/apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews\": {\n      \"parameters\": [\n        {\n          \"description\": \"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\",\n          \"in\": \"query\",\n          \"name\": \"dryRun\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\",\n          \"in\": \"query\",\n          \"name\": \"fieldManager\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.\",\n          \"in\": \"query\",\n          \"name\": \"fieldValidation\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"object name and auth scope, such as for teams and projects\",\n          \"in\": \"path\",\n          \"name\": \"namespace\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"If 'true', then the output is pretty printed.\",\n          \"in\": \"query\",\n          \"name\": \"pretty\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        }\n      ],\n      \"post\": {\n        \"description\": \"create a LocalSubjectAccessReview\",\n        \"operationId\": \"createAuthorizationV1NamespacedLocalSubjectAccessReview\",\n        \"requestBody\": {\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"Created\"\n          },\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.LocalSubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"Accepted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"tags\": [\n          \"authorization_v1\"\n        ],\n        \"x-kubernetes-action\": \"post\",\n        \"x-kubernetes-group-version-kind\": {\n          \"group\": \"authorization.k8s.io\",\n          \"kind\": \"LocalSubjectAccessReview\",\n          \"version\": \"v1\"\n        }\n      }\n    },\n    \"/apis/authorization.k8s.io/v1/selfsubjectaccessreviews\": {\n      \"parameters\": [\n        {\n          \"description\": \"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\",\n          \"in\": \"query\",\n          \"name\": \"dryRun\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\",\n          \"in\": \"query\",\n          \"name\": \"fieldManager\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.\",\n          \"in\": \"query\",\n          \"name\": \"fieldValidation\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"If 'true', then the output is pretty printed.\",\n          \"in\": \"query\",\n          \"name\": \"pretty\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        }\n      ],\n      \"post\": {\n        \"description\": \"create a SelfSubjectAccessReview\",\n        \"operationId\": \"createAuthorizationV1SelfSubjectAccessReview\",\n        \"requestBody\": {\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"Created\"\n          },\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"Accepted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"tags\": [\n          \"authorization_v1\"\n        ],\n        \"x-kubernetes-action\": \"post\",\n        \"x-kubernetes-group-version-kind\": {\n          \"group\": \"authorization.k8s.io\",\n          \"kind\": \"SelfSubjectAccessReview\",\n          \"version\": \"v1\"\n        }\n      }\n    },\n    \"/apis/authorization.k8s.io/v1/selfsubjectrulesreviews\": {\n      \"parameters\": [\n        {\n          \"description\": \"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\",\n          \"in\": \"query\",\n          \"name\": \"dryRun\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\",\n          \"in\": \"query\",\n          \"name\": \"fieldManager\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.\",\n          \"in\": \"query\",\n          \"name\": \"fieldValidation\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"If 'true', then the output is pretty printed.\",\n          \"in\": \"query\",\n          \"name\": \"pretty\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        }\n      ],\n      \"post\": {\n        \"description\": \"create a SelfSubjectRulesReview\",\n        \"operationId\": \"createAuthorizationV1SelfSubjectRulesReview\",\n        \"requestBody\": {\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              }\n            },\n            \"description\": \"Created\"\n          },\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SelfSubjectRulesReview\"\n                }\n              }\n            },\n            \"description\": \"Accepted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"tags\": [\n          \"authorization_v1\"\n        ],\n        \"x-kubernetes-action\": \"post\",\n        \"x-kubernetes-group-version-kind\": {\n          \"group\": \"authorization.k8s.io\",\n          \"kind\": \"SelfSubjectRulesReview\",\n          \"version\": \"v1\"\n        }\n      }\n    },\n    \"/apis/authorization.k8s.io/v1/subjectaccessreviews\": {\n      \"parameters\": [\n        {\n          \"description\": \"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed\",\n          \"in\": \"query\",\n          \"name\": \"dryRun\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.\",\n          \"in\": \"query\",\n          \"name\": \"fieldManager\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.\",\n          \"in\": \"query\",\n          \"name\": \"fieldValidation\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        },\n        {\n          \"description\": \"If 'true', then the output is pretty printed.\",\n          \"in\": \"query\",\n          \"name\": \"pretty\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"uniqueItems\": true\n          }\n        }\n      ],\n      \"post\": {\n        \"description\": \"create a SubjectAccessReview\",\n        \"operationId\": \"createAuthorizationV1SubjectAccessReview\",\n        \"requestBody\": {\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"Created\"\n          },\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              },\n              \"application/vnd.kubernetes.protobuf\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              },\n              \"application/yaml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/io.k8s.api.authorization.v1.SubjectAccessReview\"\n                }\n              }\n            },\n            \"description\": \"Accepted\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        },\n        \"tags\": [\n          \"authorization_v1\"\n        ],\n        \"x-kubernetes-action\": \"post\",\n        \"x-kubernetes-group-version-kind\": {\n          \"group\": \"authorization.k8s.io\",\n          \"kind\": \"SubjectAccessReview\",\n          \"version\": \"v1\"\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/sgtest/megarepo@c2ab623d65dc84031bd19bae8663ae38ff7038de/-/blob/kubernetes/api/openapi-spec/v3/apis__authorization.k8s.io__v1_openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/sgtest/megarepo/blob/c2ab623d65dc84031bd19bae8663ae38ff7038de/kubernetes/api/openapi-spec/v3/apis__authorization.k8s.io__v1_openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"io.k8s.api.authorization.v1.SelfSubjectAccessReview\": parse schema: property \"metadata\": at 180:23: parse schema: infer default type: invalid value \"{}\""
}