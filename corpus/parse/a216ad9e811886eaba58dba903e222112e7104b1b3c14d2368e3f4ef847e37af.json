{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/dlm/2018-01-12/openapi.yaml",
			"byteSize": 64701,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-01-12'\n  x-release: v4\n  title: Amazon Data Lifecycle Manager\n  description: '\u003cfullname\u003eAmazon Data Lifecycle Manager\u003c/fullname\u003e \u003cp\u003eWith Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.\u003c/p\u003e \u003cp\u003eAmazon DLM supports Amazon EBS volumes and snapshots. For information about using Amazon DLM with Amazon EBS, see \u003ca href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\"\u003eAutomating the Amazon EBS Snapshot Lifecycle\u003c/a\u003e in the \u003ci\u003eAmazon EC2 User Guide\u003c/i\u003e.\u003c/p\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: dlm\n  x-aws-signingName: dlm\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dlm-2018-01-12.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/dlm/'\nservers:\n  - url: 'http://dlm.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon DLM multi-region endpoint\n  - url: 'https://dlm.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon DLM multi-region endpoint\n  - url: 'http://dlm.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://dlm.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /policies:\n    post:\n      operationId: CreateLifecyclePolicy\n      description: Creates a policy to manage the lifecycle of the specified Amazon Web Services resources. You can create up to 100 lifecycle policies.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLifecyclePolicyResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ExecutionRoleArn\n                - Description\n                - State\n                - PolicyDetails\n              properties:\n                ExecutionRoleArn:\n                  description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.\n                  type: string\n                  pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\\d+:role/.*'\n                  minLength: 0\n                  maxLength: 2048\n                Description:\n                  description: 'A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.'\n                  type: string\n                  pattern: '[0-9A-Za-z _-]+'\n                  minLength: 0\n                  maxLength: 500\n                State:\n                  description: The desired activation state of the lifecycle policy after creation.\n                  type: string\n                  enum:\n                    - ENABLED\n                    - DISABLED\n                PolicyDetails:\n                  description: Specifies the configuration of a lifecycle policy.\n                  type: object\n                  properties:\n                    PolicyType:\n                      allOf:\n                        - $ref: '#/components/schemas/PolicyTypeValues'\n                        - description: \u003cp\u003eThe valid target resource types and actions a policy can manage. Specify \u003ccode\u003eEBS_SNAPSHOT_MANAGEMENT\u003c/code\u003e to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify \u003ccode\u003eIMAGE_MANAGEMENT\u003c/code\u003e to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify \u003ccode\u003eEVENT_BASED_POLICY \u003c/code\u003e to create an event-based policy that performs specific actions when a defined event occurs in your Amazon Web Services account.\u003c/p\u003e \u003cp\u003eThe default is \u003ccode\u003eEBS_SNAPSHOT_MANAGEMENT\u003c/code\u003e.\u003c/p\u003e\n                    ResourceTypes:\n                      allOf:\n                        - $ref: '#/components/schemas/ResourceTypeValuesList'\n                        - description: '\u003cp\u003eThe target resource type for snapshot and AMI lifecycle policies. Use \u003ccode\u003eVOLUME \u003c/code\u003eto create snapshots of individual volumes or use \u003ccode\u003eINSTANCE\u003c/code\u003e to create multi-volume snapshots from the volumes for an instance.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n                    ResourceLocations:\n                      allOf:\n                        - $ref: '#/components/schemas/ResourceLocationList'\n                        - description: '\u003cp\u003eThe location of the resources to backup. If the source resources are located in an Amazon Web Services Region, specify \u003ccode\u003eCLOUD\u003c/code\u003e. If the source resources are located on an Outpost in your account, specify \u003ccode\u003eOUTPOST\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eOUTPOST\u003c/code\u003e, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account.\u003c/p\u003e'\n                    TargetTags:\n                      allOf:\n                        - $ref: '#/components/schemas/TargetTagList'\n                        - description: '\u003cp\u003eThe single tag that identifies targeted resources for this policy.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n                    Schedules:\n                      allOf:\n                        - $ref: '#/components/schemas/ScheduleList'\n                        - description: '\u003cp\u003eThe schedules of policy-defined actions for snapshot and AMI lifecycle policies. A policy can have up to four schedulesâ€”one mandatory schedule and up to three optional schedules.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n                    Parameters:\n                      allOf:\n                        - $ref: '#/components/schemas/Parameters'\n                        - description: '\u003cp\u003eA set of optional parameters for snapshot and AMI lifecycle policies. \u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n                    EventSource:\n                      allOf:\n                        - $ref: '#/components/schemas/EventSource'\n                        - description: '\u003cp\u003eThe event that triggers the event-based policy. \u003c/p\u003e \u003cp\u003eThis parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.\u003c/p\u003e'\n                    Actions:\n                      allOf:\n                        - $ref: '#/components/schemas/ActionList'\n                        - description: '\u003cp\u003eThe actions to be performed when the event-based policy is triggered. You can specify only one action per policy.\u003c/p\u003e \u003cp\u003eThis parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.\u003c/p\u003e'\n                Tags:\n                  description: The tags to apply to the lifecycle policy during creation.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetLifecyclePolicies\n      description: '\u003cp\u003eGets summary information about all or the specified data lifecycle policies.\u003c/p\u003e \u003cp\u003eTo get complete information about a policy, use \u003ca\u003eGetLifecyclePolicy\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLifecyclePoliciesResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      parameters:\n        - name: policyIds\n          in: query\n          required: false\n          description: The identifiers of the data lifecycle policies.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/PolicyId'\n        - name: state\n          in: query\n          required: false\n          description: The activation state.\n          schema:\n            type: string\n            enum:\n              - ENABLED\n              - DISABLED\n              - ERROR\n        - name: resourceTypes\n          in: query\n          required: false\n          description: The resource type.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/ResourceTypeValues'\n            minItems: 1\n            maxItems: 1\n        - name: targetTags\n          in: query\n          required: false\n          description: \u003cp\u003eThe target tag for a policy.\u003c/p\u003e \u003cp\u003eTags are strings in the format \u003ccode\u003ekey=value\u003c/code\u003e.\u003c/p\u003e\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagFilter'\n            minItems: 1\n            maxItems: 50\n        - name: tagsToAdd\n          in: query\n          required: false\n          description: \u003cp\u003eThe tags to add to objects created by the policy.\u003c/p\u003e \u003cp\u003eTags are strings in the format \u003ccode\u003ekey=value\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThese user-defined tags are added in addition to the Amazon Web Services-added lifecycle tags.\u003c/p\u003e\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagFilter'\n            minItems: 0\n            maxItems: 50\n  '/policies/{policyId}/':\n    delete:\n      operationId: DeleteLifecyclePolicy\n      description: Deletes the specified lifecycle policy and halts the automated operations that the policy specified.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLifecyclePolicyResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          description: The identifier of the lifecycle policy.\n          schema:\n            type: string\n            pattern: 'policy-[A-Za-z0-9]+'\n            minLength: 0\n            maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetLifecyclePolicy\n      description: Gets detailed information about the specified lifecycle policy.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLifecyclePolicyResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          description: The identifier of the lifecycle policy.\n          schema:\n            type: string\n            pattern: 'policy-[A-Za-z0-9]+'\n            minLength: 0\n            maxLength: 64\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Lists the tags for the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\\d+:policy/[0-9A-Za-z_-]{1,128}$'\n            minLength: 0\n            maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Adds the specified tags to the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\\d+:policy/[0-9A-Za-z_-]{1,128}$'\n            minLength: 0\n            maxLength: 2048\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Tags\n              properties:\n                Tags:\n                  description: One or more tags.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Removes the specified tags from the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource.\n          schema:\n            type: string\n            pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\\d+:policy/[0-9A-Za-z_-]{1,128}$'\n            minLength: 0\n            maxLength: 2048\n        - name: tagKeys\n          in: query\n          required: true\n          description: The tag keys.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 1\n            maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/policies/{policyId}':\n    patch:\n      operationId: UpdateLifecyclePolicy\n      description: Updates the specified lifecycle policy.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLifecyclePolicyResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n      parameters:\n        - name: policyId\n          in: path\n          required: true\n          description: The identifier of the lifecycle policy.\n          schema:\n            type: string\n            pattern: 'policy-[A-Za-z0-9]+'\n            minLength: 0\n            maxLength: 64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ExecutionRoleArn:\n                  description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.\n                  type: string\n                  pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\\d+:role/.*'\n                  minLength: 0\n                  maxLength: 2048\n                State:\n                  description: The desired activation state of the lifecycle policy after creation.\n                  type: string\n                  enum:\n                    - ENABLED\n                    - DISABLED\n                Description:\n                  description: A description of the lifecycle policy.\n                  type: string\n                  pattern: '[0-9A-Za-z _-]+'\n                  minLength: 0\n                  maxLength: 500\n                PolicyDetails:\n                  description: Specifies the configuration of a lifecycle policy.\n                  type: object\n                  properties:\n                    PolicyType:\n                      allOf:\n                        - $ref: '#/components/schemas/PolicyTypeValues'\n                        - description: \u003cp\u003eThe valid target resource types and actions a policy can manage. Specify \u003ccode\u003eEBS_SNAPSHOT_MANAGEMENT\u003c/code\u003e to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify \u003ccode\u003eIMAGE_MANAGEMENT\u003c/code\u003e to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify \u003ccode\u003eEVENT_BASED_POLICY \u003c/code\u003e to create an event-based policy that performs specific actions when a defined event occurs in your Amazon Web Services account.\u003c/p\u003e \u003cp\u003eThe default is \u003ccode\u003eEBS_SNAPSHOT_MANAGEMENT\u003c/code\u003e.\u003c/p\u003e\n                    ResourceTypes:\n                      allOf:\n                        - $ref: '#/components/schemas/ResourceTypeValuesList'\n                        - description: '\u003cp\u003eThe target resource type for snapshot and AMI lifecycle policies. Use \u003ccode\u003eVOLUME \u003c/code\u003eto create snapshots of individual volumes or use \u003ccode\u003eINSTANCE\u003c/code\u003e to create multi-volume snapshots from the volumes for an instance.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n                    ResourceLocations:\n                      allOf:\n                        - $ref: '#/components/schemas/ResourceLocationList'\n                        - description: '\u003cp\u003eThe location of the resources to backup. If the source resources are located in an Amazon Web Services Region, specify \u003ccode\u003eCLOUD\u003c/code\u003e. If the source resources are located on an Outpost in your account, specify \u003ccode\u003eOUTPOST\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eOUTPOST\u003c/code\u003e, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account.\u003c/p\u003e'\n                    TargetTags:\n                      allOf:\n                        - $ref: '#/components/schemas/TargetTagList'\n                        - description: '\u003cp\u003eThe single tag that identifies targeted resources for this policy.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n                    Schedules:\n                      allOf:\n                        - $ref: '#/components/schemas/ScheduleList'\n                        - description: '\u003cp\u003eThe schedules of policy-defined actions for snapshot and AMI lifecycle policies. A policy can have up to four schedulesâ€”one mandatory schedule and up to three optional schedules.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n                    Parameters:\n                      allOf:\n                        - $ref: '#/components/schemas/Parameters'\n                        - description: '\u003cp\u003eA set of optional parameters for snapshot and AMI lifecycle policies. \u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n                    EventSource:\n                      allOf:\n                        - $ref: '#/components/schemas/EventSource'\n                        - description: '\u003cp\u003eThe event that triggers the event-based policy. \u003c/p\u003e \u003cp\u003eThis parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.\u003c/p\u003e'\n                    Actions:\n                      allOf:\n                        - $ref: '#/components/schemas/ActionList'\n                        - description: '\u003cp\u003eThe actions to be performed when the event-based policy is triggered. You can specify only one action per policy.\u003c/p\u003e \u003cp\u003eThis parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.\u003c/p\u003e'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateLifecyclePolicyResponse:\n      type: object\n      properties:\n        PolicyId:\n          allOf:\n            - $ref: '#/components/schemas/PolicyId'\n            - description: The identifier of the lifecycle policy.\n    PolicyTypeValues:\n      type: string\n      enum:\n        - EBS_SNAPSHOT_MANAGEMENT\n        - IMAGE_MANAGEMENT\n        - EVENT_BASED_POLICY\n    ResourceTypeValuesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceTypeValues'\n      minItems: 1\n      maxItems: 1\n    ResourceLocationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceLocationValues'\n      minItems: 1\n      maxItems: 1\n    TargetTagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      minItems: 1\n      maxItems: 50\n    ScheduleList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Schedule'\n      minItems: 1\n      maxItems: 4\n    Parameters:\n      type: object\n      properties:\n        ExcludeBootVolume:\n          allOf:\n            - $ref: '#/components/schemas/ExcludeBootVolume'\n            - description: '[EBS Snapshot Management â€“ Instance policies only] Indicates whether to exclude the root volume from snapshots created using \u003ca href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshots.html\"\u003eCreateSnapshots\u003c/a\u003e. The default is false.'\n        NoReboot:\n          allOf:\n            - $ref: '#/components/schemas/NoReboot'\n            - description: Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. \u003ccode\u003etrue\u003c/code\u003e indicates that targeted instances are not rebooted when the policy runs. \u003ccode\u003efalse\u003c/code\u003e indicates that target instances are rebooted when the policy runs. The default is \u003ccode\u003etrue\u003c/code\u003e (instances are not rebooted).\n      description: Specifies optional parameters to add to a policy. The set of valid parameters depends on the combination of policy type and resource type.\n    EventSource:\n      type: object\n      required:\n        - Type\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/EventSourceValues'\n            - description: The source of the event. Currently only managed CloudWatch Events rules are supported.\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/EventParameters'\n            - description: Information about the event.\n      description: Specifies an event that triggers an event-based policy.\n    ActionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Action'\n      minItems: 1\n      maxItems: 1\n    TagValue:\n      type: string\n      pattern: '[\\p{all}]*'\n      maxLength: 256\n    InvalidRequestException: {}\n    LimitExceededException: {}\n    InternalServerException: {}\n    DeleteLifecyclePolicyResponse:\n      type: object\n      properties: {}\n    ResourceNotFoundException: {}\n    GetLifecyclePoliciesResponse:\n      type: object\n      properties:\n        Policies:\n          allOf:\n            - $ref: '#/components/schemas/LifecyclePolicySummaryList'\n            - description: Summary information about the lifecycle policies.\n    PolicyId:\n      type: string\n      pattern: 'policy-[A-Za-z0-9]+'\n      minLength: 0\n      maxLength: 64\n    ResourceTypeValues:\n      type: string\n      enum:\n        - VOLUME\n        - INSTANCE\n    TagFilter:\n      type: string\n      pattern: '[\\p{all}]*'\n      minLength: 0\n      maxLength: 256\n    GetLifecyclePolicyResponse:\n      type: object\n      properties:\n        Policy:\n          allOf:\n            - $ref: '#/components/schemas/LifecyclePolicy'\n            - description: Detailed information about the lifecycle policy.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Information about the tags.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'\n      minLength: 1\n      maxLength: 128\n    UpdateLifecyclePolicyResponse:\n      type: object\n      properties: {}\n    ActionName:\n      type: string\n      pattern: '[0-9A-Za-z _-]+'\n      minLength: 0\n      maxLength: 120\n    CrossRegionCopyActionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/CrossRegionCopyAction'\n      minItems: 0\n      maxItems: 3\n    Action:\n      type: object\n      required:\n        - Name\n        - CrossRegionCopy\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ActionName'\n            - description: A descriptive name for the action.\n        CrossRegionCopy:\n          allOf:\n            - $ref: '#/components/schemas/CrossRegionCopyActionList'\n            - description: The rule for copying shared snapshots across Regions.\n      description: Specifies an action for an event-based policy.\n    AvailabilityZone:\n      type: string\n      pattern: '([a-z]+-){2,3}\\d[a-z]'\n      minLength: 0\n      maxLength: 16\n    AvailabilityZoneList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AvailabilityZone'\n      minItems: 1\n      maxItems: 10\n    AwsAccountId:\n      type: string\n      pattern: '^[0-9]{12}$'\n      minLength: 12\n      maxLength: 12\n    CmkArn:\n      type: string\n      pattern: 'arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\\d:\\d+:key/.*'\n      minLength: 0\n      maxLength: 2048\n    CopyTags:\n      type: boolean\n    CopyTagsNullable:\n      type: boolean\n    Count:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ExecutionRoleArn:\n      type: string\n      pattern: 'arn:aws(-[a-z]{1,3}){0,2}:iam::\\d+:role/.*'\n      minLength: 0\n      maxLength: 2048\n    PolicyDescription:\n      type: string\n      pattern: '[0-9A-Za-z _-]+'\n      minLength: 0\n      maxLength: 500\n    SettablePolicyStateValues:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    PolicyDetails:\n      type: object\n      properties:\n        PolicyType:\n          allOf:\n            - $ref: '#/components/schemas/PolicyTypeValues'\n            - description: \u003cp\u003eThe valid target resource types and actions a policy can manage. Specify \u003ccode\u003eEBS_SNAPSHOT_MANAGEMENT\u003c/code\u003e to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify \u003ccode\u003eIMAGE_MANAGEMENT\u003c/code\u003e to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify \u003ccode\u003eEVENT_BASED_POLICY \u003c/code\u003e to create an event-based policy that performs specific actions when a defined event occurs in your Amazon Web Services account.\u003c/p\u003e \u003cp\u003eThe default is \u003ccode\u003eEBS_SNAPSHOT_MANAGEMENT\u003c/code\u003e.\u003c/p\u003e\n        ResourceTypes:\n          allOf:\n            - $ref: '#/components/schemas/ResourceTypeValuesList'\n            - description: '\u003cp\u003eThe target resource type for snapshot and AMI lifecycle policies. Use \u003ccode\u003eVOLUME \u003c/code\u003eto create snapshots of individual volumes or use \u003ccode\u003eINSTANCE\u003c/code\u003e to create multi-volume snapshots from the volumes for an instance.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n        ResourceLocations:\n          allOf:\n            - $ref: '#/components/schemas/ResourceLocationList'\n            - description: '\u003cp\u003eThe location of the resources to backup. If the source resources are located in an Amazon Web Services Region, specify \u003ccode\u003eCLOUD\u003c/code\u003e. If the source resources are located on an Outpost in your account, specify \u003ccode\u003eOUTPOST\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eOUTPOST\u003c/code\u003e, Amazon Data Lifecycle Manager backs up all resources of the specified type with matching target tags across all of the Outposts in your account.\u003c/p\u003e'\n        TargetTags:\n          allOf:\n            - $ref: '#/components/schemas/TargetTagList'\n            - description: '\u003cp\u003eThe single tag that identifies targeted resources for this policy.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n        Schedules:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleList'\n            - description: '\u003cp\u003eThe schedules of policy-defined actions for snapshot and AMI lifecycle policies. A policy can have up to four schedulesâ€”one mandatory schedule and up to three optional schedules.\u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/Parameters'\n            - description: '\u003cp\u003eA set of optional parameters for snapshot and AMI lifecycle policies. \u003c/p\u003e \u003cp\u003eThis parameter is required for snapshot and AMI policies only. If you are creating an event-based policy, omit this parameter.\u003c/p\u003e'\n        EventSource:\n          allOf:\n            - $ref: '#/components/schemas/EventSource'\n            - description: '\u003cp\u003eThe event that triggers the event-based policy. \u003c/p\u003e \u003cp\u003eThis parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.\u003c/p\u003e'\n        Actions:\n          allOf:\n            - $ref: '#/components/schemas/ActionList'\n            - description: '\u003cp\u003eThe actions to be performed when the event-based policy is triggered. You can specify only one action per policy.\u003c/p\u003e \u003cp\u003eThis parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter.\u003c/p\u003e'\n      description: Specifies the configuration of a lifecycle policy.\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 200\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    CreateLifecyclePolicyRequest:\n      type: object\n      required:\n        - ExecutionRoleArn\n        - Description\n        - State\n        - PolicyDetails\n      title: CreateLifecyclePolicyRequest\n      properties:\n        ExecutionRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionRoleArn'\n            - description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDescription'\n            - description: 'A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.'\n        State:\n          allOf:\n            - $ref: '#/components/schemas/SettablePolicyStateValues'\n            - description: The desired activation state of the lifecycle policy after creation.\n        PolicyDetails:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDetails'\n            - description: The configuration details of the lifecycle policy.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags to apply to the lifecycle policy during creation.\n    LocationValues:\n      type: string\n      enum:\n        - CLOUD\n        - OUTPOST_LOCAL\n    Interval:\n      type: integer\n      minimum: 1\n    IntervalUnitValues:\n      type: string\n      enum:\n        - HOURS\n    TimesList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Time'\n      maxItems: 1\n    CronExpression:\n      type: string\n      pattern: 'cron\\([^\\n]{11,100}\\)'\n      minLength: 17\n      maxLength: 106\n    CreateRule:\n      type: object\n      properties:\n        Location:\n          allOf:\n            - $ref: '#/components/schemas/LocationValues'\n            - description: '\u003cp\u003eSpecifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify \u003ccode\u003eCLOUD\u003c/code\u003e. To create snapshots on the same Outpost as the source resource, specify \u003ccode\u003eOUTPOST_LOCAL\u003c/code\u003e. If you omit this parameter, \u003ccode\u003eCLOUD\u003c/code\u003e is used by default.\u003c/p\u003e \u003cp\u003eIf the policy targets resources in an Amazon Web Services Region, then you must create snapshots in the same Region as the source resource.\u003c/p\u003e \u003cp\u003eIf the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost.\u003c/p\u003e'\n        Interval:\n          allOf:\n            - $ref: '#/components/schemas/Interval'\n            - description: 'The interval between snapshots. The supported values are 1, 2, 3, 4, 6, 8, 12, and 24.'\n        IntervalUnit:\n          allOf:\n            - $ref: '#/components/schemas/IntervalUnitValues'\n            - description: The interval unit.\n        Times:\n          allOf:\n            - $ref: '#/components/schemas/TimesList'\n            - description: '\u003cp\u003eThe time, in UTC, to start the operation. The supported format is hh:mm.\u003c/p\u003e \u003cp\u003eThe operation occurs within a one-hour window following the specified time. If you do not specify a time, Amazon DLM selects a time within the next 24 hours.\u003c/p\u003e'\n        CronExpression:\n          allOf:\n            - $ref: '#/components/schemas/CronExpression'\n            - description: 'The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. For more information, see \u003ca href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions\"\u003eCron expressions\u003c/a\u003e in the \u003ci\u003eAmazon CloudWatch User Guide\u003c/i\u003e.'\n      description: '\u003cp\u003eSpecifies when to create snapshots of EBS volumes.\u003c/p\u003e \u003cp\u003eYou must specify either a Cron expression or an interval, interval unit, and start time. You cannot specify both.\u003c/p\u003e'\n    Target:\n      type: string\n      pattern: '^[\\w:\\-\\/\\*]+$'\n      minLength: 0\n      maxLength: 2048\n    EncryptionConfiguration:\n      type: object\n      required:\n        - Encrypted\n      properties:\n        Encrypted:\n          allOf:\n            - $ref: '#/components/schemas/Encrypted'\n            - description: 'To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.'\n        CmkArn:\n          allOf:\n            - $ref: '#/components/schemas/CmkArn'\n            - description: 'The Amazon Resource Name (ARN) of the KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.'\n      description: Specifies the encryption settings for shared snapshots that are copied across Regions.\n    CrossRegionCopyRetainRule:\n      type: object\n      properties:\n        Interval:\n          allOf:\n            - $ref: '#/components/schemas/Interval'\n            - description: 'The amount of time to retain each snapshot. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'\n        IntervalUnit:\n          allOf:\n            - $ref: '#/components/schemas/RetentionIntervalUnitValues'\n            - description: The unit of time for time-based retention.\n      description: Specifies the retention rule for cross-Region snapshot copies.\n    CrossRegionCopyAction:\n      type: object\n      required:\n        - Target\n        - EncryptionConfiguration\n      properties:\n        Target:\n          allOf:\n            - $ref: '#/components/schemas/Target'\n            - description: The target Region.\n        EncryptionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionConfiguration'\n            - description: The encryption settings for the copied snapshot.\n        RetainRule:\n          $ref: '#/components/schemas/CrossRegionCopyRetainRule'\n      description: Specifies a rule for copying shared snapshots across Regions.\n    RetentionIntervalUnitValues:\n      type: string\n      enum:\n        - DAYS\n        - WEEKS\n        - MONTHS\n        - YEARS\n    CrossRegionCopyDeprecateRule:\n      type: object\n      properties:\n        Interval:\n          allOf:\n            - $ref: '#/components/schemas/Interval'\n            - description: 'The period after which to deprecate the cross-Region AMI copies. The period must be less than or equal to the cross-Region AMI copy retention period, and it can''t be greater than 10 years. This is equivalent to 120 months, 520 weeks, or 3650 days.'\n        IntervalUnit:\n          allOf:\n            - $ref: '#/components/schemas/RetentionIntervalUnitValues'\n            - description: The unit of time in which to measure the \u003cb\u003eInterval\u003c/b\u003e.\n      description: Specifies an AMI deprecation rule for cross-Region AMI copies created by a cross-Region copy rule.\n    TargetRegion:\n      type: string\n      pattern: '([a-z]+-){2,3}\\d'\n      minLength: 0\n      maxLength: 16\n    Encrypted:\n      type: boolean\n    CrossRegionCopyRule:\n      type: object\n      required:\n        - Encrypted\n      properties:\n        TargetRegion:\n          allOf:\n            - $ref: '#/components/schemas/TargetRegion'\n            - description: '\u003cp\u003eAvoid using this parameter when creating new policies. Instead, use \u003cb\u003eTarget\u003c/b\u003e to specify a target Region or a target Outpost for snapshot copies.\u003c/p\u003e \u003cp\u003eFor policies created before the \u003cb\u003eTarget\u003c/b\u003e parameter was introduced, this parameter indicates the target Region for snapshot copies.\u003c/p\u003e'\n        Target:\n          allOf:\n            - $ref: '#/components/schemas/Target'\n            - description: \u003cp\u003eThe target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.\u003c/p\u003e \u003cp\u003eUse this parameter instead of \u003cb\u003eTargetRegion\u003c/b\u003e. Do not specify both.\u003c/p\u003e\n        Encrypted:\n          allOf:\n            - $ref: '#/components/schemas/Encrypted'\n            - description: 'To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or if encryption by default is not enabled.'\n        CmkArn:\n          allOf:\n            - $ref: '#/components/schemas/CmkArn'\n            - description: 'The Amazon Resource Name (ARN) of the KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.'\n        CopyTags:\n          allOf:\n            - $ref: '#/components/schemas/CopyTagsNullable'\n            - description: Indicates whether to copy all user-defined tags from the source snapshot to the cross-Region snapshot copy.\n        RetainRule:\n          allOf:\n            - $ref: '#/components/schemas/CrossRegionCopyRetainRule'\n            - description: The retention rule that indicates how long snapshot copies are to be retained in the destination Region.\n        DeprecateRule:\n          allOf:\n            - $ref: '#/components/schemas/CrossRegionCopyDeprecateRule'\n            - description: The AMI deprecation rule for cross-Region AMI copies created by the rule.\n      description: Specifies a rule for cross-Region snapshot copies.\n    CrossRegionCopyRules:\n      type: array\n      items:\n        $ref: '#/components/schemas/CrossRegionCopyRule'\n      minItems: 0\n      maxItems: 3\n    DeleteLifecyclePolicyRequest:\n      type: object\n      title: DeleteLifecyclePolicyRequest\n      properties: {}\n    DeprecateRule:\n      type: object\n      properties:\n        Count:\n          allOf:\n            - $ref: '#/components/schemas/Count'\n            - description: 'If the schedule has a count-based retention rule, this parameter specifies the number of oldest AMIs to deprecate. The count must be less than or equal to the schedule''s retention count, and it can''t be greater than 1000.'\n        Interval:\n          allOf:\n            - $ref: '#/components/schemas/Interval'\n            - description: 'If the schedule has an age-based retention rule, this parameter specifies the period after which to deprecate AMIs created by the schedule. The period must be less than or equal to the schedule''s retention period, and it can''t be greater than 10 years. This is equivalent to 120 months, 520 weeks, or 3650 days.'\n        IntervalUnit:\n          allOf:\n            - $ref: '#/components/schemas/RetentionIntervalUnitValues'\n            - description: The unit of time in which to measure the \u003cb\u003eInterval\u003c/b\u003e.\n      description: Specifies an AMI deprecation rule for a schedule.\n    DescriptionRegex:\n      type: string\n      pattern: '[\\p{all}]*'\n      minLength: 0\n      maxLength: 1000\n    EventTypeValues:\n      type: string\n      enum:\n        - shareSnapshot\n    SnapshotOwnerList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AwsAccountId'\n      minItems: 0\n      maxItems: 50\n    EventParameters:\n      type: object\n      required:\n        - EventType\n        - SnapshotOwner\n        - DescriptionRegex\n      properties:\n        EventType:\n          allOf:\n            - $ref: '#/components/schemas/EventTypeValues'\n            - description: 'The type of event. Currently, only snapshot sharing events are supported.'\n        SnapshotOwner:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotOwnerList'\n            - description: The IDs of the Amazon Web Services accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified Amazon Web Services accounts shares a snapshot with your account.\n        DescriptionRegex:\n          allOf:\n            - $ref: '#/components/schemas/DescriptionRegex'\n            - description: '\u003cp\u003eThe snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.\u003c/p\u003e \u003cp\u003eFor example, specifying \u003ccode\u003e^.*Created for policy: policy-1234567890abcdef0.*$\u003c/code\u003e configures the policy to run only if snapshots created by policy \u003ccode\u003epolicy-1234567890abcdef0\u003c/code\u003e are shared with your account.\u003c/p\u003e'\n      description: Specifies an event that triggers an event-based policy.\n    EventSourceValues:\n      type: string\n      enum:\n        - MANAGED_CWE\n    ExcludeBootVolume:\n      type: boolean\n    FastRestoreRule:\n      type: object\n      required:\n        - AvailabilityZones\n      properties:\n        Count:\n          allOf:\n            - $ref: '#/components/schemas/Count'\n            - description: The number of snapshots to be enabled with fast snapshot restore.\n        Interval:\n          allOf:\n            - $ref: '#/components/schemas/Interval'\n            - description: 'The amount of time to enable fast snapshot restore. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'\n        IntervalUnit:\n          allOf:\n            - $ref: '#/components/schemas/RetentionIntervalUnitValues'\n            - description: The unit of time for enabling fast snapshot restore.\n        AvailabilityZones:\n          allOf:\n            - $ref: '#/components/schemas/AvailabilityZoneList'\n            - description: The Availability Zones in which to enable fast snapshot restore.\n      description: Specifies a rule for enabling fast snapshot restore. You can enable fast snapshot restore based on either a count or a time interval.\n    PolicyIdList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PolicyId'\n    GettablePolicyStateValues:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n        - ERROR\n    TargetTagsFilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagFilter'\n      minItems: 1\n      maxItems: 50\n    TagsToAddFilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagFilter'\n      minItems: 0\n      maxItems: 50\n    GetLifecyclePoliciesRequest:\n      type: object\n      title: GetLifecyclePoliciesRequest\n      properties: {}\n    LifecyclePolicySummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LifecyclePolicySummary'\n    GetLifecyclePolicyRequest:\n      type: object\n      title: GetLifecyclePolicyRequest\n      properties: {}\n    LifecyclePolicy:\n      type: object\n      properties:\n        PolicyId:\n          allOf:\n            - $ref: '#/components/schemas/PolicyId'\n            - description: The identifier of the lifecycle policy.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDescription'\n            - description: The description of the lifecycle policy.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/GettablePolicyStateValues'\n            - description: The activation state of the lifecycle policy.\n        StatusMessage:\n          allOf:\n            - $ref: '#/components/schemas/StatusMessage'\n            - description: The description of the status.\n        ExecutionRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionRoleArn'\n            - description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.\n        DateCreated:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The local date and time when the lifecycle policy was created.\n        DateModified:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The local date and time when the lifecycle policy was last modified.\n        PolicyDetails:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDetails'\n            - description: The configuration of the lifecycle policy\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags.\n        PolicyArn:\n          allOf:\n            - $ref: '#/components/schemas/PolicyArn'\n            - description: The Amazon Resource Name (ARN) of the policy.\n      description: Detailed information about a lifecycle policy.\n    StatusMessage:\n      type: string\n      pattern: '[\\p{all}]*'\n      minLength: 0\n      maxLength: 500\n    Timestamp:\n      type: string\n      format: date-time\n    PolicyArn:\n      type: string\n      pattern: '^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\\d+:policy/[0-9A-Za-z_-]{1,128}$'\n      minLength: 0\n      maxLength: 2048\n    LifecyclePolicySummary:\n      type: object\n      properties:\n        PolicyId:\n          allOf:\n            - $ref: '#/components/schemas/PolicyId'\n            - description: The identifier of the lifecycle policy.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDescription'\n            - description: The description of the lifecycle policy.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/GettablePolicyStateValues'\n            - description: The activation state of the lifecycle policy.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags.\n        PolicyType:\n          allOf:\n            - $ref: '#/components/schemas/PolicyTypeValues'\n            - description: The type of policy. \u003ccode\u003eEBS_SNAPSHOT_MANAGEMENT\u003c/code\u003e indicates that the policy manages the lifecycle of Amazon EBS snapshots. \u003ccode\u003eIMAGE_MANAGEMENT\u003c/code\u003e indicates that the policy manages the lifecycle of EBS-backed AMIs.\n      description: Summary information about a lifecycle policy.\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    NoReboot:\n      type: boolean\n    ResourceLocationValues:\n      type: string\n      enum:\n        - CLOUD\n        - OUTPOST\n    RetainRule:\n      type: object\n      properties:\n        Count:\n          allOf:\n            - $ref: '#/components/schemas/Count'\n            - description: 'The number of snapshots to retain for each volume, up to a maximum of 1000.'\n        Interval:\n          allOf:\n            - $ref: '#/components/schemas/Interval'\n            - description: 'The amount of time to retain each snapshot. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.'\n        IntervalUnit:\n          allOf:\n            - $ref: '#/components/schemas/RetentionIntervalUnitValues'\n            - description: The unit of time for time-based retention.\n      description: Specifies the retention rule for a lifecycle policy. You can retain snapshots based on either a count or a time interval.\n    ScheduleName:\n      type: string\n      pattern: '[0-9A-Za-z _-]+'\n      minLength: 0\n      maxLength: 120\n    TagsToAddList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      minItems: 0\n      maxItems: 45\n    VariableTagsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      minItems: 0\n      maxItems: 45\n    ShareRules:\n      type: array\n      items:\n        $ref: '#/components/schemas/ShareRule'\n      minItems: 0\n      maxItems: 1\n    Schedule:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleName'\n            - description: The name of the schedule.\n        CopyTags:\n          allOf:\n            - $ref: '#/components/schemas/CopyTags'\n            - description: Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.\n        TagsToAdd:\n          allOf:\n            - $ref: '#/components/schemas/TagsToAddList'\n            - description: The tags to apply to policy-created resources. These user-defined tags are in addition to the Amazon Web Services-added lifecycle tags.\n        VariableTags:\n          allOf:\n            - $ref: '#/components/schemas/VariableTagsList'\n            - description: 'A collection of key/value pairs with values determined dynamically when the policy is executed. Keys may be any valid Amazon EC2 tag key. Values must be in one of the two following formats: \u003ccode\u003e$(instance-id)\u003c/code\u003e or \u003ccode\u003e$(timestamp)\u003c/code\u003e. Variable tags are only valid for EBS Snapshot Management â€“ Instance policies.'\n        CreateRule:\n          allOf:\n            - $ref: '#/components/schemas/CreateRule'\n            - description: The creation rule.\n        RetainRule:\n          allOf:\n            - $ref: '#/components/schemas/RetainRule'\n            - description: The retention rule.\n        FastRestoreRule:\n          allOf:\n            - $ref: '#/components/schemas/FastRestoreRule'\n            - description: The rule for enabling fast snapshot restore.\n        CrossRegionCopyRules:\n          allOf:\n            - $ref: '#/components/schemas/CrossRegionCopyRules'\n            - description: '\u003cp\u003eThe rule for cross-Region snapshot copies.\u003c/p\u003e \u003cp\u003eYou can only specify cross-Region copy rules for policies that create snapshots in a Region. If the policy creates snapshots on an Outpost, then you cannot copy the snapshots to a Region or to an Outpost. If the policy creates snapshots in a Region, then snapshots can be copied to up to three Regions or Outposts.\u003c/p\u003e'\n        ShareRules:\n          allOf:\n            - $ref: '#/components/schemas/ShareRules'\n            - description: The rule for sharing snapshots with other Amazon Web Services accounts.\n        DeprecateRule:\n          allOf:\n            - $ref: '#/components/schemas/DeprecateRule'\n            - description: The AMI deprecation rule for the schedule.\n      description: Specifies a backup schedule for a snapshot or AMI lifecycle policy.\n    ShareTargetAccountList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AwsAccountId'\n      minItems: 1\n    ShareRule:\n      type: object\n      required:\n        - TargetAccounts\n      properties:\n        TargetAccounts:\n          allOf:\n            - $ref: '#/components/schemas/ShareTargetAccountList'\n            - description: The IDs of the Amazon Web Services accounts with which to share the snapshots.\n        UnshareInterval:\n          allOf:\n            - $ref: '#/components/schemas/Interval'\n            - description: The period after which snapshots that are shared with other Amazon Web Services accounts are automatically unshared.\n        UnshareIntervalUnit:\n          allOf:\n            - $ref: '#/components/schemas/RetentionIntervalUnitValues'\n            - description: The unit of time for the automatic unsharing interval.\n      description: Specifies a rule for sharing snapshots across Amazon Web Services accounts.\n    String:\n      type: string\n      pattern: '[\\p{all}]*'\n      minLength: 0\n      maxLength: 500\n    Tag:\n      type: object\n      required:\n        - Key\n        - Value\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The tag key.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The tag value.\n      description: Specifies a tag for a resource.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 200\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: One or more tags.\n    Time:\n      type: string\n      pattern: '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$'\n      minLength: 5\n      maxLength: 5\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateLifecyclePolicyRequest:\n      type: object\n      title: UpdateLifecyclePolicyRequest\n      properties:\n        ExecutionRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionRoleArn'\n            - description: The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/SettablePolicyStateValues'\n            - description: The desired activation state of the lifecycle policy after creation.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDescription'\n            - description: A description of the lifecycle policy.\n        PolicyDetails:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDetails'\n            - description: The configuration of the lifecycle policy. You cannot update the policy type or the resource type.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@cafd364eceab1026372ac69bd0ef670c5fe491bb/-/blob/APIs/amazonaws.com/dlm/2018-01-12/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/cafd364eceab1026372ac69bd0ef670c5fe491bb/APIs/amazonaws.com/dlm/2018-01-12/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /tags/{resourceArn}#tagKeys: delete: operation \"UntagResource\": parse path \"/tags/{resourceArn}#tagKeys\": path MUST NOT contain a fragment"
}