{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/teamdigitale/api-openapi-samples"
		},
		"file": {
			"name": "spid-registry-sp-openapi.yaml",
			"size": 0,
			"path": "external-apis/spid-registry-sp-openapi.yaml",
			"byteSize": 32045,
			"content": "openapi: 3.0.1\r\ninfo:\r\n  title: SPID Registry API\r\n  version: \"1.2\"\r\n\r\n  contact:\r\n    name: SPID API Support\r\n    email: spid.tech@agid.gov.it\r\n    url: https://spid.gov.it\r\n  x-logo:\r\n    url: \"https://registry.spid.gov.it/apidoc/spid-logo.svg\"\r\n    altText: \"SPID logo\"\r\n\r\n  description: |\r\n    SPID Registry Application Programming Interface.\r\n\r\n    Queste API sono documentate in **OpenAPI format**.\r\n    # Introduzione\r\n    Il registry, registro pubblico della federazione SPID, contiene la lista delle entità che hanno\r\n    superato il processo di accreditamento e quindi facenti parte della federazione SPID.\r\n    Il registry viene popolato dall'Agenzia per l’Italia Digitale a seguito del processo di stipula delle\r\n    convenzioni e aggiornata dalla stessa Agenzia nel corso delle attività legate alla gestione delle\r\n    convenzioni e della vigilanza sui soggetti del circuito SPID.\r\n    Il contenuto informativo del registry è in fruizione a tutte le entità appartenenti al circuito SPID ai\r\n    fini della verifica della sussistenza di relazioni di trust nei confronti di entità terze (IdP, AA, SP) e\r\n    del reperimento delle informazioni associate alla alle stesse.\r\n    La proposta condivisa dal gruppo di lavoro per la gestione dei metadata prevede l’utilizzo di due\r\n    differenti modalità, che saranno entrambe rese diponibili da AgID: API, GIT.\r\n\r\n    # Specifiche API\r\n    La soluzione prevede l’implementazione di una interfaccia API Rest, resa disponibile da AgID\r\n    presso il Registro pubblico dei metadata (registry.spid.gov.it), che consente il recupero dei\r\n    metadata attraverso interrogazioni massive e ricerche mirate.\r\n    L’API sarà compatibile con lo standard Metadata Query Protocol (MDQ) e conforme inoltre alle\r\n    specifiche OAS (OpenAPI Specification) e MODI (LL.GG. Interoperabilità AgID).\r\n\r\n    Attraverso tale interfaccia gli IdP potranno interrogare il Registry in due modalità:\r\n    - richiesta puntuale per ottenere l’XML di un metadata identificato tramite EntityID\r\n    - richiesta massiva per ottenere XML aggregato di tutti o un insieme specifico di metadata rilasciati sul Registry\r\n\r\n    *Descrizione [Formato PDF](./MDA_036-20210324_GestioneMetadata.pdf)*\r\n\r\nservers:\r\n  - url: https://registry.spid.gov.it\r\n    description: Registro pubblico dei metadata SPID\r\n  - url: http://localhost\r\n    description: Installazione locale del Registro SPID\r\n\r\ntags:\r\n  - name: Public API\r\n    description: In this section are described endpoints that can be consumed without authentication.\r\n  - name: request\r\n    description: Operazioni sui metadata\r\n  - name: store_model\r\n    x-displayName: The Order Model\r\n    description: |\r\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Order\" exampleRef=\"#/components/examples/Order\" showReadOnly={true} showWriteOnly={true} /\u003e\r\nx-tagGroups:\r\n  - name: RICHIESTE\r\n    tags:\r\n      - Richiesta Massiva\r\n      - Richiesta Singola\r\n      - status_code\r\n\r\npaths:\r\n  /entities/{sp-entityid}:\r\n    get:\r\n      tags:\r\n        - Richiesta Singola\r\n      summary: /entities/{sp-entityid}\r\n      operationId: getMetadataByEntityid\r\n      description: \u003e\r\n        Endpoint per il recupero metadata di uno specifico metadata identificato tramite EntityID.\r\n      externalDocs:\r\n        description: Learn more about user operations provided by this API.\r\n        url: http://api.example.com/docs/user-operations/\r\n      parameters:\r\n        - $ref: '#/components/parameters/sp-entityid'\r\n        - $ref: '#/components/parameters/output'\r\n      responses:\r\n        '200':\r\n            $ref: '#/components/responses/OK_singola_entityID'\r\n        '304':\r\n            $ref: '#/components/responses/NotModified'\r\n        '400':\r\n            $ref: '#/components/responses/BadRequest'\r\n        '401':\r\n            $ref: '#/components/responses/Unauthorized'\r\n        '404':\r\n            $ref: '#/components/responses/NotFound'\r\n        '405':\r\n            $ref: '#/components/responses/MethodNotAllowed'\r\n        '406':\r\n            $ref: '#/components/responses/NotAcceptable'\r\n        '505':\r\n            $ref: '#/components/responses/HTTPVersionNotSupported'\r\n        default:\r\n          description: Unexpected error\r\n  /entities:\r\n    get:\r\n      tags:\r\n        - Richiesta Massiva\r\n      summary: /entities\r\n      description:\r\n        La richiesta massiva, consente di ottenere in forma aggregata tutti i metadata aggiornati rilasciati da AgiD sul Registry oppure l’insieme di metadata richiesto.\r\n        Tale modalità può essere utilizzata dagli IdP per aggiornare il registro locale attraverso procedure schedulate in esecuzione automatica.\r\n        La chiamata all'endpoint  produce tutti i  metadata sotto forma di XML aggregato\r\n      operationId: getAllMetadata\r\n      parameters:\r\n        - $ref: '#/components/parameters/entity_type'\r\n        - $ref: '#/components/parameters/updated_from'\r\n        - $ref: '#/components/parameters/deleted_from'\r\n        - $ref: '#/components/parameters/valid_at'\r\n        - $ref: '#/components/parameters/organization_type'\r\n        - $ref: '#/components/parameters/federation_type'\r\n        - $ref: '#/components/parameters/aggregator_code'\r\n        - $ref: '#/components/parameters/eidas_ready'\r\n        - $ref: '#/components/parameters/only_entity_id'\r\n        - $ref: '#/components/parameters/output'\r\n        - $ref: '#/components/parameters/offsetParam'\r\n        - $ref: '#/components/parameters/limitParam'\r\n      responses:\r\n        '200':\r\n          $ref: '#/components/responses/OK_multiple_entityID'\r\n        '304':\r\n            $ref: '#/components/responses/NotModified'\r\n        '400':\r\n            $ref: '#/components/responses/BadRequest'\r\n        '401':\r\n            $ref: '#/components/responses/Unauthorized'\r\n        '404':\r\n            $ref: '#/components/responses/NotFound'\r\n        '405':\r\n            $ref: '#/components/responses/MethodNotAllowed'\r\n        '406':\r\n            $ref: '#/components/responses/NotAcceptable'\r\n        '505':\r\n            $ref: '#/components/responses/HTTPVersionNotSupported'\r\n        default:\r\n          description: Unexpected error\r\ncomponents:\r\n    responses:\r\n        NotModified:\r\n          description: I metadata richiesti non sono stati aggiornati rispetto all’ultima richiesta.\r\n        BadRequest:\r\n          description: La request non rispetta il formato prestabilito.\r\n        Unauthorized:\r\n          description: La request necessita di autenticazione.\r\n        NotFound:\r\n          description: I metadata non sono stati trovati nel repository.\r\n        MethodNotAllowed:\r\n          description: Il metodo utilizzato nella request non è supportato.\r\n        NotAcceptable:\r\n          description: I metadata non è disponibile nel content-type indicato all’interno dell’header.\r\n        HTTPVersionNotSupported:\r\n          description: HTTP/1.1 non è supportato.\r\n        OK_singola_entityID:\r\n          description: In caso di record recuperato con successo, essa conterrà nel body un oggetto xml rappresentativo del metadata richiesto.\r\n          content:\r\n            # I possibili valori di Content-Type sono indicati qui.\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/oneSP_schema'\r\n              examples:\r\n                oneSP_metadata_json:\r\n                  $ref: '#/components/examples/oneSP_metadata_json'\r\n            application/samlmetadata+xml:\r\n              #\u003c -- E' possibile referenziare gli schema XML/XSD tramite\r\n              # x-oas-draft-alternate-schema:\r\n              #  type: xml-schema\r\n              #  externalValue: ./rootschema.xsd\r\n              schema:\r\n                $ref: '#/components/schemas/oneSP_schema'\r\n              examples:\r\n                  oneSP_metadata_xml:\r\n                    $ref: '#/components/examples/oneSP_metadata_xml'\r\n          headers:\r\n            Content-Encoding:\r\n              schema:\r\n                type: string\r\n                description: Richiesto se e solo se il contenuto è compresso (anche le response vuote).\r\n            Content-Type:\r\n              schema:\r\n                type: string\r\n                description: Es. application/samlmetadata+xml (anche le response vuote).\r\n              required: true\r\n            ETag:\r\n              schema:\r\n                type: string\r\n                maxLength: 64      # \u003c-- Verificare se va bene questo formato\r\n                description: Entity Tag(anche le response vuote).\r\n                example: \"abcdefg\"\r\n              required: true\r\n            Cache-Control:\r\n              schema:\r\n                type: string\r\n                description: Utilizzato per specificare direttive per il meccanismo di caching nella request/response.\r\n            Content-Length:\r\n              schema:\r\n                type: string\r\n                example: 1234\r\n                description: Utilizzato per specificare direttive per il meccanismo di caching nella request/response.\r\n            Last-Modified:\r\n              schema:\r\n                type: string\r\n                format: date-time       # \u003c-- Verificare se va bene questo formato\r\n                example: Thu, 15 Apr 2010 12:45:26 GMT\r\n                description: Data ultima modifica.\r\n            sp-entityid:\r\n              schema:\r\n                type: string\r\n                description: valore URL-encoded dell’EntityID del metatadato da ricevere\r\n                example: stesso valore del parametro della Request\r\n            only_entity_id:\r\n              schema:\r\n                type: string       # \u003c-- to check (oppure boolean??)\r\n                example: stesso valore del parametro della Request\r\n                description: (solo se presente come parametro) Restituisce solo gli entity_id.\r\n            output:\r\n              schema:\r\n                type: string\r\n                example: json\r\n                description: (solo se presente come parametro) Ritorna il risultato della ricerca in formato JSON.\r\n        OK_multiple_entityID:\r\n          description: |\r\n            Risposta  contenente il metadata XML di entityid multiple.\r\n            Nel caso in cui sia specificato il parametro only_entity_id=Y, la Response conterrà un oggetto xml contenente al suo interno esclusivamente i riferimenti ai metadata.\r\n            **NOTA Gli eventuali parametri utilizzati sono restituiti nella Response come attributi nell’Header\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/MultipleSP_json'\r\n              examples:\r\n                MultipleSP_json:\r\n                  $ref: '#/components/examples/MultipleSP_json'\r\n            application/samlmetadata+xml:\r\n              schema:\r\n                $ref: '#/components/schemas/MultipleSP_xml'\r\n              examples:\r\n                MultipleSP_xml:\r\n                  $ref: '#/components/examples/MultipleSP_xml'\r\n            application/samlmetadata+xml_(only_entity_id):\r\n              schema:\r\n                $ref: '#/components/schemas/MultipleSP_xml_onlyID'\r\n              examples:\r\n                MultipleSP_xml_onlyID:\r\n                  $ref: '#/components/examples/MultipleSP_xml_onlyID'\r\n            application/json_(only_entity_id):\r\n              schema:\r\n                $ref: '#/components/schemas/MultipleSP_json_onlyID'\r\n              examples:\r\n                MultipleSP_json:\r\n                  $ref: '#/components/examples/MultipleSP_json_onlyID'\r\n          headers:\r\n            Content-Encoding:\r\n              schema:\r\n                type: string\r\n              description: Richiesto se e solo se il contenuto è compresso (anche le response vuote).\r\n            Etag:\r\n              schema:\r\n                type: string\r\n              description: Entity Tag(anche le response vuote).\r\n              example: \"abcdefg\"\r\n              required: true\r\n            Cache-Control:\r\n              schema:\r\n                type: string\r\n              required: true\r\n              description: Utilizzato per specificare direttive per il meccanismo di caching nella request/response.\r\n            Content-Length:\r\n              schema:\r\n                type: string\r\n              example: 1234\r\n              required: true\r\n              description: Utilizzato per specificare direttive per il meccanismo di caching nella request/response.\r\n            Last-Modified:\r\n              schema:\r\n                type: string\r\n                format: date-time       # \u003c-- Verificare se va bene questo formato\r\n              example: Thu, 15 Apr 2010 12:45:26 GMT\r\n              description: Data ultima modifica.\r\n            Tot-Metadata:\r\n              schema:\r\n                type: integer\r\n              description: Numero totale di metadata risultante dalla ricerca.\r\n              example: 1000\r\n            Tot-Pages:\r\n              schema:\r\n                type: integer\r\n              description: Numero totale di pagine risultanti dalla ricerca.\r\n              example: 40\r\n            Current-Page:\r\n              schema:\r\n                type: integer\r\n              description: Numero di pagina corrente.\r\n              example: 3\r\n            sp-entityid:\r\n              schema:\r\n                type: string\r\n              description: (solo se presente come parametro) valore URL-encoded dell’EntityID del metatadato da ricevere\r\n              example: stesso valore del parametro della Request\r\n            offsetParam:\r\n              schema:\r\n                type: integer\r\n              description: (solo se presente come parametro) Numero di pagina da restituire, a partire dal valore 1.\r\n            limitParam:\r\n              schema:\r\n                type: integer\r\n              description: (solo se presente come parametro) Numero di metadata per ogni pagina.\r\n            entity_type:\r\n              schema:\r\n                type: string\r\n                enum: [SP,IDP,AA]\r\n                example: IDP\r\n                default: SP\r\n                description: (solo se presente come parametro) Filtro per tipologia di ente (IDP,SP,AA).\r\n            updated_from:\r\n              schema:\r\n                type: string\r\n              example: stesso valore del parametro della Request\r\n              description: (solo se presente come parametro) Recupera i metadata aggiornati da una specifica data (YYYYMMDD).\r\n            deleted_from:\r\n              schema:\r\n                type: string\r\n                pattern: /([0-9]{4})(?:[0-9]{2})([0-9]{2})/\r\n                example: \"20190517\"\r\n                description: (solo se presente come parametro) Recupera i metadata non più presenti o cancellati da una specifica data  (YYYYMMDD).\r\n            valid_at:\r\n              schema:\r\n                type: string\r\n              example: stesso valore del parametro della Request\r\n              description: (solo se presente come parametro) Recupera i metadata esistenti ad una specifica data (YYYYMMDD).\r\n            organization_type:\r\n              schema:\r\n                type: string\r\n              example: stesso valore del parametro della Request\r\n              description: (solo se presente come parametro) Filtro per tipologia di ente (se PA o Privato).\r\n            federation_type:\r\n              schema:\r\n                type: string\r\n                enum: [SP,AG]\r\n                example: IDP\r\n                default: SP\r\n                description: (solo se presente come parametro) Filtro per tipologia di federazione (SP,AG).\r\n            aggregator_code:\r\n              schema:\r\n                type: string\r\n              example: stesso valore del parametro della Request\r\n              description: (solo se presente come parametro) Filtro per codice dell’ente aggregatore ovvero IPA o PIVA.\r\n            eidas_ready:\r\n              schema:\r\n                type: string       # \u003c-- to check (oppure boolean??)\r\n              example: stesso valore del parametro della Request\r\n              description: (solo se presente come parametro) Filtro su attributi eIDAS.\r\n            only_entity_id:\r\n              schema:\r\n                type: string       # \u003c-- to check (oppure boolean??)\r\n              example: stesso valore del parametro della Request\r\n              description: (solo se presente come parametro) Restituisce solo gli entity_id.\r\n            output:\r\n              schema:\r\n                type: string\r\n                enum: [json]\r\n                example: json\r\n                description:  (solo se presente come parametro) Ritorna il risultato della ricerca in formato JSON.\r\n        NotFound_example:\r\n          description: The specified resource was not found\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error_example'\r\n        Unauthorized_example:\r\n          description: Unauthorized\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error_example'\r\n    schemas:\r\n        Error_example:\r\n          type: object\r\n          properties:\r\n            code:\r\n              type: string\r\n            message:\r\n              type: string\r\n          required:\r\n            - code\r\n            - message\r\n        User_example:\r\n          type: object\r\n          properties:\r\n            id:\r\n              type: integer\r\n              example: 4\r\n            name:\r\n              type: string\r\n              example: Arthur Dent\r\n          # Both properties are required\r\n          required:\r\n            - id\r\n            - name\r\n        MultipleSP_xml:\r\n          type: object\r\n          $ref: './multipleSP_metadata_example.xml'  #\u003c -- Si deve capire se è possibile  inserire gli schema XML/XSD\r\n        MultipleSP_xml_onlyID:\r\n          type: object\r\n          $ref: './multipleSP_metadata_example_only_entityID.xml' #\u003c -- Si deve capire se è possibile  inserire gli schema XML/XSD\r\n        MultipleSP_json_onlyID:\r\n          type: object\r\n          required:\r\n            - Reference\r\n          properties:\r\n            Entita:\r\n              description: EntityID e URL di una entità\r\n              type: array\r\n              items:\r\n                $ref: '#/components/schemas/oneSP_schema_onlyID'\r\n          xml:\r\n            name: Reference\r\n        MultipleSP_json:\r\n          type: object\r\n          required:\r\n            - Entita\r\n          properties:\r\n            Entita:\r\n              description: Metadato di una entità\r\n              type: array\r\n              items:\r\n                $ref: '#/components/schemas/oneSP_schema'\r\n          xml:\r\n            name: Entita\r\n        oneSP_schema:\r\n            description: Schema del metatdato JSON per un SP\r\n            type: object\r\n            properties:\r\n              entity_id:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: https://entityID.unico/dell/SP\r\n              file_name:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: isssss.xml\r\n              file_hash:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: 06bdad0dd2812c5b37857b96e5ecc977367fd0a8c2129a0c275c8dc8f48\r\n              code:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: xyz\r\n              aggregator_code:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  nullable: true\r\n                  example: null\r\n              signing_certificate_x509:\r\n                  description: To be inserted\r\n                  type: array\r\n                  items:\r\n                      $ref: '#/components/schemas/certificate_x509'\r\n              organization_name:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: Nome organizzazione\r\n              organization_display_name:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: Display name\r\n              organization_type:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: PA\r\n              federation_type:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: SP\r\n              single_logout_service:\r\n                  description: To be inserted\r\n                  type: array\r\n                  items:\r\n                      $ref: '#/components/schemas/end_point'\r\n                  minLength: 1\r\n              assertion_consumer_service:\r\n                  description: To be inserted\r\n                  type: array\r\n                  items:\r\n                      $ref: '#/components/schemas/ACS_end_point'\r\n                  minLength: 1\r\n              attribute_consuming_service:\r\n                  description: To be inserted\r\n                  type: array\r\n                  items:\r\n                      $ref: '#/components/schemas/attribute_end_point'\r\n                  minLength: 1\r\n              eidas_ready:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: N\r\n              create_date:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: 2021-12-20 12:51:12\r\n              lastupdate_date:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: 2021-12-20 12:51:12\r\n              delete_date:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  nullable: true\r\n                  example: null\r\n              _deleted:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: N\r\n              _disabled:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: N\r\n              registry_link:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: https://registry.spid.gov.it/entities/http%3A%2F%2Fwww.xyz.it\r\n        oneSP_schema_onlyID:\r\n            description: Reference al metatdato pubblicato per un SP\r\n            type: object\r\n            properties:\r\n              entity_id:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: https://entityID.unico/dell/SP\r\n              registry_link:\r\n                  description: To be inserted\r\n                  type: string\r\n                  minLength: 1\r\n                  example: https://registry.spid.gov.it/entities/http%3A%2F%2Fwww.xyz.it\r\n        certificate_x509:\r\n            description: To be inserted\r\n            type: string\r\n            minLength: 1\r\n            example: MIIGujCCBKKgAwI...cY0LXQ==\r\n        end_point:\r\n            type: object\r\n            properties:\r\n                Binding:\r\n                    description: To bedone\r\n                    type: string\r\n                    minLength: 1\r\n                    example: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\r\n                Location:\r\n                    description: Location\r\n                    type: string\r\n                    minLength: 1\r\n                    example: https://authconc01.xyz.it/auth/realms/xyz-concorsi/broker/spidid/endpoint\r\n        ACS_end_point:\r\n            description: to be  done\r\n            allOf:\r\n                - $ref: '#/components/schemas/end_point'\r\n                - type: object\r\n                  properties:\r\n                        index:\r\n                            type: integer\r\n                            description: Index\r\n                            example: 0\r\n                        isDefault:\r\n                            type: boolean\r\n                            description: isDefault\r\n                            example: False\r\n        attribute_end_point:\r\n            type: object\r\n            properties:\r\n                index:\r\n                    description: index\r\n                    type: integer\r\n                    minLength: 1\r\n                    example: 0\r\n                ServiceName:\r\n                    description: ServiceName\r\n                    type: string\r\n                    minLength: 1\r\n                    example: Servizi xyz\r\n                ServiceDescription:\r\n                    description: ServiceDescription\r\n                    type: string\r\n                    minLength: 1\r\n                    example: Questo servizio fornisce...\r\n                RequestedAttribute:\r\n                    anyOf:\r\n                    - $ref: '#/components/schemas/SPID_attributes'\r\n        SPID_attributes:\r\n            description: |-\r\n              Insieme degli attributi definiti in SPID.\r\n            type: object\r\n            properties:\r\n                countyOfBirth:\r\n                  type: string\r\n                  description: TobeDONE\r\n                dateOfBirth:\r\n                  type: string\r\n                  description: TobeDONE\r\n                digitalAddress:\r\n                  type: string\r\n                  description: TobeDONE\r\n                email:\r\n                  type: string\r\n                  description: TobeDONE\r\n                familyName:\r\n                  type: string\r\n                  description: TobeDONE\r\n                fiscalNumber:\r\n                  type: string\r\n                  description: TobeDONE\r\n                gender:\r\n                  type: string\r\n                  description: TobeDONE\r\n                mobilePhone:\r\n                  type: string\r\n                  description: TobeDONE\r\n                name:\r\n                  type: string\r\n                  description: TobeDONE\r\n                placeOfBirth:\r\n                  type: string\r\n                  description: TobeDONE\r\n                spidCode:\r\n                  type: string\r\n                  description: TobeDONE\r\n    parameters:\r\n            sp-entityid:\r\n              in: path\r\n              name: sp-entityid\r\n              required: true\r\n              schema:\r\n                type: string\r\n              allowReserved: false\r\n              description: valore URL-encoded dell’EntityID del metatadato da ricevere\r\n              example: https%3A%2F%2Fwww.inps.it\r\n            offsetParam:\r\n              in: query\r\n              name: page\r\n              required: false\r\n              schema:\r\n                type: integer\r\n                minimum: 1\r\n              description: Numero di pagina da restituire, a partire dal valore 1.\r\n            limitParam:\r\n              in: query\r\n              name: numMetadata\r\n              required: false\r\n              schema:\r\n                type: integer\r\n                minimum: 1\r\n                maximum: 50               #\u003c-- quale è il massimo???\r\n                default: 50\r\n                format: int32\r\n              description: Numero di metadata per ogni pagina.\r\n            entity_type:\r\n              in: query\r\n              name: entity_type\r\n              required: false\r\n              schema:\r\n                type: string\r\n                enum: [SP,IDP,AA]\r\n                example: IDP\r\n                default: SP\r\n                description: Filtro per tipologia di ente (IDP,SP,AA).\r\n            updated_from:\r\n              in: query\r\n              name: updated_from\r\n              required: false\r\n              schema:\r\n                type: string\r\n                pattern: /([0-9]{4})(?:[0-9]{2})([0-9]{2})/\r\n                example: \"20190517\"\r\n                description: Recupera i metadata aggiornati da una specifica data (YYYYMMDD).\r\n            deleted_from:\r\n              in: query\r\n              name: deleted_from\r\n              required: false\r\n              schema:\r\n                type: string\r\n                pattern: /([0-9]{4})(?:[0-9]{2})([0-9]{2})/\r\n                example: \"20190517\"\r\n                description: Recupera i metadata non più presenti o cancellati da una specifica data  (YYYYMMDD).\r\n            valid_at:\r\n              in: query\r\n              name: valid_at\r\n              required: false\r\n              schema:\r\n                type: string\r\n                pattern: /([0-9]{4})(?:[0-9]{2})([0-9]{2})/\r\n                example: \"20190517\"\r\n                description: Recupera i metadata esistenti ad una specifica data (YYYYMMDD).\r\n            organization_type:\r\n              in: query\r\n              name: organization_type\r\n              required: false\r\n              schema:\r\n                type: string\r\n                enum: [PA,PR]\r\n                example: PPR\r\n                description: Filtro per tipologia di ente (se PA o Privato).\r\n            federation_type:\r\n              in: query\r\n              name: federation_type\r\n              required: false\r\n              schema:\r\n                type: string\r\n                enum: [SP,AG]\r\n                example: IDP\r\n                default: SP\r\n                description: Filtro per tipologia di federazione (SP,AG).\r\n            aggregator_code:\r\n              in: query\r\n              name: aggregator_code\r\n              required: false\r\n              schema:\r\n                type: string\r\n                example: UICCIAA\r\n                description: Filtro per codice dell’ente aggregatore ovvero IPA o PIVA.\r\n            eidas_ready:\r\n              in: query\r\n              name: eidas_ready\r\n              required: false\r\n              schema:\r\n                type: string       # \u003c-- to check (oppure boolean??)\r\n                enum: [Y,N]\r\n                example: Y\r\n                default: N          # \u003c-- to check\r\n                description: Filtro su attributi eIDAS.\r\n            only_entity_id:\r\n              in: query\r\n              name: only_entity_id\r\n              required: false\r\n              schema:\r\n                type: string       # \u003c-- to check (oppure boolean??)\r\n                enum: [Y,N]\r\n                example: Y\r\n                default: N          # \u003c-- to check\r\n                description: Restituisce solo gli entity_id.\r\n            output:\r\n              in: query\r\n              name: output\r\n              required: false\r\n              schema:\r\n                type: string\r\n                enum: [json]\r\n                example: json\r\n                description: Ritorna il risultato della ricerca in formato JSON.\r\n    examples:\r\n      oneSP_metadata_xml:\r\n          description: Metadata di esempio XML\r\n          externalValue: 'oneSP_metadata_example.xml'\r\n      oneSP_metadata_json:\r\n          description: Metadata di esempio XML\r\n          externalValue: 'oneSP_metadata_example.json'\r\n      MultipleSP_json:\r\n          description: Metadata di esempio JSON\r\n          externalValue: 'multipleSP_metadata_example.json'\r\n      MultipleSP_xml:\r\n          description: Metadata di esempio XML\r\n          externalValue: 'multipleSP_metadata_example.xml'\r\n      MultipleSP_xml_onlyID:\r\n          description: Metadata di esempio XML - **Only_entity_id**\r\n          externalValue: 'multipleSP_metadata_example_only_entityID.xml'\r\n      MultipleSP_json_onlyID:\r\n          description: Metadata di esempio JSON - **Only_entity_id**\r\n          externalValue: 'multipleSP_metadata_example_only_entityID.json'\n",
			"canonicalURL": "/github.com/teamdigitale/api-openapi-samples@e4aa25ab76f46b78fcf93268cddbbd44c4df1711/-/blob/external-apis/spid-registry-sp-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/teamdigitale/api-openapi-samples/blob/e4aa25ab76f46b78fcf93268cddbbd44c4df1711/external-apis/spid-registry-sp-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"only_entity_id\": schema: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}