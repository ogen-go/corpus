{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CCSI-Toolset/FOQUS"
		},
		"file": {
			"name": "Turbine Gateway API2-dev-oas30-apigateway.yaml",
			"size": 0,
			"path": "cloud/aws/apigateway/Turbine Gateway API2-dev-oas30-apigateway.yaml",
			"byteSize": 26885,
			"content": "openapi: \"3.0.1\"\ninfo:\n  title: \"Turbine Gateway API2\"\n  version: \"2018-09-05T19:55:29Z\"\nservers:\n- url: \"https://407osudx4l.execute-api.us-east-1.amazonaws.com/{basePath}\"\n  variables:\n    basePath:\n      default: \"/dev\"\npaths:\n  /session:\n    get:\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:get-session-list-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    post:\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:post-session-create-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /simulation/{name}/input:\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /application:\n    get:\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArrayOfApplication\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseTemplates:\n              application/json: \"#set($inputRoot = $input.path('$'))\\n[\\n {\\n  \\\"\\\n                Name\\\" : \\\"foqus\\\",\\n  \\\"Inputs\\\" : [\\\"flowsheet\\\"]\\n },\\n {\\n  \\\"\\\n                Name\\\" : \\\"AspenPlus\\\",\\n  \\\"Inputs\\\" : [\\\"aspenfile\\\"]\\n },\\n  {\\n\\\n                \\  \\\"Name\\\" : \\\"ACM\\\",\\n  \\\"Inputs\\\" : [\\\"aspenfile\\\"]\\n }\\n]\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /session/{id}/result:\n    post:\n      parameters:\n      - name: \"id\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:post-session-create-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /simulation/{name}/input/{path+}:\n    get:\n      parameters:\n      - name: \"name\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"path\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:get-simulation-input-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        timeoutInMillis: 20000\n        httpMethod: \"POST\"\n        cacheNamespace: \"aofg2p\"\n        cacheKeyParameters:\n        - \"method.request.path.path\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    put:\n      parameters:\n      - name: \"name\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"path\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:put-simulation-input-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        timeoutInMillis: 20000\n        httpMethod: \"POST\"\n        cacheNamespace: \"aofg2p\"\n        cacheKeyParameters:\n        - \"method.request.path.path\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /session/{id}/result/{generator}/{page}:\n    get:\n      parameters:\n      - name: \"page\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"generator\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"id\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:get-session-result-page-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /simulation/git:\n    get:\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:get-simulation-git-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /session/{id}:\n    get:\n      parameters:\n      - name: \"id\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:get-session-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    post:\n      parameters:\n      - name: \"id\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:post-session-append-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /session/{id}/result/{generator}:\n    post:\n      parameters:\n      - name: \"generator\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"id\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:post-session-result-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    delete:\n      parameters:\n      - name: \"generator\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"id\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /simulation:\n    get:\n      parameters:\n      - name: \"verbose\"\n        in: \"query\"\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:get-simulation-list-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /simulation/{name}:\n    get:\n      parameters:\n      - name: \"name\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - TurbineAuthorizer: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:get-simulation-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        timeoutInMillis: 20000\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    put:\n      parameters:\n      - name: \"name\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:put-simulation-name-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n  /session/{id}/start:\n    post:\n      parameters:\n      - name: \"id\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n      - BasicHTTPAuth: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:post-session-start-development/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\ncomponents:\n  schemas:\n    ArrayOfApplication:\n      title: \"ArrayOfApplication\"\n      type: \"array\"\n      items:\n        title: \"Application\"\n        type: \"object\"\n        properties:\n          Name:\n            type: \"string\"\n          Inputs:\n            type: \"array\"\n            items:\n              type: \"string\"\n    Empty:\n      title: \"Empty Schema\"\n      type: \"object\"\n  securitySchemes:\n    TurbineAuthorizer:\n      type: \"apiKey\"\n      name: \"Authorization\"\n      in: \"header\"\n      x-amazon-apigateway-authtype: \"cognito_user_pools\"\n      x-amazon-apigateway-authorizer:\n        providerARNs:\n        - \"arn:aws:cognito-idp:us-east-1:754323349409:userpool/us-east-1_v4EFY8Os6\"\n        type: \"cognito_user_pools\"\n    BasicHTTPAuth:\n      type: \"apiKey\"\n      name: \"Authorization\"\n      in: \"header\"\n      x-amazon-apigateway-authtype: \"custom\"\n      x-amazon-apigateway-authorizer:\n        authorizerUri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:754323349409:function:http-basic-authorizer-development/invocations\"\n        authorizerResultTtlInSeconds: 3000\n        identitySource: \"method.request.header.Authorization\"\n        type: \"request\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /session/{id}/result/{generator}/{page}: options: operation \"\": parse path: path parameter not specified: \"id\""
}