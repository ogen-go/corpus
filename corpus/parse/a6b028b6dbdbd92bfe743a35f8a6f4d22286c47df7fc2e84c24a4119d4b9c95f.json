{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GaurangShukla/college-management-react"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "server/swagger.yaml",
			"byteSize": 20432,
			"content": "openapi: 3.0.0\ninfo:\n  title: test\n  description: You can obtain JWT token from login API\n  version: 0.1\nservers:\n  - url: http://localhost:3000/api\n    description: Local server for testing\npaths:\n  /login:\n    post:\n      summary: Login API\n      security: []   # No security\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:      # Request body contents\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n              example:   # Sample object\n                username: admin\n                password: 62f264d7ad826f02a8af714c0a54b197935b717656b80461686d450f7b3abde4c553541515de2052b9af70f710f0cd8a1a2d3f4d60aa72608d71a63a9a93c0f5\n      responses:\n        '200':\n          description: OK\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n  /verifyToken:\n    post:\n      summary: Verify token API\n      security: [] #No security\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n  /changePassword:\n    post:\n      summary: Change password API\n      tags:\n        - Security\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                passwordNew:\n                  type: string\n                passwordOld:\n                  type: string\n      responses:\n        '200':\n          description: OK\n                \n\n  #-----  User  -----\n  /user/{id}/changePassword:\n    post:\n      summary: Change password of user from admin\n      tags:\n        - User\n      responses:\n        \"200\":\n          description: OK\n    \n  /user/:\n    post:\n      summary: CRUD ACTION create\n      tags:\n        - User\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                mail:\n                  type: string\n                name:\n                  type: string\n                password:\n                  type: string\n                roles:\n                  type: string\n                surname:\n                  type: string\n                username:\n                  type: string\n    get:\n      summary: CRUD ACTION list\n      tags:\n        - User\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/User\"\n    \n  /user/{id}:\n    delete:\n      summary: CRUD ACTION delete\n      tags:\n        - User\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n    get:\n      summary: CRUD ACTION get\n      tags:\n        - User\n      parameters:\n        - name: id\n          in: path\n          description: Id resource\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n    post:\n      summary: CRUD ACTION update\n      tags:\n        - User\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n    \n  #-----  course  -----\n  /course/:\n    post:\n      summary: CRUD ACTION create\n      tags:\n        - course\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/course\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n    get:\n      summary: CRUD ACTION list\n      tags:\n        - course\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/course\"\n    \n  /course/{id}:\n    delete:\n      summary: CRUD ACTION delete\n      tags:\n        - course\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n    get:\n      summary: CRUD ACTION get\n      tags:\n        - course\n      parameters:\n        - name: id\n          in: path\n          description: Id resource\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/course\"\n    post:\n      summary: CRUD ACTION update\n      tags:\n        - course\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/course\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/course\"\n    \n  #-----  exam  -----\n  /exam/:\n    post:\n      summary: CRUD ACTION create\n      tags:\n        - exam\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/exam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                place:\n                  type: string\n                score:\n                  type: number\n                valid:\n                  type: boolean\n    get:\n      summary: CRUD ACTION list\n      tags:\n        - exam\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/exam\"\n    \n  /exam/{id}:\n    delete:\n      summary: CRUD ACTION delete\n      tags:\n        - exam\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n    get:\n      summary: CRUD ACTION get\n      tags:\n        - exam\n      parameters:\n        - name: id\n          in: path\n          description: Id resource\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/exam\"\n    post:\n      summary: CRUD ACTION update\n      tags:\n        - exam\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/exam\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/exam\"\n    \n  /exam/findBy_course/{key}:\n    get:\n      summary: CRUD ACTION findBy_course\n      tags:\n        - exam\n      parameters:\n        - name: key\n          in: path\n          description: Id of model to search for\n          required: true\n          schema:\n            type: Objectid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/exam\"\n    \n  /exam/findBy_student/{key}:\n    get:\n      summary: CRUD ACTION findBy_student\n      tags:\n        - exam\n      parameters:\n        - name: key\n          in: path\n          description: Id of model to search for\n          required: true\n          schema:\n            type: Objectid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/exam\"\n    \n  /exam/findBy_teacher/{key}:\n    get:\n      summary: CRUD ACTION findBy_teacher\n      tags:\n        - exam\n      parameters:\n        - name: key\n          in: path\n          description: Id of model to search for\n          required: true\n          schema:\n            type: Objectid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/exam\"\n    \n  /exam/{id}/validate:\n    post:\n      summary: this api is used to validate exam\n      security: []   # No security\n      tags:\n        - exam\n      parameters:\n        - name: id\n          in: path\n          description: id for exam\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n    \n  #-----  student  -----\n  /student/:\n    post:\n      summary: CRUD ACTION create\n      tags:\n        - student\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/student\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                DOB:\n                  type: integer\n                lastname:\n                  type: string\n                name:\n                  type: string\n    get:\n      summary: CRUD ACTION list\n      tags:\n        - student\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/student\"\n    \n  /student/{id}:\n    delete:\n      summary: CRUD ACTION delete\n      tags:\n        - student\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n    get:\n      summary: CRUD ACTION get\n      tags:\n        - student\n      parameters:\n        - name: id\n          in: path\n          description: Id resource\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/student\"\n    post:\n      summary: CRUD ACTION update\n      tags:\n        - student\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/student\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/student\"\n    \n  /student/findBy_courses/{key}:\n    get:\n      summary: CRUD ACTION findBy_courses\n      tags:\n        - student\n      parameters:\n        - name: key\n          in: path\n          description: Id of model to search for\n          required: true\n          schema:\n            type: Objectid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/student\"\n    \n  #-----  teacher  -----\n  /teacher/:\n    post:\n      summary: CRUD ACTION create\n      tags:\n        - teacher\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/teacher\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                lastname:\n                  type: string\n                name:\n                  type: string\n    get:\n      summary: CRUD ACTION list\n      tags:\n        - teacher\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/teacher\"\n    \n  /teacher/{id}:\n    delete:\n      summary: CRUD ACTION delete\n      tags:\n        - teacher\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n    get:\n      summary: CRUD ACTION get\n      tags:\n        - teacher\n      parameters:\n        - name: id\n          in: path\n          description: Id resource\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/teacher\"\n    post:\n      summary: CRUD ACTION update\n      tags:\n        - teacher\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/teacher\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/teacher\"\n    \n  /teacher/findBy_courses/{key}:\n    get:\n      summary: CRUD ACTION findBy_courses\n      tags:\n        - teacher\n      parameters:\n        - name: key\n          in: path\n          description: Id of model to search for\n          required: true\n          schema:\n            type: Objectid\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/teacher\"\n    \n    \n  #-----  User  -----\n  /Users/{id}/changePassword:\n    post:\n      summary: Change password by admin API\n      tags:\n        - User\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                passwordNew:\n                  type: string\n                passwordAdmin:\n                  type: string\n      responses:\n        '200':\n          description: OK\n  /Users/{id}:\n    post:\n      summary: Update User API\n      tags:\n        - User\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n    delete:\n      summary: Delete User API\n      tags:\n        - User\n      parameters:\n        - name: id\n          in: path\n          description: Id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n  /Users:\n    post:\n      summary: Create User API\n      tags:\n        - User\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: 'string'\n                password: \n                  type: 'string'\n                mail: \n                  type: 'string'\n                name: \n                  type: 'string'\n                surname: \n                  type: 'string'\n                roles: \n                  type: array\n                  items:\n                    type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n    \n# JWT security\nsecurity:\n  - bearerAuth: [] \n  \n  \n# Components\ncomponents:\n\n  # Security\n  securitySchemes:\n    bearerAuth:            # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT    # optional, arbitrary value for documentation purposes\n\n  # Data Model\n  schemas:\n    User:\n      properties:\n        username:\n          type: 'string'\n        password: \n          type: 'string'\n        mail: \n          type: 'string'\n        name: \n          type: 'string'\n        surname: \n          type: 'string'\n        roles: \n          type: array\n          items:\n            type: string\n      required:\n        - username\n        - password\n        \n\n    User:\n      properties:\n        _id:\n          type: string\n        mail:\n          type: string\n        name:\n          type: string\n        password:\n          type: string\n        roles:\n          type: string\n        surname:\n          type: string\n        username:\n          type: string\n      required:\n        -  _id\n        - password\n        - username\n      \n    \n    course:\n      properties:\n        _id:\n          type: string\n        name:\n          type: string\n      required:\n        -  _id\n        - name\n      \n    \n    exam:\n      properties:\n        _id:\n          type: string\n        place:\n          type: string\n        score:\n          type: number\n        valid:\n          type: boolean\n      required:\n        -  _id\n      \n    \n    student:\n      properties:\n        _id:\n          type: string\n        DOB:\n          type: integer\n        lastname:\n          type: string\n        name:\n          type: string\n      required:\n        -  _id\n        - DOB\n        - lastname\n        - name\n      \n    \n    teacher:\n      properties:\n        _id:\n          type: string\n        lastname:\n          type: string\n        name:\n          type: string\n      required:\n        -  _id\n        - lastname\n        - name\n      \n    \n",
			"canonicalURL": "/github.com/GaurangShukla/college-management-react@f87ce9c3218c00a4bb43f1ebae189cf699f34de0/-/blob/server/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GaurangShukla/college-management-react/blob/f87ce9c3218c00a4bb43f1ebae189cf699f34de0/server/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/exam/findBy_teacher/{key}\": get: parameters: parse parameter \"key\": schema: at 1:5750: parse schema: unexpected schema type: \"Objectid\""
}