{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/regulaforensics/DocumentReader-web-openapi"
		},
		"file": {
			"name": "rt.yml",
			"size": 0,
			"path": "rt.yml",
			"byteSize": 6705,
			"content": "openapi: 3.0.3\ncomponents:\n  schemas:\n\n    ContainerType:\n      type: integer\n      description: \"Same as Result type, but used for safe parsing of not-described values. See Result type.\"\n      default: 0\n\n    Result:\n      type: integer\n      description: \"Describes possible extracted result types from documents\"\n      enum:\n        - 1\n        - 30\n        - 33\n        - 36\n        - 37\n        - 3\n        - 17\n        - 18\n        - 102\n        - 15\n        - 6\n        - 19\n        - 103\n        - 8\n        - 9\n        - 20\n        - 85\n        - 5\n        - 50\n        - 49\n      x-enum-descriptions:\n        - 'Contains cropped and rotated with perspective compensation image of document.\n        Single input image can contain multiple document side/pages, which will be returned as separated results.\n         Most of coordinates in other types defined on that image'\n        - 'Contains image quality check results'\n        - 'Contains check statuses with details, grouped by source'\n        - 'Contains document textual fields from all sources (mrz, rfid, visual, barcode) with validity and cross-source compare checks'\n        - 'Contains images from all document sources (mrz, rfid, visual, barcode)'\n        - 'Contains MRZ OCR results'\n        - 'Contains Visual zone OCR results'\n        - 'Contains barcode parsing result with text fields'\n        - 'Contains RFID parsing result with text fields'\n        - \"Contains lexical data analysis results that allow you to compare MRZ OCR results,\n           Visual zone OCR results, barcodes and RFID chip data for an additional\n           assessment of the authenticity of the document (this is an old format, better use TEXT type)\"\n        - 'Contains cropped graphic fields from Visual zone'\n        - 'Contains barcode parsing result with graphic fields'\n        - 'Contains RFID parsing result with graphic fields'\n        - 'Contains list of document type candidates with their probabilities and descriptions'\n        - 'Contains description of determined document type, if any'\n        - 'Contains result of document authenticity checks'\n        - 'Contains information about document position on the input image, its center, angle, etc'\n        - 'Contains raw information about barcodes on the input image'\n        - 'Contains license'\n        - 'Contains encrypted ResultContainerList'\n      x-enum-varnames:\n        - DOCUMENT_IMAGE\n        - IMAGE_QUALITY\n        - STATUS\n        - TEXT\n        - IMAGES\n        - MRZ_TEXT\n        - VISUAL_TEXT\n        - BARCODE_TEXT\n        - RFID_TEXT\n        - LEXICAL_ANALYSIS\n        - VISUAL_GRAPHICS\n        - BARCODE_GRAPHICS\n        - RFID_GRAPHICS\n        - DOCUMENT_TYPE_CANDIDATES\n        - DOCUMENT_TYPE\n        - AUTHENTICITY\n        - DOCUMENT_POSITION\n        - BARCODES\n        - LICENSE\n        - ENCRYPTED_RCL\n\n\n    ResultItem:\n      type: object\n      description: \"Common fields for all result objects\"\n      required:\n        - result_type\n      properties:\n        buf_length:\n          type: integer\n        light:\n          type: integer\n        list_idx:\n          type: integer\n        page_idx:\n          type: integer\n        result_type:\n          $ref: \"#/components/schemas/ContainerType\"\n      discriminator:\n        propertyName: result_type\n        mapping:\n          1: \"DocumentImageResult\"\n          3: \"TextDataResult\"\n          5: \"DocBarCodeInfo\"\n          6: \"GraphicsResult\"\n          8: \"DocumentTypesCandidatesResult\"\n          9: \"ChosenDocumentTypeResult\"\n          20: \"AuthenticityResult\"\n          15: \"LexicalAnalysisResult\"\n          17: \"TextDataResult\"\n          18: \"TextDataResult\"\n          19: \"GraphicsResult\"\n          30: \"ImageQualityResult\"\n          33: \"StatusResult\"\n          36: \"TextResult\"\n          37: \"ImagesResult\"\n          85: \"DocumentPositionResult\"\n          102: \"TextDataResult\"\n          103: \"GraphicsResult\"\n          50: \"LicenseResult\"\n          49: \"EncryptedRCLResult\"\n\n    ContainerList:\n      type: object\n      description: \"List with various objects, containing processing results\"\n      required:\n        - List\n      properties:\n        Count:\n          type: integer\n          description: \"Length of list (Count for items)\"\n        List:\n          type: array\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/StatusResult\"\n              - $ref: \"#/components/schemas/TextResult\"\n              - $ref: \"#/components/schemas/DocumentImageResult\"\n              - $ref: \"#/components/schemas/ImagesResult\"\n              - $ref: \"#/components/schemas/ChosenDocumentTypeResult\"\n              - $ref: \"#/components/schemas/DocumentTypesCandidatesResult\"\n              - $ref: \"#/components/schemas/TextDataResult\"\n              - $ref: \"#/components/schemas/GraphicsResult\"\n              - $ref: \"#/components/schemas/LexicalAnalysisResult\"\n              - $ref: \"#/components/schemas/AuthenticityResult\"\n              - $ref: \"#/components/schemas/ImageQualityResult\"\n              - $ref: \"#/components/schemas/DocumentPositionResult\"\n              - $ref: \"#/components/schemas/DocBarCodeInfo\"\n              - $ref: \"#/components/schemas/LicenseResult\"\n              - $ref: \"#/components/schemas/EncryptedRCLResult\"\n\n    DocumentPositionResult:\n      $ref: \"./rt-document-position.yml#/components/schemas/DocumentPositionResult\"\n\n    DocumentImageResult:\n      $ref: \"./rt-raw-image.yml#/components/schemas/DocumentImageResult\"\n\n    StatusResult:\n      $ref: \"./rt-status.yml#/components/schemas/StatusResult\"\n\n    TextResult:\n      $ref: \"./rt-text.yml#/components/schemas/TextResult\"\n\n    ImagesResult:\n      $ref: \"./rt-images.yml#/components/schemas/ImagesResult\"\n\n    LexicalAnalysisResult:\n      $ref: \"./rt-ocr-lexical-analisis.yml#/components/schemas/LexicalAnalysisResult\"\n\n    TextDataResult:\n      $ref: \"./rt-text-data.yml#/components/schemas/TextDataResult\"\n\n    GraphicsResult:\n      $ref: \"./rt-image-data.yml#/components/schemas/GraphicsResult\"\n\n    DocumentTypesCandidatesResult:\n      $ref: \"./rt-doc-type-old.yml#/components/schemas/DocumentTypesCandidatesResult\"\n    ChosenDocumentTypeResult:\n      $ref: \"./rt-doc-type-old.yml#/components/schemas/ChosenDocumentTypeResult\"\n\n    AuthenticityResult:\n      $ref: \"./rt-authenticity.yml#/components/schemas/AuthenticityResult\"\n\n    ImageQualityResult:\n      $ref: \"./rt-image-quality.yml#/components/schemas/ImageQualityResult\"\n\n    DocBarCodeInfo:\n      $ref: \"./rt-barcodes.yml#/components/schemas/DocBarCodeInfo\"\n\n    LicenseResult:\n      $ref: \"./rt-license.yml#/components/schemas/LicenseResult\"\n\n    EncryptedRCLResult:\n      $ref: \"./rt-encrypted-rcl.yml#/components/schemas/EncryptedRCLResult\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ImagesResult\": parse schema: resolve \"./rt-images.yml#/components/schemas/ImagesResult\": find schema: external base \"./rt-images.yml\" is not supported"
}