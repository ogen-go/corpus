{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Veridax/privapi"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/gov.bc.ca/news/1.0/openapi.yaml",
			"byteSize": 37074,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://news.api.gov.bc.ca/'\ninfo:\n  description: News API\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\n  title: BC Gov News API Service 1.0\n  version: '1.0'\n  x-apisguru-categories:\n    - open_data\n  x-logo:\n    url: 'https://avatars1.githubusercontent.com/u/916280?v=3&s=200'\n  x-origin:\n    - converter:\n        url: 'https://github.com/lucybot/api-spec-converter'\n        version: 2.6.2\n      format: openapi\n      url: 'https://raw.githubusercontent.com/bcgov/api-specs/master/news/news-oas3.json'\n      version: '3.0'\n  x-providerName: gov.bc.ca\n  x-serviceName: news\npaths:\n  /api/FacebookPosts/ByUri:\n    get:\n      operationId: FacebookPosts_GetByUri\n      parameters:\n        - description: ''\n          in: query\n          name: uri\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FacebookPost'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FacebookPost'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FacebookPost'\n          description: Success\n      summary: Get a Facebook post based on a Uri\n      tags:\n        - FacebookPosts\n  /api/Home:\n    get:\n      operationId: Home_Get\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Home'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Home'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Home'\n          description: Success\n      summary: Returns the top level content for the home page\n      tags:\n        - Home\n  /api/Ministries:\n    get:\n      operationId: Ministries_GetAll\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Ministry'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Ministry'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Ministry'\n                type: array\n          description: Success\n      summary: Get all ministries\n      tags:\n        - Ministries\n  '/api/Ministries/{key}':\n    get:\n      operationId: Ministries_GetOne\n      parameters:\n        - description: ''\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ministry'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Ministry'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Ministry'\n          description: Success\n      summary: Get the Ministry associated with the ministry key\n      tags:\n        - Ministries\n  '/api/Ministries/{key}/Minister':\n    get:\n      operationId: Ministries_GetMinister\n      parameters:\n        - description: ''\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Minister'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Minister'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Minister'\n          description: Success\n      summary: Get the Minister associated with the ministry key\n      tags:\n        - Ministries\n  /api/Newsletters:\n    get:\n      operationId: Newsletters_GetAll\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Newsletter'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Newsletter'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Newsletter'\n                type: array\n          description: Success\n      summary: Get all newsletters\n      tags:\n        - Newsletters\n  '/api/Newsletters/Images/{guid}':\n    get:\n      operationId: Newsletters_GetImage\n      parameters:\n        - description: ''\n          in: path\n          name: guid\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditionImage'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/EditionImage'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/EditionImage'\n          description: Success\n      summary: Get the image object reference by of a Newsletter Edition associated with the image guid\n      tags:\n        - Newsletters\n  '/api/Newsletters/{newsletterKey}':\n    get:\n      operationId: Newsletters_GetOne\n      parameters:\n        - in: path\n          name: newsletterKey\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Newsletter'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Newsletter'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Newsletter'\n          description: Success\n      summary: Get a specific newsletter\n      tags:\n        - Newsletters\n  '/api/Newsletters/{newsletterKey}/Editions/{editionKey}':\n    get:\n      operationId: Newsletters_GetEdition\n      parameters:\n        - description: ''\n          in: path\n          name: newsletterKey\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: editionKey\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Edition'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Edition'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Edition'\n          description: Success\n      summary: Returns a specific edition of a newsletter\n      tags:\n        - Newsletters\n  '/api/Newsletters/{newsletterKey}/Editions/{editionKey}/Articles/{articleKey}':\n    get:\n      operationId: Newsletters_GetArticle\n      parameters:\n        - description: ''\n          in: path\n          name: newsletterKey\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: editionKey\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: articleKey\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Article'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Article'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Article'\n          description: Success\n      summary: Get an article belonging to a Newsletter edition\n      tags:\n        - Newsletters\n  /api/Posts:\n    get:\n      operationId: Posts_Get\n      parameters:\n        - description: ''\n          explode: true\n          in: query\n          name: postKeys\n          required: false\n          schema:\n            default: ''\n            items:\n              type: string\n            type: array\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Post'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Post'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Post'\n                type: array\n          description: Success\n      summary: Get the posts associated with the keys in the list passed in.\n      tags:\n        - Posts\n  '/api/Posts/Keys/{indexKind}/{indexKey}':\n    get:\n      operationId: Posts_GetAllKeys\n      parameters:\n        - description: home or one of categories\n          in: path\n          name: indexKind\n          required: true\n          schema:\n            type: string\n        - description: 'default or one key of the categories (ministries, sectors, services, tags, themes)'\n          in: path\n          name: indexKey\n          required: true\n          schema:\n            type: string\n        - description: 'One of: releases, stories, factsheets, updates or default (releases+stories+factsheets)'\n          in: query\n          name: postKind\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: number of posts to return\n          in: query\n          name: count\n          required: false\n          schema:\n            default: ''\n            format: int32\n            type: integer\n        - description: number of posts to skip\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: ''\n            format: int32\n            type: integer\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/KeyValuePair_2'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/KeyValuePair_2'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/KeyValuePair_2'\n                type: array\n          description: Success\n      summary: Get all keys for the specified index (newsroom or category)\n      tags:\n        - Posts\n  '/api/Posts/Keys/{reference}':\n    get:\n      operationId: Posts_GetKeyFromReference\n      parameters:\n        - description: ''\n          in: path\n          name: reference\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyValuePair_2'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/KeyValuePair_2'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/KeyValuePair_2'\n          description: Success\n      summary: Get the post key associated with the reference.\n      tags:\n        - Posts\n  '/api/Posts/Latest/{indexKind}/{indexKey}':\n    get:\n      operationId: Posts_GetLatest\n      parameters:\n        - description: home or one of categories\n          in: path\n          name: indexKind\n          required: true\n          schema:\n            type: string\n        - description: 'default or one key of the categories (ministries, sectors, services, tags, themes)'\n          in: path\n          name: indexKey\n          required: true\n          schema:\n            type: string\n        - description: 'One of: releases, stories, factsheets, updates or default (releases+stories except top/feature)'\n          in: query\n          name: postKind\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: number of posts to return\n          in: query\n          name: count\n          required: false\n          schema:\n            default: ''\n            format: int32\n            type: integer\n        - description: number of posts to skip\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: ''\n            format: int32\n            type: integer\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Post'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Post'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Post'\n                type: array\n          description: Success\n      summary: Get the latest posts of postKind for the specified index (default or category)\n      tags:\n        - Posts\n  '/api/Posts/LatestMediaUri/{mediaType}':\n    get:\n      operationId: Posts_GetLatestMediaUri\n      parameters:\n        - description: ''\n          in: path\n          name: mediaType\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n          description: Success\n      summary: Gets the latest Social Media post for the social media type passed in.\n      tags:\n        - Posts\n  '/api/Posts/{key}':\n    get:\n      operationId: Posts_GetOne\n      parameters:\n        - description: ''\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Post'\n          description: Success\n      summary: Get the post associated with the key\n      tags:\n        - Posts\n  /api/ResourceLinks:\n    get:\n      operationId: ResourceLinks_GetAll\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ResourceLink'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ResourceLink'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ResourceLink'\n                type: array\n          description: Success\n      summary: Get all resource links\n      tags:\n        - ResourceLinks\n  /api/Sectors:\n    get:\n      operationId: Sectors_GetAll\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Sector'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Sector'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Sector'\n                type: array\n          description: Success\n      summary: Get all Sectors\n      tags:\n        - Sectors\n  '/api/Sectors/{key}':\n    get:\n      operationId: Sectors_GetOne\n      parameters:\n        - description: ''\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sector'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Sector'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Sector'\n          description: Success\n      summary: Get the sector associated with the key\n      tags:\n        - Sectors\n  /api/Services:\n    get:\n      operationId: Services_GetAll\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Service'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Service'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Service'\n                type: array\n          description: Success\n      summary: Get all Services\n      tags:\n        - Services\n  '/api/Services/{key}':\n    get:\n      operationId: Services_GetOne\n      parameters:\n        - description: ''\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Service'\n          description: Success\n      summary: Get the service associated with the passed key\n      tags:\n        - Services\n  /api/Slides:\n    get:\n      operationId: Slides_GetAll\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Slide'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Slide'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Slide'\n                type: array\n          description: Success\n      summary: Get all Slides\n      tags:\n        - Slides\n  '/api/Slides/{id}':\n    get:\n      operationId: Slides_GetOne\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Slide'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Slide'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Slide'\n          description: Success\n      summary: Get the slide associated to the id\n      tags:\n        - Slides\n  /api/Tags:\n    get:\n      operationId: Tags_GetAll\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Tag'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Tag'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Tag'\n                type: array\n          description: Success\n      summary: Get all Tags\n      tags:\n        - Tags\n  '/api/Tags/{key}':\n    get:\n      operationId: Tags_GetOne\n      parameters:\n        - description: ''\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: Success\n      summary: Get the Tag associated with the key\n      tags:\n        - Tags\n  /api/Themes:\n    get:\n      operationId: Themes_GetAll\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Theme'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Theme'\n                type: array\n            text/plain:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Theme'\n                type: array\n          description: Success\n      summary: Get all Themes\n      tags:\n        - Themes\n  '/api/Themes/{key}':\n    get:\n      operationId: Themes_GetOne\n      parameters:\n        - description: ''\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Theme'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Theme'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Theme'\n          description: Success\n      summary: Get the Theme associated with the key\n      tags:\n        - Themes\ncomponents:\n  schemas:\n    Article:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        editionName:\n          type: string\n        htmlBody:\n          type: string\n      type: object\n    Asset:\n      properties:\n        key:\n          type: string\n        label:\n          type: string\n        length:\n          format: int64\n          type: integer\n      type: object\n    Category:\n      allOf:\n        - $ref: '#/components/schemas/DataIndex'\n      properties:\n        audioUri:\n          type: string\n        featurePostKey:\n          type: string\n        flickrUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        twitterFeedUsername:\n          type: string\n        youtubeUri:\n          type: string\n      type: object\n    Contact:\n      properties:\n        emailAddress:\n          type: string\n        fullName:\n          type: string\n        mobileNumber:\n          type: string\n        phoneNumber:\n          type: string\n      type: object\n    DataIndex:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        featurePostKey:\n          type: string\n        kind:\n          type: string\n        name:\n          type: string\n        topPostKey:\n          type: string\n      type: object\n    DataModel:\n      properties:\n        key:\n          type: string\n        timestamp:\n          format: date-time\n          type: string\n      type: object\n    Document:\n      properties:\n        byline:\n          type: string\n        contacts:\n          items:\n            $ref: '#/components/schemas/DocumentContact'\n          type: array\n        detailsHtml:\n          type: string\n        headline:\n          type: string\n        languageId:\n          format: int32\n          type: integer\n        pageTitle:\n          type: string\n        subheadline:\n          type: string\n      type: object\n    DocumentContact:\n      properties:\n        details:\n          type: string\n        title:\n          type: string\n      type: object\n    Edition:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        htmlBody:\n          type: string\n        name:\n          type: string\n      type: object\n    EditionImage:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        fileName:\n          type: string\n        imageBytes:\n          format: byte\n          type: string\n        imageType:\n          type: string\n      type: object\n    FacebookPost:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        content:\n          type: string\n        facebookObjectId:\n          format: int32\n          type: integer\n        pictureUri:\n          type: string\n        postComments:\n          format: int32\n          type: integer\n        postLikes:\n          format: int32\n          type: integer\n        postShares:\n          format: int32\n          type: integer\n        poster:\n          type: string\n        posterLikes:\n          format: int32\n          type: integer\n        posterLogo:\n          type: string\n        posterSubtitle:\n          type: string\n        type:\n          type: string\n      type: object\n    Home:\n      allOf:\n        - $ref: '#/components/schemas/DataIndex'\n      properties:\n        featurePostKey:\n          type: string\n        liveWebcastFlashMediaManifestUrl:\n          type: string\n        liveWebcastM3uPlaylist:\n          type: string\n        name:\n          type: string\n        topPostKey:\n          type: string\n      type: object\n    KeyValuePair_2:\n      properties:\n        key:\n          readOnly: true\n          type: string\n        value:\n          readOnly: true\n          type: string\n      type: object\n    Minister:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        details:\n          type: string\n        emailHtml:\n          type: string\n        headline:\n          type: string\n        photo:\n          type: string\n        post:\n          type: string\n        summary:\n          type: string\n      type: object\n    Ministry:\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        audioUri:\n          type: string\n        childMinistryKey:\n          type: string\n        contactUser:\n          $ref: '#/components/schemas/Contact'\n        displayAdditionalName:\n          type: string\n        featurePostKey:\n          type: string\n        flickrUri:\n          type: string\n        isActive:\n          type: boolean\n        ministerName:\n          type: string\n        ministryUrl:\n          type: string\n        name:\n          type: string\n        newsletterLinks:\n          items:\n            $ref: '#/components/schemas/ResourceLink'\n          type: array\n        parentMinistryKey:\n          type: string\n        secondContactUser:\n          $ref: '#/components/schemas/Contact'\n        serviceLinks:\n          items:\n            $ref: '#/components/schemas/ResourceLink'\n          type: array\n        topPostKey:\n          type: string\n        topicLinks:\n          items:\n            $ref: '#/components/schemas/ResourceLink'\n          type: array\n        twitterFeedUsername:\n          type: string\n        weekendContactNumber:\n          type: string\n        youtubeUri:\n          type: string\n      type: object\n    Newsletter:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        description:\n          type: string\n        editions:\n          items:\n            $ref: '#/components/schemas/KeyValuePair_2'\n          type: array\n        ministryName:\n          type: string\n        name:\n          type: string\n      type: object\n    Post:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        assetUrl:\n          type: string\n        atomId:\n          type: string\n        azureAssets:\n          items:\n            $ref: '#/components/schemas/Asset'\n          type: array\n        documents:\n          items:\n            $ref: '#/components/schemas/Document'\n          type: array\n        facebookPictureUri:\n          type: string\n        hasMediaAssets:\n          type: boolean\n        isNewsOnDemand:\n          type: boolean\n        keywords:\n          type: string\n        kind:\n          type: string\n        leadMinistryKey:\n          type: string\n        location:\n          type: string\n        ministryKeys:\n          items:\n            type: string\n          type: array\n        publishDate:\n          format: date-time\n          type: string\n        redirectUri:\n          type: string\n        reference:\n          type: string\n        sectorKeys:\n          items:\n            type: string\n          type: array\n        serviceKeys:\n          items:\n            type: string\n          type: array\n        socialMediaHeadline:\n          type: string\n        socialMediaSummary:\n          type: string\n        summary:\n          type: string\n      type: object\n    ResourceLink:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        uri:\n          type: string\n      type: object\n    Sector:\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        audioUri:\n          type: string\n        featurePostKey:\n          type: string\n        flickrUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        twitterFeedUsername:\n          type: string\n        youtubeUri:\n          type: string\n      type: object\n    Service:\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        audioUri:\n          type: string\n        featurePostKey:\n          type: string\n        flickrUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        twitterFeedUsername:\n          type: string\n        youtubeUri:\n          type: string\n      type: object\n    Slide:\n      allOf:\n        - $ref: '#/components/schemas/DataModel'\n      properties:\n        actionLabel:\n          type: string\n        actionUri:\n          type: string\n        facebookPostUri:\n          type: string\n        headline:\n          type: string\n        image:\n          format: byte\n          type: string\n        imageType:\n          readOnly: true\n          type: string\n        justify:\n          type: string\n        slideId:\n          format: uuid\n          type: string\n        summary:\n          type: string\n      type: object\n    Tag:\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        audioUri:\n          type: string\n        featurePostKey:\n          type: string\n        flickrUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        twitterFeedUsername:\n          type: string\n        youtubeUri:\n          type: string\n      type: object\n    Theme:\n      allOf:\n        - $ref: '#/components/schemas/Category'\n      properties:\n        audioUri:\n          type: string\n        featurePostKey:\n          type: string\n        flickrUri:\n          type: string\n        isActive:\n          type: boolean\n        name:\n          type: string\n        topPostKey:\n          type: string\n        twitterFeedUsername:\n          type: string\n        youtubeUri:\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/Veridax/privapi@fd528906df6bae10312f040bd4e8b8469ad3ef3f/-/blob/APIs/gov.bc.ca/news/1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Veridax/privapi/blob/fd528906df6bae10312f040bd4e8b8469ad3ef3f/APIs/gov.bc.ca/news/1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/Posts/Latest/{indexKind}/{indexKey}\": at 1:17482: get: operation \"Posts_GetLatest\": at 1:17489: parameters: parse parameter \"count\": at 1:18030: schema: at 1:18127: parse default: expected type \"integer\", got \"string\""
}