{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/amplia-iiot/vuepress-theme-openapi"
		},
		"file": {
			"name": "petstore.yaml",
			"size": 0,
			"path": "example/src/.vuepress/public/specs/petstore.yaml",
			"byteSize": 6995,
			"content": "openapi: 3.0.0\ninfo:\n  title: OpenGate data collection API\n  version: 1.0.0\n  description: |-\n    API to send raw IoT data to OpenGate.\n  contact:\n    name: OpenGate\n    email: info@amplia.es\n    url: \"https://www.opengate.es\"\nsecurity:\n  - ApiKeyAmplia: []\nservers:\n  - url: \"https://api.opengate.es\"\npaths:\n  /south/v80/devices/{device_id}/collect/iot:\n    post:\n      description: |-\n        This end point allows devices send raw data to OpenGate.\n\n        It can be done by:\n\n        - sending data points with their respective timestamps in different datastreams in a only request\n        - sending data points without timestamp in different datastreams in a only request\n      tags:\n        - Collecting information\n      parameters:\n        - in: path\n          name: device_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The OpenGate API query allows to obtain the available workgroups provisioned under the domain of the user that sends the request.\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas.json#/Datastream\"\n            examples:\n              Send data stream with multiple datapoints:\n                value:\n                  version: 1.0.0\n                  datastreams:\n                    - id: temperature\n                      feed: feed_1\n                      datapoints:\n                        - at: 1431602523123\n                          value: 25\n                        - at: 1431602523123\n                          value: 26\n                        - at: 1431602523123\n                          value: 27\n                    - id: key\n                      feed: feed_2\n                      datapoints:\n                        - at: 1431602523123\n                          value: revalue\n                        - at: 1431602523123\n                          value: string value\n                        - at: 1431602523123\n                          value: any string\n                        - at: 1431602523123\n                          value: structured data\n                    - id: datastream\n                      datapoints:\n                        - at: 1431602523123\n                          value: 51\n                          tags:\n                            - tag_1\n                            - tag_2\n                        - at: 1431602523123\n                          value: 102\n                          tags:\n                            - tag_2\n                            - tag_3\n                        - at: 1431602523123\n                          value: 32\n                        - at: 1431602523123\n                          value: 16\n                          tags:\n                            - tag_3\n              ? Send the latest value with a single data point to each data stream (no timestamp)\n              : value:\n                  version: 1.0.0\n                  datastreams:\n                    - id: example\n                      feed: feed_1\n                      datapoints:\n                        - value: 333\n                    - id: key\n                      feed: feed_2\n                      datapoints:\n                        - value: value\n                    - id: datastream\n                      datapoints:\n                        - value: 1337\n              ? Send latest value with a single data point to one data stream sended by a sub-device with trusted boot\n              : value:\n                  version: 1.0.0\n                  device: sub-device-001\n                  path:\n                    - gateway1\n                  trustedBoot: c440ffad-3c7e-4c96-9297-0ae06610b273\n                  datastreams:\n                    - id: oil-pressure\n                      datapoints:\n                        - at: 1490092712000\n                          value: 342\n      responses:\n        \"201\":\n          description: |-\n            Expected response to a valid request.\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"schemas.json#/Error\"\ncomponents:\n  securitySchemes:\n    ApiKeyAmplia:\n      type: apiKey\n      in: header\n      name: X-ApiKey\n      description: Api Key de acceso al servidor.\n  schemas:\n    Datastream:\n      required:\n        - version\n        - datastreams\n      properties:\n        version:\n          description: Indicates the version of the structure.\n          type: string\n          example: \u003cversion\u003e\n        device:\n          description: Device Identifier in case of be different that the device Identifier that sends information (included in the URI).\n          type: string\n          example: \u003cdevice\u003e\n        path:\n          description: Identifier of the gateway or gateways that as been used by the asset for sending the information.\n          type: string\n          example: \u003cpath\u003e\n        trustedBoot:\n          description: In this case you are indicating that is required a validation type trusted_boot, it’s not necessary introduce the field value but if you introduce it all the message received by the platform will compare the trustedBoot value with the provisioned value if are diferent the message will not be collected.\n          type: string\n          example: \u003ctrustedBoot\u003e\n        datastreams:\n          description: Array of datastreams to be collected.\n          type: object\n          example: \u003cdatastreams\u003e\n          required:\n            - id\n            - datapoints\n          properties:\n            id:\n              description: Identifier of the datastream.\n              type: string\n              example: \u003cid\u003e\n            feed:\n              description: Feed Identifier.\n              type: string\n              example: \u003cfeed\u003e\n            datapoints:\n              description: Array of datapoints data to be collected.\n              type: object\n              example: \u003cdatapoints\u003e\n              required:\n                - value\n              properties:\n                from:\n                  description: Number with the time in miliseconds from epoch of the start period of measurement. This indicates that value is the same within this time interval (from -→ at).\n                  type: number\n                  example: \u003cfrom\u003e\n                at:\n                  description: Number with the time in miliseconds from epoch of the measurement. If this field is missing, the platform will assign the server current time to the datapoint whe data is received.\n                  type: number\n                  example: \u003cat\u003e\n                value:\n                  description: Collected value\n                  type: object\n                  additionalProperties:\n                    oneOf:\n                      - type: number\n                      - type: string\n                      - type: boolean\n                      - type: object\n                      - type: array\n                  example: \u003cvalue\u003e\n",
			"canonicalURL": "/github.com/amplia-iiot/vuepress-theme-openapi@c3a0997cd7f8b4dd80909339c748b74dd0b73d78/-/blob/example/src/.vuepress/public/specs/petstore.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/amplia-iiot/vuepress-theme-openapi/blob/c3a0997cd7f8b4dd80909339c748b74dd0b73d78/example/src/.vuepress/public/specs/petstore.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/south/v80/devices/{device_id}/collect/iot\": post: requestBody: parse content: application/json: schema: parse schema: at 1:4335: external \"schemas.json\": get: file: local file reference is not allowed"
}