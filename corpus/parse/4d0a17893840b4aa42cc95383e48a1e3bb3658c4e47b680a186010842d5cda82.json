{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "workorderManagement.api.yaml",
			"size": 0,
			"path": "generated/security/workforce/workorder/workorderManagement.api.yaml",
			"byteSize": 49924,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n   **This file forms part of MEF W137**\n    \n    **This API implements Business Requirements described in MEF W113.**\n    \n    **This specification represents MEF work in progress and is subject to\n    change.**\n    \n    It allows the Buyer to create, retrieve, and update  WorkOrders as well\n    as receive notifications about Incidents' and  WorkOrders' updates.\n    This allows managing issues and situations that are not part of normal\n    operations of the Product provided by the Seller.\n\n    List of supported use cases:\n    - Retrieve WorkOrder by WorkOrder Identifier\n    - Register for Workorder Notifications\n\n    Copyright 2022 MEF Forum and its contributors\n\n    This file includes content based on the TM Forum Work Order API (TMF697\n    v4.0.0) available at https://github.com/tmforum-apis/TMF697_Work_Order,\n    which is licensed by the TM Forum under the Apache License version 2.0.\n    Such content has been modified by the MEF Forum and its contributors.\n  title: WorkOrder Management\n  version: 1.0.0-RC\nservers:\n  - url: 'https://{serverBase}/mefApi/sonata/workOrderManagement/v1/'\n    variables:\n      serverBase:\n        default: mef.net\n        description: The base of Seller's URL.\nsecurity:\n  - oauth2MefLsoApi:\n      - retrieveWorkOrder\n      - listWorkOrder\n      - registerListener\n      - unregisterListener\ntags:\n  - name: workorder\npaths:\n  '/workorder/{id}':\n    get:\n      description: \u003e-\n        The Buyer requests detailed information about a single WorkOrder based\n        on a WorkOrder Identifier.\n      operationId: retrieveWorkOrder\n      parameters:\n      - description: \u003e-\n          Unique (within the Seller domain) identifier for the WorkOrder.\n        in: query\n        name: id\n        schema:\n          type: string\n      - description: \u003e-\n          The unique identifier of the organization that is acting as the a\n          Buyer. MUST be specified in the request only when the requester\n          represents more than one Buyer.\n        in: query\n        name: buyerId\n        schema:\n          type: string\n      - description: \u003e-\n          The unique identifier of the organization that is acting as the\n          Seller. MUST be specified in the request only when responding\n          entity represents more than one Seller.\n        in: query\n        name: sellerId\n        schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/WorkOrder'\n          description:\n            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a WorkOrder by ID\n      tags:\n        - workorder\n  '/workorder':\n    get:\n      description: \u003e-\n        The Buyer requests detailed information about a single WorkOrder based\n        on a WorkOrder Identifier.\n      operationId: listWorkOrder\n      parameters:\n      - description: \u003e-\n          Unique (within the Seller domain) identifier for the WorkOrder.\n        in: query\n        name: id\n        schema:\n          type: string\n      - description: \u003e-\n          ID of a related entity that this WorkOrder is related to and is\n          present in the `relatedEntity` list\n        in: query\n        name: relatedEntityId\n        schema:\n            type: string\n      - description:\n           A site identifier which is associated to the Appointment.\n        in: query\n        name: geographicalSiteId\n        schema:\n            type: string\n      - description: A address identifier which is associated to the Appointment.\n        in: query\n        name: geographicalAddressId\n        schema:\n            type: string\n      - description: \u003e-\n          The state of the WorkOrder.\n        in: query\n        name: state\n        schema:\n          enum:\n          - cancelled\n          - completed\n          - inProgress\n          - open\n          - planned\n          - unableToComplete\n          type: string\n      - description: \u003e-\n          Indicates that the Buyer must schedule an Appointment to fulfill the WorkOder.\n        in: query\n        name: appointmentRequired\n        schema:\n          type: boolean \n      - description: \u003e-\n          The unique identifier of the organization that is acting as the a\n          Buyer. MUST be specified in the request only when the requester\n          represents more than one Buyer.\n        in: query\n        name: buyerId\n        schema:\n            type: string\n      - description: \u003e-\n          The unique identifier of the organization that is acting as the\n          Seller. MUST be specified in the request only when responding\n          entity represents more than one Seller.\n        in: query\n        name: sellerId\n        schema:\n          type: string\n      - description:\n          Requested index for start of resources to be provided in response\n        in: query\n        name: offset\n        schema:\n          type: integer\n      - description: \n            Requested number of resources to be provided in response\n        in: query\n        name: limit\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/WorkOrder_Find' \n          description:\n            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a WorkOrder by ID\n      tags:\n        - workorder\n  /hub:\n    post:\n      description: The Buyer requests to subscribe to WorkOrder Notifications.\n      operationId: registerListener\n      parameters:\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when responding\n            entity represents more than one Seller.\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/EventSubscriptionInput'\n        description:\n          Data containing the callback endpoint to deliver the information\n        required: true\n      responses:\n        '201':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/EventSubscription'\n          description:\n            'Subscribed  (https://tools.ietf.org/html/rfc7231#section-6.3.2)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: \u003e-\n        Allows the Buyer to register to WorkOrder state change\n        notifications\n      tags:\n        - events subscription\n      x-codegen-request-body-name: data\n  '/hub/{id}':\n    delete:\n      description: The Buyer requests to unsubscribe from WorkOrder Notifications\n      operationId: unregisterListener\n      parameters:\n        - description: The id of the EventSubscription\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the a\n            Buyer. MUST be specified in the request only when the requester\n            represents more than one Buyer.\n          in: query\n          name: buyerId\n          schema:\n            type: string\n        - description: \u003e-\n            The unique identifier of the organization that is acting as the\n            Seller. MUST be specified in the request only when responding\n            entity represents more than one Seller.\n          in: query\n          name: sellerId\n          schema:\n            type: string\n      responses:\n        '204':\n          description:\n            'Deleted (https://tools.ietf.org/html/rfc7231#section-6.3.5)'\n        '400':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad request\n        '401':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        '403':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        '404':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        '500':\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Unregister a listener\n      tags:\n        - events subscription\ncomponents:\n  securitySchemes:\n    oauth2MefLsoApi:\n      type: oauth2\n      description:\n        Example of a security scheme conforming to MEF 128 LSO API Security\n        Profiles standard\n      flows:\n        clientCredentials:\n          tokenUrl: /oauth2/lsoApiToken/\n          refreshUrl: /oauth2/refreshLsoApiToken/\n          scopes:\n            retrieveWorkOrder:\n              The Buyer requests detailed information about a single WorkOrder based\n              on a WorkOrder Identifier.\n            listWorkOrder:\n              The Buyer requests detailed information about a single WorkOrder based\n              on a WorkOrder Identifier.\n            registerListener:\n              The Buyer requests to subscribe to WorkOrder Notifications.\n            unregisterListener:\n              The Buyer requests to unsubscribe from WorkOrder Notifications\n  schemas:\n    AppointmentRef:\n      description: \u003e\n        A reference to an Appointment resource available through Appointment\n        API.\n      properties:\n        href:\n          description: \u003e\n            Hyperlink to the referenced Appointment. Hyperlink MAY be used by\n            the Seller in responses. Hyperlink MUST be ignored by the Seller in\n            case it is provided by the Buyer in a request\n          type: string\n        id:\n          description: Identifier of the referenced Appointment.\n          type: string\n      required:\n        - id\n      type: object\n    DataSizeUnit:\n      description: The unit of measure in the data size.\n      enum:\n        - BYTES\n        - KBYTES\n        - MBYTES\n        - GBYTES\n        - TBYTES\n        - PBYTES\n        - EBYTES\n        - ZBYTES\n        - YBYTES\n      type: string\n    EventSubscription:\n      description: \u003e-\n        Sets the communication endpoint address the service instance must use\n        to deliver notification information\n      properties:\n        callback:\n          description: \u003e-\n            The value provided by the Buyer in `EventSubscriptionInput` during\n            notification registration\n          type: string\n        id:\n          description: \u003e-\n            An identifier of the event subscription assigned by the Seller when\n            a resource is created.\n          type: string\n        query:\n          description: \u003e-\n            This attribute is used to define notification registration\n            constraints.\n          type: string\n      required:\n        - callback\n        - id\n      type: object\n    EventSubscriptionInput:\n      description: This class is used to register for Notifications.\n      properties:\n        callback:\n          description: \u003e-\n            This callback value must be set to *host* property from Buyer\n            Notification API (WorkOrderNotification.api.yaml). This\n            property is appended with the base path and notification resource\n            path specified in that API to construct an URL to which\n            notification is sent. E.g. for \"callback\":\n            \"http://buyer.com/listenerEndpoint\", the state change event\n            notification will be sent to:\n            `http://buyer.com/listenerEndpoint/mefApi/sonata/workOrderNotification/v1/listener/workOrderStateChangeEvent`\n          type: string\n        query:\n          description: \u003e-\n            This attribute is used to define to which type of events to\n            register to. Example: \"query\":\"eventType =\n            WorkOrderStateChangeEvent\". To subscribe for more than one\n            event type, put the values separated by comma:\n            `eventType=WorkOrderStateChangeEvent,WorkOrderResolvedEvent`.\n            The possible values are enumerated by the 'WorkOrderEventType'\n            in WorkOrderNotification.api.yaml. An empty query is treated as\n            specifying no filters - ending in  subscription for all event\n            types.\n          type: string\n      required:\n        - callback\n      type: object\n    Error:\n      description: \u003e\n        Standard Class used to describe API response error\n\n        Not intended to be use directly only via specialization which defines a\n        code\n      properties:\n        message:\n          description: \u003e-\n            Text that provides mode details and corrective actions related to\n            the error. This can be shown to a client user.\n          type: string\n        reason:\n          description: \u003e-\n            Text that explains the reason for error. This can be shown to a\n            client user.\n          maxLength: 255\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n        - reason\n      type: object\n    Error400:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error400Code'\n              description: \u003e-\n                One of the following error codes:\n\n                - missingQueryParameter: The URI is missing a required\n                query-string parameter\n\n                - missingQueryValue: The URI is missing a required query-string\n                parameter value\n\n                - invalidQuery: The query section of the URI is invalid.\n\n                - invalidBody: The request has an invalid body\n          required:\n            - code\n          type: object\n      description:\n        Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)\n    Error400Code:\n      description: \u003e-\n        One of the following error codes:\n\n        - missingQueryParameter: The URI is missing a required query-string\n        parameter\n\n        - missingQueryValue: The URI is missing a required query-string\n        parameter value\n\n        - invalidQuery: The query section of the URI is invalid.\n\n        - invalidBody: The request has an invalid body\n      enum:\n        - missingQueryParameter\n        - missingQueryValue\n        - invalidQuery\n        - invalidBody\n      type: string\n    Error401:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error401Code'\n              description: \u003e-\n                One of the following error codes:\n\n                - missingCredentials: No credentials provided.\n\n                - invalidCredentials: Provided credentials are invalid or\n                expired\n          required:\n            - code\n          type: object\n      description:\n        Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n        - missingCredentials\n        - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error403Code'\n              description: |-\n                This code indicates that the server understood\n                the request but refuses to authorize it because\n                of one of the following error codes:\n                - accessDenied: Access denied\n                - forbiddenRequester: Forbidden requester\n                - tooManyUsers: Too many users\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Forbidden. This code indicates that the server understood the request\n        but refuses to authorize it.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n        - accessDenied\n        - forbiddenRequester\n        - tooManyUsers\n      type: string\n    Error404:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - notFound: A current representation for the target resource\n                not found\n              enum:\n                - notFound\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Resource for the requested path not found.\n        (https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    Error409:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - conflict: The client has provided a value whose semantics are\n                not appropriate for the property.\n              enum:\n                - conflict\n              type: string\n          required:\n            - code\n          type: object\n      description:\n        Conflict (https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.8)\n    Error422:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              $ref: '#/components/schemas/Error422Code'\n              description: |\n                One of the following error codes:\n                  - missingProperty: The property the Seller has expected is not present in the payload\n                  - invalidValue: The property has an incorrect value\n                  - invalidFormat: The property value does not comply with the expected value format\n                  - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n                  - unexpectedProperty: Additional property, not expected by the Seller has been provided\n                  - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n                  - otherIssue: Other problem was identified (detailed information provided in a reason)\n            propertyPath:\n              description: \u003e\n                A pointer to a particular property of the payload that caused\n                the validation issue. It is highly recommended that this\n                property should be used.\n\n                Defined using JavaScript Object Notation (JSON) Pointer\n                (https://tools.ietf.org/html/rfc6901).\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Unprocessable entity due to a business validation problem.\n        (https://tools.ietf.org/html/rfc4918#section-11.2)\n    Error422Code:\n      description: |\n        One of the following error codes:\n          - missingProperty: The property the Seller has expected is not present in the payload\n          - invalidValue: The property has an incorrect value\n          - invalidFormat: The property value does not comply with the expected value format\n          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n          - unexpectedProperty: Additional property, not expected by the Seller has been provided\n          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n          - otherIssue: Other problem was identified (detailed information provided in a reason)\n      enum:\n        - missingProperty\n        - invalidValue\n        - invalidFormat\n        - referenceNotFound\n        - unexpectedProperty\n        - tooManyRecords\n        - otherIssue\n      type: string\n    Error500:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: \u003e-\n                The following error code:\n\n                - internalError: Internal server error - the server encountered\n                an unexpected condition that prevented it from fulfilling the\n                request.\n              enum:\n                - internalError\n              type: string\n          required:\n            - code\n          type: object\n      description: \u003e-\n        Internal Server Error.\n        (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Error501:\n      allOf:\n        - $ref: '#/components/schemas/Error'\n        - properties:\n            code:\n              description: |-\n                The following error code::\n                - notImplemented: Method not supported by the server\n              enum:\n                - notImplemented\n              type: string\n          required:\n            - code\n          type: object\n      description:\n        'Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)'\n    FieldedAddress:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            city:\n              description: The city that the address is in\n              type: string\n            country:\n              description: Country that the address is in\n              type: string\n            geographicSubAddress:\n              $ref: '#/components/schemas/GeographicSubAddress'\n              description:\n                Additional fields used to specify an address, as detailed as\n                possible.\n            locality:\n              description: The locality that the address is in\n              type: string\n            postcode:\n              description: \u003e-\n                Descriptor for a postal delivery area, used to speed and\n                simplify the delivery of mail (also known as zip code)\n              type: string\n            postcodeExtension:\n              description: \u003e-\n                An extension of a postal code. E.g. the part following the dash\n                in a US urban property address\n              type: string\n            stateOrProvince:\n              description: The State or Province that the address is in\n              type: string\n            streetName:\n              description: Name of the street or other street type\n              type: string\n            streetNr:\n              description: \u003e-\n                Number identifying a specific property on a public street. It\n                may be combined with streetNrLast for ranged addresses. MEF 79\n                defines it as required however as in certain countries it is\n                not used we make it optional in API.\n              type: string\n            streetNrLast:\n              description:\n                Last number in a range of street numbers allocated to a\n                property\n              type: string\n            streetNrLastSuffix:\n              description: Last street number suffix for a ranged address\n              type: string\n            streetNrSuffix:\n              description: The first street number suffix\n              type: string\n            streetSuffix:\n              description: A modifier denoting a relative direction\n              type: string\n            streetType:\n              description: \u003e-\n                The type of street (e.g., alley, avenue, boulevard, brae,\n                crescent, drive, highway, lane, terrace, parade, place, tarn,\n                way, wharf)\n              type: string\n          required:\n            - city\n            - country\n            - streetName\n          type: object\n      description: \u003e-\n        A type of Address that has a discrete field and value for each type of\n        boundary or identifier down to the lowest level of detail. For example\n        \"street number\" is one field, \"street name\" is another field, etc.\n        Reference: MEF 79 (Sn 8.9.2)\n    FormattedAddress:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            addrLine1:\n              description: The first address line in a formatted address\n              type: string\n            addrLine2:\n              description: The second address line in a formatted address\n              type: string\n            city:\n              description: The city that the address is in\n              type: string\n            country:\n              description: Country that the address is in\n              type: string\n            locality:\n              description: \u003e-\n                An area of defined or undefined boundaries within a local\n                authority or other legislatively defined area, usually rural or\n                semi-rural in nature\n              type: string\n            postcode:\n              description: \u003e-\n                Descriptor for a postal delivery area, used to speed and\n                simplify the delivery of mail (also known as ZIP code)\n              type: string\n            postcodeExtension:\n              description: \u003e-\n                An extension of a postal code. E.g. the part following the dash\n                in an US urban property address\n              type: string\n            stateOrProvince:\n              description: The State or Province that the address is in\n              type: string\n          required:\n            - addrLine1\n            - city\n            - country\n          type: object\n      description: \u003e-\n        A type of Address that has discrete fields for each type of boundary or\n        identifier with the exception of street and more specific location\n        details, which are combined into a maximum of two strings based on\n        local postal addressing conventions. Reference: MEF 79 (Sn 8.9.3)\n    GeographicAddressLabel:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            externalReferenceId:\n              description: A reference to an address by id\n              type: string\n            externalReferenceType:\n              description: \u003e-\n                Uniquely identifies the authority that specifies the addresses\n                reference and/or its type (if the authority specifies more than\n                one type of address). The value(s) to be used are to be agreed\n                during the onboarding. For North American providers this would\n                normally be CLLI (Common Language Location Identifier) code.\n              type: string\n          required:\n            - externalReferenceId\n            - externalReferenceType\n          type: object\n      description: \u003e-\n        A unique identifier controlled by a generally accepted independent\n        administrative authority that specifies a fixed geographical location. \n\n        Reference: MEF 79 (Sn 8.9.4)\n    GeographicAddressRef:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            href:\n              description: \u003e\n                Hyperlink to the referenced GeographicAddress. Hyperlink MAY be\n                used by the Seller in responses. Hyperlink MUST be ignored by\n                the Seller in case it is provided by the Buyer in a request\n              type: string\n            id:\n              description: \u003e-\n                Identifier of the referenced Geographic Address. This\n                identifier is assigned during a successful address validation\n                request (Geographic Address Validation API)\n              type: string\n          required:\n            - id\n          type: object\n      description: \u003e\n        A reference to a Geographic Address resource available through Address\n        Validation API.\n    GeographicSiteRef:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            href:\n              description: \u003e\n                Hyperlink to the referenced GeographicSite. Hyperlink MAY be\n                used by the Seller in responses. Hyperlink MUST be ignored by\n                the Seller in case it is provided by the Buyer in a request\n              type: string\n            id:\n              description: Identifier of the referenced Geographic Site.\n              type: string\n          required:\n            - id\n          type: object\n      description: \u003e\n        A reference to a Geographic Site resource available through Service\n        Site API\n    GeographicSubAddress:\n      description:\n        Additional fields used to specify an address, as detailed as possible.\n      properties:\n        buildingName:\n          description: \u003e\n            Allows for identification of places that require building name  as\n            part of addressing information\n          type: string\n        id:\n          description: Unique Identifier of the subAddress\n          type: string\n        levelNumber:\n          description:\n            Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2\n          type: string\n        levelType:\n          description: Describes level types within a building\n          type: string\n        privateStreetName:\n          description: \u003e-\n            \"Private streets internal to a property (e.g. a university) may\n            have internal names that are not recorded by the land title office\n          type: string\n        privateStreetNumber:\n          description: Private streets numbers internal to a private street\n          type: string\n        subUnit:\n          description: \u003e-\n            Representation of a MEFSubUnit It is used for describing subunit\n            within a subaddress  e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\n            UNIT, WHARF.\n          items:\n            $ref: '#/components/schemas/MEFSubUnit'\n          type: array\n      type: object\n    MEFBuyerSellerType:\n      description: An enumeration with buyer and seller values.\n      enum:\n        - buyer\n        - seller\n      type: string\n    MEFByteSize:\n      description: A size represented by value and Byte units\n      properties:\n        amount:\n          default: 1\n          description: Numeric value in a given unit\n          format: float\n          type: number\n        units:\n          $ref: '#/components/schemas/DataSizeUnit'\n          description: Byte Unit\n      type: object\n    MEFGeographicPoint:\n      allOf:\n        - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n        - properties:\n            spatialRef:\n              description: \u003e-\n                The spatial reference system used to determine the coordinates\n                (e.g. \"WGS84\"). The system used and the value of this field are\n                to be agreed upon during the onboarding process.\n              type: string\n            x:\n              description: \u003e-\n                The latitude expressed in the format specified by the\n                `spacialRef`\n              type: string\n            'y':\n              description: \u003e-\n                The longitude expressed in the format specified by the\n                `spacialRef`\n              type: string\n            z:\n              description: \u003e-\n                The elevation expressed in the format specified by the\n                `spacialRef`\n              type: string\n          required:\n            - spatialRef\n            - x\n            - 'y'\n          type: object\n      description: \u003e\n        A MEFGeographicPoint defines a geographic point through coordinates.\n        Reference: MEF 79 (Sn 8.9.5)\n    MEFObservedImpactType:\n      description: \u003e-\n        An enumeration of the possible values of impact observed by the Buyer.\n\n        - degraded: When the Product is impacted and not meeting the Product\n        specifications.\n\n        - intermittent: When the Product is not operational as intended on an\n        intermittent basis.\n\n        - down: When the Product is non-operational.\n      enum:\n        - degraded\n        - intermittent\n        - down\n      type: string\n    MEFSubUnit:\n      description: Allows for sub unit identification\n      properties:\n        subUnitNumber:\n          description: \u003e-\n            The discriminator used for the subunit, often just a simple number\n            but may also be a range.\n          type: string\n        subUnitType:\n          description: \u003e-\n            The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\n            UNIT, WHARF.\n          type: string\n      required:\n        - subUnitNumber\n        - subUnitType\n      type: object\n    Note:\n      description: \u003e-\n        Extra information about a given entity. Only useful in processes\n        involving human interaction. Not applicable for an automated process.\n      properties:\n        author:\n          description: Author of the note\n          type: string\n        date:\n          description: Date of the note\n          format: date-time\n          type: string\n        id:\n          description: \u003e-\n            Identifier of the note within its containing entity (may or may not\n            be globally unique, depending on provider implementation)\n          type: string\n        source:\n          $ref: '#/components/schemas/MEFBuyerSellerType'\n          description: Indicates if this Note was added by the Buyer or Seller.\n        text:\n          description: Text of the note\n          type: string\n      required:\n        - author\n        - date\n        - id\n        - source\n        - text\n      type: object\n    RelatedContactInformation:\n      description: \u003e-\n        Contact data for a person or organization that is involved in a given\n        context. It is specified by the Seller (e.g. Seller Contact\n        Information) or by the Buyer.\n      properties:\n        emailAddress:\n          description: Email address\n          type: string\n        name:\n          description: Name of the contact\n          type: string\n        number:\n          description: Phone number\n          type: string\n        numberExtension:\n          description: Phone number extension\n          type: string\n        organization:\n          description: The organization or company that the contact belongs to\n          type: string\n        postalAddress:\n          $ref: '#/components/schemas/FieldedAddress'\n          description: \u003e-\n            Identifies the postal address of the person or office to be\n            contacted.\n        role:\n          description: A role the party plays in a given context.\n          type: string\n      required:\n        - emailAddress\n        - name\n        - number\n        - role\n      type: object\n    RelatedEntity:\n      description: \u003e-\n        A reference to an entity, where the type of the entity is not known in\n        advance.\n      properties:\n        '@referredType':\n          default: Product\n          description: \u003e-\n            The actual type of the target instance when needed for\n            disambiguation.\n          type: string\n        href:\n          description: Reference of the related entity.\n          type: string\n        id:\n          description: Unique identifier of a related entity.\n          type: string\n        role:\n          description: The role of an entity.\n          type: string\n      required:\n        - '@referredType'\n        - id\n        - role\n      type: object\n    RelatedPlaceRefOrValue:\n      description:\n        Defines the Place (Address or Site) by reference or by value.\n      discriminator:\n        mapping:\n          FieldedAddress: '#/components/schemas/FieldedAddress'\n          FormattedAddress: '#/components/schemas/FormattedAddress'\n          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'\n          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'\n          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'\n          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'\n        propertyName: '@type'\n      properties:\n        '@schemaLocation':\n          description: \u003e-\n            A URI to a JSON-Schema file that defines additional attributes and\n            relationships. May be used to define additional related place\n            types. Usage of this attribute must be agreed upon between Buyer\n            and Seller.\n          format: uri\n          type: string\n        '@type':\n          description: \u003e\n            This field is used as a discriminator and is used between different\n            place representations. This type might discriminate for additional\n            related place as defined in '@schemaLocation'.\n          type: string\n        role:\n          description: Role of this place\n          type: string\n      required:\n        - '@type'\n        - role\n      type: object\n    TimeDuration:\n      type: object\n      description: \u003e-\n        This class is used to describe durations expressed as a 2-tuple, (value,\n        units). The units from from nanoseconds to years.\n      properties:\n          timeDurationValue:\n            description: \u003e-\n              The value of the duration. For example, if the duration is 20 ms, this\n              element is 20.\n            type: integer\n          timeDurationUnits:\n            description: \u003e-\n              The unit of measure in the duration. For example, if an interval is\n              2ms, this element is MS.\n            $ref: '#/components/schemas/TimeDurationUnits'\n    TimeDurationUnits:\n      type: string\n      description: \u003e-\n        The unit of measure in the duration. For example, if an interval is 2ms,\n        this element is MS.\n      enum:\n        - \"NS\"\n        - \"US\"\n        - \"MS\"\n        - \"SEC\"\n        - \"MIN\"\n        - \"HOUR\"\n        - \"DAY\"\n        - \"WEEK\"\n        - \"MONTH\"\n        - \"YEAR\"\n    WorkOrder:\n      description: \u003e\n        A set of tasks to be scheduled and performed under the responsibility\n        of a Seller Technician(s)\n      properties:\n        id:\n          description:\n            Unique (within the Seller domain) identifier for the WorkOrder.\n          type: string\n        href:\n          description: Hyperlink, a reference to the WorkOrder entity\n          type: string\n        appointmentRequired:\n          description: \u003e-\n            The Seller requires the Buyer to schedule an Appointment. If set to\n            true, the Seller is Requesting the Buyer to schedule an\n            Appointment.\n          type: boolean\n        appointment:\n          description: \u003e-\n            A reference to a set of Appointments for the WorkOrder. A WorkOrder\n            may contain only one open Appointment at a time (e.g. with state of\n            'scheduled').\n          items:\n            $ref: '#/components/schemas/AppointmentRef'\n          type: array \n        duration:\n          $ref: '#/components/schemas/TimeDuration'\n          description: The current state of the WorkOrder    \n        note:\n          description: \u003e-\n            A set of unstructured comments or information associated to the\n            WorkOrder\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n        place:\n          description: \u003e-\n            The location where the WorkOrder Tasks are to be performed. If an\n            appointment is needed, this will also be the location where the\n            Appointment takes place and includes the site contact which the\n            Seller technician may need to get access to the Buyer's site during\n            the Appointment. This could be an end-user, security personnel or\n            any authorized person\n          items:\n            $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n          type: array\n        relatedContactInformation:\n          description: \u003e-\n            Party playing a role for this WorkOrder.\n            The 'role' is to specify the type of contact as specified in MEF\n            113:\n            Technical Contact ('role=technicalContact') - REQUIRED to be set by\n            the Seller. The Seller technical contact responsible for the\n            WorkOrder.\n            Technician ('role=technician') - The Seller technician assigned to\n            the WorkOrder and responsible for performing a set of tasks. In\n            certain instances this could be a Buyer technician that works on\n            behalf of the Seller.\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          minItems: 1\n          type: array\n        relatedEntity:\n          description: \u003e-\n            An entity that is related to the WorkOrder such as a service, a\n            product, etc. The entity which the WorkOrder is associated with.\n          items:\n            $ref: '#/components/schemas/RelatedEntity'\n          minItems: 1\n          type: array\n        state:\n          $ref: '#/components/schemas/WorkOrderStateType'\n          description: The current state of the WorkOrder\n        task:\n          description: \u003e-\n            A set of tasks to be performed under the responsibility of the\n            Technician to fulfil the WorkOrder. Each item is a description of a\n            specific task to be performed under the responsibility of the\n            Technician.\n          items:\n            type: string\n          minItems: 1\n          type: array\n      required:\n        - appointmentRequired\n        - id\n        - relatedContactInformation\n        - relatedEntity\n        - state\n        - tasks\n      type: object\n    WorkOrderRef:\n      description: |\n        A reference to an WorkOrder resource.\n      properties:\n        href:\n          description: |\n            Hyperlink to the referenced WorkOrder.\n          type: string\n        id:\n          description: Identifier of the referenced WorkOrder.\n          type: string\n      required:\n        - id\n      type: object\n    WorkOrderStateType:\n      description: |\n        Possible values for the state of the WorkOrder\n\n        | state              | MEF 113 name        | Description                                                                                                                                                                                                                                                     |\n        | ------------------ | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n        | `completed`        | COMPLETED           | The Seller Technician responsible for the WorkOrder has successfully completed all the assigned Tasks.                                                                                                                                                          |\n        | `cancelled`        | CANCELLED           | The WorkOrder has been cancelled by the Seller or due to the Buyer requesting to cancel the WorkOrder.                                                                                                                                                             |\n        | `inProgress`       | IN_PROGRESS         | The Seller Technician responsible for the WorkOrder has been assigned and started one or more of the assigned Tasks.                                                                                                                                            |\n        | `open`             | OPEN                | A WorkOrder was initiated by the Seller to be assigned to a Technician responsible for resolving the WorkOrder.                                                                                                                                                    |\n        | `planned`          | PLANNED             | The WorkOrder has been given an execution date for resolving one or more Tasks.                                                                                                                                                                                 |\n        | `unableToComplete` | UNABLE_TO_COMPLETE  | The Seller Technician responsible for the WorkOrder was unable to complete one or more of the assigned Tasks, because additional skills or information is required. Additional tasks are required to resolve the WorkOrder and a new WorkOrder needs to be opened. |\n      enum:\n        - cancelled\n        - completed\n        - inProgress\n        - open\n        - planned\n        - unableToComplete\n      type: string\n    WorkOrder_Find:\n      description: \u003e\n        A set of tasks to be scheduled and performed under the responsibility\n        of a Seller Technician(s)\n      properties:\n        appointmentRequired:\n          description: \u003e-\n            The Seller requires the Buyer to schedule an Appointment. If set to\n            true, the Seller is Requesting the Buyer to schedule an\n            Appointment.\n          type: boolean\n        id:\n          description:\n            Unique (within the Seller domain) identifier for the WorkOrder.\n          type: string\n        place:\n          description: \u003e-\n            The location where the WorkOrder Tasks are to be performed. If an\n            appointment is needed, this will also be the location where the\n            Appointment takes place and includes the site contact which the\n            Seller technician may need to get access to the Buyer's site during\n            the Appointment. This could be an end-user, security personnel or\n            any authorized person\n          items:\n            $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n          type: array\n        relatedEntity:\n          description: \u003e-\n            An entity that is related to the WorkOrder such as a service, a\n            product, etc. The entity which the WorkOrder is associated with.\n          items:\n            $ref: '#/components/schemas/RelatedEntity'\n          minItems: 1\n          type: array\n        state:\n          $ref: '#/components/schemas/WorkOrderStateType'\n          description: The current state of the WorkOrder\n      required:\n        - appointmentRequired\n        - id\n        - relatedContactInformation\n        - relatedEntity\n        - state\n        - tasks\n      type: object\n \n\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@ef902bd46392b357d211762387b96e7790922e92/-/blob/generated/security/workforce/workorder/workorderManagement.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/ef902bd46392b357d211762387b96e7790922e92/generated/security/workforce/workorder/workorderManagement.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/workorder/{id}\": get: operation \"retrieveWorkOrder\": at generated/security/workforce/workorder/workorderManagement.api.yaml:45:7: parse path \"/workorder/{id}\": path parameter not specified: \"id\""
}