{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eclipse/kapua"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "job-engine/app/resources/src/main/resources/openapi/openapi.yaml",
			"byteSize": 7782,
			"content": "openapi: 3.0.2\n\ninfo:\n  title: Eclipse Kapua Job Engine REST API\n  version: '1.0'\n  contact:\n    name: Eclipse Kapua Dev Team\n    url: https://eclipse.org/kapua\n    email: kapua-dev@eclipse.org\n  license:\n    name: Eclipse Public License 2.0\n    url: https://www.eclipse.org/legal/epl-2.0\n  description: |\n    # Introduction\n    Eclipse Kapua exposes a comprehensive set of Web Service APIs for application integration purposes. The Eclipse Kapua REST API allows you to build applications that use Representational State Transfer HTTP calls to retrieve, modify, or publish platform data. For example through the APIs, you are able to access all the functionality of the Console or to control a device from your application built on top of Eclipse Kapua.\n\n    The Eclipse Kapua platform conforms to standard REpresentational State Transfer (REST) protocol to expose its Application Programming Interfaces (API). REST has emerged over the past few years as a predominant Web service design model. REST-style architectures consist of clients and servers. Clients initiate requests to servers, while servers process requests and return appropriate responses. Requests and responses are built around the transfer of representations of resources. A resource can be essentially any coherent and meaningful concept that may be addressed. A representation of a resource is typically a document that captures the current or intended state of a resource.\n\n    Eclipse Kapua RESTful APIs expose the standard action types (create, read, update, delete) over the platform objects. They are capable of retrieving a resource representation in XML or JSON format. You can use the REST HTTP Accept Header to specify the representation requested using the \"application/xml\" and \"application/json\" Media Types. As an alternative to the Accept header, you can specify the requested data representation by appending an \".xml\" or \".json\" suffix to the path part of your request URLs.\n\n    For more details on the Eclipse Kapua REST APIs, please refer to:\n    - [The Eclipse Kapua Documentation](https://www.eclipse.org/kapua/documentation.php)\n    - [The Eclipse Kapua Code on github](https://github.com/eclipse/kapua)\n\n    # Authentication\n    All Eclipse Kapua REST API, except the Authentication endpoints that performs an Authentication, need an Authentication Token to be executed. You will retrieve such token as a response of one of the Authentication calls, in the form of a [JWT](https://jwt.io) as the value of the property `tokenId`. For every subsequent call, you need to pass such token in the `Authorization` HTTP Header, with the `Bearer` type.\n\nservers:\n  - description: Kapua REST API Endpoint\n    url: \"{scheme}://{host}:{port}/{basePath}\"\n    variables:\n      scheme:\n        default: https\n        enum:\n          - http\n          - https\n      host:\n        description: Host name of the Kapua REST API Endpoint\n        default: api.your-kapua-instance.com\n      port:\n        description: Port number of the Kapua REST API Endpoint\n        default: '8080'\n      basePath:\n        description: The Base path of the Kapua REST API Endpoint\n        default: v1\n  - description: Localhost Docker Compose\n    url: http://localhost:8082/v1\n\npaths:\n  /clean-data/{scopeId}/{jobId}:\n    $ref: './jobEngine-scopeId-jobId.yaml#/paths/~1clean-data~1{scopeId}~1{jobId}'\n  /is-running/{scopeId}:\n    $ref: './jobEngine-scopeId.yaml#/paths/~1is-running~1{scopeId}'\n  /is-running/{scopeId}/{jobId}:\n    $ref: './jobEngine-scopeId-jobId.yaml#/paths/~1is-running~1{scopeId}~1{jobId}'\n  /start/{scopeId}/{jobId}:\n    $ref: './jobEngine-scopeId-jobId.yaml#/paths/~1start~1{scopeId}~1{jobId}'\n  /start-with-options/{scopeId}/{jobId}:\n    $ref: './jobEngine-scopeId-jobId.yaml#/paths/~1start-with-options~1{scopeId}~1{jobId}'\n  /stop/{scopeId}/{jobId}:\n    $ref: './jobEngine-scopeId-jobId.yaml#/paths/~1stop~1{scopeId}~1{jobId}'\n  /resume-execution/{scopeId}/{jobId}/{executionId}:\n    $ref: './jobEngine-scopeId-jobId-executionId.yaml#/paths/~1resume-execution~1{scopeId}~1{jobId}~1{executionId}'\n  /stop-execution/{scopeId}/{jobId}/{executionId}:\n    $ref: './jobEngine-scopeId-jobId-executionId.yaml#/paths/~1stop-execution~1{scopeId}~1{jobId}~1{executionId}'\n\ncomponents:\n  parameters:\n    scopeId:\n      name: scopeId\n      in: path\n      description: |\n        The ID of the Scope where to perform the operation.\n      schema:\n          $ref: '#/components/schemas/kapuaId'\n      required: true\n  schemas:\n    kapuaId:\n      type: string\n      pattern: '[A-Za-z0-9-_=]+'\n      description: The standard format for any ID in Kapua. It's encoded as a [base64url URL- and filename-safe (RFC 4648 ยง5)](https://tools.ietf.org/html/rfc4648#section-5)\n    kapuaError:\n      description: The base object to represent an Error\n      properties:\n        message:\n          type: string\n          description: An extended description of the error that occurred when performing the operation\n        kapuaErrorCode:\n          type: string\n          description: An human readable error code that can be used to\n  responses:\n    ### Errors ###\n    kapuaError:\n      description: An error occurred while performing the request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/kapuaError'\n    entityNotFound:\n      description: The desired entity could not be found\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/responses/kapuaError/content/application~1json/schema'\n              - properties:\n                  entityType:\n                    description: The type of the entity that could not be found\n                    type: string\n                  entityId:\n                    description: The ID of the entity that could not be found\n                    type: string\n    illegalArgument:\n      description: An illegal value has been passes to the operation\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/kapuaError'\n              - properties:\n                  argumentName:\n                    description: The name of the argument who holds an illegal value\n                    type: string\n                  argumentValue:\n                    description: The illegal value passed to the operation\n                    type: string\n    illegalNullArgument:\n      description: An illegal null argument has been passed to the operation\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/kapuaError'\n              - properties:\n                  argumentName:\n                    type: string\n                    description: The name of the argument who holds an illegal null value\n    subjectUnauthorized:\n      description: The user performing the operation does not have the required permissions\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/kapuaError'\n              - properties:\n                  permission:\n                    description: The permission that is required to perform the operation, and that the current user is missing\n                    type: string\n    unauthenticated:\n      description: The provided AccessToken could not be found, or no AccessToken has been provided\n  securitySchemes:\n    kapuaToken:\n      description: The default AccessToken Security Scheme. A [JWT](https://jwt.io) is used to represent the claims of a user\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\nsecurity:\n  - kapuaToken: []\n\nx-explorer-enabled: false\nx-samples-languages:\n  - java\n  - python\n  - node\n  - javascript\n  - ruby\n  - curl\n",
			"canonicalURL": "/github.com/eclipse/kapua@ae2c7d65edca9201f36a4514d19f65d4ef97bb40/-/blob/job-engine/app/resources/src/main/resources/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/eclipse/kapua/blob/ae2c7d65edca9201f36a4514d19f65d4ef97bb40/job-engine/app/resources/src/main/resources/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: /stop-execution/{scopeId}/{jobId}/{executionId}: referenced pathItem not supported"
}