{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OkieOth/yacg"
		},
		"file": {
			"name": "openapi_v3_example_refs.json",
			"size": 0,
			"path": "tests/resources/models/json/examples/openapi_v3_example_refs.json",
			"byteSize": 14938,
			"content": "{\n    \"openapi\": \"3.0.1\",\n    \"info\": {\n      \"title\": \"Swagger Petstore\",\n      \"description\": \"This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\",\n      \"termsOfService\": \"http://swagger.io/terms/\",\n      \"contact\": {\n        \"email\": \"apiteam@swagger.io\"\n      },\n      \"license\": {\n        \"name\": \"Apache 2.0\",\n        \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n      },\n      \"version\": \"1.0.0\"\n    },\n    \"externalDocs\": {\n      \"description\": \"Find out more about Swagger\",\n      \"url\": \"http://swagger.io\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"https://petstore.swagger.io/v2\"\n      },\n      {\n        \"url\": \"http://petstore.swagger.io/v2\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"name\": \"pet\",\n        \"description\": \"Everything about your Pets\",\n        \"externalDocs\": {\n          \"description\": \"Find out more\",\n          \"url\": \"http://swagger.io\"\n        }\n      },\n      {\n        \"name\": \"store\",\n        \"description\": \"Access to Petstore orders\"\n      },\n      {\n        \"name\": \"user\",\n        \"description\": \"Operations about user\",\n        \"externalDocs\": {\n          \"description\": \"Find out more about our store\",\n          \"url\": \"http://swagger.io\"\n        }\n      }\n    ],\n    \"paths\": {\n      \"/pet\": {\n        \"put\": {\n          \"tags\": [\n            \"pet\"\n          ],\n          \"summary\": \"Update an existing pet\",\n          \"operationId\": \"updatePet\",\n          \"requestBody\": {\n            \"description\": \"Pet object that needs to be added to the store\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"./more_sophisticated_allof.json\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            },\n            \"required\": true\n          },\n          \"responses\": {\n            \"400\": {\n              \"description\": \"Invalid ID supplied\",\n              \"content\": {}\n            },\n            \"404\": {\n              \"description\": \"Pet not found\",\n              \"content\": {}\n            },\n            \"405\": {\n              \"description\": \"Validation exception\",\n              \"content\": {}\n            }\n          },\n          \"security\": [\n            {\n              \"petstore_auth\": [\n                \"write:pets\",\n                \"read:pets\"\n              ]\n            }\n          ],\n          \"x-codegen-request-body-name\": \"body\"\n        },\n        \"post\": {\n          \"tags\": [\n            \"pet\"\n          ],\n          \"summary\": \"Add a new pet to the store\",\n          \"operationId\": \"addPet\",\n          \"requestBody\": {\n            \"description\": \"Pet object that needs to be added to the store\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            },\n            \"required\": true\n          },\n          \"responses\": {\n            \"405\": {\n              \"description\": \"Invalid input\",\n              \"content\": {}\n            }\n          },\n          \"security\": [\n            {\n              \"petstore_auth\": [\n                \"write:pets\",\n                \"read:pets\"\n              ]\n            }\n          ],\n          \"x-codegen-request-body-name\": \"body\"\n        }\n      },\n      \"/pet/findByStatus\": {\n        \"get\": {\n          \"tags\": [\n            \"pet\"\n          ],\n          \"summary\": \"Finds Pets by status\",\n          \"description\": \"Multiple status values can be provided with comma separated strings\",\n          \"operationId\": \"findPetsByStatus\",\n          \"parameters\": [\n            {\n              \"name\": \"status\",\n              \"in\": \"query\",\n              \"description\": \"Status values that need to be considered for filter\",\n              \"required\": true,\n              \"style\": \"form\",\n              \"explode\": true,\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"default\": \"available\",\n                  \"enum\": [\n                    \"available\",\n                    \"pending\",\n                    \"sold\"\n                  ]\n                }\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"content\": {\n                \"application/xml\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                  }\n                },\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid status value\",\n              \"content\": {}\n            }\n          },\n          \"security\": [\n            {\n              \"petstore_auth\": [\n                \"write:pets\",\n                \"read:pets\"\n              ]\n            }\n          ]\n        }\n      },\n      \"/pet/findByTags\": {\n        \"get\": {\n          \"tags\": [\n            \"pet\"\n          ],\n          \"summary\": \"Finds Pets by tags\",\n          \"description\": \"Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.\",\n          \"operationId\": \"findPetsByTags\",\n          \"parameters\": [\n            {\n              \"name\": \"tags\",\n              \"in\": \"query\",\n              \"description\": \"Tags to filter by\",\n              \"required\": true,\n              \"style\": \"form\",\n              \"explode\": true,\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"content\": {\n                \"application/xml\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                  }\n                },\n                \"application/json\": {\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid tag value\",\n              \"content\": {}\n            }\n          },\n          \"deprecated\": true,\n          \"security\": [\n            {\n              \"petstore_auth\": [\n                \"write:pets\",\n                \"read:pets\"\n              ]\n            }\n          ]\n        }\n      },\n      \"/pet/{petId}\": {\n        \"get\": {\n          \"tags\": [\n            \"pet\"\n          ],\n          \"summary\": \"Find pet by ID\",\n          \"description\": \"Returns a single pet\",\n          \"operationId\": \"getPetById\",\n          \"parameters\": [\n            {\n              \"name\": \"petId\",\n              \"in\": \"path\",\n              \"description\": \"ID of pet to return\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"content\": {\n                \"application/xml\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                },\n                \"application/json\": {\n                  \"schema\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid ID supplied\",\n              \"content\": {}\n            },\n            \"404\": {\n              \"description\": \"Pet not found\",\n              \"content\": {}\n            }\n          },\n          \"x-security\": {\n            \"scopes\": [\n              \"scope1\",\n              \"scope2\"\n            ]\n          },\n          \"security\": [\n            {\n              \"api_key\": []\n            }\n          ]\n        },\n        \"delete\": {\n          \"tags\": [\n            \"pet\"\n          ],\n          \"summary\": \"Deletes a pet\",\n          \"operationId\": \"deletePet\",\n          \"parameters\": [\n            {\n              \"name\": \"api_key\",\n              \"in\": \"header\",\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"name\": \"petId\",\n              \"in\": \"path\",\n              \"description\": \"Pet id to delete\",\n              \"required\": true,\n              \"schema\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              }\n            }\n          ],\n          \"responses\": {\n            \"400\": {\n              \"description\": \"Invalid ID supplied\",\n              \"content\": {}\n            },\n            \"404\": {\n              \"description\": \"Pet not found\",\n              \"content\": {}\n            }\n          },\n          \"security\": [\n            {\n              \"petstore_auth\": [\n                \"write:pets\",\n                \"read:pets\"\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"components\": {\n      \"schemas\": {\n        \"Order\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            },\n            \"petId\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            },\n            \"quantity\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"shipDate\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            },\n            \"status\": {\n              \"$ref\":\"#/components/schemas/OrderStatusEnum\"\n            },\n            \"complete\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          \"xml\": {\n            \"name\": \"Order\"\n          }\n        },\n        \"OrderStatusEnum\": {\n          \"type\": \"string\",\n          \"description\": \"Order Status\",\n          \"enum\": [\n            \"placed\",\n            \"approved\",\n            \"delivered\"\n          ]\n        },\n        \"Category\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            }\n          },\n          \"xml\": {\n            \"name\": \"Category\"\n          }\n        },\n        \"User\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            },\n            \"username\": {\n              \"type\": \"string\"\n            },\n            \"firstName\": {\n              \"type\": \"string\"\n            },\n            \"lastName\": {\n              \"type\": \"string\"\n            },\n            \"email\": {\n              \"type\": \"string\"\n            },\n            \"password\": {\n              \"type\": \"string\"\n            },\n            \"phone\": {\n              \"type\": \"string\"\n            },\n            \"userStatus\": {\n              \"$ref\": \"./ExternalEnum.json\"\n            }\n          },\n          \"xml\": {\n            \"name\": \"User\"\n          }\n        },\n        \"Tag\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            }\n          },\n          \"xml\": {\n            \"name\": \"Tag\"\n          }\n        },\n        \"PetStatusEnum\": {\n          \"type\": \"string\",\n          \"description\": \"pet status in the store\",\n          \"enum\": [\n            \"available\",\n            \"pending\",\n            \"sold\"\n          ]\n        },\n        \"Pet\": {\n          \"required\": [\n            \"name\",\n            \"photoUrls\"\n          ],\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            },\n            \"category\": {\n              \"$ref\": \"#/components/schemas/Category\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"example\": \"doggie\"\n            },\n            \"photoUrls\": {\n              \"type\": \"array\",\n              \"xml\": {\n                \"name\": \"photoUrl\",\n                \"wrapped\": true\n              },\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"tags\": {\n              \"type\": \"array\",\n              \"xml\": {\n                \"name\": \"tag\",\n                \"wrapped\": true\n              },\n              \"items\": {\n                \"$ref\": \"#/components/schemas/Tag\"\n              }\n            },\n            \"status\": {\n              \"description\": \"pet status in the store\",\n              \"$ref\":\"#/components/schemas/PetStatusEnum\"\n            },\n            \"externalEnum\": {\n              \"description\": \"a enum field, that reference to another model\",\n              \"$ref\":\"schema_with_external_ref.json#/definitions/DemoEnum\"\n            }\n          },\n          \"xml\": {\n            \"name\": \"Pet\"\n          }\n        },\n        \"ApiResponse\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"code\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"type\": {\n              \"type\": \"string\"\n            },\n            \"message\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"securitySchemes\": {\n        \"petstore_auth\": {\n          \"type\": \"oauth2\",\n          \"flows\": {\n            \"implicit\": {\n              \"authorizationUrl\": \"http://petstore.swagger.io/oauth/dialog\",\n              \"scopes\": {\n                \"write:pets\": \"modify pets in your account\",\n                \"read:pets\": \"read your pets\"\n              }\n            }\n          }\n        },\n        \"api_key\": {\n          \"type\": \"apiKey\",\n          \"name\": \"api_key\",\n          \"in\": \"header\"\n        }\n      }\n    }\n  }"
		}
	},
	"Error": "parse: parse spec: paths: /pet/findByTags: get: operation \"findPetsByTags\": responses: 200: content: \"application/xml\": schema: parse schema: item: parse schema: reference \"#/components/schemas/Pet\": parse schema: externalEnum: parse schema: reference \"schema_with_external_ref.json#/definitions/DemoEnum\": resolve reference \"schema_with_external_ref.json#/definitions/DemoEnum\": invalid schema reference \"schema_with_external_ref.json#/definitions/DemoEnum\""
}