{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackrox/acs-fleet-manager"
		},
		"file": {
			"name": "fleet-manager-private-admin.yaml",
			"size": 0,
			"path": "openapi/fleet-manager-private-admin.yaml",
			"byteSize": 12302,
			"content": "openapi: 3.0.0\ninfo:\n  title: Red Hat Advanced Cluster Security Service Fleet Manager Admin API\n  description: Red Hat Advanced Cluster Security (RHACS) Service Fleet Manager Admin APIs that can be used by RHACS Managed Service Operations Team.\n  version: 0.0.3\nservers:\n  - url: https://api.openshift.com\n    description: Main (production) server\n  - url: https://api.stage.openshift.com\n    description: Staging server\n  - url: http://localhost:8000\n    description: localhost\n  - url: /\n    description: current domain\ntags:\n  - name: Admin APIs\n    description: \"\"\n\npaths:\n  '/api/rhacs/v1/admin/centrals':\n    post:\n      operationId: createCentral\n      description: |\n        Creates a new Central that is owned by the user and organisation authenticated for the request.\n        Each Central has a single owner organisation and a single owner user.\n        This API allows providing custom resource settings for the new Central instance.\n      parameters:\n        - in: query\n          name: async\n          description: Perform the action in an asynchronous manner\n          schema:\n            type: boolean\n          required: true\n      requestBody:\n        description: Central data\n        content:\n          application/json:\n            schema:\n              $ref: \"fleet-manager.yaml#/components/schemas/CentralRequestPayload\"\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"fleet-manager.yaml#/components/schemas/CentralRequest\"\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"fleet-manager.yaml#/components/schemas/Error\"\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"fleet-manager.yaml#/components/schemas/Error\"\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"fleet-manager.yaml#/components/schemas/Error\"\n          description: User forbidden either because the user is not authorized to access the service or because the maximum number of instances that can be created by this user has been reached.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"fleet-manager.yaml#/components/schemas/Error\"\n          description: The requested resource doesn't exist\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"fleet-manager.yaml#/components/schemas/Error\"\n          description: A conflict has been detected in the creation of this resource\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"fleet-manager.yaml#/components/schemas/Error\"\n          description: An unexpected error occurred while creating the Central request\n      security:\n        - Bearer: []\n      summary: Creates a Central request\n    get:\n      summary: Returns a list of Centrals\n      operationId: getCentrals\n      security:\n        - Bearer: []\n      responses:\n        \"200\":\n          description: Return a list of Central instances. This endpoint will return all Central instances that are stored in the database and the are not filtered based on user ids or org ids.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CentralList'\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n      parameters:\n        - $ref: 'fleet-manager.yaml#/components/parameters/page'\n        - $ref: 'fleet-manager.yaml#/components/parameters/size'\n        - $ref: 'fleet-manager.yaml#/components/parameters/orderBy'\n        - $ref: 'fleet-manager.yaml#/components/parameters/search'\n  '/api/rhacs/v1/admin/centrals/{id}':\n    get:\n      summary: Return the details of Central instance by ID\n      parameters:\n        - $ref: \"fleet-manager.yaml#/components/parameters/id\"\n      security:\n        - Bearer: []\n      operationId: getCentralById\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Central'\n          description: Central found by ID\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Central found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n    patch:\n      summary: Update a Central instance by ID\n      parameters:\n        - $ref: \"fleet-manager.yaml#/components/parameters/id\"\n      security:\n        - Bearer: []\n      operationId: updateCentralById\n      requestBody:\n        description: Central update data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CentralUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Central updated by ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Central'\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Central found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n    delete:\n      summary: Delete a Central by ID\n      parameters:\n        - $ref: \"fleet-manager.yaml#/components/parameters/id\"\n        - in: query\n          name: async\n          description: Perform the action in an asynchronous manner\n          schema:\n            type: boolean\n          required: true\n      security:\n        - Bearer: [ ]\n      operationId: deleteCentralById\n      responses:\n        \"200\":\n          description: Central updated by ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Central'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Central found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    Central:\n      allOf:\n        - $ref: 'fleet-manager.yaml#/components/schemas/ObjectReference'\n        - required:\n          - multi_az\n          - central_operator_upgrading\n          - central_upgrading\n        - type: object\n          properties:\n            status:\n              description: \"Values: [accepted, preparing, provisioning, ready, failed, deprovision, deleting] \"\n              type: string\n            cloud_provider:\n              description: \"Name of Cloud used to deploy. For example AWS\"\n              type: string\n            multi_az:\n              type: boolean\n            region:\n              description: \"Values will be regions of specific cloud provider. For example: us-east-1 for AWS\"\n              type: string\n            owner:\n              type: string\n            name:\n              type: string\n            host:\n              type: string\n            created_at:\n              format: date-time\n              type: string\n            updated_at:\n              format: date-time\n              type: string\n            failed_reason:\n              type: string\n            actual_central_version:\n              type: string\n            actual_central_operator_version:\n              type: string\n            desired_central_version:\n              type: string\n            desired_central_operator_version:\n              type: string\n            central_upgrading:\n              type: boolean\n            central_operator_upgrading:\n              type: boolean\n            organisation_id:\n              type: string\n            subscription_id:\n              type: string\n            owner_account_id:\n              type: string\n            account_number:\n              type: string\n            instance_type:\n              type: string\n            quota_type:\n              type: string\n            routes:\n              type: array\n              items:\n                type: object\n                properties:\n                  domain:\n                    type: string\n                  router:\n                    type: string\n            routes_created:\n              type: boolean\n            cluster_id:\n              type: string\n            namespace:\n              type: string\n            central:\n              $ref: \"#/components/schemas/CentralSpec\"\n            scanner:\n              $ref: \"#/components/schemas/ScannerSpec\"\n    CentralList:\n      allOf:\n        - $ref: \"fleet-manager.yaml#/components/schemas/List\"\n        - type: object\n          properties:\n            items:\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Central\"\n\n    CentralUpdateRequest:\n      type: object\n      properties:\n        # for now only support updating the following fields. May add more when use cases arise.\n        central_operator_version:\n          type: string\n        central_version:\n          type: string\n        central:\n          $ref: \"fleet-manager.yaml#/components/schemas/CentralSpec\"\n        scanner:\n          $ref: \"fleet-manager.yaml#/components/schemas/ScannerSpec\"\n\n  securitySchemes:\n    Bearer:\n      scheme: bearer\n      bearerFormat: JWT\n      type: http\n",
			"canonicalURL": "/github.com/stackrox/acs-fleet-manager@6d676ef432f1b4bc34418cfe3afa73d8b932a94b/-/blob/openapi/fleet-manager-private-admin.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackrox/acs-fleet-manager/blob/6d676ef432f1b4bc34418cfe3afa73d8b932a94b/openapi/fleet-manager-private-admin.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Central\": parse schema: parse schema: at 1:55: external \"fleet-manager.yaml\": get: file: local file reference is not allowed"
}