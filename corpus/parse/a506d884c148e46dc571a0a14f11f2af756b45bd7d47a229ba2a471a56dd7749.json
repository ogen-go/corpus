{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager"
		},
		"file": {
			"name": "connector_mgmt-private.yaml",
			"size": 0,
			"path": "openapi/connector_mgmt-private.yaml",
			"byteSize": 21843,
			"content": "openapi: 3.0.0 # need this as first line to allow some IDEs to know this is an openapi document.\n# Warning: This file should only be used if the endpoints are not yet ready to be public, or not suitable for public consumption (like the data plane endpoints).\n# In most cases, you shouldn't need to add the endpoints here.\n# Only add endpoints here when it is an explicit requirement, or if you know what you are doing.\n# There should be no duplicated endpoints or schemas in these 2 files. They should only defined in one of them.\ninfo:\n  title: Connector Service Fleet Manager Private APIs\n  version: 0.0.3\n  description: Connector Service Fleet Manager apis that are used by internal services.\nservers:\n  - url: https://api.openshift.com\n    description: Main (production) server\n  - url: https://api.stage.openshift.com\n    description: Staging server\n  - url: http://localhost:8000\n    description: localhost\n  - url: /\n    description: current domain\ntags:\n  - name: Connector Clusters Agent\n    description: \"only accessible by connector fleet shard agents\"\n\npaths:\n  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/status':\n    parameters:\n      - name: connector_cluster_id\n        description: The id of the connector cluster\n        schema:\n          type: string\n        in: path\n        required: true\n    put:\n      tags:\n        - Connector Clusters Agent\n      security:\n        - Bearer: [ ]\n      operationId: updateKafkaConnectorClusterStatus\n      summary: Update the status of a connector cluster\n      description: Update the status of a connector cluster\n      requestBody:\n        description: Cluster status update data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorClusterStatus'\n        required: true\n      responses:\n        '200':\n          description: Cluster status is updated\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                400InvalidIdExample:\n                  $ref: '#/components/examples/400InvalidIdExample'\n          description: id value is not valid\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                404Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/404Example'\n          # This is deliberate to hide the endpoints for unauthorised users\n          description: Auth token is not valid.\n\n  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments':\n    parameters:\n      - name: connector_cluster_id\n        description: The id of the connector cluster\n        schema:\n          type: string\n        in: path\n        required: true\n    get:\n      tags:\n        - Connector Clusters Agent\n      security:\n        - Bearer: [ ]\n      operationId: getClusterAsignedConnectorDeployments\n      summary: Returns a list of connector deployments assigned to the cluster.\n      description: Returns a list of connector deployments assigned to the cluster.\n      parameters:\n        - $ref: 'connector_mgmt.yaml#/components/parameters/page'\n        - $ref: 'connector_mgmt.yaml#/components/parameters/size'\n        - in: query\n          name: gt_version\n          description: filters the connectors to those with a version greater than the given value\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: watch\n          description: watch for changes to the resources and return them as a stream of watch events. Specify gt_version to specify the starting point.\n          schema:\n            type: string\n\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorDeploymentList'\n            application/json;stream=watch:\n              schema:\n                $ref: '#/components/schemas/ConnectorDeploymentWatchEvent'\n          description: A list of connector\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                401Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/401Example'\n          description: Auth token is invalid\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                500Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/500Example'\n          description: Unexpected error occurred\n\n  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}':\n    parameters:\n      - name: connector_cluster_id\n        description: The id of the connector cluster\n        schema:\n          type: string\n        in: path\n        required: true\n      - name: deployment_id\n        description: The id of the deployment\n        schema:\n          type: string\n        in: path\n        required: true\n    get:\n      tags:\n        - Connector Clusters Agent\n      security:\n        - Bearer: [ ]\n      operationId: getClusterAsignedConnectorDeploymentById\n      summary: Returns a list of connector deployments assigned to the cluster.\n      description: Returns a list of connector deployments assigned to the cluster.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorDeployment'\n          description: A connector deployment\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                401Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/401Example'\n          description: Auth token is invalid\n        '410':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n          description: deployment has been deleted\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                500Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/500Example'\n          description: Unexpected error occurred\n\n  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/deployments/{deployment_id}/status':\n    parameters:\n      - name: connector_cluster_id\n        description: The id of the connector cluster\n        schema:\n          type: string\n        in: path\n        required: true\n      - name: deployment_id\n        description: The id of the deployment\n        schema:\n          type: string\n        in: path\n        required: true\n    put:\n      tags:\n        - Connector Clusters Agent\n      operationId: updateConnectorDeploymentStatus\n      summary: update the connector deployment status\n      description: update the connector deployment status\n      security:\n        - Bearer: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorDeploymentStatus'\n        required: true\n      responses:\n        '200':\n          description: Cluster status is updated\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                400InvalidIdExample:\n                  $ref: '#/components/examples/400InvalidIdExample'\n          description: id value is not valid\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                404Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/404Example'\n          # This is deliberate to hide the endpoints for unauthorised users\n          description: Auth token is not valid.\n        '410':\n          description: deployment has been deleted\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n\n  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces':\n    parameters:\n      - name: connector_cluster_id\n        description: The id of the connector cluster\n        schema:\n          type: string\n        in: path\n        required: true\n      - $ref: 'connector_mgmt.yaml#/components/parameters/page'\n      - $ref: 'connector_mgmt.yaml#/components/parameters/size'\n      - in: query\n        name: gt_version\n        description: filters the connectors to those with a version greater than the given value\n        schema:\n          type: integer\n          format: int64\n    get:\n      tags:\n        - Connector Clusters Agent\n      security:\n        - Bearer: [ ]\n      operationId: getClusterAsignedConnectorNamespaces\n      summary: Returns all connector namespaces assigned to the cluster.\n      description: Returns all connector namespaces assigned to the cluster.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorNamespaceDeploymentList'\n          description: All connector namespaces in cluster\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                401Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/401Example'\n          description: Auth token is invalid\n        '410':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n          description: cluster has been deleted\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                500Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/500Example'\n          description: Unexpected error occurred\n\n  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces/{namespace_id}':\n    parameters:\n      - name: connector_cluster_id\n        description: The id of the connector cluster\n        schema:\n          type: string\n        in: path\n        required: true\n      - name: namespace_id\n        description: The id of the namespace\n        schema:\n          type: string\n        in: path\n        required: true\n    get:\n      tags:\n        - Connector Clusters Agent\n      security:\n        - Bearer: [ ]\n      operationId: getClusterAsignedConnectorNamespaceById\n      summary: Returns a connector namespace assigned to the cluster.\n      description: Returns a connector namespace assigned to the cluster.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorNamespaceDeployment'\n          description: A connector namespace\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                401Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/401Example'\n          description: Auth token is invalid\n        '410':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n          description: namespace has been deleted\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                500Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/500Example'\n          description: Unexpected error occurred\n\n  '/api/connector_mgmt/v1/agent/kafka_connector_clusters/{connector_cluster_id}/namespaces/{namespace_id}/status':\n    parameters:\n      - name: connector_cluster_id\n        description: The id of the connector cluster\n        schema:\n          type: string\n        in: path\n        required: true\n      - name: namespace_id\n        description: The id of the namespace\n        schema:\n          type: string\n        in: path\n        required: true\n    put:\n      tags:\n        - Connector Clusters Agent\n      operationId: updateConnectorNamespaceStatus\n      summary: update the connector namespace status\n      description: update the connector namespace status\n      security:\n        - Bearer: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorNamespaceDeploymentStatus'\n        required: true\n      responses:\n        '200':\n          description: Cluster status is updated\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                400InvalidIdExample:\n                  $ref: '#/components/examples/400InvalidIdExample'\n          description: id value is not valid\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n              examples:\n                404Example:\n                  $ref: 'connector_mgmt.yaml#/components/examples/404Example'\n          # This is deliberate to hide the endpoints for unauthorised users\n          description: Auth token is not valid.\n        '410':\n          description: namespace has been deleted\n          content:\n            application/json:\n              schema:\n                $ref: 'connector_mgmt.yaml#/components/schemas/Error'\n\ncomponents:\n  schemas:\n\n    MetaV1Condition:\n      type: object\n      properties:\n        type:\n          type: string\n        reason:\n          type: string\n        message:\n          type: string\n        status:\n          type: string\n        last_transition_time:\n          type: string\n          #format: date-time # enable this?? or just set it as pure plain string?\n\n    WatchEvent:\n      required:\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n        error:\n          $ref: \"connector_mgmt.yaml#/components/schemas/Error\"\n          nullable: true\n        object:\n          type: object\n          nullable: true\n\n    ConnectorDeployment:\n      description: Holds the deployment configuration of a connector\n      allOf:\n        - $ref: 'connector_mgmt.yaml#/components/schemas/ObjectReference'\n        - type: object\n          properties:\n            metadata:\n              type: object\n              required:\n                - created_at\n                - updated_at\n                - resource_version\n                - resolved_secrets\n              properties:\n                created_at:\n                  format: date-time\n                  type: string\n                updated_at:\n                  format: date-time\n                  type: string\n                resource_version:\n                  type: integer\n                  format: int64\n                resolved_secrets:\n                  type: boolean\n            spec:\n              $ref: '#/components/schemas/ConnectorDeploymentSpec'\n            status:\n              $ref: '#/components/schemas/ConnectorDeploymentStatus'\n\n    ConnectorDeploymentSpec:\n      description: Holds the deployment specification of a connector\n      type: object\n      properties:\n        service_account:\n          $ref: 'connector_mgmt.yaml#/components/schemas/ServiceAccount'\n        kafka:\n          $ref: 'connector_mgmt.yaml#/components/schemas/KafkaConnectionSettings'\n        schema_registry:\n          $ref: \"connector_mgmt.yaml#/components/schemas/SchemaRegistryConnectionSettings\"\n        connector_id:\n          type: string\n        connector_resource_version:\n          type: integer\n          format: int64\n        connector_type_id:\n          type: string\n        namespace_id:\n          type: string\n        connector_spec:\n          type: object\n        operator_id:\n          description: an optional operator id that the connector should be run under.\n          type: string\n        desired_state:\n          $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorDesiredState'\n        shard_metadata:\n          type: object\n\n    ConnectorDeploymentStatus:\n      description: The status of connector deployment\n      type: object\n      properties:\n        phase:\n          $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorState'\n        resource_version:\n          type: integer\n          format: int64\n        operators:\n          type: object\n          properties:\n            assigned:\n              $ref: '#/components/schemas/ConnectorOperator'\n            available:\n              $ref: '#/components/schemas/ConnectorOperator'\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetaV1Condition'\n\n    ConnectorDeploymentList:\n      allOf:\n        - $ref: 'connector_mgmt.yaml#/components/schemas/List'\n        - type: object\n          properties:\n            items:\n              type: array\n              items:\n                allOf:\n                  - $ref: '#/components/schemas/ConnectorDeployment'\n\n    ConnectorDeploymentWatchEvent:\n      allOf:\n        - $ref: '#/components/schemas/WatchEvent'\n        - type: object\n          properties:\n            object:\n              $ref: '#/components/schemas/ConnectorDeployment'\n\n    ConnectorOperator:\n      description: identifies an operator that runs on the fleet shards used to manage connectors.\n      properties:\n        id:\n          description: the id of the operator\n          type: string\n        type:\n          description: the type of the operator\n          type: string\n        version:\n          description: the version of the operator\n          type: string\n\n    ConnectorClusterStatus:\n      description: \"Schema for the request to update a data plane cluster's status\"\n      type: object\n      properties:\n        phase:\n          $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorClusterState'\n        version:\n          type: string\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetaV1Condition'\n        operators:\n          description: the list of installed operators\n          type: array\n          items:\n            type: object\n            properties:\n              operator:\n                $ref: '#/components/schemas/ConnectorOperator'\n              namespace:\n                description: the namespace to which the operator has been installed\n                type: string\n              status:\n                description: the status of the operator\n                type: string\n        namespaces:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConnectorNamespaceDeploymentStatus'\n\n    #\n    # Namespace\n    #\n\n    ConnectorNamespaceDeploymentList:\n      allOf:\n        - $ref: \"#/components/schemas/List\"\n        - type: object\n          properties:\n            items:\n              type: array\n              items:\n                $ref: \"#/components/schemas/ConnectorNamespaceDeployment\"\n\n    ConnectorNamespaceDeployment:\n      description: A connector namespace deployment\n      allOf:\n        - $ref: \"connector_mgmt.yaml#/components/schemas/ObjectReference\"\n        - $ref: \"connector_mgmt.yaml#/components/schemas/ConnectorNamespaceMeta\"\n        - type: object\n          properties:\n            name:\n              type: string\n            cluster_id:\n              type: string\n            expiration:\n              description: Namespace expiration timestamp in RFC 3339 format\n              #format: date-time\n              type: string\n            tenant:\n              $ref: \"connector_mgmt.yaml#/components/schemas/ConnectorNamespaceTenant\"\n            status:\n              $ref: \"connector_mgmt.yaml#/components/schemas/ConnectorNamespaceStatus\"\n          required:\n            - id\n            - name\n            - resource_version\n            - cluster_id\n            - tenant\n            - status\n\n    ConnectorNamespaceDeploymentStatus:\n      description: \"Schema for the request to update a data plane namespaces' status\"\n      type: object\n      required:\n        - id\n        - phase\n        - version\n        - connectors_deployed\n      properties:\n        id:\n          type: string\n        phase:\n          $ref: 'connector_mgmt.yaml#/components/schemas/ConnectorNamespaceState'\n        version:\n          type: string\n        connectors_deployed:\n          type: integer\n          format: int32\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetaV1Condition'\n\n  securitySchemes:\n    Bearer:\n      scheme: bearer\n      bearerFormat: JWT\n      type: http\n\n  examples:\n    400InvalidIdExample:\n      value:\n        id: \"21\"\n        kind: \"Error\"\n        href: \"/api/kafkas_mgmt/v1/errors/21\"\n        code: \"KAFKAS-MGMT-21\"\n        reason: \"Bad request\"\n        operation_id: \"1lWDGuybIrEnxrAem724gqkkiDv\"",
			"canonicalURL": "/github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager@15a8d9112fe3a44d30af99e00b4e747ef3794fb7/-/blob/openapi/connector_mgmt-private.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager/blob/15a8d9112fe3a44d30af99e00b4e747ef3794fb7/openapi/connector_mgmt-private.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ConnectorDeploymentList\": parse schema: parse schema: at 1:1709: external \"connector_mgmt.yaml\": get: file: local file reference is not allowed"
}