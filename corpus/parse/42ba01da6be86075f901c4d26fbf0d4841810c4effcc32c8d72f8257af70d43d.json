{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/BellevueCollege/data-api"
		},
		"file": {
			"name": "api-docs.json",
			"size": 0,
			"path": "storage/api-docs/api-docs.json",
			"byteSize": 24495,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Bellevue College Data API\",\n        \"description\": \"The Bellevue College Data API is used to serve and collect BC data.\",\n        \"contact\": {\n            \"email\": \"admin@admin.com\"\n        },\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"version\": \"1.6\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"http://data-api.test\",\n            \"description\": \"Primary API Server\"\n        },\n        {\n            \"url\": \"no.data-api.test\",\n            \"description\": \"Private API Server\"\n        }\n    ],\n    \"paths\": {\n        \"/api/v1/internal\": {\n            \"servers\": [\n                {\n                    \"url\": \"no.data-api.test\",\n                    \"description\": \"Private API Server\"\n                }\n            ]\n        },\n        \"/api/v1/auth/login\": {\n            \"post\": {\n                \"summary\": \"Get JWT auth token\",\n                \"description\": \"Get JSON Web Token for Authentication\",\n                \"operationId\": \"login\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"properties\": {\n                                    \"clientid\": {\n                                        \"description\": \"Get a JWT via given credentials.\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"clientkey\": {\n                                        \"description\": \"Get a JWT via given credentials.\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"access_token\": {\n                                            \"description\": \"JWT Access Token\",\n                                            \"type\": \"string\"\n                                        },\n                                        \"token_type\": {\n                                            \"description\": \"Token Type- always 'bearer'\",\n                                            \"type\": \"string\"\n                                        },\n                                        \"expires_in\": {\n                                            \"description\": \"Token expiration time in seconds\",\n                                            \"type\": \"integer\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/internal/employee/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Employees\",\n                    \"Internal\"\n                ],\n                \"summary\": \"Get employee information\",\n                \"description\": \"Returns employee data\",\n                \"operationId\": \"getEmployeeByUsername\",\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Employee Username\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Employee\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthenticated\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"jwtAuth\": [\n                            \"read:true\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/api/v1/directory/employee/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Employees\",\n                    \"Directory\"\n                ],\n                \"summary\": \"Get employee directory information\",\n                \"description\": \"Returns employee directory data\",\n                \"operationId\": \"getDirectoryEmployeeByUsername\",\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Employee Username\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"object\",\n                                            \"$ref\": \"#/components/schemas/DirectoryEmployee\"\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthenticated\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"jwtAuth\": [\n                            \"read:true\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/api/v1/directory/employees\": {\n            \"get\": {\n                \"tags\": [\n                    \"Employees\",\n                    \"Directory\"\n                ],\n                \"summary\": \"Get directory employee usernames\",\n                \"description\": \"Returns a list of usernames of employees in the directory\",\n                \"operationId\": \"getDirectoryEmployees\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"properties\": {\n                                        \"employees\": {\n                                            \"description\": \"List of employees\",\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"properties\": {\n                                                    \"username\": {\n                                                        \"description\": \"Employee username\",\n                                                        \"type\": \"string\"\n                                                    }\n                                                },\n                                                \"type\": \"object\"\n                                            }\n                                        }\n                                    },\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthenticated\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"jwtAuth\": [\n                            \"read:true\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/api/v1/forms/evaluations/graduation-application\": {\n            \"post\": {\n                \"summary\": \"Graduation Application Data\",\n                \"operationId\": \"App\\\\Http\\\\Controllers\\\\Forms\\\\GraduationApplicationController::post\",\n                \"parameters\": [\n                    {\n                        \"name\": \"sid\",\n                        \"in\": \"query\",\n                        \"description\": \"Student ID Number\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"email\",\n                        \"in\": \"query\",\n                        \"description\": \"Email Address\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"received\",\n                        \"in\": \"query\",\n                        \"description\": \"Received Date\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"date\"\n                        }\n                    },\n                    {\n                        \"name\": \"quarter\",\n                        \"in\": \"query\",\n                        \"description\": \"Quarter Code (B901)\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"program\",\n                        \"in\": \"query\",\n                        \"description\": \"Program name with pipe-separated program code (Program Name | 5AA)\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"program_code\",\n                        \"in\": \"query\",\n                        \"description\": \"Program code only (5AA)\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"concentration\",\n                        \"in\": \"query\",\n                        \"description\": \"Concentration (not used, but will write to DB)\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"diploma_name\",\n                        \"in\": \"query\",\n                        \"description\": \"Student's name as printed on diploma\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"requirements_year\",\n                        \"in\": \"query\",\n                        \"description\": \"Requirements year (2019-2020)\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"entry_id\",\n                        \"in\": \"query\",\n                        \"description\": \"Entry ID from source system\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"is_update\",\n                        \"in\": \"query\",\n                        \"description\": \"Is this an update of an existing record? (Still records as a new record)\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Bad request\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"basicAuth\": [\n                            \"write:true\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/api/v1/forms/evaluations/transfer-credit-evaluation\": {\n            \"post\": {\n                \"summary\": \"Transfer Credit Evaluation Data\",\n                \"operationId\": \"App\\\\Http\\\\Controllers\\\\Forms\\\\TransferCreditEvaluationController::post\",\n                \"parameters\": [\n                    {\n                        \"name\": \"sid\",\n                        \"in\": \"query\",\n                        \"description\": \"Student ID Number\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"email\",\n                        \"in\": \"query\",\n                        \"description\": \"Email Address\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"received\",\n                        \"in\": \"query\",\n                        \"description\": \"Received Date\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"program\",\n                        \"in\": \"query\",\n                        \"description\": \"Program name with pipe-separated program code (Program Name | 5AA)\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"program_code\",\n                        \"in\": \"query\",\n                        \"description\": \"Program code only (5AA)\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"military\",\n                        \"in\": \"query\",\n                        \"description\": \"Student military designation\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"name\": \"international_transcript\",\n                        \"in\": \"query\",\n                        \"description\": \"Student has an international transcript\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"name\": \"entry_id\",\n                        \"in\": \"query\",\n                        \"description\": \"Entry ID from source system\",\n                        \"required\": false,\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Bad request\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"basicAuth\": [\n                            \"write:true\"\n                        ]\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"DirectoryEmployee\": {\n                \"title\": \"Directory Employee\",\n                \"description\": \"Employee Directory information\",\n                \"properties\": {\n                    \"firstName\": {\n                        \"title\": \"First Name\",\n                        \"description\": \"Employee first name\",\n                        \"type\": \"string\",\n                        \"example\": \"Joanne\"\n                    },\n                    \"lastName\": {\n                        \"title\": \"Last Name\",\n                        \"description\": \"Employee last name\",\n                        \"type\": \"string\",\n                        \"example\": \"Doe\"\n                    },\n                    \"aliasName\": {\n                        \"title\": \"Alias Name\",\n                        \"description\": \"Preferred first name\",\n                        \"type\": \"string\",\n                        \"example\": \"Jo\"\n                    },\n                    \"displayName\": {\n                        \"title\": \"Display Name\",\n                        \"description\": \"Display name, using AKA as first name\",\n                        \"type\": \"string\",\n                        \"example\": \"Jo Doe\"\n                    },\n                    \"title\": {\n                        \"title\": \"Title\",\n                        \"description\": \"Job title- prefers acting title\",\n                        \"type\": \"string\",\n                        \"example\": \"Manager\"\n                    },\n                    \"department\": {\n                        \"title\": \"Department\",\n                        \"description\": \"Name of department to which employee reports\",\n                        \"type\": \"string\",\n                        \"example\": \"English Department\"\n                    },\n                    \"email\": {\n                        \"title\": \"Email\",\n                        \"description\": \"Employee email address\",\n                        \"type\": \"string\",\n                        \"example\": \"j.doe@bellevuecollege.edu\"\n                    },\n                    \"phone\": {\n                        \"title\": \"Phone\",\n                        \"description\": \"Phone number without separators\",\n                        \"type\": \"string\",\n                        \"example\": \"4255641000\"\n                    },\n                    \"displayPhone\": {\n                        \"title\": \"Display Phone\",\n                        \"description\": \"Phone number with separators\",\n                        \"type\": \"string\",\n                        \"example\": \"425.564.1000\"\n                    },\n                    \"office\": {\n                        \"title\": \"Office\",\n                        \"description\": \"Office Number\",\n                        \"type\": \"string\",\n                        \"example\": \"U101A\"\n                    },\n                    \"mailstop\": {\n                        \"title\": \"mailstop\",\n                        \"description\": \"Mailing office\",\n                        \"type\": \"string\",\n                        \"example\": \"U100\"\n                    }\n                },\n                \"type\": \"object\",\n                \"xml\": {\n                    \"name\": \"DirectoryEmployee\"\n                }\n            },\n            \"Employee\": {\n                \"title\": \"Employee\",\n                \"description\": \"Employee information\",\n                \"properties\": {\n                    \"SID\": {\n                        \"title\": \"SID\",\n                        \"description\": \"Employee ID\",\n                        \"type\": \"integer\",\n                        \"example\": \"950000000\"\n                    },\n                    \"firstName\": {\n                        \"title\": \"First Name\",\n                        \"description\": \"Employee first name\",\n                        \"type\": \"string\",\n                        \"example\": \"Joanne\"\n                    },\n                    \"lastName\": {\n                        \"title\": \"Last Name\",\n                        \"description\": \"Employee last name\",\n                        \"type\": \"string\",\n                        \"example\": \"Doe\"\n                    },\n                    \"aliasName\": {\n                        \"title\": \"Alias Name\",\n                        \"description\": \"Preferred first name\",\n                        \"type\": \"string\",\n                        \"example\": \"Jo\"\n                    },\n                    \"email\": {\n                        \"title\": \"Email\",\n                        \"description\": \"Employee email address\",\n                        \"type\": \"string\",\n                        \"example\": \"j.doe@bellevuecollege.edu\"\n                    },\n                    \"phone\": {\n                        \"title\": \"Phone\",\n                        \"description\": \"Phone number without separators\",\n                        \"type\": \"string\",\n                        \"example\": \"4255641000\"\n                    },\n                    \"username\": {\n                        \"title\": \"Username\",\n                        \"description\": \"Employee username\",\n                        \"type\": \"string\",\n                        \"example\": \"j.doe\"\n                    }\n                },\n                \"type\": \"object\",\n                \"xml\": {\n                    \"name\": \"Employee\"\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"jwtAuth\": {\n                \"type\": \"http\",\n                \"in\": \"header\",\n                \"bearerFormat\": \"JWT\",\n                \"scheme\": \"bearer\"\n            },\n            \"basicAuth\": {\n                \"type\": \"http\",\n                \"in\": \"header\",\n                \"scheme\": \"basic\"\n            }\n        }\n    },\n    \"tags\": [\n        {\n            \"name\": \"Employees\",\n            \"description\": \"API Endpoints for Employee Data\"\n        },\n        {\n            \"name\": \"Directory\",\n            \"description\": \"API Endpoints for Employee Directory Data\"\n        },\n        {\n            \"name\": \"Internal\",\n            \"description\": \"API Endpoints available on the internal domain\"\n        }\n    ]\n}",
			"canonicalURL": "/github.com/BellevueCollege/data-api@ab779e8c0ad30943c736cea91c4e055dc55812e5/-/blob/storage/api-docs/api-docs.json",
			"externalURLs": [
				{
					"url": "https://github.com/BellevueCollege/data-api/blob/ab779e8c0ad30943c736cea91c4e055dc55812e5/storage/api-docs/api-docs.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/v1/directory/employee/{username}\": get: operation \"getDirectoryEmployeeByUsername\": security: at 186:29: list of scopes MUST be empty for \"type\" \"http\""
}