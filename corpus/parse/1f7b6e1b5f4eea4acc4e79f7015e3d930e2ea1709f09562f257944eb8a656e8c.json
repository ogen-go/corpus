{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tnyim/jungletv"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "server/components/chatmanager/tenorclient/openapi.yaml",
			"byteSize": 12004,
			"content": "openapi: \"3.0.1\"\ninfo:\n  description: API client for https://tenor.com/gifapi/\n  version: \"0.2\"\n  title: Tenor GifAPI Client\n\nservers:\n- url: https://g.tenor.com\n  description: g.tenor.com\n\npaths:\n  /v1/search:\n    get:\n      operationId: search\n      description: \u003e\n        Get a json object containing a list of the most relevant GIFs for a given search term(s), category(ies),\n        emoji(s), or any combination thereof.\n      parameters:\n      - $ref: '#/components/parameters/q'\n      - $ref: '#/components/parameters/key'\n      - $ref: '#/components/parameters/locale'\n      - $ref: '#/components/parameters/contentfilter'\n      - $ref: '#/components/parameters/media_filter'\n      - $ref: '#/components/parameters/ar_range'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/pos'\n      - $ref: '#/components/parameters/anon_id'\n      responses:\n        200:\n          description: search results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResult'\n\n  /v1/random:\n    get:\n      operationId: random\n      description: \u003e\n        Get a randomized list of GIFs for a given search term. This differs from the search endpoint which returns\n        a rank ordered list of GIFs for a given search term.\n      parameters:\n      - $ref: '#/components/parameters/q'\n      - $ref: '#/components/parameters/key'\n      - $ref: '#/components/parameters/locale'\n      - $ref: '#/components/parameters/contentfilter'\n      - $ref: '#/components/parameters/media_filter'\n      - $ref: '#/components/parameters/ar_range'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/pos'\n      - $ref: '#/components/parameters/anon_id'\n      responses:\n        200:\n          description: search results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResult'\n\n  /v1/autocomplete:\n    get:\n      operationId: autocomplete\n      description: \u003e\n        Get a json object containing a list of completed search terms given a partial search term. The list is sorted by\n        Tenor's AI and the number of results will decrease as Tenor's AI becomes more certain.\n      parameters:\n      - $ref: '#/components/parameters/q'\n      - $ref: '#/components/parameters/key'\n      - $ref: '#/components/parameters/locale'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/anon_id'\n      responses:\n        200:\n          description: autocomplete results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AutocompleteResult'\n\n  /v1/categories:\n    get:\n      operationId: categories\n      description: \u003e\n        Get a json object containing a list of GIF categories associated with the provided type. Each category will\n        include a corresponding search URL to be used if the user clicks on the category. The search URL will include\n        the apikey, anonymous id, and locale that were used on the original call to the categories endpoint.\n      parameters:\n      - $ref: '#/components/parameters/key'\n      - $ref: '#/components/parameters/locale'\n      - $ref: '#/components/parameters/type'\n      - $ref: '#/components/parameters/contentfilter'\n      - $ref: '#/components/parameters/anon_id'\n      responses:\n        200:\n          description: categories results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoriesResult'\n\n  /v1/register:\n    get:\n      operationId: register\n      description: Register a user's sharing of a GIF.\n      parameters:\n      - $ref: '#/components/parameters/key'\n      - $ref: '#/components/parameters/id'\n      - $ref: '#/components/parameters/locale'\n      - $ref: '#/components/parameters/q'\n      - $ref: '#/components/parameters/anon_id'\n      responses:\n        200:\n          description: registration result\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterResult'\n\n  /v1/gifs:\n    get:\n      operationId: gifs\n      description: Get the GIF(s) for the corresponding id(s)\n      parameters:\n      - $ref: '#/components/parameters/ids'\n      - $ref: '#/components/parameters/key'\n      - $ref: '#/components/parameters/media_filter'\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/pos'\n      - $ref: '#/components/parameters/anon_id'\n      responses:\n        200:\n          description: search results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResult'\n\ncomponents:\n  parameters:\n    key:\n      name: key\n      required: true\n      description: client key for privileged API access\n      in: query\n      schema:\n        type: string\n    q:\n      name: q\n      required: true\n      description: a search string\n      in: query\n      schema:\n        type: string\n    locale:\n      name: locale\n      description: \u003e\n        specify default language to interpret search string; xx is ISO 639-1 language code, _YY (optional) is\n        2-letter ISO 3166-1 country code\n      in: query\n      schema:\n        type: string\n    type:\n      name: type\n      description: |\n        (values: featured | emoji | trending ) determines the type of categories returned\n      in: query\n      schema:\n        type: string\n        enum:\n        - featured\n        - emoji\n        - trending\n    contentfilter:\n      name: contentfilter\n      description: |\n        (values: off | low | medium | high) specify the content safety filter level\n      in: query\n      schema:\n        type: string\n        enum:\n        - off\n        - low\n        - medium\n        - high\n    media_filter:\n      name: media_filter\n      description: |\n        (values: basic | minimal) Reduce the Number of GIF formats returned in the GIF_OBJECT list.\n\n        minimal - tinygif, gif, and mp4.\n\n        basic - nanomp4, tinygif, tinymp4, gif, mp4, and nanogif\n      in: query\n      schema:\n        type: string\n        enum:\n        - basic\n        - minimal\n    ar_range:\n      name: ar_range\n      description: |\n        (values: all | wide | standard ) Filter the response GIF_OBJECT list to only include GIFs with aspect ratios that fit with in the selected range.\n\n        all - no constraints\n\n        wide - 0.42 \u003c= aspect ratio \u003c= 2.36\n\n        standard - .56 \u003c= aspect ratio \u003c= 1.78\n      in: query\n      schema:\n        type: string\n        enum:\n        - all\n        - wide\n        - standard\n    limit:\n      name: limit\n      description: \u003e\n        fetch up to a specified number of results (max: 50).\n      in: query\n      schema:\n        type: integer\n    pos:\n      name: pos\n      description: \u003e\n        get results starting at position \"value\". Use a non-zero \"next\" value returned by API results to get the next\n        set of results. pos is not an index and may be an integer, float, or string\n      in: query\n      schema:\n        type: string\n    anon_id:\n      name: anon_id\n      description: specify the anonymous_id tied to the given user\n      in: query\n      schema:\n        type: string\n    id:\n      name: id\n      description: the id of a GifObject\n      in: query\n      schema:\n        type: string\n    ids:\n      name: ids\n      description: \u003e\n        a comma separated list of GIF IDs (max: 50)\n      in: query\n      schema:\n        type: string\n\n  schemas:\n    Next:\n      type: string\n      description: \u003e\n        a position identifier to use with the next API query to retrieve the next set of results, or null if there are\n        no further results.\n    GifObject:\n      type: object\n      required:\n      - created\n      - hasaudio\n      - id\n      - media\n      - tags\n      - title\n      - content_description\n      properties:\n        created:\n          type: number\n          description: a unix timestamp representing when this post was created.\n        hasaudio:\n          type: boolean\n          description: \u003e\n            true if this post contains audio (only video formats support audio, the gif image file format can not\n            contain audio information).\n        id:\n          type: string\n          description: Tenor result identifier\n        media:\n          type: array\n          description: An array of dictionaries with GIF_FORMAT as the key and MEDIA_OBJECT as the value\n          items:\n            $ref: '#/components/schemas/Media'\n        tags:\n          type: array\n          description: an array of tags for the post\n          items:\n            type: string\n        title:\n          type: string\n        content_description:\n          type: string\n\n    Media:\n      type: object\n      properties:\n        gif:\n          $ref: '#/components/schemas/MediaObject'\n        mediumgif:\n          $ref: '#/components/schemas/MediaObject'\n        tinygif:\n          $ref: '#/components/schemas/MediaObject'\n        nanogif:\n          $ref: '#/components/schemas/MediaObject'\n        mp4:\n          $ref: '#/components/schemas/MediaObject'\n        loopedmp4:\n          $ref: '#/components/schemas/MediaObject'\n        tinymp4:\n          $ref: '#/components/schemas/MediaObject'\n        nanomp4:\n          $ref: '#/components/schemas/MediaObject'\n        webm:\n          $ref: '#/components/schemas/MediaObject'\n        tinywebm:\n          $ref: '#/components/schemas/MediaObject'\n        nanowebm:\n          $ref: '#/components/schemas/MediaObject'\n\n    MediaObject:\n      type: object\n      required:\n      - preview\n      - url\n      - dims\n      - size\n      properties:\n        preview:\n          type: string\n          description: a url to a preview image of the media source\n        url:\n          type: string\n          description: a url to the media source\n        dims:\n          type: array\n          description: width and height in pixels\n          items:\n            type: integer\n        size:\n          type: integer\n          description: size of file in bytes\n\n    CategoryObject:\n      type: object\n      required:\n      - searchterm\n      - path\n      - image\n      - name\n      properties:\n        searchterm:\n          type: string\n          description: the English search term that corresponds to the category\n        path:\n          type: string\n          description: the search url to request if the user selects the category\n        image:\n          type: string\n          description: a url to the media source for the category's example GIF\n        name:\n          type: string\n          description: \u003e\n            Category name to overlay over the image. The name will be translated to match the locale of the\n            corresponding request\n\n    SearchResult:\n      type: object\n      required:\n      - next\n      - results\n      properties:\n        next:\n          $ref: '#/components/schemas/Next'\n        results:\n          description: \u003e\n            an array of GifObjects containing the most relevant GIFs for the requested search term -\n            Sorted by relevancy Rank\n          type: array\n          items:\n            $ref: '#/components/schemas/GifObject'\n\n    AutocompleteResult:\n      type: object\n      required:\n      - results\n      properties:\n        results:\n          description: An array of suggested search terms.\n          type: array\n          items:\n            type: string\n\n    CategoriesResult:\n      type: object\n      required:\n      - tags\n      properties:\n        tags:\n          description: \u003e\n            an array of CategoryObjects where the “name” field has been translated to the passed in locale language.\n          type: array\n          items:\n            $ref: '#/components/schemas/CategoryObject'\n\n    RegisterResult:\n      type: object\n      required:\n      - status\n      properties:\n        status:\n          description: set to \"ok\" if share registration was successful\n          type: string",
			"canonicalURL": "/github.com/tnyim/jungletv@f5f8ccc326a179852f632d220295397a4f3025e7/-/blob/server/components/chatmanager/tenorclient/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tnyim/jungletv/blob/f5f8ccc326a179852f632d220295397a4f3025e7/server/components/chatmanager/tenorclient/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"contentfilter\": schema: at 1:712: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}