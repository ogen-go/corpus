{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rarible/ethereum-openapi"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "protocol-api-nft/openapi.yaml",
			"byteSize": 30301,
			"content": "openapi: 3.0.3\ninfo:\n  title: OpenAPI definition\n  version: v0.1\n\npaths:\n\n  ###################### Transactions ######################\n\n  \"/v0.1/transactions\":\n    post:\n      tags:\n        - nft-transaction-controller\n      description: Create pending transaction for NFT\n      operationId: createNftPendingTransaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTransactionRequest\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/LogEvent\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ###################### Lazy Mint ######################\n\n  \"/v0.1/mints\":\n    post:\n      tags:\n        - nft-lazy-mint-controller\n      description: Lazy mint of NFT\n      operationId: mintNftAsset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LazyNft\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftItem\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ###################### Activities ######################\n\n  \"/v0.1/activities/search\":\n    post:\n      tags:\n        - nft-activity-controller\n      operationId: getNftActivities\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          description: The number of items to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: sort\n          in: query\n          description: Sorting by data update time\n          required: false\n          schema:\n            $ref: \"#/components/schemas/ActivitySort\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NftActivityFilter\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/activities/byId\":\n    post:\n      tags:\n        - nft-activity-controller\n      operationId: getNftActivitiesById\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ActivitiesByIdRequest\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/activities/sync\":\n    get:\n      tags:\n        - nft-activity-controller\n      operationId: getNftActivitiesSync\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          description: The number of items to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: sort\n          in: query\n          description: Sorting by data update time\n          required: false\n          schema:\n            $ref: \"#/components/schemas/SyncSort\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ###################### Ownerships ######################\n\n  \"/v0.1/ownerships/{ownershipId}\":\n    get:\n      tags:\n        - nft-ownership-controller\n      operationId: getNftOwnershipById\n      parameters:\n        - name: ownershipId\n          description: \"ID of the ownership in format: '$contractAddress:$tokenId:$ownerAddress'\"\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: showDeleted\n          in: query\n          description: \"Return ownership if it is deleted\"\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftOwnership\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/ownerships/byItem\":\n    get:\n      tags:\n        - nft-ownership-controller\n      operationId: getNftOwnershipsByItem\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftOwnershipsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/ownerships/byOwner\":\n    get:\n      tags:\n        - nft-ownership-controller\n      operationId: getNftOwnershipsByOwner\n      parameters:\n        - name: owner\n          description: \"Address of the owner\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: collection\n          description: \"Address of the collection\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftOwnershipsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/ownerships/all\":\n    get:\n      tags:\n        - nft-ownership-controller\n      operationId: getNftAllOwnerships\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: showDeleted\n          in: query\n          description: \"Include deleted ownerships\"\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftOwnershipsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/ownerships/byIds\":\n    post:\n      tags:\n        - nft-ownership-controller\n      description: Returns ownerships by ids\n      operationId: getNftOwnershipsByIds\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NftOwnershipIds\"\n        required: true\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftOwnershipsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ###################### Items ######################\n\n  \"/v0.1/items/{itemId}/meta\":\n    get:\n      tags:\n        - nft-item-controller\n      description: Returns metadata of specified NFT item\n      operationId: getNftItemMetaById\n      parameters:\n        - name: itemId\n          in: path\n          description: \"Item identifier, has format `${contract}:${tokenId}`\"\n          required: true\n          schema:\n            type: string\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802/meta'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftItemMeta\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '500':\n          $ref: \"#/components/responses/MetaError\"\n\n  \"/v0.1/items/{itemId}/resetMeta\":\n    delete:\n      tags:\n        - nft-item-controller\n      deprecated: true\n      description: Deletes the NFT item meta by identifier. In future indexer won't store metadata, so this endpoint will be removed.\n      operationId: resetNftItemMetaById\n      parameters:\n        - name: itemId\n          in: path\n          description: \"Item identifier, has format `${contract}:${tokenId}`\"\n          required: true\n          schema:\n            type: string\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request DELETE \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802/resetMeta'\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/items/{itemId}/lazy\":\n    get:\n      tags:\n        - nft-item-controller\n      description: Returns the NFT lazy item by identifier\n      operationId: getNftLazyItemById\n      parameters:\n        - name: itemId\n          in: path\n          description: \"Item identifier, has format `${contract}:${tokenId}`\"\n          required: true\n          schema:\n            type: string\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802/lazy'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LazyNft\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/items/{itemId}/lazy/delete\":\n    post:\n      tags:\n        - nft-item-controller\n      description: Delete Lazy mint of NFT\n      operationId: deleteLazyMintNftAsset\n      parameters:\n        - name: itemId\n          in: path\n          description: \"Item identifier, has format `${contract}:${tokenId}`\"\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/BurnLazyNftForm\"\n        required: true\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n  \"/v0.1/items/{itemId}\":\n    get:\n      tags:\n        - nft-item-controller\n      description: Returns the NFT item by identifier\n      operationId: getNftItemById\n      parameters:\n        - name: itemId\n          in: path\n          description: \"Item identifier, has format `${contract}:${tokenId}`\"\n          required: true\n          schema:\n            type: string\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftItem\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/items/byIds\":\n    post:\n      tags:\n        - nft-item-controller\n      description: Returns the NFT item by identifier\n      operationId: getNftItemsByIds\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NftItemIds\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/NftItem\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/items/byOwner\":\n    get:\n      tags:\n        - nft-item-controller\n      description: Returns the NFT item by owner\n      operationId: getNftItemsByOwner\n      parameters:\n        - name: owner\n          in: query\n          description: \"Address of the item owner\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n        - name: continuation\n          in: query\n          description: \"Continuation token from the previous response\"\n          required: false\n          schema:\n            type: string\n          example: 1631782042000_0x85d39cea74b0baba54d7fd0df42dd3e6e39b1625:0x000000000000000000000000000000000000000000000000000000000000209a\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 100\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/byOwner?owner=0x60f80121c31a0d46b5279700f9df786054aa5ee5\u0026size=10'\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftItemsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/items/byCreator\":\n    get:\n      tags:\n        - nft-item-controller\n      description: Returns the NFT item by creator\n      operationId: getNftItemsByCreator\n      parameters:\n        - name: creator\n          in: query\n          description: \"Address of the item creator\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n        - name: continuation\n          in: query\n          description: \"Continuation token from the previous response\"\n          required: false\n          schema:\n            type: string\n          example: 1631782042000_0x85d39cea74b0baba54d7fd0df42dd3e6e39b1625:0x000000000000000000000000000000000000000000000000000000000000209a\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 100\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/byCreator?creator=0x60f80121c31a0d46b5279700f9df786054aa5ee5\u0026size=10'\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftItemsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/items/byCollection\":\n    get:\n      tags:\n        - nft-item-controller\n      description: Returns the NFT items by collection\n      operationId: getNftItemsByCollection\n      parameters:\n        - name: collection\n          in: query\n          description: \"ID of the NFT collection\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n        - name: owner\n          in: query\n          description: \"Address of NFT item owner\"\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x70f80121c31a0d46b5279700f9df786054aa5ee5\n        - name: continuation\n          in: query\n          description: \"Continuation token from the previous response\"\n          required: false\n          schema:\n            type: string\n          example: 1631782042000_0x85d39cea74b0baba54d7fd0df42dd3e6e39b1625:0x000000000000000000000000000000000000000000000000000000000000209a\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 100\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/byCollection?collection=0x60f80121c31a0d46b5279700f9df786054aa5ee5\u0026size=10'\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftItemsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/items/all\":\n    get:\n      tags:\n        - nft-item-controller\n      description: Returns all NFT items\n      operationId: getNftAllItems\n      parameters:\n        - name: continuation\n          in: query\n          description: \"Continuation token from the previous response\"\n          required: false\n          schema:\n            type: string\n          example: 1631782042000_0x85d39cea74b0baba54d7fd0df42dd3e6e39b1625:0x000000000000000000000000000000000000000000000000000000000000209a\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 100\n        - name: showDeleted\n          in: query\n          description: \"Include deleted items\"\n          required: false\n          schema:\n            type: boolean\n        - name: lastUpdatedFrom\n          description: \"Filter condition to return only items that were updated after this date (unix format)\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n          example: 1631653245\n        - name: lastUpdatedTo\n          description: \"Filter condition to return only items that were updated before this date (unix format)\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n          example: 1631782725\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/all?size=100\u0026lastUpdatedFrom=1631653245'\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftItemsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n\n  \"/v0.1/items/{itemId}/royalty\":\n    get:\n      tags:\n        - nft-item-controller\n      description: Returns item royalty by identifier\n      operationId: getNftItemRoyaltyById\n      parameters:\n        - name: itemId\n          in: path\n          description: \"Item identifier, has format `contract:tokenId`\"\n          required: true\n          schema:\n            type: string\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/items/0x60f80121c31a0d46b5279700f9df786054aa5ee5:717802/royalty'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftItemRoyaltyList\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ###################### Collections ######################\n\n  \"/v0.1/collections/{collection}/generate_token_id\":\n    get:\n      tags:\n        - nft-collection-controller\n      description: Returns next available tokenId for minter\n      operationId: generateNftTokenId\n      parameters:\n        - name: collection\n          in: path\n          description: \"Address of the NFT collection\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n        - name: minter\n          in: query\n          description: \"Minter address\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/collections/0x60f80121c31a0d46b5279700f9df786054aa5ee5/generate_token_id?minter=0x60f80121c31a0d46b5279700f9df786054aa5ee5'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftTokenId\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/collections/{collection}\":\n    get:\n      tags:\n        - nft-collection-controller\n      description: Returns collection by address\n      operationId: getNftCollectionById\n      parameters:\n        - name: collection\n          in: path\n          description: \"Address of the NFT collection\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/collections/0x60f80121c31a0d46b5279700f9df786054aa5ee5'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftCollection\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/collections/{collection}/stats\":\n    get:\n      tags:\n        - nft-collection-controller\n      description: Returns collection by address\n      operationId: getNftCollectionStats\n      deprecated: true\n      parameters:\n        - name: collection\n          in: path\n          description: \"Address of the NFT collection\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NftCollectionStats\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/collections/{collection}/resetMeta\":\n    delete:\n      tags:\n        - nft-collection-controller\n      deprecated: true\n      description: Deletes the NFT collection meta by identifier\n      operationId: resetNftCollectionMetaById\n      parameters:\n        - name: collection\n          in: path\n          description: \"Address of the NFT collection\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request DELETE \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/collections/0x60f80121c31a0d46b5279700f9df786054aa5ee5/resetMeta'\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/collections/byOwner\":\n    get:\n      tags:\n        - nft-collection-controller\n      description: Returns collection by owner\n      operationId: searchNftCollectionsByOwner\n      parameters:\n        - name: owner\n          in: query\n          description: \"Address of the collection owner\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n        - name: continuation\n          in: query\n          description: \"Continuation token from the previous response\"\n          required: false\n          schema:\n            type: string\n          example: 1631782042000_0x85d39cea74b0baba54d7fd0df42dd3e6e39b1625:0x000000000000000000000000000000000000000000000000000000000000209a\n        - name: size\n          in: query\n          description: \"The number of collections to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 100\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/collections/byOwner?owner=0x488728a8a3e51f7c34410164c4469c71fce1084a'\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftCollectionsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/collections/byId\":\n    post:\n      tags:\n        - nft-collection-controller\n      description: Returns collections by ids\n      operationId: getNftCollectionsByIds\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CollectionsByIdRequest\"\n        required: true\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftCollectionsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/collections/all\":\n    get:\n      tags:\n        - nft-collection-controller\n      description: Returns all NFT collections\n      operationId: searchNftAllCollections\n      parameters:\n        - name: continuation\n          in: query\n          description: \"Continuation token from the previous response\"\n          required: false\n          schema:\n            type: string\n          example: 0x9f5791277dfa7884620c688687351fc5423ec935\n        - name: size\n          in: query\n          description: \"The number of collections to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n          example: 100\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/nft/collections/all?size=100'\n      responses:\n        '200':\n          $ref: \"#/components/responses/NftCollectionsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\ncomponents:\n  responses:\n    NftOwnershipsPage:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NftOwnerships\"\n    NftCollectionsPage:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NftCollections\"\n    NftItemsPage:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NftItems\"\n",
			"canonicalURL": "/github.com/rarible/ethereum-openapi@8516f6b1f3af53133df826ce4e1bd8f4a4363786/-/blob/protocol-api-nft/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rarible/ethereum-openapi/blob/8516f6b1f3af53133df826ce4e1bd8f4a4363786/protocol-api-nft/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"NftItemsPage\": content: application/json: schema: parse schema: at 1:224: find schema: resolve: can't find value for \"components/schemas/NftItems\""
}