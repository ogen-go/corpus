{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubernetes/kube-openapi"
		},
		"file": {
			"name": "golden.v3.json",
			"size": 0,
			"path": "test/integration/testdata/golden.v3.json",
			"byteSize": 20816,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n   \"title\": \"Integration Test\",\n   \"version\": \"1.0\"\n  },\n  \"paths\": {\n   \"/test/custom\": {\n    \"post\": {\n     \"operationId\": \"create-custom.Bah\",\n     \"responses\": {\n      \"201\": {\n       \"description\": \"Created\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/custom.Bah\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/custom/bac\": {\n    \"get\": {\n     \"operationId\": \"get-custom.Bac\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/custom.Bac\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/custom/bah\": {\n    \"get\": {\n     \"operationId\": \"get-custom.Bah\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/custom.Bah\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/custom/bak\": {\n    \"get\": {\n     \"operationId\": \"get-custom.Bak\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/custom.Bak\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/custom/bal\": {\n    \"get\": {\n     \"operationId\": \"get-custom.Bal\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/custom.Bal\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/defaults\": {\n    \"post\": {\n     \"operationId\": \"create-defaults.Defaulted\",\n     \"responses\": {\n      \"201\": {\n       \"description\": \"Created\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/defaults.Defaulted\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/defaults/defaulted\": {\n    \"get\": {\n     \"operationId\": \"get-defaults.Defaulted\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/defaults.Defaulted\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/dummytype\": {\n    \"post\": {\n     \"operationId\": \"create-dummytype.Waldo\",\n     \"responses\": {\n      \"201\": {\n       \"description\": \"Created\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/dummytype.Waldo\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      },\n      \"500\": {\n       \"description\": \"Internal Service Error\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/dummytype.StatusError\"\n         }\n        }\n       }\n      }\n     }\n    }\n   },\n   \"/test/dummytype/bar\": {\n    \"get\": {\n     \"operationId\": \"get-dummytype.Bar\",\n     \"responses\": {\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      },\n      \"500\": {\n       \"description\": \"Internal Service Error\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/dummytype.StatusError\"\n         }\n        }\n       }\n      }\n     }\n    }\n   },\n   \"/test/dummytype/baz\": {\n    \"get\": {\n     \"operationId\": \"get-dummytype.Baz\",\n     \"responses\": {\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      },\n      \"500\": {\n       \"description\": \"Internal Service Error\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/dummytype.StatusError\"\n         }\n        }\n       }\n      }\n     }\n    }\n   },\n   \"/test/dummytype/foo\": {\n    \"get\": {\n     \"operationId\": \"get-dummytype.Foo\",\n     \"responses\": {\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      },\n      \"500\": {\n       \"description\": \"Internal Service Error\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/dummytype.StatusError\"\n         }\n        }\n       }\n      }\n     }\n    }\n   },\n   \"/test/dummytype/waldo\": {\n    \"get\": {\n     \"operationId\": \"get-dummytype.Waldo\",\n     \"responses\": {\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      },\n      \"500\": {\n       \"description\": \"Internal Service Error\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/dummytype.StatusError\"\n         }\n        }\n       }\n      }\n     }\n    }\n   },\n   \"/test/listtype\": {\n    \"post\": {\n     \"operationId\": \"create-listtype.SetList\",\n     \"responses\": {\n      \"201\": {\n       \"description\": \"Created\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/listtype.SetList\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/listtype/atomiclist\": {\n    \"get\": {\n     \"operationId\": \"get-listtype.AtomicList\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/listtype.AtomicList\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/listtype/maplist\": {\n    \"get\": {\n     \"operationId\": \"get-listtype.MapList\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/listtype.MapList\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/listtype/setlist\": {\n    \"get\": {\n     \"operationId\": \"get-listtype.SetList\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/listtype.SetList\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/maptype\": {\n    \"post\": {\n     \"operationId\": \"create-maptype.AtomicMap\",\n     \"responses\": {\n      \"201\": {\n       \"description\": \"Created\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/maptype.AtomicMap\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/maptype/atomicmap\": {\n    \"get\": {\n     \"operationId\": \"get-maptype.AtomicMap\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/maptype.AtomicMap\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/maptype/granularmap\": {\n    \"get\": {\n     \"operationId\": \"get-maptype.GranularMap\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/maptype.GranularMap\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/structtype\": {\n    \"post\": {\n     \"operationId\": \"create-structtype.DeclaredAtomicStruct\",\n     \"responses\": {\n      \"201\": {\n       \"description\": \"Created\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/structtype.DeclaredAtomicStruct\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/structtype/atomicstruct\": {\n    \"get\": {\n     \"operationId\": \"get-structtype.AtomicStruct\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/structtype.AtomicStruct\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/structtype/declaredatomicstruct\": {\n    \"get\": {\n     \"operationId\": \"get-structtype.DeclaredAtomicStruct\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/structtype.DeclaredAtomicStruct\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/structtype/fieldleveloverridestruct\": {\n    \"get\": {\n     \"operationId\": \"get-structtype.FieldLevelOverrideStruct\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/structtype.FieldLevelOverrideStruct\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/structtype/granularstruct\": {\n    \"get\": {\n     \"operationId\": \"get-structtype.GranularStruct\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/structtype.GranularStruct\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/uniontype\": {\n    \"post\": {\n     \"operationId\": \"create-uniontype.InlinedUnion\",\n     \"responses\": {\n      \"201\": {\n       \"description\": \"Created\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/uniontype.InlinedUnion\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/uniontype/inlinedunion\": {\n    \"get\": {\n     \"operationId\": \"get-uniontype.InlinedUnion\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/uniontype.InlinedUnion\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   },\n   \"/test/uniontype/toplevelunion\": {\n    \"get\": {\n     \"operationId\": \"get-uniontype.TopLevelUnion\",\n     \"responses\": {\n      \"200\": {\n       \"description\": \"OK\",\n       \"content\": {\n        \"application/json\": {\n         \"schema\": {\n          \"$ref\": \"#/components/schemas/uniontype.TopLevelUnion\"\n         }\n        }\n       }\n      },\n      \"404\": {\n       \"$ref\": \"#/components/responses/NotFound\"\n      }\n     }\n    }\n   }\n  },\n  \"components\": {\n   \"schemas\": {\n    \"custom.Bac\": {\n     \"type\": \"object\"\n    },\n    \"custom.Bah\": {\n     \"type\": \"object\"\n    },\n    \"custom.Bak\": {\n     \"type\": \"integer\"\n    },\n    \"custom.Bal\": {\n     \"type\": \"string\"\n    },\n    \"defaults.Defaulted\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"OtherField\",\n      \"List\",\n      \"Sub\",\n      \"OtherSub\",\n      \"Map\"\n     ],\n     \"properties\": {\n      \"Field\": {\n       \"type\": \"string\",\n       \"default\": \"bar\"\n      },\n      \"List\": {\n       \"type\": \"array\",\n       \"default\": [\n        \"foo\",\n        \"bar\"\n       ],\n       \"items\": {\n        \"type\": \"string\",\n        \"default\": \"\"\n       }\n      },\n      \"Map\": {\n       \"type\": \"object\",\n       \"default\": {\n        \"foo\": \"bar\"\n       },\n       \"additionalProperties\": {\n        \"type\": \"string\",\n        \"default\": \"\"\n       }\n      },\n      \"OtherField\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      },\n      \"OtherSub\": {\n       \"default\": {},\n       \"allOf\": [\n        {\n         \"$ref\": \"#/components/schemas/defaults.SubStruct\"\n        }\n       ]\n      },\n      \"Sub\": {\n       \"default\": {\n        \"i\": 5,\n        \"s\": \"foo\"\n       },\n       \"allOf\": [\n        {\n         \"$ref\": \"#/components/schemas/defaults.SubStruct\"\n        }\n       ]\n      }\n     }\n    },\n    \"defaults.SubStruct\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"S\"\n     ],\n     \"properties\": {\n      \"I\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 1\n      },\n      \"S\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      }\n     }\n    },\n    \"dummytype.Bar\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"ViolationBehind\",\n      \"Violation\"\n     ],\n     \"properties\": {\n      \"Violation\": {\n       \"type\": \"boolean\",\n       \"default\": false\n      },\n      \"ViolationBehind\": {\n       \"type\": \"boolean\",\n       \"default\": false\n      }\n     }\n    },\n    \"dummytype.Baz\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Violation\",\n      \"ViolationBehind\"\n     ],\n     \"properties\": {\n      \"Violation\": {\n       \"type\": \"boolean\",\n       \"default\": false\n      },\n      \"ViolationBehind\": {\n       \"type\": \"boolean\",\n       \"default\": false\n      }\n     }\n    },\n    \"dummytype.Foo\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Second\",\n      \"First\"\n     ],\n     \"properties\": {\n      \"First\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      },\n      \"Second\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      }\n     }\n    },\n    \"dummytype.StatusError\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Code\",\n      \"Message\"\n     ],\n     \"properties\": {\n      \"Code\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      },\n      \"Message\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      }\n     }\n    },\n    \"dummytype.Waldo\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"First\",\n      \"Second\"\n     ],\n     \"properties\": {\n      \"First\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      },\n      \"Second\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      }\n     }\n    },\n    \"listtype.AtomicList\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Field\"\n     ],\n     \"properties\": {\n      \"Field\": {\n       \"type\": \"array\",\n       \"items\": {\n        \"type\": \"string\",\n        \"default\": \"\"\n       },\n       \"x-kubernetes-list-type\": \"atomic\"\n      }\n     }\n    },\n    \"listtype.Item\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Protocol\",\n      \"Port\"\n     ],\n     \"properties\": {\n      \"Port\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      },\n      \"Protocol\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      },\n      \"a\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      },\n      \"b\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"c\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      }\n     }\n    },\n    \"listtype.MapList\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Field\"\n     ],\n     \"properties\": {\n      \"Field\": {\n       \"type\": \"array\",\n       \"items\": {\n        \"default\": {},\n        \"allOf\": [\n         {\n          \"$ref\": \"#/components/schemas/listtype.Item\"\n         }\n        ]\n       },\n       \"x-kubernetes-list-map-keys\": [\n        \"port\"\n       ],\n       \"x-kubernetes-list-type\": \"map\"\n      }\n     }\n    },\n    \"listtype.SetList\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Field\"\n     ],\n     \"properties\": {\n      \"Field\": {\n       \"type\": \"array\",\n       \"items\": {\n        \"type\": \"string\",\n        \"default\": \"\"\n       },\n       \"x-kubernetes-list-type\": \"set\"\n      }\n     }\n    },\n    \"maptype.AtomicMap\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"KeyValue\"\n     ],\n     \"properties\": {\n      \"KeyValue\": {\n       \"type\": \"object\",\n       \"additionalProperties\": {\n        \"type\": \"string\",\n        \"default\": \"\"\n       },\n       \"x-kubernetes-map-type\": \"atomic\"\n      }\n     }\n    },\n    \"maptype.GranularMap\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"KeyValue\"\n     ],\n     \"properties\": {\n      \"KeyValue\": {\n       \"type\": \"object\",\n       \"additionalProperties\": {\n        \"type\": \"string\",\n        \"default\": \"\"\n       },\n       \"x-kubernetes-map-type\": \"granular\"\n      }\n     }\n    },\n    \"structtype.AtomicStruct\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Field\",\n      \"OtherField\"\n     ],\n     \"properties\": {\n      \"Field\": {\n       \"default\": {},\n       \"allOf\": [\n        {\n         \"$ref\": \"#/components/schemas/structtype.ContainedStruct\"\n        }\n       ],\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"OtherField\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      }\n     }\n    },\n    \"structtype.ContainedStruct\": {\n     \"type\": \"object\"\n    },\n    \"structtype.DeclaredAtomicStruct\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Field\"\n     ],\n     \"properties\": {\n      \"Field\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      }\n     },\n     \"x-kubernetes-map-type\": \"atomic\"\n    },\n    \"structtype.FieldLevelOverrideStruct\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Field\",\n      \"OtherField\"\n     ],\n     \"properties\": {\n      \"Field\": {\n       \"default\": {},\n       \"allOf\": [\n        {\n         \"$ref\": \"#/components/schemas/structtype.DeclaredAtomicStruct\"\n        }\n       ],\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"OtherField\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      }\n     }\n    },\n    \"structtype.GranularStruct\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"Field\",\n      \"OtherField\"\n     ],\n     \"properties\": {\n      \"Field\": {\n       \"default\": {},\n       \"allOf\": [\n        {\n         \"$ref\": \"#/components/schemas/structtype.ContainedStruct\"\n        }\n       ],\n       \"x-kubernetes-map-type\": \"granular\"\n      },\n      \"OtherField\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\",\n       \"default\": 0\n      }\n     }\n    },\n    \"uniontype.InlinedUnion\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"name\",\n      \"type\"\n     ],\n     \"properties\": {\n      \"alpha\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"beta\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"field1\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"field2\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"fieldA\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"fieldB\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"name\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      },\n      \"type\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      },\n      \"unionType\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      }\n     },\n     \"x-kubernetes-unions\": [\n      {\n       \"discriminator\": \"unionType\",\n       \"fields-to-discriminateBy\": {\n        \"fieldA\": \"FieldA\",\n        \"fieldB\": \"FieldB\"\n       }\n      },\n      {\n       \"discriminator\": \"type\",\n       \"fields-to-discriminateBy\": {\n        \"alpha\": \"Alpha\",\n        \"beta\": \"Beta\"\n       }\n      },\n      {\n       \"fields-to-discriminateBy\": {\n        \"field1\": \"Field1\",\n        \"field2\": \"Field2\"\n       }\n      }\n     ]\n    },\n    \"uniontype.TopLevelUnion\": {\n     \"type\": \"object\",\n     \"required\": [\n      \"name\"\n     ],\n     \"properties\": {\n      \"fieldA\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"fieldB\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n      },\n      \"name\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      },\n      \"unionType\": {\n       \"type\": \"string\",\n       \"default\": \"\"\n      }\n     },\n     \"x-kubernetes-unions\": [\n      {\n       \"discriminator\": \"unionType\",\n       \"fields-to-discriminateBy\": {\n        \"fieldA\": \"FieldA\",\n        \"fieldB\": \"FieldB\"\n       }\n      }\n     ]\n    }\n   },\n   \"responses\": {\n    \"NotFound\": {\n     \"description\": \"Entity not found.\"\n    }\n   }\n  }\n }",
			"canonicalURL": "/github.com/kubernetes/kube-openapi@a70c9af30aea67d5b769998c5e3f18458b277e72/-/blob/test/integration/testdata/golden.v3.json",
			"externalURLs": [
				{
					"url": "https://github.com/kubernetes/kube-openapi/blob/a70c9af30aea67d5b769998c5e3f18458b277e72/test/integration/testdata/golden.v3.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"defaults.Defaulted\": parse schema: property \"Map\": at 600:19: parse default: unexpected type: \"object\""
}