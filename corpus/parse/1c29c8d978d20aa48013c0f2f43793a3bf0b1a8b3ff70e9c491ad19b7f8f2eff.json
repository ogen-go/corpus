{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aistairc/qunomon"
		},
		"file": {
			"name": "tf2_backend_API仕様書.yml",
			"size": 0,
			"path": "doc/API仕様書/tf2_backend_API仕様書.yml",
			"byteSize": 139139,
			"content": "﻿openapi: 3.0.0\ninfo:\n  title: TF2 API\n  description: TF2 QAI-Testbed API.\n  version: 1.0.0\nservers:\n  - url: 'https://127.0.0.1/qai-testbed/api/0.0.1'\n    description: Back end server\npaths:\n  # /login:\n  #   post:\n  #     tags:\n  #       - Login\n  #     summary: ログイン情報入力\n  #     description: ログイン情報を入力し、ユーザ情報を取得。\n  #     parameters: []\n  #     requestBody:\n  #       description: ログインユーザのアカウントとパスワードを設定\n  #       content:\n  #         application/json:\n  #           schema:\n  #             required:\n  #               - Id\n  #               - Name\n  #             properties:\n  #               UserName:\n  #                 type: string\n  #               Password:\n  #                 type: string\n  #           example:\n  #             UserName: akita\n  #             Password: ハッシュ化済みパスワード\n  #     responses:\n  #       '200':\n  #         description: ログインユーザ情報の取得に成功\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: string\n  #               format: json\n  #               example:\n  #                 Result:\n  #                   Code: 0\n  #                   Message: Success\n  #                 Organizer:\n  #                   Id: Xcorp-Dev\n  #                   Name: X社　開発部\n  #       '400':\n  #         description: アカウントが存在しない。もしくパスワードが間違っている\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: string\n  #               format: json\n  #               example:\n  #                 Result:\n  #                   Code: 1\n  #                   Message: User does not exist. Or the password is wrong.\n  #                 Organizer: null\n  #       '500':\n  #         description: 予期せぬエラー\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/ErrorResult'\n  '/{OrganizerId}/mlComponents':\n    get:\n      tags:\n        - mlComponents\n      summary: 機械学習コンポーネント一覧表示.\n      description: ログインユーザの組織に紐付く機械学習コンポーネント一覧情報を取得し、機械学習コンポーネント一覧画面に遷移し表示\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID(ログイン情報入力でのレスポンスから取得)\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 機械学習コンポーネント一覧情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - mlComponents\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: string\n                      Massage:\n                        type: string\n                  mlComponents:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Name:\n                        type: string\n                      Description:\n                        type: string\n                      ProblemDomain:\n                        type: string\n                      MLFrameworkName:\n                        type: string\n                example:\n                  Result:\n                    Code: 'P12000'\n                    Message: Success.\n                  mlComponents:\n                    - Id: 1\n                      Name: A社住宅価格予測-機械学習コンポーネント\n                      Description: A社の住宅価格を予測する機械学習コンポーネント\n                      ProblemDomain: 重回帰分析\n                      MLFrameworkName: Tensorflow-2.3\n                    - Id: 2\n                      Name: B社文字認識-機械学習コンポーネント\n                      Description: B社の文字を認識する機械学習コンポーネント\n                      ProblemDomain: 画像分類\n                      MLFrameworkName: Tensorflow-2.3\n                    - Id: 3\n                      Name: C社ゴルフスコア読取-機械学習コンポーネント\n                      Description: C社のスコア表枠組み、文字を認識する機械学習コンポーネント\n                      ProblemDomain: レイアウト認識、画像分類\n                      MLFrameworkName: Tensorflow-2.3\n        '404':\n          description: アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'P14000'\n                  Message: not found page.\n        '422':\n          description: 不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'P10000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n    post:\n      tags:\n        - mlComponents\n      summary: 機械学習コンポーネント追加.\n      description: 機械学習コンポーネントを追加する\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: 機械学習コンポーネント追加情報\n        content:\n          application/json:\n            schema:\n              required:\n                - Name\n                - Description\n                - ProblemDomain\n                - MLFrameworkId\n              properties:\n                Name:\n                  type: string\n                Description:\n                  type: string\n                ProblemDomain:\n                  type: string\n                  description: |\n                    機械学習コンポーネントの対象とする問題領域を記載する。  \n                MLFrameworkId:\n                  type: string  \n                  description: |\n                    機械学習フレームワークのIDを記載する  \n                    名称とIDはGET /mlFrameworksで取得する。\n            example:\n              Name: Fashion Classifier\n              Description: Fashion image classification\n              ProblemDomain: ImageClassification\n              MLFrameworkId: 1\n      responses:\n        '200':\n          description: 追加完了\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - MLComponentId\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: string\n                      Massage:\n                        type: string\n                  MLComponentId:\n                    type: integer\n                example:\n                  Result:\n                    Code: 'P22000'\n                    Message: Success.\n                  MLComponentId: 4\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'P28000'\n                  Message: invalid request.\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'P24000'\n                  Message: not found page.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}':\n    delete:\n      tags:\n        - mlComponents\n      summary: 機械学習コンポーネント削除.\n      description: |\n        機械学習コンポーネント一覧表示から、選択した機械学習コンポーネントを削除する。\n        削除する機械学習コンポーネントに関連するインベントリ情報とテストディスクリプション情報を削除する。\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description:  削除成功通知\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'P32000'\n                  Message: success.\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'P34000'\n                  Message: not found ml_component.\n        '422':\n          description: |\n            不正リクエスト\n            - BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'P39000'\n                  Message: database error.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'P39999'\n                  Message: internal server error\n  '/mlFrameworks':\n    get:\n      tags:\n        - MLFrameworks\n      summary: 機械学習フレームワーク一覧取得.\n      description: 機械学習フレームワークの一覧を取得する\n      responses:\n        '200':\n          description: 機械学習フレームワーク一覧\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - MLFrameworks\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  MLFrameworks:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Name:\n                        type: string\n                example:\n                  Result:\n                    Code: 'M11000'\n                    Message: Success.\n                  MLFrameworks:\n                    - Id: 1\n                      Name: Tensorflow-2.3\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/Inventories':\n    get:\n      tags:\n        - Inventories\n      summary: インベントリ一覧取得.\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くインベントリの一覧を取得\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: インベントリ情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - Inventories\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Message:\n                        type: string\n                  Inventories:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Name:\n                        type: string\n                      DataType:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                      FileSystem:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                      Description:\n                        type: string\n                      Schema:\n                        type: string\n                      Formats:\n                        type: object\n                        description: |\n                          フォーマット\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                      FilePath:\n                        type: string\n                      CreationDatetime:\n                        type: string\n                      UpdateDatetime:\n                        type: string\n                example:\n                  Result:\n                    Code: 'I12000'\n                    Message: Success.\n                  Inventories:\n                  - Id: 1\n                    Name: TestDataset_0818\n                    DataType:\n                      Id: 1\n                      Name: dataset\n                    FileSystem: \n                      Id: 1\n                      Name: UNIX_FILE_SYSTEM\n                    Description: \"1枚の手書き文字データ(28x28, png)のpng\"\n                    Schema: \"Schema\"\n                    Formats:\n                    - Id: 1\n                      Name: CSV \n                    - Id: 2\n                      Name: PNG \n                    FilePath: /mnt/xxx/1\n                    CreationDatetime: '2020-09-28T01:22:03.920542'\n                    UpdateDatetime: '2020-09-28T01:22:03.920542'\n                  - Id: 2\n                    Name: TestDataset_0918\n                    DataType:\n                      Id: 1\n                      Name: dataset\n                    FileSystem: \n                      Id: 1\n                      Name: UNIX_FILE_SYSTEM\n                    Description: 0918用のデータセット\n                    Schema: \"Schema\"\n                    Formats:\n                    - Id: 1\n                      Name: CSV \n                    FilePath: /mnt/xxx/2\n                    CreationDatetime: '2020-09-28T01:22:03.920542'\n                    UpdateDatetime: '2020-09-28T01:22:03.920542'\n                  - Id: 3\n                    Name: TrainedModel_0907\n                    DataType:\n                      Id: 2\n                      Name: model\n                    FileSystem: \n                      Id: 1\n                      Name: UNIX_FILE_SYSTEM\n                    Description: 0907用のモデル\n                    Schema: \"Schema\"\n                    Formats:\n                    - Id: 3\n                      Name: H5 \n                    FilePath: /mnt/xxx/3\n                    CreationDatetime: '2020-09-28T01:22:03.920542'\n                    UpdateDatetime: '2020-09-28T01:22:03.920542'\n                  - Id: 4\n                    Name: TestDataset_1018\n                    DataType:\n                      Id: 1\n                      Name: dataset\n                    FileSystem: \n                      Id: 1\n                      Name: UNIX_FILE_SYSTEM\n                    Description: 1018用のデータセット\n                    Schema: \"Schema\"\n                    Formats:\n                    - Id: 1\n                      Name: CSV \n                    FilePath: /mnt/xxx/4\n                    CreationDatetime: '2020-09-28T01:22:03.920542'\n                    UpdateDatetime: '2020-09-28T01:22:03.920542'\n                  - Id: 5\n                    Name: TrainedModel_1007\n                    DataType:\n                      Id: 2\n                      Name: model\n                    FileSystem: \n                      Id: 1\n                      Name: UNIX_FILE_SYSTEM\n                    Destination: 1007用のモデル\n                    Schema: \"Schema\"\n                    Formats:\n                    - Id: 3\n                      Name: H5 \n                    FilePath: /mnt/xxx/5\n                    CreationDatetime: '2020-09-28T01:22:03.920542'\n                    UpdateDatetime: '2020-09-28T01:22:03.920542'\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I14000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I10000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n    post:\n      tags:\n        - Inventories\n      summary: インベントリ追加.\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くインベントリを追加する\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        description: インベントリ追加情報\n        content:\n          application/json:\n            schema:\n              required:\n                - Name\n                - TypeId\n                - FileSystemId\n                - FilePath\n                - Formats\n              properties:\n                Name:\n                  type: string\n                TypeId:\n                  type: integer\n                  description: dataTypeのIdを指定する。\n                FileSystemId:\n                  type: integer\n                  description: ファイルシステムのIdを指定する。\n                FilePath:\n                  type: string  \n                  description: |\n                    インベントリのアドレスを指定する。  \n                    TypeがWINDOWS_FILEの場合、以下の条件に当てはまるFilePathのみを許容する。  \n                    ・アルファベッドから始まる  \n                    ・長さが259バイト以下である  \n                    TypeがUNIX_FILE_SYSTEMの場合、以下の条件に当てはまるFilePathのみを許容する。  \n                    ・/から始まる  \n                    ・長さが1023バイト以下である  \n                    ・一つの要素(ディレクトリ名・ファイル名)が255バイト以下である  \n                    この条件に当てはまらないFilePathが指定された場合、422を返却する。\n                Destination: \n                  type: string\n                Formats:\n                  type: array\n                  description: |\n                    インベントリのフォーマットをN個設定する\n                    フォーマット一覧取得APIで取得された名前以外を指定した場合、本API内部でフォーマット追加処理をする  \n                  items:\n                    type: string\n                Schema:\n                  type: string \n            example:\n              Name: TestDataset_0818\n              TypeId: 1\n              FileSystemId: 1\n              FilePath: /mnt/xxx/1\n              Destination: 0818用のデータセット\n              Formats: [\"csv\"]\n              Schema: \"Schema\"\n      responses:\n        '200':\n          description: 登録完了通知\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I22000'\n                  Message: Success.\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I28000'\n                  Message: invalid request.\n        '404':\n          description: |\n            以下リクエストを受信したときに返却する。\n              - 指定した{mlComponentsId}が存在しない\n              - FilePathが存在しない\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I24000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I20000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/Inventories/{InventoryId}':\n    put:\n      tags:\n        - Inventories\n      summary: インベントリ編集.\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のインベントリIDを指定し、そのインベントリ情報を編集する。\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n        - name: inventoryId\n          in: path\n          description: インベントリId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        description: インベントリ追加情報\n        content:\n          application/json:\n            schema:\n              required:\n                - Name\n                - TypeId\n                - FileSystemId\n                - FilePath\n                - Formats\n              properties:\n                Name:\n                  type: string\n                TypeId:\n                  type: integer\n                  description: dataTypeのIdを指定する。\n                FileSystemId:\n                  type: integer\n                  description: ファイルシステムのIdを指定する。\n                FilePath:\n                  type: string \n                  description: |\n                    インベントリのアドレスを指定する。  \n                    TypeがWINDOWS_FILEの場合、以下の条件に当てはまるFilePathのみを許容する。  \n                    ・アルファベッドから始まる  \n                    ・長さが259バイト以下である  \n                    TypeがUNIX_FILE_SYSTEMの場合、以下の条件に当てはまるFilePathのみを許容する。  \n                    ・/から始まる  \n                    ・長さが1023バイト以下である  \n                    ・一つの要素(ディレクトリ名・ファイル名)が255バイト以下である  \n                    この条件に当てはまらないFilePathが指定された場合、422を返却する。\n                Destination: \n                  type: string \n                Formats:\n                  type: array\n                  description: |\n                    インベントリのフォーマットをN個設定する\n                    フォーマット一覧取得APIで取得された名前以外を指定した場合、本API内部でフォーマット追加処理をする  \n                  items:\n                    type: string\n                Schema:\n                  type: string \n            example:\n              Name: TestDataset_0818\n              TypeId: 1\n              FileSystemId: 1\n              FilePath: /mnt/xxx/1\n              Destination: 0818用のデータセット\n              Formats: [\"csv\"]\n              Schema: \"Schema\"\n      responses:\n        '200':\n          description: インベントリ編集情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                example:\n                  Result:\n                    Code: 'I32000'\n                    Message: Success.\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I38000'\n                  Message: invalid request.\n        '404':\n          description: |\n            以下リクエストを受信したときに返却する。\n              - 指定した{InventoryId}が存在しない\n              - FilePathが存在しない\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I34000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I30000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n    delete:\n      tags:\n        - Inventories\n      summary: インベントリ削除.\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のインベントリIDを指定し、そのインベントリ情報を削除する\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n        - name: inventoryId\n          in: path\n          description: インベントリId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description:  削除成功通知\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I42000'\n                  Message: success.\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I44000'\n                  Message: not found page.\n        '422':\n          description: |\n            不正リクエスト\n            - SQLAlChemyError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I49000'\n                  Message: database error.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/QualityDimensions':\n    get:\n      tags:\n        - Quality Dimension\n      summary: 品質特性一覧取得.\n      description: 品質特性の一覧を取得する\n      responses:\n        '200':\n          description: テストディスクリプション情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - QualityDimensions\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  QualityDimensions:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Name:\n                        type: string\n                example:\n                  Result:\n                    Code: 'Q12000'\n                    Message: Success.\n                  QualityDimensions:\n                    - Id: 1\n                      Name: 要求分析の十分性 \n                    - Id: 2\n                      Name: データ設計の十分性\n                    - Id: 3\n                      Name: データセットの被覆性\n                    - Id: 4\n                      Name: データセットの均一性\n                    - Id: 5\n                      Name: 機械学習モデルの正確性\n                    - Id: 6\n                      Name: 機械学習モデルの安定性\n                    - Id: 7\n                      Name: 運用時品質の維持性\n                    - Id: 8\n                      Name: プログラムの健全性\n                    - Id: 9999\n                      Name: 未分類\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'Q14000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'Q10000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/formats':\n    get:\n      tags:\n        - Format\n      summary: フォーマット一覧取得.\n      description: フォーマットの一覧を取得する\n      responses:\n        '200':\n          description: フォーマット情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - Formats\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  Formats:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Type:\n                        type: string\n                        description: |\n                          以下いずれかの対応するタイプを返却する。\n                          * text\n                          * picture\n                          * table\n                          * binary\n                      Name:\n                        type: string\n                example:\n                  Result:\n                    Code: I72000\n                    Message: Success.\n                  Tags:\n                    - Id: 1\n                      Type: picture\n                      Name: png\n                    - Id: 2\n                      Type: picture\n                      Name: jpg\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I74000'\n                  Message: not found page.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/dataTypes':\n    get:\n      tags:\n        - Data Type\n      summary: データタイプ一覧取得.\n      description: データタイプの一覧を取得する\n      responses:\n        '200':\n          description: データタイプ情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - DataTypes\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  DataTypes:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Name:\n                        type: string\n                        description: |\n                          以下のテータタイプを返却する。\n                          * dataset\n                          * model\n                          * attribute set\n                example:\n                  Result:\n                    Code: I82000\n                    Message: Success.\n                  DataTypes:\n                    - Id: 1\n                      Name: dataset\n                    - Id: 2\n                      Name: model\n                    - Id: 3\n                      Name: attribute set\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/fileSystems':\n    get:\n      tags:\n        - FileSystem\n      summary: ファイルシステム一覧取得.\n      description: ファイルシステムの一覧を取得する\n      responses:\n        '200':\n          description: ファイルシステム情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - FileSystems\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  FileSystems:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Name:\n                        type: string\n                        description: |\n                          以下のテータタイプを返却する。\n                          * UNIX_FILE_SYSTEM\n                          * WINDOWS_FILE\n                example:\n                  Result:\n                    Code: I92000\n                    Message: Success.\n                  FileSystems:\n                    - Id: 1\n                      Name: UNIX_FILE_SYSTEM\n                    - Id: 2\n                      Name: WINDOWS_FILE\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/tags':\n    get:\n      tags:\n        - Tag\n      summary: (使用機能なし)タグ一覧取得.\n      description: タグの一覧を取得する\n      responses:\n        '200':\n          description: タグ情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - Tags\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  Tags:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Type:\n                        type: string\n                        description: |\n                          * INVENTORY : インベントリに使用可能なタグ\n                      Name:\n                        type: string\n                example:\n                  Result:\n                    Code: I62000\n                    Message: Success.\n                  Tags:\n                    - Id: 1\n                      Type: INVENTORY\n                      Name: CSV \n                    - Id: 2\n                      Type: INVENTORY\n                      Name: TF_MODEL\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I64000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I60000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/QualityMeasurements':\n    get:\n      tags:\n        - Quality_Measurement\n      summary: 測定基準一覧取得.\n      description: 測定基準の一覧を取得する\n      responses:\n        '200':\n          description: |\n            測定基準情報を取得する.\n            * レスポンスの `QualityMeasurements.properties.Min` と \n              `QualityMeasurements.properties.Max` は未定義の場合nullが返される.\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - QualityMeasurements\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  QualityMeasurements:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Name:\n                        type: string\n                      Description:\n                        type: string\n                      QualityDimensionId:\n                        type: integer\n                      Type:\n                        type: string\n                      Min:\n                        type: number\n                      Max:\n                        type: number\n                      Structure:\n                        type: string\n                example:\n                  Result:\n                    Code: 'Q22000'\n                    Message: Success.\n                  QualityMeasurements:\n                    - Id: 1\n                      Name: 学習モデルの精度計測 \n                      Description: 学習モデルの正確性評価指標 \n                      QualityDimensionId: 5\n                      Type: \"float\"\n                      Min: 0.0\n                      Max: null\n                      Structure: \"single\"\n                    - Id: 2\n                      Name: 学習モデルの敵対的サンプル安定性計測\n                      Description: 学習モデルの安定性評価指標 \n                      QualityDimensionId: 6\n                      Type: \"float\"\n                      Min: null\n                      Max: 1.0\n                      Structure: \"single\"\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'Q24000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'Q20000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n    post:\n      tags:\n        - Quality_Measurement\n      summary: (使用禁止→AIT追加APIで実施)測定基準追加.\n      description: |\n        * 測定基準を追加する。  \n        * 測定基準はプリミティブな一つのメトリクス（指標値）をもつ。  \n        * この測定基準設計者が、どういった基準で算出するかをDescription項目で明確化しなければならない。  \n        * 名称とバージョンの組み合わせが既に存在する場合、400を返却する。  \n        * 存在しない内部品質特性IDを指定した場合、400を返却する。  \n      requestBody:\n        description: 測定基準追加情報\n        content:\n          application/json:\n            schema:\n              required:\n                - Name\n                - Version\n                - Description\n                - QualityDimensionId\n                - OperandTemplates\n              properties:\n                Name:\n                  type: string\n                Version:\n                  type: string\n                Description:\n                  type: string\n                QualityDimensionId:\n                  type: integer\n                OperandTemplates:\n                  type: object\n                  properties:\n                    Name:\n                      type: string\n                    Unit:\n                      type: string\n            example:\n              - Name: 分類問題における学習モデルACC計測 \n                Version: 0.1\n                Description: | \n                  * 評価物：学習済モデル  \n                  * 対象領域：分類問題  \n                  * メトリクス：  \n                    * ACC = (TP+TF) / (TP+FP+TN+FN)  \n                QualityDimensionId: 5\n                OperandTemplates: \n                  - Name: ACC\n                    Unit: \"%\"\n      responses:\n        '200':\n          description: 追加正常終了\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - QualityMeasurementId\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  QualityMeasurementId:\n                    type: integer\n              example:\n                Result:\n                  Code: 'Q23000'\n                  Message: Success.\n                QualityMeasurementId: 100\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n              - BadRequest\n              - Name-Versionの組み合わせが既に存在する\n              - 存在しない内部品質特性IDを指定した\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'Q23010'\n                  Message: invalid request.\n        '500':\n          description: |\n            サーバでの処理失敗\n            - SQLAlChemyError\n            - その他例外\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/QualityMeasurements/RelationalOperators':\n    get:\n      tags:\n        - Quality_Measurement\n      summary: 関係演算子取得.\n      description: 関係演算子の一覧を取得する\n      responses:\n        '200':\n          description: 関係演算子情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - RelationalOperators\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  RelationalOperators:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Expression:\n                        type: string\n                      Description:\n                        type: string\n                example:\n                  Result:\n                    Code: 'Q32000'\n                    Message: Success.\n                  RelationalOperators:\n                    - Id: 1\n                      Expression: '==' \n                      Description: 値が等しければTrue\n                    - Id: 2\n                      Expression: '!=' \n                      Description: 値が等しくなければtrue\n                    - Id: 3\n                      Expression: '\u003e' \n                      Description: 値が大きければtrue\n                    - Id: 4\n                      Expression: '\u003c' \n                      Description: 値が小さければtrue\n                    - Id: 5\n                      Expression: '\u003e=' \n                      Description: 値が同じか大きければtrue\n                    - Id: 6\n                      Expression: '\u003c=' \n                      Description: 値が同じが小さければtrue\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'Q34000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'Q30000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/testRunners':\n    get:\n      tags:\n        - TestRunner\n      summary: テストランナー(AIT)一覧取得.\n      description: |\n        テストランナー(AIT)の一覧を取得する.\n        * レスポンスの `TestRunners.properties.Report.properties.Measures.properties.Min` と \n          `TestRunners.properties.Report.properties.Measures.properties.Max` \n          は未定義の場合nullが返される.\n      responses:\n        '200':\n          description: テストランナー(AIT)情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - TestRunners\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  TestRunners:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      QualityDimensionId:\n                        type: integer\n                      Name:\n                        type: string\n                      Description:\n                        type: string\n                      Author:\n                        type: string\n                      Email:\n                        type: string\n                        description: データが存在しない場合、この項目は存在しない\n                      Version:\n                        type: string\n                      Quality:\n                        type: string\n                      LandingPage:\n                        type: string\n                      Reference:\n                        type: array\n                        description: データ項目未決定\n                        items:\n                          type: string\n                      ParamTemplates:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                          Type:\n                            type: string\n                          Min:\n                            type: number\n                            description: データが存在しない場合、この項目は存在しない\n                          Max:\n                            type: number\n                            description: データが存在しない場合、この項目は存在しない\n                          Description:\n                            type: string\n                          DefaultVal:\n                            type: string\n                            description: データが存在しない場合、この項目は存在しない\n                      TargetInventories:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                          DataType:\n                            type: object\n                            properties:\n                              Id:\n                                type: integer\n                              Name:\n                                type: string\n                          Description:\n                            type: string\n                          Formats:\n                            type: object\n                            properties:\n                              Id:\n                                type: integer\n                              Name:\n                                type: string\n                          Schema:\n                            type: string\n                            description: データが存在しない場合、この項目は存在しない\n                      Report:\n                        type: object\n                        properties:\n                          Measures:\n                            type: object\n                            properties:\n                              Id:\n                                type: integer\n                              Name:\n                                type: string\n                              Type:\n                                type: string\n                              Description:\n                                type: string\n                              Min:\n                                type: number\n                              Max:\n                                type: number\n                              Srtructure:\n                                type: string\n                          Resources:\n                            type: object\n                            properties:\n                              Id:\n                                type: integer\n                              Name:\n                                type: string\n                              Type:\n                                type: string\n                              Description:\n                                type: string\n                      Downloads:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                          Description:\n                            type: string\n                example:\n                  Result:\n                    Code: 'I52000'\n                    Message: Success.\n                  TestRunners:\n                    - Id: 1\n                      QualityDimensionId: 1\n                      Name: acc_check.py\n                      Description: \"* データ入力形式: XXX\\n* MLエンジン: tensorflow-vX.X\\n* 出力: XXX\\n\"\n                      Author: \"John Smith\"\n                      Email: \"John_Smith@aaa.com\"\n                      Version: \"1\"\n                      Quality: \"https://airc.aist.go.jp/aiqm/quality/internal/要求分析の十分性\"\n                      LandingPage: \"https://aithub.com/AITName/AITVersion\"\n                      Reference: [\"書き方は未検討\", \"書き方は未検討\"]\n                      ParamTemplates:\n                        - Id: 1\n                          Name: Threshold\n                          Type: float\n                          Min: 0.0\n                          Max: 1.0\n                          Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                          DefaultVal: \"0.5\"\n                        - Id: 2\n                          Name: Lower Limit\n                          Type: float\n                          Min: 0.0\n                          Max: null\n                          Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                          DefaultVal: \"0.5\"\n                        - Id: 3\n                          Name: Upper Limit\n                          Type: float\n                          Min: null\n                          Max: 1.0\n                          Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                          DefaultVal: \"0.5\"\n                      TargetInventories:\n                        - Id: 1\n                          Name: Trained Model\n                          DataType: \n                            Id: 2\n                            Name: model\n                          Description: Trained Model\n                          Formats: \n                            - Id: 1\n                              Name: h5\n                        - Id: 2\n                          Name: Test Data\n                          DataType:\n                            Id: 1\n                            Name: dataset\n                          Description: valiadtion data set\n                          Formats: \n                            - Id: 2\n                              Name: csv\n                      Report:\n                        Measures:\n                          - Id: 1\n                            Name: mae\n                            Type: float\n                            Description: mean absolute error. $\\\\sum_k {|f_k - y_k|} / n$\n                            Min: 0.0\n                            Max: null\n                            Srtructure: single\n                          - Id: 2\n                            Name: F-Value\n                            Type: float\n                            Description: $\\\\sum_k (f_k - y_k)^2 / n$\n                            Min: 0.0\n                            Max: null\n                            Srtructure: single\n                        Resources:\n                          - Id: 1\n                            Name: distribution_graph\n                            Type: image\n                            Description: 分布\n                    - Id: 2\n                      QualityDimensionId: 1\n                      Name: adversarial_example_acc_test.py\n                      Description: \"* データ入力形式: XXX\\n* MLエンジン: tensorflow-vX.X\\n* 出力: XXX\\n\"\n                      Author: \"John Smith\"\n                      Email: \"John_Smith@aaa.com\"\n                      Version: \"1\"\n                      Quality: \"https://airc.aist.go.jp/aiqm/quality/internal/要求分析の十分性\"\n                      LandingPage: \"https://aithub.com/AITName/AITVersion\"\n                      Reference: [\"書き方は未検討\", \"書き方は未検討\"]\n                      ParamTemplates:\n                        - Id: 4\n                          Name: Threshold\n                          Type: float\n                          Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                          DefaultVal: \"0.5\"\n                        - Id: 5\n                          Name: Lower Limit\n                          Type: float\n                          Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                          DefaultVal: \"0.5\"\n                        - Id: 6\n                          Name: Upper Limit\n                          Type: float\n                          Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                          DefaultVal: \"0.5\"\n                      TargetInventories:\n                        - Id: 7\n                          Name: Trained Model\n                          DataType: \n                            Id: 2\n                            Name: model\n                          Description: Trained Model\n                          Formats: \n                            - Id: 1\n                              Name: h5\n                        - Id: 8\n                          Name: Test Data\n                          DataType:\n                            Id: 1\n                            Name: dataset\n                          Description: valiadtion data set\n                          Formats: \n                            - Id: 2\n                              Name: csv\n                      Report:\n                        Measures:\n                          - Id: 3\n                            Name: F-Value\n                            Type: float\n                            Description: $\\\\sum_k (f_k - y_k)^2 / n$\n                            Min: 0.0\n                            Max: null\n                            Srtructure: single\n                        Resources:\n                          - Id: 2\n                            Name: confusion_matrix\n                            Type: image\n                            Description: 混同行列\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n    post:\n      tags:\n        - TestRunner\n      summary: （使用禁止）テストランナー追加.\n      description: |\n        * テストランナーを追加する  \n        * 名称とバージョンの組み合わせが既に存在する場合、400を返却する  \n        * 存在しない内部品質特性IDを指定した場合、400を返却する  \n        * 存在しないタグを指定した場合、400を返却する  \n        * α版としては以下を前提（制約条件）とする  \n          * テストメソッド自体は以下に配置したうえで、本APIを呼び出すこと  \n            {インストールパス}\\qai-testbed\\src\\dag\\{名称}\n      requestBody:\n        description: テストランナー追加情報\n        content:\n          application/json:\n            schema:\n              required:\n                - Name\n                - Version\n                - Description\n                # - QualityMeasurementId\n                - Author\n                - Quality\n                - Reference\n                - ParamTemplates \n                - TargetInventories \n                - Report\n                - Downloads\n              properties:\n                Name:\n                  type: string\n                Version:\n                  type: string\n                Author:\n                  type: string\n                Email:\n                  type: string\n                Quality:\n                  type: string\n                Reference:\n                  type: array\n                Description:\n                  type: string\n                # QualityMeasurementId:\n                #   type: integer\n                ParamTemplates:\n                  type: object\n                  properties:\n                    Name:\n                      type: string\n                    ValueType:\n                      type: string\n                    Description:\n                      type: string\n                    DefaultVal:\n                      type: string\n                TargetInventories:\n                  type: object\n                  properties:\n                    Name:\n                      type: string\n                    Tags:\n                      type: array\n                      items:\n                        type: integer\n                    Description:\n                      type: string\n                    Format:\n                      type: array\n                      items:\n                        type: string\n                    # Schema:\n                Report:\n                  type: object\n                  properties:\n                    Measures:\n                      type: object\n                      properties:\n                        Name:\n                          type: string\n                        Description:\n                          type: string\n                        Type:\n                          type: string\n                        Min:\n                          type: number\n                        Max:\n                          type: number\n                        Structure:\n                          type: string\n                    Resources:\n                      type: object\n                      properties:\n                        Name:\n                          type: string\n                        Path:\n                          type: string\n                        Type:\n                          type: string\n                        Description:\n                          type: string\n                Downloads:\n                  type: object\n                  properties:\n                    Name:\n                      type: string\n                    Path:\n                      type: string\n                    Description:\n                      type: string\n              example:\n                Name: eval_mnist_acc_test_by_tfmodel_1.0\n                Version: 1.0\n                Author: \"John Smith\"\n                Email: \"John_Smith@aaa.com\"\n                Quality: \"https://airc.aist.go.jp/aiqm/quality/internal/要求分析の十分性\"\n                Reference: [\"書き方は未検討\", \"書き方は未検討\"]\n                Description: |\n                  * データ入力形式: XXX\n                  * MLエンジン: tensorflow-vX.X\n                  * 出力: XXX\n                QualityMeasurementId: 100\n                ParamTemplates:\n                  - Name: Threshold\n                    ValueType: float\n                    Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                    DefaultVal: \"0.5\"\n                  - Name: Lower Limit\n                    ValueType: float\n                    Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                    DefaultVal: \"0.5\"\n                  - Name: Upper Limit\n                    ValueType: float\n                    Description: \"敵対的生成のずらし具合, \\\\epsilon \\\\in \\\\{0.0, 1.0\\\\}\"\n                    DefaultVal: \"0.5\"\n                TargetInventories: \n                  - Name: TrainedModelFile\n                    Tags: [1]\n                    Description: \"onnx\"\n                    Format: [\"onnx\"]\n                  - Name: ValidationDataSet\n                    Tags: [2]\n                    Description: \"1枚の手書き文字データ(28x28, png)のpng\"\n                    Format: [\"png\"]\n                Report:\n                  Measures:\n                    - Name: \"mae\"\n                      Description: \"mean absolute error. $\\\\sum_k {|f_k - y_k|} / n$\"\n                      Type: \"int\"\n                      Min: 0.0\n                      Max: null\n                      Structure: \"single\"\n                  Resources:\n                    - Name: \"distribution_graph\"\n                      Path: \"aa/bb/cc/distribution_graph.png\"\n                      Type: \"image\"\n                      Description:  \"分布\"\n                Downloads:\n                    - Name: \"log.txt\"\n                      Path: \"/aa/bb/cc/log.png\"\n                      Description: \"one image\"\n      responses:\n        '200':\n          description: 追加正常終了\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - TestRunnerId\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  TestRunnerId:\n                    type: integer\n                example:\n                  Result:\n                    Code: 'R15000'\n                    Message: Success.\n                  TestRunnerId: 100\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n              - BadRequest\n              - Name-Versionの組み合わせが既に存在する\n              - 存在しない内部品質特性IDを指定した場合、400を返却する\n              - 存在しないタグIDを指定した場合、400を返却する\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'R15010'\n                  Message: invalid request.\n        '500':\n          description: |\n            サーバでの処理失敗\n            - SQLAlChemyError\n            - その他例外\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/testRunners/manifest':\n    post:\n      tags:\n        - TestRunner\n      summary: ait_manifest.jsonに基づくテストランナー追加.\n      description: |\n        * ait_manifest.jsonを受け取り、テストランナーを追加する  \n        * 名称とバージョンの組み合わせが既に存在する場合、400を返却する  \n        * 存在しないタグを指定した場合、400を返却する  \n      requestBody:\n        description: 「ait_manifest.json」を参照.\n        content: {}\n      responses:\n        '200':\n          description: 追加正常終了\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - TestRunnerId\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  TestRunnerId:\n                    type: integer\n                example:\n                  Result:\n                    Code: 'A12000'\n                    Message: Success.\n                  TestRunnerId: 100\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n              - BadRequest\n              - Name-Versionの組み合わせが既に存在する\n              - 存在しないタグIDを指定した場合、400を返却する\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'A14XXX' #XXXはインクリメントしていく\n                  Message: invalid request.\n        '500':\n          description: |\n            サーバでの処理失敗\n            - SQLAlChemyError\n            - その他例外\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriotions/runners':\n    post:\n      tags:\n        - Test descriotions\n      summary: テスト実行.\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くテスト機能を実行する。※非同期処理\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        description: 非同期処理コマンド\n        content:\n          application/json:\n            schema:\n              required:\n                - Command\n                - TestDescriptionIds\n              properties:\n                Command:\n                  type: string\n                TestDescriptionIds:\n                  type: array\n                  description: |\n                    - コマンドの反映先となるtestDescriptionIDを指定する。  \n                    - 複数のtestDescriptionIDを指定可能とする。  \n                    - すべてのtestDescriptionに対して実施したい場合は、空を指定する。  \n                  items:\n                    type: integer\n            example:\n              Command: AsyncStart\n              TestDescriptionIds: [1, 2]\n      responses:\n        '200':\n          description: テスト実行要求受付日時\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - Job\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  Job:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      StartDateTime:\n                        type: string\n                example:\n                  Result:\n                    Code: 'R12000'\n                    Message: Success.\n                  Job:\n                    Id: 1\n                    StartDateTime: '2019-10-25 15:00:00T+0900'\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'R18000'\n                  Message: invalid request.\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'R14000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'R10000 or R19000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriotions/run-status':\n    get:\n      tags:\n        - Test descriotions\n      summary: テスト実行ジョブのステータスと結果取得.\n      description: 実行指示した各job(test description)のステータス・結果を取得する\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: テスト実行ジョブのステータスと結果\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - Job\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  Job:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Status:\n                        type: string\n                        description: |\n                          以下のステータスを定義する  \n                          この状態は各runのマージした内容となる  \n                            * QUEUED : すべてのrunがQUEUED\n                            * RUNNING : すべてのrunで、1件でもRUNNINGがある場合(優先レベル2)\n                            * DONE : すべてのrunがDONE\n                            * CANCELLING : すべてのrunで、1件でもCANCELLINGがある場合(優先レベル1→最優先)  \n                              α版では実装範囲外\n                            * CANCELLED : すべてのrunがCANCELLED  \n                              α版では実装範囲外\n                      Result:\n                        type: string\n                        description: |\n                          以下の結果を定義する  \n                          この状態は各runのマージした内容となる  \n                            * OK : すべてのrunがOK\n                            * NG : すべてのrunで、1件でもNGがある場合(優先レベル2)\n                            * ERR : すべてのrunで、1件でもERRがある場合(優先レベル1→最優先)\n                            * NA : すべてのrunで、1件でもNAがある場合(優先レベル3)\n                      ResultDetail:\n                        type: string\n                        description: |\n                          実行runのOK、NG、ERR、NAのそれぞれ件数内訳を返却する  \n                          \"OK:XX NG:XX ERR:XX NA:XX\"\n                      Runs:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          TestDescriptionID:\n                            type: integer\n                          Status:\n                            type: string\n                            description: |\n                              以下のステータスを定義する  \n                                * NA : 未実行\n                                * QUEUED : 実行キューに登録済み\n                                * RUNNING : 実行中\n                                * DONE : 実行完了\n                                * CANCELLING : キャンセル指示済み  \n                                  α版では実装範囲外\n                                * CANCELLED : キャンセル済み  \n                                  α版では実装範囲外\n                          Result:\n                            type: string\n                            description: |\n                              以下の結果を定義する  \n                                * OK : テスト指標達成\n                                * NG : テスト指標未達成\n                                * ERR : テスト実行でエラー発生\n                                * NA : テスト未実施\n                          ResultDetail:\n                            type: string\n                            description: |\n                              以下の詳細結果を定義する  \n                example:\n                  Result:\n                    Code: 'R22000'\n                    Message: Success.\n                  Job:\n                    Id: 1\n                    Status: 'RUNNING'\n                    Result: 'NA'\n                    ResultDetail: 'OK:1 NG:0 ERR:0 NA:1'\n                  Runs:\n                    - Id: 1\n                      TestDescriptionID: 1\n                      Status: 'DONE'\n                      Result: 'OK'\n                      ResultDetail: 'OK'\n                    - Id: 2\n                      TestDescriptionID: 2\n                      Status: 'RUNNING'\n                      Result: 'NA'\n                      ResultDetail: 'NA'\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'R24000'\n                  Message: not found page.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions':\n    get:\n      tags:\n        - Test descriotions\n      summary: テストディスクリプション一覧表示.\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くテストディスクリプション一覧を取得し、テストディスクリプション一覧を表示\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: テストディスクリプション情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - Test\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  Test:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Status:\n                        type: string\n                      Result:\n                        type: string\n                      ResultDetail:\n                        type: string\n                      TestDescriptions:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            Id:\n                              type: integer\n                            ParentID:\n                              type: integer\n                              description: |\n                                親TestDescriptionIDを返却する。  \n                                親がいない場合、この項目は存在しない。  \n                            Name:\n                              type: string\n                            Result:\n                              type: string\n                            ResultDetail:\n                              type: string\n                            CreationDatetime:\n                              description: 該当のテストデスクリプションが作成されたシステム日時を返却します\n                              type: string\n                            UpdateDatetime:\n                              type: string\n                            TargetInventories:\n                              type: array\n                              description: |\n                                このTestDescriptionが対象とするインベントリ情報リストを返却する。  \n                              items:\n                                type: object\n                                properties:\n                                  Id:\n                                    type: integer\n                                  Name:\n                                    type: string\n                                  TemplateInventoryId:\n                                    type: integer\n                                    description: |\n                                      テンプレートになるターゲットインベントリIDを返却する。  \n                            Opinion:\n                              type: string\n                              description: |\n                                このTestDescriptionの見解を返却する。未設定の場合、空文字で返却する。  \n                            Star:\n                              type: boolean\n                              description: |\n                                このTestDescriptionがお気に入りに指定されているかどうかを真偽値で返却する。  \n                            TestRunnerId:\n                              type: integer\n                              description: |\n                                TestDescriptionの元になったテストランナー（AIT）のIDを返却する。\n                example:\n                  Result:\n                    Code: 'T12000'\n                    Message: Success.\n                  Test:\n                    Id: 1\n                    Status: DONE\n                    Result: NG\n                    ResultDetail: OK 2 / NG 1 / NA 1\n                    TestDescriptions:\n                      - Id: 1\n                        Name: NeuronCoverage\n                        Result: OK\n                        CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                        UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                        TargetInventories: [\n                          {\n                            \"Id\": 1,\n                            \"Name\": \"TestDataset_1001\",\n                            \"TemplateInventoryId\": 1\n                          }\n                        ]\n                        Opinion: \"ニューロンカバレージが規定のXX%以上であり、品質に問題なしと判断した。\"\n                        Star: true\n                        TestRunnerId: 11\n                      - Id: 2\n                        Name: MetamorphicTesting\n                        Result: OK\n                        ResultDetail: OK\n                        CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                        UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                        TargetInventories: [\n                          {\n                            \"Id\": 2,\n                            \"Name\": \"TestDataset_1005\",\n                            \"TemplateInventoryId\": 2\n                          },\n                          {\n                            \"Id\": 3,\n                            \"Name\": \"TrainedModel_1005\",\n                            \"TemplateInventoryId\": 3\n                          }\n                        ]\n                        Opinion: \"\"\n                        Star: false\n                        TestRunnerId: 12\n                      - Id: 3\n                        Name: AttributeCoverage\n                        Result: NG\n                        ResultDetail: AttributeCoverage is not enough\n                        CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                        UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                        TargetInventories: [\n                          {\n                            \"Id\": 2,\n                            \"Name\": \"TestDataset_1005\",\n                            \"TemplateInventoryId\": 4\n                          }\n                        ]\n                        Opinion: \"\"\n                        Star: false\n                        TestRunnerId: 13\n                      - Id: 4\n                        ParentID: 3\n                        Name: AttributeCoverage\n                        Result: NA\n                        ResultDetail: NA\n                        CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                        UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                        TargetInventories: [\n                          {\n                            \"Id\": 4,\n                            \"Name\": \"TestDataset_1018\",\n                            \"TemplateInventoryId\": 5\n                          },\n                          {\n                            \"Id\": 5,\n                            \"Name\": \"TrainedModel_1007\",\n                            \"TemplateInventoryId\": 6\n                          }\n                        ]\n                        Opinion: \"\"\n                        Star: false\n                        TestRunnerId: 14\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T14000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T10000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n    post:\n      tags:\n        - Test descriotions\n      summary: テストディスクリプション追加\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付くテストディスクリプション詳細情報を追加する\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        description: テストディスクリプション詳細追加情報\n        content:\n          application/json:\n            schema:\n              required:\n                - Name\n                - QualityDimensionID\n                - QualityMeasurements\n                - TargetInventories\n                - TestRunner\n              properties:\n                Name:\n                  type: string\n                QualityDimensionID:\n                  type: integer\n                  description: |\n                    内部品質プロパティIDを指定する。  \n                    存在しない内部品質プロパティIDを指定した場合、422を返却する。  \n                ParentID:\n                  type: integer\n                  description: |\n                    親(コピー元)のTestDescriptionIDを指定する。  \n                    コピーではなく、新規作成の場合は指定しない。  \n                    存在しないTestDescriptionIDを指定した場合、422を返却する。  \n                QualityMeasurements:\n                  type: object\n                  properties:\n                    Id:\n                      type: integer\n                      description: |\n                        メジャーメントのIDを指定する。\n                    Value:\n                      type: string\n                    RelationalOperatorId:\n                      type: integer\n                    Enable:\n                      type: boolean\n                      description: |\n                        trueの場合このMeasurementを使用する。  \n                        falseの場合は使用しない。  \n                        trueの場合はValue、RelationalOperatorIdが共に設定されていることが前提。  \n                        上記が未設定の場合、400を返却する。\n                TargetInventories:\n                  type: array\n                  items:\n                    properties:\n                      Id:\n                        type: integer\n                      InventoryId:\n                        type: integer\n                      TemplateInventoryId:\n                        type: integer\n                        description: |\n                          テンプレートになるターゲットインベントリIDを指定する。  \n                          値はGET testrunner で返却されたTargetInventoryのIDを指定する。  \n                TestRunner:\n                  type: object\n                  properties:\n                    Id:\n                      type: integer\n                      description: |\n                        テストランナーのIDを指定する。\n                    Params:\n                      type: object\n                      properties:\n                        TestRunnerParamTemplateId:\n                          type: integer\n                          description: |\n                            テストランナーのパラメータIDを指定する。\n                        Value:\n                          type: string\n            example:\n              Name: Neuron Coverage\n              ParentID: 10\n              QualityDimensionID: 1\n              QualityMeasurements:\n                Id: 1\n                Value: \"60\"\n                RelationalOperatorId: 1\n                Enable: true\n              TargetInventories:\n                - Id: 1\n                  InventoryId: 5\n                  TemplateInventoryId: 1\n                - Id: 2\n                  InventoryId: 4\n                  TemplateInventoryId: 2\n              TestRunner:\n                Id: 1\n                Params:\n                  - TestRunnerParamTemplateId: 1\n                    Value: \"0.5\"\n                  - TestRunnerParamTemplateId: 2\n                    Value: \"0.3\"\n                  - TestRunnerParamTemplateId: 3\n                    Value: \"1.0\"\n      responses:\n        '200':\n          description: 登録完了通知\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T22000'\n                  Message: Success.\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T28000'\n                  Message: invalid request.\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T24000'\n                  Message: not found page.\n        '422':\n          description: |\n            不正リクエスト\n            - BadRequest\n            - SQLAlChemyError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T20000 or I29000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/{testTestDescriptionsId}':\n    get:\n      tags:\n        - Test descriotions\n      summary: テストディスクリプション詳細表示.\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のテストディスクリプションIDを指定し、そのテストディスクリプションの詳細情報を取得\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n        - name: testTestDescriptionsId\n          in: path\n          description: テストディスクリプションId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: テストディスクリプションの詳細情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - TestDescriptionDetail\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  TestDescriptionDetail:\n                    type: object\n                    properties:\n                      Id:\n                        type: integer\n                      Name:\n                        type: string\n                      ParentID:\n                        type: integer\n                        description: |\n                          親TestDescriptionIDを返却する。  \n                          親がいない場合、この項目は存在しない。  \n                      QualityDimension:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                      Opinion:\n                        type: string\n                      QualityMeasurements:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                          Description:\n                            type: string\n                          Structure:\n                            type: string\n                          Value:\n                            type: number\n                          RelationalOperatorId:\n                            type: integer\n                          Enable:\n                            type: boolean\n                            description: |\n                              trueの場合このMeasurementを使用する。  \n                              falseの場合は使用しない。  \n                              trueの場合はValue、RelationalOperatorIdが共に設定されていることが前提。\n                      TargetInventories:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            Id:\n                              type: integer\n                            TemplateInventoryId:\n                              type: integer\n                              description: |\n                                テンプレートになるターゲットインベントリIDを返却する。  \n                            Name:\n                              type: string\n                            Type:\n                              type: string\n                            Description:\n                              type: string\n                      TestRunner:\n                        type: object\n                        properties:\n                          Id:\n                            type: integer\n                          Name:\n                            type: string\n                          Description:\n                            type: string\n                          Version:\n                            type: string\n                          Author:\n                            type: string\n                          Email:\n                            type: string\n                          Quality:\n                            type: string\n                          LandingPage:\n                            type: string\n                          params:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                Id:\n                                  type: integer\n                                Name:\n                                  type: string\n                                Value:\n                                  type: string\n                                Description:\n                                  type: string\n                      TestDescriptionResult:\n                        type: object\n                        properties:\n                          Summary:\n                            type: string\n                          Datail:\n                            type: string\n                          ErrorCode:\n                            type: string\n                            description: |\n                              エラーコードを返却する。  \n                              エラーが発生していない場合、この項目は存在しない。  \n                                * E101:パラメータ定義不正  \n                                * E102:インベントリ、パラメータ不正  \n                                * E201:AIT実行前エラー  \n                                * E901:処理エラー  \n                                * E998:IF不整合(プログラム不良)  \n                                * E999:メモリ不足などのシステムエラー  \n                          LogFile:\n                            type: string\n                          Graphs:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                Id:\n                                  type: integer\n                                Name:\n                                  type: string\n                                FileName:\n                                  type: string\n                                Description:\n                                  type: string\n                                GraphType:\n                                  type: string\n                                ReportRequired:\n                                  type: boolean\n                                ReportIndex:\n                                  type: string\n                                ReportName:\n                                  type: string\n                                Graph:\n                                  type: string\n                          Downloads:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                Id:\n                                  type: integer\n                                Name:\n                                  type: string\n                                FileName:\n                                  type: string\n                                Description:\n                                  type: string\n                                DownloadURL:\n                                  type: string\n                          CreationDatetime:\n                            description: 該当のテストデスクリプションが作成されたシステム日時を返却します\n                            type: string\n                          UpdateDatetime:\n                            type: string\n                          Star:\n                            type: boolean\n                            description: |\n                              このTestDescriptionがお気に入りに指定されているかどうかを真偽値で返却する。  \n                example:\n                  Result:\n                    Code: 'T32000'\n                    Message: Success.\n                  TestDescriptionDetail:\n                    Id: 1\n                    Name: NeuronCoverage\n                    ParentID: 3\n                    QualityDimension:\n                      id: 5\n                      Name: 学習の安定性\n                    Opinion: 見解\n                    QualityMeasurements:\n                      id: 1\n                      Name: 学習モデルの敵対的サンプル安定性計測\n                      Value: \"80\"\n                      Description: 学習モデルの安定性評価指標\n                      Structure: single\n                      RelationalOperatorId: 1\n                      Enable: true\n                    TargetInventories:\n                      - Id: 4\n                        Name: TestDataset_1018\n                        TemplateInventoryId: 1\n                        Type: \"dataset\"\n                        Description: \"1枚の手書き文字データ(28x28, png)のpng\"\n                      - Id: 5\n                        Name: TrainedModel_1007\n                        TemplateInventoryId: 2\n                        Type: \"model\"\n                        Description: \"学習モデル\"\n                    TestRunner:\n                      id: 1\n                      Name: neuron_coverage_v3.py\n                      Description: \"* データ入力形式: XXX\\n* MLエンジン: tensorflow-vX.X\\n* 出力: XXX\\n\"\n                      Author: \"John Smith\"\n                      Email: \"John Smith@aaa.com\"\n                      Version: \"1\"\n                      Quality: \"https://airc.aist.go.jp/aiqm/quality/internal/要求分析の十分性\"\n                      LandingPage: \"https://aithub.com/AITName/AITVersion\"\n                      Params:\n                        - Id: 1\n                          Name: Threshold\n                          Description: \"Threshold\"\n                          Value: \"0.5\"\n                        - Id: 2\n                          Name: Lower Limit\n                          Description: \"Lower Limit\"\n                          Value: \"0.3\"\n                        - Id: 3\n                          Name: Upper Limit\n                          Description: \"Upper Limit\"\n                          Value: \"1,0\"\n                    TestDescriptionResult:\n                      Summary: OK\n                      Detail: Current Coverage 85%\n                      LogFile: 'http://XXX'\n                      Graphs:\n                        - Id: 1\n                          GraphType: \"picture\"\n                          Name: \"distribution_graph\"\n                          FileName: \"distribution_graph_a.png\"\n                          Description: \"分布\"\n                          ReportRequired: False\n                          ReportIndex: 1\n                          ReportName: \"distribution_graph\"\n                          Graph: 'http://XXX'\n                        - Id: 2\n                          GraphType: \"picture\"\n                          Name: \"distribution_graph\"\n                          FileName: \"distribution_graph_b.png\"\n                          Description: \"分布\"\n                          ReportRequired: False\n                          ReportIndex: 2\n                          ReportName: \"distribution_graph\"\n                          Graph: 'http://XXX'\n                        - Id: 3\n                          GraphType: \"picture\"\n                          Name: \"distribution_graph\"\n                          FileName: \"distribution_graph_c.png\"\n                          Description: \"分布\"\n                          ReportRequired: False\n                          ReportIndex: 3\n                          ReportName: \"distribution_graph\"\n                          Graph: 'http://XXX'\n                      Downloads:\n                        - Id: 1\n                          Name: \"log\"\n                          FileName: \"log.txt\"\n                          Description: \"one image\"\n                          DownloadURL: 'http://XXX'\n                      CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                      UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                      Star: true\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T34000'\n                  Message: not found page.\n        '422':\n          description: |\n            不正リクエスト\n            - BadRequest\n            - SQLAlChemyError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T30000 or T39000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n    delete:\n      tags:\n        - Test descriotions\n      summary: テストディスクリプション詳細削除.\n      description: |\n        選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のテストディスクリプションIDを指定し、そのテストディスクリプションの詳細情報を削除する\n        指定したテストディスクリプションに子供がいる場合、子供も再帰的に削除する\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n        - name: testTestDescriptionsId\n          in: path\n          description: テストディスクリプションId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description:  削除成功\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T52000'\n                  Message: success.\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T54000'\n                  Message: not found page.\n        '422':\n          description: |\n            不正リクエスト\n            - BadRequest\n            - SQLAlChemyError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T50000 or T59000'\n                  Message: database error.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n    put:\n      tags:\n        - Test descriotions\n      summary: テストディスクリプション詳細編集.\n      description: 選択した機械学習コンポーネントとログインユーザの組織に紐付く対象のテストディスクリプションIDを指定し、そのテストディスクリプションの詳細情報を編集する。ただし、更新対象がテスト実行済み、かつ結果が成功の場合は編集不可とする。\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n        - name: testTestDescriptionsId\n          in: path\n          description: テストディスクリプションId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        description: テストディスクリプション詳細追加情報\n        content:\n          application/json:\n            schema:\n              required:\n                - Name\n                - QualityDimensionID\n                - QualityMeasurements\n                - TargetInventories\n                - TestRunner\n              properties:\n                Name:\n                  type: string\n                QualityDimensionID:\n                  type: integer\n                  description: |\n                    内部品質プロパティIDを指定する。  \n                    存在しない内部品質プロパティIDを指定した場合、422を返却する。\n                QualityMeasurements:\n                  type: object\n                  properties:\n                    Id:\n                      type: integer\n                    Value:\n                      type: string\n                    RelationalOperatorId:\n                      type: integer\n                    Enable:\n                      type: boolean\n                      description: |\n                        trueの場合このMeasurementを使用する。  \n                        falseの場合は使用しない。  \n                        trueの場合はValue、RelationalOperatorIdが共に設定されていることが前提。  \n                        上記が未設定の場合、400を返却する。\n                TargetInventories:\n                  type: array\n                  items:\n                    properties:\n                      Id:\n                        type: integer\n                      InventoryId:\n                        type: integer\n                      TemplateInventoryId:\n                        type: integer\n                        description: |\n                          テンプレートになるターゲットインベントリIDを設定する。  \n                TestRunner:\n                  type: object\n                  properties:\n                    Id:\n                      type: integer\n                    Params:\n                      type: object\n                      properties:\n                        TestRunnerParamTemplateId:\n                          type: integer\n                        Value:\n                          type: string\n            example:\n              Name: Neuron Coverage\n              QualityDimensionID: 1\n              QualityMeasurements:\n                Id: 1\n                Value: \"60\"\n                RelationalOperatorId: 1\n                Enable: true\n              TargetInventories:\n                - Id: 1\n                  InventoryId: 5\n                  TemplateInventoryId: 1\n                - Id: 2\n                  InventoryId: 4\n                  TemplateInventoryId: 1\n              TestRunner:\n                Id: 1\n                Params:\n                  - TestRunnerParamTemplateId: 1\n                    Value: \"0.5\"\n                  - TestRunnerParamTemplateId: 2\n                    Value: \"0.3\"\n                  - TestRunnerParamTemplateId: 3\n                    Value: \"1.0\"\n      responses:\n        '200':\n          description: テストディスクリプションの詳細情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - Job\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                example:\n                  Result:\n                    Code: 'T42000'\n                    Message: Success.\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - ValidationError\n              - TypeError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T48000'\n                  Message: invalid request.\n        '404':\n          description:  更新対象のテスト実行済み、かつ結果が成功の場合のエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T44000'\n                  Message: Cannot be edited if the test has been executed and the result is successful.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/{testTestDescriptionsId}/star':\n    post:\n      tags:\n        - Test descriotions\n      summary: お気に入り設定\n      description: 指定したテストディスクリプションをお気に入りに設定する\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n        - name: testTestDescriptionsId\n          in: path\n          description: テストディスクリプションId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: 設定\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T62000'\n                  Message: Success.\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T64000'\n                  Message: not found page.\n        '422':\n          description: |\n            不正リクエスト\n            - 削除済みテストディスクリプションを変更しようとした\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'I65000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/{testTestDescriptionsId}/unstar':\n    post:\n      tags:\n        - Test descriotions\n      summary: お気に入り設定解除\n      description: 指定したテストディスクリプションをお気に入りから外す\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n        - name: testTestDescriptionsId\n          in: path\n          description: テストディスクリプションId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: 設定\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T72000'\n                  Message: Success.\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T74000'\n                  Message: not found page.\n        '422':\n          description: |\n            不正リクエスト\n            - 削除済みテストディスクリプションを変更しようとした\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T75000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/{testTestDescriptionsId}/ancestors':\n    get:\n      tags:\n        - Test descriotions\n      summary: 祖先テストディスクリプション一覧表示.\n      description: |\n        該当するテストディスクリプションの祖先リストを昇順（親→子）の順序で返却する。\n        返却するリストの最後尾には該当テストディスクリプションが付加される。\n        そのため、親のいないテストディスクリプションを指定した場合、\n        該当テストディスクリプション1つだけが返却される。\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n        - name: testTestDescriptionsId\n          in: path\n          description: テストディスクリプションId\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: テストディスクリプション情報\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                  - TestDescriptions\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  TestDescriptions:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        Id:\n                          type: integer\n                        ParentID:\n                          type: integer\n                          description: |\n                            親TestDescriptionIDを返却する。  \n                            親がいない場合、この項目は存在しない。  \n                        Name:\n                          type: string\n                        Result:\n                          type: string\n                        ResultDetail:\n                          type: string\n                        CreationDatetime:\n                          description: 該当のテストデスクリプションが作成されたシステム日時を返却します\n                          type: string\n                        UpdateDatetime:\n                          type: string\n                        TargetInventories:\n                          type: array\n                          description: |\n                            このTestDescriptionが対象とするインベントリ情報リストを返却する。  \n                          items:\n                            type: object\n                            properties:\n                              Id:\n                                type: integer\n                              Name:\n                                type: string\n                              TemplateInventoryId:\n                                type: integer\n                                description: |\n                                  テンプレートになるターゲットインベントリIDを返却する。  \n                        Opinion:\n                          type: string\n                          description: |\n                            このTestDescriptionの見解を返却する。未設定の場合、空文字で返却する。  \n                        Star:\n                          type: boolean\n                          description: |\n                            このTestDescriptionがお気に入りに指定されているかどうかを真偽値で返却する。  \n                        TestRunnerId:\n                          type: integer\n                          description: |\n                            TestDescriptionの元になったテストランナー（AIT）のIDを返却する。\n                example:\n                  Result:\n                    Code: 'T82000'\n                    Message: Success.\n                  TestDescriptions:\n                    - Id: 1\n                      Name: NeuronCoverage\n                      Result: OK\n                      CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                      UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                      TargetInventories: [\n                        {\n                          \"Id\": 1,\n                          \"Name\": \"TestDataset_1001\",\n                          \"TemplateInventoryId\": 1\n                        }\n                      ]\n                      Opinion: \"ニューロンカバレージが規定のXX%以上であり、品質に問題なしと判断した。\"\n                      Star: true\n                      TestRunnerId: 10\n                    - Id: 2\n                      ParentID: 1\n                      Name: MetamorphicTesting\n                      Result: OK\n                      ResultDetail: OK\n                      CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                      UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                      TargetInventories: [\n                        {\n                          \"Id\": 2,\n                          \"Name\": \"TestDataset_1005\",\n                          \"TemplateInventoryId\": 2\n                        },\n                        {\n                          \"Id\": 3,\n                          \"Name\": \"TrainedModel_1005\",\n                          \"TemplateInventoryId\": 3\n                        }\n                      ]\n                      Opinion: \"\"\n                      Star: false\n                      TestRunnerId: 10\n                    - Id: 3\n                      ParentID: 2\n                      Name: AttributeCoverage\n                      Result: NG\n                      ResultDetail: AttributeCoverage is not enough\n                      CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                      UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                      TargetInventories: [\n                        {\n                          \"Id\": 2,\n                          \"Name\": \"TestDataset_1005\",\n                          \"TemplateInventoryId\": 4\n                        }\n                      ]\n                      Opinion: \"\"\n                      Star: false\n                      TestRunnerId: 10\n                    - Id: 4\n                      ParentID: 3\n                      Name: AttributeCoverage\n                      Result: NA\n                      ResultDetail: NA\n                      CreationDatetime: \"2020-09-28T01:22:03.920542\"\n                      UpdateDatetime: \"2020-09-28T01:22:03.920542\"\n                      TargetInventories: [\n                        {\n                          \"Id\": 4,\n                          \"Name\": \"TestDataset_1018\",\n                          \"TemplateInventoryId\": 5\n                        },\n                        {\n                          \"Id\": 5,\n                          \"Name\": \"TrainedModel_1007\",\n                          \"TemplateInventoryId\": 6\n                        }\n                      ]\n                      Opinion: \"\"\n                      Star: false\n                      TestRunnerId: 10\n        '404':\n          description:  アクセスエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T84000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'T85000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/{OrganizerId}/mlComponents/{mlComponentsId}/testDescriptions/reportGenerator':\n    post:\n      tags:\n        - Test descriotions\n      summary: レポート生成器に対してコマンドを発行する.\n      description: |\n        発行コマンドは以下の通り。\n          - パラメータ設定\n          - レポート生成\n      parameters:\n        - name: OrganizerId\n          in: path\n          description: 組織ID\n          required: true\n          schema:\n            type: string\n        - name: mlComponentsId\n          in: path\n          description: 機械学習コンポーネントId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        description: コマンド\n        content:\n          application/json:\n            schema:\n              required:\n                - Command\n                - Destination\n              properties:\n                Command:\n                  type: string\n                  description: |\n                    - `SetParam` : パラメータ設定  \n                    - `Generate` : レポート生成  \n                Destination:\n                  type: array\n                  description: |\n                    - コマンドの反映先となるtestDescriptionIDを指定する。  \n                    - 複数のtestDescriptionIDを指定可能とする。  \n                    - すべてのtestDescriptionに対して実施したい場合は、空を指定する。  \n                  items:\n                    type: string\n                Params:\n                  type: object\n                  properties:\n                    Opinion:\n                      type: string\n                      description: |\n                        - 変更する必要がない場合、省略する\n                    Graphs:\n                      type: array\n                      description: |\n                        - リストから省略したgraphは出力を無しに設定する\n                      items:\n                        type: object\n                        properties:\n                          GraphId:\n                            type: integer\n                            description: |\n                              - `GET /testDescriptions/{testTestDescriptionsId}` で返却されたGraphs/Idを指定する  \n                          ReportRequired:\n                            type: boolean\n                            description: |\n                              - レポートの出力有無を指定する  \n                          ReportIndex:\n                            type: integer\n                            description: |\n                              - レポートの出力順序(昇順)を指定する  \n                              - 同じ順序を指定した場合、エラーにはせず、ソートアルゴリズムで結果が変わることに留意すること  \n                              - ReportRequiredが`false`の場合、省略する（指定されても無視する）\n                          ReportName:\n                            type: string\n                            description: |\n                              - レポートの出力名称を指定する  \n                              - ReportRequiredが`false`の場合、省略する（指定されても無視する）\n                  description: |\n                    - `SetParam` : グラフごとのレポート表示設定  \n                    - `Generate` : レポート生成  \n                      - 指定不要（指定しても無視する）\n                  items:\n                    type: object\n                    additionalProperties:\n                      type: string\n            examples:\n              SetParam: # example1\n                value:\n                  Command: SetParam\n                  Destination: [\"1\"]\n                  Params: \n                    Opinion: \"XXX\"\n                    Graphs: [\n                      {\n                        \"GraphId\": 1,\n                        \"ReportRequired\": True,\n                        \"ReportIndex\": 1,\n                        \"ReportName\": \"Graph-A\"\n                      },\n                      {\n                        \"GraphId\": 2,\n                        \"ReportRequired\": True,\n                        \"ReportIndex\": 2,\n                        \"ReportName\": \"Graph-B\"\n                      },\n                      {\n                        \"GraphId\": 2,\n                        \"ReportRequired\": False,\n                      }\n                    ]\n              GenerateAll: # example2\n                value:\n                  Command: Generate\n                  Destination: []\n              GeneratePart: # example3\n                value:\n                  Command: Generate\n                  Destination: [\"1\",\"3\"]\n      responses:\n        '200':\n          description: コマンドの実行結果を返却する\n          content:\n            application/json:\n              schema:\n                required:\n                  - Result\n                properties:\n                  Result:\n                    type: object\n                    properties:\n                      Code:\n                        type: integer\n                      Massage:\n                        type: string\n                  OutParams:\n                    type: array\n                    description: |\n                      - `Generate` コマンド時に返却する。\n                        - \"ReportUrl\": \"レポートのダウンロードURL\"\n                    items:\n                      type: object\n                      additionalProperties:\n                        type: string\n              examples:\n                Generate:\n                  value:\n                    Result:\n                      Code: 'D12000'\n                      Message: Success.\n                    OutParams: [\n                      ReportUrl: \"http://xxx\"\n                    ]\n        '400':\n          description: |\n            以下の無効なリクエストを受信したときに返却する。\n              - 未定義のCommandが指定された。\n              - 存在しないグラフ種別をParamsのGraphTypeで指定された。\n              - ValidationError\n              - TypeError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'D18000'\n                  Message: invalid request.\n        '404':\n          description: |\n            - 指定したOrganizerIDとmlComponentsIDの組み合わせが存在しない。またはアクセス権限がない。\n            - Destinationに指定したTestDescriptionが存在しない。\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'D14000'\n                  Message: not found page.\n        '422':\n          description:  不正リクエスト\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'D10000'\n                  Message: bad request.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n  '/download/{DownloadId}':\n    get:\n      tags:\n        - Download\n      summary: 指定されたIDに紐づくファイルをダウンロードする.\n      description: |\n        指定したIDに紐づくファイルをダウンロードする\n      parameters:\n        - name: DownloadId\n          in: path\n          description: ダウンロードID\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: ダウンロードファイルを返却する\n        '404':\n          description: |\n            - 指定したIDが存在しない\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\n              example:\n                Result:\n                  Code: 'D16000'\n                  Message: not found page.\n        '500':\n          description: 予期せぬエラー\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Result'\ncomponents:\n  schemas:\n    Result:\n      type: object\n      required:\n        - Code\n        - Massage\n      properties:\n        Result:\n          type: object\n          properties:\n            Code:\n              type: integer\n            Massage:\n              type: string\n          example:\n            Code: 'XX9999(XX:機能分類コード)'\n            Message: unexpected error.\n",
			"canonicalURL": "/github.com/aistairc/qunomon@d4e9c5cb569b16addfbe6c33c73812065065a1df/-/blob/doc/API%E4%BB%95%E6%A7%98%E6%9B%B8/tf2_backend_API%E4%BB%95%E6%A7%98%E6%9B%B8.yml",
			"externalURLs": [
				{
					"url": "https://github.com/aistairc/qunomon/blob/d4e9c5cb569b16addfbe6c33c73812065065a1df/doc/API仕様書/tf2_backend_API仕様書.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /testRunners/manifest: post: requestBody: content must have at least one entry"
}