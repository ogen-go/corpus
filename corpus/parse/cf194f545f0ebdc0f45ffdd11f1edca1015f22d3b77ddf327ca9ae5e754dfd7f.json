{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hashgraph/hedera-mirror-node"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "hedera-mirror-rest/api/v1/openapi.yml",
			"byteSize": 127769,
			"content": "openapi: 3.0.3\npaths:\n  /api/v1/accounts:\n    get:\n      summary: List account entities on network\n      description: Returns a list of all account entity items on the network.\n      operationId: listAccounts\n      parameters:\n        - $ref: '#/components/parameters/accountBalanceQueryParam'\n        - $ref: '#/components/parameters/accountIdQueryParam'\n        - $ref: '#/components/parameters/accountPublicKeyQueryParam'\n        - $ref: '#/components/parameters/balanceQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountsResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - accounts\n  /api/v1/accounts/{idOrAliasOrEvmAddress}:\n    get:\n      summary: Get account by alias, id, or evm address\n      description: |\n        Return the account transactions and balance information given an account alias, an account id, or an evm address\n      operationId: getAccountByIdOrAliasOrEvmAddress\n      parameters:\n        - $ref: '#/components/parameters/accountIdOrAliasOrEvmAddressPathParam'\n        - $ref: '#/components/parameters/transactionTypeQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountBalanceTransactions'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - accounts\n  /api/v1/accounts/{idOrAliasOrEvmAddress}/nfts:\n    get:\n      summary: Get nfts for an account info\n      description: |\n        Returns information for all non-fungible tokens for an account.\n\n        ## Ordering\n        When considering NFTs, their order is governed by a combination of their numerical **token.Id** and **serialnumber** values, with **token.id** being the parent column.\n        A serialnumbers value governs its order within the given token.id\n\n        In that regard, if a user acquired a set of NFTs in the order (2-2, 2-4 1-5, 1-1, 1-3, 3-3, 3-4), the following layouts illustrate the ordering expectations for ownership listing\n        1. **All NFTs in ASC order**: 1-1, 1-3, 1-5, 2-2, 2-4, 3-3, 3-4\n        2. **All NFTs in DESC order**: 3-4, 3-3, 2-4, 2-2, 1-5, 1-3, 1-1\n        3. **NFTs above 1-1 in ASC order**: 1-3, 1-5, 2-2, 2-4, 3-3, 3-4\n        4. **NFTs below 3-3 in ASC order**: 1-1, 1-3, 1-5, 2-2, 2-4\n        5. **NFTs between 1-3 and 3-3 inclusive in DESC order**: 3-4, 3-3, 2-4, 2-2, 1-5, 1-3\n\n        Note: The default order for this API is currently DESC\n\n        ## Filtering\n        When filtering there are some restrictions enforced to ensure correctness and scalability.\n\n        **The table below defines the restrictions and support for the NFT ownership endpoint**\n\n        | Query Param   | Comparison Operator | Support | Description           | Example |\n        | ------------- | ------------------- | ------- | --------------------- | ------- |\n        | token.id      | eq                  | Y       | Single occurrence only. | ?token.id=X |\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | Single occurrence only. | ?token.id=lte:X |\n        |               | gt(e)               | Y       | Single occurrence only. | ?token.id=gte:X |\n        | serialnumber  | eq                  | Y       | Single occurrence only. Requires the presence of a **token.id** query | ?serialnumber=Y |\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | Single occurrence only. Requires the presence of an **lte** **token.id** query | ?token.id=lte:X&serialnumber=lt:Y |\n        |               | gt(e)               | Y       | Single occurrence only. Requires the presence of an **gte** **token.id** query | ?token.id=gte:X&serialnumber=gt:Y |\n        | spender.id    | eq                  | Y       | | ?spender.id=Z |\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | | ?spender.id=lt:Z |\n        |               | gt(e)               | Y       | | ?spender.id=gt:Z |\n\n        Note: When searching across a range for individual NFTs a **serialnumber** with an additional **token.id** query filter must be provided.\n        Both filters must be a single occurrence of **gt(e)** or **lt(e)** which provide a lower and or upper boundary for search.\n\n      operationId: listNftByAccountId\n      parameters:\n        - $ref: '#/components/parameters/accountIdOrAliasOrEvmAddressPathParam'\n        - $ref: '#/components/parameters/tokenIdQueryParam'\n        - $ref: '#/components/parameters/serialNumberQueryParam'\n        - $ref: '#/components/parameters/spenderIdQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Nfts'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - accounts\n  /api/v1/accounts/{idOrAliasOrEvmAddress}/allowances/crypto:\n    get:\n      summary: Get crypto allowances for an account info\n      description: Returns information for all crypto allowances for an account.\n      operationId: listCryptoAllowancesByAccountId\n      parameters:\n        - $ref: '#/components/parameters/accountIdOrAliasOrEvmAddressPathParam'\n        - $ref: '#/components/parameters/spenderIdQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CryptoAllowancesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - accounts\n  /api/v1/accounts/{idOrAliasOrEvmAddress}/allowances/tokens:\n    get:\n      summary: Get fungible token allowances for an account\n      description: |\n        Returns information for fungible token allowances for an account.\n\n        ## Ordering\n        The order is governed by a combination of the spender id and the token id values, with spender id being the parent column.\n        The token id value governs its order within the given spender id.\n\n        Note: The default order for this API is currently ASC\n\n        ## Filtering\n        When filtering there are some restrictions enforced to ensure correctness and scalability.\n\n        **The table below defines the restrictions and support for the token allowances endpoint**\n\n        | Query Param   | Comparison Operator | Support | Description           | Example |\n        | ------------- | ------------------- | ------- | --------------------- | ------- |\n        | spender.id    | eq                  | Y       | Single occurrence only. | ?spender.id=X |\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | Single occurrence only. | ?spender.id=lte:X |\n        |               | gt(e)               | Y       | Single occurrence only. | ?spender.id=gte:X |\n        | token.id      | eq                  | Y       | Single occurrence only. Requires the presence of a **spender.id** query | ?token.id=lt:Y |\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | Single occurrence only. Requires the presence of an **lte** **spender.id** query | ?spender.id=lte:X&token.id=lt:Y |\n        |               | gt(e)               | Y       | Single occurrence only. Requires the presence of an **gte** **spender.id** query | ?spender.id=gte:X&token.id=gt:Y |\n\n        Both filters must be a single occurrence of **gt(e)** or **lt(e)** which provide a lower and or upper boundary for search.\n\n      operationId: listTokenAllowancesByAccountId\n      parameters:\n        - $ref: '#/components/parameters/accountIdOrAliasOrEvmAddressPathParam'\n        - $ref: '#/components/parameters/spenderIdQueryParam'\n        - $ref: '#/components/parameters/tokenIdQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenAllowancesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - accounts\n  /api/v1/balances:\n    get:\n      summary: List account balances\n      description: Returns a timestamped list of account balances on the network. This includes both HBAR and token balances for accounts.\n      operationId: listAccountBalances\n      parameters:\n        - $ref: '#/components/parameters/accountIdQueryParam'\n        - $ref: '#/components/parameters/accountBalanceQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n        - $ref: '#/components/parameters/accountPublicKeyQueryParam'\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BalancesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - balances\n  /api/v1/blocks:\n    get:\n      summary: List blocks\n      description: Returns a list of blocks on the network.\n      operationId: listBlocks\n      parameters:\n        - $ref: '#/components/parameters/blockNumberQueryParam'\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n        - $ref: '#/components/parameters/limitQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlocksResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - blocks\n  /api/v1/blocks/{hashOrNumber}:\n    get:\n      summary: Get block by hash or number\n      description: Returns the block information by given hash or number.\n      operationId: getByHashOrNumber\n      parameters:\n        - $ref: '#/components/parameters/hashOrNumberPathParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Block'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - blocks\n  /api/v1/contracts:\n    get:\n      summary: List contract entities on network\n      description: Returns a list of all contract entity items on the network.\n      operationId: listContracts\n      parameters:\n        - $ref: '#/components/parameters/contractIdQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractsResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - contracts\n  /api/v1/contracts/{contractIdOrAddress}:\n    get:\n      summary: Get contract by id\n      description: Return the contract information given an id\n      operationId: getContractById\n      parameters:\n        - $ref: '#/components/parameters/contractIdPathParam'\n        - $ref: '#/components/parameters/timestampQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - contracts\n  /api/v1/contracts/{contractIdOrAddress}/results:\n    get:\n      summary: List contract results from a contract on the network\n      description: Returns a list of all ContractResults for a contract's function executions.\n      operationId: listContractResults\n      parameters:\n        - $ref: '#/components/parameters/contractIdPathParam'\n        - $ref: '#/components/parameters/fromQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/contractsBlockNumberQueryParam'\n        - $ref: '#/components/parameters/blockHashQueryParam'\n        - $ref: '#/components/parameters/transactionIndexQueryParam'\n        - $ref: '#/components/parameters/internalQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractResultsResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - contracts\n  /api/v1/contracts/{contractIdOrAddress}/results/{timestamp}:\n    get:\n      summary: Get the contract result from a contract on the network executed at a given timestamp\n      description: Returns a single ContractResult for a contract's function executions at a specific timestamp.\n      operationId: getContractResultByIdAndTimestamp\n      parameters:\n        - $ref: '#/components/parameters/contractIdPathParam'\n        - $ref: '#/components/parameters/timestampPathParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractResultResponse'\n        206:\n          description: Partial Content\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractResultResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - contracts\n  /api/v1/contracts/results:\n    get:\n      summary: List contract results from all contracts on the network\n      description: Returns a list of all ContractResults for all contract's function executions.\n      operationId: listAllContractsResults\n      parameters:\n        - $ref: '#/components/parameters/fromQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/contractsBlockNumberQueryParam'\n        - $ref: '#/components/parameters/blockHashQueryParam'\n        - $ref: '#/components/parameters/transactionIndexQueryParam'\n        - $ref: '#/components/parameters/internalQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractResultsResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - contracts\n  /api/v1/contracts/results/{transactionIdOrHash}:\n    get:\n      summary: Get the contract result from a contract on the network for a given transactionId or ethereum transaction hash\n      description: Returns a single ContractResult for a contract's function executions for a given transactionId or ethereum transaction hash.\n      operationId: getContractResultByTransactionIdOrHash\n      parameters:\n        - $ref: '#/components/parameters/transactionIdOrEthHashPathParam'\n        - $ref: '#/components/parameters/nonceQueryParamWithDefault'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractResultResponse'\n        206:\n          description: Partial Content\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractResultResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - contracts\n  /api/v1/contracts/{contractIdOrAddress}/results/logs:\n    get:\n      summary: List contract logs from a contract on the network\n      description: |\n        Search the logs of a specific contract across multiple contract calls. Chained logs are not\n        included but can be found by calling `/api/v1/contracts/{contractId}/results/{timestamp}`\n        or `/api/v1/contracts/results/{transactionId}`. When searching by topic a timestamp parameter must be supplied\n        and span a time range of at most seven days.\n\n        ## Ordering\n        The order is governed by the combination of timestamp and index values. If the index param is omitted, the order is determined by the timestamp only.\n\n        Note: The default order for this API is currently DESC\n\n        ## Filtering\n        When filtering there are some restrictions enforced to ensure correctness and scalability.\n\n        **The table below defines the restrictions and support for the token allowances endpoint**\n\n        | Query Param   | Comparison Operator | Support | Description           | Example |\n        | ------------- | ------------------- | ------- | --------------------- | ------- |\n        | index         | eq                  | Y       | Single occurrence only. Requires the presence of timestamp | ?index=X |\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | Single occurrence only. Requires the presence of timestamp | ?index=lte:X |\n        |               | gt(e)               | Y       | Single occurrence only. Requires the presence of timestamp | ?index=gte:X |\n        | timestamp     | eq                  | Y       | Single occurrence only. | ?timestamp=Y\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | Single occurrence only. Optional second timestamp **gt(e)** | ?timestamp=lte:Y\n        |               | gt(e)               | Y       | Single occurrence only. Optional second timestamp **lt(e)** | ?timestamp=gte:Y\n\n\n        Both filters must be a single occurrence of **gt(e)** or **lt(e)** which provide a lower and or upper boundary for search.\n\n      operationId: listContractLogs\n      parameters:\n        - $ref: '#/components/parameters/contractIdPathParam'\n        - $ref: '#/components/parameters/logIndexQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/logTopic0QueryParam'\n        - $ref: '#/components/parameters/logTopic1QueryParam'\n        - $ref: '#/components/parameters/logTopic2QueryParam'\n        - $ref: '#/components/parameters/logTopic3QueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractLogsResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - contracts\n  /api/v1/contracts/results/logs:\n    get:\n      summary: List contracts logs across many contracts on the network\n      description: |\n        Search the logs across many contracts with multiple contract calls. Chained logs are not\n        included but can be found by calling `/api/v1/contracts/{contractId}/results/{timestamp}`\n        or `/api/v1/contracts/results/{transactionId}`. When searching by topic a timestamp parameter must be supplied\n        and span a time range of at most seven days.\n\n        ## Ordering\n        The order is governed by the combination of timestamp and index values. If the index param is omitted, the order is determined by the timestamp only.\n\n        Note: The default order for this API is currently DESC\n\n        ## Filtering\n        When filtering there are some restrictions enforced to ensure correctness and scalability.\n\n        **The table below defines the restrictions and support for the token allowances endpoint**\n\n        | Query Param   | Comparison Operator | Support | Description           | Example |\n        | ------------- | ------------------- | ------- | --------------------- | ------- |\n        | index         | eq                  | Y       | Single occurrence only. Requires the presence of timestamp | ?index=X |\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | Single occurrence only. Requires the presence of timestamp | ?index=lte:X |\n        |               | gt(e)               | Y       | Single occurrence only. Requires the presence of timestamp | ?index=gte:X |\n        | timestamp     | eq                  | Y       | Single occurrence only. | ?timestamp=Y\n        |               | ne                  | N       | | |\n        |               | lt(e)               | Y       | Single occurrence only. Optional second timestamp **gt(e)** | ?timestamp=lte:Y\n        |               | gt(e)               | Y       | Single occurrence only. Optional second timestamp **lt(e)** | ?timestamp=gte:Y\n\n\n        Both filters must be a single occurrence of **gt(e)** or **lt(e)** which provide a lower and or upper boundary for search.\n      operationId: listContractsLogs\n      parameters:\n        - $ref: '#/components/parameters/logIndexQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/logTopic0QueryParam'\n        - $ref: '#/components/parameters/logTopic1QueryParam'\n        - $ref: '#/components/parameters/logTopic2QueryParam'\n        - $ref: '#/components/parameters/logTopic3QueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractLogsResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - contracts\n  /api/v1/network/exchangerate:\n    get:\n      summary: Get the network exchange rate to estimate costs\n      description: Returns the network's exchange rate, current and next.\n      operationId: getNetworkExchangeRate\n      parameters:\n        - $ref: '#/components/parameters/timestampQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkExchangeRateSetResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        500:\n          $ref: '#/components/responses/ServiceUnavailableError'\n      tags:\n        - network\n  /api/v1/network/fees:\n    get:\n      summary: Get the network fees\n      description: Returns the estimated gas in tinybars per each transaction type. Default order is ASC. Currently only `ContractCall`, `ContractCreate` and `EthereumTransaction` transaction types are supported.\n      operationId: getNetworkFees\n      parameters:\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/orderQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkFeesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        500:\n          $ref: '#/components/responses/ServiceUnavailableError'\n      tags:\n        - network\n  /api/v1/network/nodes:\n    get:\n      summary: Get the network address book nodes\n      description: Returns the network's list of nodes used in consensus\n      operationId: getNetworkNodes\n      parameters:\n        - $ref: '#/components/parameters/fileIdQueryParam'\n        - $ref: '#/components/parameters/nodeIdQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkNodesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - network\n  /api/v1/network/supply:\n    get:\n      summary: Get the network supply\n      description: Returns the network's released supply of hbars\n      operationId: getNetworkSupply\n      parameters:\n        - $ref: '#/components/parameters/timestampQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkSupplyResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - network\n  /api/v1/schedules:\n    get:\n      summary: List schedules entities\n      description: Lists schedules on the network that govern the execution logic of scheduled transactions. This includes executed and non executed schedules.\n      operationId: listSchedules\n      parameters:\n        - $ref: '#/components/parameters/accountIdQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParam'\n        - $ref: '#/components/parameters/scheduleIdQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SchedulesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - schedules\n  /api/v1/schedules/{scheduleId}:\n    get:\n      summary: Get schedule by id\n      description: Returns schedule information based on the given schedule id\n      operationId: getScheduleById\n      parameters:\n        - $ref: '#/components/parameters/scheduleIdPathParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Schedule'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - schedules\n  /api/v1/transactions:\n    get:\n      summary: List transactions\n      description: Lists transactions on the network. This includes successful and unsuccessful transactions.\n      operationId: listTransactions\n      parameters:\n        - $ref: '#/components/parameters/accountIdQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/transactionTypeQueryParam'\n        - name: result\n          in: query\n          description: The transaction success type.\n          schema:\n            enum: [ success, fail ]\n        - name: type\n          in: query\n          description: The transaction account balance modification type.\n          schema:\n            enum: [ credit, debit ]\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionsResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - transactions\n  /api/v1/transactions/{transactionId}:\n    get:\n      summary: Get transaction by id\n      description: Returns transaction information based on the given transaction id\n      operationId: getTransactionById\n      parameters:\n        - $ref: '#/components/parameters/transactionIdPathParam'\n        - $ref: '#/components/parameters/nonceQueryParam'\n        - $ref: '#/components/parameters/scheduledQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionByIdResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - transactions\n  /api/v1/transactions/{transactionId}/stateproof:\n    get:\n      summary: Get stateproof information\n      description: Returns the  contents of the address book file, signature files, and record file that can be used to validate the transaction occurred on the Hedera network given transaction id.\n      operationId: getStateproofInfo\n      parameters:\n        - $ref: '#/components/parameters/transactionIdPathParam'\n        - $ref: '#/components/parameters/nonceQueryParamWithDefault'\n        - $ref: '#/components/parameters/scheduledQueryParamWithDefault'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StateProofResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/TransactionNotFound'\n        502:\n          $ref: '#/components/responses/ServiceUnavailableError'\n      tags:\n        - transactions\n  /api/v1/topics/{topicId}/messages:\n    get:\n      summary: List topic messages by id\n      description: Returns the list of topic messages for the given topic id.\n      operationId: listTopicMessagesById\n      parameters:\n        - $ref: '#/components/parameters/topicIdPathParam'\n        - name: sequencenumber\n          in: query\n          example: 2\n          schema:\n            type: integer\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - name: encoding\n          in: query\n          example: base64\n          schema:\n            type: string\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopicMessagesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/TopicNotFound'\n      tags:\n        - topics\n  /api/v1/topics/{topicId}/messages/{sequenceNumber}:\n    get:\n      summary: Get topic message by id and sequence number\n      description: Returns a single topic message the given topic id and sequence number.\n      operationId: getTopicMessageByIdAndSequenceNumber\n      parameters:\n        - $ref: '#/components/parameters/topicIdPathParam'\n        - name: sequencenumber\n          in: path\n          required: true\n          description: Topic message sequence number\n          example: 2\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopicMessagesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - topics\n  /api/v1/topics/messages/{consensusTimestamp}:\n    get:\n      summary: Get topic message by consensusTimestamp\n      description: Returns a topic message the given the consensusTimestamp.\n      operationId: getTopicMessagesByConsensusTimestamp\n      parameters:\n        - $ref: '#/components/parameters/timestampPathParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopicMessage'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - topics\n  /api/v1/tokens:\n    get:\n      summary: List tokens\n      description: Returns a list of tokens on the network.\n      operationId: listTokens\n      parameters:\n        - $ref: '#/components/parameters/publicKeyQueryParam'\n        - $ref: '#/components/parameters/tokenIdQueryParam'\n        - $ref: '#/components/parameters/tokenTypeQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/accountIdQueryParam'\n        - $ref: '#/components/parameters/orderQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokensResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - tokens\n  /api/v1/tokens/{tokenId}:\n    get:\n      summary: Get token by id\n      description: Returns token entity information given the id\n      operationId: getTokenById\n      parameters:\n        - $ref: '#/components/parameters/tokenIdPathParam'\n        - $ref: '#/components/parameters/tokenInfoTimestampQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenInfo'\n              examples:\n                FungibleToken:\n                  value:\n                    admin_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    auto_renew_account: 0.1.2\n                    auto_renew_period:\n                    created_timestamp: '1234567890.000000001'\n                    deleted: false\n                    decimals: 1000\n                    expiry_timestamp:\n                    freeze_default: false\n                    freeze_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    initial_supply: 1000000\n                    kyc_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    max_supply: 9223372036854776000\n                    memo: \"token memo\"\n                    modified_timestamp: '1234567890.000000001'\n                    name: Token name\n                    pause_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    pause_status: UNPAUSED\n                    supply_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    supply_type: INFINITE\n                    symbol: ORIGINALRDKSE\n                    token_id: 0.10.1\n                    total_supply: 1000000\n                    treasury_account_id: 0.1.2\n                    type: FUNGIBLE_COMMON\n                    wipe_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    custom_fees:\n                      created_timestamp: '1234567890.000000001'\n                      fixed_fees:\n                        - amount: 100\n                          collector_account_id: 0.1.5\n                          denominating_token_id: 0.10.8\n                      fractional_fees:\n                        - amount:\n                            numerator: 12\n                            denominator: 29\n                          collector_account_id: 0.1.6\n                          denominating_token_id: 0.10.9\n                          maximum: 120\n                          minimum: 30\n                          net_of_transfers: true\n                NonFungibleToken:\n                  value:\n                    admin_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    auto_renew_account: 0.1.2\n                    auto_renew_period:\n                    created_timestamp: '1234567890.000000001'\n                    deleted: false\n                    decimals: 0\n                    expiry_timestamp:\n                    freeze_default: false\n                    freeze_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    initial_supply: 0\n                    kyc_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    max_supply: 9223372036854776000\n                    memo: \"token memo\"\n                    modified_timestamp: '1234567890.000000001'\n                    name: Token name\n                    pause_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    pause_status: UNPAUSED\n                    supply_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    supply_type: INFINITE\n                    symbol: ORIGINALRDKSE\n                    token_id: 0.10.1\n                    total_supply: 1000000\n                    treasury_account_id: 0.1.2\n                    type: NON_FUNGIBLE_UNIQUE\n                    wipe_key:\n                      _type: ProtobufEncoded\n                      key: 7b2231222c2231222c2231227d\n                    custom_fees:\n                      created_timestamp: '1234567890.000000001'\n                      fixed_fees:\n                        - amount: 100\n                          collector_account_id: 0.1.5\n                          denominating_token_id: 0.10.6\n                      royalty_fees:\n                        - amount:\n                            numerator: 15\n                            denominator: 37\n                          collector_account_id: 0.1.6\n                          fallback_fee:\n                            amount: 100\n                            denominating_token_id: 0.10.7\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - tokens\n  /api/v1/tokens/{tokenId}/balances:\n    get:\n      summary: List token balances\n      description: Returns a list of token balances given the id. This represents the Token supply distribution across the network\n      operationId: listTokenBalancesById\n      parameters:\n        - $ref: '#/components/parameters/tokenIdPathParam'\n        - $ref: '#/components/parameters/accountIdQueryParam'\n        - $ref: '#/components/parameters/accountBalanceQueryParam'\n        - $ref: '#/components/parameters/orderQueryParam'\n        - $ref: '#/components/parameters/accountPublicKeyQueryParam'\n        - $ref: '#/components/parameters/timestampQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenBalancesResponse'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - tokens\n  /api/v1/tokens/{tokenId}/nfts:\n    get:\n      summary: List nfts\n      description: Returns a list of non-fungible tokens\n      operationId: listNfts\n      parameters:\n        - $ref: '#/components/parameters/tokenIdPathParam'\n        - $ref: '#/components/parameters/accountIdQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Nfts'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - tokens\n  /api/v1/tokens/{tokenId}/nfts/{serialNumber}:\n    get:\n      summary: Get nft info\n      description: Returns information for a non-fungible token\n      operationId: listNftBySerialnumber\n      parameters:\n        - $ref: '#/components/parameters/tokenIdPathParam'\n        - $ref: '#/components/parameters/serialNumberPathParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Nft'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n      tags:\n        - tokens\n  /api/v1/tokens/{tokenId}/nfts/{serialNumber}/transactions:\n    get:\n      summary: Get an nfts transction history\n      description: Returns a list of transactions for a given non-fungible token\n      operationId: listNftTransactions\n      parameters:\n        - $ref: '#/components/parameters/tokenIdPathParam'\n        - $ref: '#/components/parameters/serialNumberPathParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/orderQueryParamDesc'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NftTransactionHistory'\n        206:\n          description: Partial Content\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NftTransactionHistory'\n        400:\n          $ref: '#/components/responses/InvalidParameterError'\n      tags:\n        - tokens\ntags:\n  - name: accounts\n    description: The accounts object represents the information associated with an account entity and returns a list of account information.\n    externalDocs:\n      url: https://docs.hedera.com/guides/docs/mirror-node-api/cryptocurrency-api#accounts\n  - name: balances\n    description: The balance object represents the balance of accounts on the Hedera network.\n    externalDocs:\n      url: https://docs.hedera.com/guides/docs/mirror-node-api/cryptocurrency-api#balances\n  - name: contracts\n    description: The contracts objects represents the information associated with contract entities.\n  - name: schedules\n    description: The schedules object represents the information associated with a schedule entity.\n  - name: transactions\n    description: The transaction object represents the transactions processed on the Hedera network.\n    externalDocs:\n      url: https://docs.hedera.com/guides/docs/mirror-node-api/cryptocurrency-api#transactions\n  - name: topics\n    description: The topics object represents the information associated with a topic entity and returns topic messages information.\n    externalDocs:\n      url: https://docs.hedera.com/guides/docs/mirror-node-api/cryptocurrency-api#topic-messages\n  - name: tokens\n    description: The tokens object represents the information associated with a token entity and returns a list of token information.\ninfo:\n  title: Hedera Mirror Node REST API\n  version: 0.59.0-SNAPSHOT\n  license:\n    name: Apache-2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\n  description: \"The Mirror Node REST API offers the ability to query cryptocurrency transactions and account information from a Hedera managed mirror node.\\n\\nAvailable versions: [v1](/api/v1/docs). Base url: [/api/v1](/api/v1)\"\n  contact:\n    name: Hedera Mirror Node Team\n    email: mirrornode@hedera.com\n    url: 'https://github.com/hashgraph/hedera-mirror-node'\nexternalDocs:\n  description: Hedera REST API Docs\n  url: 'https://docs.hedera.com/guides/docs/mirror-node-api/cryptocurrency-api'\nservers:\n  - description: The current REST API server\n    url: ''\n  - description: The production REST API servers\n    url: '{scheme}://{network}.mirrornode.hedera.com'\n    variables:\n      scheme:\n        default: https\n        description: The URI scheme\n        enum: [ http, https ]\n      network:\n        default: testnet\n        description: The Hedera network in use\n        enum: [ mainnet-public, mainnet, previewnet, testnet ]\ncomponents:\n  schemas:\n    AccountAlias:\n      description: >-\n        Account alias in the format of 'shard.realm.alias', 'realm.alias', or 'alias'. 'alias' is the RFC4648\n        no-padding base32 encoded string of the account's alias.\n      type: string\n      pattern: ^(\\d{1,5}\\.){0,2}(?:[A-Z2-7]{8})*(?:[A-Z2-7]{2}|[A-Z2-7]{4,5}|[A-Z2-7]{7,8})$\n    # API call responses.\n    AccountsResponse:\n      type: object\n      required:\n        - accounts\n        - links\n      properties:\n        accounts:\n          $ref: '#/components/schemas/Accounts'\n        links:\n          $ref: '#/components/schemas/Links'\n    Allowance:\n      type: object\n      properties:\n        amount_granted:\n          description: The granted amount of the spender's allowance.\n          format: int64\n          type: integer\n          example: 100\n        owner:\n          $ref: '#/components/schemas/EntityId'\n        spender:\n          $ref: '#/components/schemas/EntityId'\n        timestamp:\n          $ref: '#/components/schemas/TimestampRange'\n    BalancesResponse:\n      type: object\n      properties:\n        timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        balances:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountBalance'\n        links:\n          $ref: '#/components/schemas/Links'\n    ContractResponse:\n      allOf:\n        - $ref: '#/components/schemas/Contract'\n        - type: object\n          properties:\n            bytecode:\n              type: string\n              nullable: true\n              format: binary\n              description: The contract bytecode in hex\n              example: \"0x01021a1fdc9b\"\n    ContractsResponse:\n      type: object\n      properties:\n        contracts:\n          $ref: '#/components/schemas/Contracts'\n        links:\n          $ref: '#/components/schemas/Links'\n    ContractResultResponse:\n      type: object\n      properties:\n        contracts:\n          $ref: '#/components/schemas/ContractResultDetails'\n    ContractResultsResponse:\n      type: object\n      properties:\n        contracts:\n          $ref: '#/components/schemas/ContractResults'\n        links:\n          $ref: '#/components/schemas/Links'\n    ContractLogsResponse:\n      type: object\n      properties:\n        logs:\n          $ref: '#/components/schemas/ContractLogs'\n    CryptoAllowancesResponse:\n      type: object\n      properties:\n        allowances:\n          $ref: '#/components/schemas/CryptoAllowances'\n        links:\n          $ref: '#/components/schemas/Links'\n    NetworkExchangeRateSetResponse:\n      type: object\n      properties:\n        current_rate:\n          $ref: '#/components/schemas/ExchangeRate'\n        next_rate:\n          $ref: '#/components/schemas/ExchangeRate'\n        timestamp:\n          $ref: '#/components/schemas/Timestamp'\n    NetworkFeesResponse:\n      type: object\n      properties:\n        fees:\n          $ref: '#/components/schemas/NetworkFees'\n        timestamp:\n          $ref: '#/components/schemas/Timestamp'\n    NetworkNodesResponse:\n      type: object\n      required:\n        - nodes\n        - links\n      properties:\n        nodes:\n          $ref: '#/components/schemas/NetworkNodes'\n        links:\n          $ref: '#/components/schemas/Links'\n    NetworkSupplyResponse:\n      type: object\n      properties:\n        released_supply:\n          description: The network's released supply of hbars in tinybars\n          example: \"3999999999999999949\"\n          type: string\n        timestamp:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The consensus timestamp at which the released supply was valid\n        total_supply:\n          description: The network's total supply of hbars in tinybars\n          example: \"5000000000000000000\"\n          type: string\n    SchedulesResponse:\n      type: object\n      properties:\n        schedules:\n          $ref: '#/components/schemas/Schedules'\n        links:\n          $ref: '#/components/schemas/Links'\n    BlocksResponse:\n      type: object\n      properties:\n        schedules:\n          $ref: '#/components/schemas/Blocks'\n        links:\n          $ref: '#/components/schemas/Links'\n    StateProofResponse:\n      type: object\n      properties:\n        transactions:\n          $ref: '#/components/schemas/StateProofFiles'\n    TokenAllowancesResponse:\n      type: object\n      properties:\n        allowances:\n          $ref: '#/components/schemas/TokenAllowances'\n        links:\n          $ref: '#/components/schemas/Links'\n    TokenBalancesResponse:\n      type: object\n      properties:\n        timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        balances:\n          $ref: '#/components/schemas/TokenDistribution'\n        links:\n          $ref: '#/components/schemas/Links'\n    TokensResponse:\n      type: object\n      properties:\n        tokens:\n          $ref: '#/components/schemas/Tokens'\n        links:\n          $ref: '#/components/schemas/Links'\n    TopicMessagesResponse:\n      type: object\n      properties:\n        messages:\n          $ref: '#/components/schemas/TopicMessages'\n        links:\n          $ref: '#/components/schemas/Links'\n    TransactionByIdResponse:\n      type: object\n      properties:\n        transactions:\n          $ref: '#/components/schemas/TransactionDetails'\n    TransactionsResponse:\n      type: object\n      properties:\n        transactions:\n          $ref: '#/components/schemas/Transactions'\n        links:\n          $ref: '#/components/schemas/Links'\n    # API objects.\n    AccountInfo:\n      type: object\n      required:\n        - account\n        - alias\n        - auto_renew_period\n        - balance\n        - decline_reward\n        - deleted\n        - ethereum_nonce\n        - evm_address\n        - expiry_timestamp\n        - key\n        - max_automatic_token_associations\n        - memo\n        - receiver_sig_required\n        - staked_account_id\n        - staked_node_id\n        - stake_period_start\n      properties:\n        account:\n          $ref: '#/components/schemas/EntityId'\n        alias:\n          $ref: '#/components/schemas/Alias'\n        auto_renew_period:\n          type: integer\n          format: int64\n          nullable: true\n        balance:\n          $ref: '#/components/schemas/Balance'\n        decline_reward:\n          description: Whether the account declines receiving a staking reward\n          type: boolean\n        deleted:\n          type: boolean\n          nullable: true\n        ethereum_nonce:\n          type: integer\n          format: int64\n          nullable: true\n        evm_address:\n          $ref: '#/components/schemas/EvmAddressNullable'\n        expiry_timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        key:\n          $ref: '#/components/schemas/Key'\n        max_automatic_token_associations:\n          type: integer\n          format: int32\n          nullable: true\n        memo:\n          type: string\n          nullable: true\n        receiver_sig_required:\n          nullable: true\n          type: boolean\n        staked_account_id:\n          allOf:\n            - $ref: '#/components/schemas/EntityId'\n            - description: The account to which this account is staking\n        staked_node_id:\n          description: The id of the node to which this account is staking\n          type: integer\n          format: int64\n          nullable: true\n        stake_period_start:\n          allOf:\n            - $ref: '#/components/schemas/TimestampNullable'\n            - description: |\n                The staking period during which either the staking settings for this account changed (such as starting\n                staking or changing stakedNode) or the most recent reward was earned, whichever is later. If this\n                account is not currently staked to a node, then the value is null\n      example:\n        account: 0.0.8\n        alias: HIQQEXWKW53RKN4W6XXC4Q232SYNZ3SZANVZZSUME5B5PRGXL663UAQA\n        auto_renew_period: null\n        balance:\n          timestamp: \"0.000002345\"\n          balance: 80\n          tokens:\n            - token_id: 0.0.200001\n              balance: 8\n        decline_reward: false\n        deleted: false\n        ethereum_nonce: 10\n        evm_address: \"0xac384c53f03855fa1b3616052f8ba32c6c2a2fec\"\n        expiry_timestamp: null\n        key: null\n        max_automatic_token_associations: 200\n        memo: \"entity memo\"\n        receiver_sig_required: false\n        staked_account_id: null\n        staked_node_id: 3\n        stake_period_start: 2000\n    Accounts:\n      type: array\n      items:\n        $ref: '#/components/schemas/AccountInfo'\n    AccountBalance:\n      type: object\n      required:\n        - account\n        - balance\n        - tokens\n      properties:\n        account:\n          $ref: '#/components/schemas/EntityId'\n        balance:\n          type: number\n        tokens:\n          type: array\n          items:\n            $ref: '#/components/schemas/TokenBalance'\n      example:\n        account: 0.15.10\n        balance: 80\n        tokens:\n          - token_id: 0.0.200001\n            balance: 8\n    AccountBalanceTransactions:\n      allOf:\n        - $ref: '#/components/schemas/AccountInfo'\n        - required:\n            - transactions\n            - links\n          properties:\n            transactions:\n              $ref: '#/components/schemas/Transactions'\n            links:\n              $ref: '#/components/schemas/Links'\n    Alias:\n      description: RFC4648 no-padding base32 encoded account alias\n      type: string\n      pattern: ^(?:[A-Z2-7]{8})*(?:[A-Z2-7]{2}|[A-Z2-7]{4,5}|[A-Z2-7]{7,8})$\n      nullable: true\n      example: HIQQEXWKW53RKN4W6XXC4Q232SYNZ3SZANVZZSUME5B5PRGXL663UAQA\n    Balance:\n      type: object\n      required:\n        - timestamp\n        - balance\n        - tokens\n      properties:\n        timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        balance:\n          type: number\n          nullable: true\n        tokens:\n          type: array\n          items:\n            type: object\n            properties:\n              token_id:\n                $ref: '#/components/schemas/EntityId'\n              balance:\n                type: number\n      nullable: true\n      example:\n        timestamp: \"0.000002345\"\n        balance: 80\n        tokens:\n          - token_id: 0.0.200001\n            balance: 8\n    Bloom:\n      example: '0x549358c4c2e573e02410ef7b5a5ffa5f36dd7398'\n      format: binary\n      nullable: true\n      type: string\n    ChunkInfo:\n      type: object\n      nullable: true\n      properties:\n        initial_transaction_id:\n          $ref: '#/components/schemas/TransactionId'\n        number:\n          example: 1\n          type: integer\n        total:\n          example: 2\n          type: integer\n    Contract:\n      type: object\n      properties:\n        admin_key:\n          $ref: '#/components/schemas/Key'\n        auto_renew_account:\n          $ref: '#/components/schemas/EntityId'\n        auto_renew_period:\n          type: number\n          nullable: true\n          example: null\n        contract_id:\n          $ref: '#/components/schemas/EntityId'\n        created_timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        deleted:\n          type: boolean\n          example: false\n        evm_address:\n          $ref: '#/components/schemas/EvmAddress'\n        expiration_timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        file_id:\n          $ref: '#/components/schemas/EntityId'\n        max_automatic_token_associations:\n          type: integer\n          format: int32\n          nullable: true\n        memo:\n          example: contract memo\n          type: string\n        obtainer_id:\n          $ref: '#/components/schemas/EntityId'\n        permanent_removal:\n          type: boolean\n          nullable: true\n        proxy_account_id:\n          $ref: '#/components/schemas/EntityId'\n        timestamp:\n          $ref: '#/components/schemas/TimestampRange'\n    Contracts:\n      type: array\n      items:\n        $ref: '#/components/schemas/Contract'\n    ContractLog:\n      allOf:\n        - $ref: '#/components/schemas/ContractResultLog'\n        - type: object\n          properties:\n            root_contract_id:\n              allOf:\n                - $ref: '#/components/schemas/EntityId'\n                - description: The executed contract that created this contract log\n            timestamp:\n              $ref: '#/components/schemas/Timestamp'\n    ContractLogTopics:\n      description: A list of hex encoded topics associated with this log event\n      example:\n        - '0xf4757a49b326036464bec6fe419a4ae38c8a02ce3e68bf0809674f6aab8ad300'\n      items:\n        type: string\n      type: array\n    ContractResult:\n      type: object\n      properties:\n        amount:\n          description: The number of tinybars sent to the function\n          example: 10\n          format: int64\n          nullable: true\n          type: integer\n        bloom:\n          allOf:\n            - $ref: '#/components/schemas/Bloom'\n            - description: The hex encoded bloom filter of the contract result\n        call_result:\n          description: The hex encoded result returned by the function\n          example: \"0x2b048531b38d2882e86044bc972e940ee0a01938\"\n          nullable: true\n          type: string\n        contract_id:\n          $ref: '#/components/schemas/EntityId'\n        created_contract_ids:\n          description: The network's released supply of hbars in tinybars\n          items:\n            $ref: '#/components/schemas/EntityId'\n          nullable: true\n          type: array\n        error_message:\n          description: The message when an error occurs during smart contract execution\n          example: \"Out of gas\"\n          nullable: true\n          type: string\n        from:\n          $ref: '#/components/schemas/EvmAddress'\n        function_parameters:\n          description: The hex encoded parameters passed to the function\n          example: \"0xbb9f02dc6f0e3289f57a1f33b71c73aa8548ab8b\"\n          nullable: true\n          type: string\n        gas_limit:\n          description: The maximum units of gas allowed for contract execution\n          example: 100000\n          format: int64\n          type: integer\n        gas_used:\n          description: The units of gas used to execute contract\n          example: 1000\n          format: int64\n          nullable: true\n          type: integer\n        hash:\n          description: A hex encoded 32 byte hash and it is only populated for Ethereum transaction case\n          example: \"0xfebbaa29c513d124a6377246ea3506ad917d740c21a88f61a1c55ba338fc2bb1\"\n          nullable: true\n          type: string\n        result:\n          description: The result of the transaction\n          example: SUCCESS\n          type: string\n        status:\n          description: The status of the transaction, 0x1 for a SUCCESS transaction and 0x0 for all else\n          example: 0x1\n          type: string\n        timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        to:\n          $ref: '#/components/schemas/EvmAddressNullable'\n    ContractResultDetails:\n      allOf:\n        - $ref: '#/components/schemas/ContractResult'\n        - type: object\n          properties:\n            access_list:\n              description: The hex encoded access_list of the wrapped ethereum transaction\n              nullable: true\n              type: string\n              example: '0xabcd'\n            block_gas_used:\n              description: The total amount of gas used in the block\n              example: 2000\n              format: int64\n              nullable: true\n              type: integer\n            block_hash:\n              description: The hex encoded block (record file chain) hash\n              example: \"0x6ceecd8bb224da491\"\n              nullable: true\n              type: string\n            block_number:\n              description: The block number. Since Hedera does not have the native concept of blocks, this counts the number of record files seen since the mirror node's configured start date. This can vary between mirror nodes that use different start dates.\n              example: 10\n              format: int64\n              nullable: true\n              type: integer\n            chain_id:\n              description: The hex encoded chain_id of the wrapped ethereum transaction\n              nullable: true\n              type: string\n              example: '0x0127'\n            hash:\n              description: The hex encoded transaction hash\n              example: \"0x3531396130303866616264653464\"\n              type: string\n            gas_price:\n              description: The hex encoded gas_price of the wrapped ethereum transaction\n              nullable: true\n              type: string\n              example: '0x4a817c800'\n            logs:\n              $ref: '#/components/schemas/ContractResultLogs'\n            max_fee_per_gas:\n              description: The hex encoded max_fee_per_gas of the wrapped ethereum transaction\n              nullable: true\n              type: string\n              example: '0x5'\n            max_priority_fee_per_gas:\n              description: The hex encoded max_priority_fee_per_gas of the wrapped ethereum transaction\n              nullable: true\n              type: string\n              example: '0x100'\n            nonce:\n              description: The nonce of the wrapped ethereum transaction\n              nullable: true\n              format: int64\n              type: integer\n              example: 1\n            r:\n              description: The hex encoded signature_r of the wrapped ethereum transaction\n              nullable: true\n              type: string\n              example: '0xd693b532a80fed6392b428604171fb32fdbf953728a3a7ecc7d4062b1652c043'\n            s:\n              description: The hex encoded signature_s of the wrapped ethereum transaction\n              nullable: true\n              type: string\n              example: '0x24e9c602ac800b983b035700a14b23f78a253ab762deab5dc27e3555a750b355'\n            state_changes:\n              $ref: '#/components/schemas/ContractResultStateChanges'\n            transaction_index:\n              description: The position of the transaction in the block\n              nullable: true\n              format: int64\n              type: integer\n              example: 1\n            type:\n              description: The type of the wrapped ethereum transaction, 0 (Pre-Eip1559) or 2 (Post-Eip1559)\n              nullable: true\n              type: integer\n              example: 2\n            v:\n              description: The recovery_id of the wrapped ethereum transaction\n              nullable: true\n              type: integer\n              example: 1\n    ContractResultLog:\n      type: object\n      properties:\n        address:\n          description: The hex encoded EVM address of the contract\n          example: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n          pattern: ^0x[0-9A-Fa-f]{40}$\n          type: string\n        bloom:\n          allOf:\n            - $ref: '#/components/schemas/Bloom'\n            - description: The hex encoded bloom filter of the contract log\n        contract_id:\n          $ref: '#/components/schemas/EntityId'\n        data:\n          description: The hex encoded data of the contract log\n          example: '0x00000000000000000000000000000000000000000000000000000000000000fa'\n          nullable: true\n          type: string\n        index:\n          description: The index of the contract log in the chain of logs for an execution\n          example: 0\n          type: integer\n        topics:\n          $ref: '#/components/schemas/ContractLogTopics'\n    ContractResultLogs:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContractResultLog'\n    ContractResultStateChange:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/EvmAddress'\n        contract_id:\n          $ref: '#/components/schemas/EntityId'\n        slot:\n          description: The hex encoded storage slot changed.\n          format: binary\n          example: '0x00000000000000000000000000000000000000000000000000000000000000fa'\n          type: string\n        value_read:\n          description: The hex encoded value read from the storage slot.\n          example: '0x97c1fc0a6ed5551bc831571325e9bdb365d06803100dc20648640ba24ce69750'\n          format: binary\n          type: string\n        value_written:\n          description: The hex encoded value written to the slot. `null` implies no value written.\n          example: '0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925'\n          format: binary\n          nullable: true\n          type: string\n    ContractResultStateChanges:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContractResultStateChange'\n    ContractResults:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContractResult'\n    ContractLogs:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContractLog'\n    CustomFees:\n      type: object\n      properties:\n        created_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        fixed_fees:\n          type: array\n          items:\n            $ref: '#/components/schemas/FixedFee'\n        fractional_fees:\n          type: array\n          items:\n            $ref: '#/components/schemas/FractionalFee'\n        royalty_fees:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoyaltyFee'\n    CryptoAllowance:\n      allOf:\n        - $ref: '#/components/schemas/Allowance'\n        - properties:\n            amount_granted:\n              description: The granted amount of the spender's allowance in tinybars.\n    CryptoAllowances:\n      type: array\n      items:\n        $ref: '#/components/schemas/CryptoAllowance'\n    EntityId:\n      type: string\n      description: \"Network entity ID in the format of `shard.realm.num`\"\n      pattern: '^\\d{1,10}\\.\\d{1,10}\\.\\d{1,10}$'\n      example: \"0.1.2\"\n      nullable: true\n    EntityIdQuery:\n      type: string\n      pattern: ^((gte?|lte?|eq|ne)\\:)?(\\d{1,10}\\.\\d{1,10}\\.)?\\d{1,10}$\n    Error:\n      type: object\n      properties:\n        _status:\n          type: object\n          properties:\n            messages:\n              type: array\n              items:\n                type: object\n                properties:\n                  message:\n                    type: string\n    HederaHash:\n      type: string\n      description: A hex encoded hedera transaction hash.\n      minLength: 96\n      maxLength: 98\n      pattern: '^(0x)?[A-Fa-f0-9]{96}$'\n    EthereumHash:\n      type: string\n      description: A hex encoded ethereum transaction hash.\n      minLength: 64\n      maxLength: 66\n      pattern: '^(0x)?[A-Fa-f0-9]{64}$'\n    PositiveNumber:\n      type: integer\n      format: int64\n      description: A positive number.\n      minimum: 0\n    EvmAddress:\n      type: string\n      description: A network entity encoded as an EVM address in hex.\n      format: binary\n      minLength: 40\n      maxLength: 42\n      pattern: '^(0x)?[A-Fa-f0-9]{40}$'\n      example: \"0000000000000000000000000000000000001f41\"\n    EvmAddressWithShardRealm:\n      type: string\n      description: A network entity encoded as an EVM address in hex.\n      format: binary\n      minLength: 40\n      maxLength: 60\n      pattern: '^(\\d{1,10}\\.){0,2}[A-Fa-f0-9]{40}$'\n      example: \"0x0000000000000000000000000000000000001f41\"\n    EvmAddressNullable:\n      type: string\n      description: A network entity encoded as an EVM address in hex.\n      format: binary\n      minLength: 40\n      maxLength: 42\n      nullable: true\n      pattern: '^(0x)?[A-Fa-f0-9]{40}$'\n      example: \"0x0000000000000000000000000000000000001f41\"\n    ExchangeRate:\n      type: object\n      properties:\n        cent_equivalent:\n          type: number\n          example: 596987\n        expiration_time:\n          type: number\n          example: 1649689200\n        hbar_equivalent:\n          type: number\n          example: 30000\n    FixedFee:\n      type: object\n      properties:\n        amount:\n          type: number\n          example: 100\n        collector_account_id:\n          $ref: '#/components/schemas/EntityId'\n        denominating_token_id:\n          $ref: '#/components/schemas/EntityId'\n    FractionalFee:\n      type: object\n      properties:\n        amount:\n          type: object\n          properties:\n            numerator:\n              type: number\n              example: 12\n            denominator:\n              type: number\n              example: 29\n        collector_account_id:\n          $ref: '#/components/schemas/EntityId'\n        denominating_token_id:\n          $ref: '#/components/schemas/EntityId'\n        maximum:\n          type: number\n          nullable: true\n          example: 120\n        minimum:\n          type: number\n          example: 30\n        net_of_transfers:\n          type: boolean\n          example: true\n    RoyaltyFee:\n      type: object\n      properties:\n        amount:\n          type: object\n          properties:\n            numerator:\n              type: number\n              example: 15\n            denominator:\n              type: number\n              example: 37\n        collector_account_id:\n          $ref: '#/components/schemas/EntityId'\n        fallback_fee:\n          type: object\n          properties:\n            amount:\n              type: number\n              example: 100\n            denominating_token_id:\n              $ref: '#/components/schemas/EntityId'\n    Key:\n      type: object\n      nullable: true\n      properties:\n        _type:\n          type: string\n          enum: [ ECDSA_SECP256K1, ED25519, ProtobufEncoded ]\n          example: ProtobufEncoded\n        key:\n          type: string\n          example: 7b2231222c2231222c2231227d\n    Links:\n      type: object\n      properties:\n        next:\n          example: null\n          nullable: true\n    NetworkNode:\n      type: object\n      required:\n        - description\n        - file_id\n        - max_stake\n        - memo\n        - min_stake\n        - node_account_id\n        - node_id\n        - node_cert_hash\n        - public_key\n        - service_endpoints\n        - stake\n        - stake_not_rewarded\n        - stake_rewarded\n        - stake_total\n        - staking_period\n        - timestamp\n      properties:\n        description:\n          description: a memo associated with the address book\n          nullable: true\n          type: string\n        file_id:\n          $ref: '#/components/schemas/EntityId'\n        max_stake:\n          description: The maximum stake (rewarded or not rewarded) this node can have as consensus weight\n          type: integer\n          format: int64\n          nullable: true\n        memo:\n          description: memo\n          nullable: true\n          type: string\n        min_stake:\n          description: |\n            The minimum stake (rewarded or not rewarded) this node must reach before having non-zero consensus weight\n          type: integer\n          format: int64\n          nullable: true\n        node_account_id:\n          $ref: '#/components/schemas/EntityId'\n        node_id:\n          description: An identifier for the node\n          type: number\n        node_cert_hash:\n          description: hex encoded hash of the node’s TLS certificate\n          nullable: true\n          type: string\n        public_key:\n          description: hex encoded X509 RSA public key used to verify stream file signature\n          nullable: true\n          type: string\n        service_endpoints:\n          $ref: '#/components/schemas/ServiceEndpoints'\n        stake:\n          description: The node consensus weight at the beginning of the staking period\n          type: number\n          format: int64\n          nullable: true\n        stake_not_rewarded:\n          description: |\n            The sum (balance + stakedToMe) for all accounts staked to this node with declineReward=true at the \n            beginning of the staking period\n          type: number\n          format: int64\n          nullable: true\n        stake_rewarded:\n          description: |\n            The sum (balance + staked) for all accounts staked to the node that are not declining rewards at the\n            beginning of the staking period\n          type: number\n          format: int64\n          nullable: true\n        stake_total:\n          description: The sum of all nodes' consensus weight at the beginning of the staking period\n          type: number\n          format: int64\n          nullable: true\n        staking_period:\n          allOf:\n            - $ref: '#/components/schemas/TimestampRange'\n            - description: The timestamp range of the staking period\n              nullable: true\n        timestamp:\n          $ref: '#/components/schemas/TimestampRange'\n      example:\n        description: \"address book 1\"\n        file_id: '0.0.102'\n        max_stake: 50000\n        memo: '0.0.4'\n        min_stake: 1000\n        node_account_id: '0.0.4'\n        node_cert_hash: '0x01d173753810c0aae794ba72d5443c292e9ff962b01046220dd99f5816422696e0569c977e2f169e1e5688afc8f4aa16'\n        node_id: 1\n        public_key: '0x4a5ad514f0957fa170a676210c9bdbddf3bc9519702cf915fa6767a40463b96f'\n        service_endpoints:\n          - ip_address_v4: 128.0.0.6\n            port: 50216\n        stake: 20000\n        stake_not_rewarded: 19900\n        stake_rewarded: 100\n        stake_total: 100000\n        staking_period:\n          from: '1655164800.000000000'\n          to: '1655251200.000000000'\n        timestamp:\n          from: '187654.000123457'\n          to: null\n    NetworkNodes:\n      type: array\n      items:\n        $ref: '#/components/schemas/NetworkNode'\n    NetworkFee:\n      type: object\n      properties:\n        gas:\n          description: gas cost in tinybars\n          format: int64\n          type: number\n        transaction_type:\n          description: type of the transaction\n          type: string\n    NetworkFees:\n      type: array\n      items:\n        $ref: '#/components/schemas/NetworkFee'\n    Nft:\n      type: object\n      properties:\n        account_id:\n          $ref: '#/components/schemas/EntityId'\n        created_timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        delegating_spender:\n          $ref: '#/components/schemas/EntityId'\n        deleted:\n          description: whether the nft or the token it belongs to has been deleted\n          type: boolean\n        metadata:\n          description: base64 encoded binary data\n          type: string\n          format: byte\n        modified_timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        serial_number:\n          type: number\n        spender:\n          $ref: '#/components/schemas/EntityId'\n        token_id:\n          $ref: '#/components/schemas/EntityId'\n      example:\n        account_id: \"0.1.2\"\n        created_timestamp: \"1234567890.000000001\"\n        delegating_spender: \"0.0.400\"\n        deleted: false\n        metadata: \"VGhpcyBpcyBhIHRlc3QgTkZU\"\n        modified_timestamp: \"1610682445.003266001\"\n        serial_number: 124\n        spender_id: \"0.0.500\"\n        token_id: \"0.0.222\"\n    Nfts:\n      type: object\n      properties:\n        nfts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Nft'\n        links:\n          $ref: '#/components/schemas/Links'\n    NftTransactionTransfer:\n      type: object\n      properties:\n        consensus_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        is_approval:\n          type: boolean\n        nonce:\n          type: integer\n          minimum: 0\n        transaction_id:\n          type: string\n        receiver_account_id:\n          $ref: '#/components/schemas/EntityId'\n        sender_account_id:\n          $ref: '#/components/schemas/EntityId'\n        type:\n          $ref: '#/components/schemas/TransactionTypes'\n        token_id:\n          $ref: '#/components/schemas/EntityId'\n      example:\n        consensus_timestamp: \"1618591023.997420021\"\n        id: \"0.0.19789-1618591023-997420021\"\n        is_approval: false\n        receiver_account_id: \"0.0.11\"\n        sender_account_id: \"0.0.10\"\n        type: \"CRYPTOTRANSFER\"\n        token_id: \"0.0.1000\"\n    Block:\n      type: object\n      properties:\n        count:\n          type: integer\n          minimum: 0\n        gas_used:\n          type: integer\n          minimum: 0\n          format: int64\n          nullable: true\n        hapi_version:\n          type: string\n        hash:\n          type: string\n        logs_bloom:\n          description: A hex encoded 256-byte array with 0x prefix\n          nullable: true\n          type: string\n          pattern: ^0x[0-9a-fA-F]{512}$\n        name:\n          type: string\n        number:\n          type: integer\n          minimum: 0\n        previous_hash:\n          type: string\n        size:\n          type: integer\n          nullable: true\n        timestamp:\n          type: object\n          properties:\n            from:\n              $ref: '#/components/schemas/TimestampRange'\n            to:\n              $ref: '#/components/schemas/TimestampRange'\n      example:\n        count: 3\n        gas_used: 300000\n        hapi_version: \"0.11.0\"\n        hash: \"0x3c08bbbee74d287b1dcd3f0ca6d1d2cb92c90883c4acf9747de9f3f3162ad25b999fc7e86699f60f2a3fb3ed9a646c6b\"\n        logs_bloom: \"0xn        name: \"2022-05-03T06_46_26.060890949Z.rcd\"\n        number: 77\n        previous_hash: \"0xf7d6481f659c866c35391ee230c374f163642ebf13a5e604e04a95a9ca48a298dc2dfa10f51bcbaab8ae23bc6d662a0b\"\n        size: 8192\n        timestamp:\n          from: \"1651560386.060890949\"\n          to: \"1651560386.661997287\"\n    Blocks:\n      type: array\n      items:\n        $ref: '#/components/schemas/Block'\n    NftTransactionHistory:\n      type: object\n      properties:\n        transactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/NftTransactionTransfer'\n        links:\n          $ref: '#/components/schemas/Links'\n    Schedule:\n      type: object\n      properties:\n        admin_key:\n          $ref: '#/components/schemas/Key'\n        consensus_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        creator_account_id:\n          $ref: '#/components/schemas/EntityId'\n        deleted:\n          type: boolean\n          example: false\n        executed_timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        expiration_time:\n          $ref: '#/components/schemas/TimestampNullable'\n        memo:\n          type: string\n          example: 'created on 02/10/2021'\n        payer_account_id:\n          $ref: '#/components/schemas/EntityId'\n        schedule_id:\n          $ref: '#/components/schemas/EntityId'\n        signatures:\n          type: array\n          items:\n            $ref: '#/components/schemas/ScheduleSignature'\n        transaction_body:\n          type: string\n          format: byte\n          example: Kd6tvu8=\n        wait_for_expiry:\n          type: boolean\n    Schedules:\n      type: array\n      items:\n        $ref: '#/components/schemas/Schedule'\n    ScheduleSignature:\n      type: object\n      properties:\n        consensus_timestmap:\n          $ref: '#/components/schemas/Timestamp'\n        public_key_prefix:\n          type: string\n          format: byte\n          example: \"AAEBAwuqAwzB\"\n        signature:\n          type: string\n          format: byte\n          example: \"3q2+7wABAQMLqgMMwQ==\"\n        type:\n          type: string\n          enum: [ CONTRACT, ED25519, RSA_3072, ECDSA_384, ECDSA_SECP256K1, UNKNOWN ]\n          example: \"ED25519\"\n    ServiceEndpoint:\n      type: object\n      required:\n        - ip_address_v4\n        - port\n      properties:\n        ip_address_v4:\n          type: string\n        port:\n          type: number\n      example:\n        ip_address_v4: 127.0.0.1\n        port: 50211\n    ServiceEndpoints:\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceEndpoint'\n    StateProofFiles:\n      type: object\n      properties:\n        record_file:\n          type: string\n          format: byte\n        address_books:\n          type: array\n          items:\n            type: string\n            format: byte\n        signature_files:\n          type: object\n          properties:\n            0.0.3:\n              type: string\n              format: byte\n            0.0.4:\n              type: string\n              format: byte\n            0.0.5:\n              type: string\n              format: byte\n            0.0.6:\n              type: string\n              format: byte\n      example:\n        record_file: YzNkOTg3Yzg3NDI5NGViOTViMmRmOWZkMzZiMDY1NjYyMzMxNTc2OWFmMmVmMzQ0YzM1ODY4NzgwMTAyYjVjMA==\n        address_books:\n          - MjljY2IxNGNjNWY2NWM1MmZlYjc0MjkyYjAxZDUyZmRjZjJkZTY0NWQzOTRiNTM3MDQ2ODBkYjZkMTMyZWM2Yw==\n        signature_files:\n          0.0.3: MWFmYzZlNWVjNGJiZTg0ZWJjNTVkMGViNDViMjE2Mzg2ZTQ2NjUzZTYyYmM1NjE2YThmZGJjNzQ1ZWIyMTQxNQ==\n          0.0.4: ZDI4ZDIwMGJiYTdkNDhmNTA3ZTE0MGZhNjIyOGFiYTdmMjlmZjhiMmEzZjJhOGVlYjg1NzQyZGMwNTNjZWM3MQ==\n          0.0.5: MWY0YmU5OGE3NWE4N2NkNjQ5ZTNlMWE1ODI1OTI3NTgwNWM1Y2RmNjNmYjA0YjMzMTdlZmI1MTEwNzQ2NDVjNw==\n          0.0.6: NzNiZTVmMTZkNmY4NTQ4MjdiN2M4MTEzZmFlY2I1YzIwNGI5ZjFkNjhiMzdkMzczNTg4OTRkOWFiZmM5N2U4Mw==\n          0.0.7: NDJiZTVmMTZkNmY4NTQ4MjdiN2M4MTEzZmFlY2I1YzIwNGI5ZjFkNjhiMzdkMzczNTg4OTRkOWFiZmM5N2U4Mw==\n    Timestamp:\n      type: string\n      example: \"1586567700.453054000\"\n      pattern: '^\\d{1,10}(\\.\\d{1,9})?$'\n    TimestampNullable:\n      type: string\n      example: \"1586567700.453054000\"\n      pattern: '^\\d{1,10}(\\.\\d{1,9})?$'\n      nullable: true\n    TimestampRange:\n      type: object\n      description: A timestamp range an entity is valid for\n      properties:\n        from:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The inclusive from timestamp in seconds\n        to:\n          allOf:\n            - $ref: '#/components/schemas/TimestampNullable'\n            - description: The exclusive to timestamp in seconds\n    Token:\n      type: object\n      properties:\n        token_id:\n          $ref: '#/components/schemas/EntityId'\n        symbol:\n          type: string\n        admin_key:\n          $ref: '#/components/schemas/Key'\n        type:\n          type: string\n      required:\n        - token_id\n        - symbol\n        - admin_key\n        - type\n      example:\n        token_id: 0.0.1\n        symbol: FIRSTMOVERLPDJH\n        admin_key: null\n        type: FUNGIBLE_COMMON\n    TokenAllowance:\n      allOf:\n        - $ref: '#/components/schemas/Allowance'\n        - properties:\n            token_id:\n              $ref: '#/components/schemas/EntityId'\n    TokenAllowances:\n      type: array\n      items:\n        $ref: '#/components/schemas/TokenAllowance'\n    TokenBalance:\n      type: object\n      required:\n        - token_id\n        - balance\n      properties:\n        token_id:\n          $ref: '#/components/schemas/EntityId'\n        balance:\n          type: number\n      example:\n        token_id: 0.0.200001\n        balance: 8\n    TokenDistribution:\n      type: array\n      items:\n        type: object\n        properties:\n          account:\n            $ref: '#/components/schemas/EntityId'\n          balance:\n            type: number\n        required:\n          - account\n          - balance\n      example:\n        - account: 0.15.2\n          balance: 1000\n    TokenInfo:\n      type: object\n      properties:\n        admin_key:\n          $ref: '#/components/schemas/Key'\n        auto_renew_account:\n          $ref: '#/components/schemas/EntityId'\n        auto_renew_period:\n          example: null\n          nullable: true\n        created_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        decimals:\n          type: string\n          example: 1000\n        deleted:\n          type: boolean\n          example: true\n          nullable: true\n        expiry_timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        fee_schedule_key:\n          $ref: '#/components/schemas/Key'\n        freeze_default:\n          type: boolean\n          example: false\n        freeze_key:\n          $ref: '#/components/schemas/Key'\n        initial_supply:\n          type: string\n          example: \"1000000\"\n        kyc_key:\n          $ref: '#/components/schemas/Key'\n        max_supply:\n          type: string\n          example: \"9223372036854775807\"\n        modified_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        name:\n          type: string\n          example: Token name\n        memo:\n          type: string\n          example: \"token memo\"\n        pause_key:\n          $ref: '#/components/schemas/Key'\n        pause_status:\n          type: string\n          enum: [ NOT_APPLICABLE, PAUSED, UNPAUSED ]\n          example: UNPAUSED\n        supply_key:\n          $ref: '#/components/schemas/Key'\n        supply_type:\n          type: string\n          enum: [ FINITE, INFINITE ]\n          example: INFINITE\n        symbol:\n          type: string\n          example: ORIGINALRDKSE\n        token_id:\n          $ref: '#/components/schemas/EntityId'\n        total_supply:\n          type: string\n          example: \"1000000\"\n        treasury_account_id:\n          $ref: '#/components/schemas/EntityId'\n        type:\n          type: string\n          enum: [ FUNGIBLE_COMMON, NON_FUNGIBLE_UNIQUE ]\n          example: FUNGIBLE_COMMON\n        wipe_key:\n          $ref: '#/components/schemas/Key'\n        custom_fees:\n          $ref: '#/components/schemas/CustomFees'\n    LogTopicQueryParam:\n      type: array\n      items:\n        type: string\n        pattern: ^(0x)?[0-9A-Fa-f]{1,64}$\n    TransactionTypes:\n      type: string\n      enum:\n        - CONSENSUSCREATETOPIC\n        - CONSENSUSDELETETOPIC\n        - CONSENSUSSUBMITMESSAGE\n        - CONSENSUSUPDATETOPIC\n        - CONTRACTCALL\n        - CONTRACTCREATEINSTANCE\n        - CONTRACTDELETEINSTANCE\n        - CONTRACTUPDATEINSTANCE\n        - CRYPTOADDLIVEHASH\n        - CRYPTOAPPROVEALLOWANCE\n        - CRYPTOCREATEACCOUNT\n        - CRYPTODELETE\n        - CRYPTODELETEALLOWANCE\n        - CRYPTODELETELIVEHASH\n        - CRYPTOTRANSFER\n        - CRYPTOUPDATEACCOUNT\n        - ETHEREUMTRANSACTION\n        - FILEAPPEND\n        - FILECREATE\n        - FILEDELETE\n        - FILEUPDATE\n        - FREEZE\n        - NODESTAKEUPDATE\n        - SCHEDULECREATE\n        - SCHEDULEDELETE\n        - SCHEDULESIGN\n        - SYSTEMDELETE\n        - SYSTEMUNDELETE\n        - TOKENASSOCIATE\n        - TOKENBURN\n        - TOKENCREATION\n        - TOKENDELETION\n        - TOKENDISSOCIATE\n        - TOKENFEESCHEDULEUPDATE\n        - TOKENFREEZE\n        - TOKENGRANTKYC\n        - TOKENMINT\n        - TOKENPAUSE\n        - TOKENREVOKEKYC\n        - TOKENUNFREEZE\n        - TOKENUNPAUSE\n        - TOKENUPDATE\n        - TOKENWIPE\n        - UNCHECKEDSUBMIT\n    Tokens:\n      type: array\n      items:\n        $ref: '#/components/schemas/Token'\n    TopicMessage:\n      type: object\n      properties:\n        chunk_info:\n          $ref: '#/components/schemas/ChunkInfo'\n        consensus_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        message:\n          type: string\n        payer_account_id:\n          $ref: '#/components/schemas/EntityId'\n        running_hash:\n          type: string\n          format: byte\n        running_hash_version:\n          type: number\n        sequence_number:\n          type: number\n        topic_id:\n          $ref: '#/components/schemas/EntityId'\n      required:\n        - consensus_timestamp\n        - message\n        - payer_account_id\n        - running_hash\n        - running_hash_version\n        - sequence_number\n        - topic_id\n      example:\n        chunk_info:\n          initial_transaction_id: \"0.0.10-1234567890-000000321\"\n          nonce: 3\n          number: 1\n          total: 2\n          scheduled: true\n        consensus_timestamp: \"1234567890.000000001\"\n        message: bWVzc2FnZQ==\n        payer_account_id: 0.0.10\n        running_hash: cnVubmluZ19oYXNo\n        running_hash_version: 2\n        sequence_number: 1\n        topic_id: 0.0.7\n    TopicMessages:\n      type: array\n      items:\n        $ref: '#/components/schemas/TopicMessage'\n    Transaction:\n      type: object\n      properties:\n        bytes:\n          type: string\n          format: byte\n          nullable: true\n        charged_tx_fee:\n          type: number\n        consensus_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        entity_id:\n          $ref: '#/components/schemas/EntityId'\n        max_fee:\n          type: string\n        memo_base64:\n          nullable: true\n        name:\n          $ref: '#/components/schemas/TransactionTypes'\n        node:\n          $ref: '#/components/schemas/EntityId'\n        nonce:\n          type: integer\n          minimum: 0\n        parent_consensus_timestamp:\n          $ref: '#/components/schemas/TimestampNullable'\n        result:\n          type: string\n        scheduled:\n          type: boolean\n        token_transfers:\n          type: array\n          items:\n            type: object\n            properties:\n              token_id:\n                $ref: '#/components/schemas/EntityId'\n              account:\n                $ref: '#/components/schemas/EntityId'\n              amount:\n                type: number\n              is_approval:\n                type: boolean\n            required:\n              - token_id\n              - account\n              - amount\n        transaction_hash:\n          type: string\n          format: byte\n        transaction_id:\n          type: string\n        transfers:\n          type: array\n          items:\n            type: object\n            properties:\n              account:\n                $ref: '#/components/schemas/EntityId'\n              amount:\n                type: number\n              is_approval:\n                type: boolean\n            required:\n              - account\n              - amount\n        valid_duration_seconds:\n          type: string\n        valid_start_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n      example:\n        bytes: null\n        charged_tx_fee: 7\n        consensus_timestamp: \"1234567890.000000007\"\n        entity_id: \"0.0.2281979\"\n        max_fee: 33\n        memo_base64: null\n        name: CRYPTOTRANSFER\n        node: 0.0.3\n        nonce: 0\n        parent_consensus_timestamp: \"1234567890.000000007\"\n        result: SUCCESS\n        scheduled: false\n        transaction_hash: \"vigzKe2J7fv4ktHBbNTSzQmKq7Lzdq1/lJMmHT+a2KgvdhAuadlvS4eKeqKjIRmW\"\n        transaction_id: 0.0.8-1234567890-000000006\n        token_transfers:\n          - token_id: 0.0.90000\n            account: 0.0.9\n            amount: 1200\n            is_approval: false\n          - token_id: 0.0.90000\n            account: 0.0.8\n            amount: -1200\n            is_approval: false\n        transfers:\n          - account: 0.0.3\n            amount: 2\n            is_approval: false\n          - account: 0.0.8\n            amount: -3\n            is_approval: false\n          - account: 0.0.98\n            amount: 1\n            is_approval: false\n        valid_duration_seconds: 11\n        valid_start_timestamp: \"1234567890.000000006\"\n    TransactionDetail:\n      allOf:\n        - $ref: '#/components/schemas/Transaction'\n        - type: object\n          properties:\n            assessed_custom_fees:\n              type: array\n              items:\n                type: object\n                properties:\n                  amount:\n                    type: number\n                  collector_account_id:\n                    $ref: '#/components/schemas/EntityId'\n                  effective_payer_account_ids:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/EntityId'\n                  token_id:\n                    $ref: '#/components/schemas/EntityId'\n            nft_transfers:\n              type: array\n              items:\n                type: object\n                properties:\n                  is_approval:\n                    type: boolean\n                  receiver_account_id:\n                    $ref: '#/components/schemas/EntityId'\n                  sender_account_id:\n                    $ref: '#/components/schemas/EntityId'\n                  serial_number:\n                    type: number\n                  token_id:\n                    $ref: '#/components/schemas/EntityId'\n                required:\n                  - serial_number\n                  - token_id\n      example:\n        assessed_custom_fees:\n          - amount: 100\n            collector_account_id: 0.0.10\n            effective_payer_account_ids:\n              - 0.0.8\n              - 0.0.72\n            token_id: 0.0.90001\n        bytes: null\n        charged_tx_fee: 7\n        consensus_timestamp: \"1234567890.000000007\"\n        entity_id: \"0.0.2281979\"\n        max_fee: 33\n        memo_base64: null\n        name: CRYPTOTRANSFER\n        nft_transfers:\n          - is_approval: true\n            receiver_account_id: 0.0.121\n            sender_account_id: 0.0.122\n            serial_number: 1\n            token_id: 0.0.123\n          - is_approval: true\n            receiver_account_id: 0.0.321\n            sender_account_id: 0.0.422\n            serial_number: 2\n            token_id: 0.0.123\n        node: 0.0.3\n        nonce: 0\n        parent_consensus_timestamp: \"1234567890.000000007\"\n        result: SUCCESS\n        scheduled: false\n        transaction_hash: \"vigzKe2J7fv4ktHBbNTSzQmKq7Lzdq1/lJMmHT+a2KgvdhAuadlvS4eKeqKjIRmW\"\n        transaction_id: 0.0.8-1234567890-000000006\n        token_transfers:\n          - token_id: 0.0.90000\n            account: 0.0.9\n            amount: 1200\n            is_approval: true\n          - token_id: 0.0.90000\n            account: 0.0.8\n            amount: -1200\n            is_approval: true\n        transfers:\n          - account: 0.0.3\n            amount: 2\n            is_approval: true\n          - account: 0.0.8\n            amount: -3\n            is_approval: true\n          - account: 0.0.98\n            amount: 1\n            is_approval: true\n        valid_duration_seconds: 11\n        valid_start_timestamp: \"1234567890.000000006\"\n    TransactionDetails:\n      type: array\n      items:\n        $ref: '#/components/schemas/TransactionDetail'\n    TransactionId:\n      type: object\n      properties:\n        account_id:\n          $ref: '#/components/schemas/EntityId'\n        nonce:\n          example: 0\n          type: integer\n          minimum: 0\n          nullable: true\n        scheduled:\n          example: false\n          type: boolean\n          nullable: true\n        transaction_valid_start:\n          $ref: '#/components/schemas/Timestamp'\n    TransactionIdStr:\n      type: string\n      description: A transaction id in string format.\n      pattern: '^(\\d+)\\.(\\d+)\\.(\\d+)-(\\d{1,19})-(\\d{1,9})$'\n    Transactions:\n      type: array\n      items:\n        $ref: '#/components/schemas/Transaction'\n  responses:\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            _status:\n              messages:\n                - message: Not found\n    TopicNotFound:\n      description: Topic Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            _status:\n              messages:\n                - message: No such topic id - 7\n    TransactionNotFound:\n      description: Transaction Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            _status:\n              messages:\n                - message: Transaction not found\n    InvalidParameterError:\n      description: Invalid parameter\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            _status:\n              messages:\n                - message: \"Invalid parameter: account.id\"\n                - message: Invalid Transaction id. Please use \\shard.realm.num-sss-nnn\\ format where sss are seconds and nnn are nanoseconds\n    ServiceUnavailableError:\n      description: Service Unavailable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            _status:\n              messages:\n                - message: Require at least 1/3 signature files to prove consensus, got 1 out of 4 for file 2019-10-11T13_33_25.526889Z.rcd_sig\n  parameters:\n    accountIdOrAliasOrEvmAddressPathParam:\n      name: idOrAliasOrEvmAddress\n      in: path\n      description: Account alias or account id or evm address\n      required: true\n      examples:\n        aliasOnly:\n          value: HIQQEXWKW53RKN4W6XXC4Q232SYNZ3SZANVZZSUME5B5PRGXL663UAQA\n        realmAlias:\n          value: 0.HIQQEXWKW53RKN4W6XXC4Q232SYNZ3SZANVZZSUME5B5PRGXL663UAQA\n        shardRealmAlias:\n          value: 0.1.HIQQEXWKW53RKN4W6XXC4Q232SYNZ3SZANVZZSUME5B5PRGXL663UAQA\n        accountNumOnly:\n          value: 8\n        realmAccountNum:\n          value: 0.8\n        shardRealmAccountNum:\n          value: 0.0.8\n        evmAddress:\n          value: ac384c53f03855fa1b3616052f8ba32c6c2a2fec\n        evmAddressWithPrefix:\n          value: 0xac384c53f03855fa1b3616052f8ba32c6c2a2fec\n        evmAddressWithShardAndRealm:\n          value: 0.0.ac384c53f03855fa1b3616052f8ba32c6c2a2fec\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/AccountAlias'\n          - $ref: '#/components/schemas/EntityId'\n          - $ref: '#/components/schemas/EvmAddress'\n          - $ref: '#/components/schemas/EvmAddressWithShardRealm'\n    accountBalanceQueryParam:\n      name: account.balance\n      in: query\n      description: The optional balance value to compare against\n      explode: true\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        noOperator:\n          summary: Example of equals with no operator\n          value: 100\n        eqOperator:\n          summary: Example of equals operator\n          value: eq:200\n        neOperator:\n          summary: Example of not equals operator\n          value: ne:300\n        gtOperator:\n          summary: Example of greater than operator\n          value: gt:400\n        gteOperator:\n          summary: Example of greater than or equals operator\n          value: gte:500\n        ltOperator:\n          summary: Example of less than operator\n          value: lt:600\n        lteOperator:\n          summary: Example of less than or equals operator\n          value: lte:700\n      schema:\n        type: string\n        pattern: ^((gte?|lte?|eq|ne)\\:)?\\d{1,10}$\n    accountIdQueryParam:\n      name: account.id\n      in: query\n      description: The ID of the account to return information for\n      explode: true\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        entityNumNoOperator:\n          summary: Example of entityNum equals with no operator\n          value: 100\n        idNoOperator:\n          summary: Example of id equals with no operator\n          value: 0.0.100\n        entityNumEqOperator:\n          summary: Example of entityNum equals operator\n          value: eq:200\n        idEqOperator:\n          summary: Example of id equals operator\n          value: eq:0.0.200\n        entityNumNeOperator:\n          summary: Example of entityNum not equals operator\n          value: ne:300\n        idNeOperator:\n          summary: Example of id not equals operator\n          value: ne:0.0.300\n        entityNumGtOperator:\n          summary: Example of entityNum greater than operator\n          value: gt:400\n        idGtOperator:\n          summary: Example of id greater than operator\n          value: gt:0.0.400\n        entityNumGteOperator:\n          summary: Example of entityNum greater than or equals operator\n          value: gte:500\n        idGteOperator:\n          summary: Example of id greater than or equals operator\n          value: gte:0.0.500\n        entityNumLtOperator:\n          summary: Example of entityNum less than operator\n          value: lt:600\n        idLtOperator:\n          summary: Example of id less than operator\n          value: lt:0.0.600\n        entityNumLteOperator:\n          summary: Example of entityNum less than or equals operator\n          value: lte:700\n        idLteOperator:\n          summary: Example of id less than or equals operator\n          value: lte:0.0.700\n      schema:\n        $ref: '#/components/schemas/EntityIdQuery'\n    accountPublicKeyQueryParam:\n      name: account.publickey\n      in: query\n      description: The account's public key to compare against\n      example: 3c3d546321ff6f63d701d2ec5c277095874e19f4a235bee1e6bb19258bf362be\n      schema:\n        type: string\n    balanceQueryParam:\n      name: balance\n      in: query\n      description: Whether to include balance information or not\n      example: true\n      schema:\n        type: boolean\n        default: true\n    contractIdQueryParam:\n      name: contract.id\n      description: The ID of the smart contract\n      in: query\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        entityNumNoOperator:\n          summary: Example of entityNum equals with no operator\n          value: 100\n        idNoOperator:\n          summary: Example of id equals with no operator\n          value: 0.0.100\n        evmAddressNoOperator:\n          summary: A hex encoded EVM address with no operator.\n          value: 0.0.1d8bfdc5d46dc4f61d6b6115972536ebe6a8854c\n        entityNumEqOperator:\n          summary: Example of entityNum equals operator\n          value: eq:200\n        idEqOperator:\n          summary: Example of id equals operator\n          value: eq:0.0.200\n        entityNumNeOperator:\n          summary: Example of entityNum not equals operator\n          value: ne:300\n        idNeOperator:\n          summary: Example of id not equals operator\n          value: ne:0.0.300\n        entityNumGtOperator:\n          summary: Example of entityNum greater than operator\n          value: gt:400\n        idGtOperator:\n          summary: Example of id greater than operator\n          value: gt:0.0.400\n        entityNumGteOperator:\n          summary: Example of entityNum greater than or equals operator\n          value: gte:500\n        idGteOperator:\n          summary: Example of id greater than or equals operator\n          value: gte:0.0.500\n        entityNumLtOperator:\n          summary: Example of entityNum less than operator\n          value: lt:600\n        idLtOperator:\n          summary: Example of id less than operator\n          value: lt:0.0.600\n        entityNumLteOperator:\n          summary: Example of entityNum less than or equals operator\n          value: lte:700\n        idLteOperator:\n          summary: Example of id less than or equals operator\n          value: lte:0.0.700\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/EntityIdQuery'\n          - $ref: '#/components/schemas/EvmAddressWithShardRealm'\n    contractIdPathParam:\n      name: contractIdOrAddress\n      in: path\n      required: true\n      description: The ID or hex encoded EVM address associated with this contract.\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/EntityId'\n          - $ref: '#/components/schemas/EvmAddressWithShardRealm'\n    hashOrNumberPathParam:\n      name: hashOrNumber\n      in: path\n      required: true\n      description: Accepts both eth and hedera hash format or block number\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/HederaHash'\n          - $ref: '#/components/schemas/EthereumHash'\n          - $ref: '#/components/schemas/PositiveNumber'\n    entityIdPathParam:\n      name: entityId\n      in: path\n      required: true\n      description: Entity id\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    fileIdQueryParam:\n      name: file.id\n      description: The ID of the file entity\n      in: query\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        entityNumNoOperator:\n          summary: Example of entityNum equals with no operator\n          value: 100\n        idNoOperator:\n          summary: Example of id equals with no operator\n          value: 0.0.100\n        entityNumEqOperator:\n          summary: Example of entityNum equals operator\n          value: eq:200\n        idEqOperator:\n          summary: Example of id equals operator\n          value: eq:0.0.200\n      schema:\n        $ref: '#/components/schemas/EntityIdQuery'\n    scheduleIdPathParam:\n      name: scheduleId\n      in: path\n      required: true\n      description: Schedule id\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    tokenIdPathParam:\n      name: tokenId\n      in: path\n      required: true\n      description: Token id\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    topicIdPathParam:\n      name: topicId\n      in: path\n      required: true\n      description: Topic id\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    fromQueryParam:\n      name: from\n      in: query\n      description: Account ID or EVM address executing the contract\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/EntityId'\n          - $ref: '#/components/schemas/EvmAddress'\n    logIndexQueryParam:\n      name: index\n      in: query\n      description: Contract log index\n      schema:\n        type: string\n        pattern: ^((eq|gt|gte|lt|lte):)?\\d{1,10}$\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        indexNoOperator:\n          summary: Example of index equals with no operator\n          value: 2\n        indexEqOperator:\n          summary: Example of index equals with operator\n          value: eq:2\n        indexGtOperator:\n          summary: Example of index greater than operator\n          value: gt:2\n        indexGteOperator:\n          summary: Example of index greater than or equals operator\n          value: gte:2\n        indexLtOperator:\n          summary: Example of index less than operator\n          value: lt:2\n        indexLteOperator:\n          summary: Example of index less than or equals operator\n          value: lte:2\n    limitQueryParam:\n      name: limit\n      in: query\n      description: The maximum number of items to return\n      example: 2\n      schema:\n        type: integer\n        default: 25\n        minimum: 1\n        maximum: 100\n    blockNumberQueryParam:\n      name: block.number\n      in: query\n      description: The block's number\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        noOperator:\n          summary: Example of block.number equals with no operator\n          value: 1\n        eqOperator:\n          summary: Example of block.number equals operator\n          value: eq:2\n        gtOperator:\n          summary: Example of block.number greater than operator\n          value: gt:3\n        gteOperator:\n          summary: Example of block.number greater than or equals operator\n          value: gte:4\n        ltOperator:\n          summary: Example of block.number less than operator\n          value: lt:5\n        lteOperator:\n          summary: Example of block.number less than or equals operator\n          value: lte:6\n      schema:\n        type: string\n        pattern: ^((eq|gt|gte|lt|lte):)?\\d{1,19}$\n        minimum: 0\n    nodeIdQueryParam:\n      name: node.id\n      description: The ID of the node\n      in: query\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        serialNumNoOperator:\n          summary: Example of nodeId equals with no operator\n          value: 1\n        serialNumEqOperator:\n          summary: Example of nodeId equals operator\n          value: eq:2\n        serialNumGtOperator:\n          summary: Example of nodeId greater than operator\n          value: gt:3\n        serialNumGteOperator:\n          summary: Example of nodeId greater than or equals operator\n          value: gte:4\n        serialNumLtOperator:\n          summary: Example of nodeId less than operator\n          value: lt:5\n        serialNumLteOperator:\n          summary: Example of nodeId less than or equals operator\n          value: lte:6\n      schema:\n        type: string\n        pattern: ^((eq|gt|gte|lt|lte):)?\\d{1,19}$\n    nonceQueryParam:\n      name: nonce\n      in: query\n      description: >-\n        Filter the query result by the nonce of the transaction. A zero nonce represents user submitted transactions\n        while a non-zero nonce is generated by main nodes. The filter honors the last value. If not specified,\n        all transactions with specified payer account ID and valid start timestamp match.\n      example: 0\n      schema:\n        type: integer\n        minimum: 0\n    nonceQueryParamWithDefault:\n      name: nonce\n      in: query\n      description: >-\n        Filter the query result by the nonce of the transaction. A zero nonce represents user submitted transactions\n        while a non-zero nonce is generated by main nodes. The filter honors the last value. Default is 0 when\n        not specified.\n      example: 1\n      schema:\n        type: integer\n        default: 0\n        minimum: 0\n    orderQueryParam:\n      name: order\n      in: query\n      description: The order in which items are listed\n      example: desc\n      schema:\n        enum: [ asc, desc ]\n        default: asc\n    orderQueryParamDesc:\n      name: order\n      in: query\n      description: The order in which items are listed\n      example: asc\n      schema:\n        enum: [ asc, desc ]\n        default: desc\n    publicKeyQueryParam:\n      name: publickey\n      in: query\n      description: The public key to compare against\n      example: 3c3d546321ff6f63d701d2ec5c277095874e19f4a235bee1e6bb19258bf362be\n      schema:\n        type: string\n    scheduledQueryParam:\n      name: scheduled\n      in: query\n      description: >-\n        Filter transactions by the scheduled flag. If true, return information for the scheduled transaction. If false,\n        return information for the non-scheduled transaction. If not present, return information for all transactions\n        matching transactionId.\n      schema:\n        type: boolean\n    scheduledQueryParamWithDefault:\n      name: scheduled\n      in: query\n      description: >-\n        Filter transactions by the scheduled flag. If true, return information for the scheduled transaction.\n        If false, return information for the non-scheduled transaction.\n      schema:\n        type: boolean\n        default: false\n    scheduleIdQueryParam:\n      name: schedule.id\n      description: The ID of the schedule to return information for\n      in: query\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        entityNumNoOperator:\n          summary: Example of entityNum equals with no operator\n          value: 100\n        idNoOperator:\n          summary: Example of id equals with no operator\n          value: 0.0.100\n        entityNumEqOperator:\n          summary: Example of entityNum equals operator\n          value: eq:200\n        idEqOperator:\n          summary: Example of id equals operator\n          value: eq:0.0.200\n        entityNumNeOperator:\n          summary: Example of entityNum not equals operator\n          value: ne:300\n        idNeOperator:\n          summary: Example of id not equals operator\n          value: ne:0.0.300\n        entityNumGtOperator:\n          summary: Example of entityNum greater than operator\n          value: gt:400\n        idGtOperator:\n          summary: Example of id greater than operator\n          value: gt:0.0.400\n        entityNumGteOperator:\n          summary: Example of entityNum greater than or equals operator\n          value: gte:500\n        idGteOperator:\n          summary: Example of id greater than or equals operator\n          value: gte:0.0.500\n        entityNumLtOperator:\n          summary: Example of entityNum less than operator\n          value: lt:600\n        idLtOperator:\n          summary: Example of id less than operator\n          value: lt:0.0.600\n        entityNumLteOperator:\n          summary: Example of entityNum less than or equals operator\n          value: lte:700\n        idLteOperator:\n          summary: Example of id less than or equals operator\n          value: lte:0.0.700\n      schema:\n        $ref: '#/components/schemas/EntityIdQuery'\n    serialNumberPathParam:\n      name: serialNumber\n      in: path\n      required: true\n      description: The nft serial number\n      example: 1\n      schema:\n        type: integer\n        format: int64\n        default: 1\n        minimum: 1\n        maximum: 9223372036854775807\n    serialNumberQueryParam:\n      name: serialnumber\n      in: query\n      explode: true\n      description: The nft serial number (64 bit type). Requires a tokenId value also be populated.\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        serialNumNoOperator:\n          summary: Example of serialNum equals with no operator\n          value: 100\n        serialNumEqOperator:\n          summary: Example of serialNum equals operator\n          value: eq:200\n        serialNumGtOperator:\n          summary: Example of serialNum greater than operator\n          value: gt:400\n        serialNumGteOperator:\n          summary: Example of serialNum greater than or equals operator\n          value: gte:500\n        serialNumLtOperator:\n          summary: Example of serialNum less than operator\n          value: lt:600\n        serialNumLteOperator:\n          summary: Example of serialNum less than or equals operator\n          value: lte:700\n      schema:\n        type: string\n        pattern: ^((eq|gt|gte|lt|lte):)?\\d{1,19}?$\n    timestampQueryParam:\n      description: The consensus timestamp in seconds.nanoseconds format with an optional comparison operator\n      name: timestamp\n      in: query\n      explode: true\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        secondsNoOperator:\n          summary: Example of seconds equals with no operator\n          value: 1234567890\n        timestampNoOperator:\n          summary: Example of timestamp equals with no operator\n          value: 1234567890.000000100\n        secondsEqOperator:\n          summary: Example of seconds equals with operator\n          value: eq:1234567890\n        timestampEqOperator:\n          summary: Example of timestamp equals with operator\n          value: eq:1234567890.000000200\n        secondsNeOperator:\n          summary: Example of seconds not equals operator\n          value: ne:1234567890\n        timestampNeOperator:\n          summary: Example of timestamp not equals operator\n          value: ne:1234567890.000000300\n        secondsGtOperator:\n          summary: Example of seconds greater than operator\n          value: gt:1234567890\n        timestampGtOperator:\n          summary: Example of timestamp greater than operator\n          value: gt:1234567890.000000400\n        secondsGteOperator:\n          summary: Example of seconds greater than or equals operator\n          value: gte:1234567890\n        timestampGteOperator:\n          summary: Example of timestamp greater than or equals operator\n          value: gte:1234567890.000000500\n        secondsLtOperator:\n          summary: Example of seconds less than operator\n          value: lt:1234567890\n        timestampLtOperator:\n          summary: Example of timestamp less than operator\n          value: lt:1234567890.000000600\n        secondsLteOperator:\n          summary: Example of seconds less than or equals operator\n          value: lte:1234567890\n        timestampLteOperator:\n          summary: Example of timestamp less than or equals operator\n          value: lte:1234567890.000000700\n      schema:\n        type: array\n        items:\n          type: string\n          pattern: ^((eq|gt|gte|lt|lte|ne):)?\\d{1,10}(.\\d{1,9})?$\n    timestampPathParam:\n      name: timestamp\n      in: path\n      description: The timestamp at which the associated transaction reached consensus\n      required: true\n      example: 1234567890.000000700\n      schema:\n        type: string\n        pattern: ^\\d{1,10}(.\\d{1,9})?$\n    tokenInfoTimestampQueryParam:\n      name: timestamp\n      in: query\n      explode: true\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        secondsNoOperator:\n          summary: Example of seconds equals with no operator\n          value: 1234567890\n        timestampNoOperator:\n          summary: Example of timestamp equals with no operator\n          value: 1234567890.000000100\n        secondsEqOperator:\n          summary: Example of seconds equals with operator\n          value: eq:1234567890\n        timestampEqOperator:\n          summary: Example of timestamp equals with operator\n          value: eq:1234567890.000000200\n        secondsLtOperator:\n          summary: Example of seconds less than operator\n          value: lt:1234567890\n        timestampLtOperator:\n          summary: Example of timestamp less than operator\n          value: lt:1234567890.000000600\n        secondsLteOperator:\n          summary: Example of seconds less than or equals operator\n          value: lte:1234567890\n        timestampLteOperator:\n          summary: Example of timestamp less than or equals operator\n          value: lte:1234567890.000000700\n      schema:\n        type: string\n        pattern: ^((eq|lt|lte):)?\\d{1,10}(.\\d{1,9})?$\n    logTopic0QueryParam:\n      name: topic0\n      in: query\n      explode: true\n      description: The first topic associated with a contract log. Requires a timestamp range also be populated.\n      schema:\n        $ref: '#/components/schemas/LogTopicQueryParam'\n    logTopic1QueryParam:\n      name: topic1\n      in: query\n      description: The second topic associated with a contract log. Requires a timestamp range also be populated.\n      schema:\n        $ref: '#/components/schemas/LogTopicQueryParam'\n    logTopic2QueryParam:\n      name: topic2\n      in: query\n      description: The third topic associated with a contract log. Requires a timestamp range also be populated.\n      schema:\n        $ref: '#/components/schemas/LogTopicQueryParam'\n    logTopic3QueryParam:\n      name: topic3\n      in: query\n      description: The fourth topic associated with a contract log. Requires a timestamp range also be populated.\n      schema:\n        $ref: '#/components/schemas/LogTopicQueryParam'\n    spenderIdQueryParam:\n      name: spender.id\n      description: The ID of the spender to return information for\n      in: query\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        entityNumNoOperator:\n          summary: Example of entityNum equals with no operator\n          value: 100\n        idNoOperator:\n          summary: Example of id equals with no operator\n          value: 0.0.100\n        entityNumEqOperator:\n          summary: Example of entityNum equals operator\n          value: eq:200\n        idEqOperator:\n          summary: Example of id equals operator\n          value: eq:0.0.200\n        idGtOperator:\n          summary: Example of id greather than operator\n          value: gt:0.0.200\n        idGteOperator:\n          summary: Example of id greather than or equal to operator\n          value: gte:0.0.200\n        idLtOperator:\n          summary: Example of id less than operator\n          value: lt:0.0.200\n        idLteOperator:\n          summary: Example of id less than or equal to operator\n          value: lte:0.0.200\n      schema:\n        $ref: '#/components/schemas/EntityIdQuery'\n    transactionTypeQueryParam:\n      name: transactiontype\n      in: query\n      example: cryptotransfer\n      schema:\n        $ref: '#/components/schemas/TransactionTypes'\n    transactionIdPathParam:\n      name: transactionId\n      in: path\n      required: true\n      description: Transaction id\n      example: 0.0.10-1234567890-000000000\n      schema:\n        type: string\n    tokenIdQueryParam:\n      name: token.id\n      description: The ID of the token to return information for\n      in: query\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        entityNumNoOperator:\n          summary: Example of entityNum equals with no operator\n          value: 100\n        idNoOperator:\n          summary: Example of id equals with no operator\n          value: 0.0.100\n        entityNumEqOperator:\n          summary: Example of entityNum equals operator\n          value: eq:200\n        idEqOperator:\n          summary: Example of id equals operator\n          value: eq:0.0.200\n        entityNumNeOperator:\n          summary: Example of entityNum not equals operator\n          value: ne:300\n        idNeOperator:\n          summary: Example of id not equals operator\n          value: ne:0.0.300\n        entityNumGtOperator:\n          summary: Example of entityNum greater than operator\n          value: gt:400\n        idGtOperator:\n          summary: Example of id greater than operator\n          value: gt:0.0.400\n        entityNumGteOperator:\n          summary: Example of entityNum greater than or equals operator\n          value: gte:500\n        idGteOperator:\n          summary: Example of id greater than or equals operator\n          value: gte:0.0.500\n        entityNumLtOperator:\n          summary: Example of entityNum less than operator\n          value: lt:600\n        idLtOperator:\n          summary: Example of id less than operator\n          value: lt:0.0.600\n        entityNumLteOperator:\n          summary: Example of entityNum less than or equals operator\n          value: lte:700\n        idLteOperator:\n          summary: Example of id less than or equals operator\n          value: lte:0.0.700\n      schema:\n        $ref: '#/components/schemas/EntityIdQuery'\n    tokenTypeQueryParam:\n      name: type\n      in: query\n      example:\n        - ALL\n        - FUNGIBLE_COMMON\n        - NON_FUNGIBLE_UNIQUE\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    contractsBlockNumberQueryParam:\n      name: block.number\n      in: query\n      description: The block's number\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        noOperator:\n          summary: Example of block.number equals with no operator\n          value: 1\n        eqOperator:\n          summary: Example of block.number equals operator\n          value: eq:2\n        hexEncoded:\n          summary: Example of hex encoded block.number equals with no operator\n          value: '0xa0'\n        hexEncodedEqOperator:\n          summary: Example of hex encoded block.number equals with equals operator\n          value: eq:0xa0\n      schema:\n        type: string\n        pattern: ^(eq:)?(\\d{1,19}|0x[a-fA-f0-9]+)$\n        minimum: 0\n    blockHashQueryParam:\n      name: block.hash\n      in: query\n      description: The block's hash\n      examples:\n        noValue:\n          summary: --\n          value: \"\"\n        32ByteNoOperator:\n          summary: Example of 32 byte block.hash equals with no operator\n          value: ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        48ByteNoOperator:\n          summary: Example of 48 byte block.hash equals with no operator\n          value: 1eaf1abbd64bbcac7f473f0272671c66d3d1d64f584112b11cd4d2063e736305312fcb305804a48baa41571e71c39c61\n        32ByteEqOperator:\n          summary: Example of 32 byte block.hash with equals operator\n          value: eq:ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        48ByteEqOperator:\n          summary: Example of 48 byte block.hash with equals operator\n          value: eq:1eaf1abbd64bbcac7f473f0272671c66d3d1d64f584112b11cd4d2063e736305312fcb305804a48baa41571e71c39c61\n        32Byte0xPrefixNoOperator:\n          summary: Example of 32 byte block.hash equals with 0x prefix and no operator\n          value: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n        48Byte0xPrefixNoOperator:\n          summary: Example of 48 byte block.hash equals with 0x prefix and no operator\n          value: '0x1eaf1abbd64bbcac7f473f0272671c66d3d1d64f584112b11cd4d2063e736305312fcb305804a48baa41571e71c39c61'\n        32Byte0xPrefixEqOperator:\n          summary: Example of 32 byte block.hash with 0x prefix and equals operator\n          value: eq:0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        48Byte0xPrefixEqOperator:\n          summary: Example of 48 byte block.hash with 0x prefix and equals operator\n          value: eq:0x1eaf1abbd64bbcac7f473f0272671c66d3d1d64f584112b11cd4d2063e736305312fcb305804a48baa41571e71c39c61\n      schema:\n        type: string\n        pattern: ^(eq:)?(0x)?([0-9A-Fa-f]{64}|[0-9A-Fa-f]{96})$\n    transactionIndexQueryParam:\n      name: transaction.index\n      in: query\n      description: The transaction index in the block\n      example: 1\n      schema:\n        type: number\n    internalQueryParam:\n      name: internal\n      in: query\n      description: Whether to include child transactions or not\n      example: true\n      schema:\n        type: boolean\n        default: false\n    transactionIdOrEthHashPathParam:\n      name: transactionIdOrHash\n      in: path\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/EthereumHash'\n          - $ref: '#/components/schemas/TransactionIdStr'\n      required: true\n      description: Transaction Id or a 32 byte hash with optional 0x prefix\n      examples:\n        trahsactionId:\n          value: 0.0.10-1234567890-000000000\n        transactionHash:\n          value: ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        transactionHashWith0xPrefix:\n          value: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n",
			"canonicalURL": "/github.com/hashgraph/hedera-mirror-node@99a20239472e7fb373ab23aca120a6b7f37b16ff/-/blob/hedera-mirror-rest/api/v1/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/hashgraph/hedera-mirror-node/blob/99a20239472e7fb373ab23aca120a6b7f37b16ff/hedera-mirror-rest/api/v1/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/v1/topics/messages/{consensusTimestamp}\": at 1:97503: get: operation \"getTopicMessagesByConsensusTimestamp\": at 1:97510: parse path \"/api/v1/topics/messages/{consensusTimestamp}\": path parameter not specified: \"consensusTimestamp\""
}