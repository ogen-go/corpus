{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nasa/uam-apis"
		},
		"file": {
			"name": "nasa-astm-utm.yaml",
			"size": 0,
			"path": "datacollection/nasa-astm-utm.yaml",
			"byteSize": 91461,
			"content": "---\nopenapi: 3.0.2\ninfo:\n  title: UTM API (USS-\u003eDSS and USS-\u003eUSS) with clarifications for NASA Data Pipeline\n  version: 0.3.5\n  description: |-\n    Interface definitions for 'Discovery and Synchronization Service' (DSS) and 'UAS Service Supplier (USS).\n\n    DSS functionality includes identification of peer UTM USS instances (managing flight operations and constraints).\n    USS functionality includes sharing details of flight operations and constraints.\n\n    Note: Unless otherwise specified, fields specified in a message but not declared in the API shall be ignored.\n\nsecurity:\n  - Authority:\n      - utm.strategic_coordination\n      - utm.constraint_management\n      - utm.constraint_consumption\n\ntags:\n  - name: \"Operation references\"\n    description: |-\n      Endpoints exposed by the DSS for interaction with references to Operations.\n  - name: \"Operation details\"\n    description: |-\n      Endpoints exposed by USSs for interaction with details of Operations.\n  - name: \"Constraint references\"\n    description: |-\n      Endpoints exposed by the DSS for interaction with references to Constraints.\n  - name: \"Constraint details\"\n    description: |-\n      Endpoints exposed by USSs for interaction with details of Constraints.\n  - name: \"Subscriptions\"\n    description: |-\n      Endpoints exposed by the DSS for interaction with Subscription entities.\n  - name: \"Reports\"\n    description: |-\n      Endpoints exposed by the DSS for reporting peer DSS issues.\n  - name: dss\n    description: Endpoints exposed by the DSS server.\n  - name: p2p_utm\n    description: Endpoints exposed by UTM USSs for peer-peer communication.\n\n\n#\n#\n#\n\ncomponents:\n  securitySchemes:\n    Authority:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://token_vendor.com/oauth/token\n          scopes:\n            utm.strategic_coordination: |-\n              Client may perform planning, strategic conflict detection, and conformance monitoring activities, including reading information about Constraints.\n            utm.constraint_management: |-\n              Client may manage (create, edit, and delete) Constraints they own.\n            utm.constraint_consumption: |-\n              Client may read Constraints from the DSS (references) and partner USSs (details).\n      description: |-\n        Authorization from, or on behalf of, an authorization authority.  This authority shall issue access tokens that are JSON Web Tokens as defined in RFC 7519, using the `RS256` algorithm for the signature, publish to all providers the public key for verifying that signature, and implement standard OAuth server discovery mechanisms as described in RFC 8414.\n\n        The following fields shall be included in the JWT claim for access tokens issued by this authority:\n            * `iss`, with the URL at which the token generation request was received.\n            * `exp`, with a time no further than 1 hour in the future.\n            * `sub`, with unique ID of the client requesting the access token.\n            * `scope`, with an array of strings indicating the scopes granted.\n            * `jti`, according to RFC 7519.\n\n        Only one scope shall be granted for a token.  The tokens granted by this authority shall protect against reuse of received tokens to impersonate the sender to other recipients (via use of the `aud` claim or other means).\n\n        Clients shall provide these access tokens in an `Authorization` header in the form `Bearer \u003ctoken\u003e` in accordance with RFC 6750.\n\n\n  schemas:\n    UUIDv4:\n      description: |-\n        Universally-unique identifier (version 4).\n      maxLength: 36\n      minLength: 36\n      type: string\n      format: uuid\n      pattern: \u003e-\n        '^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-4[0-9a-fA-F]{3}\\\\-[8-b][0-9a-fA-F]{3}\\\\-[0-9a-fA-F]{12}$'\n      example: '03e5572a-f733-49af-bc14-8a18bd53ee39'\n\n    EntityUUID:\n      description: |-\n        Universally-unique identifier for an Entity communicated through\n        the DSS.  Formatted as UUIDv4.\n      anyOf:\n        - $ref: '#/components/schemas/UUIDv4'\n      example: '2f8343be-6482-4d1b-a474-16847e01af1e'\n\n    EntityOVN:\n      title: EntityOVN\n      description: |-\n        A token associated with a particular UTM Entity+version created\n        by the DSS upon creation or modification of an Entity reference and provided\n        to the client creating or modifying the Entity reference.  The EntityOVN\n        is stored privately by the DSS and then compared against entries in a Key\n        provided to mutate the airspace.  The EntityOVN is also provided by\n        the client whenever that client transmits the full information of the Entity\n        (either via GET, or via a subscription notification).\n      type: string\n      minLength: 16\n      maxLength: 128\n      example: '9d158f59-80b7-4c11-9c0c-8a2b4d936b2d'\n\n    SubscriptionUUID:\n      description: |-\n        Universally-unique identifier for a Subscription communicated through\n        the DSS.  Formatted as UUIDv4.\n      anyOf:\n        - $ref: '#/components/schemas/UUIDv4'\n      example: '78ea3fe8-71c2-4f5c-9b44-9c02f5563c6f'\n\n    Key:\n      description: |\n        Proof that a client has obtained the latest airspace content, used to ensure that write operations to the DSS occur only when the latest content is known (i.e. has been read). The client is required to pass a current Key constructed from information obtained with previous read operations and subsequent requests for full information, and optionally, subscription updates for deconflicted write operations to the DSS.  The contents of this data structure are generated by the client.\n      type: array\n      items:\n        $ref: '#/components/schemas/EntityOVN'\n      default: []\n\n    Time:\n      required:\n        - value\n        - format\n      type: object\n      properties:\n        value:\n          type: string\n          description: RFC3339-formatted time/date string.  The time zone must be 'Z'.\n          format: date-time\n          example: '1985-04-12T23:20:50.52Z'\n        format:\n          type: string\n          enum:\n            - RFC3339\n\n    Radius:\n      required:\n        - value\n        - units\n      type: object\n      properties:\n        value:\n          format: float\n          description: Distance from the centerpoint of a circular area, along the WGS84 ellipsoid.\n          type: number\n          example: 300.183\n        units:\n          type: string\n          description: FIXM-compatible units.  Only meters (\"M\") are acceptable for UTM.\n          enum:\n            - M\n\n    Altitude:\n      type: object\n      required:\n        - value\n        - reference\n        - units\n      properties:\n        value:\n          description: |-\n            The numeric value of the altitude. Note that min and max values are\n            added as a sanity check. As use cases evolve and more options are\n            made available in terms of units of measure or reference systems,\n            these bounds should be re-evaluated.\n          type: number\n          format: double\n          minimum: -8000\n          exclusiveMinimum: false\n          maximum: 100000\n          exclusiveMaximum: false\n        reference:\n          description: |-\n            A code indicating the reference for a vertical distance. See AIXM 5.1\n            and FIXM 4.2.0. Currently, UTM only allows WGS84 with no immediate\n            plans to allow other options. FIXM and AIXM allow for 'SFC' which is\n            equivalent to AGL.\n          type: string\n          enum:\n            - W84\n        units:\n          description: |-\n            The reference quantities used to express the value of altitude. See\n            FIXM 4.2. Currently, UTM only allows meters with no immediate plans\n            to allow other options.\n          type: string\n          enum:\n            - M\n\n    Latitude:\n      description: Degrees of latitude north of the equator, with reference to the WGS84 ellipsoid.\n      maximum: 90\n      exclusiveMaximum: false\n      minimum: -90\n      exclusiveMinimum: false\n      type: number\n      format: double\n      example: 34.123\n\n    Longitude:\n      description: Degrees of longitude east of the Prime Meridian, with reference to the WGS84 ellipsoid.\n      minimum: -180\n      exclusiveMaximum: false\n      maximum: 180\n      exclusiveMinimum: false\n      type: number\n      format: double\n      example: -118.456\n\n    Polygon:\n      description: |-\n        An enclosed area on the earth.\n        The bounding edges of this polygon shall be the shortest paths between connected vertices.  This means, for instance, that the edge between two points both defined at a particular latitude is not generally contained at that latitude.\n        The winding order shall be interpreted as the order which produces the smaller area.\n        The path between two vertices shall be the shortest possible path between those vertices.\n        Edges may not cross.\n        Vertices may not be duplicated.  In particular, the final polygon vertex shall not be identical to the first vertex.\n        NASA does not validate winding order.\n      required:\n        - vertices\n      type: object\n      properties:\n        vertices:\n          minItems: 3\n          type: array\n          items:\n            $ref: '#/components/schemas/LatLngPoint'\n\n    LatLngPoint:\n      description: Point on the earth's surface.\n      required:\n        - lat\n        - lng\n      type: object\n      properties:\n        lng:\n          $ref: '#/components/schemas/Longitude'\n        lat:\n          $ref: '#/components/schemas/Latitude'\n\n    Circle:\n      description: |-\n        A circular area on the surface of the earth.\n      type: object\n      required:\n        - center\n        - radius\n      properties:\n        center:\n          $ref: '#/components/schemas/LatLngPoint'\n        radius:\n          $ref: '#/components/schemas/Radius'\n\n    Volume3D:\n      description: |-\n        A three-dimensional geographic volume consisting of a vertically-extruded shape.  Exactly one of\n        `outline_polygon` or `outline_circle` must be specified.\n      required:\n        - altitude_lower\n        - altitude_upper\n      type: object\n      properties:\n        outline_circle:\n          anyOf:\n            - $ref: '#/components/schemas/Circle'\n          description: A circular geographic shape on the surface of the earth.\n        outline_polygon:\n          anyOf:\n            - $ref: '#/components/schemas/Polygon'\n          description: A polygonal geographic shape on the surface of the earth.\n        altitude_lower:\n          description: Minimum bounding altitude of this volume.\n          anyOf:\n            - $ref: '#/components/schemas/Altitude'\n        altitude_upper:\n          description: Maximum bounding altitude of this volume.\n          anyOf:\n            - $ref: '#/components/schemas/Altitude'\n\n    Volume4D:\n      description: Contiguous block of geographic spacetime.\n      required:\n        - volume\n        - time_start\n        - time_end\n      type: object\n      properties:\n        volume:\n          $ref: '#/components/schemas/Volume3D'\n        time_start:\n          description: Beginning time of this volume.\n          anyOf:\n            - $ref: '#/components/schemas/Time'\n        time_end:\n          description: End time of this volume.\n          anyOf:\n            - $ref: '#/components/schemas/Time'\n\n    ErrorResponse:\n      description: |-\n        Human-readable string returned when an error occurs\n        as a result of a USS - DSS transaction.\n      type: object\n      properties:\n        message:\n          description: |-\n            Human-readable message indicating what error occurred and/or why.\n          type: string\n          example: 'The error occurred because [...]'\n\n    SubscriptionState:\n      description: |-\n        State of Subscription which is causing a notification to be sent.\n      required:\n        - subscription_id\n        - notification_index\n      type: object\n      properties:\n        subscription_id:\n          $ref: '#/components/schemas/SubscriptionUUID'\n        notification_index:\n          $ref: '#/components/schemas/SubscriptionNotificationIndex'\n\n    SubscriberToNotify:\n      description: |-\n        Subscriber to notify of a change in the airspace.  This is provided by the DSS\n        to a client changing the airspace, and it is the responsibility of that client\n        to send a notification to the specified USS according to the change made to the\n        airspace.\n      required:\n        - subscriptions\n        - uss_base_url\n      type: object\n      properties:\n        subscriptions:\n          description: Subscription(s) prompting this notification.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionState'\n          minItems: 1\n        uss_base_url:\n          $ref: '#/components/schemas/SubscriptionUssBaseURL'\n\n    Subscription:\n      description: |-\n        Specification of a geographic area that a client is interested\n        in on an ongoing basis (e.g., \"planning area\").\n      required:\n        - id\n        - version\n        - notification_index\n        - uss_base_url\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/SubscriptionUUID'\n        version:\n          description: |-\n            Sequential version that the DSS increments every time the Subscription changes.  A USS\n            must specify this version when modifying an existing Subscription to ensure consistency\n            in read-modify-write operations and distributed systems.\n          type: integer\n          format: int32\n          minimum: 1\n          exclusiveMinimum: false\n        notification_index:\n          $ref: '#/components/schemas/SubscriptionNotificationIndex'\n        time_start:\n          description: |-\n            If set, this subscription will not receive notifications involving airspace changes\n            entirely before this time.\n          anyOf:\n            - $ref: '#/components/schemas/Time'\n        time_end:\n          description: |-\n            If set, this subscription will not receive notifications involving airspace changes\n            entirely after this time.\n          anyOf:\n            - $ref: '#/components/schemas/Time'\n        uss_base_url:\n          $ref: '#/components/schemas/SubscriptionUssBaseURL'\n        notify_for_operations:\n          description: If true, trigger notifications when Operations are created, updated, or deleted.  Otherwise, changes in Operations should not trigger notifications.\n          type: boolean\n          default: false\n        notify_for_constraints:\n          description: If true, trigger notifications when Constraints are created, updated, or deleted.  Otherwise, changes in Constraints should not trigger notifications.\n          type: boolean\n          default: false\n        implicit_subscription:\n          description: |-\n            True if this Subscription was implicitly created by the DSS via the creation of an\n            Operation, and should therefore be deleted by the DSS when that Operation is deleted.\n          type: boolean\n          default: false\n        dependent_operations:\n          description: List of Operations (UUIDs) that are dependent on this Subscription.\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityUUID'\n          default: []\n\n    SubscriptionNotificationIndex:\n      format: int32\n      description: Tracks the notifications sent for a subscription so the subscriber\n        can detect missed notifications more easily.\n      type: integer\n      minimum: 0\n      exclusiveMinimum: false\n      default: 0\n\n    SearchSubscriptionParameters:\n      description: |-\n        Parameters for a request to find Subscriptions matching the provided criteria.\n      type: object\n      properties:\n        area_of_interest:\n          $ref: '#/components/schemas/Volume4D'\n\n    SearchSubscriptionsResponse:\n      description: Response to DSS query for subscriptions in a particular geographic area.\n      required:\n        - subscriptions\n      type: object\n      properties:\n        subscriptions:\n          description: Subscriptions that overlap the specified geographic area.\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n          default: []\n\n    GetSubscriptionResponse:\n      description: Response to DSS request for the subscription with the given id.\n      required:\n        - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n\n    PutSubscriptionParameters:\n      description: |-\n        Parameters for a request to create/update a subscription in the DSS.\n      required:\n        - extents\n        - old_version\n        - uss_base_url\n      type: object\n      properties:\n        extents:\n          $ref: '#/components/schemas/Volume4D'\n        old_version:\n          description: |-\n            To ensure consistency in read-modify-write operations and distributed systems, the client must\n            specify the version of this Subscription in the DSS that it is attempting to modify.  If a new\n            Subscription is being created, this version should be set to 0.\n          type: integer\n          format: int32\n          minimum: 0\n          exclusiveMinimum: false\n          default: 0\n        uss_base_url:\n          $ref: '#/components/schemas/SubscriptionUssBaseURL'\n        notify_for_operations:\n          description: If true, trigger notifications when Operations are created, updated, or deleted.  Otherwise, changes in Operations should not trigger notifications.\n          type: boolean\n          default: false\n        notify_for_constraints:\n          description: If true, trigger notifications when Constraints are created, updated, or deleted.  Otherwise, changes in Constraints should not trigger notifications.\n          type: boolean\n          default: false\n\n    SubscriptionUssBaseURL:\n      description: |-\n        The base URL of a USS implementation of the parts of the USS-USS API necessary for\n        receiving the notifications requested by this Subscription.\n      anyOf:\n        - $ref: '#/components/schemas/UssBaseURL'\n\n    PutSubscriptionResponse:\n      description: |-\n        Response for a request to create or update a subscription.\n      required:\n        - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n        operations:\n          description: |-\n            Operations in or near the subscription area at the time of creation/update,\n            if `notify_for_operations` is true\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationReference'\n          default: []\n        constraints:\n          description: |-\n            Constraints in or near the subscription area at the time of creation/update,\n            if `notify_for_constraints` is true\n            was specified.\n          type: array\n          items:\n            $ref: '#/components/schemas/ConstraintReference'\n          default: []\n\n    DeleteSubscriptionResponse:\n      description: Response for a successful request to delete an Subscription.\n      required:\n        - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n\n    UssBaseURL:\n      description: |-\n        The base URL of a USS implementation of part or all of the USS-USS API. Per the USS-USS API, the full URL\n        of a particular resource can be constructed by appending, e.g., `/uss/v1/{resource}/{id}` to this base URL.\n        Accordingly, this URL may not have a trailing '/' character.\n      type: string\n      example: 'https://utm_uss.com/utm'\n\n    OperationState:\n      description: |-\n        State of an Operation.\n\n        'Accepted': This Operation was fully deconflicted from other Entities at the time it changed to this\n        state, but no aircraft associated with it are active yet.  The create or update request for this\n        Operation must include a Key containing all OVNs for all relevant Entities.\n\n        'Activated': One or more aircraft associated with this Operation are, or will imminently be, in\n        flight.  The create or update request for this Operation must include a Key containing all OVNs for\n        all relevant Entities.\n\n        'NonConforming': This Operation is outside of the planned volume.  The new or updated volumes MUST\n        contain the actual position of the aircraft.  In this state, the `/v1/operations/{entityuuid}/telemetry'\n        USS-USS endpoint should respond, if available, to queries from USS peers.  The create or update request\n        for this Operation may omit a Key in this case because the Operation is being adjusted as flown and\n        cannot necessarily deconflict.\n\n        'Contingent': This Operation is executing a contingency action, either because it has been\n        NonConforming for a certain period of time, or because of operator initiation.  This state must\n        transition to Ended.  The new or updated volumes MUST contain the actual position of the aircraft.\n        In this state, the `/v1/operations/{entityuuid}/telemetry' USS-USS endpoint should respond, if available,\n        to queries from USS peers.  The create or update request for this Operation may omit a Key in this\n        case because the Operation is being adjusted as flown and cannot necessarily deconflict.\n\n        'Ended': This Operation has ended (due to either an Operator-induced change or flight completion).\n      type: string\n      enum:\n        - Accepted\n        - Activated\n        - NonConforming\n        - Contingent\n        - Ended\n\n    OperationReference:\n      description: |-\n        The high-level information of a planned or active Operation with the URL\n        of a USS to query for details.  Note: 'OVN' is returned ONLY to the USS that\n        created the Operation but NEVER to other USS instances.\n      required:\n        - id\n        - owner\n        - version\n        - time_start\n        - time_end\n        - uss_base_url\n        - subscription_id\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityUUID'\n        owner:\n          type: string\n          example: 'uss1'\n          description: |-\n            Created by the DSS based on creating client's ID (via access token).  Used internal\n            to the DSS for restricting mutation and deletion operations to owner.  Used by USSs\n            to reject Operation update notifications originating from a USS that does not own\n            the Operation.\n        version:\n          description: |-\n            Sequential version that the DSS increments every time the Operation changes.  A USS\n            may use this version to determine which Operation references have new details that\n            must be retrieved.\n          type: integer\n          format: int32\n          minimum: 1\n          exclusiveMinimum: false\n        ovn:\n          description: |-\n            Opaque version number of this Operation.  Populated only when the OperationReference\n            is owned by the USS retrieving or providing it.  Not populated when the\n            OperationReference is not owned by the USS retrieving or providing it (instead, the\n            USS must obtain the OVN from the details retrieved from the owning USS).\n          anyOf:\n            - $ref: '#/components/schemas/EntityOVN'\n        time_start:\n          description: Beginning time of Operation.\n          anyOf:\n            - $ref: '#/components/schemas/Time'\n        time_end:\n          description: End time of Operation.\n          anyOf:\n            - $ref: '#/components/schemas/Time'\n        uss_base_url:\n          $ref: '#/components/schemas/OperationUssBaseURL'\n        subscription_id:\n          description: |-\n            The ID of the Subscription that is ensuring the Operation owner receives relevant\n            airspace updates.\n          anyOf:\n            - $ref: '#/components/schemas/SubscriptionUUID'\n\n    OperationUssBaseURL:\n      description: |-\n        The base URL of a USS implementation that implements the parts of the USS-USS API necessary for\n        providing the details of this Operation, and telemetry during non-conformance or contingency,\n        if applicable.\n      anyOf:\n        - $ref: '#/components/schemas/UssBaseURL'\n\n    PutOperationReferenceParameters:\n      description: |-\n        Parameters for a request to create an OperationReference in the DSS.\n        A subscription to changes overlapping this volume may be implicitly created, but\n        this can be overridden by providing the (optional) 'subscription_id' to use.\n        Note: The implicit subscription is managed by the DSS, not the USS.\n      required:\n        - extents\n        - old_version\n        - state\n        - uss_base_url\n      type: object\n      properties:\n        extents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Volume4D'\n          minItems: 1\n        old_version:\n          description: |-\n            To ensure consistency in read-modify-write operations and distributed systems, the client must\n            specify the version of this Operation in the DSS that it is attempting to modify.  If a new\n            Operation is being created, this version should be set to 0.\n          type: integer\n          format: int32\n          minimum: 0\n          exclusiveMinimum: false\n          default: 0\n        key:\n          description: |-\n            Proof that the USS creating or mutating this Operation was aware of the current state of the\n            airspace, with the expectation that this Operation is therefore deconflicted from all relevant\n            features in the airspce.  This field is not required when declaring an Operation NonConforming\n            or Contingent, or when there are no relevant Entities in the airspace, but is otherwise required.\n            OVNs for Constraints are required if and only if the USS owning this Operation is considering\n            Constraints, which is determined by whether the Subscription associated with this Operation\n            triggers notifications for Constraints.\n          anyOf:\n            - $ref: '#/components/schemas/Key'\n        state:\n          $ref: '#/components/schemas/OperationState'\n        uss_base_url:\n          $ref: '#/components/schemas/OperationUssBaseURL'\n        subscription_id:\n          description: |-\n            The ID of an existing Subscription that the USS will use to keep the operator informed about\n            updates to relevant airspace information.  If this field is not provided, then the\n            `new_subscription` field must be provided in order to provide notification capability\n            for the Operation.  The Subscription specified by this ID must cover at least the area over\n            which this Operation is conducted, and it must provide notifications for Operations.\n          anyOf:\n            - $ref: '#/components/schemas/EntityUUID'\n        new_subscription:\n          description: |-\n            If an existing Subscription is not specified in `subscription_id`, then this field must be\n            populated.  When this field is populated, an implicit Subscription will be created and\n            associated with this Operation, and will generally be deleted automatically upon the\n            deletion of this Operation.\n          anyOf:\n            - $ref: '#/components/schemas/ImplicitSubscriptionParameters'\n\n    ImplicitSubscriptionParameters:\n      description: |-\n        Information necessary to create a Subscription to serve a single Operation's notification needs.\n      type: object\n      required:\n        - uss_base_url\n      properties:\n        uss_base_url:\n          description: |-\n            The base URL of a USS implementation of the parts of the USS-USS API necessary for\n            receiving the notifications that the Operation must be aware of.  This includes, at least,\n            notifications for relevant changes in Operations.\n          anyOf:\n            - $ref: '#/components/schemas/SubscriptionUssBaseURL'\n        notify_for_constraints:\n          description: |-\n            True if this Operation's Subscription should trigger notifications when Constraints change.  Otherwise, changes in Constraints should not trigger notifications.\n          type: boolean\n          default: false\n\n    GetOperationReferenceResponse:\n      description: |-\n        Response to DSS request for the OperationReference with the given ID.\n      required:\n        - operation_reference\n      type: object\n      properties:\n        operation_reference:\n          $ref: '#/components/schemas/OperationReference'\n\n    ChangeOperationReferenceResponse:\n      description: |-\n        Response to a request to create, update, or delete an OperationReference\n        in the DSS.\n      required:\n        - subscribers\n        - operation_reference\n      type: object\n      properties:\n        subscribers:\n          description: |-\n            DSS subscribers that this client now has the obligation to\n            notify of the Operation changes just made.  This client must call POST\n            for each provided URL according to the USS-USS `/v1/operations/{entityuuid}`\n            path API.  The client's own Subscriptions will also be included in this list.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriberToNotify'\n          default: []\n        operation_reference:\n          $ref: '#/components/schemas/OperationReference'\n\n    SearchOperationReferenceParameters:\n      description: |-\n        Parameters for a request to find OperationReferences matching the provided criteria.\n      type: object\n      properties:\n        area_of_interest:\n          $ref: '#/components/schemas/Volume4D'\n\n    SearchOperationReferenceResponse:\n      description: Response to DSS query for OperationReferences in an area of interest.\n      required:\n        - operation_references\n      type: object\n      properties:\n        operation_references:\n          description: OperationReferences in the area of interest.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationReference'\n          default: []\n\n    ConstraintReference:\n      description: A ConstraintReference (area in which a Constraint is present, along\n        with other high-level information, but no details).  The DSS reports only\n        these references and clients must exchange details and additional information\n        peer-to-peer.\n      required:\n        - id\n        - owner\n        - version\n        - time_start\n        - time_end\n        - uss_base_url\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityUUID'\n        owner:\n          type: string\n          example: 'uss1'\n          description: |-\n            Created by the DSS based on creating client's ID (via access token).  Used internal\n            to the DSS for restricting mutation and deletion operations to owner.  Used by USSs\n            to reject Constraint update notifications originating from a USS that does not own\n            the Constraint.\n        version:\n          description: |-\n            Sequential version that the DSS increments every time the Constraint changes.  A USS\n            may use this version to determine which Constraint references have new details that\n            must be retrieved.\n          type: integer\n          format: int32\n          minimum: 1\n          exclusiveMinimum: false\n        ovn:\n          description: |-\n            Opaque version number of this Constraint.  Populated only when the ConstraintReference\n            is owned by the USS retrieving or providing it.  Not populated when the\n            ConstraintReference is not owned by the USS retrieving or providing it (instead, the\n            USS must obtain the OVN from the details retrieved from the owning USS).\n          anyOf:\n            - $ref: '#/components/schemas/EntityOVN'\n        time_start:\n          $ref: '#/components/schemas/Time'\n        time_end:\n          $ref: '#/components/schemas/Time'\n        uss_base_url:\n          $ref: '#/components/schemas/ConstraintUssBaseURL'\n\n    ConstraintUssBaseURL:\n      description: |-\n        The base URL of a USS implementation that implements the parts of the USS-USS API necessary for\n        providing the details of this Constraint.\n      anyOf:\n        - $ref: '#/components/schemas/UssBaseURL'\n\n    PutConstraintReferenceParameters:\n      description: Parameters for a request to create/update a ConstraintReference in the\n        DSS.\n      required:\n        - extents\n        - old_version\n        - uss_base_url\n      type: object\n      properties:\n        extents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Volume4D'\n          minItems: 1\n        old_version:\n          description: |-\n            To ensure consistency in read-modify-write operations and distributed systems, the client must\n            specify the version of this Constraint in the DSS that it is attempting to modify.  If a new\n            Constraint is being created, this version should be set to 0.\n          type: integer\n          format: int32\n          minimum: 0\n          exclusiveMinimum: false\n          default: 0\n        uss_base_url:\n          $ref: '#/components/schemas/ConstraintUssBaseURL'\n\n    GetConstraintReferenceResponse:\n      description: Response to DSS request for the ConstraintReference with the given\n        ID.\n      required:\n        - constraint_reference\n      type: object\n      properties:\n        constraint_reference:\n          $ref: '#/components/schemas/ConstraintReference'\n\n    ChangeConstraintReferenceResponse:\n      description: Response to a request to create, update, or delete a ConstraintReference.\n        in the DSS.\n      required:\n        - subscribers\n      type: object\n      properties:\n        subscribers:\n          description: DSS subscribers that this client now has the obligation to\n            notify of the Constraint changes just made.  This client must call POST\n            for each provided URL according to the USS-USS `/v1/constraints/{entityuuid}`\n            path API.  The client's own Subscriptions will also be included in this list.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriberToNotify'\n          default: []\n        constraint_reference:\n          $ref: '#/components/schemas/ConstraintReference'\n\n    SearchConstraintReferenceParameters:\n      description: |-\n        Parameters for a request to find ConstraintReferences matching the provided criteria.\n      type: object\n      properties:\n        area_of_interest:\n          $ref: '#/components/schemas/Volume4D'\n\n    SearchConstraintReferencesResponse:\n      description: Response to DSS query for ConstraintReferences in an area of interest.\n      required:\n        - constraint_references\n      type: object\n      properties:\n        constraint_references:\n          description: ConstraintReferences in the area of interest.\n          type: array\n          items:\n            $ref: '#/components/schemas/ConstraintReference'\n          default: []\n\n    EntityReference:\n      description: Reference to a generic Entity known to the DSS.\n      type: object\n      properties:\n        operation_reference:\n          $ref: '#/components/schemas/OperationReference'\n        constraint_reference:\n          $ref: '#/components/schemas/ConstraintReference'\n\n    AirspaceConflictResponse:\n      description: Data provided when an airspace conflict was encountered.\n      type: object\n      properties:\n        message:\n          description: Human-readable message indicating what error occurred and/or\n            why.\n          type: string\n        entity_conflicts:\n          description: List of Entity references for which current proof of knowledge\n            was not provided.  If this field is present and contains elements, the\n            calling USS should query the details URLs for these Entities to obtain\n            their details and correct OVNs.  The OVNs can be used to update\n            the key, at which point the USS may retry this call.\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityReference'\n          default: []\n\n    ErrorReport:\n      description: A report informing a server of a communication problem.\n      required:\n        - url\n        - response_code\n        - problem\n      type: object\n      properties:\n        url:\n          description: URL of request that resulted in an error.\n          type: string\n        headers:\n          description: Set of headers included in request that resulted in an error.\n          type: array\n          items:\n            type: string\n          default: []\n        body:\n          description: Base64-encoded body content sent in request that resulted in an error.\n          type: string\n        response_code:\n          type: integer\n          format: int32\n          description: HTTP response code encountered in error response.\n        response_body:\n          type: string\n          description: Base64-encoded body content received in response that was in error.\n        problem:\n          type: string\n          description: Human-readable description of the problem with the response.\n        time_request:\n          description: The time at which the problematic request was initiated.\n          anyOf:\n            - $ref: '#/components/schemas/Time'\n        time_response:\n          description: The time at which the problematic response was received.\n          anyOf:\n            - $ref: '#/components/schemas/Time'\n        report_id:\n          description: ID assigned by the server receiving the report.  Not populated when submitting a report.\n          type: string\n          maxLength: 128\n\n    #\n    # USS-USS schema components\n    #\n    OperationDetails:\n      description: |-\n        Details of a UTM Operation. Note that this data is not stored in the DSS; only with the clients.\n      required:\n        - volumes\n        - state\n      type: object\n      properties:\n        volumes:\n          description: Volumes that wholly contain the Operation while being as small\n            as practical.\n          minItems: 1\n          type: array\n          items:\n            $ref: '#/components/schemas/Volume4D'\n        state:\n          $ref: '#/components/schemas/OperationState'\n        vlos:\n          description: If true, this Operation is ensuring deconfliction visually and volumes of other Operations may overlap the volumes of this Operation.\n          type: boolean\n          default: false\n\n\n    Operation:\n      description: Full description of a UTM Operation.\n      required:\n        - reference\n        - details\n      type: object\n      properties:\n        reference:\n          $ref: '#/components/schemas/OperationReference'\n        details:\n          $ref: '#/components/schemas/OperationDetails'\n\n    PutOperationDetailsParameters:\n      description: |-\n        Parameters of a message informing of detailed information for a peer Operation.\n        Pushed (by a client, not the DSS) directly to clients with subscriptions when\n        another client makes a change to airspace within a cell with a subscription.\n      required:\n        - operation_id\n        - subscriptions\n      type: object\n      properties:\n        operation_id:\n          description: ID of Operation that has changed.\n          anyOf:\n            - $ref: '#/components/schemas/EntityUUID'\n        operation:\n          description: |-\n            Full information about the Operation that has changed.  If this field is omitted,\n            the Operation was deleted.  A newly-created Operation can be differentiated from\n            an updated Operation by examining the `version` field.  The `ovn` field in the\n            nested `reference` must be populated.\n          anyOf:\n            - $ref: '#/components/schemas/Operation'\n        subscriptions:\n          type: array\n          description: Subscription(s) prompting this notification.\n          items:\n            $ref: '#/components/schemas/SubscriptionState'\n          minItems: 1\n\n    GetOperationDetailsResponse:\n      description: Response to peer request for the details of Operation with the given ID.\n      required:\n        - operation\n      type: object\n      properties:\n        operation:\n          $ref: '#/components/schemas/Operation'\n\n    ConstraintDetails:\n      description: Details of a UTM Constraint. Note that this data is\n        not stored in the DSS; only with the clients.\n      required:\n        - volumes\n      type: object\n      properties:\n        volumes:\n          description: Volumes that wholly contain the Constraint while being as small\n            as practical.\n          minItems: 1\n          type: array\n          items:\n            $ref: '#/components/schemas/Volume4D'\n        type:\n          description: Type of airspace feature this Constraint represents.\n          type: string\n          example: 'NonUTMAircraftOperations'\n\n    Constraint:\n      description: Full specification of a UTM Constraint.\n      required:\n        - reference\n        - details\n      type: object\n      properties:\n        reference:\n          $ref: '#/components/schemas/ConstraintReference'\n        details:\n          $ref: '#/components/schemas/ConstraintDetails'\n\n    PutConstraintDetailsParameters:\n      description: Parameters of a message informing of new full information for a\n        Constraint.  Pushed (by a client, not the DSS) directly to clients with subscriptions\n        when another client makes a change to airspace within a cell with a subscription.\n      required:\n        - constraint_id\n        - subscriptions\n      type: object\n      properties:\n        constraint_id:\n          description: ID of Constraint that has changed.\n          anyOf:\n            - $ref: '#/components/schemas/EntityUUID'\n        constraint:\n          description: |-\n            Full information about the Constraint that has changed.  If this field is omitted,\n            the Constraint was deleted.  A newly-created Constraint can be differentiated from\n            an updated Constraint by examining the `version` field.  The `ovn` field in the\n            nested `reference` must be populated.\n          anyOf:\n            - $ref: '#/components/schemas/Constraint'\n        subscriptions:\n          description: Subscription(s) prompting this notification.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionState'\n          minItems: 1\n\n    GetConstraintDetailsResponse:\n      description: |-\n        Response to peer request for the details of Constraint with the given ID.\n      required:\n        - constraint\n      type: object\n      properties:\n        constraint:\n          $ref: '#/components/schemas/Constraint'\n\n    GetOperationTelemetryResponse:\n      description: Response to a peer request for telemetry of an off-nominal Operation.\n      required:\n        - telemetry\n      type: object\n      properties:\n        telemetry:\n          $ref: '#/components/schemas/VehicleTelemetry'\n\n    VehicleTelemetry:\n      description: Vehicle position, altitude, and velocity.\n        The ID is the ID of the Operation this telemetry data corresponds to.\n      required:\n        - id\n        - time_measured\n        - position\n        - velocity\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityUUID'\n        position:\n          $ref: '#/components/schemas/Position'\n        velocity:\n          $ref: '#/components/schemas/Velocity'\n        time_measured:\n          $ref: '#/components/schemas/Time'\n\n    PositionAccuracyVertical:\n      description: |-\n        Vertical error that is likely to be present in this reported position.\n        This is the GVA enumeration from ADS-B, plus some finer values for UAS.\n      type: string\n      enum:\n        - VAUnknown\n        - VA150mPlus\n        - VA150m\n        - VA45m\n        - VA25m\n        - VA10m\n        - VA3m\n        - VA1m\n\n    PositionAccuracyHorizontal:\n      description: |-\n        Horizontal error that is likely to be present in this reported position.\n        This is the NACp enumeration from ADS-B, plus 1m for a more complete range for UAS.\n      type: string\n      enum:\n        - HAUnknown\n        - HA10NMPlus\n        - HA10NM\n        - HA4NM\n        - HA2NM\n        - HA1NM\n        - HA05NM\n        - HA03NM\n        - HA01NM\n        - HA005NM\n        - HA30m\n        - HA10m\n        - HA3m\n        - HA1m\n\n    Position:\n      description: |-\n        Location of the vehicle (UAS) as reported for UTM.\n        Note: 'accuracy' values are required when extrapolated field is true\n        and always in the entry for the current state.\n      type: object\n      required:\n        - longitude\n        - latitude\n        - altitude\n      properties:\n        longitude:\n          $ref: '#/components/schemas/Longitude'\n        latitude:\n          $ref: '#/components/schemas/Latitude'\n        accuracy_h:\n          $ref: '#/components/schemas/PositionAccuracyHorizontal'\n        accuracy_v:\n          $ref: '#/components/schemas/PositionAccuracyVertical'\n        extrapolated:\n          description: |-\n            True if this position was generated primarily by computation\n            rather than primarily from a direct instrument measurement.\n            Assumed false if not specified.\n          type: boolean\n          default: false\n        altitude:\n          $ref: '#/components/schemas/Altitude'\n\n    Velocity:\n      required:\n        - speed\n        - units_speed\n        - track\n      type: object\n      properties:\n        speed:\n          format: float\n          type: number\n          description: |-\n            Ground speed in meters/second.\n          example: 200.1\n        units_speed:\n          type: string\n          enum:\n            - MetersSecond\n        track:\n          format: float\n          type: number\n          description: |-\n            Direction of flight expressed as a \"True North-based\" ground track angle.\n            This value is provided in degrees East of North with a minimum resolution of 1 degree.\n          example: 120\n\npaths:\n  #\n  # DSS Endpoint: OPERATIONS\n  #\n\n  /dss/v1/operation_references/query:\n    summary: Query all Operations in the DSS that intersect with a specified geographic area, altitude-range, and time-range.\n    description: \"Interface to Operation references in the DSS.\"\n\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchOperationReferenceParameters'\n        required: true\n      tags:\n        - \"Operation references\"\n        - dss\n      security:\n        - Authority:\n            - utm.strategic_coordination\n      summary: Retrieve all Operation references in the specified area/volume/time from the DSS.\n      operationId: searchOperationReferences\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchOperationReferenceResponse'\n          description: Operations were successfully retrieved.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"413\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested area was too large.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  /dss/v1/operation_references/{entityuuid}:\n    summary: CRUD endpoint for a specified Operation reference in the DSS.\n    parameters:\n      - name: entityuuid\n        description: EntityUUID of the Operation.\n        schema:\n          $ref: '#/components/schemas/EntityUUID'\n        in: path\n        required: true\n\n    get:\n      tags:\n        - \"Operation references\"\n        - dss\n      security:\n        - Authority:\n            - utm.strategic_coordination\n      summary: Retrieve the specified Operation reference from the DSS.\n      operationId: getOperationReference\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOperationReferenceResponse'\n          description: Operation reference was retrieved successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutOperationReferenceParameters'\n        required: true\n      tags:\n        - \"Operation references\"\n        - dss\n      security:\n        - Authority:\n            - utm.strategic_coordination\n      summary: Create/Update the specified Operation reference in the DSS.\n      operationId: putOperationReference\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeOperationReferenceResponse'\n          description: An Operation reference was updated successfully in the DSS.\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeOperationReferenceResponse'\n          description: An Operation reference was created successfully in the DSS.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Operation in a disallowed way.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AirspaceConflictResponse'\n          description: |-\n            * The provided key did not prove knowledge of all current and relevant airspace Entities\n            * The provided `old_version` does not match the current version of the existing Operation.\n            * Despite repeated attempts, the DSS was unable to complete the update because of other simultaneous changes.\n        \"413\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The area of the Operation is too large.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n    delete:\n      tags:\n        - \"Operation references\"\n        - dss\n      security:\n        - Authority:\n            - utm.strategic_coordination\n      summary: Remove the specified Operation reference from the DSS.\n      operationId: deleteOperationReference\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeOperationReferenceResponse'\n          description: The specified Operation was successfully removed from the DSS.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Operation in a disallowed way.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * Despite repeated attempts, the DSS was unable to complete the update because of other simultaneous changes.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  #\n  # DSS Enpoint: CONSTRAINTS\n  #\n\n  /dss/v1/constraint_references/query:\n    summary: Query all Constraint references in the DSS that intersect with a specified area/volume/time.\n    description: \"\"\n\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchConstraintReferenceParameters'\n        required: true\n      tags:\n        - \"Constraint references\"\n        - dss\n      security:\n        - Authority:\n            - utm.constraint_management\n            - utm.constraint_consumption\n            - utm.strategic_coordination\n      summary: Retrieve all Constraints references in the specified area/volume from the DSS.\n      operationId: queryConstraintReferences\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchConstraintReferencesResponse'\n          description: Constraints were successfully retrieved.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"413\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested area was too large.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  /dss/v1/constraint_references/{entityuuid}:\n    parameters:\n      - name: entityuuid\n        description: EntityUUID of the Constraint.\n        schema:\n          $ref: '#/components/schemas/EntityUUID'\n        in: path\n        required: true\n    summary: CRUD endpoint for a specified Constraint reference in the DSS.\n\n    get:\n      tags:\n        - \"Constraint references\"\n        - dss\n      security:\n        - Authority:\n            - utm.constraint_management\n            - utm.constraint_consumption\n            - utm.strategic_coordination\n      summary: Retrieve the specified Constraint reference from the DSS.\n      operationId: getConstraintReference\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetConstraintReferenceResponse'\n          description: Constraint reference was retrieved successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutConstraintReferenceParameters'\n        required: true\n      tags:\n        - \"Constraint references\"\n        - dss\n      security:\n        - Authority:\n            - utm.constraint_management\n      summary: Create/Update the specified Constraint reference in the DSS.\n      operationId: putConstraintReference\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeConstraintReferenceResponse'\n          description: A Constraint reference was updated successfully in the DSS.\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeConstraintReferenceResponse'\n          description: A Constraint reference was created successfully in the DSS.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Constraint in a disallowed way.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The provided `old_version` does not match the current version of the existing Constraint.\n            * Despite repeated attempts, the DSS was unable to complete the update because of other simultaneous changes.\n        \"413\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The area of the Operation is too large.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n    delete:\n      tags:\n        - \"Constraint references\"\n        - dss\n      security:\n        - Authority:\n            - utm.constraint_management\n      summary: Delete the specified Constraint reference from the DSS.\n      operationId: deleteConstraintReference\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeConstraintReferenceResponse'\n          description: The Constraint was successfully removed from the DSS.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Constraint in a disallowed way.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * Despite repeated attempts, the DSS was unable to complete the update because of other simultaneous changes.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  #\n  # DSS Endpoint: SUBSCRIPTIONS\n  #\n\n  /dss/v1/subscriptions/query:\n    summary: Subscriptions for airspace updates to a volume of interest.\n\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchSubscriptionParameters'\n        required: true\n      tags:\n        - \"Subscriptions\"\n        - dss\n      security:\n        - Authority:\n            - utm.constraint_consumption\n            - utm.strategic_coordination\n      description: |-\n        Retrieve Subscriptions intersecting an area of interest.  Subscription\n        notifications are only triggered by (and contain full information of) changes to,\n        creation of, or deletion of, Entities referenced by or stored in the DSS;\n        they do not involve any data transfer (such as remote ID telemetry updates) apart\n        from Entity information.\n\n        Note that this parameter is a JSON object (in the 'request-body'). Note that either\n        or both of the 'altitude' and 'time' values may be omitted from this parameter.\n\n        Only Subscriptions belonging to the caller are returned.  This endpoint would be\n        used if a USS lost track of Subscriptions they had created and/or wanted to resolve\n        an error indicating that they had too many existing Subscriptions in an area.\n      summary: Retrieve all Subscriptions in the specified area/volume from the DSS.\n      operationId: querySubscriptions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchSubscriptionsResponse'\n          description: Subscriptions were retrieved successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"413\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested area was too large.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  /dss/v1/subscriptions/{subscriptionid}:\n    summary: Create/Update a specific Subscription in the DSS.\n    parameters:\n      - name: subscriptionid\n        description: SubscriptionUUID of the subscription of interest.\n        schema:\n          $ref: '#/components/schemas/SubscriptionUUID'\n        in: path\n        required: true\n\n    get:\n      tags:\n        - \"Subscriptions\"\n        - dss\n      security:\n        - Authority:\n            - utm.constraint_consumption\n            - utm.strategic_coordination\n      summary: Retrieve the specified Subscription from the DSS.\n      operationId: getSubscription\n      description: |-\n        Retrieve a specific subscription.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSubscriptionResponse'\n          description: Subscription information was retrieved successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: A Subscription with the specified ID was not found.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n    put:\n      security:\n        - Authority:\n            - utm.constraint_consumption\n            - utm.strategic_coordination\n      summary: Create/Update the specified Subscription in the DSS.\n      operationId: putSubscription\n      description: |-\n        Create or update a subscription.\n\n        Subscription notifications are only triggered by (and contain full information of) changes to, creation of, or deletion of, Entities referenced by or stored in the DSS; they do not involve any data transfer (such as remote ID telemetry updates) apart from Entity information.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutSubscriptionParameters'\n        required: true\n      tags:\n        - \"Subscriptions\"\n        - dss\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutSubscriptionResponse'\n          description: A new Subscription was created successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more input parameters were missing or invalid.\n            * The request attempted to mutate the Subscription in a disallowed way.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint or the request.\n            * Client attempted to request notifications for an Entity type to which the scopes included in the access token do not provide access.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * A Subscription with the specified ID already exists and is owned by a different client.\n            * Despite repeated attempts, the DSS was unable to complete the update because of other simultaneous changes.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Client already has too many Subscriptions in the area where\n            a new Subscription was requested.  To correct this problem, the client\n            may query GET /subscriptions to see which Subscriptions are counting against\n            their limit.  This problem should not generally be encountered because\n            the Subscription limit should be above what any consumer that reasonably\n            aggregates their Subscriptions should request.  But, a Subscription limit\n            is necessary to bound performance requirements for DSS instances and would\n            likely be hit by, e.g., a large remote ID display provider that created\n            a Subscription for each of their display client users' views.\n\n            Alternately, the client may have issued too many requests within a small\n            period of time.\n\n    delete:\n      tags:\n        - \"Subscriptions\"\n        - dss\n      security:\n        - Authority:\n            - utm.constraint_consumption\n            - utm.strategic_coordination\n      summary: Remove the specified Subscription from the DSS.\n      operationId: deleteSubscription\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSubscriptionResponse'\n          description: Subscription was successfully removed from DSS.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: A Subscription with the specified ID was not found.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  #\n  # DSS Endpoint: REPORT\n  #\n\n  /dss/v1/reports:\n    summary: Error reports of potential operational issues relevant to DSSs.\n\n    post:\n      security:\n        - Authority:\n            - utm.constraint_management\n            - utm.constraint_consumption\n            - utm.strategic_coordination\n      summary: Report information about communication issues to a DSS.\n      operationId: makeDssReport\n      description: Report issues to a DSS. Data sent to this endpoint is archived.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorReport'\n        required: true\n      tags:\n        - \"Reports\"\n        - dss\n      responses:\n        \"201\":\n          description: A new Report was created successfully (and archived).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more parameters were missing or invalid.\n            * The report could not be parsed, or contains unrecognized data.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint or the request.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  #\n  # USS Endpoint: OPERATIONS\n  #\n\n  /uss/v1/operations/{entityuuid}:\n    summary: Query detailed information of an Operation from a USS.\n    parameters:\n      - name: entityuuid\n        description: EntityUUID of the Operation.\n        schema:\n          $ref: '#/components/schemas/EntityUUID'\n        in: path\n        required: true\n\n    get:\n      tags:\n        - \"Operation details\"\n        - p2p_utm\n      security:\n        - Authority:\n            - utm.strategic_coordination\n      summary: Retrieve the specified Operation details from a USS.\n      operationId: getOperationDetails\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOperationDetailsResponse'\n          description: Operation details were retrieved successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  /uss/v1/operations/{entityuuid}/telemetry:\n    summary: Detailed information on the position of an off-nominal Operation.\n    parameters:\n      - name: entityuuid\n        description: |-\n            EntityUUID of the Operation in the off-nominal state.\n            For NASA, GET telemetry in the off-nominal state, the 'entityuuid' http\n            request URL parameter should be set to the ID of the\n            Operation in the off-nominal state.\n        schema:\n          $ref: '#/components/schemas/EntityUUID'\n        in: path\n        required: true\n\n    get:\n      tags:\n        - \"Operation details\"\n        - p2p_utm\n      security:\n        - Authority:\n            - utm.strategic_coordination\n      summary: Query detailed information on the position of an off-nominal Operation from a USS.\n      operationId: getOperationTelemetry\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOperationTelemetryResponse'\n          description: Operation telemetry details were retrieved successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: No telemetry data is available.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Operation is not in a state that provides telemetry.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  /uss/v1/operations:\n    summary: A USS's representation of detailed information about Operations.\n\n    post:\n      tags:\n        - \"Operation details\"\n        - p2p_utm\n      security:\n        - Authority:\n            - utm.strategic_coordination\n      summary: Notify a peer USS of changed Operation details.\n      operationId: notifyOperationDetailsChanged\n      description: Notify a peer USS directly of changed Operation details (usually as a requirement of previous interactions with the DSS).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutOperationDetailsParameters'\n        required: true\n      responses:\n        \"204\":\n          description: New or updated full Operation information received successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more parameters were missing or invalid.\n            * The Entity could not be parsed, or contains illegal data.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.\n            * The client identified in the access token is not the owner of this Entity according to the receiving client's records.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            The Entity version specified in this message is lower than\n            a previously-received notification, or identical to a previously-received\n            notification and the Entity is different.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  #\n  # USS Endpoint: CONSTRAINTS\n  #\n\n  /uss/v1/constraints/{entityuuid}:\n    summary: Query detailed information of a Constraint from a USS.\n    parameters:\n      - name: entityuuid\n        description: EntityUUID of the Constraint.\n        schema:\n          $ref: '#/components/schemas/EntityUUID'\n        in: path\n        required: true\n\n    get:\n      tags:\n        - \"Constraint details\"\n        - p2p_utm\n      security:\n        - Authority:\n            - utm.strategic_coordination\n            - utm.constraint_consumption\n      summary: Retrieve the specified Constraint details from a USS.\n      operationId: getConstraintDetails\n      description: Retrieve the details of the specified Constraint.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetConstraintDetailsResponse'\n          description: Constraint details were retrieved successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The access token was decoded successfully but did not include\n            a scope appropriate to this endpoint.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  /uss/v1/constraints:\n    summary: A USS's representation of detailed information about Constraints.\n\n    post:\n      tags:\n        - \"Constraint details\"\n        - p2p_utm\n      security:\n        - Authority:\n            - utm.strategic_coordination\n            - utm.constraint_consumption\n      summary: Notify a peer USS of changed Constraint details.\n      operationId: notifyConstraintDetailsChanged\n      description: Notify a peer USS directly of changed Constraint details (usually as a requirement of previous interactions with the DSS).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutConstraintDetailsParameters'\n        required: true\n      responses:\n        \"204\":\n          description: New or updated full Constraint information received successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more parameters were missing or invalid.\n            * The Entity could not be parsed, or contains illegal data.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.\n            * The client identified in the access token is not the owner of this Entity according to the receiving client's records.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The Entity version specified in this message is lower than\n            a previously-received notification, or identical to a previously-received\n            notification and the Entity is different.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n\n  #\n  # USS Endpoint: (OTHER)\n  #\n\n  /uss/v1/reports:\n    summary: Error reports of issues communicating with a peer USS.\n\n    post:\n      tags:\n        - \"Reports\"\n        - p2p_utm\n      security:\n        - Authority:\n            - utm.strategic_coordination\n            - utm.constraint_consumption\n            - utm.constraint_management\n      summary: Notify USS of an error encountered that might otherwise go unnoticed.\n      operationId: makeUssReport\n      description: Endpoint to provide feedback (errors, etc.) that might otherwise go unnoticed by this USS.  This endpoint is used for all feedback related to Operations and Constraints.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorReport'\n        required: true\n      responses:\n        \"201\":\n          description: Report received and successfully archived.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more parameters were missing or invalid.\n            * The report could not be parsed, or contains unrecognized data.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            Bearer access token was not provided in Authorization header,\n            token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n"
		}
	},
	"Error": "parse: parse spec: parse operations: /dss/v1/constraint_references/{entityuuid}: parameters: parse parameter \"entityuuid\": invalid schema:style:explode combination: (\"\":\"simple\":false)"
}