{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ITISFoundation/osparc-simcore"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/specs/director/openapi.yaml",
			"byteSize": 15349,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: This is the oSparc's director API\n  version: 0.1.0\n  title: Director API\n  contact:\n    name: IT'IS Foundation\n    email: support@simcore.com\n  license:\n    name: MIT\n    url: https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE\n\nservers:\n  - description: Development server\n    url: http://{host}:{port}/{version}\n    variables:\n      host:\n        default: \"localhost\"\n      port:\n        default: \"8080\"\n      version:\n        default: \"v0\"\n        enum:\n          - \"v0\"\n  - description: Production server\n    url: http://director:{port}/{version}\n    variables:\n      port:\n        default: \"8080\"\n      version:\n        default: \"v0\"\n        enum:\n          - \"v0\"\n\n# tags are used for organizing operations\ntags:\n  - name: admins\n    description: Secured Admin-only calls\n  - name: developers\n    description: Operations available to regular developers\n  - name: users\n    description: Operations available to regular users\n\npaths:\n  /:\n    get:\n      tags:\n        - users\n      summary: Service health-check endpoint\n      description: Some general information on the API and state of the service behind\n      operationId: root_get\n      responses:\n        \"200\":\n          description: Service information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HealthCheckEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n\n  /services:\n    get:\n      tags:\n        - users\n      summary: Lists available services in the oSparc platform\n      description: Lists available services in the oSparc platform\n      operationId: services_get\n      parameters:\n        - $ref: \"#/components/parameters/ServiceType\"\n      responses:\n        \"200\":\n          description: Success, returns the list of available services\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServicesEnveloped\"\n        \"401\":\n          description: Unauthorized access\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n\n  /services/{service_key}/{service_version}:\n    get:\n      tags:\n        - users\n      summary: Returns details of the selected service if available in the oSparc platform\n      description: Returns details of the selected service if available in the oSparc platform\n      operationId: services_by_key_version_get\n      parameters:\n        - $ref: \"#/components/parameters/ServiceKeyPath\"\n        - $ref: \"#/components/parameters/ServiceVersionPath\"\n      responses:\n        \"200\":\n          description: Success, returns the details of the service\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServicesEnveloped\"\n        \"401\":\n          description: Unauthorized access\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        \"404\":\n          description: Service not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n\n  /services/{service_key}/{service_version}/labels:\n    get:\n      tags:\n        - users\n      summary: Returns the list of tags attached to a service\n      operationId: get_service_labels\n      parameters:\n        - $ref: \"#/components/parameters/ServiceKeyPath\"\n        - $ref: \"#/components/parameters/ServiceVersionPath\"\n      responses:\n        \"200\":\n          description: Success, returns the details of the service\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: string\n        \"401\":\n          description: Unauthorized access\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        \"404\":\n          description: Service not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n\n  /service_extras/{service_key}/{service_version}:\n    get:\n      tags:\n        - users\n      summary: Returns the service's details which should be hidden from the user defined as extras.\n      description: Currently returns the node_requirements an array of resoruces needed for scheduling.\n      operationId: service_extras_by_key_version_get\n      parameters:\n        - $ref: \"#/components/parameters/ServiceKeyPath\"\n        - $ref: \"#/components/parameters/ServiceVersionPath\"\n      responses:\n        \"200\":\n          description: Success, returns an object containing details hidden from the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceExtrasEnveloped\"\n        \"401\":\n          description: Unauthorized access\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        \"404\":\n          description: Service not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n\n  /running_interactive_services:\n    get:\n      tags:\n        - users\n      summary: Returns a list of interactive services\n      operationId: running_interactive_services_list_get\n      parameters:\n        - in: query\n          name: user_id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: project_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returns the running services instances\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RunningServicesEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n    post:\n      tags:\n        - users\n      summary: Starts an interactive service in the oSparc platform\n      operationId: running_interactive_services_post\n      parameters:\n        - $ref: \"#/components/parameters/UserId\"\n        - $ref: \"#/components/parameters/ProjectId\"\n        - $ref: \"#/components/parameters/ServiceKey\"\n        - $ref: \"#/components/parameters/ServiceVersion\"\n        - $ref: \"#/components/parameters/AssignmentUuid\"\n        - $ref: \"#/components/parameters/ServiceBasePath\"\n      responses:\n        \"201\":\n          description: Succesfully created the service in the oSparc platform. Returns the location where the service runs.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RunningServiceEnveloped\"\n        \"400\":\n          description: Malformed function call, missing field\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        \"401\":\n          description: Unauthorized access\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        \"404\":\n          description: Service not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        \"409\":\n          description: A service with the same uuid already exists\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n\n  /running_interactive_services/{service_uuid}:\n    get:\n      tags:\n        - users\n      summary: Succesfully returns if a service with the defined uuid is up and running\n      description: Succesfully returns if a service with the defined uuid is up and running\n      operationId: running_interactive_services_get\n      parameters:\n        - $ref: \"#/components/parameters/ServiceUuid\"\n      responses:\n        \"200\":\n          description: OK service exists and runs. Returns service location.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RunningServiceEnveloped\"\n        \"400\":\n          description: Malformed function call, missing field\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        \"404\":\n          description: Service not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n    delete:\n      tags:\n        - users\n      summary: Stops and removes an interactive service from the oSparc platform\n      description: Stops and removes an interactive service from the oSparc platform\n      operationId: running_interactive_services_delete\n      parameters:\n        - $ref: \"#/components/parameters/ServiceUuid\"\n        - $ref: \"#/components/parameters/SaveState\"\n      responses:\n        \"204\":\n          description: Succesfully stopped and removed the service from the oSparc platform\n        \"400\":\n          description: Malformed function call, missing field\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        \"404\":\n          description: Service not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorEnveloped\"\n\ncomponents:\n  parameters:\n    UserId:\n      in: query\n      name: user_id\n      description: The ID of the user that starts the service\n      required: true\n      schema:\n        type: string\n        example: asdfgj233\n    ProjectId:\n      in: query\n      name: project_id\n      description: The ID of the project in which the service starts\n      required: true\n      schema:\n        type: string\n        example: asdfgj233\n    AssignmentUuid:\n      in: query\n      name: service_uuid\n      description: The uuid to assign the service with\n      required: true\n      schema:\n        type: string\n        # format: uuid\n        example: 123e4567-e89b-12d3-a456-426655440000\n\n    ServiceKeyPath:\n      in: path\n      name: service_key\n      description: The key (url) of the service\n      required: true\n      schema:\n        type: string\n        description: distinctive name for the node based on the docker registry path\n        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\\w/-]+)+$'\n        example:\n          - simcore/services/comp/itis/sleeper\n          - simcore/services/dynamic/3dviewer\n\n    ServiceKey:\n      in: query\n      name: service_key\n      description: The key (url) of the service\n      required: true\n      schema:\n        type: string\n        description: distinctive name for the node based on the docker registry path\n        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\\w/-]+)+$'\n        example:\n          - simcore/services/comp/itis/sleeper\n          - simcore/services/dynamic/3dviewer\n\n    ServiceType:\n      in: query\n      name: service_type\n      description: |\n        The service type:\n          * computational - a computational service\n          * interactive - an interactive service\n      required: false\n      schema:\n        type: string\n        enum:\n          - computational\n          - interactive\n        example: computational\n\n    ServiceBasePath:\n      in: query\n      name: service_basepath\n      description: predefined basepath for the backend service otherwise uses root\n      required: false\n      schema:\n        type: string\n        example: \"/x/EycCXbU0H/\"\n        default: \"\"\n\n    ServiceUuid:\n      in: path\n      name: service_uuid\n      description: The uuid of the service\n      required: true\n      schema:\n        type: string\n        # format: uuid\n        example: 123e4567-e89b-12d3-a456-426655440000\n\n    ServiceVersionPath:\n      in: path\n      name: service_version\n      description: The tag/version of the service\n      required: true\n      schema:\n        type: string\n        description: semantic version number\n        pattern: \u003e-\n          ^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$\n        example:\n          - 1.0.0\n          - 0.0.1\n\n    ServiceVersion:\n      in: query\n      name: service_tag\n      description: The tag/version of the service\n      required: false\n      schema:\n        type: string\n        description: semantic version number\n        pattern: \u003e-\n          ^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$\n        example:\n          - 1.0.0\n          - 0.0.1\n\n    SaveState:\n      in: query\n      name: save_state\n      description: Save the state prior to removing the service\n      required: false\n      schema:\n        type: boolean\n        default: true\n\n  schemas:\n    ErrorEnveloped:\n      $ref: \"../common/schemas/error.yaml#/components/schemas/ErrorEnveloped\"\n\n    RunningServiceEnveloped:\n      $ref: \"../common/schemas/running_service.yaml#/components/schemas/RunningServiceEnveloped\"\n\n    RunningServicesEnveloped:\n      $ref: \"../common/schemas/running_service.yaml#/components/schemas/RunningServicesEnveloped\"\n\n    ServicesEnveloped:\n      $ref: \"../common/schemas/services.yaml#/components/schemas/ServicesEnveloped\"\n\n    ServiceExtrasEnveloped:\n      $ref: \"../common/schemas/services.yaml#/components/schemas/ServiceExtrasEnveloped\"\n\n    HealthCheckEnveloped:\n      $ref: \"../common/schemas/health_check.yaml#/components/schemas/HealthCheckEnveloped\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ErrorEnveloped\": parse schema: resolve \"../common/schemas/error.yaml#/components/schemas/ErrorEnveloped\": external \"../common/schemas/error.yaml\": file: local file reference is not allowed"
}