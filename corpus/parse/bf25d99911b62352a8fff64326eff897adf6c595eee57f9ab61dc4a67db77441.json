{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ivankonevv/api_yamdb"
		},
		"file": {
			"name": "redoc.yaml",
			"size": 0,
			"path": "static/redoc.yaml",
			"byteSize": 34636,
			"content": "openapi: 3.0.2\ninfo:\n  title: 'YaMDb API'\n  version: ''\n  description: |\n    запросы к API начинаются с `/api/v1/`\n\n    # Описание\n    Проект **YaMDb** собирает отзывы пользователей на произведения. Произведения делятся на категории: «Книги», «Фильмы», «Музыка».\n\n    # Алгоритм регистрации пользователей\n    1. Пользователь отправляет запрос с параметром `email` на `/auth/email/`.\n    2. **YaMDB** отправляет письмо с кодом подтверждения (`confirmation_code`) на адрес  `email` .\n    3. Пользователь отправляет запрос с параметрами `email` и `confirmation_code` на `/auth/token/`, в ответе на запрос ему приходит `token` (JWT-токен).\n    4. При желании пользователь отправляет PATCH-запрос на `/users/me/` и заполняет поля в своём профайле (описание полей — в документации).\n\n    # Пользовательские роли\n    - **Аноним** — может просматривать описания произведений, читать отзывы и комментарии.\n    - **Аутентифицированный пользователь** — может, как и **Аноним**, читать всё, дополнительно он может публиковать отзывы и ставить рейтинг произведениям (фильмам/книгам/песенкам), может комментировать чужие отзывы и ставить им оценки; может редактировать и удалять **свои** отзывы и комментарии.\n    - **Модератор** — те же права, что и у **Аутентифицированного пользователя** плюс право удалять **любые** отзывы и комментарии.\n    - **Администратор** — полные права на управление проектом и всем его содержимым. Может создавать и удалять категории и произведения. Может назначать роли пользователям.\n    - **Администратор Django** — те же права, что и у роли **Администратор**.\n\n\nservers:\n  - url: /api/v1/\n\ntags:\n  - name: REVIEWS\n    description: Отзывы\n  - name: COMMENTS\n    description: Комментарии к отзывам\n  - name: AUTH\n    description: Аутентификация\n  - name: USERS\n    description: Пользователи\n  - name: CATEGORIES\n    description: Категории (типы) произведений\n  - name: GENRES\n    description: Категории жанров\n  - name: TITLES\n    description: Произведения, к которым пишут отзывы (определённый фильм, книга или песенка).\n\npaths:\n  /titles/{title_id}/reviews/:\n    parameters:\n      - name: title_id\n        in: path\n        required: true\n        description: ID объекта для оценки\n        schema:\n          type: number\n    get:\n      tags:\n        - REVIEWS\n      description: |\n        Получить список всех отзывов.\n\n        Права доступа: **Доступно без токена.**\n      responses:\n        200:\n          description: Список отзывов с пагинацией\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    count:\n                      type: number\n                    next:\n                      type: string\n                    previous:\n                      type: string\n                    results:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Review'\n        404:\n          description: Не найден объект оценки\n    post:\n      tags:\n        - REVIEWS\n      description: |\n        Создать новый отзыв. Пользователь может оставить только один отзыв на один объект.\n\n        Права доступа: **Аутентифицированные пользователи.**\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Review'\n      responses:\n        200:\n          description: 'Новый отзыв'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Review'\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        404:\n          description: Не найден объект оценки\n      security:\n      - jwt_auth:\n        - write:user,moderator,admin\n  /titles/{title_id}/reviews/{review_id}/:\n    parameters:\n      - name: title_id\n        in: path\n        required: true\n        description: ID объекта для оценки\n        schema:\n          type: number\n      - name: review_id\n        in: path\n        required: true\n        description: ID отзыва\n        schema:\n          type: number\n    get:\n      tags:\n        - REVIEWS\n      description: |\n        Получить отзыв по id.\n\n        Права доступа: **Доступно без токена.**\n      responses:\n        200:\n          description: Отзыв\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Review'\n        404:\n          description: Не найден объект оценки\n    patch:\n      tags:\n        - REVIEWS\n      description: |\n        Частично обновить отзыв по id.\n\n        Права доступа: **Автор отзыва, модератор или администратор.**\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Review'\n      responses:\n        200:\n          description: Отзыв\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Review'\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Не найден объект оценки\n      security:\n      - jwt_auth:\n        - write:user,moderator,admin\n    delete:\n      tags:\n        - REVIEWS\n      description: |\n        Удалить отзыв по id\n\n        Права доступа: **Автор отзыва, модератор или администратор.**\n      responses:\n        204:\n          description: ''\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Не найден объект оценки\n      security:\n      - jwt_auth:\n        - write:user,moderator,admin\n\n  /titles/{title_id}/reviews/{review_id}/comments/:\n    parameters:\n      - name: title_id\n        in: path\n        required: true\n        description: ID объекта для оценки\n        schema:\n          type: number\n      - name: review_id\n        in: path\n        required: true\n        description: ID отзыва\n        schema:\n          type: number\n    get:\n      tags:\n        - COMMENTS\n      description: |\n        Получить список всех комментариев к отзыву по id\n\n        Права доступа: **Доступно без токена.**\n      responses:\n        200:\n          description: Список комментариев с пагинацией\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    count:\n                      type: number\n                    next:\n                      type: string\n                    previous:\n                      type: string\n                    results:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Comment'\n        404:\n          description: Не найден объект оценки или отзыв\n    post:\n      tags:\n        - COMMENTS\n      description: |\n        Создать новый комментарий для отзыва.\n\n        Права доступа: **Аутентифицированные пользователи.**\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Comment'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: ''\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        404:\n          description: Не найден объект оценки или отзыв\n      security:\n      - jwt_auth:\n        - write:user,moderator,admin\n\n  /titles/{title_id}/reviews/{review_id}/comments/{comment_id}/:\n    parameters:\n      - name: title_id\n        in: path\n        required: true\n        description: ID объекта для оценки\n        schema:\n          type: number\n      - name: review_id\n        in: path\n        required: true\n        description: ID отзыва\n        schema:\n          type: number\n      - name: comment_id\n        in: path\n        required: true\n        description: ID комментария\n        schema:\n          type: number\n    get:\n      tags:\n        - COMMENTS\n      description: |\n        Получить комментарий для отзыва по id.\n\n        Права доступа: **Доступно без токена.**\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: ''\n        404:\n          description: Не найден объект оценки, отзыв или комментарий\n    patch:\n      tags:\n        - COMMENTS\n      description: |\n        Частично обновить комментарий к отзыву по id.\n\n        Права доступа: **Автор комментария, модератор или администратор**.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Comment'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: ''\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Не найден объект оценки, отзыв или комментарий\n      security:\n      - jwt_auth:\n        - write:user,moderator,admin\n    delete:\n      tags:\n        - COMMENTS\n      description: |\n        Удалить комментарий к отзыву по id.\n\n        Права доступа: **Автор комментария, модератор или администратор**.\n      responses:\n        204:\n          description: ''\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Не найден объект оценки, отзыв или комментарий\n      security:\n      - jwt_auth:\n        - write:user,moderator,admin\n\n  /auth/token/:\n    post:\n      tags:\n        - AUTH\n      description: Получение JWT-токена в обмен на email и confirmation_code.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - email\n                - confirmation_code\n              properties:\n                email:\n                  type: string\n                confirmation_code:\n                  type: string\n                  writeOnly: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n          description: ''\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n  /auth/email/:\n    post:\n      tags:\n        - AUTH\n      description: Отправление confirmation_code на переданный email.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                properties:\n                  email:\n                    type: string\n                required:\n                - email\n          description: ''\n\n  /users/:\n    get:\n      tags:\n        - USERS\n      description: |\n        Получить список всех пользователей.\n\n        Права доступа: **Администратор**\n      parameters:\n      - name: search\n        in: query\n        description: username пользователь для фильтрации, поиск по части username\n        schema:\n          type: string\n      responses:\n        200:\n          description: Список пользователей с пагинацией\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    count:\n                      type: number\n                    next:\n                      type: string\n                    previous:\n                      type: string\n                    results:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/User'\n        401:\n          description: Необходим JWT токен\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n    post:\n      tags:\n        - USERS\n      description: |\n        Создание пользователя.\n\n        Права доступа: **Администратор**\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        201:\n          description: Пользователь создан\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n  /users/{username}/:\n    parameters:\n      - name: username\n        in: path\n        required: true\n        description: Username пользователя\n        schema:\n          type: string\n    get:\n      tags:\n        - USERS\n      description: |\n        Получить пользователя по username.\n\n        Права доступа: **Администратор**\n      responses:\n        200:\n          description: Объект пользователя\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Пользователь не найден\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n    patch:\n      tags:\n        - USERS\n      description: |\n        Изменить данные пользователя по username.\n\n        Права доступа: **Администратор.**\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: Пользователь\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Ошибка валидации\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Пользователь не найден\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n    delete:\n      tags:\n        - USERS\n      description: |\n        Удалить пользователя по username.\n\n        Права доступа: **Администратор.**\n      responses:\n        204:\n          description: Пользователь удалён\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Пользователь не найден\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n\n  /users/me/:\n    get:\n      tags:\n        - USERS\n      description: |\n        Получить данные своей учетной записи\n\n        Права доступа: **Любой авторизованный пользователь**\n      responses:\n        200:\n          description: Объект своей учетной записи\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  $ref: '#/components/schemas/User'\n      security:\n      - jwt_auth:\n        - read:admin,moderator,user\n        - write:admin,moderator,user\n    patch:\n      tags:\n        - USERS\n      description: |\n        Изменить данные своей учетной записи\n\n        Права доступа: **Любой авторизованный пользователь**\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: Пользователь\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n      security:\n      - jwt_auth:\n        - read:admin,moderator,user\n        - write:admin,moderator,user\n\n  /categories/:\n    get:\n      tags:\n        - CATEGORIES\n      description: |\n        Получить список всех категорий\n\n        Права доступа: **Доступно без токена**\n      parameters:\n      - name: search\n        in: query\n        description: фильтрует по названию категории\n        schema:\n          type: string\n      responses:\n        200:\n          description: Список категорий с пагинацией\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    count:\n                      type: number\n                    next:\n                      type: string\n                    previous:\n                      type: string\n                    results:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Category'\n    post:\n      tags:\n        - CATEGORIES\n      description: |\n        Создать категорию.\n\n        Права доступа: **Администратор.**\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Category'\n      responses:\n        200:\n          description: Список категорий\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n  /categories/{slug}/:\n    delete:\n      tags:\n        - CATEGORIES\n      description: |\n        Удалить категорию.\n\n        Права доступа: **Администратор.**\n      parameters:\n      - name: slug\n        in: path\n        required: true\n        description: Slug категории\n        schema:\n          type: string\n      responses:\n        204:\n          description: ''\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Категория не найдена\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n\n  /titles/:\n    get:\n      tags:\n        - TITLES\n      description: |\n        Получить список всех объектов\n\n\n        Права доступа: **Доступно без токена**\n      parameters:\n        - name: category\n          in: query\n          description: фильтрует по slug категории\n          schema:\n            type: string\n        - name: genre\n          in: query\n          description: фильтрует по slug genre\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: фильтрует по части названия объекта\n          schema:\n            type: string\n        - name: year\n          in: query\n          description: фильтрует по году\n          schema:\n            type: number\n      responses:\n        200:\n          description: Список объектов с пагинацией\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    count:\n                      type: number\n                    next:\n                      type: string\n                    previous:\n                      type: string\n                    results:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Title'\n    post:\n      tags:\n        - TITLES\n      description: |\n        Создать произведение для отзывов.\n\n        Права доступа: **Администратор**.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TitleCreate'\n      responses:\n        200:\n          description: Список объектов\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Title'\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n  /titles/{titles_id}/:\n    parameters:\n      - name: titles_id\n        in: path\n        required: true\n        description: ID объекта\n        schema:\n          type: number\n    get:\n      tags:\n        - TITLES\n      description: |\n        Информация об объекте\n\n\n        Права доступа: **Доступно без токена**\n      responses:\n        200:\n          description: Объект\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Title'\n        404:\n          description: Объект не найден\n    patch:\n      tags:\n        - TITLES\n      description: |\n        Обновить информацию об объекте\n\n\n        Права доступа: **Администратор**\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TitleCreate'\n      responses:\n        200:\n          description: Объект\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Title'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Объект не найден\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n    delete:\n      tags:\n        - TITLES\n      description: |\n        Удалить произведение.\n\n        Права доступа: **Администратор**.\n      responses:\n        204:\n          description: ''\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Объект не найден\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n\n  /genres/:\n    get:\n      tags:\n        - GENRES\n      description: |\n        Получить список всех жанров\n\n        Права доступа: **Доступно без токена**\n      parameters:\n      - name: search\n        in: query\n        description: фильтрует по названию жанра\n        schema:\n          type: string\n      responses:\n        200:\n          description: Список жанров с пагинацией\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    count:\n                      type: number\n                    next:\n                      type: string\n                    previous:\n                      type: string\n                    results:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Genre'\n    post:\n      tags:\n        - GENRES\n      description: |\n        Создать жанр.\n\n        Права доступа: **Администратор**.\n      responses:\n        200:\n          description: Список жанров\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Genre'\n        400:\n          description: Ошибка\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n      security:\n      - jwt_auth:\n        - read:admin\n        - write:admin\n\n  /genres/{slug}/:\n    delete:\n      tags:\n        - GENRES\n      description: |\n        Удалить жанр.\n\n        Права доступа: **Администратор**.\n      parameters:\n      - name: slug\n        in: path\n        required: true\n        description: Slug жанра\n        schema:\n          type: string\n      responses:\n        204:\n          description: ''\n        401:\n          description: Необходим JWT токен\n        403:\n          description: Нет прав доступа\n        404:\n          description: Жанр не найден\n      security:\n      - auth:\n        - read:admin\n        - write:admin\n\ncomponents:\n  schemas:\n    User:\n      title: Пользователь\n      type: object\n      description: Детальная информация о пользователе\n      required:\n          - username\n          - email\n      properties:\n        first_name:\n          type: string\n          title: Имя\n        last_name:\n          type: string\n          title: Фамилия\n        username:\n          type: string\n          title: Username\n        bio:\n          type: string\n          title: О себе\n        email:\n          type: string\n          title: Адрес электронной почты\n        role:\n          type: string\n          description: Администратор, модератор или пользователь. По умолчанию `user`.\n          enum:\n            - user\n            - moderator\n            - admin\n\n    Title:\n      title: Объект\n      type: object\n      required:\n        - name\n      properties:\n        id:\n          type: integer\n          title: ID произведения\n          readOnly: true\n        name:\n          type: string\n          title: Название\n        year:\n          type: number\n          title: Год выпуска\n        rating:\n          type: number\n          readOnly: True\n          title: Рейтинг на основе отзывов, если отзывов — `None`\n        description:\n          type: string\n          title: Описание\n        genre:\n          type: array\n          items:\n            $ref: '#/components/schemas/Genre'\n        category:\n          $ref: '#/components/schemas/Category'\n    TitleCreate:\n      title: Объект для изменения\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          title: Название\n        year:\n          type: number\n          title: Год выпуска\n        description:\n          type: string\n          title: Описание\n        genre:\n          type: array\n          items:\n            type: string\n            title: Slug жанра\n        category:\n          type: string\n          title: Slug категории\n\n    Genre:\n      title: Жанр\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          title: Название жанра\n        slug:\n          type: string\n          title: Поле \"slug\"\n\n    Review:\n      title: Отзыв\n      type: object\n      description: Детальная информация отзыва\n      required:\n          - text\n          - score\n      properties:\n        id:\n          type: integer\n          title: ID  отзыва\n          readOnly: true\n        text:\n          type: string\n          title: Текст отзыва\n        author:\n          type: string\n          title: username пользователя\n          readOnly: true\n        score:\n          type: integer\n          title: Оценка\n          minimum: 1\n          maximum: 10\n        pub_date:\n          type: string\n          format: date-time\n          title: Дата публикации отзыва\n          readOnly: true\n\n    ValidationError:\n      title: Ошибка валидации\n      type: object\n      properties:\n        field_name:\n          type: array\n          items:\n            type: string\n\n    Token:\n      title: Токен\n      type: object\n      properties:\n        token:\n          type: string\n          title: access токен\n\n    Comment:\n      title: Комментарий\n      type: object\n      description: Детальная информация комментария\n      required:\n        - text\n      properties:\n        id:\n          type: integer\n          title: ID  комментария\n          readOnly: true\n        text:\n          type: string\n          title: Текст комментария\n        author:\n          type: string\n          title: username автора комментария\n          readOnly: true\n        pub_date:\n          type: string\n          format: date-time\n          title: Дата публикации комментария\n          readOnly: true\n\n    Category:\n      title: Категория\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          title: Название категории объекта\n        slug:\n          type: string\n          title: Поле slug\n\n  securitySchemes:\n    jwt_auth:\n      type: apiKey\n      name: Bearer\n      in: header"
		}
	},
	"Error": "parse: parse spec: paths: /users/me/: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: object cannot contain 'items' field"
}