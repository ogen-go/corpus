{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geoserver/geoserver"
		},
		"file": {
			"name": "settings.yaml",
			"size": 0,
			"path": "src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/settings.yaml",
			"byteSize": 6356,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: GeoServer Global Config\n  description: Global configuration settings\n\nsecurity:\n  - basicAuth: []\n\ntags:\n  - name: settings\n    description: Global Settings API\n\npaths:\n  /settings:\n    get:\n      operationId: getSettings\n      tags:\n        - settings\n      summary: Get geoserver global settings\n      responses:\n        '200':\n          $ref: '#/components/responses/GeoServerInfoResponse'\n    put:\n      operationId: updateSettings\n      tags:\n        - settings\n      summary: Update the global configuration\n      description: Adds a new data store to the workspace.\n      requestBody:\n        $ref: '#/components/requestBodies/GlobalSettings'\n      responses:\n        '200':\n          description: Updated\n  /settings/contact:\n    get:\n      tags:\n        - settings\n      operationId: getGlobalContactInfo\n      summary: Get the global contact information\n      description: Displays a list of all global contact settings on the server. This is a\n        subset of what is available at the /settings endpoint.\n      responses:\n        \"200\":\n          $ref: '#/components/responses/ContactInfoResponse'\n    put:\n      tags:\n        - settings\n      operationId: updateGlobalContactInfo\n      summary: Update contact settings\n      description: Updates global contact settings on the server.\n      requestBody:\n        $ref: '#/components/requestBodies/ContactInfo'\n      responses:\n        \"200\":\n          description: OK\n  /workspaces/{workspace}/settings:\n    parameters:\n      - name: workspace\n        in: path\n        required: true\n        description: The workspace name\n        schema:\n          type: string\n    get:\n      tags:\n        - settings\n      operationId: getLocalSettings\n      summary: Get workspace-specific settings\n      description: Displays all workspace-specific settings.\n      responses:\n        \"200\":\n          $ref: '#/components/responses/WorkspaceSettings'\n    post:\n      tags:\n        - settings\n      operationId: createLocalSettings\n      summary: Create workspace-specific settings\n      description: Create new workspace-specific settings on the server.\n      requestBody:\n        $ref: \"#/components/requestBodies/WorkspaceSettings\"\n      responses:\n        \"201\":\n          description: Created\n        \"500\":\n          description: \"Internal Server Error: Settings already exist for workspace\"\n    put:\n      tags:\n        - settings\n      operationId: updateLocalSettings\n      summary: Update workspace-specific settings\n      description: Updates workspace-specific settings on the server.\n      requestBody:\n        $ref: \"#/components/requestBodies/WorkspaceSettings\"\n      responses:\n        \"200\":\n          description: OK\n    delete:\n      operationId: deleteWorkspaceSettings\n      description: Delete the settings for this workspace.\n      responses:\n        \"200\":\n          description: OK\ncomponents:\n  securitySchemes:\n    basicAuth:     # \u003c-- arbitrary name for the security scheme\n      type: http\n      scheme: basic\n\n  responses:\n    GeoServerInfoResponse:\n      description: Response for global config\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GeoServerInfoWrapper\"\n  \n    ContactInfoResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ContactInfoWrapper\"\n          examples:\n            response:\n              value: |\n                {\n                  \"contact\": {\n                    \"addressCity\": \"Alexandria\",\n                    \"addressCountry\": \"Egypt\",\n                    \"addressType\": \"Work\",\n                    \"contactEmail\": \"claudius.ptolomaeus@gmail.com\",\n                    \"contactOrganization\": \"The Ancient Geographers\",\n                    \"contactPerson\": \"Claudius Ptolomaeus\",\n                    \"contactPosition\": \"Chief Geographer\"\n                  }\n                }\n    WorkspaceSettings:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SettingsInfoWrapper\"\n          examples:\n            response:\n              value: |\n                {\n                  \"settings\": {\n                    \"contact\": {\n                      \"id\": \"contact\"\n                    },\n                    \"charset\": \"UTF-8\",\n                    \"numDecimals\": 4,\n                    \"verbose\": false,\n                    \"verboseExceptions\": false,\n                    \"localWorkspaceIncludesPrefix\": false\n                  }\n                }\n  requestBodies:\n    GlobalSettings:\n      required: true\n      description: global settings upload request body\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GeoServerInfoWrapper'\n\n    ContactInfo:\n      description: The contact settings information to upload.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ContactInfoWrapper\"\n            \n    SettingsInfo:\n      description: The contact settings information to upload.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ContactInfoWrapper\"\n\n    WorkspaceSettings:\n      description: The workspace-specific settings information to upload.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SettingsInfoWrapper\"\n\n  schemas:\n    GeoServerInfoWrapper:\n      title: wrapper object for GeoServerInfoResponse, in order to comply with current API encoding\n      type: object\n      required:\n        - global\n      properties:\n        global:\n          $ref: \"config.yaml#/components/schemas/GeoServerInfo\"\n    ContactInfoWrapper:\n      title: wrapper object for ContactInfoResponse, in order to comply with current API encoding\n      type: object\n      required:\n        - contact\n      properties:\n        contact:\n          $ref: \"config.yaml#/components/schemas/ContactInfo\"\n    SettingsInfoWrapper:\n      title: wrapper object for WorkspaceSettings, in order to comply with current API encoding\n      type: object\n      required:\n        - settings\n      properties:\n        settings:\n          $ref: \"config.yaml#/components/schemas/SettingsInfo\"\n",
			"canonicalURL": "/github.com/geoserver/geoserver@969c2d59661ae60bea6696fdc33fab4c3c1539b5/-/blob/src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/settings.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/geoserver/geoserver/blob/969c2d59661ae60bea6696fdc33fab4c3c1539b5/src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/settings.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ContactInfoWrapper\": parse schema: property \"contact\": parse schema: resolve \"config.yaml#/components/schemas/ContactInfo\": external \"config.yaml\": file: local file reference is not allowed"
}