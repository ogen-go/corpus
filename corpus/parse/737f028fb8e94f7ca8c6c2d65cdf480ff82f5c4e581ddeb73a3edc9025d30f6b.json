{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hpi-schul-cloud/schulcloud-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/services/rocketChat/docs/openapi.yaml",
			"byteSize": 4691,
			"content": "security:\n  - jwtBearer: []\ninfo:\n  title: Schul-Cloud Rocket.Chat Service API\n  description:\n    This is the API specification for the Schul-Cloud Rocket.Chat service.\n    \n  contact:\n    name: support\n    email: info@dbildungscloud.de\n  license:\n    name: GPL-3.0\n    url: 'https://github.com/hpi-schul-cloud/schulcloud-server/blob/master/LICENSE'\n  version: 1.0.0\ncomponents:\n  securitySchemes:\n    jwtBearer:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    channel:\n      description: TODO\n    user:\n      description: TODO\n    user_list:\n      description: TODO\n    login:\n      description: TODO\n    logout:\n      description: TODO\n\npaths:\n  '/rocketChat/channel/{id}':\n    get:\n      parameters:\n        - in: path\n          name: id\n          description: ID of channel to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/channel'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - rocketChat\n      security: []\n  /rocketChat/user:\n    get:\n      parameters:\n        - description: Number of results to return\n          in: query\n          name: $limit\n          schema:\n            type: integer\n        - description: Number of results to skip\n          in: query\n          name: $skip\n          schema:\n            type: integer\n        - description: Property to sort results\n          in: query\n          name: $sort\n          style: deepObject\n          schema:\n            type: object\n        - description: Query parameters to filter\n          in: query\n          name: filter\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/user'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user_list'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of all resources from the service.\n      summary: ''\n      tags:\n        - rocketChat\n      security: []\n  '/rocketChat/user/{id}':\n    get:\n      parameters:\n        - in: path\n          name: id\n          description: ID of user to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - rocketChat\n      security: []\n  '/rocketChat/login/{id}':\n    get:\n      parameters:\n        - in: path\n          name: id\n          description: ID of login to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/login'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - rocketChat\n      security: []\n  '/rocketChat/logout/{id}':\n    get:\n      parameters:\n        - in: path\n          name: id\n          description: ID of logout to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/logout'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - rocketChat\n      security: []\n  \nopenapi: 3.0.2\ntags:\n  - name: rocketChat\n    description: A rocketChat service.\n",
			"canonicalURL": "/github.com/hpi-schul-cloud/schulcloud-server@4e31cf4d98cb961a0a1143c57607e2e6fc67d71c/-/blob/src/services/rocketChat/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hpi-schul-cloud/schulcloud-server/blob/4e31cf4d98cb961a0a1143c57607e2e6fc67d71c/src/services/rocketChat/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/rocketChat/user\": at 1:2245: get: at 1:2252: parameters: parse parameter \"filter\": at 1:2657: invalid schema:style:explode combination: (\"\":\"form\":true)"
}