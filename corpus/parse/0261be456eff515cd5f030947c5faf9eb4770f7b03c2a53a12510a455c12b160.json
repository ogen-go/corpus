{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-cloudsearchdomain-2013-01-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-cloudsearchdomain-2013-01-01-swagger.yaml",
			"byteSize": 47708,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2013-01-01\n  x-release: v4\n  title: Amazon CloudSearch Domain\n  description: <p>You use the AmazonCloudSearch2013 API to upload documents to a search\n    domain and search those documents. </p> <p>The endpoints for submitting\n    <code>UploadDocuments</code>, <code>Search</code>, and <code>Suggest</code>\n    requests are domain-specific. To get the endpoints for your domain, use the\n    Amazon CloudSearch configuration service <code>DescribeDomains</code>\n    action. The domain endpoints are also displayed on the domain dashboard in\n    the Amazon CloudSearch console. You submit suggest requests to the search\n    endpoint. </p> <p>For more information, see the <a\n    href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide\">Amazon\n    CloudSearch Developer Guide</a>.</p>\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: cloudsearchdomain\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudsearchdomain-2013-01-01.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/cloudsearchdomain/\nsecurity:\n  - hmac: []\npaths:\n  /2013-01-01/search#format=sdk&pretty=true&q:\n    get:\n      operationId: Search\n      description: \"<p>Retrieves a list of documents that match the specified search\n        criteria. How you specify the search criteria depends on which query\n        parser you use. Amazon CloudSearch supports four query parsers:</p> <ul>\n        <li><code>simple</code>: search all <code>text</code> and\n        <code>text-array</code> fields for the specified string. Search for\n        phrases, individual terms, and prefixes. </li>\n        <li><code>structured</code>: search specific fields, construct compound\n        queries using Boolean operators, and use advanced features such as term\n        boosting and proximity searching.</li> <li><code>lucene</code>: specify\n        search criteria using the Apache Lucene query parser syntax.</li>\n        <li><code>dismax</code>: specify search criteria using the simplified\n        subset of the Apache Lucene query parser syntax defined by the DisMax\n        query parser.</li> </ul> <p>For more information, see <a\n        href=\\\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/sea\\\n        rching.html\\\">Searching Your Data</a> in the <i>Amazon CloudSearch\n        Developer Guide</i>.</p> <p>The endpoint for submitting\n        <code>Search</code> requests is domain-specific. You submit search\n        requests to a domain's search endpoint. To get the search endpoint for\n        your domain, use the Amazon CloudSearch configuration service\n        <code>DescribeDomains</code> action. A domain's endpoints are also\n        displayed on the domain dashboard in the Amazon CloudSearch console.\n        </p>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchResponse\"\n        \"480\":\n          description: SearchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchException\"\n      parameters:\n        - name: cursor\n          in: query\n          required: false\n          description: <p>Retrieves a cursor value you can use to page through large result\n            sets. Use the <code>size</code> parameter to control the number of\n            hits to include in each response. You can specify either the\n            <code>cursor</code> or <code>start</code> parameter in a request;\n            they are mutually exclusive. To get the first cursor, set the cursor\n            value to <code>initial</code>. In subsequent requests, specify the\n            cursor value returned in the hits section of the response. </p>\n            <p>For more information, see <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html\">Paginating\n            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.</p>\n          schema:\n            type: string\n        - name: expr\n          in: query\n          required: false\n          description: <p>Defines one or more numeric expressions that can be used to sort\n            results or specify search or filter criteria. You can also specify\n            expressions as return fields. </p> <p>You specify the expressions in\n            JSON using the form <code>{\"EXPRESSIONNAME\":\"EXPRESSION\"}</code>.\n            You can define and use multiple expressions in a search request. For\n            example:</p> <p><code> {\"expression1\":\"_score*rating\",\n            \"expression2\":\"(1/rank)*year\"} </code> </p> <p>For information about\n            the variables, operators, and functions you can use in expressions,\n            see <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html#writing-expressions\">Writing\n            Expressions</a> in the <i>Amazon CloudSearch Developer\n            Guide</i>.</p>\n          schema:\n            type: string\n        - name: facet\n          in: query\n          required: false\n          description: '<p>Specifies one or more fields for which to get facet information,\n            and options that control how the facet information is returned. Each\n            specified field must be facet-enabled in the domain configuration.\n            The fields and options are specified in JSON using the form\n            <code>{\"FIELD\":{\"OPTION\":VALUE,\"OPTION:\"STRING\"},\"FIELD\":{\"OPTION\":VALUE,\"OPTION\":\"STRING\"}}</code>.</p>\n            <p>You can specify the following faceting options:</p> <ul> <li>\n            <p><code>buckets</code> specifies an array of the facet values or\n            ranges to count. Ranges are specified using the same syntax that you\n            use to search for a range of values. For more information, see <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-ranges.html\">\n            Searching for a Range of Values</a> in the <i>Amazon CloudSearch\n            Developer Guide</i>. Buckets are returned in the order they are\n            specified in the request. The <code>sort</code> and\n            <code>size</code> options are not valid if you specify\n            <code>buckets</code>.</p> </li> <li> <p><code>size</code> specifies\n            the maximum number of facets to include in the results. By default,\n            Amazon CloudSearch returns counts for the top 10. The\n            <code>size</code> parameter is only valid when you specify the\n            <code>sort</code> option; it cannot be used in conjunction with\n            <code>buckets</code>.</p> </li> <li> <p><code>sort</code> specifies\n            how you want to sort the facets in the results: <code>bucket</code>\n            or <code>count</code>. Specify <code>bucket</code> to sort\n            alphabetically or numerically by facet value (in ascending order).\n            Specify <code>count</code> to sort by the facet counts computed for\n            each facet value (in descending order). To retrieve facet counts for\n            particular values or ranges of values, use the <code>buckets</code>\n            option instead of <code>sort</code>. </p> </li> </ul> <p>If no facet\n            options are specified, facet counts are computed for all field\n            values, the facets are sorted by facet count, and the top 10 facets\n            are returned in the results.</p> <p>To count particular buckets of\n            values, use the <code>buckets</code> option. For example, the\n            following request uses the <code>buckets</code> option to calculate\n            and return facet counts by decade.</p> <p><code>\n            {\"year\":{\"buckets\":[\"[1970,1979]\",\"[1980,1989]\",\"[1990,1999]\",\"[2000,2009]\",\"[2010,}\"]}}\n            </code></p> <p>To sort facets by facet count, use the\n            <code>count</code> option. For example, the following request sets\n            the <code>sort</code> option to <code>count</code> to sort the facet\n            values by facet count, with the facet values that have the most\n            matching documents listed first. Setting the <code>size</code>\n            option to 3 returns only the top three facet values.</p> <p><code>\n            {\"year\":{\"sort\":\"count\",\"size\":3}} </code></p> <p>To sort the facets\n            by value, use the <code>bucket</code> option. For example, the\n            following request sets the <code>sort</code> option to\n            <code>bucket</code> to sort the facet values numerically by year,\n            with earliest year listed first. </p> <p><code>\n            {\"year\":{\"sort\":\"bucket\"}} </code></p> <p>For more information, see\n            <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/faceting.html\">Getting\n            and Using Facet Information</a> in the <i>Amazon CloudSearch\n            Developer Guide</i>.</p>'\n          schema:\n            type: string\n        - name: fq\n          in: query\n          required: false\n          description: <p>Specifies a structured query that filters the results of a search\n            without affecting how the results are scored and sorted. You use\n            <code>filterQuery</code> in conjunction with the <code>query</code>\n            parameter to filter the documents that match the constraints\n            specified in the <code>query</code> parameter. Specifying a filter\n            controls only which matching documents are included in the results,\n            it has no effect on how they are scored and sorted. The\n            <code>filterQuery</code> parameter supports the full structured\n            query syntax. </p> <p>For more information about using filters, see\n            <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/filtering-results.html\">Filtering\n            Matching Documents</a> in the <i>Amazon CloudSearch Developer\n            Guide</i>.</p>\n          schema:\n            type: string\n        - name: highlight\n          in: query\n          required: false\n          description: '<p>Retrieves highlights for matches in the specified\n            <code>text</code> or <code>text-array</code> fields. Each specified\n            field must be highlight enabled in the domain configuration. The\n            fields and options are specified in JSON using the form\n            <code>{\"FIELD\":{\"OPTION\":VALUE,\"OPTION:\"STRING\"},\"FIELD\":{\"OPTION\":VALUE,\"OPTION\":\"STRING\"}}</code>.</p>\n            <p>You can specify the following highlight options:</p> <ul> <li>\n            <code>format</code>: specifies the format of the data in the text\n            field: <code>text</code> or <code>html</code>. When data is returned\n            as HTML, all non-alphanumeric characters are encoded. The default is\n            <code>html</code>. </li> <li> <code>max_phrases</code>: specifies\n            the maximum number of occurrences of the search term(s) you want to\n            highlight. By default, the first occurrence is highlighted. </li>\n            <li> <code>pre_tag</code>: specifies the string to prepend to an\n            occurrence of a search term. The default for HTML highlights is\n            <code>&amp;lt;em&amp;gt;</code>. The default for text highlights is\n            <code>*</code>. </li> <li> <code>post_tag</code>: specifies the\n            string to append to an occurrence of a search term. The default for\n            HTML highlights is <code>&amp;lt;/em&amp;gt;</code>. The default for\n            text highlights is <code>*</code>. </li> </ul> <p>If no highlight\n            options are specified for a field, the returned field text is\n            treated as HTML and the first match is highlighted with emphasis\n            tags: <code>&amp;lt;em&gt;search-term&amp;lt;/em&amp;gt;</code>.</p>\n            <p>For example, the following request retrieves highlights for the\n            <code>actors</code> and <code>title</code> fields.</p> <p> <code>{\n            \"actors\": {}, \"title\": {\"format\": \"text\",\"max_phrases\": 2,\"pre_tag\":\n            \"<b>\",\"post_tag\": \"</b>\"} }</code></p>'\n          schema:\n            type: string\n        - name: partial\n          in: query\n          required: false\n          description: Enables partial results to be returned if one or more index\n            partitions are unavailable. When your search index is partitioned\n            across multiple search instances, by default Amazon CloudSearch only\n            returns results if every partition can be queried. This means that\n            the failure of a single search instance can result in 5xx (internal\n            server) errors. When you enable partial results, Amazon CloudSearch\n            returns whatever results are available and includes the percentage\n            of documents searched in the search results (percent-searched). This\n            enables you to more gracefully degrade your users' search\n            experience. For example, rather than displaying no results, you\n            could display the partial results and a message indicating that the\n            results might be incomplete due to a temporary system outage.\n          schema:\n            type: boolean\n        - name: q\n          in: query\n          required: true\n          description: <p>Specifies the search criteria for the request. How you specify\n            the search criteria depends on the query parser used for the request\n            and the parser options specified in the <code>queryOptions</code>\n            parameter. By default, the <code>simple</code> query parser is used\n            to process requests. To use the <code>structured</code>,\n            <code>lucene</code>, or <code>dismax</code> query parser, you must\n            also specify the <code>queryParser</code> parameter. </p> <p>For\n            more information about specifying search criteria, see <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html\">Searching\n            Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.</p>\n          schema:\n            type: string\n        - name: q.options\n          in: query\n          required: false\n          description: \"<p>Configures options for the query parser specified in the\n            <code>queryParser</code> parameter. You specify the options in JSON\n            using the following form\n            <code>{\\\"OPTION1\\\":\\\"VALUE1\\\",\\\"OPTION2\\\":VALUE2\\\"...\\\"OPTIONN\\\":\\\"\\\n            VALUEN\\\"}.</code></p> <p>The options you can configure vary\n            according to which parser you use:</p> <ul>\n            <li><code>defaultOperator</code>: The default operator used to\n            combine individual terms in the search string. For example:\n            <code>defaultOperator: 'or'</code>. For the <code>dismax</code>\n            parser, you specify a percentage that represents the percentage of\n            terms in the search string (rounded down) that must match, rather\n            than a default operator. A value of <code>0%</code> is the\n            equivalent to OR, and a value of <code>100%</code> is equivalent to\n            AND. The percentage must be specified as a value in the range 0-100\n            followed by the percent (%) symbol. For example,\n            <code>defaultOperator: 50%</code>. Valid values: <code>and</code>,\n            <code>or</code>, a percentage in the range 0%-100%\n            (<code>dismax</code>). Default: <code>and</code>\n            (<code>simple</code>, <code>structured</code>, <code>lucene</code>)\n            or <code>100</code> (<code>dismax</code>). Valid for:\n            <code>simple</code>, <code>structured</code>, <code>lucene</code>,\n            and <code>dismax</code>.</li> <li><code>fields</code>: An array of\n            the fields to search when no fields are specified in a search. If no\n            fields are specified in a search and this option is not specified,\n            all text and text-array fields are searched. You can specify a\n            weight for each field to control the relative importance of each\n            field when Amazon CloudSearch calculates relevance scores. To\n            specify a field weight, append a caret (<code>^</code>) symbol and\n            the weight to the field name. For example, to boost the importance\n            of the <code>title</code> field over the <code>description</code>\n            field you could specify:\n            <code>\\\"fields\\\":[\\\"title^5\\\",\\\"description\\\"]</code>. Valid values:\n            The name of any configured field and an optional numeric value\n            greater than zero. Default: All <code>text</code> and\n            <code>text-array</code> fields. Valid for: <code>simple</code>,\n            <code>structured</code>, <code>lucene</code>, and\n            <code>dismax</code>.</li> <li><code>operators</code>: An array of\n            the operators or special characters you want to disable for the\n            simple query parser. If you disable the <code>and</code>,\n            <code>or</code>, or <code>not</code> operators, the corresponding\n            operators (<code>+</code>, <code>|</code>, <code>-</code>) have no\n            special meaning and are dropped from the search string. Similarly,\n            disabling <code>prefix</code> disables the wildcard operator\n            (<code>*</code>) and disabling <code>phrase</code> disables the\n            ability to search for phrases by enclosing phrases in double quotes.\n            Disabling precedence disables the ability to control order of\n            precedence using parentheses. Disabling <code>near</code> disables\n            the ability to use the ~ operator to perform a sloppy phrase search.\n            Disabling the <code>fuzzy</code> operator disables the ability to\n            use the ~ operator to perform a fuzzy search. <code>escape</code>\n            disables the ability to use a backslash (<code>\\\\</code>) to escape\n            special characters within the search string. Disabling whitespace is\n            an advanced option that prevents the parser from tokenizing on\n            whitespace, which can be useful for Vietnamese. (It prevents\n            Vietnamese words from being split incorrectly.) For example, you\n            could disable all operators other than the phrase operator to\n            support just simple term and phrase queries:\n            <code>\\\"operators\\\":[\\\"and\\\",\\\"not\\\",\\\"or\\\", \\\"prefix\\\"]</code>.\n            Valid values: <code>and</code>, <code>escape</code>,\n            <code>fuzzy</code>, <code>near</code>, <code>not</code>,\n            <code>or</code>, <code>phrase</code>, <code>precedence</code>,\n            <code>prefix</code>, <code>whitespace</code>. Default: All operators\n            and special characters are enabled. Valid for:\n            <code>simple</code>.</li> <li><code>phraseFields</code>: An array of\n            the <code>text</code> or <code>text-array</code> fields you want to\n            use for phrase searches. When the terms in the search string appear\n            in close proximity within a field, the field scores higher. You can\n            specify a weight for each field to boost that score. The\n            <code>phraseSlop</code> option controls how much the matches can\n            deviate from the search string and still be boosted. To specify a\n            field weight, append a caret (<code>^</code>) symbol and the weight\n            to the field name. For example, to boost phrase matches in the\n            <code>title</code> field over the <code>abstract</code> field, you\n            could specify: <code>\\\"phraseFields\\\":[\\\"title^3\\\", \\\"plot\\\"]</code>\n            Valid values: The name of any <code>text</code> or\n            <code>text-array</code> field and an optional numeric value greater\n            than zero. Default: No fields. If you don't specify any fields with\n            <code>phraseFields</code>, proximity scoring is disabled even if\n            <code>phraseSlop</code> is specified. Valid for:\n            <code>dismax</code>.</li> <li><code>phraseSlop</code>: An integer\n            value that specifies how much matches can deviate from the search\n            phrase and still be boosted according to the weights specified in\n            the <code>phraseFields</code> option; for example, <code>phraseSlop:\n            2</code>. You must also specify <code>phraseFields</code> to enable\n            proximity scoring. Valid values: positive integers. Default: 0.\n            Valid for: <code>dismax</code>.</li>\n            <li><code>explicitPhraseSlop</code>: An integer value that specifies\n            how much a match can deviate from the search phrase when the phrase\n            is enclosed in double quotes in the search string. (Phrases that\n            exceed this proximity distance are not considered a match.) For\n            example, to specify a slop of three for dismax phrase queries, you\n            would specify <code>\\\"explicitPhraseSlop\\\":3</code>. Valid values:\n            positive integers. Default: 0. Valid for: <code>dismax</code>.</li>\n            <li><code>tieBreaker</code>: When a term in the search string is\n            found in a document's field, a score is calculated for that field\n            based on how common the word is in that field compared to other\n            documents. If the term occurs in multiple fields within a document,\n            by default only the highest scoring field contributes to the\n            document's overall score. You can specify a <code>tieBreaker</code>\n            value to enable the matches in lower-scoring fields to contribute to\n            the document's score. That way, if two documents have the same max\n            field score for a particular term, the score for the document that\n            has matches in more fields will be higher. The formula for\n            calculating the score with a tieBreaker is <code>(max field score) +\n            (tieBreaker) * (sum of the scores for the rest of the matching\n            fields)</code>. Set <code>tieBreaker</code> to 0 to disregard all\n            but the highest scoring field (pure max):\n            <code>\\\"tieBreaker\\\":0</code>. Set to 1 to sum the scores from all\n            fields (pure sum): <code>\\\"tieBreaker\\\":1</code>. Valid values: 0.0\n            to 1.0. Default: 0.0. Valid for: <code>dismax</code>. </li> </ul>\"\n          schema:\n            type: string\n        - name: q.parser\n          in: query\n          required: false\n          description: '<p>Specifies which query parser to use to process the request. If\n            <code>queryParser</code> is not specified, Amazon CloudSearch uses\n            the <code>simple</code> query parser. </p> <p>Amazon CloudSearch\n            supports four query parsers:</p> <ul> <li> <code>simple</code>:\n            perform simple searches of <code>text</code> and\n            <code>text-array</code> fields. By default, the <code>simple</code>\n            query parser searches all <code>text</code> and\n            <code>text-array</code> fields. You can specify which fields to\n            search by with the <code>queryOptions</code> parameter. If you\n            prefix a search term with a plus sign (+) documents must contain the\n            term to be considered a match. (This is the default, unless you\n            configure the default operator with the <code>queryOptions</code>\n            parameter.) You can use the <code>-</code> (NOT), <code>|</code>\n            (OR), and <code>*</code> (wildcard) operators to exclude particular\n            terms, find results that match any of the specified terms, or search\n            for a prefix. To search for a phrase rather than individual terms,\n            enclose the phrase in double quotes. For more information, see <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-text.html\">Searching\n            for Text</a> in the <i>Amazon CloudSearch Developer Guide</i>. </li>\n            <li> <code>structured</code>: perform advanced searches by combining\n            multiple expressions to define the search criteria. You can also\n            search within particular fields, search for values and ranges of\n            values, and use advanced options such as term boosting,\n            <code>matchall</code>, and <code>near</code>. For more information,\n            see <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-compound-queries.html\">Constructing\n            Compound Queries</a> in the <i>Amazon CloudSearch Developer\n            Guide</i>. </li> <li> <code>lucene</code>: search using the Apache\n            Lucene query parser syntax. For more information, see <a\n            href=\"http://lucene.apache.org/core/4_6_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package_description\">Apache\n            Lucene Query Parser Syntax</a>. </li> <li> <code>dismax</code>:\n            search using the simplified subset of the Apache Lucene query parser\n            syntax defined by the DisMax query parser. For more information, see\n            <a\n            href=\"http://wiki.apache.org/solr/DisMaxQParserPlugin#Query_Syntax\">DisMax\n            Query Parser Syntax</a>. </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - simple\n              - structured\n              - lucene\n              - dismax\n        - name: return\n          in: query\n          required: false\n          description: \"Specifies the field and expression values to include in the\n            response. Multiple fields or expressions are specified as a\n            comma-separated list. By default, a search response includes all\n            return enabled fields (<code>_all_fields</code>). To return only the\n            document IDs for the matching documents, specify\n            <code>_no_fields</code>. To retrieve the relevance score calculated\n            for each document, specify <code>_score</code>. \"\n          schema:\n            type: string\n        - name: size\n          in: query\n          required: false\n          description: \"Specifies the maximum number of search hits to include in the\n            response. \"\n          schema:\n            type: integer\n        - name: sort\n          in: query\n          required: false\n          description: '<p>Specifies the fields or custom expressions to use to sort the\n            search results. Multiple fields or expressions are specified as a\n            comma-separated list. You must specify the sort direction\n            (<code>asc</code> or <code>desc</code>) for each field; for example,\n            <code>year desc,title asc</code>. To use a field to sort results,\n            the field must be sort-enabled in the domain configuration. Array\n            type fields cannot be used for sorting. If no <code>sort</code>\n            parameter is specified, results are sorted by their default\n            relevance scores in descending order: <code>_score desc</code>. You\n            can also sort by document ID (<code>_id asc</code>) and version\n            (<code>_version desc</code>).</p> <p>For more information, see <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/sorting-results.html\">Sorting\n            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.</p>'\n          schema:\n            type: string\n        - name: start\n          in: query\n          required: false\n          description: <p>Specifies the offset of the first search hit you want to return.\n            Note that the result set is zero-based; the first result is at index\n            0. You can specify either the <code>start</code> or\n            <code>cursor</code> parameter in a request, they are mutually\n            exclusive. </p> <p>For more information, see <a\n            href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/paginating-results.html\">Paginating\n            Results</a> in the <i>Amazon CloudSearch Developer Guide</i>.</p>\n          schema:\n            type: integer\n        - name: stats\n          in: query\n          required: false\n          description: <p>Specifies one or more fields for which to get statistics\n            information. Each specified field must be facet-enabled in the\n            domain configuration. The fields are specified in JSON using the\n            form:</p> <code>{\"FIELD-A\":{},\"FIELD-B\":{}}</code> <p>There are\n            currently no options supported for statistics.</p>\n          schema:\n            type: string\n        - name: format\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - sdk\n        - name: pretty\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - \"true\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /2013-01-01/suggest#format=sdk&pretty=true&q&suggester:\n    get:\n      operationId: Suggest\n      description: <p>Retrieves autocomplete suggestions for a partial query string. You\n        can use suggestions enable you to display likely matches before users\n        finish typing. In Amazon CloudSearch, suggestions are based on the\n        contents of a particular text field. When you request suggestions,\n        Amazon CloudSearch finds all of the documents whose values in the\n        suggester field start with the specified query string. The beginning of\n        the field must match the query string to be considered a match. </p>\n        <p>For more information about configuring suggesters and retrieving\n        suggestions, see <a\n        href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html\">Getting\n        Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>. </p>\n        <p>The endpoint for submitting <code>Suggest</code> requests is\n        domain-specific. You submit suggest requests to a domain's search\n        endpoint. To get the search endpoint for your domain, use the Amazon\n        CloudSearch configuration service <code>DescribeDomains</code> action. A\n        domain's endpoints are also displayed on the domain dashboard in the\n        Amazon CloudSearch console. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SuggestResponse\"\n        \"480\":\n          description: SearchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchException\"\n      parameters:\n        - name: q\n          in: query\n          required: true\n          description: Specifies the string for which you want to get suggestions.\n          schema:\n            type: string\n        - name: suggester\n          in: query\n          required: true\n          description: Specifies the name of the suggester to use to find suggested matches.\n          schema:\n            type: string\n        - name: size\n          in: query\n          required: false\n          description: \"Specifies the maximum number of suggestions to return. \"\n          schema:\n            type: integer\n        - name: format\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - sdk\n        - name: pretty\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - \"true\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /2013-01-01/documents/batch#format=sdk&Content-Type:\n    post:\n      operationId: UploadDocuments\n      description: <p>Posts a batch of documents to a search domain for indexing. A\n        document batch is a collection of add and delete operations that\n        represent the documents you want to add, update, or delete from your\n        domain. Batches can be described in either JSON or XML. Each item that\n        you want Amazon CloudSearch to return as a search result (such as a\n        product) is represented as a document. Every document has a unique ID\n        and one or more fields that contain the data that you want to search and\n        return in results. Individual documents cannot contain more than 1 MB of\n        data. The entire batch cannot exceed 5 MB. To get the best possible\n        upload performance, group add and delete operations in batches that are\n        close the 5 MB limit. Submitting a large volume of single-document\n        batches can overload a domain's document service. </p> <p>The endpoint\n        for submitting <code>UploadDocuments</code> requests is domain-specific.\n        To get the document endpoint for your domain, use the Amazon CloudSearch\n        configuration service <code>DescribeDomains</code> action. A domain's\n        endpoints are also displayed on the domain dashboard in the Amazon\n        CloudSearch console. </p> <p>For more information about formatting your\n        data for Amazon CloudSearch, see <a\n        href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html\">Preparing\n        Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. For more\n        information about uploading data for indexing, see <a\n        href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html\">Uploading\n        Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadDocumentsResponse\"\n        \"480\":\n          description: DocumentServiceException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentServiceException\"\n      parameters:\n        - name: Content-Type\n          in: header\n          required: true\n          description: <p>The format of the batch you are uploading. Amazon CloudSearch\n            supports two document batch formats:</p> <ul>\n            <li>application/json</li> <li>application/xml</li> </ul>\n          schema:\n            type: string\n            enum:\n              - application/json\n              - application/xml\n        - name: format\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - sdk\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - documents\n              properties:\n                documents:\n                  description: A batch of documents formatted in JSON or HTML.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://cloudsearchdomain.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon CloudSearch Domain multi-region endpoint\n  - url: https://cloudsearchdomain.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon CloudSearch Domain multi-region endpoint\n  - url: http://cloudsearchdomain.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon CloudSearch Domain endpoint for China (Beijing) and China\n      (Ningxia)\n  - url: https://cloudsearchdomain.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon CloudSearch Domain endpoint for China (Beijing) and China\n      (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    SearchResponse:\n      type: object\n      properties:\n        status:\n          $ref: \"#/components/schemas/SearchStatus\"\n        hits:\n          $ref: \"#/components/schemas/Hits\"\n        facets:\n          $ref: \"#/components/schemas/Facets\"\n        stats:\n          $ref: \"#/components/schemas/Stats\"\n      description: The result of a <code>Search</code> request. Contains the documents that\n        match the specified search criteria and any requested fields,\n        highlights, and facet information.\n    SearchException:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/String\"\n      description: Information about any problems encountered while processing a search\n        request.\n    SuggestResponse:\n      type: object\n      properties:\n        status:\n          $ref: \"#/components/schemas/SuggestStatus\"\n        suggest:\n          $ref: \"#/components/schemas/SuggestModel\"\n      description: Contains the response to a <code>Suggest</code> request.\n    UploadDocumentsResponse:\n      type: object\n      properties:\n        status:\n          $ref: \"#/components/schemas/String\"\n        adds:\n          $ref: \"#/components/schemas/Adds\"\n        deletes:\n          $ref: \"#/components/schemas/Deletes\"\n        warnings:\n          $ref: \"#/components/schemas/DocumentServiceWarnings\"\n      description: Contains the response to an <code>UploadDocuments</code> request.\n    DocumentServiceException:\n      type: object\n      properties:\n        status:\n          $ref: \"#/components/schemas/String\"\n        message:\n          $ref: \"#/components/schemas/String\"\n      description: Information about any problems encountered while processing an upload\n        request.\n    Adds:\n      type: integer\n    Blob:\n      type: string\n    String:\n      type: string\n    Long:\n      type: integer\n    Bucket:\n      type: object\n      properties:\n        value:\n          $ref: \"#/components/schemas/String\"\n        count:\n          $ref: \"#/components/schemas/Long\"\n      description: \"A container for facet information. \"\n    BucketList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Bucket\"\n    BucketInfo:\n      type: object\n      properties:\n        buckets:\n          $ref: \"#/components/schemas/BucketList\"\n      description: A container for the calculated facet values and counts.\n    ContentType:\n      type: string\n      enum:\n        - application/json\n        - application/xml\n    Cursor:\n      type: string\n    Deletes:\n      type: integer\n    DocumentServiceWarning:\n      type: object\n      properties:\n        message:\n          $ref: \"#/components/schemas/String\"\n      description: A warning returned by the document service when an issue is discovered\n        while processing an upload request.\n    DocumentServiceWarnings:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DocumentServiceWarning\"\n    Double:\n      type: number\n      format: double\n    Expr:\n      type: string\n    Exprs:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/String\"\n    Facet:\n      type: string\n    Facets:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/BucketInfo\"\n    FieldStats:\n      type: object\n      properties:\n        min:\n          $ref: \"#/components/schemas/String\"\n        max:\n          $ref: \"#/components/schemas/String\"\n        count:\n          $ref: \"#/components/schemas/Long\"\n        missing:\n          $ref: \"#/components/schemas/Long\"\n        sum:\n          $ref: \"#/components/schemas/Double\"\n        sumOfSquares:\n          $ref: \"#/components/schemas/Double\"\n        mean:\n          $ref: \"#/components/schemas/String\"\n        stddev:\n          $ref: \"#/components/schemas/Double\"\n      description: The statistics for a field calculated in the request.\n    FieldValue:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    Fields:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/FieldValue\"\n    FilterQuery:\n      type: string\n    Highlight:\n      type: string\n    Highlights:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/String\"\n    Hit:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/String\"\n        fields:\n          $ref: \"#/components/schemas/Fields\"\n        exprs:\n          $ref: \"#/components/schemas/Exprs\"\n        highlights:\n          $ref: \"#/components/schemas/Highlights\"\n      description: Information about a document that matches the search request.\n    HitList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Hit\"\n    Hits:\n      type: object\n      properties:\n        found:\n          $ref: \"#/components/schemas/Long\"\n        start:\n          $ref: \"#/components/schemas/Long\"\n        cursor:\n          $ref: \"#/components/schemas/String\"\n        hit:\n          $ref: \"#/components/schemas/HitList\"\n      description: The collection of documents that match the search request.\n    Partial:\n      type: boolean\n    Query:\n      type: string\n    QueryOptions:\n      type: string\n    QueryParser:\n      type: string\n      enum:\n        - simple\n        - structured\n        - lucene\n        - dismax\n    Return:\n      type: string\n    Size:\n      type: integer\n    Sort:\n      type: string\n    Start:\n      type: integer\n    Stat:\n      type: string\n    SearchRequest:\n      type: object\n      properties: {}\n      description: Container for the parameters to the <code>Search</code> request.\n    SearchStatus:\n      type: object\n      properties:\n        timems:\n          $ref: \"#/components/schemas/Long\"\n        rid:\n          $ref: \"#/components/schemas/String\"\n      description: Contains the resource id (<code>rid</code>) and the time it took to\n        process the request (<code>timems</code>).\n    Stats:\n      type: object\n      description: The statistics calculated in the request.\n      additionalProperties:\n        $ref: \"#/components/schemas/FieldStats\"\n    Suggestions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SuggestionMatch\"\n    SuggestModel:\n      type: object\n      properties:\n        query:\n          $ref: \"#/components/schemas/String\"\n        found:\n          $ref: \"#/components/schemas/Long\"\n        suggestions:\n          $ref: \"#/components/schemas/Suggestions\"\n      description: Container for the suggestion information returned in a\n        <code>SuggestResponse</code>.\n    Suggester:\n      type: string\n    SuggestionsSize:\n      type: integer\n    SuggestRequest:\n      type: object\n      properties: {}\n      description: Container for the parameters to the <code>Suggest</code> request.\n    SuggestStatus:\n      type: object\n      properties:\n        timems:\n          $ref: \"#/components/schemas/Long\"\n        rid:\n          $ref: \"#/components/schemas/String\"\n      description: Contains the resource id (<code>rid</code>) and the time it took to\n        process the request (<code>timems</code>).\n    SuggestionMatch:\n      type: object\n      properties:\n        suggestion:\n          $ref: \"#/components/schemas/String\"\n        score:\n          $ref: \"#/components/schemas/Long\"\n        id:\n          $ref: \"#/components/schemas/String\"\n      description: \"An autocomplete suggestion that matches the query string specified in a\n        <code>SuggestRequest</code>. \"\n    UploadDocumentsRequest:\n      type: object\n      required:\n        - documents\n      properties:\n        documents:\n          $ref: \"#/components/schemas/Blob\"\n      description: Container for the parameters to the <code>UploadDocuments</code> request.\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-cloudsearchdomain-2013-01-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-cloudsearchdomain-2013-01-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/2013-01-01/documents/batch#format=sdk&Content-Type\": at 1:9704: post: operation \"UploadDocuments\": at 1:10094: parse path \"/2013-01-01/documents/batch#format=sdk&Content-Type\": path MUST NOT contain a fragment"
}