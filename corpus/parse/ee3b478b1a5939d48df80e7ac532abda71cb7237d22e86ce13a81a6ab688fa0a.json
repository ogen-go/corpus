{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sodafoundation/multi-cloud"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "openapi-spec/swagger.yaml",
			"byteSize": 91293,
			"content": "# Copyright 2020 The SODA Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SODA S3 API are updated for s3-compatibility, Some of the references are as follows:\n#\n# https://docs.aws.amazon.com/AmazonS3/latest/gsg/GetStartedWithS3.html\n#\n# New SODA s3 APIs are to be authenticated. The following explains request\n# authentication with the AWS Signature Version 4 algorithm.\n#\n# https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\n#\nopenapi: 3.0.0\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: 'https://virtserver.swaggerhub.com/open83/multi-cloud/1.0.0'\n  - url: 'http://virtserver.swaggerhub.com/opensds.io/OpenSDS-Multi-Cloud/1.0.0'\ninfo:\n  description: |\n    SODA Multi-cloud API to manage multi-cloud backend storages.\n    You can find out more about Swagger at\n    [https://sodafoundation.io/](https://sodafoundation.io/)\n  version: 1.0.0\n  title: SODA Multi-Cloud API\n  termsOfService: '://www.linuxfoundation.org/terms'\n  contact:\n    name: SODA Support\n    url: 'https://opensds.slack.com'\n    email: support@sodafoundation.io\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Backend\n    description: Multi-cloud cloud storage backends\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: Types\n    description: Supported storage backends\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: Plan\n    description: Migration plan\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: Job\n    description: Migration job\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: Policy\n    description: Schedule policy of plan.\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: s3\n    description: s3 interface of multi-cloud\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: FileShare\n    description: Multi-cloud cloud file shares\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: Volume\n    description: Multi-cloud cloud Volume\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: Backup\n    description: Multi-cloud interface for object archival and restore\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n# schemes:\n# - http\n  - name: Storage Service Plan\n    description: Multi-cloud Storage Service Plan(SSP)\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\n  - name: AccessKey SecretKey\n    description: Interface for Access Key and Secret Key generation\n    externalDocs:\n      description: Find out more\n      url: 'https://sodafoundation.io/'\npaths:\n  '/v1/{project_id}/aksks':\n    post:\n      tags:\n        - AKSK\n      summary: Create a new AKSK for a User.\n      operationId: addAKSK\n      parameters:\n        - name: project_id\n          in: path\n          required: true\n          description: AKSK to be generated for User of a Project / Tenant. project_id is same as tenant_id.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AKSKResponse'\n        '401':\n          description: Unauthorized. Token not found in header\n      requestBody:\n        $ref: '#/components/requestBodies/AKSK'\n  '/v1/{project_id}/aksks/{user_id}':\n    get:\n      tags:\n        - AKSK\n      summary: Get the AKSK for a UserId.\n      operationId: getAKSK\n      parameters:\n        - name: project_id\n          in: path\n          required: true\n          description: AKSK to be fetched for a User in Project project_id. project_id is same as tenant_id.\n          schema:\n            type: string\n        - name: user_id\n          in: path\n          required: true\n          description: AKSK to be fetched for a User of user_id in Project of project_id. project_id is same as tenant_id.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/array:\n              schema:\n                  $ref: '#/components/schemas/AKSKGetResponse'\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n        '403':\n          description: Forbidden\n        '404':\n          description: The resource does not exist i.e. AKSK does not exist.\n    delete:\n      tags:\n        - AKSK\n      summary: Delete AKSKs for a user.\n      operationId: deleteAKSK\n      parameters:\n        - name: project_id\n          in: path\n          required: true\n          description: AKSKs to be deleted for a User in project_id.\n          schema:\n            type: string\n        - name: user_id\n          in: path\n          required: true\n          description: AKSK to be deleted for a User of user_id in Project of project_id. project_id is same as tenant_id.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n        '401':\n          description: Unauthorized. Token not found in header\n  '/v1/{project_id}/aksks/{user_id}/download':\n    get:\n      tags:\n        - AKSK\n      summary: Download the AKSKs for a UserId.\n      operationId: downloadAKSK\n      parameters:\n        - name: project_id\n          in: path\n          required: true\n          description: AKSKs to be downloaded for a User in project_id.\n          schema:\n            type: string\n        - name: user_id\n          in: path\n          required: true\n          description: AKSK to be downloaded for a User of user_id in Project of project_id. project_id is same as tenant_id.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/array:\n              schema:\n                  $ref: '#/components/schemas/AKSKGetResponse'\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n        '403':\n          description: Forbidden\n        '404':\n          description: The resource does not exist i.e. AKSK does not exist.\n  '/v1/{tenantId}/backends':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Backend\n      summary: Create a backend.\n      operationId: createBackend\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Backend'\n        '415':\n          description: Unsupported Media Type\n        '401':\n          description: Unauthorized. Token not found in header\n      requestBody:\n        $ref: '#/components/requestBodies/Backend'\n    get:\n      tags:\n        - Backend\n      summary: List all backends.\n      operationId: listBackend\n      parameters:\n        - name: type\n          in: query\n          description: Filter the backend by backend type.\n          schema:\n            type: string\n            enum: \u0026CLOUD_BACKENDS\n              - hw-obs\n              - aws-s3\n              - azure-blob\n              - ceph-s3\n              - gcp-s3\n              - fusionstorage-object\n              - ibm-cos\n              - yig\n              - aws-file\n              - azure-file\n            example: *CLOUD_BACKENDS\n        - name: name\n          in: query\n          description: Filter the backend by name.\n          schema:\n            type: string\n        - name: region\n          in: query\n          description: Filter the backend by region.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  backends:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Backend_List'\n                  next:\n                    type: integer\n                    example: 1\n        '401':\n          description: Unauthorized. Token not found in header\n  '/v1/{tenantId}/backends/{backendId}':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenantId UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n      - name: backendId\n        in: path\n        description: The backend ID.\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Backend\n      summary: Get a backend information.\n      operationId: getBackend\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Backend_List'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n    put:\n      tags:\n        - Backend\n      summary: Update a backend.\n      operationId: updateBackend\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Backend'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                access:\n                  description: Updated the specified backend access Id\n                  type: string\n                  example: 'AMIKJGNJLHUEBWTNDL6X'\n                security:\n                  description: Updated the specified backend security Id\n                  type: string\n                  example: 'Fsgs5KHAcs12420yGHNDGne8x8i5naHvdf/xZbTH'\n    delete:\n      tags:\n        - Backend\n      summary: Deletes a backend.\n      operationId: deleteBackend\n      responses:\n        '200':\n          description: Delete success\n        '400':\n          description: Invalid ID supplied\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n        '500':\n          description: The backend can not be deleted. please delete bucket first\n  '/v1/{tenantId}/types':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenantId UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Types\n      summary: List all supported storage backend type.\n      operationId: listBackendTypes\n      parameters:\n        - name: name\n          in: query\n          description: Filter the backend by name.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  backends:\n                    type: array\n                    items:\n                      oneOf:\n                        - $ref: '#/components/schemas/AWS_Type'\n                        - $ref: '#/components/schemas/Huawei_Type'\n                        - $ref: '#/components/schemas/Azure_Type'\n                        - $ref: '#/components/schemas/Ceph_Type'\n                        - $ref: '#/components/schemas/GCP_Type'\n                        - $ref: '#/components/schemas/FS_Type'\n                        - $ref: '#/components/schemas/IBM_Type'\n                        - $ref: '#/components/schemas/YIG_Type'\n                        - $ref: '#/components/schemas/Alibaba_Type'\n                        - $ref: '#/components/schemas/AWS_File_Type'\n                        - $ref: '#/components/schemas/Azure_File_Type'\n                        - $ref: '#/components/schemas/GCP_File_Type'\n                        - $ref: '#/components/schemas/AWS_Block_Type'\n                        - $ref: '#/components/schemas/Hw_Block_Type'\n                        - $ref: '#/components/schemas/Hw_File_Type'\n                        - $ref: '#/components/schemas/Sony_Oda_Type'\n\n\n                  next:\n                    type: integer\n                    example: 16\n        '401':\n          description: Unauthorized. Token not found in header\n  '/v1/{tenantId}/plans':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Plan\n      summary: Create a plan.\n      operationId: createPlan\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  plan:\n                    $ref: '#/components/schemas/Plan'\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n      requestBody:\n        $ref: '#/components/requestBodies/Plan'\n    get:\n      tags:\n        - Plan\n      summary: List all plans.\n      operationId: listPlans\n      parameters:\n        - name: type\n          in: query\n          description: \u003e-\n            Filter the plans by plan type. Only migration support currently. New\n            type will be added in the future.\n          schema:\n            type: string\n            enum:\n              - migration\n        - name: name\n          in: query\n          description: Filter the plan by name.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  plans:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Plan'\n                  next:\n                    type: integer\n                    example: 1\n        '401':\n          description: Unauthorized. Token not found in header\n  '/v1/{tenantId}/plans/{planId}':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n      - name: planId\n        in: path\n        description: The plan ID\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Plan\n      summary: Get a plan.\n      operationId: getPlan\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  plan:\n                    $ref: '#/components/schemas/Plan'\n          description: successful operation.\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n        '403':\n          description: Forbidden\n        '404':\n          description: The resource does not exist i.e. Plan does not exist.\n    put:\n      tags:\n        - Plan\n      summary: Update a plan.\n      operationId: updatePlan\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  plan:\n                    $ref: '#/components/schemas/Plan'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist i.e. Plan does not exist.\n      requestBody:\n        $ref: '#/components/requestBodies/Plan'\n    delete:\n      tags:\n        - Plan\n      summary: Delete a plan.\n      operationId: deletePlan\n      responses:\n        '200':\n          description: Delete success\n          content:\n            application/json:\n              schema:\n                type: object\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist i.e. Plan does not exist.\n    post:\n      tags:\n        - Plan\n      summary: Run a plan.\n      operationId: runPlan\n      responses:\n        '200':\n          description: Run success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  jobId:\n                    type: string\n                    description: Id of the Job created for the Plan\n                    example: '5eaa86fe6f384d000116d1d5'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist i.e. Plan does not exist.\n  '/v1/{tenantId}/jobs':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Job\n      summary: List all jobs.\n      operationId: listJobs\n      parameters:\n        - name: type\n          in: query\n          description: \u003e-\n            Filter the jobs by job type. Only migration support currently. New\n            type will be added in the future.\n          schema:\n            type: string\n            enum: \u0026JOBS\n              - migration\n            example: migration\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  jobs:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Job'\n                  next:\n                    type: integer\n                    example: 1\n        '401':\n          description: Unauthorized. Token not found in header\n  '/v1/{tenantId}/jobs/{jobId}':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n      - name: jobId\n        in: path\n        description: The job ID\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Job\n      summary: Get a job.\n      operationId: getJob\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  job:\n                    $ref: '#/components/schemas/Job'\n          description: successful operation.\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n        '403':\n          description: Forbidden\n        '404':\n          description: The resource does not exist.\n  '/v1/{tenantId}/policies':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Policy\n      summary: Create a policy.\n      operationId: createPolicy\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  policy:\n                    $ref: '#/components/schemas/Policy'\n        '401':\n          description: Unauthorized. Token not found in header\n      requestBody:\n        $ref: '#/components/requestBodies/Policy'\n    get:\n      tags:\n        - Policy\n      summary: List all policies.\n      operationId: listPolicies\n      parameters:\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  policies:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Policy'\n                  next:\n                    type: integer\n                    example: 1\n        '401':\n          description: Unauthorized. Token not found in header\n  '/v1/{tenantId}/policies/{policyId}':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n      - name: policyId\n        in: path\n        description: The policy ID\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Policy\n      summary: Get a policy.\n      operationId: getPolicy\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  policy:\n                    $ref: '#/components/schemas/Policy'\n          description: successful operation.\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n        '403':\n          description: Forbidden\n        '404':\n          description: The resource does not exist.\n    put:\n      tags:\n        - Policy\n      summary: Update a policy.\n      operationId: updatePolicy\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  policy:\n                    $ref: '#/components/schemas/Policy'\n      requestBody:\n        $ref: '#/components/requestBodies/Policy'\n    delete:\n      tags:\n        - Policy\n      summary: Delete a policy.\n      operationId: deletePolicy\n      responses:\n        '200':\n          description: Delete success\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          description: Invalid ID supplied\n        '401':\n          description: Unauthorized. Token not found in header\n  '/':\n    get:\n      tags:\n        - s3\n      summary: List Buckets.\n      operationId: listBuckets\n      responses:\n        '200':\n          description: successful operation list of buckets\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ListAllMyBucketsResult'\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n  '/{bucketName}':\n    parameters:\n      - name: bucketName\n        in: path\n        description: The name of the bucket\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - s3\n      summary: Create a bucket.\n      operationId: bucketPut\n      responses:\n        '200':\n          description: No Content, i.e Bucket created successfully\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n        '500':\n          description: GetBackend Failed\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/CreateBucketConfiguration'\n    get:\n      tags:\n        - s3\n      summary: Get Objects of the Bucket\n      operationId: listObjects\n      responses:\n        '200':\n          description: successful list objects\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ListBucketResult'\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n        '404':\n          description: Not Found i.e. No Such Bucket\n    delete:\n      tags:\n        - s3\n      summary: Delete a bucket.\n      operationId: bucketdelete\n      responses:\n        '204':\n          description: No Content, i.e Bucket deleted successfully\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n        '404':\n          description: Not Found i.e. No Such Bucket\n        '409':\n          description: Bucket Not Empty\n  '/{bucketName}/{object}':\n    parameters:\n      - name: bucketName\n        in: path\n        description: the name of bucket\n        required: true\n        schema:\n          type: string\n      - name: object\n        in: path\n        description: the name of object\n        required: true\n        schema:\n          type: string\n      - name: Range\n        in: query\n        description: \u003e-\n          the Header parameter Range value like \"bytes:1-10\",used for multipart\n          download\n        required: false\n        schema:\n          type: string\n      - name: uploads\n        in: query\n        description: The format is ''/{object}?uploads'',used for init multipartupload\n        required: false\n        schema:\n          type: string\n      - name: partNumber\n        in: query\n        description: \u003e-\n          the format is\n          '/{object}?partNumber={partNumber}\u0026uploadId={UploadId}',must be used\n          with uploadId parameter ,used for upload a part\n        required: false\n        schema:\n          type: string\n      - name: uploadId\n        in: query\n        description: \u003e-\n          the format is '/{object}?uploadId={UploadId}',used for compelete\n          multipart upload and abort multiparupload\n        required: false\n        schema:\n          type: string\n\n    put:\n      tags:\n        - s3\n      summary: Upload Object.\n      operationId: objectPut\n      responses:\n        '200':\n          description: Successful Upload Object\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n        '404':\n          description: Not Found i.e. No Such Bucket\n    get:\n      tags:\n        - s3\n      summary: Download Object\n      operationId: objectGet\n      responses:\n        '200':\n          description: Successful Download Object\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n        '404':\n          description: Not Found i.e. No Such Key\n    delete:\n      tags:\n        - s3\n      summary: Delete Object.\n      operationId: objectdelete\n      responses:\n        '200':\n          description: Successful Deletion of Object\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n        '404':\n          description: Not Found i.e. No Such Key\n\n  '/{bucketName}/{Object}':\n    parameters:\n      - name: bucketName\n        in: path\n        description: the name of bucket\n        required: true\n        schema:\n          type: string\n      - name: object\n        in: path\n        description: the name of object to be archived\n        required: true\n        schema:\n          type: string\n      - name: Range\n        in: query\n        description: \u003e-\n          the Header parameter Range value like \"bytes:1-10\",used for multipart archival\n          download\n        required: false\n        schema:\n          type: string\n      - name: uploads\n        in: query\n        description: The format is '/{object}?uploads',used for init multipartarchive\n        required: false\n        schema:\n          type: string\n      - name: partNumber\n        in: query\n        description: \u003e-\n          the format is\n          '/{object}?partNumber={partNumber}\u0026uploadId={UploadId}',must be used\n          with uploadId parameter, used for upload and archive a part\n        required: false\n        schema:\n          type: string\n      - name: uploadId\n        in: query\n        description: \u003e-\n          the format is '/{object}?uploadId={UploadId}',used for compelete\n          multipart archival and abort multipartarchive\n        required: false\n        schema:\n          type: string\n      - name: X-AMZ-Storage-Class\n        in: header\n        description: For archiving object, the request header to describe storage class\n        required: false\n        schema:\n          type: string\n      - name: restore\n        in: query\n        description: \u003e-\n          the format is '/{object}?restore', used to restore archived object\n        required: false\n        schema:\n          type: string\n\n    put:\n      tags:\n        - Backup\n      summary: Upload Object into archival storage.\n      operationId: backupPut\n      responses:\n        '200':\n          description: Successful Archive Object\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n        '404':\n          description: Not Found i.e. No Such Bucket\n    post:\n      tags:\n        - Backup\n      summary: Restore Object from archival storage.\n      operationId: objectPost\n      requestBody:\n        description: Required inputs for restoring a object.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestoreObject'\n      responses:\n        '200':\n          description: Successful restoration of Object initiated\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch, RestoreFailed\n        '404':\n          description: Not Found i.e. No Such Bucket\n        '409':\n          description: Restoration of object is already in porgress\n    get:\n      tags:\n        - Backup\n      summary: Download archived and restored Object\n      operationId: backupGet\n      responses:\n        '200':\n          description: Successful Download of Object\n        '403':\n          description: Forbidden; Access Denied, InvalidAccessKey, SignatureDoesNotMatch\n        '404':\n          description: Not Found i.e. No Such Key\n\n  '/storageClasses':\n    get:\n      tags:\n        - s3\n      summary: Get Supported StorageClasses\n      operationId: getStorageClasses\n      responses:\n        '200':\n          description: \u003e-\n            Get storage classes successfully. There is a map between storage class name\n            and storage tier, as default the storage classes are compatible with aws s3.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ListStorageClasses'\n  '/v1/{tenantId}/volumes':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Volume\n      summary: Create a volume.\n      operationId: createVolume\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VolumeResult'\n        '415':\n          description: Unsupported Media Type\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n      requestBody:\n        $ref: '#/components/requestBodies/Volume'\n    get:\n      tags:\n        - Volume\n      summary: List all volumes.\n      operationId: listVolumes\n      parameters:\n        - name: backendId\n          in: query\n          description: Filter the volumes by backend.\n          schema:\n            type: string\n            example: '5eea1a317d038300012f5bfc'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  volumes:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/VolumeResult'\n                  next:\n                    type: integer\n  '/v1/{tenantId}/volumes/{id}':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenantId UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: The volume ID.\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Volume\n      summary: Get a volume information.\n      operationId: getVolume\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VolumeResult'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n    put:\n      tags:\n        - Volume\n      summary: Update a volume.\n      operationId: updateVolume\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VolumeResult'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n      requestBody:\n        $ref: '#/components/requestBodies/VolumeUpdate'\n    delete:\n      tags:\n        - Volume\n      summary: Deletes a volume.\n      operationId: deleteVolume\n      responses:\n        '200':\n          description: Delete success\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          description: Invalid ID supplied\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n        '500':\n          description: The volume can not be deleted. please check status\n  '/v1/{tenantId}/file/shares':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - FileShare\n      summary: Create a fileshare.\n      operationId: createFileShare\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileShareResult'\n        '415':\n          description: Unsupported Media Type\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n      requestBody:\n        $ref: '#/components/requestBodies/FileShare'\n    get:\n      tags:\n        - FileShare\n      summary: List all file shares.\n      operationId: listFileShare\n      parameters:\n        - name: backendId\n          in: query\n          description: Filter the fileshares by backend.\n          schema:\n            type: string\n            example: '5eea1a317d038300012f5bfc'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  fileshares:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/FileShareResult'\n                  next:\n                    type: integer\n                    example: 1\n        '401':\n          description: Unauthorized. Token not found in header\n  '/v1/{tenantId}/file/share/{id}':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenantId UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: The fileshare ID.\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - FileShare\n      summary: Get a fileshare information.\n      operationId: getFileShare\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileShareResult'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n    put:\n      tags:\n        - FileShare\n      summary: Update a fileshare.\n      operationId: updateFileShare\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileShareResult'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n      requestBody:\n        $ref: '#/components/requestBodies/FileShareUpdate'\n    delete:\n      tags:\n        - FileShare\n      summary: Deletes a fileshare.\n      operationId: deleteFileShare\n      responses:\n        '200':\n          description: Delete success\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          description: Invalid ID supplied\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n        '500':\n          description: The fileshare can not be deleted. please check status\n\n  '/v1/{tenantId}/tiers':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenant UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Storage Service Plan\n      summary: Create a Storage Service Plan(SSP)\n      operationId: createTiers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tier'\n        '415':\n          description: Unsupported Media Type\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized. Token not found in header\n      requestBody:\n        $ref: '#/components/requestBodies/Tier'\n    get:\n      tags:\n        - Storage Service Plan\n      summary: List all Storage Service Plans.\n      operationId: listTiers\n      parameters:\n        - name: name\n          in: query\n          description: Filter the tier by name.\n          schema:\n            type: string\n            example: 'Gold'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        '200':\n          description: successful operation.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tiers:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Tier'\n                  next:\n                    type: integer\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n  '/v1/{tenantId}/tiers/{id}':\n    parameters:\n      - name: tenantId\n        in: path\n        description: The tenantId UUID in a multi-tenancy environment.\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: The tier ID.\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Storage Service Plan\n      summary: Get a Storage Service Plan information.\n      operationId: getTier\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tier'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n    put:\n      tags:\n        - Storage Service Plan\n      summary: Update a Storage Service Plan.\n      operationId: updateTier\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tier'\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n      requestBody:\n        $ref: '#/components/requestBodies/TierUpdate'\n    delete:\n      tags:\n        - Storage Service Plan\n      summary: Deletes a Storage Service Plan.\n      operationId: deleteTier\n      responses:\n        '200':\n          description: Delete success\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          description: Invalid ID supplied\n        '401':\n          description: Unauthorized. Token not found in header\n        '404':\n          description: The resource does not exist.\n        '500':\n          description: The storage service plan can not be deleted. please check status\ncomponents:\n  parameters:\n    offset:\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n        default: 0\n      description: The number of items to skip before starting to collect the result set\n    limit:\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        default: 1000\n      description: The numbers of items to return\n    sort:\n      in: query\n      name: sort\n      required: false\n      schema:\n        type: string\n      description: \u003e-\n        The sort key and direction of items to return, string must\n        like:\"id:asc,name:desc\"\n  schemas:\n    AKSK:\n      type: object\n      required:\n        - Name\n      properties:\n        project_id:\n          description: 'Valid TenantId or ProjectId'\n          type: string\n          example: 94b280022d0c4401bcf3b0ea85870519\n        user_id:\n          description: 'Valid User ID'\n          type: string\n          example: 558057c4256545bd8a307c37464003c9\n    Backend_Request:\n      type: object\n      properties:\n        name:\n          description: The backend name specified by user.\n          type: string\n          example: backend001\n        type:\n          description: The backend type.\n          type: string\n          example: aws-s3\n          enum: *CLOUD_BACKENDS\n        region:\n          type: string\n          example: ap-south-1\n        endpoint:\n          type: string\n          example: s3.ap-south-1.amazonaws.com\n        access:\n          type: string\n          example: '4X7JQDFTCYUNWFBRYZVC'\n        security:\n          type: string\n          example: '9hr0ekZgg0vZHulEekTVfWuu1lnPFvpVAJQNHXdn'\n    Backend_List:\n      type: object\n      properties:\n        id:\n          description: The backend ID, generated by server\n          type: string\n          example: '5ea809d2553b0f000116be32'\n        tenantId:\n          description: The tenant UUID in a multi-tenancy environment.\n          type: string\n          example: '94b280022d0c4401bcf3b0ea85870519'\n        userId:\n          description: The user UUID in a multi-tenancy environment.\n          type: string\n          example: '558057c4256545bd8a307c37464003c9'\n        name:\n          description: The backend name specified by user.\n          type: string\n          example: backend001\n        type:\n          description: The backend type.\n          type: string\n          example: aws-s3\n          enum: *CLOUD_BACKENDS\n        region:\n          type: string\n          example: ap-south-1\n        endpoint:\n          type: string\n          example: s3.ap-south-1.amazonaws.com\n    Backend:\n      type: object\n      properties:\n        id:\n          description: The backend ID, generated by server\n          type: string\n          example: '5ea809d2553b0f000116be32'\n        tenantId:\n          description: The tenant UUID in a multi-tenancy environment.\n          type: string\n          example: '94b280022d0c4401bcf3b0ea85870519'\n        userId:\n          description: The user UUID in a multi-tenancy environment.\n          type: string\n          example: '558057c4256545bd8a307c37464003c9'\n        name:\n          description: The backend name specified by user.\n          type: string\n          example: backend001\n        type:\n          description: The backend type.\n          type: string\n          example: aws-s3\n          enum: *CLOUD_BACKENDS\n        region:\n          type: string\n          example: ap-south-1\n        endpoint:\n          type: string\n          example: s3.ap-south-1.amazonaws.com\n        access:\n          type: string\n          example: '4X7JQDFTCYUNWFBRYZVC'\n        security:\n          type: string\n          example: '9hr0ekZgg0vZHulEekTVfWuu1lnPFvpVAJQNHXdn'\n    AWS_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: aws-s3\n        description:\n          description: The backend type description.\n          type: string\n          example: AWS Simple Cloud Storage Service(S3)\n    Huawei_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: hw-obs\n        description:\n          description: The backend type description.\n          type: string\n          example: Huawei Storage Object Service(OBS)\n    Azure_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: azure-blob\n        description:\n          description: The backend type description.\n          type: string\n          example: Azure Blob Storage\n    Ceph_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: ceph-s3\n        description:\n          description: The backend type description.\n          type: string\n          example: Ceph Object Storage\n    GCP_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: gcp-s3\n        description:\n          description: The backend type description.\n          type: string\n          example: GCP Storage\n    FS_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: fusionstorage-object\n        description:\n          description: The backend type description.\n          type: string\n          example: Huawei Fusionstorage Object Storage\n    IBM_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: ibm-cos\n        description:\n          description: The backend type description.\n          type: string\n          example: IBM Cloud Object Storage\n    YIG_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: yig\n        description:\n          description: The backend type description.\n          type: string\n          example: YIG Storage\n    Alibaba_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: alibaba-oss\n        description:\n          description: The backend type description.\n          type: string\n          example: Alibaba Object Storage Service(OSS)\n    AWS_File_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: aws-file\n        description:\n          description: The backend type description.\n          type: string\n          example: AWS File Service\n    Azure_File_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: azure-file\n        description:\n          description: The backend type description.\n          type: string\n          example: Azure File Service\n    GCP_File_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: gcp-file\n        description:\n          description: The backend type description.\n          type: string\n          example: GCP File Service\n    AWS_Block_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: aws-block\n        description:\n          description: The backend type description.\n          type: string\n          example: AWS Block Service\n    Hw_File_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: hw-file\n        description:\n          description: The backend type description.\n          type: string\n          example: Huawei File Service\n    Hw_Block_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: hw-block\n        description:\n          description: The backend type description.\n          type: string\n          example: Hw Block Service\n    Sony_Oda_Type:\n      type: object\n      properties:\n        name:\n          description: The backend type.\n          type: string\n          example: sony-oda\n        description:\n          description: The backend type description.\n          type: string\n          example: Sony-ODA Object Storage\n    KV:\n      type: object\n      properties:\n        key:\n          description: Key of the Key-Value object.\n          type: string\n          example: Image001.PNG\n        Value:\n          description: Value of the Key-Value object.\n          type: string\n          example: '\u0026#34;d97849a5d11d7f7f90e0c1609d091d0a\u0026#34;'\n    Tag:\n      type: object\n      properties:\n        key:\n          description: Key of the Tag object.\n          type: string\n          example: Name\n        Value:\n          description: Value of the Tag object.\n          type: string\n          example: soda\n      required:\n        - Name\n    Fields:\n      type: object\n      properties:\n        CreationTimeAtBackend:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  example: '2020-06-17T19:44:06Z'\n        CreationToken:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  example: 'J7UWp#KX7BPi#zC5]{0j2/I54ukWP?j~[d3H'\n        FileSystemId:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  example: 'fs-68e26cb9'\n        FileSystemSize:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StructValue:\n                  type: object\n                  properties:\n                    fields:\n                      type: object\n                      properties:\n                        Timestamp:\n                          type: object\n                          properties:\n                            kind:\n                              type: object\n                              properties:\n                                NumberValue:\n                                  type: integer\n                                  example: 0\n                        Value:\n                          type: object\n                          properties:\n                            kind:\n                              type: object\n                              properties:\n                                NumberValue:\n                                  type: integer\n                                  example: 6144\n                        ValueInIA:\n                          type: object\n                          properties:\n                            kind:\n                              type: object\n                              properties:\n                                NumberValue:\n                                  type: integer\n                                  example: 0\n                        ValueInStandard:\n                          type: object\n                          properties:\n                            kind:\n                              type: object\n                              properties:\n                                NumberValue:\n                                  type: integer\n                                  example: 6144\n        LifeCycleState:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  enum:\n                    - creating\n                    - available\n                    - updating\n                    - deleting\n                    - deleted\n                  example: 'available'\n        Name:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  example: 'sodafs'\n        NumberOfMountTargets:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                NumberValue:\n                  type: integer\n                  example: 0\n        OwnerId:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  example: '676599967111'\n        PerformanceMode:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  enum:\n                    - generalPurpose\n                    - maxIO\n                  example: 'maxIO'\n        ProvisionedThroughputInMibps:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                NumberValue:\n                  type: integer\n                  example: 1\n        ThroughputMode:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  enum:\n                    - bursting\n                    - provisioned\n                  example: 'provisioned'\n    VolumeFields:\n      type: object\n      properties:\n        CreationTimeAtBackend:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  example: '2020-06-17T19:44:06Z'\n        StartTimeAtBackend:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  example: '2020-06-17T19:44:06Z'\n        VolumeId:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                StringValue:\n                  type: string\n                  example: vol-03deedaee2de0060f\n        Progress:\n          type: object\n          properties:\n            kind:\n              type: object\n              properties:\n                NumberValue:\n                  type: integer\n                  example: 0\n    Connector:\n      type: object\n      properties:\n        StorType:\n          $ref: '#/components/schemas/ConnType'\n        BucketName:\n          type: string\n          description: \u003e-\n            The name of bucket which is created in SODA Multi-Cloud. When the type of\n            connector is opensds-obj, this parameter should be provided.\n          example: bucket001\n    ConnType:\n      type: string\n      description: Connector type.\n      example: opensds-obj\n      enum: *CLOUD_BACKENDS\n    Plan:\n      type: object\n      properties:\n        Id:\n          description: The plan ID, generated by server\n          type: string\n          example: '5eaa81fd6f384d000116d1d4'\n        TenantId:\n          description: The tenant UUID in a multi-tenancy environment.\n          type: string\n          example: '94b280022d0c4401bcf3b0ea85870519'\n        UserId:\n          description: The user UUID in a multi-tenancy environment.\n          type: string\n          example: '558057c4256545bd8a307c37464003c9'\n        Description:\n          description: Plan description.\n          type: string\n          example: AWS to HW OBS Bucket Migration\n        Name:\n          description: The plan name specified by user.\n          type: string\n          example: plan001\n        Type:\n          description: \u003e-\n            The plan type. Till now only migration support. New types will be\n            added in the future.\n          type: string\n          example: migration\n          enum:\n            - migration\n        PolicyEnabled:\n          description: Enable policy or not.\n          type: boolean\n        PolicyId:\n          description: \u003e-\n            Related policy id, plan will be scheduled automatically according this policy if PolicyEnabled is true.\n          type: string\n        RemainSource:\n          description: Remain the source objects or not.\n          type: boolean\n          example: true\n        SourceConn:\n          $ref: '#/components/schemas/Connector'\n        DestConn:\n          $ref: '#/components/schemas/Connector'\n        Filter:\n          type: object\n          properties:\n            Prefix:\n              type: string\n              description: \u003e-\n                Prefix of object name, only those objects which name have this\n                prefix will be choosed.\n              example: photos/\n            Tag:\n              type: array\n              description: Tag of object name.\n              items:\n                $ref: '#/components/schemas/KV'\n    Job:\n      type: object\n      properties:\n        Id:\n          description: The plan ID, generated by server\n          type: string\n          example: '5bd6f273b0bdf90001dc91c3'\n        TenantId:\n          description: The tenant UUID in a multi-tenancy environment.\n          type: string\n          example: '94b280022d0c4401bcf3b0ea85870519'\n        UserId:\n          description: The User UUID in a multi-tenancy environment.\n          type: string\n          example: '558057c4256545bd8a307c37464003c9'\n        TriggerType:\n          description: The migration triggering operation type.\n          type: string\n          example: manual\n          enum:\n            - auto\n            - manual\n        Type:\n          description: \u003e-\n            The plan type. Till now only migration support. New types will be\n            added in the future.\n          type: string\n          example: migration\n          enum: *JOBS\n        PlanName:\n          description: The name of plan job belongs to.\n          type: string\n          example: plan001\n        PlanId:\n          description: The id of plan job belongs to.\n          type: string\n          example: '5eaa81fd6f384d000116d1d4'\n        SourceLocation:\n          description: The source data migrate or replicate from.\n          type: string\n          example: bucket001\n        DestLocation:\n          description: The target data migrate or replicate to.\n          type: string\n          example: bucket002\n        CreateTime:\n          description: The time job is created.\n          type: integer\n          example: 1588233982\n        StartTime:\n          description: The time job started to run.\n          type: integer\n          example: 158823398\n        EndTime:\n          description: The time job ended.\n          type: integer\n          example: 1588233983\n        Status:\n          description: The status of job.\n          type: string\n          enum:\n            - pending\n            - running\n            - succeed\n            - failed\n          example: succeed\n        TotalCapacity:\n          description: The total capacity that should be migrated.\n          type: integer\n          example: 287206\n        PassedCapacity:\n          description: The capacity that have been migrated.\n          type: integer\n          example: 287206\n        MigratedCapacity:\n          description: The capacity that have been migrated till now.\n          type: integer\n          example: 287206\n        TotalCount:\n          description: The total count of objects that should be migrated.\n          type: integer\n          example: 1\n        PassedCount:\n          description: The count that have been migrated.\n          type: integer\n          example: 1\n        Progress:\n          description: The progress of job, represented by percentage.\n          type: integer\n          example: 100\n        RemainSource:\n          description: Flag indicating whether to keep the content of source bucket\n          type: boolean\n          example: true\n    Policy:\n      type: object\n      properties:\n        Id:\n          description: The policy ID, generated by server\n          type: string\n          example: '5bd6f273b0bdf90001dc91c3'\n        TenantId:\n          description: The tenant UUID in a multi-tenancy environment.\n          type: string\n          example: '94b280022d0c4401bcf3b0ea85870519'\n        Name:\n          description: Policy Name.\n          type: string\n          example: policy001\n        Description:\n          description: Description of policy.\n          type: string\n          example: Migration Policy\n        Schedule:\n          description: Schedule rules.\n          type: object\n          properties:\n            Type:\n              type: string\n              description: The type of scheduler, only cron support now.\n              enum:\n                - cron\n              example: 'cron'\n            TriggerProperties:\n              type: string\n              description: \u003e-\n                Cron expression format. A cron expression represents a set of\n                times, using 6 space-separated fields as follow.\n                #Field name   | Mandatory? | Allowed values  | Allowed special characters\n                #----------   | ---------- | --------------  | --------------------------\n                #Seconds      | Yes        | 0-59            | * / , -\n                #Minutes      | Yes        | 0-59            | * / , -\n                #Hours        | Yes        | 0-23            | * / , -\n                #Day of month | Yes        | 1-31            | * / , - ?\n                #Month        | Yes        | 1-12 or JAN-DEC | * / , -\n                #Day of week  | Yes        | 0-6 or SUN-SAT  | * / , - ?\n                #See https://godoc.org/github.com/robfig/cron for details.\n              example: ''\n    FileShare:\n      type: object\n      required:\n        - Name\n        - BackendId\n        - Metadata\n      properties:\n        Id:\n          description: The fileshare ID, - Optional\n          type: string\n          example: '5ef1db51202b510001c3804c'\n        UserId:\n          description: The user UUID in a multi-tenancy environment, - Optional\n          type: string\n          example: '558057c4256545bd8a307c37464003c9'\n        BackendId:\n          description: The backend ID, - Required\n          type: string\n          example: '5ea809d2553b0f000116be32'\n        Backend:\n          description: The backend Name, - Optional\n\n          type: string\n          example: backend001\n        Name:\n          description: The fileshare name specified by user, - Required\n          type: string\n          example: fileshare001\n        Description:\n          description: The fileshare name specified by user, - Optional\n          type: string\n          example: 'AWS FileShare'\n        Type:\n          description: The fileshare type, - Optional\n          type: string\n          example: generalPurpose\n        Size:\n          description: The fileshare size, - Optional\n          type: integer\n          example: 1073741824\n        Region:\n          description: The region for the fileshare, - Optional\n          type: string\n          example: ap-south-1\n        AvailabilityZone:\n          description: The availability zone for the fileshare, - Optional\n          type: string\n          example: ap-south-1a\n        Protocols:\n          description: The fileshare supported protocols, - Optional\n          type: string\n          enum: \u0026FILESHARE_PROTOCOL\n            - NFS\n            - SMB\n          example: *FILESHARE_PROTOCOL\n        Tags:\n          description: The fileshare tags, - Optional\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        SnapshotId:\n          description: The fileshare snapshot id, - Optional\n          type: string\n          example: '5eea749a926e5300011a69d6'\n        Encrypted:\n          description: Flag for encryted fileshare, - Optional\n          type: boolean\n          example: true\n        EncryptedSettings:\n          description: Encryted fileshare Keys, - Optional\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            KmsKeyId: 'arn:aws:kms:ap-south-1:676589967111:key/a6e1716e-0e90-407b-b494-b8ef8de91fc'\n        Metadata:\n          type: object\n          description: Metadata for cloud backend specific data, - Required\n          additionalProperties:\n            type: string\n          example:\n            PerformanceMode: 'maxIO'\n            ThroughputMode: 'provisioned'\n            ProvisionedThroughputInMibps: 1\n    FileShareUpdate:\n      type: object\n      properties:\n        Description:\n          description: The fileshare name specified by user, - Optional\n          type: string\n          example: 'AWS FileShare'\n        Size:\n          description: The fileshare size, - Optional\n          type: integer\n          example: 1073741824\n        Tags:\n          description: The fileshare tags, - Optional\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        Encrypted:\n          description: Flag for encryted fileshare, - Optional\n          type: boolean\n          example: true\n        EncryptedSettings:\n          description: Encryted fileshare Keys, - Optional\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            KmsKeyId: 'arn:aws:kms:ap-south-1:676589967111:key/a6e1716e-0e90-407b-b494-b8ef8de91fc'\n        Metadata:\n          type: object\n          description: Metadata for cloud backend specific data, - Required\n          additionalProperties:\n            type: string\n          example:\n            PerformanceMode: 'maxIO'\n            ThroughputMode: 'provisioned'\n            ProvisionedThroughputInMibps: 1\n    Volume:\n      type: object\n      required:\n        - Name\n        - BackendId\n        - Type\n      properties:\n        Id:\n          description: 'The volume ID, - Optional'\n          type: string\n          example: 5ef1db51202b510001c3804c\n        UserId:\n          description: 'The user UUID in a multi-tenancy environment, - Optional'\n          type: string\n          example: 558057c4256545bd8a307c37464003c9\n        BackendId:\n          description: 'The backend ID, - Required'\n          type: string\n          example: 5ea809d2553b0f000116be32\n        Backend:\n          description: 'The backend Name, - Optional'\n          type: string\n          example: backend001\n        Name:\n          description: 'The volume name specified by user, - Required'\n          type: string\n          example: volume001\n        Description:\n          description: 'The volume name specified by user, - Optional'\n          type: string\n          example: AWS Volume\n        Type:\n          description: 'The volume type, - Optional'\n          type: string\n          example: gp2\n        iops:\n          description: The IOPS the required for the volume as per the cloud provider\n          type: integer\n          example: 100\n        Size:\n          description: 'The volume size, - Optional'\n          type: integer\n          example: 1073741824\n        Region:\n          description: 'The region for the volume, - Optional'\n          type: string\n          example: ap-south-1\n        AvailabilityZone:\n          description: 'The availability zone for the volume, - Optional'\n          type: string\n          example: ap-south-1a\n        Tags:\n          description: 'The volume tags, - Optional'\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        SnapshotId:\n          description: 'The volume snapshot id, - Optional'\n          type: string\n          example: 5eea749a926e5300011a69d6\n        Encrypted:\n          description: 'Flag for encrypted volume, - Optional'\n          type: boolean\n          example: true\n        EncryptedSettings:\n          description: 'Encrypted volume Keys, - Optional'\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            KmsKeyId: 'arn:aws:kms:ap-south-1:676589967111:key/a6e1716e-0e90-407b-b494-b8ef8de91fc'\n        Metadata:\n          type: object\n          description: 'Metadata for cloud backend specific data, - Optional'\n          additionalProperties:\n            type: string\n          example:\n            VolumeId: vol-03deedaee2de0060f\n    VolumeUpdate:\n      type: object\n      properties:\n        Description:\n          description: 'The volume name specified by user, - Optional'\n          type: string\n          example: AWS Volume Update\n        Size:\n          description: 'The volume size, - Optional'\n          type: integer\n          example: 1073741824\n        Type:\n          description: 'The volume Type, - Optional'\n          type: integer\n          example: io1\n        Iops:\n          description: 'The Iops, - Optional'\n          type: integer\n          example: 200\n        Tags:\n          description: 'The volume tags, - Optional'\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        Metadata:\n          type: object\n          description: 'Metadata for cloud backend specific data, - Optional'\n          additionalProperties:\n            type: string\n          example:\n            VolumeId: vol-03deedaee2de0060f\n    Tier:\n      type: object\n      required:\n        - Name\n      properties:\n        Id:\n          description: 'The SSP ID'\n          type: string\n          example: 60d2e32e7df895000142695d\n        TenantId:\n          description: 'The Tenant ID'\n          type: string\n          example: a881ede44b9449e2ba795e4deb2bf807\n        Name:\n          description: 'The SSP name specified by user, - Required'\n          type: string\n          example: Gold\n        Backends:\n          description: 'The backend Name, - Optional'\n          type: array\n          items:\n            example: backend001, backend002\n        Tenants:\n          description: 'The Tenants Name, - Optional'\n          type: array\n          items:\n            example: Tenants1, Tenants2\n    TierRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Id:\n          description: 'The SSP ID'\n          type: string\n          example: a881ede44b9449e2ba795e4deb2bf808\n        Name:\n          description: 'The SSP name specified by user, - Required'\n          type: string\n          example: Gold\n        Backends:\n          description: 'The backend Name, - Optional'\n          type: array\n          items:\n            example: backend001, backend002\n        Tenants:\n          description: 'The Tenants Name, - Optional'\n          type: array\n          items:\n            example: Tenants1, Tenants2\n    TierUpdate:\n      type: object\n      properties:\n        AddBackends:\n          description: 'The backend Name, - Optional'\n          type: array\n          items:\n            example: backend001, backend002\n        DeleteBackends:\n          description: 'The backend Name, - Optional'\n          type: array\n          items:\n            example: backend001, backend002\n        AddTenants:\n          description: 'The Tenants Name, - Optional'\n          type: array\n          items:\n            example: Tenants1, Tenants2\n        DeleteTenants:\n          description: 'The Tenants Name, - Optional'\n          type: array\n          items:\n            example: Tenants1, Tenants2\n\n    AKSKResponse:\n      type: object\n      properties:\n        access_key:\n          description: 'Valid TenantId or ProjectId'\n          type: string\n          example: 1Pq7NVTqFh4uR7vy\n        secret_key:\n          description: 'Valid User ID'\n          type: string\n          example: x3Wbktxj4aSudXwAQJG6ExBmqgEMjVlq\n    AKSKGetResponse:\n      type: array\n      items:\n        properties:\n          project_id:\n            description: 'Valid TenantId or ProjectId'\n            type: string\n            example: 94b280022d0c4401bcf3b0ea85870519\n          user_id:\n            description: 'Valid User ID'\n            type: string\n            example: 558057c4256545bd8a307c37464003c9\n          type:\n            description: 'Valid User ID'\n            type: string\n            example: ec2\n          blob:\n            type: array\n            item:\n            $ref: '#/components/schemas/AKSKResponse'\n    BaseResponse:\n      type: object\n      properties:\n        ReturnCode:\n          description: error code\n          type: integer\n          example: 200\n        Message:\n          description: sucessfully or failure\n          type: string\n          example: 1\n    CreateBucketConfiguration:\n      type: object\n      xml:\n        namespace: http://s3.amazonaws.com/doc/2006-03-01/\n      properties:\n        LocationConstraint:\n          description: The backend of Bucket\n          type: string\n          example: backend001\n    ListAllMyBucketsResult:\n      type: object\n      xml:\n        namespace: http://s3.amazonaws.com/doc/2006-03-01/\n      properties:\n        Owner:\n          description: Owner/Tenant of the bucket\n          type: object\n          properties:\n            ID:\n              description: The tenant UUID in a multi-tenancy environment.\n              type: string\n              example: '94b280022d0c4401bcf3b0ea85870519'\n            DisplayName:\n              description: The tenant name in a multi-tenancy environment.\n              type: string\n              example: ''\n        Buckets:\n          description: ''\n          type: object\n          properties:\n            Bucket:\n              description: Bucket details\n              type: object\n              properties:\n                Name:\n                  description: The name of bucket\n                  type: string\n                  example: bucket001\n                CreationDate:\n                  description: The date of creation\n                  type: string\n                  example: '2020-04-29T15:37:28.000Z'\n                LocationConstraint:\n                  description: The backend of logical bucket\n                  type: string\n                  example: aws-backend\n                VersioningConfiguration:\n                  description: Versioning Configuration of the bucket\n                  type: object\n                  properties:\n                    Status:\n                      description: Status of the Versioning Bucket\n                      type: string\n                      enum:\n                        - Enabled\n                        - Disabled\n                        - Suspended\n                      example: Disabled\n                SSEConfiguration:\n                  description: SSE Configuration of the bucket\n                  type: object\n                  properties:\n                    SSE:\n                      description: SSE Configuration of the bucket\n                      type: object\n                      properties:\n                        enabled:\n                          description: Status of the SSE Bucket\n                          type: boolean\n                          example: false\n                    SSE-KMS:\n                      description: SSE KMS Configuration of the bucket\n                      type: object\n                      properties:\n                        enabled:\n                          description: Status of the SSE KMS Bucket\n                          type: boolean\n                          example: false\n                        DefaultKMSMasterKey:\n                          description: Master Key of the SSE KMS Bucket\n                          type: string\n                          example: ''\n    ListBucketResult:\n      type: object\n      description: Bucket List Metadata\n      properties:\n        Delimiter:\n          description: Delimiter is a character used to group keys\n          type: string\n          example: ''\n        IsTruncated:\n          description: Flag to indicate whether all of the results that satisfied the search criteria is returned\n          type: boolean\n          example: false\n        Marker:\n          description: Indicates where in the bucket listing begins.\n          type: string\n          example: ''\n        NextMarker:\n          description: When response is truncated, key name is used in this field as marker in the subsequent request to get next set of objects.\n          type: string\n          example: ''\n        MaxKeys:\n          description: Maximum number of keys returned in the response body.\n          type: integer\n          example: 1000\n        Name:\n          description: Bucket Name\n          type: string\n          example: bucket001\n        Prefix:\n          description: Keys that begin with the indicated prefix\n          type: string\n          example: ''\n        Contents:\n          description: Metadata about each object returned\n          type: object\n          properties:\n            Key:\n              description: The name of the Object\n              type: string\n              example: SODA.PNG\n            LastModified:\n              description: The date the Object was Last Modified\n              type: string\n              example: '2020-04-29T14:11:47.000Z'\n            ETag:\n              description: The entity tag is an MD5 hash of the object. ETag reflects only changes to the contents of an object, not its metadata.\n              type: string\n              example: '\u0026#34;d97849a5d11d7f7f90e0c1609d091d0a\u0026#34;'\n            Size:\n              description: Size in bytes of the object\n              type: integer\n              example: 287206\n            Owner:\n              description: The owner of the object\n              type: object\n              properties:\n                ID:\n                  description: The ID of the owner.\n                  type: string\n                  example: '94b280022d0c4401bcf3b0ea85870519'\n                DisplayName:\n                  description: The display name of the owner.\n                  type: string\n                  example: '94b280022d0c4401bcf3b0ea85870519'\n            StorageClass:\n              description: The class of storage used to store the object\n              type: string\n              example: STANDARD\n            Tier:\n              description: The storageclass tier for which the object belongs to\n              type: integer\n              example: 1\n            Location:\n              description: The backend of object\n              type: string\n              example: backend001\n    ListStorageClasses:\n      type: array\n      xml:\n        wrapped: true\n      items:\n        xml:\n          name: Class\n        type: object\n        properties:\n          Name:\n            description: The storage class name, as default, it is compatible with aws s3.\n            type: string\n            enum: \u0026STORAGE_CLASSES\n              - STANDARD\n              - STANDARD_IA\n              - GLACIER\n            example: STANDARD\n          Tier:\n            description: The storage tier, used in Multi-Cloud. Each tier is mapped to a specific name.\n            type: integer\n            enum: \u0026STORAGE_TIERS\n              - 1\n              - 99\n              - 999\n            example: 1\n    FileShareResult:\n      type: object\n      description: FileShare Response\n      properties:\n        Id:\n          description: The fileshare ID, generated by server\n          type: string\n          example: '5ef1db51202b510001c3804c'\n        CreatedAt:\n          description: The time of creation of the fileshare.\n          type: string\n          example: '2020-06-23T16:07:05'\n        UpdatedAt:\n          description: The time at which the fileshare was updated.\n          type: string\n          example: '2020-06-23T16:07:05'\n        TenantId:\n          description: The tenant UUID in a multi-tenancy environment.\n          type: string\n          example: '94b280022d0c4401bcf3b0ea85870519'\n        UserId:\n          description: The user UUID in a multi-tenancy environment.\n          type: string\n          example: '5ea809d2553b0f000116be32'\n        BackendId:\n          description: The backend ID\n          type: string\n          example: '5ea809d2553b0f000116be32'\n        Backend:\n          description: The backend Name.\n          type: string\n          example: backend001\n        Name:\n          description: The fileshare name specified by user.\n          type: string\n          example: fileshare001\n        Description:\n          description: The fileshare description specified by user.\n          type: string\n          example: 'AWS FileShare'\n        Type:\n          description: The fileshare type.\n          type: string\n          example: generalPurpose\n        Size:\n          description: The fileshare size.\n          type: integer\n          example: 1073741824\n        Region:\n          description: The region for the fileshare.\n          type: string\n          example: ap-south-1\n        AvailabilityZone:\n          description: The availability zone for the fileshare.\n          type: string\n          example: ap-south-1a\n        Status:\n          description: The fileshare status.\n          type: string\n          enum: \u0026FS_STATUS\n            - available\n            - creating\n            - inUse\n            - error\n            - updating\n            - deleting\n            - errorDeleting\n            - deleted\n          example: available\n        Protocols:\n          description: The fileshare supported protocols.\n          type: string\n          enum:\n            - NFS\n            - SMB\n          example: *FILESHARE_PROTOCOL\n        Tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        SnapshotId:\n          description: The fileshare snapshot id.\n          type: string\n          example: '5eea749a926e5300011a69d6'\n        Encrypted:\n          description: Flag for encryted fileshare.\n          type: boolean\n          example: true\n        EncryptedSettings:\n          description: Encryted fileshare Keys.\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            KmsKeyId: 'arn:aws:kms:ap-south-1:676589967111:key/a6e1716e-0e90-407b-b494-b8ef8de91fc'\n        Metadata:\n          type: object\n          properties:\n            fields:\n              type: object\n              $ref: '#/components/schemas/Fields'\n    VolumeResult:\n      type: object\n      description: Volume Response\n      properties:\n        Id:\n          description: 'The volume ID, generated by server'\n          type: string\n          example: 5ef1db51202b510001c3804c\n        CreatedAt:\n          description: The time of creation of the volume.\n          type: string\n          example: '2020-06-23T16:07:05'\n        UpdatedAt:\n          description: The time at which the volume was updated.\n          type: string\n          example: '2020-06-23T16:07:05'\n        TenantId:\n          description: The tenant UUID in a multi-tenancy environment.\n          type: string\n          example: 94b280022d0c4401bcf3b0ea85870519\n        UserId:\n          description: The user UUID in a multi-tenancy environment.\n          type: string\n          example: 5ea809d2553b0f000116be32\n        BackendId:\n          description: The backend ID\n          type: string\n          example: 5ea809d2553b0f000116be32\n        Backend:\n          description: The backend Name.\n          type: string\n          example: backend001\n        Name:\n          description: The volume name specified by user.\n          type: string\n          example: volume001\n        Description:\n          description: The volume description specified by user.\n          type: string\n          example: AWS Volume\n        Type:\n          description: The volume type.\n          type: string\n          example: gp2\n        Size:\n          description: The volume size.\n          type: integer\n          example: 1073741824\n        Region:\n          description: The region for the volume.\n          type: string\n          example: ap-south-1\n        AvailabilityZone:\n          description: The availability zone for the volume.\n          type: string\n          example: ap-south-1a\n        Status:\n          description: The volume status.\n          type: string\n          enum:\n            - available\n            - creating\n            - inUse\n            - error\n            - updating\n            - deleting\n            - errorDeleting\n            - deleted\n          example: available\n        Tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tag'\n        SnapshotId:\n          description: The volume snapshot id.\n          type: string\n          example: 5eea749a926e5300011a69d6\n        Encrypted:\n          description: Flag for encryted volume.\n          type: boolean\n          example: true\n        EncryptedSettings:\n          description: Encryted volume Keys.\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            KmsKeyId: 'arn:aws:kms:ap-south-1:676589967111:key/a6e1716e-0e90-407b-b494-b8ef8de91fc'\n        Metadata:\n          type: object\n          properties:\n            fields:\n              type: object\n              $ref: '#/components/schemas/VolumeFields'\n    RestoreObject:\n      type: object\n      description: Restore object request\n      properties:\n        tier:\n          type: string\n          description: the retrieval option when restoring an archived object. This is cloud vendor specific.\n          example: Expedited\n        days:\n          type: integer\n          description: The Days element is required for regular restore. Required for restoring archived object.\n          example: 1\n  requestBodies:\n    AKSK:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AKSK'\n      description: AKSK Creation payload.\n      required: true\n    Backend:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Backend_Request'\n      description: Cloud Backend configurations\n      required: true\n    Plan:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Plan'\n      description: Plan configurations\n      required: true\n    Policy:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Policy'\n      description: Policy configurations\n      required: true\n    FileShare:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FileShare'\n      description: Cloud FileShare configurations\n      required: true\n    FileShareUpdate:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FileShareUpdate'\n      description: Cloud FileShare Update configurations\n      required: true\n    Volume:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Volume'\n      description: Cloud volume configurations\n      required: true\n    VolumeUpdate:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VolumeUpdate'\n      description: Cloud Volume Update configurations\n      required: true\n    Tier:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TierRequest'\n      description: Storage Service Plan configurations\n      required: true\n    TierUpdate:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TierUpdate'\n      description: Storage Service Plan Update configurations\n      required: true\n",
			"canonicalURL": "/github.com/sodafoundation/multi-cloud@b1c13d8351de917a058eff245ab6191069acb9b2/-/blob/openapi-spec/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sodafoundation/multi-cloud/blob/b1c13d8351de917a058eff245ab6191069acb9b2/openapi-spec/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/{bucketName}/{Object}\": get: operation \"backupGet\": at 1:62257: parse path \"/{bucketName}/{Object}\": path parameter not specified: \"Object\""
}