{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/pan.dev"
		},
		"file": {
			"name": "DeviceConfiguration.yaml",
			"size": 0,
			"path": "static/sase/spec/sdwan/unified/DeviceConfiguration.yaml",
			"byteSize": 502972,
			"content": "components:\n  schemas:\n    APNConfig:\n      properties:\n        apn: {description: 'Apn: Size(max = 100, error = CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PROFILE_NAME_INVALID:\n            Invalid cellular interface config. APN name is invalid. APN name allowed\n            max length is 100. Valid characters are alphanumeric, hyphen (-), and\n            period (.). Must begin and end with an alphanumeric character., min =\n            0) ', type: string}\n        authentication:\n          description: 'Authentication: ValidateEnum(enumClass = classOf[APNAuthentication],\n            message = INVALID_APN_AUTHENTICATION, nullAllowed = false) '\n          enum: [none, pap, chap, pap_or_chap]\n          type: string\n        clear_password: {description: Clear Password, type: boolean}\n        password: {description: Password, type: string}\n        password_encrypted: {description: 'Password Encrypted: JsonIgnore(value =\n            true) ', type: string}\n        user_name: {description: 'User Name: Size(max = 100, error = CELLULAR_INTERFACE_CONFIG_APN_CONFIG_USERNAME_INVALID:\n            Invalid cellular interface config. APN username is invalid. APN username\n            allowed max length is 100., min = 0) ', type: string}\n      required: [authentication]\n    APNInfo:\n      properties:\n        apn: {description: Apn, type: string}\n        authentication: {description: Authentication, type: string}\n    Aggregate:\n      properties:\n        field: {description: Field, type: string}\n        operator:\n          description: Operator\n          enum: [max, count, min, avg, sum]\n          type: string\n    ApplicationProbe:\n      properties:\n        description: {description: 'Description: Size(max = 256, APPLICATION_PROBE_CONFIG_DESCRIPTION_INVALID,\n            min = 0) ', type: string}\n        enable_probe: {description: Enable Probe, type: boolean}\n        id: {description: Id, type: string}\n        name: {description: 'Name: NotEmpty(APPLICATION_PROBE_CONFIG_NAME_REQD) Size(max\n            = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource exceeds limit.,\n            min = 0) ', type: string}\n        source_interface_id: {description: Source Interface Id, type: string}\n        tags:\n          description: Tags\n          items: {description: Tags, type: string}\n          type: array\n      required: [name]\n    ApplicationProbeScreen:\n      properties:\n        description: {description: 'Description: Size(max = 256, APPLICATION_PROBE_CONFIG_DESCRIPTION_INVALID,\n            min = 0) ', type: string}\n        enable_probe: {description: Enable Probe, type: boolean}\n        id: {description: Id, type: string}\n        name: {description: 'Name: NotEmpty(APPLICATION_PROBE_CONFIG_NAME_REQD) Size(max\n            = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource exceeds limit.,\n            min = 0) ', type: string}\n        source_interface_id: {description: Source Interface Id, type: string}\n        tags:\n          description: Tags\n          items: {description: Tags, type: string}\n          type: array\n      required: [name]\n    BaseEventState:\n      properties:\n        event_code: {description: Event Code, type: string}\n        event_id: {description: Event Id, type: string}\n        id: {description: Id, type: string}\n        priority: {description: Priority, format: int32, type: integer}\n        standing: {description: Standing, type: boolean}\n        suppressed: {description: Suppressed, type: boolean}\n        suppressed_info: {$ref: '#/components/schemas/SuppressedInfo', description: Suppressed\n            Info}\n        timestamp: {description: Timestamp, format: int64, type: integer}\n    BaseQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    BulkResponse:\n      properties:\n        count: {format: int32, type: integer}\n        id: {type: string}\n        type: {type: string}\n    BypassInfo:\n      properties:\n        lan: {description: Lan, type: string}\n        lan_interface_id: {description: Lan Interface Id, type: string}\n        wan: {description: Wan, type: string}\n        wan_interface_id: {description: Wan Interface Id, type: string}\n    BypassPair:\n      properties:\n        lan: {description: Lan, type: string}\n        use_relay: {description: Use Relay, type: boolean}\n        wan: {description: Wan, type: string}\n    BypassPairV2:\n      properties:\n        lan: {description: Lan, type: string}\n        lan_state_propagation: {description: Lan State Propagation, type: boolean}\n        use_relay: {description: Use Relay, type: boolean}\n        wan: {description: Wan, type: string}\n    CAStoreOperation:\n      enum: [update_castore]\n      type: string\n    CellularConfig:\n      properties:\n        apn_config: {$ref: '#/components/schemas/APNConfig', description: Apn Config}\n        apn_etag: {description: 'Apn Etag: JsonIgnore(value = true) ', format: int64,\n          type: integer}\n        apnprofile_id: {description: Apnprofile Id, type: string}\n        auto_apn: {description: Auto Apn, type: boolean}\n        parent_module_id: {description: Parent Module Id, type: string}\n        parent_sim_slot_number: {description: Parent Sim Slot Number, format: int32,\n          type: integer}\n    CellularState:\n      properties:\n        active: {description: Active, type: boolean}\n        apn_info: {$ref: '#/components/schemas/APNInfo', description: Apn Info}\n    DHCPRelay:\n      properties:\n        enabled: {description: Enabled, type: boolean}\n        option_82: {$ref: '#/components/schemas/DHCPRelayOption82', description: 'Option_82:\n            Valid '}\n        server_ips:\n          description: 'Server Ips: ListIPAddress(bcast = DENY, listMaxSize = 0, error\n            = INTERFACE_CONFIG_INVALID_DHCP_RELAY_LIST: DHCP Servers IP specified\n            in the list are invalid, required = true, type = IP) Size(max = 16, error\n            = INTERFACE_CONFIG_DHCP_RELAY_LIST_EXCEEDS_LIMIT: DHCP Servers specified\n            in the list exceeds maximum limit, min = 0) '\n          items: {description: Server Ips, type: string}\n          type: array\n        source_interface: {description: Source Interface, type: string}\n    DHCPRelayOption82:\n      properties:\n        circuit_id: {description: 'Circuit Id: Size(max = 255, error = DHCPRELAY_CIRCUIT_ID_EXCEEDS_LIMIT:\n            Option 82 Circuid ID exceeds maximum length, min = 0) ', type: string}\n        enabled: {description: Enabled, type: boolean}\n        reforwarding_policy:\n          description: 'Reforwarding Policy: ValidateEnum(enumClass = classOf[DHCPRelayReforwardingPolicy],\n            error = INVALID_DHCP_RELAY_REFWDING_POLICY: Option 82 invalid reforwarding\n            policy, nullAllowed = false) '\n          enum: [REPLACE, KEEP, APPEND, DROP]\n          type: string\n        remote_id: {description: 'Remote Id: Size(max = 255, error = DHCPRELAY_REMOTE_ID_EXCEEDS_LIMIT:\n            Option 82 Remote ID exceeds maximum length, min = 0) ', type: string}\n      required: [reforwarding_policy]\n    DNS:\n      properties:\n        name_servers:\n          description: Name Servers\n          items: {description: Name Servers, type: string}\n          type: array\n        search:\n          description: Search\n          items: {description: Search, type: string}\n          type: array\n    DiskPartitionStatus:\n      properties:\n        encryption_status:\n          description: 'Encryption Status: ValidateEnum(enumClass = classOf[EncryptionStatus],\n            message = PARTITION_STATE_INVALID_ENCRYPTION_STATE, nullAllowed = true) '\n          enum: ['ON', 'OFF']\n          type: string\n        mount_point: {description: 'Mount Point: Size(max = 128, message = PARTITION_STATE_INVALID_MOUNT_POINT,\n            min = 0) ', type: string}\n        size: {description: 'Size: Min(message = PARTITION_STATE_INVALID_SIZE, value\n            = 0L) ', format: int64, type: integer}\n    Element:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n      required: [site_id]\n    ElementAggregateQueryFilterV2N5:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        admin_renew_state:\n          description: Admin Renew State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        admin_suspend_state:\n          description: Admin Suspend State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        aggregated_value: {description: Aggregated Value, format: int64, type: integer}\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        fips_mode:\n          description: Fips Mode\n          enum: [none, fips, non_fips]\n          type: string\n        fips_mode_change_start_time: {description: Fips Mode Change Start Time, format: int64,\n          type: integer}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV2', description: 'Spoke\n            Ha Config: Valid '}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementImageStatus:\n      properties:\n        active_image_id: {description: Active Image Id, type: string}\n        failure_info: {description: Failure Info, type: string}\n        id: {description: Id, type: string}\n        previous_image_id: {description: Previous Image Id, type: string}\n        upgrade_image_id: {description: Upgrade Image Id, type: string}\n        upgrade_state:\n          description: Upgrade State\n          enum: [pending, init, discovery, download, download_init, download_complete,\n            download_scheduled, download_abort, download_cancelled, download_cancel_pending,\n            upgrade, upgrade_init, upgrade_complete, upgrade_scheduled, upgrade_abort,\n            upgrade_cancelled, upgrade_cancel_pending, upgrade_failed, upgrading,\n            verify, in-progress, install, complete, done, failed, download_discovery,\n            download_failed, downloading, install_failed, installing, verifying, waiting_download_time,\n            waiting_install_time, abort_upgrade_pending, abort_download_pending, invalid]\n          type: string\n    ElementImageStatusQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    ElementImageStatusQueryFilterV2N1:\n      properties:\n        active_image_id: {description: Active Image Id, type: string}\n        active_version: {description: Active Version, type: string}\n        download_interval: {description: Download Interval, type: integer}\n        download_percent: {description: Download Percent, type: integer}\n        element_id: {description: Element Id, type: string}\n        failure_info: {description: Failure Info, type: string}\n        id: {description: Id, type: string}\n        previous_image_id: {description: Previous Image Id, type: string}\n        rollback_version: {description: Rollback Version, type: string}\n        scheduled_download: {description: Scheduled Download, type: string}\n        scheduled_upgrade: {description: Scheduled Upgrade, type: string}\n        upgrade_image_id: {description: Upgrade Image Id, type: string}\n        upgrade_interval: {description: Upgrade Interval, type: integer}\n        upgrade_state:\n          description: Upgrade State\n          enum: [pending, init, discovery, download, download_init, download_complete,\n            download_scheduled, download_abort, download_cancelled, download_cancel_pending,\n            upgrade, upgrade_init, upgrade_complete, upgrade_scheduled, upgrade_abort,\n            upgrade_cancelled, upgrade_cancel_pending, upgrade_failed, upgrading,\n            verify, in-progress, install, complete, done, failed, download_discovery,\n            download_failed, downloading, install_failed, installing, verifying, waiting_download_time,\n            waiting_install_time, abort_upgrade_pending, abort_download_pending, invalid]\n          type: string\n    ElementImageStatusV2N1:\n      properties:\n        active_image_id: {description: Active Image Id, type: string}\n        active_version: {description: Active Version, type: string}\n        download_interval: {description: Download Interval, type: integer}\n        download_percent: {description: Download Percent, type: integer}\n        failure_info: {description: Failure Info, type: string}\n        id: {description: Id, type: string}\n        previous_image_id: {description: Previous Image Id, type: string}\n        rollback_version: {description: Rollback Version, type: string}\n        scheduled_download: {description: Scheduled Download, type: string}\n        scheduled_upgrade: {description: Scheduled Upgrade, type: string}\n        upgrade_image_id: {description: Upgrade Image Id, type: string}\n        upgrade_interval: {description: Upgrade Interval, type: integer}\n        upgrade_state:\n          description: Upgrade State\n          enum: [pending, init, discovery, download, download_init, download_complete,\n            download_scheduled, download_abort, download_cancelled, download_cancel_pending,\n            upgrade, upgrade_init, upgrade_complete, upgrade_scheduled, upgrade_abort,\n            upgrade_cancelled, upgrade_cancel_pending, upgrade_failed, upgrading,\n            verify, in-progress, install, complete, done, failed, download_discovery,\n            download_failed, downloading, install_failed, installing, verifying, waiting_download_time,\n            waiting_install_time, abort_upgrade_pending, abort_download_pending, invalid]\n          type: string\n    ElementOperations:\n      properties:\n        action: {description: Action, type: string}\n        id: {description: Id, type: string}\n        parameters:\n          description: Parameters\n          items: {description: Parameters, type: string}\n          type: array\n    ElementQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    ElementQueryFilter:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        events:\n          description: Events\n          items: {$ref: '#/components/schemas/BaseEventState'}\n          type: array\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        role:\n          description: Role\n          enum: [PA_WE_DC, PA_WE_BR, NONE, SPOKE, HUB]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_cluster_status:\n          description: Spoke Cluster Status\n          enum: [init, active, backup, unknown]\n          type: string\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n      required: [site_id]\n    ElementQueryFilterV2N1:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n      required: [site_id]\n    ElementQueryFilterV2N2:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV1', description: 'Spoke\n            Ha Config: Valid '}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [site_id]\n    ElementQueryFilterV2N3:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        admin_renew_state:\n          description: Admin Renew State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV1', description: 'Spoke\n            Ha Config: Valid '}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementQueryFilterV2N4:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        admin_renew_state:\n          description: Admin Renew State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV2', description: 'Spoke\n            Ha Config: Valid '}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementQueryFilterV2N5:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        admin_renew_state:\n          description: Admin Renew State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        admin_suspend_state:\n          description: Admin Suspend State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        fips_mode:\n          description: Fips Mode\n          enum: [none, fips, non_fips]\n          type: string\n        fips_mode_change_start_time: {description: Fips Mode Change Start Time, format: int64,\n          type: integer}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV2', description: 'Spoke\n            Ha Config: Valid '}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementScreen:\n      properties:\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        sw_obj: {$ref: '#/components/schemas/Software', description: Sw Obj}\n      required: [site_id]\n    ElementScreenV2N1:\n      properties:\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        sw_obj: {$ref: '#/components/schemas/Software', description: Sw Obj}\n      required: [site_id]\n    ElementScreenV2N2:\n      properties:\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV1', description: 'Spoke\n            Ha Config: Valid '}\n        sw_obj: {$ref: '#/components/schemas/Software', description: Sw Obj}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [site_id]\n    ElementScreenV2N3:\n      properties:\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV1', description: 'Spoke\n            Ha Config: Valid '}\n        sw_obj: {$ref: '#/components/schemas/Software', description: Sw Obj}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementScreenV2N4:\n      properties:\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV2', description: 'Spoke\n            Ha Config: Valid '}\n        sw_obj: {$ref: '#/components/schemas/Software', description: Sw Obj}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementScreenV2N5:\n      properties:\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV2', description: 'Spoke\n            Ha Config: Valid '}\n        sw_obj: {$ref: '#/components/schemas/Software', description: Sw Obj}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementSoftwareState:\n      properties:\n        download_interval: {description: 'Download Interval: Range(max = 59L, error\n            = SOFTWARE_CONFIG_INVALID_DOWNLOAD_INTERVAL: Valid download interval shoule\n            be provided along with a valid download time., min = 0L) ', type: integer}\n        id: {description: Id, type: string}\n        image_id: {description: 'Image Id: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_IMAGE,\n            regexp = ^[0-9]{1,30}$) ', type: string}\n        interface_ids:\n          description: 'Interface Ids: ListString(allowDuplicate = false, allowEmpty\n            = true, allowNull = true, length = 0, listMaxSize = 4, message = {SOFTWARE_CONFIG_INVALID_INTERFACE_LIST,\n            noTrim = false, regex = , required = false) '\n          items: {description: Interface Ids, type: string}\n          type: array\n        scheduled_download: {description: 'Scheduled Download: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_TIME,\n            regexp = ^(0?[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(201?[8-9]|20?[2-5][0-9])\\\\s+([0-1][0-9]|2?[0-3])\\\\:([0-5][0-9])\\\\:([0-5][0-9])$) ',\n          type: string}\n        scheduled_upgrade: {description: 'Scheduled Upgrade: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_TIME,\n            regexp = ^(0?[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(201?[8-9]|20?[2-5][0-9])\\\\s+([0-1][0-9]|2?[0-3])\\\\:([0-5][0-9])\\\\:([0-5][0-9])$) ',\n          type: string}\n        upgrade_interval: {description: 'Upgrade Interval: Range(max = 59L, error\n            = SOFTWARE_CONFIG_INVALID_UPGRADE_INTERVAL: Valid upgrade interval shoule\n            be provided along with a valid upgrade time., min = 0L) ', type: integer}\n    ElementSoftwareStateScreen:\n      properties:\n        download_interval: {description: 'Download Interval: Range(max = 59L, error\n            = SOFTWARE_CONFIG_INVALID_DOWNLOAD_INTERVAL: Valid download interval shoule\n            be provided along with a valid download time., min = 0L) ', type: integer}\n        id: {description: Id, type: string}\n        image_id: {description: 'Image Id: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_IMAGE,\n            regexp = ^[0-9]{1,30}$) ', type: string}\n        interface_ids:\n          description: 'Interface Ids: ListString(allowDuplicate = false, allowEmpty\n            = true, allowNull = true, length = 0, listMaxSize = 4, message = {SOFTWARE_CONFIG_INVALID_INTERFACE_LIST,\n            noTrim = false, regex = , required = false) '\n          items: {description: Interface Ids, type: string}\n          type: array\n        scheduled_download: {description: 'Scheduled Download: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_TIME,\n            regexp = ^(0?[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(201?[8-9]|20?[2-5][0-9])\\\\s+([0-1][0-9]|2?[0-3])\\\\:([0-5][0-9])\\\\:([0-5][0-9])$) ',\n          type: string}\n        scheduled_upgrade: {description: 'Scheduled Upgrade: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_TIME,\n            regexp = ^(0?[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(201?[8-9]|20?[2-5][0-9])\\\\s+([0-1][0-9]|2?[0-3])\\\\:([0-5][0-9])\\\\:([0-5][0-9])$) ',\n          type: string}\n        upgrade_interval: {description: 'Upgrade Interval: Range(max = 59L, error\n            = SOFTWARE_CONFIG_INVALID_UPGRADE_INTERVAL: Valid upgrade interval shoule\n            be provided along with a valid upgrade time., min = 0L) ', type: integer}\n    ElementState:\n      properties:\n        id: {description: Id, type: string}\n        image_id: {description: 'Image Id: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_IMAGE,\n            regexp = ^[0-9]{1,30}$) ', type: string}\n        scheduled_upgrade: {description: Scheduled Upgrade, type: string}\n    ElementStateQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    ElementStateQueryFilter:\n      properties:\n        id: {description: Id, type: string}\n        image_id: {description: 'Image Id: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_IMAGE,\n            regexp = ^[0-9]{1,30}$) ', type: string}\n        scheduled_download: {description: Scheduled Download, type: string}\n        scheduled_upgrade: {description: Scheduled Upgrade, type: string}\n    ElementStateScreen:\n      properties:\n        id: {description: Id, type: string}\n        image_id: {description: 'Image Id: Pattern(message = ELEMENT_STATE_UPDATE_INVALID_IMAGE,\n            regexp = ^[0-9]{1,30}$) ', type: string}\n        scheduled_upgrade: {description: Scheduled Upgrade, type: string}\n    ElementStatus:\n      properties:\n        analytics_backlog_connected: {description: Analytics Backlog Connected, type: boolean}\n        analytics_backlog_connected_on_utc: {description: Analytics Backlog Connected\n            On Utc, format: int64, type: integer}\n        analytics_backlog_disconnected_on_utc: {description: Analytics Backlog Disconnected\n            On Utc, format: int64, type: integer}\n        analytics_backlog_from: {description: Analytics Backlog From, type: string}\n        analytics_live_connected: {description: Analytics Live Connected, type: boolean}\n        analytics_live_connected_on_utc: {description: Analytics Live Connected On\n            Utc, format: int64, type: integer}\n        analytics_live_disconnected_on_utc: {description: Analytics Live Disconnected\n            On Utc, format: int64, type: integer}\n        analytics_live_from: {description: Analytics Live From, type: string}\n        config_and_events_connected: {description: Config And Events Connected, type: boolean}\n        config_and_events_connected_on_utc: {description: Config And Events Connected\n            On Utc, format: int64, type: integer}\n        config_and_events_disconnected_on_utc: {description: Config And Events Disconnected\n            On Utc, format: int64, type: integer}\n        config_and_events_from: {description: Config And Events From, type: string}\n        element_id: {description: Element Id, type: string}\n        flows_backlog_connected: {description: Flows Backlog Connected, type: boolean}\n        flows_backlog_connected_on_utc: {description: Flows Backlog Connected On Utc,\n          format: int64, type: integer}\n        flows_backlog_disconnected_on_utc: {description: Flows Backlog Disconnected\n            On Utc, format: int64, type: integer}\n        flows_backlog_from: {description: Flows Backlog From, type: string}\n        flows_live_connected: {description: Flows Live Connected, type: boolean}\n        flows_live_connected_on_utc: {description: Flows Live Connected On Utc, format: int64,\n          type: integer}\n        flows_live_disconnected_on_utc: {description: Flows Live Disconnected On Utc,\n          format: int64, type: integer}\n        flows_live_from: {description: Flows Live From, type: string}\n        id: {description: Id, type: string}\n        logs_backlog_connected: {description: Logs Backlog Connected, type: boolean}\n        logs_backlog_connected_on_utc: {description: Logs Backlog Connected On Utc,\n          format: int64, type: integer}\n        logs_backlog_disconnected_on_utc: {description: Logs Backlog Disconnected\n            On Utc, format: int64, type: integer}\n        logs_backlog_from: {description: Logs Backlog From, type: string}\n        logs_live_connected: {description: Logs Live Connected, type: boolean}\n        logs_live_connected_on_utc: {description: Logs Live Connected On Utc, format: int64,\n          type: integer}\n        logs_live_disconnected_on_utc: {description: Logs Live Disconnected On Utc,\n          format: int64, type: integer}\n        logs_live_from: {description: Logs Live From, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n      required: [site_id]\n    ElementStatusQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    ElementV2N1:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n      required: [site_id]\n    ElementV2N2:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: Description, type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: Name, type: string}\n        network_policysetstack_id: {description: Network Policysetstack Id, type: string}\n        priority_policysetstack_id: {description: Priority Policysetstack Id, type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: Site Id, type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV1', description: Spoke\n            Ha Config}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: Tags\n          items: {description: Tags, type: string}\n          type: array\n    ElementV2N3:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        admin_renew_state:\n          description: Admin Renew State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV1', description: 'Spoke\n            Ha Config: Valid '}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementV2N4:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        admin_renew_state:\n          description: Admin Renew State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV2', description: 'Spoke\n            Ha Config: Valid '}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    ElementV2N5:\n      properties:\n        admin_action:\n          description: Admin Action\n          enum: [ALLOCATE, CLAIM, BOUND, UNBOUND, DECLAIM, RETURN, REVOKE, RETIRE,\n            STOCK, UPGRADE, REMANUFACTURE, DEFAULT, INVALID]\n          type: string\n        admin_renew_state:\n          description: Admin Renew State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        admin_suspend_state:\n          description: Admin Suspend State\n          enum: [SLEEP, INIT, ACTIVE, ACTIVE_ASSIGNED_DEFAULT, ACTIVE_ASSIGNED_TENANT,\n            ACTIVE_TRUSTED, ACTIVE_NOCERT, ACTIVE_CLAIMED, ACTIVE_MIC, ACTIVE_MIC_PENDING,\n            ACTIVE_MIC_ISSUED, ACTIVE_MIC_FAILED, ACTIVE_CIC, ACTIVE_CIC_SITE, ACTIVE_CIC_PENDING,\n            ACTIVE_CIC_ISSUED, ACTIVE_CIC_FAILED, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_GET_PENDING,\n            ACTIVE_INVENTORY_POST_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_GET_FAILED,\n            ACTIVE_INVENTORY_OPERATION_FAILED, ACTIVE_INTF_CONFIG_GET_PENDING, ACTIVE_INTF_CONFIG_GET_COMPLETE,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_PENDING, ACTIVE_INTF_STATE_GET_COMPLETE,\n            ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_BOUND_TO_SITE_PENDING, ACTIVE_BOUND_TO_SITE,\n            ACTIVE_BOUND_TO_SITE_FAILED, ACTIVE_READY, ACTIVE_RENEW_PENDING, ACTIVE_RENEWED,\n            ACTIVE_DECLAIM_IN_PROGRESS, ACTIVE_DECLAIMED, ACTIVE_UNBOUND_FROM_SITE,\n            ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED, ACTIVE_CIC_CERTIFICATE_CHECK,\n            ACTIVE_MONITORING, ACTIVE_CONNECTED, ACTIVE_24_HOURS_LESS, ACTIVE_24_HOURS_MORE,\n            ACTIVE_TROUBLESHOOT, ACTIVE_SUSPEND_INIT, ACTIVE_SUSPEND_IN_PROGRESS,\n            ACTIVE_SUSPENDED, ACTIVE_SUSPEND_FAILED, ACTIVE_SUSPEND_FAILED_TIMEOUT,\n            ACTIVE_SUSPENDED_MIC_OPERATIONAL, ACTIVE_SUSPENDED_CIC_OPERATIONAL, ACTIVE_SUSPENDED_EMPTY_TOKEN,\n            ACTIVE_SUSPENDED_TOKEN_EXPIRED, INACTIVE_NOCERT, INACTIVE_MIC, INACTIVE_CIC,\n            INACTIVE_CIC_SITE, RETURNED, STANDBY, OOS_AT_READY, OOS_AT_INIT, OOS_AT_BIND_PENDING,\n            OOS_AT_BIND, OOS_AT_BIND_FAILED, OOS_AT_UNBIND_FAILED, OOS_AT_UNBIND_PROGRESS,\n            DECOMMISSION]\n          type: string\n        allowed_roles:\n          description: Allowed Roles\n          items:\n            description: Allowed Roles\n            enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n            type: string\n          type: array\n        cluster_insertion_mode: {description: Cluster Insertion Mode, type: string}\n        cluster_member_id: {description: Cluster Member Id, type: string}\n        connected: {description: Connected, type: boolean}\n        deployment_op:\n          description: Deployment Op\n          enum: [DECLAIM, UPGRADE, ABORT_UPGRADE, DEFAULT, INVALID, REBIND, READY,\n            IN_SERVICE, REUNBIND, RENEW_CIC, ABORT_CELLULARMODULE_FIRMWARE_UPGRADE,\n            FIPS_AUTO, NON_FIPS_AUTO, FIPS_MANUAL, NON_FIPS_MANUAL]\n          type: string\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        fips_mode:\n          description: Fips Mode\n          enum: [none, fips, non_fips]\n          type: string\n        fips_mode_change_start_time: {description: Fips Mode Change Start Time, format: int64,\n          type: integer}\n        hw_id: {description: Hw Id, type: string}\n        id: {description: Id, type: string}\n        l3_direct_private_wan_forwarding: {description: L3 Direct Private Wan Forwarding,\n          type: boolean}\n        l3_lan_forwarding: {description: L3 Lan Forwarding, type: boolean}\n        model_name: {description: Model Name, type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_policysetstack_id: {description: 'Nat Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NAT_POLICYSETSTACK_ID: Invalid nat\n            policy set stack id.) ', type: string}\n        network_policysetstack_id: {description: 'Network Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_NETWORK_POLICYSETSTACK_ID: Invalid\n            network policy set stack id) ', type: string}\n        priority_policysetstack_id: {description: 'Priority Policysetstack Id: Digits(fraction\n            = 0, integer = 20, error = INVALID_PRIORITY_POLICYSETSTACK_ID: Invalid\n            priority policy set stack id) ', type: string}\n        role:\n          description: Role\n          enum: [NONE, HUB, SPOKE, PA_WE_BR, PA_WE_DC]\n          type: string\n        serial_number: {description: Serial Number, type: string}\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        software_version: {description: Software Version, type: string}\n        spoke_ha_config: {$ref: '#/components/schemas/SpokeHAConfigV2', description: 'Spoke\n            Ha Config: Valid '}\n        state:\n          description: State\n          enum: [ACTIVE_INIT, ACTIVE_INVENTORY_IN_PROGRESS, ACTIVE_INVENTORY_OPERATION_FAILED,\n            ACTIVE_INVENTORY_GET_PENDING, ACTIVE_INVENTORY_GET_COMPLETE, ACTIVE_INVENTORY_POST_PENDING,\n            ACTIVE_INTF_CONFIG_GET_FAILED, ACTIVE_INTF_STATE_GET_FAILED, ACTIVE_READY,\n            ACTIVE_BOUND_IN_PROGRESS, ACTIVE_UNBOUND_IN_PROGRESS, ACTIVE_UNBOUND_FROM_SITE_FAILED,\n            ACTIVE_BOUND_TO_SITE, ACTIVE_BOUND_TO_SITE_FAILED, OOS, ACTIVE_DECLAIM_IN_PROGRESS]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpn_to_vpn_forwarding: {description: Vpn To Vpn Forwarding, type: boolean}\n      required: [site_id]\n    Error:\n      properties:\n        _error:\n          items: {$ref: '#/components/schemas/ErrorResponse'}\n          type: array\n    ErrorResponse:\n      properties:\n        code: {type: string}\n        message: {type: string}\n    EthernetPort:\n      properties:\n        full_duplex: {description: Full Duplex, type: boolean}\n        speed: {description: Speed, format: int32, type: integer}\n    Extension:\n      properties:\n        conf: {type: object}\n        disabled: {description: Disabled, type: boolean}\n        entity_id: {description: 'Entity Id: Pattern(error = INVALID_ENTITY_ID: Invalid\n            entity id. Only numbers are allowed., regexp = [0-9]+$) ', type: string}\n        id: {description: Id, type: string}\n        name: {description: 'Name: NotEmpty(error = EXTENSION_NAME_REQD: Provide valid\n            {} attribute) Size(max = 128, error = INVALID_EXTENSION_NAME: Provide\n            valid {} attribute. Invalid value {}, min = 0) ', type: string}\n        namespace: {description: 'Namespace: NotEmpty(error = EXTENSION_NAMESPACE_REQD:\n            Provide valid {} attribute) Pattern(error = INVALID_EXTENSION_NAMESPACE:\n            Provide valid {} attribute. Invalid value {}, regexp = ^[a-z][a-z0-9/]*[a-z0-9]+$) ',\n          type: string}\n      required: [conf, namespace, name]\n    ExtensionQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    ExtensionQueryFilter:\n      properties:\n        conf: {type: object}\n        disabled: {description: Disabled, type: boolean}\n        id: {description: Id, type: string}\n        name: {description: 'Name: NotEmpty(error = EXTENSION_NAME_REQD: Provide valid\n            {} attribute) Size(max = 128, error = INVALID_EXTENSION_NAME: Provide\n            valid {} attribute. Invalid value {}, min = 0) ', type: string}\n        namespace: {description: 'Namespace: NotEmpty(error = EXTENSION_NAMESPACE_REQD:\n            Provide valid {} attribute) Pattern(error = INVALID_EXTENSION_NAMESPACE:\n            Provide valid {} attribute. Invalid value {}, regexp = ^[a-z][a-z0-9/]*[a-z0-9]+$) ',\n          type: string}\n      required: [conf, namespace, name]\n    ExtensionScreen:\n      properties:\n        conf: {type: object}\n        disabled: {description: Disabled, type: boolean}\n        entity_id: {description: 'Entity Id: Pattern(error = INVALID_ENTITY_ID: Invalid\n            entity id. Only numbers are allowed., regexp = [0-9]+$) ', type: string}\n        id: {description: Id, type: string}\n        name: {description: 'Name: NotEmpty(EXTENSION_NAME_REQD) Size(max = 128, error\n            = INVALID_EXTENSION_NAME: Invalid Extension name., min = 0) ', type: string}\n        namespace: {description: 'Namespace: NotEmpty(EXTENSION_NAMESPACE_REQD) Pattern(error\n            = INVALID_EXTENSION_NAMESPACE: Invalid Namespace. Allowed characters are\n            a-z0-9/ and it should start with alphabet., regexp = ^[a-z][a-z0-9/]*[a-z0-9]+$) ',\n          type: string}\n      required: [conf, namespace, name]\n    GREConfig:\n      properties:\n        csum: {description: Csum, type: boolean}\n        keepalive_enable: {description: Keepalive Enable, type: boolean}\n        keepalive_fail_count: {description: 'Keepalive Fail Count: Range(max = 10L,\n            error = INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT:\n            Keep alive fail count should be in range 1 to 10, min = 1L) ', format: int32,\n          type: integer}\n        keepalive_interval: {description: 'Keepalive Interval: Range(max = 30L, error\n            = INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL: Keep alive\n            interval should be in range 3 to 30, min = 3L) ', format: int32, type: integer}\n    HardwareBypass:\n      properties:\n        element_bypass:\n          description: Element Bypass\n          items: {$ref: '#/components/schemas/BypassInfo'}\n          type: array\n        id: {description: Id, type: string}\n    IKEV1Params:\n      properties:\n        xauth_id: {description: Xauth Id, type: string}\n        xauth_secret: {description: 'Xauth Secret: Length(max = 128, error = IPSECCONFIG_INVALID_XAUTH_SECRET_LEN:\n            Invalid extended authentication secret length.Should be between 4-128.,\n            min = 4) ', type: string}\n        xauth_secret_encrypted: {description: 'Xauth Secret Encrypted: JsonIgnore(value\n            = true) ', type: string}\n        xauth_secret_hash: {description: 'Xauth Secret Hash: JsonIgnore(value = true) ',\n          type: string}\n        xauth_type:\n          description: 'Xauth Type: ValidateEnum(enumClass = classOf[IKEXAuthType],\n            error = IPSECCONFIG_INVALID_XAUTH_TYPE: Invalid extended authentication\n            type specified.Valid type are secret or none., nullAllowed = false) '\n          enum: [NONE, SECRET]\n          type: string\n      required: [xauth_type]\n    IPSECAuthentication:\n      properties:\n        certificate: {description: Certificate, type: string}\n        ikev1_params: {$ref: '#/components/schemas/IKEV1Params', description: 'Ikev1\n            Params: Valid '}\n        local_ca_certificate: {description: Local Ca Certificate, type: string}\n        local_id:\n          description: 'Local Id: ValidateEnum(enumClass = classOf[IPSECLocalIdType],\n            error = IPSECCONFIG_INVALID_LOCAL_ID_TYPE: Invalid local id type.Should\n            be either hostname, dn, local_ip or custom, nullAllowed = false) '\n          enum: [LOCAL_IP, DN, HOSTNAME, CUSTOM]\n          type: string\n        local_id_custom: {description: 'Local Id Custom: Length(max = 255, error =\n            IPSECCONFIG_INVALID_LOCAL_ID_LEN: Invalid local id len.Should be between\n            2-255., min = 2) ', type: string}\n        passphrase: {description: Passphrase, type: string}\n        passphrase_encrypted: {description: 'Passphrase Encrypted: JsonIgnore(value\n            = true) ', type: string}\n        private_key: {description: Private Key, type: string}\n        private_key_encrypted: {description: 'Private Key Encrypted: JsonIgnore(value\n            = true) ', type: string}\n        remote_ca_certificate: {description: Remote Ca Certificate, type: string}\n        remote_id: {description: 'Remote Id: Length(max = 255, error = IPSECCONFIG_INVALID_REMOTE_ID_LEN:\n            Invalid remote id len.Should be between 2-255., min = 2) ', type: string}\n        secret: {description: Secret, type: string}\n        secret_encrypted: {description: 'Secret Encrypted: JsonIgnore(value = true) ',\n          type: string}\n        secret_hash: {description: 'Secret Hash: JsonIgnore(value = true) ', type: string}\n        type:\n          description: 'Type: ValidateEnum(enumClass = classOf[IPSECAuthenticationType],\n            error = IPSECCONFIG_INVALID_AUTHENTICATION_TYPE: Invalid authentication\n            type specified.Valid type are x509, psk or none., nullAllowed = false) '\n          enum: [NONE, PSK, X509]\n          type: string\n        x509Objects: {$ref: '#/components/schemas/X509Objects', description: 'X509Objects:\n            JsonIgnore(value = true) '}\n      required: [local_id, type]\n    IPSECConfig:\n      properties:\n        authentication: {$ref: '#/components/schemas/IPSECAuthentication', description: 'Authentication:\n            Valid '}\n        ipsec_profile_id: {description: 'Ipsec Profile Id: Required(IPSEC_PROFILE_ID_MISSING) ',\n          type: string}\n      required: [ipsec_profile_id]\n    IPv4Range:\n      properties:\n        end: {description: 'End: NotNull(error = END_IP_MISSING: End ip is not specified\n            in range.) IPAddress(allowEmpty = true, allowLinkLocal = false, allowNull\n            = true, bcast = DENY, defaultRoute = false, dnsCheck = false, error =\n            END_IP_INVALID_IN_RANGE: Invalid end ip specified in range., type = IP) ',\n          type: string}\n        start: {description: 'Start: NotNull(error = START_IP_MISSING: Start ip is\n            not specified in range.) IPAddress(allowEmpty = true, allowLinkLocal =\n            false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = START_IP_INVALID_IN_RANGE: Invalid start ip specified\n            in range., type = IP) ', type: string}\n      required: [end, start]\n    IPv6DNS:\n      properties:\n        name_servers:\n          description: Name Servers\n          items: {description: Name Servers, type: string}\n          type: array\n        search:\n          description: Search\n          items: {description: Search, type: string}\n          type: array\n    InterfaceQueryResponseV4N10:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipfixcollectorcontext_id: {description: Ipfixcollectorcontext Id, type: string}\n        ipfixfiltercontext_id: {description: Ipfixfiltercontext Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        secondary_ip_configs:\n          description: 'Secondary Ip Configs: Size(max = 8, error = INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Secondary IPs exceed the supported limit\n            of 8, min = 0) '\n          items: {$ref: '#/components/schemas/SecondaryIPConfig'}\n          type: array\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        static_arp_configs:\n          description: 'Static Arp Configs: Size(max = 32, error = INTERFACE_CONFIG_STATIC_ARP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Static ARP entries exceed the supported\n            limit of 16, min = 0) '\n          items: {$ref: '#/components/schemas/StaticARPConfig'}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceQueryResponseV4N7:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        element_id: {description: Element Id, type: string}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceQueryResponseV4N8:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceQueryResponseV4N9:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N1:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPair', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [used_for, type]\n    InterfaceScreenV4N10:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipfixcollectorcontext_id: {description: Ipfixcollectorcontext Id, type: string}\n        ipfixfiltercontext_id: {description: Ipfixfiltercontext Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        secondary_ip_configs:\n          description: 'Secondary Ip Configs: Size(max = 8, error = INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Secondary IPs exceed the supported limit\n            of 8, min = 0) '\n          items: {$ref: '#/components/schemas/SecondaryIPConfig'}\n          type: array\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        static_arp_configs:\n          description: 'Static Arp Configs: Size(max = 32, error = INTERFACE_CONFIG_STATIC_ARP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Static ARP entries exceed the supported\n            limit of 16, min = 0) '\n          items: {$ref: '#/components/schemas/StaticARPConfig'}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N11:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        cellular_config: {$ref: '#/components/schemas/CellularConfig', description: 'Cellular\n            Config: Valid '}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipfixcollectorcontext_id: {description: Ipfixcollectorcontext Id, type: string}\n        ipfixfiltercontext_id: {description: Ipfixfiltercontext Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        multicast_config: {$ref: '#/components/schemas/MulticastInterfaceConfig',\n          description: 'Multicast Config: Valid '}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        secondary_ip_configs:\n          description: 'Secondary Ip Configs: Size(max = 8, error = INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Secondary IPs exceed the supported limit\n            of 8, min = 0) '\n          items: {$ref: '#/components/schemas/SecondaryIPConfig'}\n          type: array\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        static_arp_configs:\n          description: 'Static Arp Configs: Size(max = 32, error = INTERFACE_CONFIG_STATIC_ARP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Static ARP entries exceed the supported\n            limit of 16, min = 0) '\n          items: {$ref: '#/components/schemas/StaticARPConfig'}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N12:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        cellular_config: {$ref: '#/components/schemas/CellularConfig', description: 'Cellular\n            Config: Valid '}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipfixcollectorcontext_id: {description: Ipfixcollectorcontext Id, type: string}\n        ipfixfiltercontext_id: {description: Ipfixfiltercontext Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        ipv6_config: {$ref: '#/components/schemas/Ipv6Config', description: 'Ipv6\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        multicast_config: {$ref: '#/components/schemas/MulticastInterfaceConfig',\n          description: 'Multicast Config: Valid '}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_address_v6: {description: 'Nat Address V6: IPAddress(allowEmpty = true,\n            allowLinkLocal = false, allowNull = true, bcast = DENY, defaultRoute =\n            false, dnsCheck = false, error = INVALID_NAT_IP: NAT IP address is invalid.,\n            type = IPV6) ', type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_port_v6: {description: 'Nat Port V6: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        secondary_ip_configs:\n          description: 'Secondary Ip Configs: Size(max = 8, error = INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Secondary IPs exceed the supported limit\n            of 8, min = 0) '\n          items: {$ref: '#/components/schemas/SecondaryIPConfig'}\n          type: array\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        static_arp_configs:\n          description: 'Static Arp Configs: Size(max = 32, error = INTERFACE_CONFIG_STATIC_ARP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Static ARP entries exceed the supported\n            limit of 16, min = 0) '\n          items: {$ref: '#/components/schemas/StaticARPConfig'}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N2:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [used_for, type]\n    InterfaceScreenV4N3:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [used_for, type]\n    InterfaceScreenV4N4:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N5:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N6:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N7:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N8:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceScreenV4N9:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceState:\n      properties:\n        cellular_state: {$ref: '#/components/schemas/CellularState', description: Cellular\n            State}\n        device: {description: Device, type: string}\n        disabled: {description: Disabled, type: boolean}\n        disabled_reason: {description: 'Disabled Reason: Size(max = 5000, DISABLED_REASON_INVALID_0001,\n            min = 0) ', type: string}\n        dns_v4_config: {$ref: '#/components/schemas/DNS', description: 'Dns V4 Config:\n            Valid '}\n        dns_v6_config: {$ref: '#/components/schemas/DNS', description: Dns V6 Config}\n        element_id: {description: Element Id, type: string}\n        extended_state: {description: Extended State, type: string}\n        id: {type: string}\n        ike_algo: {description: 'Ike Algo: JsonIgnore(value = true) ', type: string}\n        ike_last_rekeyed: {description: 'Ike Last Rekeyed: JsonIgnore(value = true) ',\n          format: int64, type: integer}\n        ike_next_rekey: {description: 'Ike Next Rekey: JsonIgnore(value = true) ',\n          format: int64, type: integer}\n        inactive: {description: Inactive, type: boolean}\n        inactive_reason: {description: 'Inactive Reason: Size(max = 5000, INACTIVE_REASON_INVALID_0001,\n            min = 0) ', type: string}\n        index: {description: 'Index: JsonIgnore(value = true) ', format: int32, type: integer}\n        ipsec_algo: {description: 'Ipsec Algo: JsonIgnore(value = true) ', type: string}\n        ipsec_last_rekeyed: {description: 'Ipsec Last Rekeyed: JsonIgnore(value =\n            true) ', format: int64, type: integer}\n        ipsec_next_rekey: {description: 'Ipsec Next Rekey: JsonIgnore(value = true) ',\n          format: int64, type: integer}\n        ipv4_addresses:\n          description: Ipv4 Addresses\n          items: {description: Ipv4 Addresses, type: string}\n          type: array\n        ipv4_addresses_changed: {description: Ipv4 Addresses Changed, type: boolean}\n        ipv6_addresses:\n          description: Ipv6 Addresses\n          items: {description: Ipv6 Addresses, type: string}\n          type: array\n        ipv6_addresses_changed: {description: Ipv6 Addresses Changed, type: boolean}\n        last_state_change: {description: Last State Change, format: int64, type: integer}\n        link_local_address: {description: Link Local Address, type: string}\n        local_tunnel_v4_addr: {description: 'Local Tunnel V4 Addr: JsonIgnore(value\n            = true) ', type: string}\n        mac_address: {description: Mac Address, type: string}\n        name: {description: Name, type: string}\n        negotiated_mtu: {description: Negotiated Mtu, format: int32, type: integer}\n        operational_state: {description: Operational State, type: string}\n        operational_state_changed: {description: Operational State Changed, type: boolean}\n        port: {$ref: '#/components/schemas/Port', description: Port}\n        region: {description: Region, type: string}\n        remote_host_name: {description: Remote Host Name, type: string}\n        remote_v4_addr: {description: Remote V4 Addr, type: string}\n        routes:\n          description: Routes\n          items: {$ref: '#/components/schemas/Route'}\n          type: array\n        routes_v6:\n          description: Routes V6\n          items: {$ref: '#/components/schemas/Ipv6Route'}\n          type: array\n        secondary_ipv4_addresses:\n          description: Secondary Ipv4 Addresses\n          items: {description: Secondary Ipv4 Addresses, type: string}\n          type: array\n        state: {description: 'State: JsonIgnore(value = true) ', type: boolean}\n    InterfaceStateV3N1:\n      properties:\n        device: {description: Device, type: string}\n        dns_v4_config: {$ref: '#/components/schemas/DNS', description: 'Dns V4 Config:\n            Valid '}\n        dns_v6_config: {$ref: '#/components/schemas/IPv6DNS', description: Dns V6\n            Config}\n        element_id: {description: Element Id, type: string}\n        extended_state: {description: Extended State, type: string}\n        id: {description: Id, type: string}\n        ipv4_addresses:\n          description: Ipv4 Addresses\n          items: {description: Ipv4 Addresses, type: string}\n          type: array\n        ipv6_addresses:\n          description: Ipv6 Addresses\n          items: {description: Ipv6 Addresses, type: string}\n          type: array\n        last_state_change: {description: Last State Change, format: int64, type: integer}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        negotiated_mtu: {description: Negotiated Mtu, format: int32, type: integer}\n        operational_state: {description: Operational State, type: string}\n        port: {$ref: '#/components/schemas/Port', description: Port}\n        remote_host_name: {description: Remote Host Name, type: string}\n        remote_v4_addr: {description: Remote V4 Addr, type: string}\n        routes:\n          description: Routes\n          items: {$ref: '#/components/schemas/Route'}\n          type: array\n        service_link: {$ref: '#/components/schemas/ServiceLink', description: Service\n            Link}\n    InterfaceV4N1:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPair', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [used_for, type]\n    InterfaceV4N10:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: Description, type: string}\n        devicemgmt_policysetstack_id: {description: Devicemgmt Policysetstack Id,\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipfixcollectorcontext_id: {description: Ipfixcollectorcontext Id, type: string}\n        ipfixfiltercontext_id: {description: Ipfixfiltercontext Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid '}\n        mac_address: {description: Mac Address, type: string}\n        mtu: {description: Mtu, type: integer}\n        name: {description: Name, type: string}\n        nat_address: {description: Nat Address, type: string}\n        nat_pools:\n          description: Nat Pools\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: Nat Port, format: int32, type: integer}\n        nat_zone_id: {description: Nat Zone Id, type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid '}\n        scope:\n          description: Scope\n          enum: [GLOBAL, LOCAL]\n          type: string\n        secondary_ip_configs:\n          description: Secondary Ip Configs\n          items: {$ref: '#/components/schemas/SecondaryIPConfig'}\n          type: array\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        static_arp_configs:\n          description: Static Arp Configs\n          items: {$ref: '#/components/schemas/StaticARPConfig'}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: Sub\n            Interface}\n        tags:\n          description: Tags\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: Type, type: string}\n        used_for: {description: Used For, type: string}\n    InterfaceV4N11:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        cellular_config: {$ref: '#/components/schemas/CellularConfig', description: 'Cellular\n            Config: Valid '}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipfixcollectorcontext_id: {description: Ipfixcollectorcontext Id, type: string}\n        ipfixfiltercontext_id: {description: Ipfixfiltercontext Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        multicast_config: {$ref: '#/components/schemas/MulticastInterfaceConfig',\n          description: 'Multicast Config: Valid '}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        secondary_ip_configs:\n          description: 'Secondary Ip Configs: Size(max = 8, error = INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Secondary IPs exceed the supported limit\n            of 8, min = 0) '\n          items: {$ref: '#/components/schemas/SecondaryIPConfig'}\n          type: array\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        static_arp_configs:\n          description: 'Static Arp Configs: Size(max = 32, error = INTERFACE_CONFIG_STATIC_ARP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Static ARP entries exceed the supported\n            limit of 16, min = 0) '\n          items: {$ref: '#/components/schemas/StaticARPConfig'}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceV4N12:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        cellular_config: {$ref: '#/components/schemas/CellularConfig', description: 'Cellular\n            Config: Valid '}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipfixcollectorcontext_id: {description: Ipfixcollectorcontext Id, type: string}\n        ipfixfiltercontext_id: {description: Ipfixfiltercontext Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        ipv6_config: {$ref: '#/components/schemas/Ipv6Config', description: 'Ipv6\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        multicast_config: {$ref: '#/components/schemas/MulticastInterfaceConfig',\n          description: 'Multicast Config: Valid '}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_address_v6: {description: 'Nat Address V6: IPAddress(allowEmpty = true,\n            allowLinkLocal = false, allowNull = true, bcast = DENY, defaultRoute =\n            false, dnsCheck = false, error = INVALID_NAT_IP: NAT IP address is invalid.,\n            type = IPV6) ', type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_port_v6: {description: 'Nat Port V6: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        secondary_ip_configs:\n          description: 'Secondary Ip Configs: Size(max = 8, error = INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Secondary IPs exceed the supported limit\n            of 8, min = 0) '\n          items: {$ref: '#/components/schemas/SecondaryIPConfig'}\n          type: array\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        static_arp_configs:\n          description: 'Static Arp Configs: Size(max = 32, error = INTERFACE_CONFIG_STATIC_ARP_EXCEEDS_LIMIT:\n            Invalid interface configuration. Static ARP entries exceed the supported\n            limit of 16, min = 0) '\n          items: {$ref: '#/components/schemas/StaticARPConfig'}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceV4N2:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [used_for, type]\n    InterfaceV4N3:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [used_for, type]\n    InterfaceV4N4:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceV4N5:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceV4N6:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceV4N7:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV1', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceV4N8:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InterfaceV4N9:\n      properties:\n        admin_up: {description: Admin Up, type: boolean}\n        attached_lan_networks:\n          description: 'Attached Lan Networks: Valid '\n          items: {$ref: '#/components/schemas/LanNetworkVlanMapping'}\n          type: array\n        bound_interfaces:\n          description: Bound Interfaces\n          items: {description: Bound Interfaces, type: string}\n          type: array\n        bypass_pair: {$ref: '#/components/schemas/BypassPairV2', description: Bypass\n            Pair}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        devicemgmt_policysetstack_id: {description: 'Devicemgmt Policysetstack Id:\n            Digits(fraction = 0, integer = 30, INVALID_DEVICEMGMT_POLICYSETSTACK_ID) ',\n          type: string}\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: 'Dhcp Relay:\n            Valid '}\n        directed_broadcast: {description: Directed Broadcast, type: boolean}\n        ethernet_port: {$ref: '#/components/schemas/EthernetPort', description: Ethernet\n            Port}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/Ipv4Config', description: 'Ipv4\n            Config: Valid Valid '}\n        mac_address: {description: 'Mac Address: Pattern(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax., regexp = ([0-9a-f]{2}[:]){5}([0-9a-f]{2})) ',\n          type: string}\n        mtu: {description: 'Mtu: Range(max = 9216L, error = INTERFACE_CONFIG_INVALID_MTU:\n            MTU is not in the valid range., min = 0L) ', type: integer}\n        name: {description: 'Name: Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name\n            of the resource exceeds limit., min = 0) ', type: string}\n        nat_address: {description: 'Nat Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_NAT_IP: NAT IP address is invalid., type = IP) ',\n          type: string}\n        nat_pools:\n          description: 'Nat Pools: Valid '\n          items: {$ref: '#/components/schemas/NatPool'}\n          type: array\n        nat_port: {description: 'Nat Port: Range(max = 65535L, error = INTERFACE_CONFIG_INVALID_PORT:\n            LAN,WAN,Internet bypass ports cannot be part of logical interface groups.,\n            min = 0L) ', format: int32, type: integer}\n        nat_zone_id: {description: 'Nat Zone Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICY_ZONE) ', type: string}\n        network_context_id: {description: Network Context Id, type: string}\n        parent: {description: Parent, type: string}\n        pppoe_config: {$ref: '#/components/schemas/PppoE', description: 'Pppoe Config:\n            Valid Valid '}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        service_link_config: {$ref: '#/components/schemas/ServiceLinkV2', description: 'Service\n            Link Config: Valid Valid '}\n        site_wan_interface_ids:\n          description: Site Wan Interface Ids\n          items: {description: Site Wan Interface Ids, type: string}\n          type: array\n        sub_interface: {$ref: '#/components/schemas/SubInterface', description: 'Sub\n            Interface: Valid '}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type: {description: 'Type: ValidateEnum(enumClass = classOf[InterfaceType],\n            error = INVALID_PORT_TYPE: Port type is not valid., nullAllowed = false) ',\n          type: string}\n        used_for: {description: 'Used For: ValidateEnum(enumClass = classOf[UsedFor],\n            error = INTERFACE_CONFIG_INVALID_USEDFOR_VALUE: Invalid used for value\n            specified.The allowed values are public,private_wan,lan,none, nullAllowed\n            = false) ', type: string}\n      required: [scope, used_for, type]\n    InventoryOperation:\n      enum: [claim, return, revoke, reuse, retire, recover, remanufacture, default,\n        invalid, esp_allocate, esp_received_stock, esp_return, esp_revoke, esp_reuse]\n      type: string\n    Ipv4Config:\n      properties:\n        dhcp_config: {$ref: '#/components/schemas/Ipv4Dhcp', description: 'Dhcp Config:\n            Valid '}\n        dns_v4_config: {$ref: '#/components/schemas/DNS', description: Dns V4 Config}\n        pppoe_config: {$ref: '#/components/schemas/Ipv4Pppoe', description: Pppoe\n            Config}\n        routes:\n          description: 'Routes: Valid '\n          items: {$ref: '#/components/schemas/Route'}\n          type: array\n        static_config: {$ref: '#/components/schemas/Ipv4Static', description: 'Static\n            Config: Valid '}\n        type: {description: 'Type: Size(max = 12, error = INTERFACE_CONFIG_INVALID_IP_TYPE:\n            IP Type is not valid., min = 0) ', type: string}\n    Ipv4Dhcp:\n      properties:\n        client_id: {description: Client Id, type: string}\n        hostname: {description: Hostname, type: string}\n    Ipv4Pppoe:\n      properties:\n        chap_passwd: {description: Chap Passwd, type: string}\n        chap_user: {description: Chap User, type: string}\n        set_route: {description: Set Route, type: boolean}\n    Ipv4Static:\n      properties:\n        address: {description: Address, type: string}\n    Ipv6Config:\n      properties:\n        dhcp_config: {$ref: '#/components/schemas/Ipv6Dhcp', description: Dhcp Config}\n        dns_v6_config: {$ref: '#/components/schemas/DNS', description: 'Dns V6 Config:\n            Valid '}\n        routes:\n          description: Routes\n          items: {$ref: '#/components/schemas/Route'}\n          type: array\n        static_config: {$ref: '#/components/schemas/Ipv6Static', description: Static\n            Config}\n        type: {description: Type, type: string}\n    Ipv6Dhcp:\n      properties:\n        client_id: {description: Client Id, type: string}\n        hostname: {description: Hostname, type: string}\n    Ipv6Route:\n      properties:\n        destination: {description: 'Destination: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, error = INVALID_GATEWAY_IP: Gateway IP is invalid., type = GATEWAYCIDRV6) ',\n          type: string}\n        via: {description: 'Via: IPAddress(allowEmpty = true, allowLinkLocal = true,\n            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,\n            error = INVALID_HOST_IP: Invalid host IP address., type = IPV6) ', type: string}\n    Ipv6Static:\n      properties:\n        address: {description: Address, type: string}\n    LanNetworkVlanMapping:\n      properties:\n        lan_network_id: {description: Lan Network Id, type: string}\n        vlan_id: {description: 'Vlan Id: Range(max = 4095L, error = INVALID_VLANID:\n            VLAN ID should be between 0 and 4095., min = 0L) ', format: int32, type: integer}\n    ListQueryResponse:\n      properties:\n        count: {format: int32, type: integer}\n        deleted_count: {format: int64, type: integer}\n        deleted_ids:\n          items: {type: string}\n          type: array\n        id: {type: string}\n        next_query: {type: object}\n        total_count: {format: int64, type: integer}\n      type: object\n    ListResponse:\n      properties:\n        count: {format: int32, type: integer}\n        id: {type: string}\n      type: object\n    Machine:\n      properties:\n        connected: {description: Connected, type: boolean}\n        console_conf_passphrase: {description: Console Conf Passphrase, type: string}\n        em_element_id: {description: 'Em Element Id: Readonly(message = Readonly attribute.,\n            valid = true) ', type: string}\n        hw_id: {description: 'Hardware Id: NotEmpty(message = Required hardware_id)\n            Readonly(message = Readonly attribute., valid = true) ', type: string}\n        id: {description: Id, type: string}\n        image_version: {description: 'Image Version: NotEmpty(message = Required image_version)\n            Readonly(message = Readonly attribute., valid = true) ', type: string}\n        inventory_op:\n          description: Inventory Op\n          enum: [CLAIM, RETURN, REVOKE, REUSE, RETIRE, RECOVER, REMANUFACTURE, DEFAULT,\n            INVALID, ALLOCATE, RECEIVED_STOCK, ESP_ALLOCATE, ESP_RECEIVED_STOCK, ESP_RETURN,\n            ESP_REVOKE, ESP_REUSE]\n          type: string\n        machine_state:\n          description: 'Machine State: Required(message = Required machine state)\n            ValidateEnum(enumClass = classOf[MachineState], message = Invalid enum\n            string., nullAllowed = false) '\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        manufacture_id: {description: 'Manufacture Id: NotEmpty(message = Required\n            manufacture_id) Readonly(message = Readonly attribute., valid = true) ',\n          type: string}\n        model_name: {description: 'Model Name: NotEmpty(message = Required model_name)\n            Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name exceeds limit., min =\n            0) ', type: string}\n        ordering_info: {description: Ordering Info, type: string}\n        pki_op: {$ref: '#/components/schemas/CAStoreOperation', description: Pki Op}\n        renew_state:\n          description: 'Renew State: ValidateEnum(enumClass = classOf[MachineState],\n            message = Invalid enum string., nullAllowed = false) '\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        ship_state:\n          description: 'Ship State: ValidateEnum(enumClass = classOf[MachineShipState],\n            message = Invalid enum string., nullAllowed = false) '\n          enum: [MACHINE_SHIPPED, MACHINE_SHIPPED_CORRECT_ADDRESS, MACHINE_SHIPPED_WRONG_ADDRESS,\n            MACHINE_NOT_SHIPPED]\n          type: string\n        sl_no: {description: 'Sl No: NotEmpty(message = Required sl_no) Readonly(message\n            = Readonly attribute., valid = true) ', type: string}\n        token: {description: 'Token: Readonly(message = Readonly attribute., valid\n            = true) ', type: string}\n      required: [ship_state, manufacture_id, renew_state, machine_state, image_version,\n        model_name, sl_no, hw_id]\n    MachineInfo:\n      properties:\n        connected: {type: boolean}\n        console_conf_passphrase: {type: string}\n        em_element_id: {type: string}\n        esp_tenant_id: {type: string}\n        hw_id: {type: string}\n        id: {type: string}\n        image_version: {type: string}\n        inventory_op: {$ref: '#/components/schemas/InventoryOperation'}\n        machine_state: {$ref: '#/components/schemas/MachineState'}\n        manufacture_id: {type: string}\n        model_name: {type: string}\n        ordering_info: {type: string}\n        pki_op: {$ref: '#/components/schemas/CAStoreOperation'}\n        renew_state: {$ref: '#/components/schemas/MachineState'}\n        ship_state: {$ref: '#/components/schemas/MachineShipState'}\n        sl_no: {type: string}\n        token: {type: string}\n      type: object\n    MachineInfoV2N2:\n      properties:\n        connected: {type: boolean}\n        console_conf_passphrase: {type: string}\n        em_element_id: {type: string}\n        esp_tenant_id: {type: string}\n        hw_id: {type: string}\n        id: {type: string}\n        image_version: {type: string}\n        inventory_op: {$ref: '#/components/schemas/InventoryOperation'}\n        machine_state: {$ref: '#/components/schemas/MachineState'}\n        manufacture_id: {type: string}\n        model_name: {type: string}\n        ordering_info: {type: string}\n        owner_tenant_id: {type: string}\n        pki_op: {$ref: '#/components/schemas/CAStoreOperation'}\n        renew_state: {$ref: '#/components/schemas/MachineState'}\n        ship_state: {$ref: '#/components/schemas/MachineShipState'}\n        sl_no: {type: string}\n        token: {type: string}\n      type: object\n    MachineQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    MachineQueryFilterV2N1:\n      properties:\n        connected: {description: Connected, type: boolean}\n        console_conf_passphrase: {description: Console Conf Passphrase, type: string}\n        em_element_id: {description: Em Element Id, type: string}\n        esp_tenant_id: {description: 'Esp Tenant Id: JsonInclude(content = ALWAYS,\n            contentFilter = classOf[Void], value = ALWAYS, valueFilter = classOf[Void]) ',\n          type: string}\n        hw_id: {description: Hardware Id, type: string}\n        id: {description: Id, type: string}\n        image_version: {description: Image Version, type: string}\n        inventory_op:\n          description: Inventory Op\n          enum: [CLAIM, RETURN, REVOKE, REUSE, RETIRE, RECOVER, REMANUFACTURE, DEFAULT,\n            INVALID, ALLOCATE, RECEIVED_STOCK, ESP_ALLOCATE, ESP_RECEIVED_STOCK, ESP_RETURN,\n            ESP_REVOKE, ESP_REUSE]\n          type: string\n        machine_state:\n          description: Machine State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        manufacture_id: {description: Manufacture Id, type: string}\n        model_name: {description: Model Name, type: string}\n        ordering_info: {description: Ordering Info, type: string}\n        pki_op: {$ref: '#/components/schemas/CAStoreOperation', description: Pki Op}\n        renew_state:\n          description: Renew State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        ship_state:\n          description: Ship State\n          enum: [MACHINE_SHIPPED, MACHINE_SHIPPED_CORRECT_ADDRESS, MACHINE_SHIPPED_WRONG_ADDRESS,\n            MACHINE_NOT_SHIPPED]\n          type: string\n        sl_no: {description: Sl No, type: string}\n        suspend_state:\n          description: Suspend State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        token: {description: Token, type: string}\n    MachineShipState:\n      enum: [machine_shipped, machine_shipped_correct_address, machine_shipped_wrong_address,\n        machine_not_shipped]\n      type: string\n    MachineState:\n      enum: [manufactured, manufactured_qa_pending, manufactured_qa_ok, manufactured_qa_not_ok,\n        manufactured_battery_test_pending, manufactured_battery_test_start, manufactured_battery_test_passed,\n        manufactured_battery_test_failed, manufactured_mic_issue_pending, manufactured_mic_issued,\n        manufactured_mic_failed, manufactured_mic_operational, manufactured_cic_issue_pending,\n        manufactured_cic_issued, manufactured_cic_revoked, manufactured_cic_operational,\n        manufactured_mic_signing_pending, manufactured_cic_signing_pending, allocated,\n        allocated_to_esp, claim_pending, initializing, initialization_failed, assigned,\n        claim_pending, claimed, claim_failed, to_be_returned, returned, revoked, machine_element_delete_pending,\n        return_failed, received_stock, remanufactured, retired, recover, decommissioned,\n        machine_claim_valid, machine_claim_invalid, machine_cic_renew_initial, machine_cic_renew_issue_pending,\n        machine_cic_renew_issued, machine_cic_renew_signing_pending, machine_cic_renew_failed,\n        machine_cic_renewed]\n      type: string\n    MachineSystemStatusV2N1:\n      properties:\n        boot_mode:\n          description: 'Boot Mode: ValidateEnum(enumClass = classOf[BootMode], message\n            = Invalid enum string., nullAllowed = true) '\n          enum: [BIOS, UEFI_ONLY, UEFI_SECURE]\n          type: string\n        disk_status:\n          description: 'Disk Status: Valid '\n          items: {$ref: '#/components/schemas/DiskPartitionStatus'}\n          type: array\n        fips_mode:\n          description: 'Fips Mode: ValidateEnum(enumClass = classOf[MachineFipsMode],\n            message = Invalid enum string., nullAllowed = true) '\n          enum: [none, fips, non_fips]\n          type: string\n        hardware_id: {description: 'Hardware Id: Required(message = MACHINESTATUS_INVALID_HARDWARE_ID)\n            Readonly(message = Readonly attribute., valid = true) ', type: string}\n        id: {description: Id, type: string}\n        tpm_status: {description: Tpm Status, type: string}\n        trusted_boot:\n          description: 'Trusted Boot: ValidateEnum(enumClass = classOf[TrustedBootStatus],\n            message = Invalid enum string., nullAllowed = true) '\n          enum: [PASSED, FAILED]\n          type: string\n      required: [hardware_id]\n    MachineV2N1:\n      properties:\n        connected: {description: Connected, type: boolean}\n        console_conf_passphrase: {description: Console Conf Passphrase, type: string}\n        em_element_id: {description: Em Element Id, type: string}\n        esp_tenant_id: {description: 'Esp Tenant Id: JsonInclude(content = ALWAYS,\n            contentFilter = classOf[Void], value = ALWAYS, valueFilter = classOf[Void]) ',\n          type: string}\n        hw_id: {description: Hardware Id, type: string}\n        id: {description: Id, type: string}\n        image_version: {description: Image Version, type: string}\n        inventory_op:\n          description: Inventory Op\n          enum: [CLAIM, RETURN, REVOKE, REUSE, RETIRE, RECOVER, REMANUFACTURE, DEFAULT,\n            INVALID, ALLOCATE, RECEIVED_STOCK, ESP_ALLOCATE, ESP_RECEIVED_STOCK, ESP_RETURN,\n            ESP_REVOKE, ESP_REUSE]\n          type: string\n        machine_state:\n          description: Machine State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        manufacture_id: {description: Manufacture Id, type: string}\n        model_name: {description: Model Name, type: string}\n        ordering_info: {description: Ordering Info, type: string}\n        pki_op: {$ref: '#/components/schemas/CAStoreOperation', description: Pki Op}\n        renew_state:\n          description: Renew State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        ship_state:\n          description: Ship State\n          enum: [MACHINE_SHIPPED, MACHINE_SHIPPED_CORRECT_ADDRESS, MACHINE_SHIPPED_WRONG_ADDRESS,\n            MACHINE_NOT_SHIPPED]\n          type: string\n        sl_no: {description: Sl No, type: string}\n        suspend_state:\n          description: Suspend State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        token: {description: Token, type: string}\n    MachineV2N2:\n      properties:\n        connected: {description: Connected, type: boolean}\n        console_conf_passphrase: {description: Console Conf Passphrase, type: string}\n        em_element_id: {description: Em Element Id, type: string}\n        esp_tenant_id: {description: 'Esp Tenant Id: JsonInclude(content = ALWAYS,\n            contentFilter = classOf[Void], value = ALWAYS, valueFilter = classOf[Void]) ',\n          type: string}\n        hw_id: {description: Hardware Id, type: string}\n        id: {description: Id, type: string}\n        image_version: {description: Image Version, type: string}\n        inventory_op:\n          description: Inventory Op\n          enum: [CLAIM, RETURN, REVOKE, REUSE, RETIRE, RECOVER, REMANUFACTURE, DEFAULT,\n            INVALID, ALLOCATE, RECEIVED_STOCK, ESP_ALLOCATE, ESP_RECEIVED_STOCK, ESP_RETURN,\n            ESP_REVOKE, ESP_REUSE]\n          type: string\n        machine_state:\n          description: Machine State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        manufacture_id: {description: Manufacture Id, type: string}\n        model_name: {description: Model Name, type: string}\n        ordering_info: {description: Ordering Info, type: string}\n        owner_tenant_id: {description: 'Owner Tenant Id: JsonInclude(content = ALWAYS,\n            contentFilter = classOf[Void], value = ALWAYS, valueFilter = classOf[Void]) ',\n          type: string}\n        pki_op: {$ref: '#/components/schemas/CAStoreOperation', description: Pki Op}\n        renew_state:\n          description: Renew State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        ship_state:\n          description: Ship State\n          enum: [MACHINE_SHIPPED, MACHINE_SHIPPED_CORRECT_ADDRESS, MACHINE_SHIPPED_WRONG_ADDRESS,\n            MACHINE_NOT_SHIPPED]\n          type: string\n        sl_no: {description: Sl No, type: string}\n        suspend_state:\n          description: Suspend State\n          enum: [MANUFACTURED, MANUFACTURED_QA_PENDING, MANUFACTURED_QA_OK, MANUFACTURED_QA_NOK,\n            MANUFACTURED_BATTERY_TEST_PENDING, MANUFACTURED_BATTERY_TEST_START, MANUFACTURED_BATTERY_TEST_PASS,\n            MANUFACTURED_BATTERY_TEST_FAILED, MANUFACTURED_MIC_ISSUE_PENDING, MANUFACTURED_MIC_ISSUED,\n            MANUFACTURED_MIC_FAILED, MANUFACTURED_MIC_OPERATIONAL, MANUFACTURED_CIC_ISSUE_PENDING,\n            MANUFACTURED_CIC_ISSUED, MANUFACTURED_CIC_REVOKED, MANUFACTURED_CIC_OPERATIONAL,\n            MANUFACTURED_MIC_SIGNING_PENDING, MANUFACTURED_CIC_SIGNING_PENDING, MACHINE_ALLOCATED,\n            MACHINE_ALLOCATED_TO_ESP, MACHINE_ELEMENT_ID_PENDING, MACHINE_INIT, MACHINE_INIT_FAILED,\n            MACHINE_ASSIGNED, MACHINE_CLAIM_PENDING, MACHINE_CLAIMED, MACHINE_CLAIM_FAILED,\n            MACHINE_TO_BE_RETURNED, MACHINE_RETURNED, MACHINE_REVOKED, MACHINE_ELEMENT_DELETE_PENDING,\n            MACHINE_RETURN_FAILED, MACHINE_RECEIVED_STOCK, REMANUFACTURED, MACHINE_RETIRED,\n            MACHINE_RECOVER, MACHINE_DECOMMISSIONED, MACHINE_CLAIM_VALID, MACHINE_CLAIM_INVALID,\n            MACHINE_CIC_RENEW_INITIAL, MACHINE_CIC_RENEW_ISSUE_PENDING, MACHINE_CIC_RENEW_ISSUED,\n            MACHINE_CIC_RENEW_SIGNING_PENDING, MACHINE_CIC_RENEW_FAILED, MACHINE_CIC_RENEWED,\n            MACHINE_SUSPEND_INIT, MACHINE_SUSPEND_IN_PROGRESS, MACHINE_SUSPENDED_MIC_OPERATIONAL,\n            MACHINE_SUSPENDED_CIC_OPERATIONAL, MACHINE_SUSPEND_FAILED, MACHINE_SUSPENDED_EMPTY_TOKEN,\n            MACHINE_SUSPENDED_INVALID_TOKEN, MACHINE_SUSPENDED_TOKEN_EXPIRED, MACHINE_SUSPENDED,\n            MACHINE_SUSPEND_FAILED_TIMEOUT]\n          type: string\n        token: {description: Token, type: string}\n    MulticastInterfaceConfig:\n      properties:\n        igmp_version:\n          description: Igmp Version\n          enum: [IGMPV2, IGMPV3]\n          type: string\n        multicast_enabled: {description: Multicast Enabled, type: boolean}\n    NatPool:\n      properties:\n        ipv4_ranges:\n          description: 'Ipv4 Ranges: Size(max = 4, error = INTERFACE_CONFIG_INVALID_NAT_POOL_IP_RANGE:\n            Minimum 1 and maximum 4 nat pool IP ranges can be specified., min = 1)\n            Valid '\n          items: {$ref: '#/components/schemas/IPv4Range'}\n          type: array\n        nat_pool_id: {description: 'Nat Pool Id: Digits(fraction = 0, integer = 30,\n            INVALID_NAT_POLICYPOOL_ID) ', type: string}\n    PeerInfo:\n      properties:\n        hostname: {description: 'Hostname: Size(max = 256, INVALID_PEER_HOSTNAME,\n            min = 0) ', type: string}\n        ip_addresses:\n          description: 'Ip Addresses: ListIPAddress(bcast = DENY, listMaxSize = 4,\n            INVALID_PEERS_ADDRESSES, required = false, type = IP) '\n          items: {description: Ip Addresses, type: string}\n          type: array\n    Port:\n      properties:\n        end: {description: 'End: Range(max = 65535L, error = APPDEF_CONFIG_INVALID_PORT_RANGE:\n            Port number must be between 1 and 65535, min = 1L) ', type: string}\n        start: {description: 'Start: Range(max = 65535L, error = APPDEF_CONFIG_INVALID_PORT_RANGE:\n            Port number must be between 1 and 65535, min = 1L) ', type: string}\n    PppoE:\n      properties:\n        host_uniq: {description: 'Host Uniq: Pattern(error = PPPOE_HOSTUNIQ_LENGTH_INVALID:\n            HOSTUNIQ can be null or minimum length of 2 to maximum length of 254.Length\n            should be in multiples of 2., regexp = ([A-Fa-f0-9]{2}){1,}) Size(max\n            = 254, error = PPPOE_HOSTUNIQ_LENGTH_INVALID: HOSTUNIQ can be null or\n            minimum length of 2 to maximum length of 254.Length should be in multiples\n            of 2., min = 0) ', type: string}\n        parent: {description: 'Parent: JsonIgnore(value = true) ', type: string}\n        password: {description: 'Password: Size(max = 255, error = PPPOE_PASSWORD_INVALID:\n            PPPOE password is required and can have a max length of 128 characters.,\n            min = 0) ', type: string}\n        reconnection_delay: {description: 'Reconnection Delay: Range(max = 300L, error\n            = VALUE_NOT_IN_RANGE: Value is not in the permissible range., min = 0L) ',\n          format: int32, type: integer}\n        service_name: {description: Service Name, type: string}\n        username: {description: 'Username: Size(max = 255, error = PPPOE_USERNAME_INVALID:\n            PPPOE username is required and can have a max length of 128 characters.,\n            min = 0) ', type: string}\n    RecoveryToken:\n      properties:\n        hardware_id: {description: Hardware Id, type: string}\n        id: {description: Id, type: string}\n        ion_token: {description: Ion Token, type: string}\n        is_used: {description: Is Used, type: boolean}\n        secret_token: {description: Secret Token, type: string}\n        token_validity_in_hour: {description: Token Validity In Hour, format: int32,\n          type: integer}\n        valid_till_secs: {description: Valid Till Secs, format: int64, type: integer}\n    RecoveryTokenScreen:\n      properties:\n        id: {description: Id, type: string}\n        token_validity_in_hour: {description: Token Validity In Hour, format: int32,\n          type: integer}\n    Route:\n      properties:\n        destination: {description: Destination, type: string}\n        via: {description: Via, type: string}\n    SecondaryIPConfig:\n      properties:\n        ipv4_address: {description: Ipv4 Address, type: string}\n        scope: {description: Scope, type: string}\n    ServiceLink:\n      properties:\n        gre_config: {$ref: '#/components/schemas/GREConfig', description: 'Gre Config:\n            JsonInclude(content = ALWAYS, contentFilter = classOf[Void], value = ALWAYS,\n            valueFilter = classOf[Void]) '}\n        ipsec_config: {$ref: '#/components/schemas/IPSECConfig', description: 'Ipsec\n            Config: Valid '}\n        last_parent: {description: 'Last Parent: JsonIgnore(value = true) ', type: string}\n        parent: {description: 'Parent: JsonIgnore(value = true) ', type: string}\n        peer: {$ref: '#/components/schemas/PeerInfo', description: 'Peer: Valid '}\n        security_service_endpoint_id: {description: Security Service Endpoint Id,\n          type: string}\n        service_endpoint_id: {description: Service Endpoint Id, type: string}\n        type:\n          description: 'Type: ValidateEnum(enumClass = classOf[ServiceLinkType], INVALID_SERVICE_LINK_TYPE,\n            nullAllowed = false) '\n          enum: [IPSEC, GRE]\n          type: string\n      required: [type]\n    ServiceLinkV1:\n      properties:\n        ipsec_config: {$ref: '#/components/schemas/IPSECConfig', description: 'Ipsec\n            Config: Valid '}\n        last_parent: {description: 'Last Parent: JsonIgnore(value = true) ', type: string}\n        parent: {description: 'Parent: JsonIgnore(value = true) ', type: string}\n        peer: {$ref: '#/components/schemas/PeerInfo', description: 'Peer: Valid '}\n        service_endpoint_id: {description: Service Endpoint Id, type: string}\n        type:\n          description: 'Type: ValidateEnum(enumClass = classOf[ServiceLinkType], INVALID_SERVICE_LINK_TYPE,\n            nullAllowed = false) '\n          enum: [IPSEC, GRE]\n          type: string\n      required: [type]\n    ServiceLinkV2:\n      properties:\n        gre_config: {$ref: '#/components/schemas/GREConfig', description: 'Gre Config:\n            JsonInclude(content = ALWAYS, contentFilter = classOf[Void], value = ALWAYS,\n            valueFilter = classOf[Void]) Valid '}\n        ipsec_config: {$ref: '#/components/schemas/IPSECConfig', description: 'Ipsec\n            Config: Valid '}\n        last_parent: {description: 'Last Parent: JsonIgnore(value = true) ', type: string}\n        parent: {description: 'Parent: JsonIgnore(value = true) ', type: string}\n        peer: {$ref: '#/components/schemas/PeerInfo', description: 'Peer: Valid '}\n        service_endpoint_id: {description: Service Endpoint Id, type: string}\n        type:\n          description: 'Type: ValidateEnum(enumClass = classOf[ServiceLinkType], INVALID_SERVICE_LINK_TYPE,\n            nullAllowed = false) '\n          enum: [IPSEC, GRE]\n          type: string\n      required: [type]\n    Software:\n      properties:\n        location: {description: 'Location: URL(host = , , port = -1, protocol = ,\n            regexp = .*) ', type: string}\n        state_id: {description: 'State Id: JsonIgnore(value = true) ', type: string}\n        version: {description: Version, type: string}\n    SpokeHAConfigV1:\n      properties:\n        cluster_id: {description: 'Cluster Id: Required(SPOKEHA_CONFIG_CLUSTER_ID_REQD) ',\n          type: string}\n        enable: {description: 'Enable: Required(SPOKEHA_CONFIG_ENABLE_REQD) ', type: boolean}\n        priority: {description: 'Priority: Required(SPOKEHA_CONFIG_PRIORITY_REQD)\n            Range(max = 254L, SPOKEHA_CONFIG_INVALID_PRIORITY, min = 1L) ', format: int32,\n          type: integer}\n        source_interface: {description: 'Source Interface: Required(SPOKEHA_CONFIG_SOURCE_INTERFACE_ID_REQD) ',\n          type: string}\n        track: {$ref: '#/components/schemas/TrackV1', description: 'Track: Valid '}\n      required: [source_interface, priority, enable, cluster_id]\n    SpokeHAConfigV2:\n      properties:\n        cluster_id: {description: 'Cluster Id: Required(SPOKEHA_CONFIG_CLUSTER_ID_REQD) ',\n          type: string}\n        enable: {description: 'Enable: Required(SPOKEHA_CONFIG_ENABLE_REQD) ', type: boolean}\n        priority: {description: 'Priority: Required(SPOKEHA_CONFIG_PRIORITY_REQD)\n            Range(max = 254L, SPOKEHA_CONFIG_INVALID_PRIORITY, min = 1L) ', format: int32,\n          type: integer}\n        source_interface: {description: 'Source Interface: Required(SPOKEHA_CONFIG_SOURCE_INTERFACE_ID_REQD) ',\n          type: string}\n        track: {$ref: '#/components/schemas/TrackV2', description: 'Track: Valid '}\n      required: [source_interface, priority, enable, cluster_id]\n    StaticARPConfig:\n      properties:\n        ipv4_address: {description: 'Ipv4 Address: IPAddress(allowEmpty = true, allowLinkLocal\n            = false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, INVALID_IP, type = IP) ', type: string}\n        mac_address: {description: 'Mac Address: MACAddress(error = INTERFACE_CONFIG_INVALID_MAC:\n            Invalid mac address syntax.) ', type: string}\n    SubInterface:\n      properties:\n        vlan_id: {description: Vlan Id, format: int32, type: integer}\n    SuppressedInfo:\n      properties:\n        root_cause_event_ids:\n          description: Root Cause Event Ids\n          items: {description: Root Cause Event Ids, type: string}\n          type: array\n        suppressed_time: {format: date, type: string}\n    TrackInterface:\n      properties:\n        interface_id: {description: Interface Id, type: string}\n        reduce_priority: {description: 'Reduce Priority: Range(max = 254L, SPOKEHA_CONFIG_INVALID_REDUCE_PRIORITY,\n            min = 1L) ', format: int32, type: integer}\n    TrackV1:\n      properties:\n        interfaces:\n          description: 'Interfaces: Valid '\n          items: {$ref: '#/components/schemas/TrackInterface'}\n          type: array\n    TrackV2:\n      properties:\n        interfaces:\n          description: 'Interfaces: Valid '\n          items: {$ref: '#/components/schemas/TrackInterface'}\n          type: array\n        waninterfaces:\n          description: 'Waninterfaces: Valid '\n          items: {$ref: '#/components/schemas/TrackWANInterface'}\n          type: array\n    TrackWANInterface:\n      properties:\n        reduce_priority: {description: 'Reduce Priority: Range(max = 254L, SPOKEHA_CONFIG_INVALID_REDUCE_PRIORITY,\n            min = 1L) ', format: int32, type: integer}\n        wan_interface_id: {description: Wan Interface Id, type: string}\n    VffLicense:\n      properties:\n        allowed_ions: {description: 'Allowed Ions: Min(message = INVALID_ION_COUNT,\n            value = 0L) ', format: int32, type: integer}\n        id: {description: Id, type: string}\n        model: {description: 'Model: Readonly(message = Readonly attribute., valid\n            = true) NotEmpty(message = INVALID_LICENSE_MODEL) ', type: string}\n      required: [model]\n    VffLicenseState:\n      properties:\n        deployed_ions: {description: Deployed Ions, format: int32, type: integer}\n        id: {description: Id, type: string}\n    VffToken:\n      properties:\n        id: {description: Id, type: string}\n        ion_key: {description: Ion Key, type: string}\n        is_expired: {description: Is Expired, type: boolean}\n        is_multiuse: {description: Is Multiuse, type: boolean}\n        is_revoked: {description: Is Revoked, type: boolean}\n        is_used: {description: Is Used, type: boolean}\n        secret_key: {description: Secret Key, type: string}\n        valid_till_secs: {description: Valid Till Secs, format: int64, type: integer}\n        vfflicense_id: {description: Vfflicense Id, type: string}\n    VffTokenQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    VffTokenQueryFilter:\n      properties:\n        id: {description: Id, type: string}\n        ion_key: {description: Ion Key, type: string}\n        is_expired: {description: Is Expired, type: boolean}\n        is_multiuse: {description: Is Multiuse, type: boolean}\n        is_revoked: {description: Is Revoked, type: boolean}\n        is_used: {description: Is Used, type: boolean}\n        secret_key: {description: Secret Key, type: string}\n        valid_till_secs: {description: Valid Till Secs, format: int64, type: integer}\n        vfflicense_id: {description: Vfflicense Id, type: string}\n    VffTokenScreen:\n      properties:\n        id: {description: Id, type: string}\n        ion_key: {description: Ion Key, type: string}\n        is_expired: {description: Is Expired, type: boolean}\n        is_multiuse: {description: Is Multiuse, type: boolean}\n        is_revoked: {description: Is Revoked, type: boolean}\n        is_used: {description: Is Used, type: boolean}\n        secret_key: {description: Secret Key, type: string}\n        valid_till_secs: {description: Valid Till Secs, format: int64, type: integer}\n        vfflicense_id: {description: Vfflicense Id, type: string}\n    X509Objects:\n      properties:\n        certHolder: {type: object}\n        certificate: {description: Certificate, type: string}\n        is_local_ca_cert_set: {description: Is Local Ca Cert Set, type: boolean}\n        is_remote_ca_cert_set: {description: Is Remote Ca Cert Set, type: boolean}\n        keyPair: {type: object}\n        local_ca_certificate: {description: Local Ca Certificate, type: string}\n        local_ca_certs_set:\n          description: Local Ca Certs Set\n          items: {type: object}\n          type: array\n        passphrase: {description: Passphrase, type: string}\n        private_key: {description: Private Key, type: string}\n        remote_ca_certificate: {description: Remote Ca Certificate, type: string}\n        remote_ca_certs_set:\n          description: Remote Ca Certs Set\n          items: {type: object}\n          type: array\ninfo:\n  contact: {}\n  description: List of APIs used to manage your device software to upgrade, retrieve\n    available software images, and upgrade status information.\n  title: Device Configuration\n  version: Latest\nopenapi: 3.0.0\npaths:\n  /sdwan/v2.0/api/clients/{client_id}/machines:\n    get:\n      description: Get all machines of tenant\n      operationId: get-sdwan-v2.0-api-clients-client_id-machines\n      parameters:\n      - description: Client Id\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/MachineV2N2'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all machines of tenant (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/clients/{client_id}/machines/query:\n    post:\n      description: Query a tenants client\n      operationId: post-sdwan-v2.0-api-clients-client_id-machines-query\n      parameters:\n      - description: Client Id\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/Machine'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Machine'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_OPERATION}\n                  - {code: INVALID_STATE}\n                  - {code: OPERATION_NOT_ALLOWED}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: NAME_EXCEEDS_LIMIT}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query a tenants client (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/clients/{client_id}/machines/{machine_id}:\n    get:\n      description: Get specific machine belonging to tenant\n      operationId: get-sdwan-v2.0-api-clients-client_id-machines-machine_id\n      parameters:\n      - description: Client Id\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      - description: Machine Id\n        in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items: {$ref: '#/components/schemas/Machine'}\n                type: array\n          description: Successful Operation\n      summary: Get specific machine belonging to tenant (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/clients/{client_id}/machines/{machine_id}/reallocate:\n    post:\n      description: Update Tenant machine\n      operationId: post-sdwan-v2.0-api-clients-client_id-machines-machine_id-reallocate\n      parameters:\n      - description: Client Id\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      - description: Machine Id\n        in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/Machine'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Machine'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_OPERATION}\n                  - {code: INVALID_STATE}\n                  - {code: OPERATION_NOT_ALLOWED}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: NAME_EXCEEDS_LIMIT}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update Tenant machine (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements:\n    get:\n      description: Get all elements of a tenant in a site\n      operationId: get-sdwan-v2.0-api-elements\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - allOf:\n                  - {$ref: '#/components/schemas/ListQueryResponse'}\n                  - properties:\n                      items:\n                        items: {$ref: '#/components/schemas/ElementQueryFilter'}\n                        type: array\n                    type: object\n                - allOf:\n                  - {$ref: '#/components/schemas/BulkResponse'}\n                  - properties:\n                      items:\n                        items: {$ref: '#/components/schemas/ElementQueryFilter'}\n                        type: array\n                    type: object\n          description: Successful Operation\n      summary: Get all elements of a tenant in a site (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/query:\n    post:\n      description: Query db for elements that match query parameters\n      operationId: post-sdwan-v2.0-api-elements-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementQueryFilter'}\n        description: Details of the query to be created.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementQueryFilter'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for elements that match query parameters (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/software/state/query:\n    post:\n      description: Query software state for all tenants elements\n      operationId: post-sdwan-v2.0-api-elements-software-state-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementStateQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementStateQueryFilter'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query software state for all tenants elements (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/status/query:\n    post:\n      description: Query and get element status objects for a tenant\n      operationId: post-sdwan-v2.0-api-elements-status-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementStatusQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementStatusQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query and get element status objects for a tenant (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/{element_id}:\n    get:\n      description: Get element of a tenant\n      operationId: get-sdwan-v2.0-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Element'}\n          description: Successful Operation\n      summary: Get element of a tenant (v2.0)\n      tags: [Device Configuration]\n    put:\n      description: Used for associations and element updates\n      operationId: put-sdwan-v2.0-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementScreen'}\n        description: Details of the element to be updated.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Element'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_BOUND_ERROR}\n                  - {code: ELEMENT_CONFIG_INVALID_VALUES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Used for associations and element updates (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/{element_id}/certificate_operations:\n    post:\n      description: Start CIC renewal process for an element device\n      operationId: post-sdwan-v2.0-api-elements-element_id-certificate_operations\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementOperations'}\n        description: Details of the operations on element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementOperations'}\n          description: Successful Operation\n      summary: Start CIC renewal process for an element device (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/{element_id}/hardwarebypass:\n    get:\n      description: Get a list of all the hardware bypasses in element\n      operationId: get-sdwan-v2.0-api-elements-element_id-hardwarebypass\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/HardwareBypass'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_CONFIG_HWBYPASS_NOT_SUPPORTED}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a list of all the hardware bypasses in element (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/{element_id}/operations:\n    post:\n      description: Handle operations on element.\n      operationId: post-sdwan-v2.0-api-elements-element_id-operations\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementOperations'}\n        description: Details of the operations on element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementOperations'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: COMMAND_NOT_SUPPORTED}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Handle operations on element. (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/{element_id}/software/state:\n    get:\n      description: Get the software upgrade configuration of an element\n      operationId: get-sdwan-v2.0-api-elements-element_id-software-state\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementSoftwareState'}\n          description: Successful Operation\n      summary: Get the software upgrade configuration of an element (v2.0)\n      tags: [Device Configuration]\n    put:\n      description: Upgrade an element\n      operationId: put-sdwan-v2.0-api-elements-element_id-software-state\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementSoftwareStateScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementSoftwareState'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SOFTWARE_CONFIG_INVALID_SCHEDULING}\n                  - {code: SOFTWARE_CONFIG_SCHEDULED_UPGRADE_NOT_SUPPORTED}\n                  - {code: SOFTWARE_CONFIG_INVALID_DOWNLOAD_INTERVAL}\n                  - {code: SOFTWARE_CONFIG_INVALID_UPGRADE_INTERVAL}\n                  - {code: SOFTWARE_CONFIG_INVALID_DOWNLOAD_TIME}\n                  - {code: SOFTWARE_CONFIG_INVALID_UPGRADE_TIME}\n                  - {code: SOFTWARE_CONFIG_INCOMPATIBLE_SCHEDULES}\n                  - {code: SOFTWARE_CONFIG_INVALID_INTERFACES}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Upgrade an element (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/{element_id}/software/status:\n    get:\n      description: Get image status\n      operationId: get-sdwan-v2.0-api-elements-element_id-software-status\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementImageStatus'}\n          description: Successful Operation\n      summary: Get image status (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/{element_id}/state:\n    get:\n      description: Get element state\n      operationId: get-sdwan-v2.0-api-elements-element_id-state\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementState'}\n          description: Successful Operation\n      summary: Get element state (v2.0)\n      tags: [Device Configuration]\n    put:\n      description: Update element state\n      operationId: put-sdwan-v2.0-api-elements-element_id-state\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementStateScreen'}\n        description: Update element state\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementState'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_BOUND_ERROR}\n                  - {code: ELEMENT_CONFIG_INVALID_VALUES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update element state (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/elements/{element_id}/status:\n    get:\n      description: Get specific element status for a tenant\n      operationId: get-sdwan-v2.0-api-elements-element_id-status\n      parameters:\n      - in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementStatus'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_STATUS_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get specific element status for a tenant (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/machines:\n    get:\n      description: Get machines of a tenant\n      operationId: get-sdwan-v2.0-api-machines\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineQuery'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: MACHINE_UNKNOWN}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get machines of a tenant (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/machines/query:\n    post:\n      description: Query a specific machine of a tenant\n      operationId: post-sdwan-v2.0-api-machines-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineQuery'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ESP_OPERATION_NOT_ALLOWED}\n                  - {code: INVALID_OPERATION}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: SELF_ESP_RECEIVE_STOCK_ERROR}\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: MACHINE_UNKNOWN}\n                  - {code: INVALID_STATE}\n                  - {code: LICENSE_NOT_FOUND}\n                  - {code: MACHINE_INACTIVE}\n                  - {code: MACHINE_DISCONNECTED}\n                  - {code: PLEASE_RETRY_LATER}\n                  - {code: CLAIM_ALREADY_IN_PROGRESS}\n                  - {code: OPERATION_NOT_ALLOWED}\n                  - {code: INVALID_ESP_MACHINE_STATE}\n                  - {code: INVALID_ESP_FOR_MACHINE}\n                  - {code: OPERATION_NOT_ALLOWED_FOR_VFF}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query a specific machine of a tenant (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/machines/{machine_id}:\n    get:\n      description: Get Tenant machine\n      operationId: get-sdwan-v2.0-api-machines-machine_id\n      parameters:\n      - description: Machine Id\n        in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Machine'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_OPERATION}\n                  - {code: INVALID_STATE}\n                  - {code: PLEASE_RETRY_LATER}\n                  - {code: MACHINE_DISCONNECTED}\n                  - {code: CLAIM_ALREADY_IN_PROGRESS}\n                  - {code: NAME_EXCEEDS_LIMIT}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get Tenant machine (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/machines/{machine_id}/operations:\n    post:\n      description: Update Tenant machine\n      operationId: post-sdwan-v2.0-api-machines-machine_id-operations\n      parameters:\n      - description: Machine Id\n        in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/Machine'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Machine'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_OPERATION}\n                  - {code: INVALID_STATE}\n                  - {code: PLEASE_RETRY_LATER}\n                  - {code: MACHINE_DISCONNECTED}\n                  - {code: CLAIM_ALREADY_IN_PROGRESS}\n                  - {code: NAME_EXCEEDS_LIMIT}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update Tenant machine (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/admin_state:\n    put:\n      description: Update admin state Northbound\n      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-admin_state\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/Element'}\n        description: Update admin state\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Element'}\n          description: Successful Operation\n      summary: Update admin state Northbound (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/application_probe:\n    get:\n      description: Get application probe configuration of element\n      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-application_probe\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ApplicationProbe'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: APPLICATION_PROBE_CONFIG_UNSUPPORTED_SWVERSION}\n                  - {code: APPLICATION_PROBE_CONFIG_NOT_PRESENT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get application probe configuration of element (v2.0)\n      tags: [Device Configuration]\n    put:\n      description: Update application probe configuration\n      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-application_probe\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ApplicationProbeScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ApplicationProbe'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: APPLICATION_PROBE_CONFIG_UNSUPPORTED_SWVERSION}\n                  - {code: APPLICATION_PROBE_CONFIG_UNSUPPORTED_ROLE}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: APPLICATION_PROBE_CONFIG_INVALID_SOURCE_INTERFACE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update application probe configuration (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/extensions:\n    get:\n      description: Get all element level extensions\n      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-extensions\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: element ID\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - {$ref: '#/components/schemas/ListResponse'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_ASSIGNED_TO_SITE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get all element level extensions (v2.0)\n      tags: [Device Configuration]\n    post:\n      description: Create element level extension configuration\n      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-extensions\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: element ID\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ExtensionScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: SITE_NOT_FOUND}\n                  - {code: ELEMENT_NOT_ASSIGNED_TO_SITE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NAT_EXTENSION_ENABLED_ON_NATPOLICY_ELEMENT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create element level extension configuration (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/extensions/query:\n    post:\n      description: Query element level extensions that match query params\n      operationId: post-sdwan-v2.0-api-sites-site_id-elements-element_id-extensions-query\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: element ID\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ExtensionQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ExtensionQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: SITE_NOT_FOUND}\n                  - {code: ELEMENT_NOT_ASSIGNED_TO_SITE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NAT_EXTENSION_ENABLED_ON_NATPOLICY_ELEMENT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query element level extensions that match query params (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/extensions/{extension_id}:\n    delete:\n      description: Delete a specific extension associated with an element\n      operationId: delete-sdwan-v2.0-api-sites-site_id-elements-element_id-extensions-extension_id\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: element ID\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: extension ID\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: EXTENSION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete a specific extension associated with an element (v2.0)\n      tags: [Device Configuration]\n    get:\n      description: Get an element level extension\n      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-extensions-extension_id\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: element ID\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: extension ID\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: EXTENSION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get an element level extension (v2.0)\n      tags: [Device Configuration]\n    put:\n      description: Update element level extension configuration\n      operationId: put-sdwan-v2.0-api-sites-site_id-elements-element_id-extensions-extension_id\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: element ID\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: extension ID\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ExtensionScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: EXTENSION_NOT_FOUND}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: NAT_EXTENSION_ENABLED_ON_NATPOLICY_ELEMENT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update element level extension configuration (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}/status:\n    get:\n      description: Get interface status\n      operationId: get-sdwan-v2.0-api-sites-site_id-elements-element_id-interfaces-interface_id-status\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceState'}\n          description: Successful Operation\n      summary: Get interface status (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/extensions:\n    get:\n      description: Get all site level extensions\n      operationId: get-sdwan-v2.0-api-sites-site_id-extensions\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - {$ref: '#/components/schemas/ListResponse'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SITE_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get all site level extensions (v2.0)\n      tags: [Device Configuration]\n    post:\n      description: Create site level extension configuration\n      operationId: post-sdwan-v2.0-api-sites-site_id-extensions\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ExtensionScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: SITE_NOT_FOUND}\n                  - {code: ELEMENT_NOT_ASSIGNED_TO_SITE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NAT_EXTENSION_ENABLED_ON_NATPOLICY_ELEMENT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create site level extension configuration (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/extensions/query:\n    post:\n      description: Query site level extensions that match query params\n      operationId: post-sdwan-v2.0-api-sites-site_id-extensions-query\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ExtensionQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ExtensionQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query site level extensions that match query params (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/sites/{site_id}/extensions/{extension_id}:\n    delete:\n      description: Delete a specific extension associated with a site\n      operationId: delete-sdwan-v2.0-api-sites-site_id-extensions-extension_id\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: extension ID\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: EXTENSION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete a specific extension associated with a site (v2.0)\n      tags: [Device Configuration]\n    get:\n      description: Get a site level extension\n      operationId: get-sdwan-v2.0-api-sites-site_id-extensions-extension_id\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: extension ID\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: EXTENSION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a site level extension (v2.0)\n      tags: [Device Configuration]\n    put:\n      description: Update site level extension configuration\n      operationId: put-sdwan-v2.0-api-sites-site_id-extensions-extension_id\n      parameters:\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: extension ID\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ExtensionScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: EXTENSION_NOT_FOUND}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: NAT_EXTENSION_ENABLED_ON_NATPOLICY_ELEMENT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update site level extension configuration (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/vfflicenses:\n    get:\n      description: Get all Vff Licenses for Tenant\n      operationId: get-sdwan-v2.0-api-vfflicenses\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/VffLicense'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all Vff Licenses for Tenant (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/vfflicenses/tokens/query:\n    post:\n      description: Query Tenant Vff License Tokens\n      operationId: post-sdwan-v2.0-api-vfflicenses-tokens-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/VffTokenQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/VffTokenQueryFilter'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query Tenant Vff License Tokens (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/vfflicenses/{license_id}:\n    get:\n      description: Get specific Vff Licenses for Tenant\n      operationId: get-sdwan-v2.0-api-vfflicenses-license_id\n      parameters:\n      - description: License Id\n        in: path\n        name: license_id\n        required: true\n        schema: {description: License Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/VffLicense'}\n          description: Successful Operation\n      summary: Get specific Vff Licenses for Tenant (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/vfflicenses/{license_id}/status:\n    get:\n      description: Get status for Vff License\n      operationId: get-sdwan-v2.0-api-vfflicenses-license_id-status\n      parameters:\n      - description: License Id\n        in: path\n        name: license_id\n        required: true\n        schema: {description: License Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/VffLicenseState'}\n          description: Successful Operation\n      summary: Get status for Vff License (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/vfflicenses/{license_id}/tokens:\n    get:\n      description: Get all Tenant Vff License Tokens\n      operationId: get-sdwan-v2.0-api-vfflicenses-license_id-tokens\n      parameters:\n      - description: License Id\n        in: path\n        name: license_id\n        required: true\n        schema: {description: License Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/VffToken'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all Tenant Vff License Tokens (v2.0)\n      tags: [Device Configuration]\n    post:\n      description: Create Tenant Vff License Token\n      operationId: post-sdwan-v2.0-api-vfflicenses-license_id-tokens\n      parameters:\n      - description: License Id\n        in: path\n        name: license_id\n        required: true\n        schema: {description: License Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/VffToken'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/VffToken'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: TOKEN_CONFIG_INVALID_POST_VALUES}\n                  - {code: LICENSE_UNKNOWN}\n                  - {code: ION_MAX_LIMIT}\n                  - {code: ERROR_IN_TOKEN_GENERATION}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create Tenant Vff License Token (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/vfflicenses/{license_id}/tokens/{token_id}:\n    get:\n      description: Get specific Tenant Vff License Token\n      operationId: get-sdwan-v2.0-api-vfflicenses-license_id-tokens-token_id\n      parameters:\n      - description: License Id\n        in: path\n        name: license_id\n        required: true\n        schema: {description: License Id, type: string}\n      - description: Token Id\n        in: path\n        name: token_id\n        required: true\n        schema: {description: Token Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/VffToken'}\n          description: Successful Operation\n      summary: Get specific Tenant Vff License Token (v2.0)\n      tags: [Device Configuration]\n    put:\n      description: Update Tenant Vff License Token\n      operationId: put-sdwan-v2.0-api-vfflicenses-license_id-tokens-token_id\n      parameters:\n      - description: License Id\n        in: path\n        name: license_id\n        required: true\n        schema: {description: License Id, type: string}\n      - description: Token Id\n        in: path\n        name: token_id\n        required: true\n        schema: {description: Token Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/VffTokenScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/VffToken'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: TOKEN_CONFIG_INVALID_PUT_VALUES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update Tenant Vff License Token (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/ws/extensions:\n    get:\n      description: Get all extensions from NB\n      operationId: get-sdwan-v2.0-api-ws-extensions\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - allOf:\n                  - {$ref: '#/components/schemas/ListResponse'}\n                  - properties:\n                      items:\n                        items: {$ref: '#/components/schemas/Extension'}\n                        type: array\n                    type: object\n                - allOf:\n                  - {$ref: '#/components/schemas/ListQueryResponse'}\n                  - properties:\n                      items:\n                        items: {$ref: '#/components/schemas/ExtensionQueryFilter'}\n                        type: array\n                    type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: EXTENSION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get all extensions from NB (v2.0)\n      tags: [Device Configuration]\n    post:\n      description: Create extension configuration\n      operationId: post-sdwan-v2.0-api-ws-extensions\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/Extension'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: EXTENSION_NAME_REQD}\n                  - {code: INVALID_EXTENSION_CONF}\n                  - {code: INVALID_EXTENSION_NAMESPACE}\n                  - {code: EXTENSION_NAMESPACE_REQD}\n                  - {code: INVALID_EXTENSION_NAME}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create extension configuration (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/ws/extensions/query:\n    post:\n      description: Queries db for limit number of tenant extensions that match the\n        query params.\n      operationId: post-sdwan-v2.0-api-ws-extensions-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ExtensionQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ExtensionQueryFilter'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_REQUEST_ERROR_0001}\n                  - {code: INVALID_REQUEST_DUPLICATE_KEY}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Queries db for limit number of tenant extensions that match the query\n        params. (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.0/api/ws/extensions/{extension_id}:\n    delete:\n      description: Delete extension\n      operationId: delete-sdwan-v2.0-api-ws-extensions-extension_id\n      parameters:\n      - description: Extension Id\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: EXTENSION_NAME_REQD}\n                  - {code: INVALID_EXTENSION_CONF}\n                  - {code: INVALID_EXTENSION_NAMESPACE}\n                  - {code: EXTENSION_NAMESPACE_REQD}\n                  - {code: INVALID_EXTENSION_NAME}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete extension (v2.0)\n      tags: [Device Configuration]\n    get:\n      description: Get extension from NB\n      operationId: get-sdwan-v2.0-api-ws-extensions-extension_id\n      parameters:\n      - description: Extension Id\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n      summary: Get extension from NB (v2.0)\n      tags: [Device Configuration]\n    put:\n      description: Update extensions configuration\n      operationId: put-sdwan-v2.0-api-ws-extensions-extension_id\n      parameters:\n      - description: Extension Id\n        in: path\n        name: extension_id\n        required: true\n        schema: {description: Extension Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/Extension'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/Extension'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: EXTENSION_NAME_REQD}\n                  - {code: INVALID_EXTENSION_CONF}\n                  - {code: INVALID_EXTENSION_NAMESPACE}\n                  - {code: EXTENSION_NAMESPACE_REQD}\n                  - {code: INVALID_EXTENSION_NAME}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update extensions configuration (v2.0)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/clients/{client_id}/machines:\n    get:\n      description: Get all machines allocated by ESP to a client tenant\n      operationId: get-sdwan-v2.1-api-clients-client_id-machines\n      parameters:\n      - description: tenant ID of the client tenant of ESP\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {type: object}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: INVALID_ESP_CLIENT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get all machines allocated by ESP to a client tenant (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/clients/{client_id}/machines/query:\n    post:\n      description: Query and get all machines allocated by ESP to a client tenant\n      operationId: post-sdwan-v2.1-api-clients-client_id-machines-query\n      parameters:\n      - description: tenant ID of the client tenant of ESP\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {type: object}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query and get all machines allocated by ESP to a client tenant (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/clients/{client_id}/machines/{machine_id}:\n    get:\n      description: Get a specific machine allocated by ESP to a client tenant\n      operationId: get-sdwan-v2.1-api-clients-client_id-machines-machine_id\n      parameters:\n      - description: tenant ID of the client tenant of ESP\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: MACHINE_UNKNOWN}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific machine allocated by ESP to a client tenant (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/clients/{client_id}/machines/{machine_id}/reallocate:\n    post:\n      description: Reallocate a specific machine from one client tenant to another,\n        both client tenants are clients of the same ESP.\n      operationId: post-sdwan-v2.1-api-clients-client_id-machines-machine_id-reallocate\n      parameters:\n      - description: tenant ID (source) of the client tenant of ESP\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineInfo'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: MACHINE_UNKNOWN}\n                  - {code: OPERATION_NOT_ALLOWED}\n                  - {code: INVALID_OPERATION}\n                  - {code: INVALID_STATE, description: 'If the machine is not in to_be_returned\n                      state or allocated_to_esp states, use /operations API to move\n                      it to to_be_returned (return operation) or allocated_to_esp\n                      (esp_received stock operation) state, before attempting to reallocate\n                      the machine to another client tenant.'}\n                  - {code: MACHINE_DELETE_DEFAULT_REGION}\n                  - {code: INVALID_MACHINE_REGION}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Reallocate a specific machine from one client tenant to another, both\n        client tenants are clients of the same ESP. (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/elements:\n    get:\n      description: Get all elements of a tenant in a site\n      operationId: get-sdwan-v2.1-api-elements\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - allOf:\n                  - {$ref: '#/components/schemas/ListQueryResponse'}\n                  - properties:\n                      items:\n                        items: {$ref: '#/components/schemas/ElementQueryFilterV2N1'}\n                        type: array\n                    type: object\n                - allOf:\n                  - {$ref: '#/components/schemas/BulkResponse'}\n                  - properties:\n                      items:\n                        items: {$ref: '#/components/schemas/Element'}\n                        type: array\n                    type: object\n          description: Successful Operation\n      summary: Get all elements of a tenant in a site (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/elements/query:\n    post:\n      description: Query db for elements that match query parameters\n      operationId: post-sdwan-v2.1-api-elements-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementQuery'}\n        description: Details of the query to be created.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementQueryFilterV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_JSON}\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: ELEMENT_NOT_CLAIMED}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for elements that match query parameters (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/elements/{element_id}:\n    get:\n      description: Get element of a tenant\n      operationId: get-sdwan-v2.1-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementV2N1'}\n          description: Successful Operation\n      summary: Get element of a tenant (v2.1)\n      tags: [Device Configuration]\n    put:\n      description: Used for associations and element updates\n      operationId: put-sdwan-v2.1-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementScreenV2N1'}\n        description: Details of the element to be updated.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_BOUND_ERROR}\n                  - {code: ELEMENT_CONFIG_INVALID_VALUES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Used for associations and element updates (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/elements/{element_id}/fips_mode_change_operations:\n    post:\n      description: Change Mode of an element from FIPS to Non-FIPS or vice-versa.\n      operationId: post-sdwan-v2.1-api-elements-element_id-fips_mode_change_operations\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementOperations'}\n        description: Details of the operations on element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementOperations'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: FIPS_MODE_INVALID_OPERATION}\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: ELEMENT_NOT_CONNECTED}\n                  - {code: FIPS_MODE_ELEMENT_ALREADY_IN_REQUESTED_MODE}\n                  - {code: FIPS_MODE_MODEL_NOT_SUPPORTED}\n                  - {code: FIPS_MODE_FORBIDDEN_INVALID_STATE}\n                  - {code: FIPS_MODE_CHANGE_NOT_SUPPORTED}\n                  - {code: FIPS_MODE_PLEASE_RETRY_LATER}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Change Mode of an element from FIPS to Non-FIPS or vice-versa. (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/elements/{element_id}/software/status:\n    get:\n      description: Get all software upgrade status (up to 5) started by the tenant\n        user\n      operationId: get-sdwan-v2.1-api-elements-element_id-software-status\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementImageStatusV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all software upgrade status (up to 5) started by the tenant user\n        (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/machines:\n    get:\n      description: Get all machines of a tenant\n      operationId: get-sdwan-v2.1-api-machines\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/MachineV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n        '404': {description: Machines not found}\n      summary: Get all machines of a tenant (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/machines/query:\n    post:\n      description: Query and get machines of a tenant\n      operationId: post-sdwan-v2.1-api-machines-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/MachineQueryFilterV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad request\n      summary: Query and get machines of a tenant (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/machines/{machine_id}:\n    get:\n      description: Get a specific machine of a tenant\n      operationId: get-sdwan-v2.1-api-machines-machine_id\n      parameters:\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: MACHINE_UNKNOWN}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific machine of a tenant (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/machines/{machine_id}/machinesystemstatus:\n    get:\n      description: Get Machine system status for a tenant\n      operationId: get-sdwan-v2.1-api-machines-machine_id-machinesystemstatus\n      parameters:\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineSystemStatusV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: MACHINE_UNKNOWN}\n                  - {code: MACHINE_STATUS_UNKNOWN}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get Machine system status for a tenant (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/machines/{machine_id}/operations:\n    post:\n      description: Update a specific machine of a tenant using operations\n      operationId: post-sdwan-v2.1-api-machines-machine_id-operations\n      parameters:\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineInfo'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ESP_OPERATION_NOT_ALLOWED}\n                  - {code: INVALID_OPERATION}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: SELF_ESP_RECEIVE_STOCK_ERROR}\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: MACHINE_UNKNOWN}\n                  - {code: INVALID_STATE}\n                  - {code: LICENSE_NOT_FOUND}\n                  - {code: MACHINE_INACTIVE}\n                  - {code: MACHINE_DISCONNECTED}\n                  - {code: PLEASE_RETRY_LATER}\n                  - {code: CLAIM_ALREADY_IN_PROGRESS}\n                  - {code: OPERATION_NOT_ALLOWED}\n                  - {code: INVALID_ESP_MACHINE_STATE}\n                  - {code: INVALID_ESP_FOR_MACHINE}\n                  - {code: OPERATION_NOT_ALLOWED_FOR_VFF}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update a specific machine of a tenant using operations (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/machines/{machine_id}/recovery_tokens:\n    get:\n      description: Get recovery token for a machine\n      operationId: get-sdwan-v2.1-api-machines-machine_id-recovery_tokens\n      parameters:\n      - description: Machine Id\n        in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/RecoveryToken'}\n          description: Successful Operation\n      summary: Get recovery token for a machine (v2.1)\n      tags: [Device Configuration]\n    post:\n      description: Create a Recovery Token for Fips change mode\n      operationId: post-sdwan-v2.1-api-machines-machine_id-recovery_tokens\n      parameters:\n      - description: Machine Id\n        in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/RecoveryTokenScreen'}\n        description: Details of the recovery token for the element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/RecoveryToken'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: MACHINE_NOT_FOUND}\n                  - {code: FIPS_MODE_ERROR_IN_TOKEN_GENERATION}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a Recovery Token for Fips change mode (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/machines/{machine_id}/recovery_tokens/{token_id}:\n    put:\n      description: Update Recovery Token for Fips change mode\n      operationId: put-sdwan-v2.1-api-machines-machine_id-recovery_tokens-token_id\n      parameters:\n      - description: Machine Id\n        in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      - description: Token Id\n        in: path\n        name: token_id\n        required: true\n        schema: {description: Token Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/RecoveryTokenScreen'}\n        description: Details of the recovery token for the element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/RecoveryToken'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: MACHINE_NOT_FOUND}\n                  - {code: TOKEN_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update Recovery Token for Fips change mode (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/software/current_status/query:\n    post:\n      description: Get the current image status of all the element\n      operationId: post-sdwan-v2.1-api-software-current_status-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementImageStatusQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementImageStatusQueryFilterV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get the current image status of all the element (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.1/api/software/status/query:\n    post:\n      description: Query the software upgrade status of all tenant elements\n      operationId: post-sdwan-v2.1-api-software-status-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementImageStatusQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementImageStatusQueryFilterV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query the software upgrade status of all tenant elements (v2.1)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/clients/{client_id}/machines:\n    get:\n      description: Get all machines allocated by ESP to a client tenant\n      operationId: get-sdwan-v2.2-api-clients-client_id-machines\n      parameters:\n      - description: tenant ID of the client tenant of ESP\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {type: object}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: INVALID_ESP_CLIENT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get all machines allocated by ESP to a client tenant (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/clients/{client_id}/machines/query:\n    post:\n      description: Query and get all machines allocated by ESP to a client tenant\n      operationId: post-sdwan-v2.2-api-clients-client_id-machines-query\n      parameters:\n      - description: tenant ID of the client tenant of ESP\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {type: object}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query and get all machines allocated by ESP to a client tenant (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/clients/{client_id}/machines/{machine_id}:\n    get:\n      description: Get a specific machine allocated by ESP to a client tenant\n      operationId: get-sdwan-v2.2-api-clients-client_id-machines-machine_id\n      parameters:\n      - description: tenant ID of the client tenant of ESP\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineV2N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: MACHINE_UNKNOWN}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific machine allocated by ESP to a client tenant (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/clients/{client_id}/machines/{machine_id}/reallocate:\n    post:\n      description: Reallocate a specific machine from one client tenant to another,\n        both client tenants are clients of the same ESP.\n      operationId: post-sdwan-v2.2-api-clients-client_id-machines-machine_id-reallocate\n      parameters:\n      - description: tenant ID (source) of the client tenant of ESP\n        in: path\n        name: client_id\n        required: true\n        schema: {description: Client Id, type: string}\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineInfoV2N2'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineV2N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: MACHINE_UNKNOWN}\n                  - {code: OPERATION_NOT_ALLOWED}\n                  - {code: INVALID_OPERATION}\n                  - {code: INVALID_STATE, description: 'If the machine is not in to_be_returned\n                      state or allocated_to_esp states, use /operations API to move\n                      it to to_be_returned (return operation) or allocated_to_esp\n                      (esp_received stock operation) state, before attempting to reallocate\n                      the machine to another client tenant.'}\n                  - {code: MACHINE_DELETE_DEFAULT_REGION}\n                  - {code: INVALID_MACHINE_REGION}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Reallocate a specific machine from one client tenant to another, both\n        client tenants are clients of the same ESP. (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/elements:\n    get:\n      description: Get all elements of a tenant in a site\n      operationId: get-sdwan-v2.2-api-elements\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementV2N2'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all elements of a tenant in a site (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/elements/query:\n    post:\n      description: Query db for elements that match query parameters\n      operationId: post-sdwan-v2.2-api-elements-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementQuery'}\n        description: Details of the query to be created.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementQueryFilterV2N2'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_JSON}\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: ELEMENT_NOT_CLAIMED}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for elements that match query parameters (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/elements/{element_id}:\n    get:\n      description: Get element of a tenant\n      operationId: get-sdwan-v2.2-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementV2N2'}\n          description: Successful Operation\n      summary: Get element of a tenant (v2.2)\n      tags: [Device Configuration]\n    put:\n      description: Used for associations and element updates\n      operationId: put-sdwan-v2.2-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementScreenV2N2'}\n        description: Details of the element to be updated.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementV2N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_BOUND_ERROR}\n                  - {code: ELEMENT_HA_CONFIG_NOT_SUPPORTED}\n                  - {code: ELEMENT_CONFIG_INVALID_VALUES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Used for associations and element updates (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/machines:\n    get:\n      description: Get all machines of a tenant\n      operationId: get-sdwan-v2.2-api-machines\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/MachineV2N2'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n        '404': {description: Machines not found}\n      summary: Get all machines of a tenant (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/machines/query:\n    post:\n      description: Query and get machines of a tenant\n      operationId: post-sdwan-v2.2-api-machines-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/MachineQueryFilterV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad request\n      summary: Query and get machines of a tenant (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/machines/{machine_id}:\n    get:\n      description: Get a specific machine of a tenant\n      operationId: get-sdwan-v2.2-api-machines-machine_id\n      parameters:\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineV2N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: MACHINE_UNKNOWN}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific machine of a tenant (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.2/api/machines/{machine_id}/operations:\n    post:\n      description: Update a specific machine of a tenant using operations\n      operationId: post-sdwan-v2.2-api-machines-machine_id-operations\n      parameters:\n      - in: path\n        name: machine_id\n        required: true\n        schema: {description: Machine Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineInfoV2N2'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/MachineV2N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ESP_OPERATION_NOT_ALLOWED}\n                  - {code: INVALID_OPERATION}\n                  - {code: TENANT_REGION_ASSOCIATION_NOT_FOUND}\n                  - {code: SELF_ESP_RECEIVE_STOCK_ERROR}\n                  - {code: INVALID_ESP_CLIENT}\n                  - {code: MACHINE_UNKNOWN}\n                  - {code: INVALID_STATE}\n                  - {code: LICENSE_NOT_FOUND}\n                  - {code: MACHINE_INACTIVE}\n                  - {code: MACHINE_DISCONNECTED}\n                  - {code: PLEASE_RETRY_LATER}\n                  - {code: CLAIM_ALREADY_IN_PROGRESS}\n                  - {code: OPERATION_NOT_ALLOWED}\n                  - {code: INVALID_ESP_MACHINE_STATE}\n                  - {code: INVALID_ESP_FOR_MACHINE}\n                  - {code: OPERATION_NOT_ALLOWED_FOR_VFF}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update a specific machine of a tenant using operations (v2.2)\n      tags: [Device Configuration]\n  /sdwan/v2.3/api/elements:\n    get:\n      description: Get all elements of a tenant in a site\n      operationId: get-sdwan-v2.3-api-elements\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementV2N3'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all elements of a tenant in a site (v2.3)\n      tags: [Device Configuration]\n  /sdwan/v2.3/api/elements/query:\n    post:\n      description: Query db for elements that match query parameters\n      operationId: post-sdwan-v2.3-api-elements-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementQueryFilterV2N3'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_JSON}\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: ELEMENT_NOT_CLAIMED}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for elements that match query parameters (v2.3)\n      tags: [Device Configuration]\n  /sdwan/v2.3/api/elements/{element_id}:\n    get:\n      description: Get element of a tenant\n      operationId: get-sdwan-v2.3-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementV2N3'}\n          description: Successful Operation\n      summary: Get element of a tenant (v2.3)\n      tags: [Device Configuration]\n    put:\n      description: Used for associations and element updates\n      operationId: put-sdwan-v2.3-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementScreenV2N3'}\n        description: Details of the element to be updated.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementV2N3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_BOUND_ERROR}\n                  - {code: ELEMENT_CONFIG_INVALID_VALUES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Used for associations and element updates (v2.3)\n      tags: [Device Configuration]\n  /sdwan/v2.4/api/elements:\n    get:\n      description: Get Elements of a tenant\n      operationId: get-sdwan-v2.4-api-elements\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementV2N4'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get Elements of a tenant (v2.4)\n      tags: [Device Configuration]\n  /sdwan/v2.4/api/elements/query:\n    post:\n      description: Queries db for limit number of elements that match query params.\n      operationId: post-sdwan-v2.4-api-elements-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementQuery'}\n        description: Queries to the element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementQueryFilterV2N4'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Queries db for limit number of elements that match query params. (v2.4)\n      tags: [Device Configuration]\n  /sdwan/v2.4/api/elements/{element_id}:\n    get:\n      description: Get Element of a tenant\n      operationId: get-sdwan-v2.4-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementV2N4'}\n          description: Successful Operation\n      summary: Get Element of a tenant (v2.4)\n      tags: [Device Configuration]\n    put:\n      description: Used for associations and element updates\n      operationId: put-sdwan-v2.4-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementScreenV2N4'}\n        description: Update to the element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementScreenV2N4'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_JSON}\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: ELEMENT_NOT_CLAIMED}\n                  - {code: SITE_NOT_FOUND}\n                  - {code: ELEMENT_BOUND_ERROR}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Used for associations and element updates (v2.4)\n      tags: [Device Configuration]\n  /sdwan/v2.5/api/elements:\n    get:\n      description: Get Elements of a tenant\n      operationId: get-sdwan-v2.5-api-elements\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementV2N5'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get Elements of a tenant (v2.5)\n      tags: [Device Configuration]\n  /sdwan/v2.5/api/elements/query:\n    post:\n      description: Queries db for limit number of elements that match query params.\n      operationId: post-sdwan-v2.5-api-elements-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementQuery'}\n        description: Queries to the element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementQueryFilterV2N5'}\n                      type: array\n                  type: object\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/ElementAggregateQueryFilterV2N5'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_REQUEST}\n                  - {code: UNSUPPOPRTED_REQUEST_PARAMETERS}\n                  - {code: INVALID_AGGREGATE_QUERY_PARAMS}\n                  - {code: INVALID_AGGREGATE_QUERY_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n        '500':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_SUBJECT_DATA}\n                  - {code: SERVICE_UNAVAILABLE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Internal Server Error\n      summary: Queries db for limit number of elements that match query params. (v2.5)\n      tags: [Device Configuration]\n  /sdwan/v2.5/api/elements/{element_id}:\n    get:\n      description: Get Element of a tenant\n      operationId: get-sdwan-v2.5-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementV2N5'}\n          description: Successful Operation\n      summary: Get Element of a tenant (v2.5)\n      tags: [Device Configuration]\n    put:\n      description: Used for associations and element updates\n      operationId: put-sdwan-v2.5-api-elements-element_id\n      parameters:\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/ElementScreenV2N5'}\n        description: Update to the element\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementScreenV2N5'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_JSON}\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: ELEMENT_NOT_CLAIMED}\n                  - {code: SITE_NOT_FOUND}\n                  - {code: ELEMENT_BOUND_ERROR}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Used for associations and element updates (v2.5)\n      tags: [Device Configuration]\n  /sdwan/v3.0/api/machines/rquery:\n    post:\n      description: Query and get ESP machines across regions\n      operationId: post-sdwan-v3.0-api-machines-rquery\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineQuery'}\n        description: Details of machine query\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/MachineQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query and get ESP machines across regions (v3.0)\n      tags: [Device Configuration]\n  /sdwan/v3.0/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}/status:\n    get:\n      description: Get interface status\n      operationId: get-sdwan-v3.0-api-sites-site_id-elements-element_id-interfaces-interface_id-status\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceState'}\n          description: Successful Operation\n      summary: Get interface status (v3.0)\n      tags: [Device Configuration]\n  /sdwan/v3.1/api/machines/rquery:\n    post:\n      description: Query and get ESP machines across regions\n      operationId: post-sdwan-v3.1-api-machines-rquery\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/MachineQuery'}\n        description: Details of machine query\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/MachineQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query and get ESP machines across regions (v3.1)\n      tags: [Device Configuration]\n  /sdwan/v3.1/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}/status:\n    get:\n      description: Get interface status\n      operationId: get-sdwan-v3.1-api-sites-site_id-elements-element_id-interfaces-interface_id-status\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceStateV3N1'}\n          description: Successful Operation\n      summary: Get interface status (v3.1)\n      tags: [Device Configuration]\n  /sdwan/v3.2/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}/status:\n    get:\n      description: Get element interfacestate\n      operationId: get-sdwan-v3.2-api-sites-site_id-elements-element_id-interfaces-interface_id-status\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementState'}\n          description: Successful Operation\n      summary: Get element interface state (v3.2)\n      tags: [Device Configuration]\n  /sdwan/v3.3/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}/status:\n    get:\n      description: Get element interfacestate\n      operationId: get-sdwan-v3.3-api-sites-site_id-elements-element_id-interfaces-interface_id-status\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementState'}\n          description: Successful Operation\n      summary: Get element interface state (v3.3)\n      tags: [Device Configuration]\n  /sdwan/v3.4/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}/status:\n    get:\n      description: Get element interfacestate\n      operationId: get-sdwan-v3.4-api-sites-site_id-elements-element_id-interfaces-interface_id-status\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/ElementState'}\n          description: Successful Operation\n      summary: Get element interface state (v3.4)\n      tags: [Device Configuration]\n  /sdwan/v4.0/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get all element interfaces\n      operationId: get-sdwan-v4.0-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all element interfaces (v4.0)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.0-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N1'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.0)\n      tags: [Device Configuration]\n  /sdwan/v4.0/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.0-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.0)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.0-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N1'}\n          description: Successful Operation\n      summary: Get element interface details (v4.0)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.0-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N1'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.0)\n      tags: [Device Configuration]\n  /sdwan/v4.1/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get all element interfaces\n      operationId: get-sdwan-v4.1-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all element interfaces (v4.1)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.1-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N1'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.1)\n      tags: [Device Configuration]\n  /sdwan/v4.1/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.1-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.1)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.1-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get element interface details (v4.1)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.1-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N1'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.1)\n      tags: [Device Configuration]\n  /sdwan/v4.10/api/interfaces/query:\n    post:\n      description: Queries db for limit number of interfaces that match query params.\n      operationId: post-sdwan-v4.10-api-interfaces-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/BaseQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceQueryResponseV4N10'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Queries db for limit number of interfaces that match query params.\n        (v4.10)\n      tags: [Device Configuration]\n  /sdwan/v4.10/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get all Interfaces\n      operationId: get-sdwan-v4.10-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N10'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all Interfaces (v4.10)\n      tags: [Device Configuration]\n    post:\n      description: Create a Interface\n      operationId: post-sdwan-v4.10-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N10'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N10'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_REQUEST_DUPLICATE_KEY}\n                  - {code: NAME_REQD}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_TYPE_UPDATE_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST}\n                  - {code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE}\n                  - {code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED}\n                  - {code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a Interface (v4.10)\n      tags: [Device Configuration]\n  /sdwan/v4.10/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete Interface\n      operationId: delete-sdwan-v4.10-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N10'}\n          description: Successful Operation\n      summary: Delete Interface (v4.10)\n      tags: [Device Configuration]\n    get:\n      description: Get Interface\n      operationId: get-sdwan-v4.10-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N10'}\n          description: Successful Operation\n      summary: Get Interface (v4.10)\n      tags: [Device Configuration]\n    put:\n      description: Update a Interface\n      operationId: put-sdwan-v4.10-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N10'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N10'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_REQUEST_DUPLICATE_KEY}\n                  - {code: NAME_REQD}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED}\n                  - {code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST}\n                  - {code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE}\n                  - {code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED}\n                  - {code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update a Interface (v4.10)\n      tags: [Device Configuration]\n  /sdwan/v4.11/api/interfaces/query:\n    post:\n      description: Queries db for limit number of interfaces that match query params.\n      operationId: post-sdwan-v4.11-api-interfaces-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/BaseQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/BaseQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Queries db for limit number of interfaces that match query params.\n        (v4.11)\n      tags: [Device Configuration]\n  /sdwan/v4.11/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get all Interfaces\n      operationId: get-sdwan-v4.11-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N11'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all Interfaces (v4.11)\n      tags: [Device Configuration]\n    post:\n      description: Create a Interface\n      operationId: post-sdwan-v4.11-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N11'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N11'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_REQUEST_DUPLICATE_KEY}\n                  - {code: NAME_REQD}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_TYPE_UPDATE_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST}\n                  - {code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE}\n                  - {code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED}\n                  - {code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_CREATE_NOT_SUPPORTED}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a Interface (v4.11)\n      tags: [Device Configuration]\n  /sdwan/v4.11/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete Interface\n      operationId: delete-sdwan-v4.11-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N11'}\n          description: Successful Operation\n      summary: Delete Interface (v4.11)\n      tags: [Device Configuration]\n    get:\n      description: Get Interface\n      operationId: get-sdwan-v4.11-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N11'}\n          description: Successful Operation\n      summary: Get Interface (v4.11)\n      tags: [Device Configuration]\n    put:\n      description: Update a Interface\n      operationId: put-sdwan-v4.11-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N11'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N11'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_REQUEST_DUPLICATE_KEY}\n                  - {code: NAME_REQD}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED}\n                  - {code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST}\n                  - {code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE}\n                  - {code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED}\n                  - {code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_TYPE_UPDATE_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_CANNOT_BE_NULL}\n                  - {code: CELLULAR_INTERFACE_PARENT_MODULE_ID_UPDATE_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_PARENT_SIM_SLOT_NUMBER_UPDATE_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_SITEWAN_NUMBER}\n                  - {code: CELLULAR_INTERFACE_CONFIG_HARDWARE_RELAY_NOTSUPPORTED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_USED_FOR_NOTSUPPORTED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_INVALID_USED_FOR_INTERNET}\n                  - {code: CELLULAR_INTERFACE_CONFIG_INVALID_USED_FOR_WAN}\n                  - {code: CELLULAR_INTERFACE_CONFIG_MTU_INVALID}\n                  - {code: CELLULAR_INTERFACE_CONFIG_DHCP_RELAY_NOTSUPPORTED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_LANSTATE_PROPOGATION_NOTSUPPORTED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_PROFILEID_INVALID_WHEN_AUTOAPN}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_APNPROFILEID_PRESENT}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN_FALSE_NO_USERNAME_BUT_PWD_EXISTS}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_MISSING_WHEN_AUTOAPN_FALSE_APNPROFILEID_NULL}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN_FALSE_INVALID_AUTH}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_MISSING_APN_NAME}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PROFILE_NAME_INVALID}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_PROFILE_ID_INVALID}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PASSWORD_INVALID}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_USERNAME_INVALID}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update a Interface (v4.11)\n      tags: [Device Configuration]\n  /sdwan/v4.12/api/interfaces/query:\n    post:\n      description: Queries db for limit number of interfaces that match query params.\n      operationId: post-sdwan-v4.12-api-interfaces-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/BaseQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/BaseQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Queries db for limit number of interfaces that match query params.\n        (v4.12)\n      tags: [Device Configuration]\n  /sdwan/v4.12/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get all Interfaces\n      operationId: get-sdwan-v4.12-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N12'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all Interfaces (v4.12)\n      tags: [Device Configuration]\n    post:\n      description: Create a Interface\n      operationId: post-sdwan-v4.12-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N12'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N12'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_REQUEST_DUPLICATE_KEY}\n                  - {code: NAME_REQD}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_TYPE_UPDATE_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST}\n                  - {code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE}\n                  - {code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED}\n                  - {code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_CREATE_NOT_SUPPORTED}\n                  - {code: INTERFACE_CONFIG_INVALID_MULTICAST_IGMP_VALUE}\n                  - {code: INTERFACE_CONFIG_INVALID_MULTICAST_IGMP_STATIC_SRC_IPV4}\n                  - {code: INTERFACE_CONFIG_INVALID_MULTICAST_IGMP_STATIC_GRP_IPV4}\n                  - {code: INTERFACE_CONFIG_INVALID_MULTICAST_DR_PRIORITY}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a Interface (v4.12)\n      tags: [Device Configuration]\n  /sdwan/v4.12/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete Interface\n      operationId: delete-sdwan-v4.12-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N12'}\n          description: Successful Operation\n      summary: Delete Interface (v4.12)\n      tags: [Device Configuration]\n    get:\n      description: Get Interface\n      operationId: get-sdwan-v4.12-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N12'}\n          description: Successful Operation\n      summary: Get Interface (v4.12)\n      tags: [Device Configuration]\n    put:\n      description: Update a Interface\n      operationId: put-sdwan-v4.12-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N12'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N12'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_REQUEST_DUPLICATE_KEY}\n                  - {code: NAME_REQD}\n                  - {code: DESCRIPTION_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_UNSUPPORTED_GRE_TYPE}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_IPSEC_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_FAIL_COUNT}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_INVALID_GRE_KEEPALIVE_INTERVAL}\n                  - {code: INTERFACE_CONFIG_SERVICE_LINK_GRE_CONFIG_REQUIRED}\n                  - {code: INTERFACE_CONFIG_UNSUPPORTED_DIRECTED_BROADCAST}\n                  - {code: INTERFACE_CONFIG_INVALID_DIRECTED_BROADCAST_CONFIG}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_EXCEEDS_LIMIT}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_UNSUPPORTED_TYPE}\n                  - {code: INTERFACE_CONFIG_PRIMARY_IP_DHCP_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_INVALID_ELEMENT_ROLE}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_NOT_SUPPORTED_LAN_FORWARDING_NOT_ENABLED}\n                  - {code: INTERFACE_CONFIG_SECONDARY_IP_USED_FOR_UNSUPPORTED}\n                  - {code: INTERFACE_CONFIG_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID}\n                  - {code: INTERFACE_CONFIG_INVALID_CONFIG_ON_HUB}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_COLLECTOR_CONTEXT_ID_NOT_ALLOWED_FOR_BYPASSPAIR_USED_FOR_PRIVATE_L2}\n                  - {code: INTERFACE_CONFIG_INVALID_IPFIX_FILTER_CONTEXT_ID_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_TYPE_UPDATE_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_CANNOT_BE_NULL}\n                  - {code: CELLULAR_INTERFACE_PARENT_MODULE_ID_UPDATE_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_PARENT_SIM_SLOT_NUMBER_UPDATE_NOT_ALLOWED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_SITEWAN_NUMBER}\n                  - {code: CELLULAR_INTERFACE_CONFIG_HARDWARE_RELAY_NOTSUPPORTED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_USED_FOR_NOTSUPPORTED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_INVALID_USED_FOR_INTERNET}\n                  - {code: CELLULAR_INTERFACE_CONFIG_INVALID_USED_FOR_WAN}\n                  - {code: CELLULAR_INTERFACE_CONFIG_MTU_INVALID}\n                  - {code: CELLULAR_INTERFACE_CONFIG_DHCP_RELAY_NOTSUPPORTED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_LANSTATE_PROPOGATION_NOTSUPPORTED}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_PROFILEID_INVALID_WHEN_AUTOAPN}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_APNPROFILEID_PRESENT}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN_FALSE_NO_USERNAME_BUT_PWD_EXISTS}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_MISSING_WHEN_AUTOAPN_FALSE_APNPROFILEID_NULL}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_AUTOAPN_FALSE_INVALID_AUTH}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_INVALID_WHEN_MISSING_APN_NAME}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PROFILE_NAME_INVALID}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_PROFILE_ID_INVALID}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_PASSWORD_INVALID}\n                  - {code: CELLULAR_INTERFACE_CONFIG_APN_CONFIG_USERNAME_INVALID}\n                  - {code: INTERFACE_CONFIG_INVALID_MULTICAST_IGMP_VALUE}\n                  - {code: INTERFACE_CONFIG_INVALID_MULTICAST_IGMP_STATIC_SRC_IPV4}\n                  - {code: INTERFACE_CONFIG_INVALID_MULTICAST_IGMP_STATIC_GRP_IPV4}\n                  - {code: INTERFACE_CONFIG_INVALID_MULTICAST_DR_PRIORITY}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update a Interface (v4.12)\n      tags: [Device Configuration]\n  /sdwan/v4.2/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get element interfaces\n      operationId: get-sdwan-v4.2-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N2'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get element interfaces (v4.2)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.2-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N2'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.2)\n      tags: [Device Configuration]\n  /sdwan/v4.2/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.2-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.2)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.2-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get element interface details (v4.2)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.2-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N2'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.2)\n      tags: [Device Configuration]\n  /sdwan/v4.3/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get element interfaces\n      operationId: get-sdwan-v4.3-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N3'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get element interfaces (v4.3)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.3-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N3'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.3)\n      tags: [Device Configuration]\n  /sdwan/v4.3/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.3-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.3)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.3-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N3'}\n          description: Successful Operation\n      summary: Get element interface details (v4.3)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.3-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N3'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.3)\n      tags: [Device Configuration]\n  /sdwan/v4.4/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get element interfaces\n      operationId: get-sdwan-v4.4-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N4'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get element interfaces (v4.4)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.4-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N4'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N4'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INTERFACE_CONFIG_INTERFACE_TYPE_NOT_SUPPORTED}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.4)\n      tags: [Device Configuration]\n  /sdwan/v4.4/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.4-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N4'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.4)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.4-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N4'}\n          description: Successful Operation\n      summary: Get element interface details (v4.4)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.4-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N4'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N4'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.4)\n      tags: [Device Configuration]\n  /sdwan/v4.5/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get element interfaces\n      operationId: get-sdwan-v4.5-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N5'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get element interfaces (v4.5)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.5-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N5'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N5'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INTERFACE_CONFIG_INTERFACE_TYPE_NOT_SUPPORTED}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.5)\n      tags: [Device Configuration]\n  /sdwan/v4.5/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.5-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N5'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.5)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.5-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N5'}\n          description: Successful Operation\n      summary: Get element interface details (v4.5)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.5-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N5'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N5'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.5)\n      tags: [Device Configuration]\n  /sdwan/v4.6/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get element interfaces\n      operationId: get-sdwan-v4.6-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N6'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get element interfaces (v4.6)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.6-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N6'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N6'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INTERFACE_CONFIG_INTERFACE_TYPE_NOT_SUPPORTED}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.6)\n      tags: [Device Configuration]\n  /sdwan/v4.6/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.6-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N6'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.6)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.6-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N6'}\n          description: Successful Operation\n      summary: Get element interface details (v4.6)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.6-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N6'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N6'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.6)\n      tags: [Device Configuration]\n  /sdwan/v4.7/api/interfaces/query:\n    post:\n      description: Query element interfaces\n      operationId: post-sdwan-v4.7-api-interfaces-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/BaseQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceQueryResponseV4N7'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query element interfaces (v4.7)\n      tags: [Device Configuration]\n  /sdwan/v4.7/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get element interfaces\n      operationId: get-sdwan-v4.7-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N7'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get element interfaces (v4.7)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.7-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N7'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N7'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INTERFACE_CONFIG_INTERFACE_TYPE_NOT_SUPPORTED}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.7)\n      tags: [Device Configuration]\n  /sdwan/v4.7/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.7-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N7'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.7)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.7-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N7'}\n          description: Successful Operation\n      summary: Get element interface details (v4.7)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.7-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N7'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N7'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.7)\n      tags: [Device Configuration]\n  /sdwan/v4.8/api/interfaces/query:\n    post:\n      description: Query element interfaces\n      operationId: post-sdwan-v4.8-api-interfaces-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/BaseQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceQueryResponseV4N8'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query element interfaces (v4.8)\n      tags: [Device Configuration]\n  /sdwan/v4.8/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get element interfaces\n      operationId: get-sdwan-v4.8-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N8'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get element interfaces (v4.8)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.8-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N8'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N8'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INTERFACE_CONFIG_INTERFACE_TYPE_NOT_SUPPORTED}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.8)\n      tags: [Device Configuration]\n  /sdwan/v4.8/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.8-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N8'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.8)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.8-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N8'}\n          description: Successful Operation\n      summary: Get element interface details (v4.8)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.8-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N8'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N8'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.8)\n      tags: [Device Configuration]\n  /sdwan/v4.9/api/interfaces/query:\n    post:\n      description: Query element interfaces\n      operationId: post-sdwan-v4.9-api-interfaces-query\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/BaseQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceQueryResponseV4N9'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query element interfaces (v4.9)\n      tags: [Device Configuration]\n  /sdwan/v4.9/api/sites/{site_id}/elements/{element_id}/interfaces:\n    get:\n      description: Get element interfaces\n      operationId: get-sdwan-v4.9-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/InterfaceV4N9'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get element interfaces (v4.9)\n      tags: [Device Configuration]\n    post:\n      description: Create an element logical interface\n      operationId: post-sdwan-v4.9-api-sites-site_id-elements-element_id-interfaces\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N9'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N9'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: ELEMENT_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INTERFACE_CONFIG_INTERFACE_TYPE_NOT_SUPPORTED}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create an element logical interface (v4.9)\n      tags: [Device Configuration]\n  /sdwan/v4.9/api/sites/{site_id}/elements/{element_id}/interfaces/{interface_id}:\n    delete:\n      description: Delete an element interface\n      operationId: delete-sdwan-v4.9-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N9'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an element interface (v4.9)\n      tags: [Device Configuration]\n    get:\n      description: Get element interface details\n      operationId: get-sdwan-v4.9-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N9'}\n          description: Successful Operation\n      summary: Get element interface details (v4.9)\n      tags: [Device Configuration]\n    put:\n      description: Provision an element interface\n      operationId: put-sdwan-v4.9-api-sites-site_id-elements-element_id-interfaces-interface_id\n      parameters:\n      - description: Site Id\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: Element Id\n        in: path\n        name: element_id\n        required: true\n        schema: {description: Element Id, type: string}\n      - description: Interface Id\n        in: path\n        name: interface_id\n        required: true\n        schema: {description: Interface Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/InterfaceScreenV4N9'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/InterfaceV4N9'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INTERFACE_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: ELEMENT_NOT_BOUND}\n                  - {code: INVALID_HOST_IP_RANGE}\n                  - {code: INTERFACE_CONFIG_GTWY_NOT_IN_SUBNET}\n                  - {code: INTERFACE_CONFIG_IP_OVERLAP}\n                  - {code: INTERFACE_CONFIG_PEER_IP_OVERLAP}\n                  - {code: SHADIGEST_ELEMENT_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Provision an element interface (v4.9)\n      tags: [Device Configuration]\ntags:\n- {name: Device Configuration}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/pan.dev@820763d86c198f9553b049962480e9c10040cdf4/-/blob/static/sase/spec/sdwan/unified/DeviceConfiguration.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/pan.dev/blob/820763d86c198f9553b049962480e9c10040cdf4/static/sase/spec/sdwan/unified/DeviceConfiguration.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"MachineInfoV2N2\": parse schema: property \"machine_state\": parse schema: at 1:224489: parse enum values: duplicate enum values: \"\\\"claim_pending\\\"\", at index 20 and 24"
}