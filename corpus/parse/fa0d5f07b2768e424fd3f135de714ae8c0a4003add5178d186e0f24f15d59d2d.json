{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/team-yaza/mozi-server"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 9112,
			"content": "openapi: 3.0.0\ninfo:\n  title: Mozi Server\n  description: Mozi Server API입니다.\n  version: 1.0.0\n\nservers:\n  - url: http://localhost:3001/api/v1\n\npaths:\n  /todos:\n    get:\n      tags:\n        - 'Todo'\n\n      summary: 사용자의 모든 Todo를 가져옵니다.\n\n      responses:\n        '200':\n          description: 성공\n\n          content:\n            application/json:\n              schema:\n                type: object\n                example:\n                  [\n                    {\n                      'id': '178dcfbc-0123-4a18-bd91-1a3b74cef47f',\n                      'userId': '2432241311',\n                      'title': 'Getting started',\n                      'description': 'what was it?',\n                      'done': false,\n                      'alarmed': false,\n                      'dueDate': '2022-10-04T20:15:00.000Z',\n                      'alarmDate': '2022-10-04T20:15:00.000Z',\n                      'locationName': '',\n                      'longitude': null,\n                      'latitude': null,\n                      'index': null,\n                      'createdAt': '2022-09-24T03:44:51.000Z',\n                      'updatedAt': '2022-09-24T03:44:51.000Z',\n                      'deletedAt': null,\n                    },\n                    {\n                      'id': '7c8d247b-ec0e-48bf-8089-49e3fb0fe21c',\n                      'userId': '2432241311',\n                      'title': 'remember the milk',\n                      'description': 'buy now',\n                      'done': false,\n                      'alarmed': false,\n                      'dueDate': '2022-10-04T20:15:00.000Z',\n                      'alarmDate': '2022-10-04T20:15:00.000Z',\n                      'locationName': '',\n                      'longitude': null,\n                      'latitude': null,\n                      'index': 2,\n                      'createdAt': '2022-09-24T03:44:34.000Z',\n                      'updatedAt': '2022-09-24T03:44:34.000Z',\n                      'deletedAt': null,\n                    },\n                    {\n                      'id': 'b54cdffb-2711-406a-bcc2-74ec02dfd80f',\n                      'userId': '2432241311',\n                      'title': 'All my base',\n                      'description': 'are belong to you',\n                      'done': false,\n                      'alarmed': false,\n                      'dueDate': '2022-10-04T20:15:00.000Z',\n                      'alarmDate': '2022-10-04T20:15:00.000Z',\n                      'locationName': '',\n                      'longitude': null,\n                      'latitude': null,\n                      'index': null,\n                      'createdAt': '2022-09-24T03:45:31.000Z',\n                      'updatedAt': '2022-09-24T03:45:31.000Z',\n                      'deletedAt': null,\n                    },\n                  ]\n\n      security:\n        - bearerAuth: []\n\n    post:\n      tags:\n        - Todo\n\n      summary: Todo를 DB에 생성하고 생성한 Todo를 가져옵니다.\n\n      requestBody:\n        description: 새로 생성할 Todo\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Todo'\n        required: true\n\n      responses:\n        '201':\n          description: 성공\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n\n      security:\n        - bearerAuth: []\n\n  /todos/{id}:\n    get:\n      tags:\n        - 'Todo'\n\n      summary: ID를 통해서 Todo를 가져옵니다.\n\n      parameters:\n        - name: id\n          in: path\n          description: 가져오려는 Todo의 ID(UUID)\n          required: true\n          schema:\n            type: string\n\n      responses:\n        '200':\n          description: '성공'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n\n        '400':\n          description: 올바르지 않은 요청\n\n        '404':\n          description: Todo를 찾을 수 없음\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoNotFound'\n\n      security:\n        - bearerAuth: []\n\n    delete:\n      tags:\n        - 'Todo'\n\n      summary: ID를 통해서 Todo를 삭제합니다.\n\n      parameters:\n        - name: id\n          in: path\n          description: 삭제하려는 Todo의 ID(UUID)\n          required: true\n          schema:\n            type: string\n\n      responses:\n        '200':\n          description: 성공\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n\n        '400':\n          description: 올바르지 않은 요청\n\n        '404':\n          description: Todo를 찾을 수 없음\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoNotFound'\n\n      security:\n        - bearerAuth: []\n\n    patch:\n      tags:\n        - 'Todo'\n\n      summary: ID를 통해서 Todo를 업데이트합니다.\n\n      parameters:\n        - name: id\n          in: path\n          description: 업데이트하려는 Todo의 ID(UUID)\n          required: true\n          type: object\n          schema:\n            type: string\n\n      requestBody:\n        description: 새로 업데이트할 Todo\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Todo'\n        required: true\n\n      responses:\n        '201':\n          description: 성공\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n\n        '400':\n          description: 올바르지 않은 요청\n\n        '404':\n          description: Todo를 찾을 수 없음\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoNotFound'\n\n      security:\n        - bearerAuth: []\n\n  /location/nearby:\n    post:\n      tags:\n        - 'location'\n\n      summary: 경위도와 주어진 키워드를 기준으로 장소를 검색해서 가져옵니다.\n\n      requestBody:\n        description: 경위도와 키워드\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LocationSearch'\n        required: true\n\n      responses:\n        '200':\n          description: 성공\n          content:\n            application/json:\n              schema:\n                type: object\n                example:\n                  [\n                    { 'name': '스타벅스 선릉역점', 'location': [127.0484458, 37.5039656] },\n                    { 'name': '스타벅스 선릉동신빌딩R점', 'location': [127.050481, 37.5052818] },\n                    { 'name': '스타벅스 선릉로점', 'location': [127.0467617, 37.5049945] },\n                  ]\n\n        '400':\n          description: 올바르지 않은 요청\n\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 2432241311\n        name:\n          type: string\n          example: 김상근\n        email:\n          type: string\n        password:\n          type: string\n        thumbnailImage:\n          type: string\n          example: http://k.kakaocdn.net/dn/JzzMA/btrzvznKm3k/TgW0XNHcLGwJjJXXiidjp0/img_110x110.jpg\n        profileImage:\n          type: string\n          example: http://k.kakaocdn.net/dn/JzzMA/btrzvznKm3k/TgW0XNHcLGwJjJXXiidjp0/img_640x640.jpg\n        todos:\n          type: Todo[]\n\n    Todo:\n      type: object\n      properties:\n        id:\n          type: string\n          example: ea4970aa-c3bc-4e89-90f9-2293501978bd\n        userId:\n          type: string\n          example: 2432241311\n        title:\n          type: string\n          example: All my base\n        description:\n          type: string\n          example: are belong to you\n        done:\n          type: boolean\n          example: false\n        alarmed:\n          type: boolean\n          example: false\n        dueDate:\n          type: string\n          format: date-time\n          example: '2022-10-04T20:15:00.000Z'\n        alarmDate:\n          type: string\n          format: date-time\n          example: '2022-10-04T20:15:00.000Z'\n        locationName:\n          type: string\n          example: 선릉역\n        longitude:\n          type: number\n          example: 127.04894823187121\n        latitude:\n          type: number\n          example: 37.50466496606413\n        index:\n          type: number\n          example: 1\n\n    TodoNotFound:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Todo not found\n\n    LocationSearch:\n      type: object\n      properties:\n        keyword:\n          type: string\n          example: 스타벅스\n        longitude:\n          type: number\n          example: 127.04894823187121\n        latitude:\n          type: number\n          example: 37.50466496606413\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/team-yaza/mozi-server@85163da546c58ec8ffc02045f629fd57491b6afe/-/blob/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/team-yaza/mozi-server/blob/85163da546c58ec8ffc02045f629fd57491b6afe/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"User\": resolve \"#/components/schemas/User\": property \"todos\": at swagger.yaml:278:17: type: unexpected schema type: \"Todo[]\""
}