{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/contract-p.fit/1.0/openapi.yaml",
			"byteSize": 10443,
			"content": "openapi: 3.0.0\nservers:\n  - url: //cfportal.contract-p.fit/api\nx-hasEquivalentPaths: true\ninfo:\n  description: \"This describes the Contract.fit product API. If you don't have authorization keys yet, please request them there: https://contract.fit/contact-us\"\n  title: Contract.fit API\n  version: \"1.0\"\n  x-apisguru-categories:\n    - text\n  x-origin:\n    - format: openapi\n      url: https://cfportal.contract-p.fit/swagger.json\n      version: \"3.0\"\n  x-providerName: contract-p.fit\nsecurity:\n  - basic: []\n  - token: []\ntags:\n  - description: File manipulation endpoint\n    name: documents\npaths:\n  /documents/:\n    post:\n      description: |-\n        This endpoint is a simplified version of the upload document to inbox one - synchronous mode.\n\n        The upload file will be upload to the given inbox if provided, else fallback to the **invoice** inbox.\n        The file will be processed synchronously, ie the request will blocks until the document was processed\n        *or* until it timeout; in this case the document might **not** be correctly processed.\n\n\n        For a more reliable processing use the /documents/{inbox_id} endpoint in async mode\n\n\n        **Permission required:** upload\n      operationId: post_simple_documents_resource\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: File to process\n                  format: binary\n                  type: string\n                inbox_id:\n                  description: Inbox to use. Default to the **invoice** inbox\n                  type: string\n                key_value_flag:\n                  default: true\n                  description: If true the result will only contains mapping of prediction = value\n                  type: boolean\n              required:\n                - file\n              type: object\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"403\":\n          description: Permission insufficient\n      summary: Upload a new document\n      tags:\n        - documents\n  \"/documents/{document_id}\":\n    delete:\n      description: |-\n        Completely delete the document.\n\n        **WARNING** This removes the document from our system: it will not be recoverable\n\n\n        **Permission required:** review\n      operationId: delete_document_resource\n      responses:\n        \"200\":\n          description: Success\n        \"403\":\n          description: Permission insufficient\n      summary: Delete the document\n      tags:\n        - documents\n    get:\n      description: |-\n        Simple endpoint that will fetch the given document\n\n        **Permission required:** review\n      operationId: get_document_resource\n      parameters:\n        - description: An optional fields mask\n          in: header\n          name: X-Fields\n          schema:\n            format: mask\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentModelGet\"\n          description: Success\n        \"403\":\n          description: Permission insufficient\n      summary: Get the document\n      tags:\n        - documents\n    parameters:\n      - in: path\n        name: document_id\n        required: true\n        schema:\n          type: string\n  \"/documents/{document_id}/original_file\":\n    get:\n      description: |-\n        Return the document original file, as attachment.\n\n        **Permission required:** review\n      operationId: get_document_original_file_resource\n      responses:\n        \"200\":\n          description: File attached\n        \"403\":\n          description: Permission insufficient\n      summary: Get document original file\n      tags:\n        - documents\n    parameters:\n      - in: path\n        name: document_id\n        required: true\n        schema:\n          type: string\n  \"/documents/{document_id}/page/{page_range}\":\n    get:\n      operationId: get_document_page_image_resource\n      responses:\n        \"200\":\n          description: Success\n        \"403\":\n          description: Permission insufficient\n      tags:\n        - documents\n    parameters:\n      - description: The number of the page, starting from 0. A range of pages, separated by \":\" is also allowed to return a zip file.\n        in: path\n        name: page_range\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: document_id\n        required: true\n        schema:\n          type: string\n  \"/documents/{document_id}/text\":\n    get:\n      description: |-\n        Return the optimal text for the document; will either be the OCR text, the native text,\n        the raw text or a translated version.\n\n        **Permission required:** review\n      operationId: get_document_text_resource\n      responses:\n        \"403\":\n          description: Permission insufficient\n      summary: Get the document text\n      tags:\n        - documents\n    parameters:\n      - in: path\n        name: document_id\n        required: true\n        schema:\n          type: string\n  \"/documents/{inbox_id}\":\n    parameters:\n      - in: path\n        name: inbox_id\n        required: true\n        schema:\n          type: string\n    post:\n      description: |-\n        This endpoint uploads a new file to the given inbox and will process the file.\n\n        ## Upload mode: sync\n\n        When sync=true (default), the call will block and wait for the processing to complete.\n\n        If you have a custom output configured (this is set by Contract Fit team),\n        passing mimetype *application/vnd.cf.custom* will allow you to get the custom output formatted result\n\n        Since it might yield inconsistent results if a timeout is raised while waiting,\n        it is recommended to use the **async** mode.\n\n        ## Upload mode: async\n\n        When sync=false, the call will schedule the processing and return without waiting for completion.\n        It will return the document ID, so that the processed document can be retrieved at a later date.\n\n        **Permission required:** upload\n      operationId: post_documents_simple_api_resource\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: File to process\n                  format: binary\n                  type: string\n                hints:\n                  description: 'Additional hints as a dictionary. Example: {\"VAT_number\":{\"blacklist\":\"XXXX.XXX.XXX\", \"whitelist\": [\"YYYY.YYY.YYY\", \"ZZZZ.ZZZ.ZZZ\"]}}'\n                  type: string\n                key_value_flag:\n                  default: false\n                  description: If true the result will only contains mapping of prediction = value\n                  type: boolean\n                sync:\n                  default: true\n                  description: Flag enable sync or async processing\n                  type: boolean\n              required:\n                - file\n              type: object\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"403\":\n          description: Permission insufficient\n        \"415\":\n          description: Image Recognition Error\n      summary: Upload a new doc to the inbox\n      tags:\n        - documents\ncomponents:\n  responses:\n    Exception:\n      description: Forward a BUIserverException to the final user\n    MaskError:\n      description: When any error occurs on mask\n    ParseError:\n      description: When a mask can't be parsed\n  schemas:\n    DocumentModelGet:\n      properties:\n        escalate:\n          $ref: \"#/components/schemas/StateModelGet\"\n        feedback:\n          type: object\n        files:\n          type: object\n        flag_for_review:\n          type: boolean\n        id:\n          type: string\n        inbox:\n          example: abcdef123456789abcdef123\n          maxLength: 24\n          minLength: 24\n          pattern: \"[A-z0-9]\"\n          type: string\n        last_version:\n          type: string\n        lock:\n          $ref: \"#/components/schemas/StateModelGet\"\n        meta_information:\n          type: object\n        original_filename:\n          type: string\n        page_count:\n          type: integer\n        prediction:\n          type: object\n        reject:\n          $ref: \"#/components/schemas/StateModelGet\"\n        status_data:\n          $ref: \"#/components/schemas/StatusDataModel\"\n        submitted:\n          $ref: \"#/components/schemas/StateModelGet\"\n        timings:\n          $ref: \"#/components/schemas/TimingsModelGet\"\n        usage_data:\n          type: object\n        versions:\n          items:\n            type: object\n          type: array\n      required:\n        - id\n        - inbox\n        - original_filename\n        - page_count\n      type: object\n    StateModelGet:\n      properties:\n        by:\n          example: abcdef123456789abcdef123\n          maxLength: 24\n          minLength: 24\n          pattern: \"[A-z0-9]\"\n          type: string\n        since:\n          format: date-time\n          type: string\n        value:\n          type: boolean\n      type: object\n    StatusDataModel:\n      properties:\n        archived:\n          type: boolean\n        data:\n          type: boolean\n        escalate:\n          type: boolean\n        feedback:\n          type: boolean\n        lock:\n          type: boolean\n        ready_accepted:\n          type: boolean\n        ready_attempts:\n          type: integer\n        reject:\n          type: boolean\n        reject_accepted:\n          type: boolean\n        reject_attempts:\n          type: integer\n        sampling:\n          type: boolean\n        submit_accepted:\n          type: boolean\n        submit_attempts:\n          type: integer\n        success:\n          type: boolean\n      type: object\n    TimingsModelGet:\n      properties:\n        done_time:\n          format: date-time\n          type: string\n        feedback_time:\n          format: date-time\n          type: string\n        processing_period:\n          type: number\n        receive_time:\n          format: date-time\n          type: string\n        start_time:\n          format: date-time\n          type: string\n      type: object\n  securitySchemes:\n    basic:\n      description: username and password\n      scheme: basic\n      type: http\n    token:\n      in: header\n      name: Authorization\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/contract-p.fit/1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/contract-p.fit/1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/documents/{inbox_id}\": at 1:6429: duplicate path: \"/documents/{inbox_id}\""
}