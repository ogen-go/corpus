{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "data.gov-3.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/data.gov-3.0-swagger.yaml",
			"byteSize": 13195,
			"content": "openapi: 3.0.0\ninfo:\n  description: Provides public users access to federal regulatory content.\n  title: Regulations.gov\n  version: \"3.0\"\n  x-logo:\n    url: http://regulationsgov.github.io/developers/static/img/logo.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.11\n      format: swagger\n      url: http://regulationsgov.github.io/developers/api-docs.json\n      version: \"1.2\"\n  x-providerName: data.gov\nexternalDocs:\n  url: http://regulationsgov.github.io/developers/\nsecurity:\n  - api_key: []\ntags:\n  - description: Operations about Dockets\n    name: dockets\n  - description: Operations about Documents\n    name: documents\npaths:\n  \"/docket.{response_format}\":\n    get:\n      operationId: docket\n      parameters:\n        - description: Format\n          in: path\n          name: response_format\n          required: true\n          schema:\n            type: string\n            enum:\n              - json\n              - xml\n            default: json\n        - description: Docket ID\n          in: query\n          name: docketId\n          required: true\n          schema:\n            type: string\n            default: EPA-HQ-OAR-2011-0028\n      responses:\n        \"200\":\n          description: No response was specified\n        \"400\":\n          description: Bad request. The content is either empty or has been withdrawn.\n        \"404\":\n          description: File not found.\n      summary: Returns Docket information\n      tags:\n        - dockets\n  \"/document.{response_format}\":\n    get:\n      operationId: document\n      parameters:\n        - description: Format\n          in: path\n          name: response_format\n          required: true\n          schema:\n            type: string\n            enum:\n              - json\n              - xml\n            default: json\n        - description: FDMS Document ID\n          in: query\n          name: documentId\n          required: false\n          schema:\n            type: string\n            default: EPA-HQ-OAR-2011-0028-0108\n        - description: Federal Register Document Number\n          in: query\n          name: federalRegisterNumber\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n        \"400\":\n          description: Bad request. The document is only available for comment via\n            Regulations.gov.\n        \"404\":\n          description: File not found.\n      summary: Returns Document information\n      tags:\n        - documents\n  \"/documents.{response_format}\":\n    get:\n      description: This API allows users to build a query based on any of the parameters\n        below.  If you have trouble building queries, you may wish to try them\n        through the \u003ca\n        href=\"http://www.regulations.gov/#!advancedSearch\"\u003eAdvanced Search\u003c/a\u003e\n        page on the Regulations.gov website.\n      operationId: documents\n      parameters:\n        - description: Format\n          in: path\n          name: response_format\n          required: true\n          schema:\n            type: string\n            enum:\n              - json\n              - xml\n            default: json\n        - description: \"Counts Only: \u003cul\u003e\u003cli\u003e1 (will return only the document count for a\n            search query)\u003c/li\u003e\u003cli\u003e0 (will return documents as well)\u003c/li\u003e\u003c/ul\u003e\"\n          in: query\n          name: countsOnly\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n        - description: \"Encoded: \u003cul\u003e\u003cli\u003e1 (will accept Regulations.gov style encoded\n            parameters)\u003c/li\u003e\u003cli\u003e0 (will not accept such encoded\n            parameters)\u003c/li\u003e\u003c/ul\u003e\"\n          in: query\n          name: encoded\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n        - description: Keyword(s)\n          in: query\n          name: s\n          required: false\n          schema:\n            type: string\n        - description: \"Document Type: \u003cul\u003e\u003cli\u003eN: Notice\u003c/li\u003e\u003cli\u003ePR: Proposed\n            Rule\u003c/li\u003e\u003cli\u003eFR: Rule\u003c/li\u003e\u003cli\u003eO: Other\u003c/li\u003e\u003cli\u003eSR: Supporting \u0026\n            Related Material\u003c/li\u003e\u003cli\u003ePS: Public Submission\u003c/li\u003e\u003c/ul\u003e\"\n          in: query\n          name: dct\n          required: false\n          schema:\n            type: string\n            enum:\n              - N\n              - PR\n              - FR\n              - O\n              - SR\n              - PS\n        - description: Valid Docket ID (ex. SEC-2012-0044)\n          in: query\n          name: dktid\n          required: false\n          schema:\n            type: string\n        - description: \"Docket Type: \u003cul\u003e\u003cli\u003eR: Rulemaking\u003c/li\u003e\u003cli\u003eN:\n            Nonrulemaking\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eA Docket Type is either Rulemaking or\n            Nonrulemaking. A Rulemaking docket includes the type of regulation\n            that establishes a rule. While a Non-Rulemaking docket does not\n            include a rule.\u003c/p\u003e\"\n          in: query\n          name: dkt\n          required: false\n          schema:\n            type: string\n            enum:\n              - N\n              - R\n        - description: \"Comment Period: \u003cul\u003e\u003cli\u003eO: Open\u003c/li\u003e\u003cli\u003eC: Closed\u003c/li\u003e\u003c/ul\u003e\"\n          in: query\n          name: cp\n          required: false\n          schema:\n            type: string\n            enum:\n              - O\n              - C\n        - description: \"Federal Agency: List of accepted Federal Agency values. This field\n            allows multiple values. Ex. a=FMCSA%252BEPA%252BFDA\"\n          in: query\n          name: a\n          required: false\n          schema:\n            type: string\n        - description: Results Per Page 10, 25, 100, 500, 1,000.  Results per page may not\n            exceed 1,000.\n          in: query\n          name: rpp\n          required: false\n          schema:\n            type: string\n            enum:\n              - \"10\"\n              - \"25\"\n              - \"100\"\n              - \"500\"\n              - \"1000\"\n        - description: \"Enter the page offset (always starts with 0). This is used in\n            conjunction with results per page to provide large data sets. For\n            example, if a search produces 82 results and the result per page is\n            set to 25, this will generate 4 pages. 3 pages will have 25 results\n            and the last page will have 7 results. Page offset values for each\n            page will be: \u003cpre\u003ePage 1: po=0 Page 2: po=25 Page 3: po=50 Page 4:\n            po=75\u003c/pre\u003e The total number of pages is [total results/results per\n            page] and page offset for page X is [X-1 * results per page]\"\n          in: query\n          name: po\n          required: false\n          schema:\n            type: integer\n        - description: \"Comment Period Closing Soon: \u003cul\u003e\u003cli\u003e0 (closing today)\u003c/li\u003e\u003cli\u003e3\n            (closing within 3 days)\u003c/li\u003e\u003cli\u003e15 (closing within 15\n            days)\u003c/li\u003e\u003cli\u003e30 (closing within 30 days)\u003c/li\u003e\u003cli\u003e90 (closing within\n            90 days)\u003c/li\u003e\u003c/ul\u003e\"\n          in: query\n          name: cs\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 3\n              - 15\n              - 30\n              - 90\n        - description: \"Newly Posted: \u003cul\u003e\u003cli\u003e0 (posted today)\u003c/li\u003e\u003cli\u003e3 (posted within\n            last 3 days)\u003c/li\u003e\u003cli\u003e15 (posted within last 15 days)\u003c/li\u003e\u003cli\u003e30\n            (posted within last 30 days)\u003c/li\u003e\u003cli\u003e90 (posted within last 90\n            days)\u003c/li\u003e\u003c/ul\u003e  For periods of time beyond 90-days, please use a\n            date range with the Posted Date parameter.\"\n          in: query\n          name: np\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 3\n              - 15\n              - 30\n              - 90\n        - description: \"Comment Period Start Date: Enter a date in the form of MM/DD/YY.\n            Note: If the Comment Period End Date is also provided, then ensure\n            the Comment Period Start date is earlier.\"\n          in: query\n          name: cmsd\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: \"Comment Period End Date: Enter a date in the form of MM/DD/YY.\n            Note: If the Comment Period Start Date is also provided, then ensure\n            the Comment Period End date is after.\u003cbr/\u003e* Comment Period Start and\n            End Dates are mutually exclusive with the 'closing soon' parameter.\n            If both are provided, 'closing soon' will be ignored.\"\n          in: query\n          name: cmd\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: \"Creation Date: Enter a date in the form of MM/DD/YY. Accepts a\n            single date or a date range. Ex. \u003ccode\u003ecrd=11/06/13-03/06/14\u003c/code\u003e\"\n          in: query\n          name: crd\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: \"Received Date: Enter a date in the form of MM/DD/YY. Accepts a\n            single date or a date range. Ex. \u003ccode\u003erd=11/06/13-03/06/14\u003c/code\u003e\"\n          in: query\n          name: rd\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: \"Posted Date: Enter a date in the form of MM/DD/YY. Accepts a single\n            date or a date range. Ex. \u003ccode\u003epd=11/06/13-03/06/14\u003c/code\u003e\"\n          in: query\n          name: pd\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: \"Document Category: \u003cul\u003e\u003cli\u003eAD (Aerospace and Transportation)\u003c/li\u003e\n            \u003cli\u003eAEP (Agriculture, Environment, and Public Lands)\u003c/li\u003e \u003cli\u003eBFS\n            (Banking and Financial)\u003c/li\u003e \u003cli\u003eCT (Commerce and\n            International)\u003c/li\u003e \u003cli\u003eLES (Defense, Law Enforcement, and\n            Security)\u003c/li\u003e \u003cli\u003eEELS (Education, Labor, Presidential, and\n            Government Services)\u003c/li\u003e \u003cli\u003eEUMM (Energy, Natural Resources, and\n            Utilities)\u003c/li\u003e \u003cli\u003eHCFP (Food Safety, Health, and\n            Pharmaceutical)\u003c/li\u003e \u003cli\u003ePRE (Housing, Development, and Real\n            Estate)\u003c/li\u003e \u003cli\u003eITT (Technology and Telecommunications)\u003c/li\u003e\u003c/ul\u003e\"\n          in: query\n          name: cat\n          required: false\n          schema:\n            type: string\n            enum:\n              - AD\n              - AEP\n              - BFS\n              - CT\n              - LES\n              - EELS\n              - EUMM\n              - HCFP\n              - PRE\n              - ITT\n        - description: \"Sort By: \u003cul\u003e\u003cli\u003edocketId (Docket ID)\u003c/li\u003e\u003cli\u003edocId (Document\n            ID)\u003c/li\u003e\u003cli\u003etitle (Title)\u003c/li\u003e\u003cli\u003epostedDate (Posted\n            Date)\u003c/li\u003e\u003cli\u003eagency (Agency)\u003c/li\u003e\u003cli\u003edocumentType (Document\n            Type)\u003c/li\u003e\u003cli\u003esubmitterName (Submitter Name)\u003c/li\u003e\u003cli\u003eorganization\n            (Organization)\u003c/li\u003e\u003c/ul\u003e Sort Order is REQUIRED if this parameter is\n            included.\"\n          in: query\n          name: sb\n          required: false\n          schema:\n            type: string\n            enum:\n              - docketId\n              - docId\n              - title\n              - postedDate\n              - agency\n              - documentType\n              - submitterName\n              - organization\n        - description: \"Sort Order: \u003cul\u003e\u003cli\u003eASC: Ascending\u003c/li\u003e\u003cli\u003eDESC:\n            Descending\u003c/li\u003e\u003c/ul\u003e\"\n          in: query\n          name: so\n          required: false\n          schema:\n            type: string\n            enum:\n              - ASC\n              - DESC\n        - description: \"Docket Subtype: Only one docket subtype at a time may be selected.\n            One or more agency values must be part of the request. Only values\n            valid for the selected agency will be returned.\"\n          in: query\n          name: dktst\n          required: false\n          schema:\n            type: string\n        - description: \"Docket Sub-subtype: Only one docket sub-subtype at a time may be\n            selected. One or more agency values must be part of the request.\n            Only values valid for the selected agency will be returned.\"\n          in: query\n          name: dktst2\n          required: false\n          schema:\n            type: string\n        - description: \"Document Subtype: Single or multiple document subtypes may be\n            included.  Multiple values should be passed as follows:\n            \u003ccode\u003edocst=%20Certificate+of+Service%252BCorrespondence\u003c/code\u003e\"\n          in: query\n          name: docst\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n        \"400\":\n          description: Bad request. The document is only available for comment via\n            Regulations.gov.\n        \"404\":\n          description: File not found.\n      summary: Search for Documents\n      tags:\n        - documents\nservers:\n  - url: https://api.data.gov/regulations/v3\ncomponents:\n  securitySchemes:\n    api_key:\n      description: API Key\n      in: query\n      name: api_key\n      type: apiKey\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/data.gov-3.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/data.gov-3.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/documents.{response_format}\": at 1:2070: get: operation \"documents\": at 1:2077: parameters: parse parameter \"dct\": at 1:3264: at 1:3653: schema: at 1:3653: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}