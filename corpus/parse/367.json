{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/42Crunch/vscode-openapi"
		},
		"file": {
			"name": "petstore-v3.yaml",
			"path": "tests/petstore-v3.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - \u0026anchor3 pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          headers: \u0026anchor5\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \u0026anchor4 \"#/components/schemas/Error\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - *anchor3\n      responses:\n        '201':\n          description: Null response\n          headers: *anchor5\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: *anchor4\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - *anchor3\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid requestt\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: *anchor4\ncomponents:\n  schemas:\n    Pet: \u0026anchor1\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id: \u0026anchor2\n          type: integer\n          format: int64\n          maximum: 9007199254740991\n          minimum: 1.000099\n        name:\n          type: string\n        tag:\n          type: string\n    A:\n      \u003c\u003c: *anchor1\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          \u003c\u003c: *anchor2\n          maximum: 9007_1992_5474_0991\n          minimum: 6.003e+23\n        message:\n          type: string\n"
		}
	},
	"Error": "callback: json: cannot unmarshal number 1.000099 into Go struct field Schema.minimum of type int64"
}