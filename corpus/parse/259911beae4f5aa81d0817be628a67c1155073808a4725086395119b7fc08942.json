{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "x509certificate.json",
			"size": 0,
			"path": "openapi3_autogen/x509certificate.json",
			"byteSize": 4580,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"x509certificate\": {\n        \"description\": \"This API allows you to retrieve an client certificate for API authentication.\",\n        \"properties\": {\n          \"CSR\": {\n            \"description\": \"Contains the Certificate Signing Request (CSR) as a PEM-encoded string.\",\n            \"example\": \"-----BEGIN CERTIFICATE REQUEST-----\\nMIICvDCCAaQCAQAwdzELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFV0YWgxDzANBgNV\\nBAcMBkxpbmRvbjEWMBQGA1UECgwNRGlnaUNlcnQgSW5jLjERMA8GA1UECwwIRGln\\naUNlcnQxHTAbBgNVBAMMFGV4YW1wbGUuZGlnaWNlcnQuY29tMIIBIjANBgkqhkiG\\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8+To7d+2kPWeBv/orU3LVbJwDrSQbeKamCmo\\nwp5bqDxIwV20zqRb7APUOKYoVEFFOEQs6T6gImnIolhbiH6m4zgZ/CPvWBOkZc+c\\n1Po2EmvBz+AD5sBdT5kzGQA6NbWyZGldxRthNLOs1efOhdnWFuhI162qmcflgpiI\\nWDuwq4C9f+YkeJhNn9dF5+owm8cOQmDrV8NNdiTqin8q3qYAHHJRW28glJUCZkTZ\\nwIaSR6crBQ8TbYNE0dc+Caa3DOIkz1EOsHWzTx+n0zKfqcbgXi4DJx+C1bjptYPR\\nBPZL8DAeWuA8ebudVT44yEp82G96/Ggcf7F33xMxe0yc+Xa6owIDAQABoAAwDQYJ\\nKoZIhvcNAQEFBQADggEBAB0kcrFccSmFDmxox0Ne01UIqSsDqHgL+XmHTXJwre6D\\nhJSZwbvEtOK0G3+dr4Fs11WuUNt5qcLsx5a8uk4G6AKHMzuhLsJ7XZjgmQXGECpY\\nQ4mC3yT3ZoCGpIXbw+iP3lmEEXgaQL0Tx5LFl/okKbKYwIqNiyKWOMj7ZR/wxWg/\\nZDGRs55xuoeLDJ/ZRFf9bI+IaCUd1YrfYcHIl3G87Av+r49YVwqRDT0VDV7uLgqn\\n29XI1PpVUNCPQGn9p/eX6Qo7vpDaPybRtA2R7XLKjQaF9oXWeCUqy1hvJac9QFO2\\n97Ob1alpHPoZ7mWiEuJwjBPii6a9M9G30nUo39lBi1w=\\n-----END CERTIFICATE REQUEST-----\",\n            \"type\": \"string\"\n          },\n          \"ID\": {\n            \"description\": \"ID contains the identifier of the certificate.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"certificate\": {\n            \"description\": \"Certificate contains the certificate data in PEM format.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"expirationDate\": {\n            \"description\": \"ExpirationDate contains the requested expiration date.\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"extensions\": {\n            \"description\": \"Extensions to add to the certificate. It must contains ASN1-encoded bytes,\\nthemselves encoded in base64.\",\n            \"type\": \"string\"\n          },\n          \"signer\": {\n            \"default\": \"Public\",\n            \"description\": \"Selects what CA should sign the certificate.\",\n            \"enum\": [\n              \"Public\",\n              \"Namespace\",\n              \"System\"\n            ]\n          },\n          \"signerID\": {\n            \"description\": \"Selects the ID of the CA that should sign the certificate when signer is set to\\nNamespace.\",\n            \"type\": \"string\"\n          },\n          \"subjectOverride\": {\n            \"$ref\": \"./pkixname#/components/schemas/pkixname\"\n          },\n          \"unrevocable\": {\n            \"description\": \"If set to true, the certificate is considered short lived and it will not be\\npossible to revoke it.\",\n            \"type\": \"boolean\"\n          },\n          \"usage\": {\n            \"default\": \"Client\",\n            \"description\": \"Usage defines the requested key usage.\",\n            \"enum\": [\n              \"Client\",\n              \"Server\",\n              \"ServerClient\"\n            ]\n          }\n        },\n        \"required\": [\n          \"CSR\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"x509certificate\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/x509certificates\": {\n      \"post\": {\n        \"description\": \"Creates a new X.509 certificate.\",\n        \"operationId\": \"create-a-new-x509certificate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/x509certificate\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/x509certificate\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"internal/x509\",\n          \"barret\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'internal/x509'\",\n      \"name\": \"internal/x509\"\n    },\n    {\n      \"description\": \"This tag is for package 'barret'\",\n      \"name\": \"barret\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "parse: parse spec: paths: /x509certificates: post: operation \"create-a-new-x509certificate\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"#/components/schemas/x509certificate\": parse schema: subjectOverride: parse schema: reference \"./pkixname#/components/schemas/pkixname\": resolve reference \"./pkixname#/components/schemas/pkixname\": invalid schema reference \"./pkixname#/components/schemas/pkixname\""
}