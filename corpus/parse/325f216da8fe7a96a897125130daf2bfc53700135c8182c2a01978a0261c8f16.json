{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pglass/py-openapi-schema-to-json-schema"
		},
		"file": {
			"name": "doc.yaml",
			"size": 0,
			"path": "tests/to_jsonschema/schemas/doc.yaml",
			"byteSize": 141730,
			"content": "openapi: 3.0.3\ninfo:\n  title: Django Oscar API\n  version: 0.0.0\n  description: Backend of Oscar API generated with drf-spectacular\npaths:\n  /auth/convert-token/:\n    post:\n      operationId: auth_convert_token_create\n      description: |-\n        Implements an endpoint to convert a provider token to an access token\n\n        The endpoint is used in the following flows:\n\n        * Authorization code\n        * Client credentials\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n          multipart/form-data:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /auth/invalidate-sessions/:\n    post:\n      operationId: auth_invalidate_sessions_create\n      description: ''\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n          multipart/form-data:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /auth/revoke-token/:\n    post:\n      operationId: auth_revoke_token_create\n      description: Implements an endpoint to revoke access or refresh tokens\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n          multipart/form-data:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /auth/token/:\n    post:\n      operationId: auth_token_create\n      description: |-\n        Implements an endpoint to provide access tokens\n\n        The endpoint is used in the following flows:\n\n        * Authorization code\n        * Password\n        * Client credentials\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n          multipart/form-data:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /oscarapi/:\n    get:\n      operationId: oscarapi_retrieve\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /oscarapi/basket/:\n    get:\n      operationId: oscarapi_basket_retrieve\n      description: |-\n        Api for retrieving a user's basket.\n\n        GET:\n        Retrieve your basket.\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n  /oscarapi/basket/add-product/:\n    post:\n      operationId: oscarapi_basket_add_product_create\n      description: |-\n        Add a certain quantity of a product to the basket.\n\n        POST(url, quantity)\n        {\n            \"url\": \"http://testserver.org/oscarapi/products/209/\",\n            \"quantity\": 6\n        }\n\n        If you've got some options to configure for the product to add to the\n        basket, you should pass the optional ``options`` property:\n        {\n            \"url\": \"http://testserver.org/oscarapi/products/209/\",\n            \"quantity\": 6,\n            \"options\": [{\n                \"option\": \"http://testserver.org/oscarapi/options/1/\",\n                \"value\": \"some value\"\n            }]\n        }\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddProduct'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AddProduct'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n  /oscarapi/basket/add-product{format}:\n    post:\n      operationId: oscarapi_basket_add_product{format}_create\n      description: |-\n        Add a certain quantity of a product to the basket.\n\n        POST(url, quantity)\n        {\n            \"url\": \"http://testserver.org/oscarapi/products/209/\",\n            \"quantity\": 6\n        }\n\n        If you've got some options to configure for the product to add to the\n        basket, you should pass the optional ``options`` property:\n        {\n            \"url\": \"http://testserver.org/oscarapi/products/209/\",\n            \"quantity\": 6,\n            \"options\": [{\n                \"option\": \"http://testserver.org/oscarapi/options/1/\",\n                \"value\": \"some value\"\n            }]\n        }\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddProduct'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AddProduct'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n  /oscarapi/basket/shipping-methods/:\n    get:\n      operationId: oscarapi_basket_shipping_methods_retrieve\n      description: |-\n        Get the available shipping methods and their cost for this order.\n\n        GET:\n        A list of shipping method details and the prices.\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShippingAddress'\n          description: ''\n    post:\n      operationId: oscarapi_basket_shipping_methods_create\n      description: |-\n        GET:\n        Retrieve shipping methods available to the user, basket, request combination\n\n        POST(shipping_address):\n        {\n            \"country\": \"http://127.0.0.1:8000/oscarapi/countries/NL/\",\n            \"first_name\": \"Henk\",\n            \"last_name\": \"Van den Heuvel\",\n            \"line1\": \"Roemerlaan 44\",\n            \"line2\": \"\",\n            \"line3\": \"\",\n            \"line4\": \"Kroekingen\",\n            \"notes\": \"Niet STUK MAKEN OK!!!!\",\n            \"phone_number\": \"+31 26 370 4887\",\n            \"postcode\": \"7777KK\",\n            \"state\": \"Gerendrecht\",\n            \"title\": \"Mr\"\n        }\n\n        Post a shipping_address if your shipping methods are dependent on the\n        address.\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShippingAddress'\n          multipart/form-data:\n            schema:\n              type: string\n              nullable: true\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShippingAddress'\n          description: ''\n  /oscarapi/basket/shipping-methods{format}:\n    get:\n      operationId: oscarapi_basket_shipping_methods{format}_retrieve\n      description: |-\n        Get the available shipping methods and their cost for this order.\n\n        GET:\n        A list of shipping method details and the prices.\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: string\n                nullable: true\n          description: ''\n    post:\n      operationId: oscarapi_basket_shipping_methods{format}_create\n      description: |-\n        GET:\n        Retrieve shipping methods available to the user, basket, request combination\n\n        POST(shipping_address):\n        {\n            \"country\": \"http://127.0.0.1:8000/oscarapi/countries/NL/\",\n            \"first_name\": \"Henk\",\n            \"last_name\": \"Van den Heuvel\",\n            \"line1\": \"Roemerlaan 44\",\n            \"line2\": \"\",\n            \"line3\": \"\",\n            \"line4\": \"Kroekingen\",\n            \"notes\": \"Niet STUK MAKEN OK!!!!\",\n            \"phone_number\": \"+31 26 370 4887\",\n            \"postcode\": \"7777KK\",\n            \"state\": \"Gerendrecht\",\n            \"title\": \"Mr\"\n        }\n\n        Post a shipping_address if your shipping methods are dependent on the\n        address.\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n          nullable: true\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShippingAddress'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ShippingAddress'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShippingAddress'\n          description: ''\n  /oscarapi/baskets/:\n    get:\n      operationId: oscarapi_baskets_list\n      description: Retrieve all baskets that belong to the current (authenticated)\n        user.\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Basket'\n          description: ''\n  /oscarapi/baskets/{basket_pk}/lines/{line_pk}/lineattributes/{id}/:\n    get:\n      operationId: oscarapi_baskets_lines_lineattributes_retrieve\n      description: ''\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Line attribute.\n        schema:\n          type: integer\n      - name: line_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineAttribute'\n          description: ''\n    put:\n      operationId: oscarapi_baskets_lines_lineattributes_update\n      description: ''\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Line attribute.\n        schema:\n          type: integer\n      - name: line_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LineAttribute'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/LineAttribute'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineAttribute'\n          description: ''\n    patch:\n      operationId: oscarapi_baskets_lines_lineattributes_partial_update\n      description: ''\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Line attribute.\n        schema:\n          type: integer\n      - name: line_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedLineAttribute'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedLineAttribute'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineAttribute'\n          description: ''\n  /oscarapi/baskets/{basket_pk}/lines/{line_pk}/lineattributes/{id}{format}:\n    get:\n      operationId: oscarapi_baskets_lines_lineattributes_retrieve\n      description: ''\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Line attribute.\n        schema:\n          type: integer\n      - name: line_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineAttribute'\n          description: ''\n    put:\n      operationId: oscarapi_baskets_lines_lineattributes_update\n      description: ''\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Line attribute.\n        schema:\n          type: integer\n      - name: line_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LineAttribute'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/LineAttribute'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineAttribute'\n          description: ''\n    patch:\n      operationId: oscarapi_baskets_lines_lineattributes_partial_update\n      description: ''\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Line attribute.\n        schema:\n          type: integer\n      - name: line_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedLineAttribute'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedLineAttribute'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineAttribute'\n          description: ''\n  /oscarapi/baskets/{basket_pk}/lines/{id}/:\n    get:\n      operationId: oscarapi_baskets_lines_retrieve\n      description: |-\n        Only the field `quantity` can be changed in this view.\n        All other fields are readonly.\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasketLine'\n          description: ''\n    put:\n      operationId: oscarapi_baskets_lines_update\n      description: |-\n        Only the field `quantity` can be changed in this view.\n        All other fields are readonly.\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BasketLine'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BasketLine'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasketLine'\n          description: ''\n    patch:\n      operationId: oscarapi_baskets_lines_partial_update\n      description: |-\n        Only the field `quantity` can be changed in this view.\n        All other fields are readonly.\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedBasketLine'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedBasketLine'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasketLine'\n          description: ''\n    delete:\n      operationId: oscarapi_baskets_lines_destroy\n      description: |-\n        Only the field `quantity` can be changed in this view.\n        All other fields are readonly.\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/baskets/{basket_pk}/lines/{id}{format}:\n    get:\n      operationId: oscarapi_baskets_lines_retrieve\n      description: |-\n        Only the field `quantity` can be changed in this view.\n        All other fields are readonly.\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasketLine'\n          description: ''\n    put:\n      operationId: oscarapi_baskets_lines_update\n      description: |-\n        Only the field `quantity` can be changed in this view.\n        All other fields are readonly.\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BasketLine'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BasketLine'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasketLine'\n          description: ''\n    patch:\n      operationId: oscarapi_baskets_lines_partial_update\n      description: |-\n        Only the field `quantity` can be changed in this view.\n        All other fields are readonly.\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedBasketLine'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedBasketLine'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasketLine'\n          description: ''\n    delete:\n      operationId: oscarapi_baskets_lines_destroy\n      description: |-\n        Only the field `quantity` can be changed in this view.\n        All other fields are readonly.\n      parameters:\n      - name: basket_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/baskets/{id}/:\n    get:\n      operationId: oscarapi_baskets_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n    put:\n      operationId: oscarapi_baskets_update\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Basket'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Basket'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n    patch:\n      operationId: oscarapi_baskets_partial_update\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedBasket'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedBasket'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n    delete:\n      operationId: oscarapi_baskets_destroy\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/baskets/{id}/lines/:\n    get:\n      operationId: oscarapi_baskets_lines_list\n      description: |-\n        Api for adding lines to a basket.\n\n        Permission will be checked,\n        Regular users may only access their own basket,\n        staff users may access any basket.\n\n        GET:\n        A list of basket lines.\n\n        POST(basket, line_reference, product, stockrecord,\n             quantity, price_currency, price_excl_tax, price_incl_tax):\n        Add a line to the basket, example::\n\n            {\n                \"basket\": \"http://127.0.0.1:8000/oscarapi/baskets/100/\",\n                \"line_reference\": \"234_345\",\n                \"product\": \"http://127.0.0.1:8000/oscarapi/products/209/\",\n                \"stockrecord\":\n                    \"http://127.0.0.1:8000/ooscarapi/products/209/stockercords/1/\",\n                \"quantity\": 3,\n                \"price_currency\": \"EUR\",\n                \"price_excl_tax\": \"100.0\",\n                \"price_incl_tax\": \"121.0\"\n            }\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BasketLine'\n          description: ''\n    post:\n      operationId: oscarapi_baskets_lines_create\n      description: |-\n        Api for adding lines to a basket.\n\n        Permission will be checked,\n        Regular users may only access their own basket,\n        staff users may access any basket.\n\n        GET:\n        A list of basket lines.\n\n        POST(basket, line_reference, product, stockrecord,\n             quantity, price_currency, price_excl_tax, price_incl_tax):\n        Add a line to the basket, example::\n\n            {\n                \"basket\": \"http://127.0.0.1:8000/oscarapi/baskets/100/\",\n                \"line_reference\": \"234_345\",\n                \"product\": \"http://127.0.0.1:8000/oscarapi/products/209/\",\n                \"stockrecord\":\n                    \"http://127.0.0.1:8000/ooscarapi/products/209/stockercords/1/\",\n                \"quantity\": 3,\n                \"price_currency\": \"EUR\",\n                \"price_excl_tax\": \"100.0\",\n                \"price_incl_tax\": \"121.0\"\n            }\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BasketLine'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BasketLine'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasketLine'\n          description: ''\n  /oscarapi/baskets/{id}/lines{format}:\n    get:\n      operationId: oscarapi_baskets_lines{format}_list\n      description: |-\n        Api for adding lines to a basket.\n\n        Permission will be checked,\n        Regular users may only access their own basket,\n        staff users may access any basket.\n\n        GET:\n        A list of basket lines.\n\n        POST(basket, line_reference, product, stockrecord,\n             quantity, price_currency, price_excl_tax, price_incl_tax):\n        Add a line to the basket, example::\n\n            {\n                \"basket\": \"http://127.0.0.1:8000/oscarapi/baskets/100/\",\n                \"line_reference\": \"234_345\",\n                \"product\": \"http://127.0.0.1:8000/oscarapi/products/209/\",\n                \"stockrecord\":\n                    \"http://127.0.0.1:8000/ooscarapi/products/209/stockercords/1/\",\n                \"quantity\": 3,\n                \"price_currency\": \"EUR\",\n                \"price_excl_tax\": \"100.0\",\n                \"price_incl_tax\": \"121.0\"\n            }\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BasketLine'\n          description: ''\n    post:\n      operationId: oscarapi_baskets_lines{format}_create\n      description: |-\n        Api for adding lines to a basket.\n\n        Permission will be checked,\n        Regular users may only access their own basket,\n        staff users may access any basket.\n\n        GET:\n        A list of basket lines.\n\n        POST(basket, line_reference, product, stockrecord,\n             quantity, price_currency, price_excl_tax, price_incl_tax):\n        Add a line to the basket, example::\n\n            {\n                \"basket\": \"http://127.0.0.1:8000/oscarapi/baskets/100/\",\n                \"line_reference\": \"234_345\",\n                \"product\": \"http://127.0.0.1:8000/oscarapi/products/209/\",\n                \"stockrecord\":\n                    \"http://127.0.0.1:8000/ooscarapi/products/209/stockercords/1/\",\n                \"quantity\": 3,\n                \"price_currency\": \"EUR\",\n                \"price_excl_tax\": \"100.0\",\n                \"price_incl_tax\": \"121.0\"\n            }\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BasketLine'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BasketLine'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasketLine'\n          description: ''\n  /oscarapi/baskets/{id}{format}:\n    get:\n      operationId: oscarapi_baskets_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n    put:\n      operationId: oscarapi_baskets_update\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Basket'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Basket'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n    patch:\n      operationId: oscarapi_baskets_partial_update\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedBasket'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedBasket'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n    delete:\n      operationId: oscarapi_baskets_destroy\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Cart.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/baskets{format}:\n    get:\n      operationId: oscarapi_baskets{format}_list\n      description: Retrieve all baskets that belong to the current (authenticated)\n        user.\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Basket'\n          description: ''\n  /oscarapi/basket{format}:\n    get:\n      operationId: oscarapi_basket{format}_retrieve\n      description: |-\n        Api for retrieving a user's basket.\n\n        GET:\n        Retrieve your basket.\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Basket'\n          description: ''\n  /oscarapi/categories/:\n    get:\n      operationId: oscarapi_categories_list\n      description: ''\n      parameters:\n      - in: path\n        name: breadcrumbs\n        schema:\n          type: string\n        required: true\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Category'\n          description: ''\n  /oscarapi/categories/{breadcrumbs}/:\n    get:\n      operationId: oscarapi_categories_list\n      description: ''\n      parameters:\n      - in: path\n        name: breadcrumbs\n        schema:\n          type: string\n        required: true\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Category'\n          description: ''\n  /oscarapi/categories/{id}/:\n    get:\n      operationId: oscarapi_categories_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Category.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n          description: ''\n  /oscarapi/categories/{id}{format}:\n    get:\n      operationId: oscarapi_categories_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Category.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n          description: ''\n  /oscarapi/categories{format}:\n    get:\n      operationId: oscarapi_categories{format}_list\n      description: ''\n      parameters:\n      - in: path\n        name: breadcrumbs\n        schema:\n          type: string\n        required: true\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Category'\n          description: ''\n  /oscarapi/checkout/:\n    post:\n      operationId: oscarapi_checkout_create\n      description: |-\n        Checkout and use a stripe account as payment.\n\n        POST(basket, shipping_address,\n             [total, shipping_method_code, shipping_charge, billing_address]):\n        {\n            \"basket\": \"/api/baskets/1/\",\n            \"guest_email\": \"foo@example.com\",\n            \"total\": \"100.0\",\n            \"shipping_charge\": {\n                \"currency\": \"EUR\",\n                \"excl_tax\": \"10.0\",\n                \"tax\": \"0.6\"\n            },\n            \"shipping_method_code\": \"no-shipping-required\",\n            \"shipping_address\": {\n                \"country\": \"/api/countries/NL/\",\n                \"first_name\": \"Henk\",\n                \"last_name\": \"Van den Heuvel\",\n                \"line1\": \"Roemerlaan 44\",\n                \"line2\": \"\",\n                \"line3\": \"\",\n                \"line4\": \"Kroekingen\",\n                \"notes\": \"Niet STUK MAKEN OK!!!!\",\n                \"phone_number\": \"+31 26 370 4887\",\n                \"postcode\": \"7777KK\",\n                \"state\": \"Gerendrecht\",\n                \"title\": \"Mr\"\n            },\n            \"payment\": {\n                \"cash\": {\n                    \"amount\": \"100.00\"\n                }\n            }\n        }\n\n        Returns the order object.\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Checkout'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Checkout'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Checkout'\n          description: ''\n  /oscarapi/checkout/payment-methods/:\n    get:\n      operationId: oscarapi_checkout_payment_methods_retrieve\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /oscarapi/checkout/payment-states/:\n    get:\n      operationId: oscarapi_checkout_payment_states_retrieve\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /oscarapi/checkout/payment-states/{id}/:\n    get:\n      operationId: oscarapi_checkout_payment_states_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /oscarapi/countries/:\n    get:\n      operationId: oscarapi_countries_list\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Country'\n          description: ''\n  /oscarapi/countries/{iso_3166_1_a2}/:\n    get:\n      operationId: oscarapi_countries_retrieve\n      description: ''\n      parameters:\n      - name: iso_3166_1_a2\n        in: path\n        required: true\n        description: A unique value identifying this Country.\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Country'\n          description: ''\n  /oscarapi/countries{format}:\n    get:\n      operationId: oscarapi_countries{format}_list\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Country'\n          description: ''\n  /oscarapi/login/:\n    get:\n      operationId: oscarapi_login_retrieve\n      description: |-\n        Api for logging in users.\n\n        DELETE:\n        Log the user out by destroying the session.\n        Anonymous users will have their cart destroyed as well, because there is\n        no way to reach it anymore\n\n        POST(username, password):\n        1. The user will be authenticated. The next steps will only be\n           performed is login is successful. Logging in logged in users results in\n           405.\n        2. The anonymous cart will be merged with the private cart associated with\n           that authenticated user.\n        3. A new session will be started, this session identifies the authenticated\n           user for the duration of the session, without further need for\n           authentication.\n        4. The new, merged cart will be associated with this session.\n        5. The anonymous session will be terminated.\n        6. A response will be issued containing the new session id as a header\n           (only when the request contained the session header as well).\n\n        GET (enabled in DEBUG mode only):\n        Get the details of the logged in user.\n        If more details are needed, use the ``OSCARAPI_USER_FIELDS`` setting to change\n        the fields the ``UserSerializer`` will render.\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Login'\n          description: ''\n    post:\n      operationId: oscarapi_login_create\n      description: |-\n        Api for logging in users.\n\n        DELETE:\n        Log the user out by destroying the session.\n        Anonymous users will have their cart destroyed as well, because there is\n        no way to reach it anymore\n\n        POST(username, password):\n        1. The user will be authenticated. The next steps will only be\n           performed is login is successful. Logging in logged in users results in\n           405.\n        2. The anonymous cart will be merged with the private cart associated with\n           that authenticated user.\n        3. A new session will be started, this session identifies the authenticated\n           user for the duration of the session, without further need for\n           authentication.\n        4. The new, merged cart will be associated with this session.\n        5. The anonymous session will be terminated.\n        6. A response will be issued containing the new session id as a header\n           (only when the request contained the session header as well).\n\n        GET (enabled in DEBUG mode only):\n        Get the details of the logged in user.\n        If more details are needed, use the ``OSCARAPI_USER_FIELDS`` setting to change\n        the fields the ``UserSerializer`` will render.\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Login'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Login'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Login'\n          description: ''\n    delete:\n      operationId: oscarapi_login_destroy\n      description: |-\n        Destroy the session.\n\n        for anonymous users that means having their basket destroyed as well,\n        because there is no way to reach it otherwise.\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/login{format}:\n    get:\n      operationId: oscarapi_login{format}_retrieve\n      description: |-\n        Api for logging in users.\n\n        DELETE:\n        Log the user out by destroying the session.\n        Anonymous users will have their cart destroyed as well, because there is\n        no way to reach it anymore\n\n        POST(username, password):\n        1. The user will be authenticated. The next steps will only be\n           performed is login is successful. Logging in logged in users results in\n           405.\n        2. The anonymous cart will be merged with the private cart associated with\n           that authenticated user.\n        3. A new session will be started, this session identifies the authenticated\n           user for the duration of the session, without further need for\n           authentication.\n        4. The new, merged cart will be associated with this session.\n        5. The anonymous session will be terminated.\n        6. A response will be issued containing the new session id as a header\n           (only when the request contained the session header as well).\n\n        GET (enabled in DEBUG mode only):\n        Get the details of the logged in user.\n        If more details are needed, use the ``OSCARAPI_USER_FIELDS`` setting to change\n        the fields the ``UserSerializer`` will render.\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Login'\n          description: ''\n    post:\n      operationId: oscarapi_login{format}_create\n      description: |-\n        Api for logging in users.\n\n        DELETE:\n        Log the user out by destroying the session.\n        Anonymous users will have their cart destroyed as well, because there is\n        no way to reach it anymore\n\n        POST(username, password):\n        1. The user will be authenticated. The next steps will only be\n           performed is login is successful. Logging in logged in users results in\n           405.\n        2. The anonymous cart will be merged with the private cart associated with\n           that authenticated user.\n        3. A new session will be started, this session identifies the authenticated\n           user for the duration of the session, without further need for\n           authentication.\n        4. The new, merged cart will be associated with this session.\n        5. The anonymous session will be terminated.\n        6. A response will be issued containing the new session id as a header\n           (only when the request contained the session header as well).\n\n        GET (enabled in DEBUG mode only):\n        Get the details of the logged in user.\n        If more details are needed, use the ``OSCARAPI_USER_FIELDS`` setting to change\n        the fields the ``UserSerializer`` will render.\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Login'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Login'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Login'\n          description: ''\n    delete:\n      operationId: oscarapi_login{format}_destroy\n      description: |-\n        Destroy the session.\n\n        for anonymous users that means having their basket destroyed as well,\n        because there is no way to reach it otherwise.\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/options/:\n    get:\n      operationId: oscarapi_options_list\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Option'\n          description: ''\n  /oscarapi/options/{id}/:\n    get:\n      operationId: oscarapi_options_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Option.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Option'\n          description: ''\n  /oscarapi/options/{id}{format}:\n    get:\n      operationId: oscarapi_options_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Option.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Option'\n          description: ''\n  /oscarapi/options{format}:\n    get:\n      operationId: oscarapi_options{format}_list\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Option'\n          description: ''\n  /oscarapi/orderlineattributes/{id}/:\n    get:\n      operationId: oscarapi_orderlineattributes_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Line Attribute.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderLineAttribute'\n          description: ''\n  /oscarapi/orderlineattributes/{id}{format}:\n    get:\n      operationId: oscarapi_orderlineattributes_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Line Attribute.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderLineAttribute'\n          description: ''\n  /oscarapi/orderlines/{id}/:\n    get:\n      operationId: oscarapi_orderlines_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Order Line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderLine'\n          description: ''\n  /oscarapi/orderlines/{id}{format}:\n    get:\n      operationId: oscarapi_orderlines_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Order Line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderLine'\n          description: ''\n  /oscarapi/orders/:\n    get:\n      operationId: oscarapi_orders_list\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Order'\n          description: ''\n  /oscarapi/orders/{id}/:\n    get:\n      operationId: oscarapi_orders_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Order.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n          description: ''\n  /oscarapi/orders/{id}/lines/:\n    get:\n      operationId: oscarapi_orders_lines_list\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Order Line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrderLine'\n          description: ''\n  /oscarapi/orders/{id}/lines{format}:\n    get:\n      operationId: oscarapi_orders_lines{format}_list\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Order Line.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrderLine'\n          description: ''\n  /oscarapi/orders/{id}{format}:\n    get:\n      operationId: oscarapi_orders_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Order.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n          description: ''\n  /oscarapi/orders{format}:\n    get:\n      operationId: oscarapi_orders{format}_list\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Order'\n          description: ''\n  /oscarapi/products/:\n    get:\n      operationId: oscarapi_products_list\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductLink'\n          description: ''\n  /oscarapi/products/{id}/:\n    get:\n      operationId: oscarapi_products_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Product.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          description: ''\n  /oscarapi/products/{id}/availability/:\n    get:\n      operationId: oscarapi_products_availability_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Product.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Availability'\n          description: ''\n  /oscarapi/products/{id}/availability{format}:\n    get:\n      operationId: oscarapi_products_availability{format}_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Product.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Availability'\n          description: ''\n  /oscarapi/products/{id}/price/:\n    get:\n      operationId: oscarapi_products_price_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Product.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Price'\n          description: ''\n  /oscarapi/products/{id}/price{format}:\n    get:\n      operationId: oscarapi_products_price{format}_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Product.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Price'\n          description: ''\n  /oscarapi/products/{id}/stockrecords/:\n    get:\n      operationId: oscarapi_products_stockrecords_list\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this stock record.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductStockRecord'\n          description: ''\n  /oscarapi/products/{id}/stockrecords{format}:\n    get:\n      operationId: oscarapi_products_stockrecords{format}_list\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this stock record.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductStockRecord'\n          description: ''\n  /oscarapi/products/{id}{format}:\n    get:\n      operationId: oscarapi_products_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Product.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          description: ''\n  /oscarapi/products/{product_pk}/stockrecords/{id}/:\n    get:\n      operationId: oscarapi_products_stockrecords_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this stock record.\n        schema:\n          type: integer\n      - name: product_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductStockRecord'\n          description: ''\n  /oscarapi/products/{product_pk}/stockrecords/{id}{format}:\n    get:\n      operationId: oscarapi_products_stockrecords_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this stock record.\n        schema:\n          type: integer\n      - name: product_pk\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductStockRecord'\n          description: ''\n  /oscarapi/products{format}:\n    get:\n      operationId: oscarapi_products{format}_list\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductLink'\n          description: ''\n  /oscarapi/ranges/:\n    get:\n      operationId: oscarapi_ranges_list\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Range'\n          description: ''\n  /oscarapi/ranges/{id}/:\n    get:\n      operationId: oscarapi_ranges_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Range.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Range'\n          description: ''\n  /oscarapi/ranges/{id}{format}:\n    get:\n      operationId: oscarapi_ranges_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this Range.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Range'\n          description: ''\n  /oscarapi/ranges{format}:\n    get:\n      operationId: oscarapi_ranges{format}_list\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Range'\n          description: ''\n  /oscarapi/useraddresses/:\n    get:\n      operationId: oscarapi_useraddresses_list\n      description: ''\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserAddress'\n          description: ''\n    post:\n      operationId: oscarapi_useraddresses_create\n      description: ''\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserAddress'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserAddress'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAddress'\n          description: ''\n  /oscarapi/useraddresses/{id}/:\n    get:\n      operationId: oscarapi_useraddresses_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this User address.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAddress'\n          description: ''\n    put:\n      operationId: oscarapi_useraddresses_update\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this User address.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserAddress'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserAddress'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAddress'\n          description: ''\n    patch:\n      operationId: oscarapi_useraddresses_partial_update\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this User address.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserAddress'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUserAddress'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAddress'\n          description: ''\n    delete:\n      operationId: oscarapi_useraddresses_destroy\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this User address.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/useraddresses/{id}{format}:\n    get:\n      operationId: oscarapi_useraddresses_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this User address.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAddress'\n          description: ''\n    put:\n      operationId: oscarapi_useraddresses_update\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this User address.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserAddress'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserAddress'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAddress'\n          description: ''\n    patch:\n      operationId: oscarapi_useraddresses_partial_update\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this User address.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserAddress'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUserAddress'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAddress'\n          description: ''\n    delete:\n      operationId: oscarapi_useraddresses_destroy\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this User address.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/useraddresses{format}:\n    get:\n      operationId: oscarapi_useraddresses{format}_list\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserAddress'\n          description: ''\n    post:\n      operationId: oscarapi_useraddresses{format}_create\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserAddress'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserAddress'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAddress'\n          description: ''\n  /oscarapi/users/{id}/:\n    get:\n      operationId: oscarapi_users_retrieve\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    put:\n      operationId: oscarapi_users_update\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    patch:\n      operationId: oscarapi_users_partial_update\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUser'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUser'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    delete:\n      operationId: oscarapi_users_destroy\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/users/{id}{format}:\n    get:\n      operationId: oscarapi_users_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    put:\n      operationId: oscarapi_users_update\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    patch:\n      operationId: oscarapi_users_partial_update\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUser'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUser'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    delete:\n      operationId: oscarapi_users_destroy\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this user.\n        schema:\n          type: integer\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /oscarapi/{format}:\n    get:\n      operationId: oscarapi_retrieve\n      description: ''\n      parameters:\n      - name: format\n        in: path\n        required: false\n        description: ''\n        schema:\n          type: string\n      tags:\n      - oscarapi\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /rest-auth/login/:\n    post:\n      operationId: rest_auth_login_create\n      description: |-\n        Check the credentials and return the REST Token\n        if the credentials are valid and authenticated.\n        Calls Django Auth login method to register User ID\n        in Django session framework\n\n        Accept the following POST parameters: username, password\n        Return the REST Framework Token Object's key.\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Login'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Login'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Login'\n          description: ''\n  /rest-auth/logout/:\n    get:\n      operationId: rest_auth_logout_retrieve\n      description: |-\n        Calls Django logout method and delete the Token object\n        assigned to the current User object.\n\n        Accepts/Returns nothing.\n      tags:\n      - rest-auth\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n    post:\n      operationId: rest_auth_logout_create\n      description: |-\n        Calls Django logout method and delete the Token object\n        assigned to the current User object.\n\n        Accepts/Returns nothing.\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n          multipart/form-data:\n            schema:\n              type: object\n              description: Unspecified request body\n              additionalProperties: {}\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n                description: Unspecified response body\n          description: ''\n  /rest-auth/password/change/:\n    post:\n      operationId: rest_auth_password_change_create\n      description: |-\n        Calls Django Auth SetPasswordForm save method.\n\n        Accepts the following POST parameters: new_password1, new_password2\n        Returns the success/fail message.\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordChange'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PasswordChange'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordChange'\n          description: ''\n  /rest-auth/password/reset/:\n    post:\n      operationId: rest_auth_password_reset_create\n      description: |-\n        Calls Django Auth PasswordResetForm save method.\n\n        Accepts the following POST parameters: email\n        Returns the success/fail message.\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordReset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PasswordReset'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordReset'\n          description: ''\n  /rest-auth/password/reset/confirm/:\n    post:\n      operationId: rest_auth_password_reset_confirm_create\n      description: |-\n        Password reset e-mail link is confirmed, therefore\n        this resets the user's password.\n\n        Accepts the following POST parameters: token, uid,\n            new_password1, new_password2\n        Returns the success/fail message.\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordResetConfirm'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PasswordResetConfirm'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordResetConfirm'\n          description: ''\n  /rest-auth/refresh-token/:\n    post:\n      operationId: rest_auth_refresh_token_create\n      description: |-\n        API View that returns a refreshed token (with new expiration) based on\n        existing token\n\n        If 'orig_iat' field (original issued-at-time) is found it will first check\n        if it's within expiration window, then copy it to the new token.\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RefreshAuthToken'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/RefreshAuthToken'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefreshAuthToken'\n          description: ''\n  /rest-auth/registration/:\n    post:\n      operationId: rest_auth_registration_create\n      description: ''\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Signup'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Signup'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignupResponse'\n          description: ''\n  /rest-auth/registration/account-confirm-email/{key}/:\n    post:\n      operationId: rest_auth_registration_account_confirm_email_create\n      description: ''\n      parameters:\n      - name: key\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyEmail'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/VerifyEmail'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyEmail'\n          description: ''\n  /rest-auth/registration/verify-email/:\n    post:\n      operationId: rest_auth_registration_verify_email_create\n      description: ''\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyEmail'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/VerifyEmail'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyEmail'\n          description: ''\n  /rest-auth/user/:\n    get:\n      operationId: rest_auth_user_retrieve\n      description: |-\n        Reads and updates UserModel fields\n        Accepts GET, PUT, PATCH methods.\n\n        Default accepted fields: username, first_name, last_name\n        Default display fields: pk, username, email, first_name, last_name\n        Read-only fields: pk, email\n\n        Returns UserModel fields.\n      tags:\n      - rest-auth\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    put:\n      operationId: rest_auth_user_update\n      description: |-\n        Reads and updates UserModel fields\n        Accepts GET, PUT, PATCH methods.\n\n        Default accepted fields: username, first_name, last_name\n        Default display fields: pk, username, email, first_name, last_name\n        Read-only fields: pk, email\n\n        Returns UserModel fields.\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    patch:\n      operationId: rest_auth_user_partial_update\n      description: |-\n        Reads and updates UserModel fields\n        Accepts GET, PUT, PATCH methods.\n\n        Default accepted fields: username, first_name, last_name\n        Default display fields: pk, username, email, first_name, last_name\n        Read-only fields: pk, email\n\n        Returns UserModel fields.\n      tags:\n      - rest-auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUser'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUser'\n      security:\n      - jwtAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\ncomponents:\n  schemas:\n    AddProduct:\n      type: object\n      description: Serializes and validates an add to basket request.\n      properties:\n        quantity:\n          type: integer\n        url:\n          type: string\n          format: uri\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/OptionValue'\n      required:\n      - quantity\n      - url\n    Attribute:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        datatype:\n          $ref: '#/components/schemas/DatatypeEnum'\n        required:\n          type: boolean\n        displayOrder:\n          type: integer\n        name:\n          type: string\n          description: User-friendly attribute name\n          maxLength: 100\n        slug:\n          type: string\n          description: Short unique attribute label\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        description:\n          type: string\n          nullable: true\n          description: Short description\n          maxLength: 256\n        enumGroup:\n          $ref: '#/components/schemas/EnumGroup'\n      required:\n      - datatype\n      - enumGroup\n      - id\n      - name\n      - slug\n    Availability:\n      type: object\n      properties:\n        isAvailableToBuy:\n          type: boolean\n        numAvailable:\n          type: integer\n        message:\n          type: string\n      required:\n      - isAvailableToBuy\n      - message\n    Basket:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        owner:\n          type: string\n          format: uri\n          nullable: true\n        status:\n          enum:\n          - Open\n          - Merged\n          - Saved\n          - Frozen\n          - Submitted\n          type: string\n        lines:\n          type: string\n          format: uri\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        totalExclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalExclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalInclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalInclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        currency:\n          type: string\n        voucherDiscounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/VoucherDiscount'\n        offerDiscounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferDiscount'\n        isTaxKnown:\n          type: boolean\n          readOnly: true\n      required:\n      - id\n      - isTaxKnown\n      - lines\n      - url\n    BasketLine:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        product:\n          type: string\n          format: uri\n        quantity:\n          type: integer\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineAttribute'\n          readOnly: true\n        priceCurrency:\n          type: string\n          maxLength: 12\n        priceExclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          readOnly: true\n        priceInclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          readOnly: true\n        priceInclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          readOnly: true\n        priceExclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          readOnly: true\n        isTaxKnown:\n          type: boolean\n          readOnly: true\n        warning:\n          type: string\n          readOnly: true\n        basket:\n          type: string\n          format: uri\n        stockrecord:\n          type: string\n          format: uri\n        dateCreated:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - attributes\n      - basket\n      - dateCreated\n      - isTaxKnown\n      - priceExclTax\n      - priceExclTaxExclDiscounts\n      - priceInclTax\n      - priceInclTaxExclDiscounts\n      - product\n      - stockrecord\n      - url\n      - warning\n    BillingAddress:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        title:\n          $ref: '#/components/schemas/TitleEnum'\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n        line1:\n          type: string\n          maxLength: 255\n        line2:\n          type: string\n          maxLength: 255\n        line3:\n          type: string\n          maxLength: 255\n        line4:\n          type: string\n          maxLength: 255\n        state:\n          type: string\n          maxLength: 255\n        postcode:\n          type: string\n          maxLength: 64\n        searchText:\n          type: string\n          readOnly: true\n        country:\n          type: string\n          format: uri\n      required:\n      - country\n      - line1\n      - searchText\n      - url\n    Category:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        breadcrumbs:\n          type: string\n          readOnly: true\n        children:\n          type: string\n          format: uri\n          readOnly: true\n        name:\n          type: string\n          maxLength: 255\n        description:\n          type: string\n        image:\n          type: string\n          format: uri\n          nullable: true\n        slug:\n          type: string\n          maxLength: 255\n          pattern: ^[-a-zA-Z0-9_]+$\n      required:\n      - breadcrumbs\n      - children\n      - name\n      - slug\n      - url\n    Checkout:\n      type: object\n      properties:\n        basket:\n          type: string\n          format: uri\n        guestEmail:\n          type: string\n          format: email\n        total:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        shippingMethodCode:\n          type: string\n          maxLength: 128\n        shippingCharge:\n          allOf:\n          - $ref: '#/components/schemas/Price'\n          nullable: true\n        shippingAddress:\n          allOf:\n          - $ref: '#/components/schemas/ShippingAddress'\n          nullable: true\n        billingAddress:\n          allOf:\n          - $ref: '#/components/schemas/BillingAddress'\n          nullable: true\n        user:\n          type: string\n          format: uri\n        payment:\n          $ref: '#/components/schemas/StripeCheckoutPaymentMethods'\n      required:\n      - basket\n      - payment\n    ChildProductserializer:\n      type: object\n      description: Serializer for child products\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        upc:\n          type: string\n          nullable: true\n          description: Universal Product Code (UPC) is an identifier for a product\n            which is not specific to a particular  supplier. Eg an ISBN for a book.\n          maxLength: 64\n        id:\n          type: integer\n          readOnly: true\n        title:\n          type: string\n          maxLength: 255\n        structure:\n          $ref: '#/components/schemas/StructureEnum'\n        dateCreated:\n          type: string\n          format: date-time\n          readOnly: true\n        dateUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        recommendedProducts:\n          type: array\n          items:\n            type: string\n            format: uri\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductAttributeValue'\n        categories:\n          type: array\n          items:\n            type: string\n        productClass:\n          type: string\n          nullable: true\n        price:\n          type: string\n          format: uri\n          readOnly: true\n        availability:\n          type: string\n          format: uri\n          readOnly: true\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/Option'\n      required:\n      - availability\n      - dateCreated\n      - dateUpdated\n      - id\n      - price\n      - productClass\n      - url\n    ClosingRules:\n      type: object\n      properties:\n        start:\n          type: string\n          format: date-time\n        end:\n          type: string\n          format: date-time\n        reason:\n          type: string\n          nullable: true\n      required:\n      - end\n      - start\n    CollectionMethodEnum:\n      enum:\n      - charge_automatically\n      - send_invoice\n      type: string\n    Country:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        iso31661A3:\n          type: string\n          maxLength: 3\n        iso31661Numeric:\n          type: string\n          maxLength: 3\n        printableName:\n          type: string\n          maxLength: 128\n        name:\n          type: string\n          maxLength: 128\n        displayOrder:\n          type: integer\n          description: Higher the number, higher the country in the list.\n        isShippingCountry:\n          type: boolean\n      required:\n      - name\n      - printableName\n      - url\n    DatatypeEnum:\n      enum:\n      - text\n      - date\n      - float\n      - int\n      - bool\n      - object\n      - enum\n      type: string\n    EntityAttributeValue:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        value:\n          type: string\n          readOnly: true\n        attribute:\n          $ref: '#/components/schemas/Attribute'\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n          readOnly: true\n        entityCtId:\n          type: integer\n          readOnly: true\n        entityId:\n          type: integer\n        contentTypeName:\n          type: string\n          readOnly: true\n      required:\n      - attribute\n      - contentTypeName\n      - entityCtId\n      - entityId\n      - id\n      - modified\n      - value\n    EnumGroup:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnumValue'\n          readOnly: true\n        name:\n          type: string\n          maxLength: 100\n      required:\n      - id\n      - name\n      - values\n    EnumValue:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        value:\n          type: string\n          maxLength: 50\n      required:\n      - id\n      - value\n    InlineBillingAddress:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        country:\n          type: string\n          format: uri\n        title:\n          $ref: '#/components/schemas/TitleEnum'\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n        line1:\n          type: string\n          maxLength: 255\n        line2:\n          type: string\n          maxLength: 255\n        line3:\n          type: string\n          maxLength: 255\n        line4:\n          type: string\n          maxLength: 255\n        state:\n          type: string\n          maxLength: 255\n        postcode:\n          type: string\n          maxLength: 64\n        searchText:\n          type: string\n          readOnly: true\n      required:\n      - country\n      - id\n      - line1\n      - searchText\n    InlineShippingAddress:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        country:\n          type: string\n          format: uri\n        title:\n          $ref: '#/components/schemas/TitleEnum'\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n        line1:\n          type: string\n          maxLength: 255\n        line2:\n          type: string\n          maxLength: 255\n        line3:\n          type: string\n          maxLength: 255\n        line4:\n          type: string\n          maxLength: 255\n        state:\n          type: string\n          maxLength: 255\n        postcode:\n          type: string\n          maxLength: 64\n        searchText:\n          type: string\n          readOnly: true\n        phoneNumber:\n          type: string\n          description: In case we need to call you about your order\n          maxLength: 128\n        notes:\n          type: string\n          description: Tell us anything we should know when delivering your order.\n      required:\n      - country\n      - id\n      - line1\n      - searchText\n    InlineStripePaymentMethod:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          default: false\n        payBalance:\n          type: boolean\n          default: true\n        amount:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        reference:\n          type: string\n          default: ''\n          maxLength: 128\n        stripePaymentMethodId:\n          type: string\n        stripeConnectedAccountId:\n          type: string\n        stripePaymentIntentId:\n          type: string\n      required:\n      - stripeConnectedAccountId\n      - stripePaymentMethodId\n    LineAttribute:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        line:\n          type: string\n          format: uri\n          readOnly: true\n        value:\n          type: string\n          maxLength: 255\n        option:\n          type: string\n          format: uri\n      required:\n      - line\n      - option\n      - url\n      - value\n    Login:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n          maxLength: 100\n      required:\n      - password\n      - username\n    OfferDiscount:\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        amount:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n      required:\n      - amount\n      - description\n      - name\n    OpeningHours:\n      type: object\n      properties:\n        weekday:\n          $ref: '#/components/schemas/WeekdayEnum'\n        fromHour:\n          type: string\n          format: time\n        toHour:\n          type: string\n          format: time\n      required:\n      - fromHour\n      - toHour\n      - weekday\n    Option:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        code:\n          type: string\n          pattern: ^[-a-zA-Z0-9_]+$\n        name:\n          type: string\n          maxLength: 128\n        type:\n          $ref: '#/components/schemas/TypeEnum'\n      required:\n      - code\n      - name\n      - url\n    OptionValue:\n      type: object\n      properties:\n        option:\n          type: string\n          format: uri\n        value:\n          type: string\n      required:\n      - option\n      - value\n    Order:\n      type: object\n      properties:\n        number:\n          type: string\n          maxLength: 128\n        basket:\n          type: string\n          format: uri\n          nullable: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        lines:\n          type: string\n          format: uri\n          readOnly: true\n        owner:\n          type: string\n          format: uri\n          readOnly: true\n        billingAddress:\n          $ref: '#/components/schemas/InlineBillingAddress'\n        currency:\n          type: string\n          maxLength: 12\n        totalInclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalExclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        shippingInclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        shippingExclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        shippingAddress:\n          $ref: '#/components/schemas/InlineShippingAddress'\n        shippingMethod:\n          type: string\n          maxLength: 128\n        shippingCode:\n          type: string\n          maxLength: 128\n        status:\n          type: string\n          maxLength: 100\n        guestEmail:\n          type: string\n          format: email\n          maxLength: 254\n        datePlaced:\n          type: string\n          format: date-time\n        paymentUrl:\n          type: string\n          format: uri\n          readOnly: true\n        offerDiscounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderOfferDiscount'\n          readOnly: true\n        voucherDiscounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderVoucherOffer'\n          readOnly: true\n      required:\n      - datePlaced\n      - lines\n      - number\n      - offerDiscounts\n      - owner\n      - paymentUrl\n      - totalExclTax\n      - totalInclTax\n      - url\n      - voucherDiscounts\n    OrderLine:\n      type: object\n      description: This serializer renames some fields so they match up with the basket\n      properties:\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderLineAttribute'\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        product:\n          type: string\n          format: uri\n          nullable: true\n        stockrecord:\n          type: string\n          format: uri\n        quantity:\n          type: integer\n        priceCurrency:\n          type: string\n          maxLength: 12\n        priceExclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        priceInclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        priceInclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        priceExclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        order:\n          type: string\n          format: uri\n      required:\n      - order\n      - priceCurrency\n      - priceExclTax\n      - priceExclTaxExclDiscounts\n      - priceInclTax\n      - priceInclTaxExclDiscounts\n      - stockrecord\n      - url\n    OrderLineAttribute:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        type:\n          type: string\n          maxLength: 128\n        value:\n          type: string\n          maxLength: 255\n        line:\n          type: string\n          format: uri\n        option:\n          type: string\n          format: uri\n          nullable: true\n      required:\n      - line\n      - type\n      - url\n      - value\n    OrderOfferDiscount:\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        amount:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n      required:\n      - amount\n      - description\n      - name\n    OrderVoucherOffer:\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        amount:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        voucher:\n          $ref: '#/components/schemas/Voucher'\n      required:\n      - amount\n      - description\n      - name\n    PartnerAddress:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        title:\n          $ref: '#/components/schemas/TitleEnum'\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n        line1:\n          type: string\n          maxLength: 255\n        line2:\n          type: string\n          maxLength: 255\n        line3:\n          type: string\n          maxLength: 255\n        line4:\n          type: string\n          maxLength: 255\n        state:\n          type: string\n          maxLength: 255\n        postcode:\n          type: string\n          maxLength: 64\n        searchText:\n          type: string\n          readOnly: true\n        country:\n          type: string\n      required:\n      - country\n      - id\n      - line1\n      - searchText\n    PasswordChange:\n      type: object\n      properties:\n        newPassword1:\n          type: string\n          maxLength: 128\n        newPassword2:\n          type: string\n          maxLength: 128\n      required:\n      - newPassword1\n      - newPassword2\n    PasswordReset:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n      required:\n      - email\n    PasswordResetConfirm:\n      type: object\n      description: Serializer for requesting a password reset e-mail.\n      properties:\n        newPassword1:\n          type: string\n          maxLength: 128\n        newPassword2:\n          type: string\n          maxLength: 128\n        uid:\n          type: string\n        token:\n          type: string\n      required:\n      - newPassword1\n      - newPassword2\n      - token\n      - uid\n    PatchedBasket:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        owner:\n          type: string\n          format: uri\n          nullable: true\n        status:\n          enum:\n          - Open\n          - Merged\n          - Saved\n          - Frozen\n          - Submitted\n          type: string\n        lines:\n          type: string\n          format: uri\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        totalExclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalExclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalInclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalInclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        totalTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        currency:\n          type: string\n        voucherDiscounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/PatchedVoucherDiscount'\n        offerDiscounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/PatchedOfferDiscount'\n        isTaxKnown:\n          type: boolean\n          readOnly: true\n    PatchedBasketLine:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        product:\n          type: string\n          format: uri\n        quantity:\n          type: integer\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineAttribute'\n          readOnly: true\n        priceCurrency:\n          type: string\n          maxLength: 12\n        priceExclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          readOnly: true\n        priceInclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          readOnly: true\n        priceInclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          readOnly: true\n        priceExclTaxExclDiscounts:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          readOnly: true\n        isTaxKnown:\n          type: boolean\n          readOnly: true\n        warning:\n          type: string\n          readOnly: true\n        basket:\n          type: string\n          format: uri\n        stockrecord:\n          type: string\n          format: uri\n        dateCreated:\n          type: string\n          format: date-time\n          readOnly: true\n    PatchedLineAttribute:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        line:\n          type: string\n          format: uri\n          readOnly: true\n        value:\n          type: string\n          maxLength: 255\n        option:\n          type: string\n          format: uri\n    PatchedOfferDiscount:\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        amount:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n    PatchedUser:\n      type: object\n      properties:\n        email:\n          type: string\n        id:\n          type: integer\n          readOnly: true\n        dateJoined:\n          type: string\n          format: date-time\n    PatchedUserAddress:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        title:\n          $ref: '#/components/schemas/TitleEnum'\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n        line1:\n          type: string\n          maxLength: 255\n        line2:\n          type: string\n          maxLength: 255\n        line3:\n          type: string\n          maxLength: 255\n        line4:\n          type: string\n          maxLength: 255\n        state:\n          type: string\n          maxLength: 255\n        postcode:\n          type: string\n          maxLength: 64\n        searchText:\n          type: string\n          readOnly: true\n        phoneNumber:\n          type: string\n          description: In case we need to call you about your order\n          maxLength: 128\n        notes:\n          type: string\n          description: Tell us anything we should know when delivering your order.\n        isDefaultForShipping:\n          type: boolean\n        isDefaultForBilling:\n          type: boolean\n        country:\n          type: string\n          format: uri\n        url:\n          type: string\n          format: uri\n          readOnly: true\n    PatchedVoucher:\n      type: object\n      properties:\n        name:\n          type: string\n          description: This will be shown in the checkout and basket once the coupon\n            is entered\n          maxLength: 128\n        code:\n          type: string\n          description: Case insensitive / No spaces allowed\n          maxLength: 128\n        startDatetime:\n          type: string\n          format: date-time\n        endDatetime:\n          type: string\n          format: date-time\n    PatchedVoucherDiscount:\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        amount:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        voucher:\n          $ref: '#/components/schemas/PatchedVoucher'\n    Price:\n      type: object\n      properties:\n        currency:\n          type: string\n          default: EUR\n          maxLength: 12\n        exclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        inclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        tax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n      required:\n      - exclTax\n    Product:\n      type: object\n      description: Serializer for public api with strategy fields added for price\n        and availability\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        upc:\n          type: string\n          nullable: true\n          description: Universal Product Code (UPC) is an identifier for a product\n            which is not specific to a particular  supplier. Eg an ISBN for a book.\n          maxLength: 64\n        id:\n          type: integer\n          readOnly: true\n        title:\n          type: string\n          maxLength: 255\n        description:\n          type: string\n        structure:\n          $ref: '#/components/schemas/StructureEnum'\n        dateCreated:\n          type: string\n          format: date-time\n          readOnly: true\n        dateUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        recommendedProducts:\n          type: array\n          items:\n            type: string\n            format: uri\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductAttributeValue'\n        categories:\n          type: array\n          items:\n            type: string\n        productClass:\n          type: string\n          nullable: true\n        images:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductImage'\n        price:\n          type: string\n          format: uri\n          readOnly: true\n        availability:\n          type: string\n          format: uri\n          readOnly: true\n        stockrecords:\n          type: string\n          format: uri\n          readOnly: true\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/Option'\n        children:\n          type: array\n          items:\n            $ref: '#/components/schemas/ChildProductserializer'\n      required:\n      - availability\n      - dateCreated\n      - dateUpdated\n      - id\n      - price\n      - productClass\n      - stockrecords\n      - url\n    ProductAttributeValue:\n      type: object\n      properties:\n        name:\n          type: string\n          readOnly: true\n        value:\n          oneOf:\n          - type: string\n        code:\n          type: string\n          readOnly: true\n        product:\n          type: integer\n          writeOnly: true\n      required:\n      - code\n      - name\n      - value\n    ProductImage:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        product:\n          type: integer\n          writeOnly: true\n        original:\n          type: string\n          format: uri\n        caption:\n          type: string\n          maxLength: 200\n        displayOrder:\n          type: integer\n          description: An image with a display order of zero will be the primary image\n            for a product\n        dateCreated:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - dateCreated\n      - id\n      - original\n    ProductLink:\n      type: object\n      description: |-\n        Summary serializer for list view, listing all products.\n\n        This serializer can be easily made to show any field on ``ProductSerializer``,\n        just add fields to the ``OSCARAPI_PRODUCT_FIELDS`` setting.\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        id:\n          type: integer\n          readOnly: true\n        upc:\n          type: string\n          nullable: true\n          description: Universal Product Code (UPC) is an identifier for a product\n            which is not specific to a particular  supplier. Eg an ISBN for a book.\n          maxLength: 64\n        title:\n          type: string\n          maxLength: 255\n      required:\n      - id\n      - url\n    ProductStockRecord:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        order:\n          type: integer\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        modified:\n          type: string\n          format: date-time\n          nullable: true\n        partnerSku:\n          type: string\n          maxLength: 128\n        priceCurrency:\n          type: string\n          maxLength: 12\n        priceExclTax:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          nullable: true\n        priceRetail:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          nullable: true\n        costPrice:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n          nullable: true\n        numInStock:\n          type: integer\n          nullable: true\n        numAllocated:\n          type: integer\n          nullable: true\n        lowStockThreshold:\n          type: integer\n          nullable: true\n        dateCreated:\n          type: string\n          format: date-time\n          readOnly: true\n        dateUpdated:\n          type: string\n          format: date-time\n          readOnly: true\n        product:\n          type: integer\n        partner:\n          type: integer\n      required:\n      - created\n      - dateCreated\n      - dateUpdated\n      - id\n      - order\n      - partner\n      - partnerSku\n      - product\n      - url\n    Range:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        name:\n          type: string\n          maxLength: 128\n        slug:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        description:\n          type: string\n        isPublic:\n          type: boolean\n          description: Public ranges have a customer-facing page\n        includesAllProducts:\n          type: boolean\n        proxyClass:\n          type: string\n          nullable: true\n          maxLength: 255\n        dateCreated:\n          type: string\n          format: date-time\n          readOnly: true\n        includedProducts:\n          type: array\n          items:\n            type: string\n            format: uri\n          readOnly: true\n        excludedProducts:\n          type: array\n          items:\n            type: string\n            format: uri\n        classes:\n          type: array\n          items:\n            type: string\n            format: uri\n        includedCategories:\n          type: array\n          items:\n            type: string\n            format: uri\n      required:\n      - dateCreated\n      - includedProducts\n      - name\n      - slug\n      - url\n    RefreshAuthToken:\n      type: object\n      description: Serializer used for refreshing JWTs.\n      properties:\n        token:\n          type: string\n      required:\n      - token\n    ShippingAddress:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        title:\n          $ref: '#/components/schemas/TitleEnum'\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n        line1:\n          type: string\n          maxLength: 255\n        line2:\n          type: string\n          maxLength: 255\n        line3:\n          type: string\n          maxLength: 255\n        line4:\n          type: string\n          maxLength: 255\n        state:\n          type: string\n          maxLength: 255\n        postcode:\n          type: string\n          maxLength: 64\n        searchText:\n          type: string\n          readOnly: true\n        phoneNumber:\n          type: string\n          description: In case we need to call you about your order\n          maxLength: 128\n        notes:\n          type: string\n          description: Tell us anything we should know when delivering your order.\n        country:\n          type: string\n          format: uri\n      required:\n      - country\n      - line1\n      - searchText\n      - url\n    Signup:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n        password:\n          type: string\n          writeOnly: true\n          maxLength: 100\n        firstName:\n          type: string\n          nullable: true\n        lastName:\n          type: string\n          nullable: true\n      required:\n      - email\n      - password\n    SignupResponse:\n      type: object\n      properties:\n        detail:\n          type: string\n          readOnly: true\n      required:\n      - detail\n    StripeCheckoutPaymentMethods:\n      type: object\n      properties:\n        stripe:\n          $ref: '#/components/schemas/InlineStripePaymentMethod'\n      required:\n      - stripe\n    StructureEnum:\n      enum:\n      - standalone\n      - parent\n      - child\n      type: string\n    TitleEnum:\n      enum:\n      - Mr\n      - Miss\n      - Mrs\n      - Ms\n      - Dr\n      type: string\n    TypeEnum:\n      enum:\n      - Required\n      - Optional\n      type: string\n    User:\n      type: object\n      properties:\n        email:\n          type: string\n        id:\n          type: integer\n          readOnly: true\n        dateJoined:\n          type: string\n          format: date-time\n      required:\n      - email\n      - id\n    UserAddress:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        title:\n          $ref: '#/components/schemas/TitleEnum'\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n        line1:\n          type: string\n          maxLength: 255\n        line2:\n          type: string\n          maxLength: 255\n        line3:\n          type: string\n          maxLength: 255\n        line4:\n          type: string\n          maxLength: 255\n        state:\n          type: string\n          maxLength: 255\n        postcode:\n          type: string\n          maxLength: 64\n        searchText:\n          type: string\n          readOnly: true\n        phoneNumber:\n          type: string\n          description: In case we need to call you about your order\n          maxLength: 128\n        notes:\n          type: string\n          description: Tell us anything we should know when delivering your order.\n        isDefaultForShipping:\n          type: boolean\n        isDefaultForBilling:\n          type: boolean\n        country:\n          type: string\n          format: uri\n        url:\n          type: string\n          format: uri\n          readOnly: true\n      required:\n      - country\n      - id\n      - line1\n      - searchText\n      - url\n    VerifyEmail:\n      type: object\n      properties:\n        key:\n          type: string\n      required:\n      - key\n    Voucher:\n      type: object\n      properties:\n        name:\n          type: string\n          description: This will be shown in the checkout and basket once the coupon\n            is entered\n          maxLength: 128\n        code:\n          type: string\n          description: Case insensitive / No spaces allowed\n          maxLength: 128\n        startDatetime:\n          type: string\n          format: date-time\n        endDatetime:\n          type: string\n          format: date-time\n      required:\n      - code\n      - endDatetime\n      - name\n      - startDatetime\n    VoucherDiscount:\n      type: object\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        amount:\n          type: string\n          format: decimal\n          multipleOf: 0.01\n          maximum: 10000000000\n          minimum: -10000000000\n        voucher:\n          $ref: '#/components/schemas/Voucher'\n      required:\n      - amount\n      - description\n      - name\n    WeekdayEnum:\n      enum:\n      - 1\n      - 2\n      - 3\n      - 4\n      - 5\n      - 6\n      - 7\n      type: integer\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    broken-social-oauth2:\n      type: oauth2\n      flows: {}\n    jwtAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    oauth2:\n      type: oauth2\n      flows: {}\ntags:\n- name: oscarapi\n  description: oscarapi\n- name: auth\n  description: auth\n- name: rest-auth\n  description: rest-auth\n"
		}
	},
	"Error": "parse: parse spec: paths: /oscarapi/basket{format}: get: operation \"oscarapi_basket{format}_retrieve\": parameters: parse parameter \"format\": path parameters must be required"
}